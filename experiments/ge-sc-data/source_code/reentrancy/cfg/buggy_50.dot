digraph  {
13 [label="3_ address payable lastPlayer_re_ent2;\n13-new_variable-4-4", method="", type_label=new_variable];
17 [label="4_ uint jackpot_re_ent2;\n17-new_variable-5-5", method="", type_label=new_variable];
21 [label="5_ function buyTicket_re_ent2() public{\n	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))\n        revert();\n      lastPlayer_re_ent2 = msg.sender;\n      jackpot_re_ent2    = address(this).balance;\n    }\n21-function_definition-6-11", method="buyTicket_re_ent2()", type_label=function_definition];
25 [label="6_ if\n25-if-7-8", method="buyTicket_re_ent2()", type_label=if];
1665 [label="6_ end_if", method="buyTicket_re_ent2()", type_label=end_if];
36 [label="8_ lastPlayer_re_ent2 = msg.sender;\n36-expression_statement-9-9", method="buyTicket_re_ent2()", type_label=expression_statement];
42 [label="9_ jackpot_re_ent2    = address(this).balance;\n42-expression_statement-10-10", method="buyTicket_re_ent2()", type_label=expression_statement];
50 [label="11_ address payable private manager;\n50-new_variable-12-12", method="", type_label=new_variable];
55 [label="12_ mapping(address => uint) balances_re_ent17;\n55-new_variable-13-13", method="", type_label=new_variable];
61 [label="13_ function withdrawFunds_re_ent17 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent17[msg.sender] >= _weiToWithdraw);\n        (bool success,)=msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent17[msg.sender] -= _weiToWithdraw;\n    }\n61-function_definition-14-19", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=function_definition];
69 [label="14_ require(balances_re_ent17[msg.sender] >= _weiToWithdraw);\n69-expression_statement-15-15", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
80 [label="15_ (bool success,)=msg.sender.call.value(_weiToWithdraw)(\"\");\n80-new_variable-16-16", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=new_variable];
100 [label="16_ require(success);\n100-expression_statement-17-17", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
105 [label="17_ balances_re_ent17[msg.sender] -= _weiToWithdraw;\n105-expression_statement-18-18", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
113 [label="19_ bool private contractactive;\n113-new_variable-20-20", method="", type_label=new_variable];
118 [label="20_ address payable lastPlayer_re_ent37;\n118-new_variable-21-21", method="", type_label=new_variable];
122 [label="21_ uint jackpot_re_ent37;\n122-new_variable-22-22", method="", type_label=new_variable];
126 [label="22_ function buyTicket_re_ent37() public{\n	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))\n        revert();\n      lastPlayer_re_ent37 = msg.sender;\n      jackpot_re_ent37    = address(this).balance;\n    }\n126-function_definition-23-28", method="buyTicket_re_ent37()", type_label=function_definition];
130 [label="23_ if\n130-if-24-25", method="buyTicket_re_ent37()", type_label=if];
1770 [label="23_ end_if", method="buyTicket_re_ent37()", type_label=end_if];
141 [label="25_ lastPlayer_re_ent37 = msg.sender;\n141-expression_statement-26-26", method="buyTicket_re_ent37()", type_label=expression_statement];
147 [label="26_ jackpot_re_ent37    = address(this).balance;\n147-expression_statement-27-27", method="buyTicket_re_ent37()", type_label=expression_statement];
155 [label="28_ uint private hashfee;\n155-new_variable-29-29", method="", type_label=new_variable];
160 [label="29_ mapping(address => uint) balances_re_ent3;\n160-new_variable-30-30", method="", type_label=new_variable];
166 [label="30_ function withdrawFunds_re_ent3 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n	(bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent3[msg.sender] -= _weiToWithdraw;\n    }\n166-function_definition-31-36", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=function_definition];
174 [label="31_ require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n174-expression_statement-32-32", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
185 [label="32_ (bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n185-new_variable-33-33", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=new_variable];
205 [label="33_ require(success);\n205-expression_statement-34-34", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
210 [label="34_ balances_re_ent3[msg.sender] -= _weiToWithdraw;\n210-expression_statement-35-35", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
218 [label="36_ uint private changehashownerfee;\n218-new_variable-37-37", method="", type_label=new_variable];
223 [label="37_ struct HashRegistration \n    {\n        address owner;\n        uint registrationtime;\n    }\n223-expression_statement-38-42", method="HashRegistration()", type_label=expression_statement];
233 [label="42_ address payable lastPlayer_re_ent9;\n233-new_variable-43-43", method="", type_label=new_variable];
237 [label="43_ uint jackpot_re_ent9;\n237-new_variable-44-44", method="", type_label=new_variable];
241 [label="44_ function buyTicket_re_ent9() public{\n	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n	    if (!success)\n	        revert();\n      lastPlayer_re_ent9 = msg.sender;\n      jackpot_re_ent9    = address(this).balance;\n    }\n241-function_definition-45-51", method="buyTicket_re_ent9()", type_label=function_definition];
245 [label="45_ (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n245-new_variable-46-46", method="buyTicket_re_ent9()", type_label=new_variable];
263 [label="46_ if\n263-if-47-48", method="buyTicket_re_ent9()", type_label=if];
1903 [label="46_ end_if", method="buyTicket_re_ent9()", type_label=end_if];
268 [label="48_ lastPlayer_re_ent9 = msg.sender;\n268-expression_statement-49-49", method="buyTicket_re_ent9()", type_label=expression_statement];
274 [label="49_ jackpot_re_ent9    = address(this).balance;\n274-expression_statement-50-50", method="buyTicket_re_ent9()", type_label=expression_statement];
282 [label="51_ mapping(bytes32 => HashRegistration[]) HashList;\n282-new_variable-52-52", method="", type_label=new_variable];
290 [label="52_ mapping(address => uint) redeemableEther_re_ent25;\n290-new_variable-53-53", method="", type_label=new_variable];
296 [label="53_ function claimReward_re_ent25() public {        \n        require(redeemableEther_re_ent25[msg.sender] > 0);\n        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n        msg.sender.transfer(transferValue_re_ent25);    \n        redeemableEther_re_ent25[msg.sender] = 0;\n    }\n296-function_definition-54-59", method="claimReward_re_ent25()", type_label=function_definition];
300 [label="54_ require(redeemableEther_re_ent25[msg.sender] > 0);\n300-expression_statement-55-55", method="claimReward_re_ent25()", type_label=expression_statement];
311 [label="55_ uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n311-new_variable-56-56", method="claimReward_re_ent25()", type_label=new_variable];
321 [label="56_ msg.sender.transfer(transferValue_re_ent25);\n321-expression_statement-57-57", method="claimReward_re_ent25()", type_label=expression_statement];
330 [label="57_ redeemableEther_re_ent25[msg.sender] = 0;\n330-expression_statement-58-58", method="claimReward_re_ent25()", type_label=expression_statement];
338 [label="59_ uint private HashListLength;\n338-new_variable-60-60", method="", type_label=new_variable];
343 [label="60_ mapping(address => uint) balances_re_ent31;\n343-new_variable-61-61", method="", type_label=new_variable];
349 [label="61_ function withdrawFunds_re_ent31 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent31[msg.sender] -= _weiToWithdraw;\n    }\n349-function_definition-62-66", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=function_definition];
357 [label="62_ require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n357-expression_statement-63-63", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
368 [label="63_ require(msg.sender.send(_weiToWithdraw));\n368-expression_statement-64-64", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
380 [label="64_ balances_re_ent31[msg.sender] -= _weiToWithdraw;\n380-expression_statement-65-65", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
402 [label="67_ bool not_called_re_ent13 = true;\n402-new_variable-68-68", method="", type_label=new_variable];
408 [label="68_ function bug_re_ent13() public{\n        require(not_called_re_ent13);\n        (bool success,)=msg.sender.call.value(1 ether)(\"\");\n        if( ! success ){\n            revert();\n        }\n        not_called_re_ent13 = false;\n    }\n408-function_definition-69-76", method="bug_re_ent13()", type_label=function_definition];
412 [label="69_ require(not_called_re_ent13);\n412-expression_statement-70-70", method="bug_re_ent13()", type_label=expression_statement];
417 [label="70_ (bool success,)=msg.sender.call.value(1 ether)(\"\");\n417-new_variable-71-71", method="bug_re_ent13()", type_label=new_variable];
438 [label="71_ if\n438-if-72-74", method="bug_re_ent13()", type_label=if];
2078 [label="71_ end_if", method="bug_re_ent13()", type_label=end_if];
444 [label="74_ not_called_re_ent13 = false;\n444-expression_statement-75-75", method="bug_re_ent13()", type_label=expression_statement];
469 [label="79_ manager = msg.sender;\n469-expression_statement-80-80", method="", type_label=expression_statement];
475 [label="80_ contractactive = true;\n475-expression_statement-81-81", method="", type_label=expression_statement];
480 [label="81_ hashfee = 5000000000000000;\n480-expression_statement-82-82", method="", type_label=expression_statement];
484 [label="82_ changehashownerfee = 25000000000000000;\n484-expression_statement-83-83", method="", type_label=expression_statement];
488 [label="83_ HashListLength = 0;\n488-expression_statement-84-84", method="", type_label=expression_statement];
492 [label="85_ mapping(address => uint) userBalance_re_ent19;\n492-new_variable-86-86", method="", type_label=new_variable];
498 [label="86_ function withdrawBalance_re_ent19() public{\n        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent19[msg.sender] = 0;\n    }\n498-function_definition-87-92", method="withdrawBalance_re_ent19()", type_label=function_definition];
502 [label="87_ if\n502-if-88-90", method="withdrawBalance_re_ent19()", type_label=if];
2142 [label="87_ end_if", method="withdrawBalance_re_ent19()", type_label=end_if];
520 [label="90_ userBalance_re_ent19[msg.sender] = 0;\n520-expression_statement-91-91", method="withdrawBalance_re_ent19()", type_label=expression_statement];
528 [label="92_ modifier onlyManager()\n    {\n        require(msg.sender == manager);\n        _;\n    }\n528-expression_statement-93-97", method="", type_label=expression_statement];
531 [label="94_ require(msg.sender == manager);\n531-expression_statement-95-95", method="", type_label=expression_statement];
540 [label="95_ _;\n540-expression_statement-96-96", method="", type_label=expression_statement];
542 [label="97_ function gethashfee() external view returns(uint)\n    {\n        return hashfee;\n    }\n542-function_definition-98-101", method="gethashfee()", type_label=function_definition];
551 [label="99_ return hashfee;\n551-return-100-100", method="gethashfee()", type_label=return];
553 [label="101_ mapping(address => uint) userBalance_re_ent26;\n553-new_variable-102-102", method="", type_label=new_variable];
559 [label="102_ function withdrawBalance_re_ent26() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent26[msg.sender] = 0;\n    }\n559-function_definition-103-109", method="withdrawBalance_re_ent26()", type_label=function_definition];
563 [label="103_ (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n563-new_variable-104-104", method="withdrawBalance_re_ent26()", type_label=new_variable];
587 [label="104_ if\n587-if-105-107", method="withdrawBalance_re_ent26()", type_label=if];
2227 [label="104_ end_if", method="withdrawBalance_re_ent26()", type_label=end_if];
593 [label="107_ userBalance_re_ent26[msg.sender] = 0;\n593-expression_statement-108-108", method="withdrawBalance_re_ent26()", type_label=expression_statement];
601 [label="109_ function sethashfee(uint newfee) external onlyManager\n    {\n        require(newfee >= 0);\n        hashfee = newfee;\n    }\n601-function_definition-110-114", method="sethashfee(uint newfee)", type_label=function_definition];
608 [label="109_ onlyManager\n608-expression_statement-110-110", method="sethashfee(uint newfee)", type_label=expression_statement];
611 [label="111_ require(newfee >= 0);\n611-expression_statement-112-112", method="sethashfee(uint newfee)", type_label=expression_statement];
618 [label="112_ hashfee = newfee;\n618-expression_statement-113-113", method="sethashfee(uint newfee)", type_label=expression_statement];
622 [label="114_ bool not_called_re_ent20 = true;\n622-new_variable-115-115", method="", type_label=new_variable];
628 [label="115_ function bug_re_ent20() public{\n        require(not_called_re_ent20);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent20 = false;\n    }\n628-function_definition-116-122", method="bug_re_ent20()", type_label=function_definition];
632 [label="116_ require(not_called_re_ent20);\n632-expression_statement-117-117", method="bug_re_ent20()", type_label=expression_statement];
637 [label="117_ if\n637-if-118-120", method="bug_re_ent20()", type_label=if];
2277 [label="117_ end_if", method="bug_re_ent20()", type_label=end_if];
652 [label="120_ not_called_re_ent20 = false;\n652-expression_statement-121-121", method="bug_re_ent20()", type_label=expression_statement];
657 [label="122_ function getchangehashownerfee() external view returns(uint)\n    {\n        return changehashownerfee;\n    }\n657-function_definition-123-126", method="getchangehashownerfee()", type_label=function_definition];
666 [label="124_ return changehashownerfee;\n666-return-125-125", method="getchangehashownerfee()", type_label=return];
668 [label="126_ mapping(address => uint) redeemableEther_re_ent32;\n668-new_variable-127-127", method="", type_label=new_variable];
674 [label="127_ function claimReward_re_ent32() public {        \n        require(redeemableEther_re_ent32[msg.sender] > 0);\n        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n        msg.sender.transfer(transferValue_re_ent32);    \n        redeemableEther_re_ent32[msg.sender] = 0;\n    }\n674-function_definition-128-133", method="claimReward_re_ent32()", type_label=function_definition];
678 [label="128_ require(redeemableEther_re_ent32[msg.sender] > 0);\n678-expression_statement-129-129", method="claimReward_re_ent32()", type_label=expression_statement];
689 [label="129_ uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n689-new_variable-130-130", method="claimReward_re_ent32()", type_label=new_variable];
699 [label="130_ msg.sender.transfer(transferValue_re_ent32);\n699-expression_statement-131-131", method="claimReward_re_ent32()", type_label=expression_statement];
708 [label="131_ redeemableEther_re_ent32[msg.sender] = 0;\n708-expression_statement-132-132", method="claimReward_re_ent32()", type_label=expression_statement];
716 [label="133_ function setchangehashownerfee(uint newfee) external onlyManager\n    {\n        require(newfee >= 0);\n        changehashownerfee = newfee;\n    }\n716-function_definition-134-138", method="setchangehashownerfee(uint newfee)", type_label=function_definition];
723 [label="133_ onlyManager\n723-expression_statement-134-134", method="setchangehashownerfee(uint newfee)", type_label=expression_statement];
726 [label="135_ require(newfee >= 0);\n726-expression_statement-136-136", method="setchangehashownerfee(uint newfee)", type_label=expression_statement];
733 [label="136_ changehashownerfee = newfee;\n733-expression_statement-137-137", method="setchangehashownerfee(uint newfee)", type_label=expression_statement];
737 [label="138_ mapping(address => uint) balances_re_ent38;\n737-new_variable-139-139", method="", type_label=new_variable];
743 [label="139_ function withdrawFunds_re_ent38 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent38[msg.sender] -= _weiToWithdraw;\n    }\n743-function_definition-140-144", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=function_definition];
751 [label="140_ require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n751-expression_statement-141-141", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
762 [label="141_ require(msg.sender.send(_weiToWithdraw));\n762-expression_statement-142-142", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
774 [label="142_ balances_re_ent38[msg.sender] -= _weiToWithdraw;\n774-expression_statement-143-143", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
782 [label="144_ function getcontractactive() external view returns (bool)\n    {\n        return contractactive;\n    }\n782-function_definition-145-148", method="getcontractactive()", type_label=function_definition];
791 [label="146_ return contractactive;\n791-return-147-147", method="getcontractactive()", type_label=return];
793 [label="148_ mapping(address => uint) redeemableEther_re_ent4;\n793-new_variable-149-149", method="", type_label=new_variable];
799 [label="149_ function claimReward_re_ent4() public {        \n        require(redeemableEther_re_ent4[msg.sender] > 0);\n        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n        msg.sender.transfer(transferValue_re_ent4);    \n        redeemableEther_re_ent4[msg.sender] = 0;\n    }\n799-function_definition-150-155", method="claimReward_re_ent4()", type_label=function_definition];
803 [label="150_ require(redeemableEther_re_ent4[msg.sender] > 0);\n803-expression_statement-151-151", method="claimReward_re_ent4()", type_label=expression_statement];
814 [label="151_ uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n814-new_variable-152-152", method="claimReward_re_ent4()", type_label=new_variable];
824 [label="152_ msg.sender.transfer(transferValue_re_ent4);\n824-expression_statement-153-153", method="claimReward_re_ent4()", type_label=expression_statement];
833 [label="153_ redeemableEther_re_ent4[msg.sender] = 0;\n833-expression_statement-154-154", method="claimReward_re_ent4()", type_label=expression_statement];
841 [label="155_ function setcontractactive(bool contactive) external onlyManager\n    {\n        contractactive = contactive;\n    }\n841-function_definition-156-159", method="setcontractactive(bool contactive)", type_label=function_definition];
848 [label="155_ onlyManager\n848-expression_statement-156-156", method="setcontractactive(bool contactive)", type_label=expression_statement];
851 [label="157_ contractactive = contactive;\n851-expression_statement-158-158", method="setcontractactive(bool contactive)", type_label=expression_statement];
855 [label="159_ uint256 counter_re_ent7 =0;\n855-new_variable-160-160", method="", type_label=new_variable];
860 [label="160_ function callme_re_ent7() public{\n        require(counter_re_ent7<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent7 += 1;\n    }\n860-function_definition-161-167", method="callme_re_ent7()", type_label=function_definition];
864 [label="161_ require(counter_re_ent7<=5);\n864-expression_statement-162-162", method="callme_re_ent7()", type_label=expression_statement];
871 [label="162_ if\n871-if-163-165", method="callme_re_ent7()", type_label=if];
2511 [label="162_ end_if", method="callme_re_ent7()", type_label=end_if];
886 [label="165_ counter_re_ent7 += 1;\n886-expression_statement-166-166", method="callme_re_ent7()", type_label=expression_statement];
890 [label="167_ function getmanager() external view returns(address)\n    {\n        return manager;\n    }\n890-function_definition-168-171", method="getmanager()", type_label=function_definition];
899 [label="169_ return manager;\n899-return-170-170", method="getmanager()", type_label=return];
901 [label="171_ address payable lastPlayer_re_ent23;\n901-new_variable-172-172", method="", type_label=new_variable];
905 [label="172_ uint jackpot_re_ent23;\n905-new_variable-173-173", method="", type_label=new_variable];
909 [label="173_ function buyTicket_re_ent23() public{\n	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))\n        revert();\n      lastPlayer_re_ent23 = msg.sender;\n      jackpot_re_ent23    = address(this).balance;\n    }\n909-function_definition-174-179", method="buyTicket_re_ent23()", type_label=function_definition];
913 [label="174_ if\n913-if-175-176", method="buyTicket_re_ent23()", type_label=if];
2553 [label="174_ end_if", method="buyTicket_re_ent23()", type_label=end_if];
924 [label="176_ lastPlayer_re_ent23 = msg.sender;\n924-expression_statement-177-177", method="buyTicket_re_ent23()", type_label=expression_statement];
930 [label="177_ jackpot_re_ent23    = address(this).balance;\n930-expression_statement-178-178", method="buyTicket_re_ent23()", type_label=expression_statement];
938 [label="179_ function setmanager(address payable newmngr) external onlyManager\n    {\n        require(newmngr.balance > 0);\n        manager = newmngr;\n    }\n938-function_definition-180-184", method="setmanager(address payable newmngr)", type_label=function_definition];
945 [label="179_ onlyManager\n945-expression_statement-180-180", method="setmanager(address payable newmngr)", type_label=expression_statement];
948 [label="181_ require(newmngr.balance > 0);\n948-expression_statement-182-182", method="setmanager(address payable newmngr)", type_label=expression_statement];
957 [label="182_ manager = newmngr;\n957-expression_statement-183-183", method="setmanager(address payable newmngr)", type_label=expression_statement];
961 [label="184_ uint256 counter_re_ent14 =0;\n961-new_variable-185-185", method="", type_label=new_variable];
966 [label="185_ function callme_re_ent14() public{\n        require(counter_re_ent14<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent14 += 1;\n    }\n966-function_definition-186-192", method="callme_re_ent14()", type_label=function_definition];
970 [label="186_ require(counter_re_ent14<=5);\n970-expression_statement-187-187", method="callme_re_ent14()", type_label=expression_statement];
977 [label="187_ if\n977-if-188-190", method="callme_re_ent14()", type_label=if];
2617 [label="187_ end_if", method="callme_re_ent14()", type_label=end_if];
992 [label="190_ counter_re_ent14 += 1;\n992-expression_statement-191-191", method="callme_re_ent14()", type_label=expression_statement];
996 [label="192_ function getcontractbalance() public view returns(uint)\n    {\n        return address(this).balance;\n    }\n996-function_definition-193-196", method="getcontractbalance()", type_label=function_definition];
1005 [label="194_ return address(this).balance;\n1005-return-195-195", method="getcontractbalance()", type_label=return];
1011 [label="196_ address payable lastPlayer_re_ent30;\n1011-new_variable-197-197", method="", type_label=new_variable];
1015 [label="197_ uint jackpot_re_ent30;\n1015-new_variable-198-198", method="", type_label=new_variable];
1019 [label="198_ function buyTicket_re_ent30() public{\n	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))\n        revert();\n      lastPlayer_re_ent30 = msg.sender;\n      jackpot_re_ent30    = address(this).balance;\n    }\n1019-function_definition-199-204", method="buyTicket_re_ent30()", type_label=function_definition];
1023 [label="199_ if\n1023-if-200-201", method="buyTicket_re_ent30()", type_label=if];
2663 [label="199_ end_if", method="buyTicket_re_ent30()", type_label=end_if];
1034 [label="201_ lastPlayer_re_ent30 = msg.sender;\n1034-expression_statement-202-202", method="buyTicket_re_ent30()", type_label=expression_statement];
1040 [label="202_ jackpot_re_ent30    = address(this).balance;\n1040-expression_statement-203-203", method="buyTicket_re_ent30()", type_label=expression_statement];
1048 [label="204_ function transfercontractbalance() external onlyManager\n    {\n        uint cb = address(this).balance;\n        require(cb > 0);\n        manager.transfer(cb);\n    }\n1048-function_definition-205-210", method="transfercontractbalance()", type_label=function_definition];
1051 [label="204_ onlyManager\n1051-expression_statement-205-205", method="transfercontractbalance()", type_label=expression_statement];
1054 [label="206_ uint cb = address(this).balance;\n1054-new_variable-207-207", method="transfercontractbalance()", type_label=new_variable];
1064 [label="207_ require(cb > 0);\n1064-expression_statement-208-208", method="transfercontractbalance()", type_label=expression_statement];
1071 [label="208_ manager.transfer(cb);\n1071-expression_statement-209-209", method="transfercontractbalance()", type_label=expression_statement];
1078 [label="210_ mapping(address => uint) balances_re_ent8;\n1078-new_variable-211-211", method="", type_label=new_variable];
1084 [label="211_ function withdraw_balances_re_ent8 () public {\n       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent8[msg.sender] = 0;\n      }\n1084-function_definition-212-216", method="withdraw_balances_re_ent8()", type_label=function_definition];
1088 [label="212_ (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n1088-new_variable-213-213", method="withdraw_balances_re_ent8()", type_label=new_variable];
1112 [label="213_ if\n1112-if-214-215", method="withdraw_balances_re_ent8()", type_label=if];
2752 [label="213_ end_if", method="withdraw_balances_re_ent8()", type_label=end_if];
1114 [label="214_ balances_re_ent8[msg.sender] = 0;\n1114-expression_statement-215-215", method="withdraw_balances_re_ent8()", type_label=expression_statement];
1122 [label="216_ function getHashOwnersCount(bytes32 hash) public view returns(uint)\n    {\n        return HashList[hash].length;\n    }\n1122-function_definition-217-220", method="getHashOwnersCount(bytes32 hash)", type_label=function_definition];
1135 [label="218_ return HashList[hash].length;\n1135-return-219-219", method="getHashOwnersCount(bytes32 hash)", type_label=return];
1141 [label="220_ mapping(address => uint) redeemableEther_re_ent39;\n1141-new_variable-221-221", method="", type_label=new_variable];
1147 [label="221_ function claimReward_re_ent39() public {        \n        require(redeemableEther_re_ent39[msg.sender] > 0);\n        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n        msg.sender.transfer(transferValue_re_ent39);    \n        redeemableEther_re_ent39[msg.sender] = 0;\n    }\n1147-function_definition-222-227", method="claimReward_re_ent39()", type_label=function_definition];
1151 [label="222_ require(redeemableEther_re_ent39[msg.sender] > 0);\n1151-expression_statement-223-223", method="claimReward_re_ent39()", type_label=expression_statement];
1162 [label="223_ uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n1162-new_variable-224-224", method="claimReward_re_ent39()", type_label=new_variable];
1172 [label="224_ msg.sender.transfer(transferValue_re_ent39);\n1172-expression_statement-225-225", method="claimReward_re_ent39()", type_label=expression_statement];
1181 [label="225_ redeemableEther_re_ent39[msg.sender] = 0;\n1181-expression_statement-226-226", method="claimReward_re_ent39()", type_label=expression_statement];
1189 [label="227_ function getNumberofHashesRegistered() external view returns(uint)\n    {\n        return HashListLength;\n    }\n1189-function_definition-228-231", method="getNumberofHashesRegistered()", type_label=function_definition];
1198 [label="229_ return HashListLength;\n1198-return-230-230", method="getNumberofHashesRegistered()", type_label=return];
1200 [label="231_ mapping(address => uint) balances_re_ent36;\n1200-new_variable-232-232", method="", type_label=new_variable];
1206 [label="232_ function withdraw_balances_re_ent36 () public {\n       if (msg.sender.send(balances_re_ent36[msg.sender ]))\n          balances_re_ent36[msg.sender] = 0;\n      }\n1206-function_definition-233-236", method="withdraw_balances_re_ent36()", type_label=function_definition];
1210 [label="233_ if\n1210-if-234-235", method="withdraw_balances_re_ent36()", type_label=if];
2850 [label="233_ end_if", method="withdraw_balances_re_ent36()", type_label=end_if];
1223 [label="234_ balances_re_ent36[msg.sender] = 0;\n1223-expression_statement-235-235", method="withdraw_balances_re_ent36()", type_label=expression_statement];
1231 [label="236_ function getHashDetails(bytes32 hash,uint indx) external view returns (address,uint)\n    {\n        uint owncount = getHashOwnersCount(hash);\n        require(owncount > 0);\n        require(indx < owncount);\n        return (HashList[hash][indx].owner,HashList[hash][indx].registrationtime);\n    }\n1231-function_definition-237-243", method="getHashDetails(bytes32 hash,uint indx)", type_label=function_definition];
1251 [label="238_ uint owncount = getHashOwnersCount(hash);\n1251-new_variable-239-239", method="getHashDetails(bytes32 hash,uint indx)", type_label=new_variable];
1260 [label="239_ require(owncount > 0);\n1260-expression_statement-240-240", method="getHashDetails(bytes32 hash,uint indx)", type_label=expression_statement];
1267 [label="240_ require(indx < owncount);\n1267-expression_statement-241-241", method="getHashDetails(bytes32 hash,uint indx)", type_label=expression_statement];
1274 [label="241_ return (HashList[hash][indx].owner,HashList[hash][indx].registrationtime);\n1274-return-242-242", method="getHashDetails(bytes32 hash,uint indx)", type_label=return];
1290 [label="243_ uint256 counter_re_ent35 =0;\n1290-new_variable-244-244", method="", type_label=new_variable];
1295 [label="244_ function callme_re_ent35() public{\n        require(counter_re_ent35<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent35 += 1;\n    }\n1295-function_definition-245-251", method="callme_re_ent35()", type_label=function_definition];
1299 [label="245_ require(counter_re_ent35<=5);\n1299-expression_statement-246-246", method="callme_re_ent35()", type_label=expression_statement];
1306 [label="246_ if\n1306-if-247-249", method="callme_re_ent35()", type_label=if];
2946 [label="246_ end_if", method="callme_re_ent35()", type_label=end_if];
1321 [label="249_ counter_re_ent35 += 1;\n1321-expression_statement-250-250", method="callme_re_ent35()", type_label=expression_statement];
1325 [label="251_ function registerHash(bytes32 hash) external payable\n    {\n        require(contractactive == true);\n        require(getHashOwnersCount(hash) == 0);\n        require(msg.value == hashfee);\n        HashRegistration memory thisregistration;\n        thisregistration.owner = msg.sender;\n        thisregistration.registrationtime = now;\n        HashList[hash].push(thisregistration);\n        HashListLength++;\n        emit RegisterHashEvent(thisregistration.owner, hash, thisregistration.registrationtime);\n    }\n1325-function_definition-252-263", method="registerHash(bytes32 hash)", type_label=function_definition];
1334 [label="253_ require(contractactive == true);\n1334-expression_statement-254-254", method="registerHash(bytes32 hash)", type_label=expression_statement];
1342 [label="254_ require(getHashOwnersCount(hash) == 0);\n1342-expression_statement-255-255", method="registerHash(bytes32 hash)", type_label=expression_statement];
1352 [label="255_ require(msg.value == hashfee);\n1352-expression_statement-256-256", method="registerHash(bytes32 hash)", type_label=expression_statement];
1361 [label="256_ HashRegistration memory thisregistration;\n1361-new_variable-257-257", method="registerHash(bytes32 hash)", type_label=new_variable];
1367 [label="257_ thisregistration.owner = msg.sender;\n1367-expression_statement-258-258", method="registerHash(bytes32 hash)", type_label=expression_statement];
1375 [label="258_ thisregistration.registrationtime = now;\n1375-expression_statement-259-259", method="registerHash(bytes32 hash)", type_label=expression_statement];
1381 [label="259_ HashList[hash].push(thisregistration);\n1381-expression_statement-260-260", method="registerHash(bytes32 hash)", type_label=expression_statement];
1390 [label="260_ HashListLength++;\n1390-expression_statement-261-261", method="registerHash(bytes32 hash)", type_label=expression_statement];
1391 [label="260_ HashListLength++\n1391-expression_statement-261-261", method="registerHash(bytes32 hash)", type_label=expression_statement];
1405 [label="263_ mapping(address => uint) userBalance_re_ent40;\n1405-new_variable-264-264", method="", type_label=new_variable];
1411 [label="264_ function withdrawBalance_re_ent40() public{\n        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent40[msg.sender] = 0;\n    }\n1411-function_definition-265-271", method="withdrawBalance_re_ent40()", type_label=function_definition];
1415 [label="265_ (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n1415-new_variable-266-266", method="withdrawBalance_re_ent40()", type_label=new_variable];
1439 [label="266_ if\n1439-if-267-269", method="withdrawBalance_re_ent40()", type_label=if];
3079 [label="266_ end_if", method="withdrawBalance_re_ent40()", type_label=end_if];
1445 [label="269_ userBalance_re_ent40[msg.sender] = 0;\n1445-expression_statement-270-270", method="withdrawBalance_re_ent40()", type_label=expression_statement];
1453 [label="271_ function changeHashOwnership(bytes32 hash, address newowner) external payable\n    {\n        require(contractactive == true);\n        uint owncount = getHashOwnersCount(hash);\n        require(owncount > 0);\n        require(msg.sender == HashList[hash][owncount - 1].owner); \n        require(msg.value == changehashownerfee);\n        HashRegistration memory thisregistration;\n        thisregistration.owner = newowner;\n        thisregistration.registrationtime = now;\n        HashList[hash].push(thisregistration);\n        emit ChangeHashOwnershipEvent(msg.sender, thisregistration.owner, hash, thisregistration.registrationtime);\n    }\n1453-function_definition-272-284", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=function_definition];
1466 [label="273_ require(contractactive == true);\n1466-expression_statement-274-274", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1474 [label="274_ uint owncount = getHashOwnersCount(hash);\n1474-new_variable-275-275", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=new_variable];
1483 [label="275_ require(owncount > 0);\n1483-expression_statement-276-276", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1490 [label="276_ require(msg.sender == HashList[hash][owncount - 1].owner);\n1490-expression_statement-277-277", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1507 [label="277_ require(msg.value == changehashownerfee);\n1507-expression_statement-278-278", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1516 [label="278_ HashRegistration memory thisregistration;\n1516-new_variable-279-279", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=new_variable];
1522 [label="279_ thisregistration.owner = newowner;\n1522-expression_statement-280-280", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1528 [label="280_ thisregistration.registrationtime = now;\n1528-expression_statement-281-281", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1534 [label="281_ HashList[hash].push(thisregistration);\n1534-expression_statement-282-282", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1559 [label="284_ mapping(address => uint) userBalance_re_ent33;\n1559-new_variable-285-285", method="", type_label=new_variable];
1565 [label="285_ function withdrawBalance_re_ent33() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent33[msg.sender] = 0;\n    }\n1565-function_definition-286-292", method="withdrawBalance_re_ent33()", type_label=function_definition];
1569 [label="286_ (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n1569-new_variable-287-287", method="withdrawBalance_re_ent33()", type_label=new_variable];
1593 [label="287_ if\n1593-if-288-290", method="withdrawBalance_re_ent33()", type_label=if];
3233 [label="287_ end_if", method="withdrawBalance_re_ent33()", type_label=end_if];
1599 [label="290_ userBalance_re_ent33[msg.sender] = 0;\n1599-expression_statement-291-291", method="withdrawBalance_re_ent33()", type_label=expression_statement];
1610 [label="295_ bool not_called_re_ent27 = true;\n1610-new_variable-296-296", method="", type_label=new_variable];
1616 [label="296_ function bug_re_ent27() public{\n        require(not_called_re_ent27);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent27 = false;\n    }\n1616-function_definition-297-303", method="bug_re_ent27()", type_label=function_definition];
1620 [label="297_ require(not_called_re_ent27);\n1620-expression_statement-298-298", method="bug_re_ent27()", type_label=expression_statement];
1625 [label="298_ if\n1625-if-299-301", method="bug_re_ent27()", type_label=if];
3265 [label="298_ end_if", method="bug_re_ent27()", type_label=end_if];
1640 [label="301_ not_called_re_ent27 = false;\n1640-expression_statement-302-302", method="bug_re_ent27()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 17  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
21 -> 25  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
25 -> 1665  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
36 -> 42  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
50 -> 55  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
61 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
69 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 100  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
100 -> 105  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
113 -> 118  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
118 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
126 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 1770  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
141 -> 147  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
155 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
166 -> 174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
174 -> 185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
185 -> 205  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
205 -> 210  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
218 -> 223  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
223 -> 233  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
233 -> 237  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
241 -> 245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
245 -> 263  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
263 -> 1903  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
268 -> 274  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
282 -> 290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
296 -> 300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
300 -> 311  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
311 -> 321  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
321 -> 330  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
338 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
349 -> 357  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
357 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
368 -> 380  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
408 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
417 -> 438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 2078  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
469 -> 475  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
475 -> 480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
480 -> 484  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
484 -> 488  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
498 -> 502  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
502 -> 2142  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
531 -> 540  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
542 -> 551  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
551 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
559 -> 563  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
563 -> 587  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
587 -> 2227  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
601 -> 611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
611 -> 618  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
628 -> 632  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
632 -> 637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
637 -> 2277  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
657 -> 666  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
666 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
674 -> 678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
678 -> 689  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
689 -> 699  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
699 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
716 -> 726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
726 -> 733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
743 -> 751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
751 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
762 -> 774  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
782 -> 791  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
791 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
799 -> 803  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
803 -> 814  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
814 -> 824  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
824 -> 833  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
841 -> 851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
860 -> 864  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
864 -> 871  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
871 -> 2511  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
890 -> 899  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
899 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
901 -> 905  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
909 -> 913  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
913 -> 2553  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
924 -> 930  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
938 -> 948  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
948 -> 957  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
966 -> 970  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
970 -> 977  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
977 -> 2617  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
996 -> 1005  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1005 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1011 -> 1015  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1019 -> 1023  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1023 -> 2663  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1034 -> 1040  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1048 -> 1054  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1054 -> 1064  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1064 -> 1071  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1084 -> 1088  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1088 -> 1112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1112 -> 1114  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1112 -> 2752  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2752 -> 1122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1114 -> 2752  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1122 -> 1135  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1135 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1147 -> 1151  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1151 -> 1162  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1162 -> 1172  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1172 -> 1181  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1189 -> 1198  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1198 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1206 -> 1210  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1210 -> 1223  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1210 -> 2850  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2850 -> 1231  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1223 -> 2850  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1231 -> 1251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1251 -> 1260  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1260 -> 1267  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1267 -> 1274  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1274 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1295 -> 1299  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1299 -> 1306  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1306 -> 2946  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1325 -> 1334  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1334 -> 1342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1342 -> 1352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1352 -> 1361  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1361 -> 1367  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1367 -> 1375  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1375 -> 1381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1381 -> 1390  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1411 -> 1415  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1415 -> 1439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1439 -> 3079  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1453 -> 1466  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1466 -> 1474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1474 -> 1483  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1483 -> 1490  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1490 -> 1507  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1507 -> 1516  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1516 -> 1522  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1522 -> 1528  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1528 -> 1534  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1565 -> 1569  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1569 -> 1593  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1593 -> 3233  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1616 -> 1620  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1620 -> 1625  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1625 -> 3265  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
}
