digraph  {
13 [label="2_ mapping(address => uint) public balances;\n13-new_variable-3-3", method="", type_label=new_variable];
20 [label="3_ function donate(address _to) public payable {\n    balances[_to] += msg.value;\n  }\n20-function_definition-4-6", method="donate(address _to)", type_label=function_definition];
29 [label="4_ balances[_to] += msg.value;\n29-expression_statement-5-5", method="donate(address _to)", type_label=expression_statement];
37 [label="6_ function balanceOf(address _who) public view returns (uint balance) {\n    return balances[_who];\n  }\n37-function_definition-7-9", method="balanceOf(address _who)", type_label=function_definition];
51 [label="7_ return balances[_who];\n51-return-8-8", method="balanceOf(address _who)", type_label=return];
55 [label="9_ function withdraw(uint _amount) public {\n    if(balances[msg.sender] >= _amount) {\n      if(msg.sender.call.value(_amount)()) {\n        _amount;\n      }\n      balances[msg.sender] -= _amount;\n    }\n  }\n55-function_definition-10-17", method="withdraw(uint _amount)", type_label=function_definition];
63 [label="10_ if_balances[msg.sender] >= _amount\n63-if-11-16", method="withdraw(uint _amount)", type_label=if];
157 [label="10_ end_if", method="withdraw(uint _amount)", type_label=end_if];
72 [label="11_ if\n72-if-12-14", method="withdraw(uint _amount)", type_label=if];
166 [label="11_ end_if", method="withdraw(uint _amount)", type_label=end_if];
85 [label="12_ _amount;\n85-expression_statement-13-13", method="withdraw(uint _amount)", type_label=expression_statement];
87 [label="14_ balances[msg.sender] -= _amount;\n87-expression_statement-15-15", method="withdraw(uint _amount)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
95;
20 -> 29  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
37 -> 51  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
51 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
55 -> 63  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
63 -> 72  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
63 -> 157  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
157 -> 95  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
72 -> 85  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
72 -> 166  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
166 -> 87  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
85 -> 166  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
87 -> 157  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
}
