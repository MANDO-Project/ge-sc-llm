digraph  {
13 [label="2_ address public owner;\n13-new_variable-3-3", method="", type_label=new_variable];
18 [label="3_ uint public last_completed_migration;\n18-new_variable-4-4", method="", type_label=new_variable];
23 [label="4_ modifier restricted() {\n        if (msg.sender == owner) _;\n    }\n23-expression_statement-5-7", method="", type_label=expression_statement];
26 [label="5_ if_msg.sender == owner\n26-if-6-6", method="", type_label=if];
104 [label="5_ end_if", method="", type_label=end_if];
32 [label="5_ _;\n32-expression_statement-6-6", method="", type_label=expression_statement];
36 [label="8_ owner = msg.sender;\n36-expression_statement-9-9", method="", type_label=expression_statement];
42 [label="10_ function setCompleted(uint completed) public restricted {\n        last_completed_migration = completed;\n    }\n42-function_definition-11-13", method="setCompleted(uint completed)", type_label=function_definition];
49 [label="10_ restricted\n49-expression_statement-11-11", method="setCompleted(uint completed)", type_label=expression_statement];
52 [label="11_ last_completed_migration = completed;\n52-expression_statement-12-12", method="setCompleted(uint completed)", type_label=expression_statement];
56 [label="13_ function upgrade(address new_address) public restricted {\n        Migrations upgraded = Migrations(new_address);\n        upgraded.setCompleted(last_completed_migration);\n    }\n56-function_definition-14-17", method="upgrade(address new_address)", type_label=function_definition];
63 [label="13_ restricted\n63-expression_statement-14-14", method="upgrade(address new_address)", type_label=expression_statement];
66 [label="14_ Migrations upgraded = Migrations(new_address);\n66-new_variable-15-15", method="upgrade(address new_address)", type_label=new_variable];
76 [label="15_ upgraded.setCompleted(last_completed_migration);\n76-expression_statement-16-16", method="upgrade(address new_address)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
34;
13 -> 18  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
18 -> 23  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
26 -> 32  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
26 -> 104  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
104 -> 34  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
32 -> 104  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
42 -> 52  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
56 -> 66  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
66 -> 76  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
