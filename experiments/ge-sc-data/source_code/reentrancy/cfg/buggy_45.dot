digraph  {
13 [label="2_ mapping(address => uint) redeemableEther_re_ent39;\n13-new_variable-3-3", method="", type_label=new_variable];
19 [label="3_ function claimReward_re_ent39() public {        \n        require(redeemableEther_re_ent39[msg.sender] > 0);\n        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n        msg.sender.transfer(transferValue_re_ent39);    \n        redeemableEther_re_ent39[msg.sender] = 0;\n    }\n19-function_definition-4-9", method="claimReward_re_ent39()", type_label=function_definition];
23 [label="4_ require(redeemableEther_re_ent39[msg.sender] > 0);\n23-expression_statement-5-5", method="claimReward_re_ent39()", type_label=expression_statement];
34 [label="5_ uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n34-new_variable-6-6", method="claimReward_re_ent39()", type_label=new_variable];
44 [label="6_ msg.sender.transfer(transferValue_re_ent39);\n44-expression_statement-7-7", method="claimReward_re_ent39()", type_label=expression_statement];
53 [label="7_ redeemableEther_re_ent39[msg.sender] = 0;\n53-expression_statement-8-8", method="claimReward_re_ent39()", type_label=expression_statement];
67 [label="10_ mapping(address => uint) balances_re_ent36;\n67-new_variable-11-11", method="", type_label=new_variable];
73 [label="11_ function withdraw_balances_re_ent36 () public {\n       if (msg.sender.send(balances_re_ent36[msg.sender ]))\n          balances_re_ent36[msg.sender] = 0;\n      }\n73-function_definition-12-15", method="withdraw_balances_re_ent36()", type_label=function_definition];
77 [label="12_ if\n77-if-13-14", method="withdraw_balances_re_ent36()", type_label=if];
1851 [label="12_ end_if", method="withdraw_balances_re_ent36()", type_label=end_if];
90 [label="13_ balances_re_ent36[msg.sender] = 0;\n90-expression_statement-14-14", method="withdraw_balances_re_ent36()", type_label=expression_statement];
104 [label="16_ uint256 counter_re_ent35 =0;\n104-new_variable-17-17", method="", type_label=new_variable];
109 [label="17_ function callme_re_ent35() public{\n        require(counter_re_ent35<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent35 += 1;\n    }\n109-function_definition-18-24", method="callme_re_ent35()", type_label=function_definition];
113 [label="18_ require(counter_re_ent35<=5);\n113-expression_statement-19-19", method="callme_re_ent35()", type_label=expression_statement];
120 [label="19_ if\n120-if-20-22", method="callme_re_ent35()", type_label=if];
1894 [label="19_ end_if", method="callme_re_ent35()", type_label=end_if];
135 [label="22_ counter_re_ent35 += 1;\n135-expression_statement-23-23", method="callme_re_ent35()", type_label=expression_statement];
141 [label="25_ mapping(address => uint) userBalance_re_ent40;\n141-new_variable-26-26", method="", type_label=new_variable];
147 [label="26_ function withdrawBalance_re_ent40() public{\n        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent40[msg.sender] = 0;\n    }\n147-function_definition-27-33", method="withdrawBalance_re_ent40()", type_label=function_definition];
151 [label="27_ (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n151-new_variable-28-28", method="withdrawBalance_re_ent40()", type_label=new_variable];
175 [label="28_ if\n175-if-29-31", method="withdrawBalance_re_ent40()", type_label=if];
1949 [label="28_ end_if", method="withdrawBalance_re_ent40()", type_label=end_if];
181 [label="31_ userBalance_re_ent40[msg.sender] = 0;\n181-expression_statement-32-32", method="withdrawBalance_re_ent40()", type_label=expression_statement];
195 [label="34_ mapping(address => uint) userBalance_re_ent33;\n195-new_variable-35-35", method="", type_label=new_variable];
201 [label="35_ function withdrawBalance_re_ent33() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent33[msg.sender] = 0;\n    }\n201-function_definition-36-42", method="withdrawBalance_re_ent33()", type_label=function_definition];
205 [label="36_ (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n205-new_variable-37-37", method="withdrawBalance_re_ent33()", type_label=new_variable];
229 [label="37_ if\n229-if-38-40", method="withdrawBalance_re_ent33()", type_label=if];
2003 [label="37_ end_if", method="withdrawBalance_re_ent33()", type_label=end_if];
235 [label="40_ userBalance_re_ent33[msg.sender] = 0;\n235-expression_statement-41-41", method="withdrawBalance_re_ent33()", type_label=expression_statement];
249 [label="43_ bool not_called_re_ent27 = true;\n249-new_variable-44-44", method="", type_label=new_variable];
255 [label="44_ function bug_re_ent27() public{\n        require(not_called_re_ent27);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent27 = false;\n    }\n255-function_definition-45-51", method="bug_re_ent27()", type_label=function_definition];
259 [label="45_ require(not_called_re_ent27);\n259-expression_statement-46-46", method="bug_re_ent27()", type_label=expression_statement];
264 [label="46_ if\n264-if-47-49", method="bug_re_ent27()", type_label=if];
2038 [label="46_ end_if", method="bug_re_ent27()", type_label=end_if];
279 [label="49_ not_called_re_ent27 = false;\n279-expression_statement-50-50", method="bug_re_ent27()", type_label=expression_statement];
294 [label="52_ mapping(address => uint) balances_re_ent31;\n294-new_variable-53-53", method="", type_label=new_variable];
300 [label="53_ function withdrawFunds_re_ent31 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent31[msg.sender] -= _weiToWithdraw;\n    }\n300-function_definition-54-58", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=function_definition];
308 [label="54_ require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n308-expression_statement-55-55", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
319 [label="55_ require(msg.sender.send(_weiToWithdraw));\n319-expression_statement-56-56", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
331 [label="56_ balances_re_ent31[msg.sender] -= _weiToWithdraw;\n331-expression_statement-57-57", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
349 [label="59_ bool not_called_re_ent13 = true;\n349-new_variable-60-60", method="", type_label=new_variable];
355 [label="60_ function bug_re_ent13() public{\n        require(not_called_re_ent13);\n        (bool success,)=msg.sender.call.value(1 ether)(\"\");\n        if( ! success ){\n            revert();\n        }\n        not_called_re_ent13 = false;\n    }\n355-function_definition-61-68", method="bug_re_ent13()", type_label=function_definition];
359 [label="61_ require(not_called_re_ent13);\n359-expression_statement-62-62", method="bug_re_ent13()", type_label=expression_statement];
364 [label="62_ (bool success,)=msg.sender.call.value(1 ether)(\"\");\n364-new_variable-63-63", method="bug_re_ent13()", type_label=new_variable];
385 [label="63_ if\n385-if-64-66", method="bug_re_ent13()", type_label=if];
2159 [label="63_ end_if", method="bug_re_ent13()", type_label=end_if];
391 [label="66_ not_called_re_ent13 = false;\n391-expression_statement-67-67", method="bug_re_ent13()", type_label=expression_statement];
415 [label="77_ struct Guess {\n        mapping (address => PaidStatus) players;\n        uint guesses_number;\n    }\n415-expression_statement-78-81", method="Guess()", type_label=expression_statement];
428 [label="81_ mapping(address => uint) balances_re_ent1;\n428-new_variable-82-82", method="", type_label=new_variable];
434 [label="82_ function withdraw_balances_re_ent1 () public {\n       (bool success,) =msg.sender.call.value(balances_re_ent1[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent1[msg.sender] = 0;\n      }\n434-function_definition-83-87", method="withdraw_balances_re_ent1()", type_label=function_definition];
438 [label="83_ (bool success,) =msg.sender.call.value(balances_re_ent1[msg.sender ])(\"\");\n438-new_variable-84-84", method="withdraw_balances_re_ent1()", type_label=new_variable];
462 [label="84_ if\n462-if-85-86", method="withdraw_balances_re_ent1()", type_label=if];
2236 [label="84_ end_if", method="withdraw_balances_re_ent1()", type_label=end_if];
464 [label="85_ balances_re_ent1[msg.sender] = 0;\n464-expression_statement-86-86", method="withdraw_balances_re_ent1()", type_label=expression_statement];
472 [label="87_ address payable public owner;\n472-new_variable-88-88", method="", type_label=new_variable];
477 [label="88_ bool not_called_re_ent41 = true;\n477-new_variable-89-89", method="", type_label=new_variable];
483 [label="89_ function bug_re_ent41() public{\n        require(not_called_re_ent41);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent41 = false;\n    }\n483-function_definition-90-96", method="bug_re_ent41()", type_label=function_definition];
487 [label="90_ require(not_called_re_ent41);\n487-expression_statement-91-91", method="bug_re_ent41()", type_label=expression_statement];
492 [label="91_ if\n492-if-92-94", method="bug_re_ent41()", type_label=if];
2266 [label="91_ end_if", method="bug_re_ent41()", type_label=end_if];
507 [label="94_ not_called_re_ent41 = false;\n507-expression_statement-95-95", method="bug_re_ent41()", type_label=expression_statement];
512 [label="96_ address public oracle;\n512-new_variable-97-97", method="", type_label=new_variable];
517 [label="97_ uint256 counter_re_ent42 =0;\n517-new_variable-98-98", method="", type_label=new_variable];
522 [label="98_ function callme_re_ent42() public{\n        require(counter_re_ent42<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent42 += 1;\n    }\n522-function_definition-99-105", method="callme_re_ent42()", type_label=function_definition];
526 [label="99_ require(counter_re_ent42<=5);\n526-expression_statement-100-100", method="callme_re_ent42()", type_label=expression_statement];
533 [label="100_ if\n533-if-101-103", method="callme_re_ent42()", type_label=if];
2307 [label="100_ end_if", method="callme_re_ent42()", type_label=end_if];
548 [label="103_ counter_re_ent42 += 1;\n548-expression_statement-104-104", method="callme_re_ent42()", type_label=expression_statement];
552 [label="105_ State public state;\n552-new_variable-106-106", method="", type_label=new_variable];
558 [label="106_ address payable lastPlayer_re_ent2;\n558-new_variable-107-107", method="", type_label=new_variable];
562 [label="107_ uint jackpot_re_ent2;\n562-new_variable-108-108", method="", type_label=new_variable];
566 [label="108_ function buyTicket_re_ent2() public{\n	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))\n        revert();\n      lastPlayer_re_ent2 = msg.sender;\n      jackpot_re_ent2    = address(this).balance;\n    }\n566-function_definition-109-114", method="buyTicket_re_ent2()", type_label=function_definition];
570 [label="109_ if\n570-if-110-111", method="buyTicket_re_ent2()", type_label=if];
2344 [label="109_ end_if", method="buyTicket_re_ent2()", type_label=end_if];
581 [label="111_ lastPlayer_re_ent2 = msg.sender;\n581-expression_statement-112-112", method="buyTicket_re_ent2()", type_label=expression_statement];
587 [label="112_ jackpot_re_ent2    = address(this).balance;\n587-expression_statement-113-113", method="buyTicket_re_ent2()", type_label=expression_statement];
595 [label="114_ mapping (uint => Guess) public guesses;\n595-new_variable-115-115", method="", type_label=new_variable];
603 [label="115_ mapping(address => uint) balances_re_ent17;\n603-new_variable-116-116", method="", type_label=new_variable];
609 [label="116_ function withdrawFunds_re_ent17 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent17[msg.sender] >= _weiToWithdraw);\n        (bool success,)=msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent17[msg.sender] -= _weiToWithdraw;\n    }\n609-function_definition-117-122", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=function_definition];
617 [label="117_ require(balances_re_ent17[msg.sender] >= _weiToWithdraw);\n617-expression_statement-118-118", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
628 [label="118_ (bool success,)=msg.sender.call.value(_weiToWithdraw)(\"\");\n628-new_variable-119-119", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=new_variable];
648 [label="119_ require(success);\n648-expression_statement-120-120", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
653 [label="120_ balances_re_ent17[msg.sender] -= _weiToWithdraw;\n653-expression_statement-121-121", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
661 [label="122_ uint256 public bet;\n661-new_variable-123-123", method="", type_label=new_variable];
666 [label="123_ uint256 splitJackpot;\n666-new_variable-124-124", method="", type_label=new_variable];
670 [label="124_ address payable lastPlayer_re_ent37;\n670-new_variable-125-125", method="", type_label=new_variable];
674 [label="125_ uint jackpot_re_ent37;\n674-new_variable-126-126", method="", type_label=new_variable];
678 [label="126_ function buyTicket_re_ent37() public{\n	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))\n        revert();\n      lastPlayer_re_ent37 = msg.sender;\n      jackpot_re_ent37    = address(this).balance;\n    }\n678-function_definition-127-132", method="buyTicket_re_ent37()", type_label=function_definition];
682 [label="127_ if\n682-if-128-129", method="buyTicket_re_ent37()", type_label=if];
2456 [label="127_ end_if", method="buyTicket_re_ent37()", type_label=end_if];
693 [label="129_ lastPlayer_re_ent37 = msg.sender;\n693-expression_statement-130-130", method="buyTicket_re_ent37()", type_label=expression_statement];
699 [label="130_ jackpot_re_ent37    = address(this).balance;\n699-expression_statement-131-131", method="buyTicket_re_ent37()", type_label=expression_statement];
707 [label="132_ uint public result;\n707-new_variable-133-133", method="", type_label=new_variable];
712 [label="133_ mapping(address => uint) balances_re_ent3;\n712-new_variable-134-134", method="", type_label=new_variable];
718 [label="134_ function withdrawFunds_re_ent3 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n	(bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent3[msg.sender] -= _weiToWithdraw;\n    }\n718-function_definition-135-140", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=function_definition];
726 [label="135_ require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n726-expression_statement-136-136", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
737 [label="136_ (bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n737-new_variable-137-137", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=new_variable];
757 [label="137_ require(success);\n757-expression_statement-138-138", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
762 [label="138_ balances_re_ent3[msg.sender] -= _weiToWithdraw;\n762-expression_statement-139-139", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
770 [label="140_ uint256 public initialPrice;\n770-new_variable-141-141", method="", type_label=new_variable];
775 [label="141_ address payable lastPlayer_re_ent9;\n775-new_variable-142-142", method="", type_label=new_variable];
779 [label="142_ uint jackpot_re_ent9;\n779-new_variable-143-143", method="", type_label=new_variable];
783 [label="143_ function buyTicket_re_ent9() public{\n	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n	    if (!success)\n	        revert();\n      lastPlayer_re_ent9 = msg.sender;\n      jackpot_re_ent9    = address(this).balance;\n    }\n783-function_definition-144-150", method="buyTicket_re_ent9()", type_label=function_definition];
787 [label="144_ (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n787-new_variable-145-145", method="buyTicket_re_ent9()", type_label=new_variable];
805 [label="145_ if\n805-if-146-147", method="buyTicket_re_ent9()", type_label=if];
2579 [label="145_ end_if", method="buyTicket_re_ent9()", type_label=end_if];
810 [label="147_ lastPlayer_re_ent9 = msg.sender;\n810-expression_statement-148-148", method="buyTicket_re_ent9()", type_label=expression_statement];
816 [label="148_ jackpot_re_ent9    = address(this).balance;\n816-expression_statement-149-149", method="buyTicket_re_ent9()", type_label=expression_statement];
824 [label="150_ uint256 public finalPrice;\n824-new_variable-151-151", method="", type_label=new_variable];
829 [label="151_ mapping(address => uint) redeemableEther_re_ent25;\n829-new_variable-152-152", method="", type_label=new_variable];
835 [label="152_ function claimReward_re_ent25() public {        \n        require(redeemableEther_re_ent25[msg.sender] > 0);\n        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n        msg.sender.transfer(transferValue_re_ent25);    \n        redeemableEther_re_ent25[msg.sender] = 0;\n    }\n835-function_definition-153-158", method="claimReward_re_ent25()", type_label=function_definition];
839 [label="153_ require(redeemableEther_re_ent25[msg.sender] > 0);\n839-expression_statement-154-154", method="claimReward_re_ent25()", type_label=expression_statement];
850 [label="154_ uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n850-new_variable-155-155", method="claimReward_re_ent25()", type_label=new_variable];
860 [label="155_ msg.sender.transfer(transferValue_re_ent25);\n860-expression_statement-156-156", method="claimReward_re_ent25()", type_label=expression_statement];
869 [label="156_ redeemableEther_re_ent25[msg.sender] = 0;\n869-expression_statement-157-157", method="claimReward_re_ent25()", type_label=expression_statement];
877 [label="158_ uint constant UP = 1;\n877-new_variable-159-159", method="", type_label=new_variable];
882 [label="159_ mapping(address => uint) userBalance_re_ent19;\n882-new_variable-160-160", method="", type_label=new_variable];
888 [label="160_ function withdrawBalance_re_ent19() public{\n        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent19[msg.sender] = 0;\n    }\n888-function_definition-161-166", method="withdrawBalance_re_ent19()", type_label=function_definition];
892 [label="161_ if\n892-if-162-164", method="withdrawBalance_re_ent19()", type_label=if];
2666 [label="161_ end_if", method="withdrawBalance_re_ent19()", type_label=end_if];
910 [label="164_ userBalance_re_ent19[msg.sender] = 0;\n910-expression_statement-165-165", method="withdrawBalance_re_ent19()", type_label=expression_statement];
918 [label="166_ uint constant DOWN = 0;\n918-new_variable-167-167", method="", type_label=new_variable];
923 [label="167_ modifier byPlayer(){\n        require(msg.sender != oracle);\n        _;\n    }\n923-expression_statement-168-171", method="", type_label=expression_statement];
926 [label="168_ require(msg.sender != oracle);\n926-expression_statement-169-169", method="", type_label=expression_statement];
935 [label="169_ _;\n935-expression_statement-170-170", method="", type_label=expression_statement];
937 [label="171_ modifier byOwner(){\n        require(msg.sender == owner);\n        _;\n    }\n937-expression_statement-172-175", method="", type_label=expression_statement];
940 [label="172_ require(msg.sender == owner);\n940-expression_statement-173-173", method="", type_label=expression_statement];
949 [label="173_ _;\n949-expression_statement-174-174", method="", type_label=expression_statement];
951 [label="175_ modifier byOracle(){\n        require(msg.sender == oracle);\n        _;\n    }\n951-expression_statement-176-179", method="", type_label=expression_statement];
954 [label="176_ require(msg.sender == oracle);\n954-expression_statement-177-177", method="", type_label=expression_statement];
963 [label="177_ _;\n963-expression_statement-178-178", method="", type_label=expression_statement];
965 [label="179_ modifier inState(State expected) {\n        require(state == expected);\n        _;\n    }\n965-expression_statement-180-183", method="", type_label=expression_statement];
973 [label="180_ require(state == expected);\n973-expression_statement-181-181", method="", type_label=expression_statement];
980 [label="181_ _;\n980-expression_statement-182-182", method="", type_label=expression_statement];
988 [label="184_ require(_bet > 0);\n988-expression_statement-185-185", method="", type_label=expression_statement];
995 [label="185_ owner = msg.sender;\n995-expression_statement-186-186", method="", type_label=expression_statement];
1001 [label="186_ state = State.SETUP;\n1001-expression_statement-187-187", method="", type_label=expression_statement];
1007 [label="187_ bet = _bet;\n1007-expression_statement-188-188", method="", type_label=expression_statement];
1015 [label="190_ mapping(address => uint) userBalance_re_ent26;\n1015-new_variable-191-191", method="", type_label=new_variable];
1021 [label="191_ function withdrawBalance_re_ent26() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent26[msg.sender] = 0;\n    }\n1021-function_definition-192-198", method="withdrawBalance_re_ent26()", type_label=function_definition];
1025 [label="192_ (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n1025-new_variable-193-193", method="withdrawBalance_re_ent26()", type_label=new_variable];
1049 [label="193_ if\n1049-if-194-196", method="withdrawBalance_re_ent26()", type_label=if];
2823 [label="193_ end_if", method="withdrawBalance_re_ent26()", type_label=end_if];
1055 [label="196_ userBalance_re_ent26[msg.sender] = 0;\n1055-expression_statement-197-197", method="withdrawBalance_re_ent26()", type_label=expression_statement];
1063 [label="198_ function setOracle(address _oracle) public payable byOwner inState(State.SETUP) {\n        oracle = _oracle;\n        emit OracleSet(oracle);\n    }\n1063-function_definition-199-202", method="setOracle(address _oracle)", type_label=function_definition];
1071 [label="198_ byOwner\n1071-expression_statement-199-199", method="setOracle(address _oracle)", type_label=expression_statement];
1073 [label="198_ inState(State.SETUP)\n1073-expression_statement-199-199", method="setOracle(address _oracle)", type_label=expression_statement];
1080 [label="199_ oracle = _oracle;\n1080-expression_statement-200-200", method="setOracle(address _oracle)", type_label=expression_statement];
1088 [label="202_ bool not_called_re_ent20 = true;\n1088-new_variable-203-203", method="", type_label=new_variable];
1094 [label="203_ function bug_re_ent20() public{\n        require(not_called_re_ent20);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent20 = false;\n    }\n1094-function_definition-204-210", method="bug_re_ent20()", type_label=function_definition];
1098 [label="204_ require(not_called_re_ent20);\n1098-expression_statement-205-205", method="bug_re_ent20()", type_label=expression_statement];
1103 [label="205_ if\n1103-if-206-208", method="bug_re_ent20()", type_label=if];
2877 [label="205_ end_if", method="bug_re_ent20()", type_label=end_if];
1118 [label="208_ not_called_re_ent20 = false;\n1118-expression_statement-209-209", method="bug_re_ent20()", type_label=expression_statement];
1123 [label="210_ function setInitialPrice(uint256 _value) public payable byOracle inState(State.SETUP) {\n        initialPrice = _value;\n        state = State.OPEN;\n        emit GameOpened(initialPrice);\n    }\n1123-function_definition-211-215", method="setInitialPrice(uint256 _value)", type_label=function_definition];
1131 [label="210_ byOracle\n1131-expression_statement-211-211", method="setInitialPrice(uint256 _value)", type_label=expression_statement];
1133 [label="210_ inState(State.SETUP)\n1133-expression_statement-211-211", method="setInitialPrice(uint256 _value)", type_label=expression_statement];
1140 [label="211_ initialPrice = _value;\n1140-expression_statement-212-212", method="setInitialPrice(uint256 _value)", type_label=expression_statement];
1144 [label="212_ state = State.OPEN;\n1144-expression_statement-213-213", method="setInitialPrice(uint256 _value)", type_label=expression_statement];
1154 [label="215_ mapping(address => uint) redeemableEther_re_ent32;\n1154-new_variable-216-216", method="", type_label=new_variable];
1160 [label="216_ function claimReward_re_ent32() public {        \n        require(redeemableEther_re_ent32[msg.sender] > 0);\n        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n        msg.sender.transfer(transferValue_re_ent32);    \n        redeemableEther_re_ent32[msg.sender] = 0;\n    }\n1160-function_definition-217-222", method="claimReward_re_ent32()", type_label=function_definition];
1164 [label="217_ require(redeemableEther_re_ent32[msg.sender] > 0);\n1164-expression_statement-218-218", method="claimReward_re_ent32()", type_label=expression_statement];
1175 [label="218_ uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n1175-new_variable-219-219", method="claimReward_re_ent32()", type_label=new_variable];
1185 [label="219_ msg.sender.transfer(transferValue_re_ent32);\n1185-expression_statement-220-220", method="claimReward_re_ent32()", type_label=expression_statement];
1194 [label="220_ redeemableEther_re_ent32[msg.sender] = 0;\n1194-expression_statement-221-221", method="claimReward_re_ent32()", type_label=expression_statement];
1202 [label="222_ function closeGame() public byOwner inState(State.OPEN){\n        state = State.CLOSED;\n        emit GameClosed();\n    }\n1202-function_definition-223-226", method="closeGame()", type_label=function_definition];
1205 [label="222_ byOwner\n1205-expression_statement-223-223", method="closeGame()", type_label=expression_statement];
1207 [label="222_ inState(State.OPEN)\n1207-expression_statement-223-223", method="closeGame()", type_label=expression_statement];
1214 [label="223_ state = State.CLOSED;\n1214-expression_statement-224-224", method="closeGame()", type_label=expression_statement];
1222 [label="226_ mapping(address => uint) balances_re_ent38;\n1222-new_variable-227-227", method="", type_label=new_variable];
1228 [label="227_ function withdrawFunds_re_ent38 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent38[msg.sender] -= _weiToWithdraw;\n    }\n1228-function_definition-228-232", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=function_definition];
1236 [label="228_ require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n1236-expression_statement-229-229", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
1247 [label="229_ require(msg.sender.send(_weiToWithdraw));\n1247-expression_statement-230-230", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
1259 [label="230_ balances_re_ent38[msg.sender] -= _weiToWithdraw;\n1259-expression_statement-231-231", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
1267 [label="232_ function betUp() public payable byPlayer inState(State.OPEN){\n        require(msg.value == (bet*0.001 ether));\n        guesses[UP].guesses_number++;\n        guesses[UP].players[msg.sender] = PaidStatus.NOT_PAID;\n        emit PlayerBet(msg.sender, UP);\n    }\n1267-function_definition-233-238", method="betUp()", type_label=function_definition];
1271 [label="232_ byPlayer\n1271-expression_statement-233-233", method="betUp()", type_label=expression_statement];
1273 [label="232_ inState(State.OPEN)\n1273-expression_statement-233-233", method="betUp()", type_label=expression_statement];
1280 [label="233_ require(msg.value == (bet*0.001 ether));\n1280-expression_statement-234-234", method="betUp()", type_label=expression_statement];
1293 [label="234_ guesses[UP].guesses_number++;\n1293-expression_statement-235-235", method="betUp()", type_label=expression_statement];
1294 [label="234_ guesses[UP].guesses_number++\n1294-expression_statement-235-235", method="betUp()", type_label=expression_statement];
1300 [label="235_ guesses[UP].players[msg.sender] = PaidStatus.NOT_PAID;\n1300-expression_statement-236-236", method="betUp()", type_label=expression_statement];
1322 [label="238_ mapping(address => uint) redeemableEther_re_ent4;\n1322-new_variable-239-239", method="", type_label=new_variable];
1328 [label="239_ function claimReward_re_ent4() public {        \n        require(redeemableEther_re_ent4[msg.sender] > 0);\n        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n        msg.sender.transfer(transferValue_re_ent4);    \n        redeemableEther_re_ent4[msg.sender] = 0;\n    }\n1328-function_definition-240-245", method="claimReward_re_ent4()", type_label=function_definition];
1332 [label="240_ require(redeemableEther_re_ent4[msg.sender] > 0);\n1332-expression_statement-241-241", method="claimReward_re_ent4()", type_label=expression_statement];
1343 [label="241_ uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n1343-new_variable-242-242", method="claimReward_re_ent4()", type_label=new_variable];
1353 [label="242_ msg.sender.transfer(transferValue_re_ent4);\n1353-expression_statement-243-243", method="claimReward_re_ent4()", type_label=expression_statement];
1362 [label="243_ redeemableEther_re_ent4[msg.sender] = 0;\n1362-expression_statement-244-244", method="claimReward_re_ent4()", type_label=expression_statement];
1370 [label="245_ function betDown() public payable byPlayer inState(State.OPEN){\n        require(msg.value == (bet*0.001 ether));\n        guesses[DOWN].guesses_number++;\n        guesses[DOWN].players[msg.sender] = PaidStatus.NOT_PAID;\n        emit PlayerBet(msg.sender, DOWN);\n    }\n1370-function_definition-246-251", method="betDown()", type_label=function_definition];
1374 [label="245_ byPlayer\n1374-expression_statement-246-246", method="betDown()", type_label=expression_statement];
1376 [label="245_ inState(State.OPEN)\n1376-expression_statement-246-246", method="betDown()", type_label=expression_statement];
1383 [label="246_ require(msg.value == (bet*0.001 ether));\n1383-expression_statement-247-247", method="betDown()", type_label=expression_statement];
1396 [label="247_ guesses[DOWN].guesses_number++;\n1396-expression_statement-248-248", method="betDown()", type_label=expression_statement];
1397 [label="247_ guesses[DOWN].guesses_number++\n1397-expression_statement-248-248", method="betDown()", type_label=expression_statement];
1403 [label="248_ guesses[DOWN].players[msg.sender] = PaidStatus.NOT_PAID;\n1403-expression_statement-249-249", method="betDown()", type_label=expression_statement];
1425 [label="251_ uint256 counter_re_ent7 =0;\n1425-new_variable-252-252", method="", type_label=new_variable];
1430 [label="252_ function callme_re_ent7() public{\n        require(counter_re_ent7<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent7 += 1;\n    }\n1430-function_definition-253-259", method="callme_re_ent7()", type_label=function_definition];
1434 [label="253_ require(counter_re_ent7<=5);\n1434-expression_statement-254-254", method="callme_re_ent7()", type_label=expression_statement];
1441 [label="254_ if\n1441-if-255-257", method="callme_re_ent7()", type_label=if];
3215 [label="254_ end_if", method="callme_re_ent7()", type_label=end_if];
1456 [label="257_ counter_re_ent7 += 1;\n1456-expression_statement-258-258", method="callme_re_ent7()", type_label=expression_statement];
1460 [label="259_ function setFinalPrice(uint256 _value) public payable byOracle inState(State.CLOSED) {\n        finalPrice = _value;\n        emit FinalPriceSet(finalPrice);\n        if(finalPrice > initialPrice){\n            result = UP;\n        }else{\n            result = DOWN;\n        }\n        if(guesses[result].guesses_number > 0){\n            state = State.PLAYERS_WIN;\n            splitJackpot = getBalance()/guesses[result].guesses_number;\n            emit PlayersWin(result, splitJackpot);\n        }else{\n            state = State.OWNER_WIN;\n            emit OwnerWins(owner);\n        }\n    }\n1460-function_definition-260-276", method="setFinalPrice(uint256 _value)", type_label=function_definition];
1468 [label="259_ byOracle\n1468-expression_statement-260-260", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1470 [label="259_ inState(State.CLOSED)\n1470-expression_statement-260-260", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1477 [label="260_ finalPrice = _value;\n1477-expression_statement-261-261", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1485 [label="262_ if_finalPrice > initialPrice\n1485-if-263-267", method="setFinalPrice(uint256 _value)", type_label=if];
3259 [label="262_ end_if", method="setFinalPrice(uint256 _value)", type_label=end_if];
1490 [label="263_ result = UP;\n1490-expression_statement-264-264", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1495 [label="265_ result = DOWN;\n1495-expression_statement-266-266", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1499 [label="267_ if_guesses[result].guesses_number > 0\n1499-if-268-275", method="setFinalPrice(uint256 _value)", type_label=if];
3273 [label="267_ end_if", method="setFinalPrice(uint256 _value)", type_label=end_if];
1508 [label="268_ state = State.PLAYERS_WIN;\n1508-expression_statement-269-269", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1514 [label="269_ splitJackpot = getBalance()/guesses[result].guesses_number;\n1514-expression_statement-270-270", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1532 [label="272_ state = State.OWNER_WIN;\n1532-expression_statement-273-273", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1542 [label="276_ address payable lastPlayer_re_ent23;\n1542-new_variable-277-277", method="", type_label=new_variable];
1546 [label="277_ uint jackpot_re_ent23;\n1546-new_variable-278-278", method="", type_label=new_variable];
1550 [label="278_ function buyTicket_re_ent23() public{\n	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))\n        revert();\n      lastPlayer_re_ent23 = msg.sender;\n      jackpot_re_ent23    = address(this).balance;\n    }\n1550-function_definition-279-284", method="buyTicket_re_ent23()", type_label=function_definition];
1554 [label="279_ if\n1554-if-280-281", method="buyTicket_re_ent23()", type_label=if];
3328 [label="279_ end_if", method="buyTicket_re_ent23()", type_label=end_if];
1565 [label="281_ lastPlayer_re_ent23 = msg.sender;\n1565-expression_statement-282-282", method="buyTicket_re_ent23()", type_label=expression_statement];
1571 [label="282_ jackpot_re_ent23    = address(this).balance;\n1571-expression_statement-283-283", method="buyTicket_re_ent23()", type_label=expression_statement];
1579 [label="284_ function collectOwnerWinnings() public byOwner inState(State.OWNER_WIN){\n        selfdestruct(owner);\n    }\n1579-function_definition-285-287", method="collectOwnerWinnings()", type_label=function_definition];
1582 [label="284_ byOwner\n1582-expression_statement-285-285", method="collectOwnerWinnings()", type_label=expression_statement];
1584 [label="284_ inState(State.OWNER_WIN)\n1584-expression_statement-285-285", method="collectOwnerWinnings()", type_label=expression_statement];
1591 [label="285_ selfdestruct(owner);\n1591-expression_statement-286-286", method="collectOwnerWinnings()", type_label=expression_statement];
1596 [label="287_ uint256 counter_re_ent14 =0;\n1596-new_variable-288-288", method="", type_label=new_variable];
1601 [label="288_ function callme_re_ent14() public{\n        require(counter_re_ent14<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent14 += 1;\n    }\n1601-function_definition-289-295", method="callme_re_ent14()", type_label=function_definition];
1605 [label="289_ require(counter_re_ent14<=5);\n1605-expression_statement-290-290", method="callme_re_ent14()", type_label=expression_statement];
1612 [label="290_ if\n1612-if-291-293", method="callme_re_ent14()", type_label=if];
3386 [label="290_ end_if", method="callme_re_ent14()", type_label=end_if];
1627 [label="293_ counter_re_ent14 += 1;\n1627-expression_statement-294-294", method="callme_re_ent14()", type_label=expression_statement];
1631 [label="295_ function collectPlayerWinnings() public byPlayer inState(State.PLAYERS_WIN){\n        if(guesses[result].players[msg.sender] == PaidStatus.NOT_PAID){\n            guesses[result].players[msg.sender] = PaidStatus.PAID;\n            msg.sender.transfer(splitJackpot);\n        } else revert();\n    }\n1631-function_definition-296-301", method="collectPlayerWinnings()", type_label=function_definition];
1634 [label="295_ byPlayer\n1634-expression_statement-296-296", method="collectPlayerWinnings()", type_label=expression_statement];
1636 [label="295_ inState(State.PLAYERS_WIN)\n1636-expression_statement-296-296", method="collectPlayerWinnings()", type_label=expression_statement];
1643 [label="296_ if_guesses[result].players[msg.sender] == PaidStatus.NOT_PAID\n1643-if-297-300", method="collectPlayerWinnings()", type_label=if];
3417 [label="296_ end_if", method="collectPlayerWinnings()", type_label=end_if];
1658 [label="297_ guesses[result].players[msg.sender] = PaidStatus.PAID;\n1658-expression_statement-298-298", method="collectPlayerWinnings()", type_label=expression_statement];
1672 [label="298_ msg.sender.transfer(splitJackpot);\n1672-expression_statement-299-299", method="collectPlayerWinnings()", type_label=expression_statement];
1683 [label="301_ address payable lastPlayer_re_ent30;\n1683-new_variable-302-302", method="", type_label=new_variable];
1687 [label="302_ uint jackpot_re_ent30;\n1687-new_variable-303-303", method="", type_label=new_variable];
1691 [label="303_ function buyTicket_re_ent30() public{\n	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))\n        revert();\n      lastPlayer_re_ent30 = msg.sender;\n      jackpot_re_ent30    = address(this).balance;\n    }\n1691-function_definition-304-309", method="buyTicket_re_ent30()", type_label=function_definition];
1695 [label="304_ if\n1695-if-305-306", method="buyTicket_re_ent30()", type_label=if];
3469 [label="304_ end_if", method="buyTicket_re_ent30()", type_label=end_if];
1706 [label="306_ lastPlayer_re_ent30 = msg.sender;\n1706-expression_statement-307-307", method="buyTicket_re_ent30()", type_label=expression_statement];
1712 [label="307_ jackpot_re_ent30    = address(this).balance;\n1712-expression_statement-308-308", method="buyTicket_re_ent30()", type_label=expression_statement];
1720 [label="309_ function getBalance() private view returns (uint256){\n        return address(this).balance;\n    }\n1720-function_definition-310-312", method="getBalance()", type_label=function_definition];
1729 [label="310_ return address(this).balance;\n1729-return-311-311", method="getBalance()", type_label=return];
1735 [label="312_ mapping(address => uint) balances_re_ent8;\n1735-new_variable-313-313", method="", type_label=new_variable];
1741 [label="313_ function withdraw_balances_re_ent8 () public {\n       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent8[msg.sender] = 0;\n      }\n1741-function_definition-314-318", method="withdraw_balances_re_ent8()", type_label=function_definition];
1745 [label="314_ (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n1745-new_variable-315-315", method="withdraw_balances_re_ent8()", type_label=new_variable];
1769 [label="315_ if\n1769-if-316-317", method="withdraw_balances_re_ent8()", type_label=if];
3543 [label="315_ end_if", method="withdraw_balances_re_ent8()", type_label=end_if];
1771 [label="316_ balances_re_ent8[msg.sender] = 0;\n1771-expression_statement-317-317", method="withdraw_balances_re_ent8()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
98;
1538;
1682;
19 -> 23  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
23 -> 34  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
34 -> 44  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 53  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 90  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
77 -> 1851  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1851 -> 98  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
90 -> 1851  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
109 -> 113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
113 -> 120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
120 -> 1894  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
147 -> 151  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 1949  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
201 -> 205  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
205 -> 229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
229 -> 2003  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
255 -> 259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
259 -> 264  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
264 -> 2038  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
300 -> 308  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
308 -> 319  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
319 -> 331  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
355 -> 359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
359 -> 364  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
385 -> 2159  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
415 -> 428  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
434 -> 438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 462  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
462 -> 464  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
462 -> 2236  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2236 -> 472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
464 -> 2236  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
472 -> 477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
483 -> 487  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
487 -> 492  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
492 -> 2266  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
512 -> 517  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
522 -> 526  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
526 -> 533  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
533 -> 2307  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
552 -> 558  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
558 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
566 -> 570  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
570 -> 2344  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
581 -> 587  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
595 -> 603  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
609 -> 617  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
617 -> 628  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
628 -> 648  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
648 -> 653  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 666  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
666 -> 670  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
670 -> 674  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
678 -> 682  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
682 -> 2456  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
693 -> 699  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
707 -> 712  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
718 -> 726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
726 -> 737  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
737 -> 757  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
757 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
770 -> 775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
775 -> 779  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
783 -> 787  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
787 -> 805  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
805 -> 2579  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
810 -> 816  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
824 -> 829  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
835 -> 839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
839 -> 850  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
850 -> 860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
860 -> 869  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
877 -> 882  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
888 -> 892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
892 -> 2666  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
918 -> 923  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
923 -> 937  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
926 -> 935  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
937 -> 951  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
940 -> 949  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
951 -> 965  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
954 -> 963  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
973 -> 980  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
988 -> 995  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
995 -> 1001  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1001 -> 1007  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1021 -> 1025  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1025 -> 1049  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1049 -> 2823  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1063 -> 1080  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1071 -> 1073  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1094 -> 1098  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1098 -> 1103  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1103 -> 2877  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1123 -> 1140  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1131 -> 1133  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1140 -> 1144  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1160 -> 1164  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1164 -> 1175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1175 -> 1185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1185 -> 1194  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1202 -> 1214  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1205 -> 1207  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1228 -> 1236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1236 -> 1247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1247 -> 1259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1267 -> 1280  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1271 -> 1273  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1280 -> 1293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1293 -> 1300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1328 -> 1332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1332 -> 1343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1343 -> 1353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1353 -> 1362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1370 -> 1383  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1374 -> 1376  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1383 -> 1396  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1396 -> 1403  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1430 -> 1434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1434 -> 1441  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1441 -> 3215  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1460 -> 1477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1468 -> 1470  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1485 -> 1490  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1485 -> 1495  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3259 -> 1499  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1490 -> 3259  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1495 -> 3259  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1499 -> 1508  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1499 -> 1532  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1508 -> 1514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1542 -> 1546  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1550 -> 1554  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1554 -> 3328  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1565 -> 1571  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1579 -> 1591  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1582 -> 1584  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1601 -> 1605  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1605 -> 1612  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1612 -> 3386  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1631 -> 1643  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1634 -> 1636  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1643 -> 1658  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1643 -> 1658  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=1, label=neg_next];
3417 -> 1683  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1658 -> 1672  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1672 -> 3417  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1683 -> 1687  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1691 -> 1695  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1695 -> 3469  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1706 -> 1712  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1720 -> 1729  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1729 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1741 -> 1745  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1745 -> 1769  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1769 -> 1771  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1769 -> 3543  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3543 -> 2  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1771 -> 3543  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1538 -> 3273  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1682 -> 3417  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
}
