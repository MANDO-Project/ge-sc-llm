digraph  {
13 [label="2_ function totalSupply() public view returns (uint);\n13-function_definition-3-3", method="totalSupply()", type_label=function_definition];
21 [label="3_ mapping(address => uint) balances_re_ent17;\n21-new_variable-4-4", method="", type_label=new_variable];
27 [label="4_ function withdrawFunds_re_ent17 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent17[msg.sender] >= _weiToWithdraw);\n        (bool success,)=msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent17[msg.sender] -= _weiToWithdraw;\n    }\n27-function_definition-5-10", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=function_definition];
35 [label="5_ require(balances_re_ent17[msg.sender] >= _weiToWithdraw);\n35-expression_statement-6-6", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
46 [label="6_ (bool success,)=msg.sender.call.value(_weiToWithdraw)(\"\");\n46-new_variable-7-7", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=new_variable];
66 [label="7_ require(success);\n66-expression_statement-8-8", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
71 [label="8_ balances_re_ent17[msg.sender] -= _weiToWithdraw;\n71-expression_statement-9-9", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
79 [label="10_ function balanceOf(address tokenOwner) public view returns (uint balance);\n79-function_definition-11-11", method="balanceOf(address tokenOwner)", type_label=function_definition];
92 [label="11_ address payable lastPlayer_re_ent37;\n92-new_variable-12-12", method="", type_label=new_variable];
96 [label="12_ uint jackpot_re_ent37;\n96-new_variable-13-13", method="", type_label=new_variable];
100 [label="13_ function buyTicket_re_ent37() public{\n	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))\n        revert();\n      lastPlayer_re_ent37 = msg.sender;\n      jackpot_re_ent37    = address(this).balance;\n    }\n100-function_definition-14-19", method="buyTicket_re_ent37()", type_label=function_definition];
104 [label="14_ if\n104-if-15-16", method="buyTicket_re_ent37()", type_label=if];
2642 [label="14_ end_if", method="buyTicket_re_ent37()", type_label=end_if];
115 [label="16_ lastPlayer_re_ent37 = msg.sender;\n115-expression_statement-17-17", method="buyTicket_re_ent37()", type_label=expression_statement];
121 [label="17_ jackpot_re_ent37    = address(this).balance;\n121-expression_statement-18-18", method="buyTicket_re_ent37()", type_label=expression_statement];
129 [label="19_ function transfer(address to, uint tokens) public returns (bool success);\n129-function_definition-20-20", method="transfer(address to,uint tokens)", type_label=function_definition];
145 [label="20_ mapping(address => uint) balances_re_ent3;\n145-new_variable-21-21", method="", type_label=new_variable];
151 [label="21_ function withdrawFunds_re_ent3 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n	(bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent3[msg.sender] -= _weiToWithdraw;\n    }\n151-function_definition-22-27", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=function_definition];
159 [label="22_ require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n159-expression_statement-23-23", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
170 [label="23_ (bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n170-new_variable-24-24", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=new_variable];
190 [label="24_ require(success);\n190-expression_statement-25-25", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
195 [label="25_ balances_re_ent3[msg.sender] -= _weiToWithdraw;\n195-expression_statement-26-26", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
203 [label="27_ function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n203-function_definition-28-28", method="allowance(address tokenOwner,address spender)", type_label=function_definition];
220 [label="28_ address payable lastPlayer_re_ent9;\n220-new_variable-29-29", method="", type_label=new_variable];
224 [label="29_ uint jackpot_re_ent9;\n224-new_variable-30-30", method="", type_label=new_variable];
228 [label="30_ function buyTicket_re_ent9() public{\n	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n	    if (!success)\n	        revert();\n      lastPlayer_re_ent9 = msg.sender;\n      jackpot_re_ent9    = address(this).balance;\n    }\n228-function_definition-31-37", method="buyTicket_re_ent9()", type_label=function_definition];
232 [label="31_ (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n232-new_variable-32-32", method="buyTicket_re_ent9()", type_label=new_variable];
250 [label="32_ if\n250-if-33-34", method="buyTicket_re_ent9()", type_label=if];
2788 [label="32_ end_if", method="buyTicket_re_ent9()", type_label=end_if];
255 [label="34_ lastPlayer_re_ent9 = msg.sender;\n255-expression_statement-35-35", method="buyTicket_re_ent9()", type_label=expression_statement];
261 [label="35_ jackpot_re_ent9    = address(this).balance;\n261-expression_statement-36-36", method="buyTicket_re_ent9()", type_label=expression_statement];
269 [label="37_ function approve(address spender, uint tokens) public returns (bool success);\n269-function_definition-38-38", method="approve(address spender,uint tokens)", type_label=function_definition];
285 [label="38_ mapping(address => uint) redeemableEther_re_ent25;\n285-new_variable-39-39", method="", type_label=new_variable];
291 [label="39_ function claimReward_re_ent25() public {        \n        require(redeemableEther_re_ent25[msg.sender] > 0);\n        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n        msg.sender.transfer(transferValue_re_ent25);    \n        redeemableEther_re_ent25[msg.sender] = 0;\n    }\n291-function_definition-40-45", method="claimReward_re_ent25()", type_label=function_definition];
295 [label="40_ require(redeemableEther_re_ent25[msg.sender] > 0);\n295-expression_statement-41-41", method="claimReward_re_ent25()", type_label=expression_statement];
306 [label="41_ uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n306-new_variable-42-42", method="claimReward_re_ent25()", type_label=new_variable];
316 [label="42_ msg.sender.transfer(transferValue_re_ent25);\n316-expression_statement-43-43", method="claimReward_re_ent25()", type_label=expression_statement];
325 [label="43_ redeemableEther_re_ent25[msg.sender] = 0;\n325-expression_statement-44-44", method="claimReward_re_ent25()", type_label=expression_statement];
333 [label="45_ function transferFrom(address from, address to, uint tokens) public returns (bool success);\n333-function_definition-46-46", method="transferFrom(address from,address to,uint tokens)", type_label=function_definition];
353 [label="46_ mapping(address => uint) userBalance_re_ent19;\n353-new_variable-47-47", method="", type_label=new_variable];
359 [label="47_ function withdrawBalance_re_ent19() public{\n        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent19[msg.sender] = 0;\n    }\n359-function_definition-48-53", method="withdrawBalance_re_ent19()", type_label=function_definition];
363 [label="48_ if\n363-if-49-51", method="withdrawBalance_re_ent19()", type_label=if];
2901 [label="48_ end_if", method="withdrawBalance_re_ent19()", type_label=end_if];
381 [label="51_ userBalance_re_ent19[msg.sender] = 0;\n381-expression_statement-52-52", method="withdrawBalance_re_ent19()", type_label=expression_statement];
423 [label="57_ bool not_called_re_ent6 = true;\n423-new_variable-58-58", method="", type_label=new_variable];
429 [label="58_ function bug_re_ent6() public{\n        require(not_called_re_ent6);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent6 = false;\n    }\n429-function_definition-59-65", method="bug_re_ent6()", type_label=function_definition];
433 [label="59_ require(not_called_re_ent6);\n433-expression_statement-60-60", method="bug_re_ent6()", type_label=expression_statement];
438 [label="60_ if\n438-if-61-63", method="bug_re_ent6()", type_label=if];
2976 [label="60_ end_if", method="bug_re_ent6()", type_label=end_if];
453 [label="63_ not_called_re_ent6 = false;\n453-expression_statement-64-64", method="bug_re_ent6()", type_label=expression_statement];
458 [label="65_ string public name = \"Acunar\";\n458-new_variable-66-66", method="", type_label=new_variable];
465 [label="66_ address payable lastPlayer_re_ent16;\n465-new_variable-67-67", method="", type_label=new_variable];
469 [label="67_ uint jackpot_re_ent16;\n469-new_variable-68-68", method="", type_label=new_variable];
473 [label="68_ function buyTicket_re_ent16() public{\n	    if (!(lastPlayer_re_ent16.send(jackpot_re_ent16)))\n        revert();\n      lastPlayer_re_ent16 = msg.sender;\n      jackpot_re_ent16    = address(this).balance;\n    }\n473-function_definition-69-74", method="buyTicket_re_ent16()", type_label=function_definition];
477 [label="69_ if\n477-if-70-71", method="buyTicket_re_ent16()", type_label=if];
3015 [label="69_ end_if", method="buyTicket_re_ent16()", type_label=end_if];
488 [label="71_ lastPlayer_re_ent16 = msg.sender;\n488-expression_statement-72-72", method="buyTicket_re_ent16()", type_label=expression_statement];
494 [label="72_ jackpot_re_ent16    = address(this).balance;\n494-expression_statement-73-73", method="buyTicket_re_ent16()", type_label=expression_statement];
502 [label="74_ string public symbol = \"ACN\";\n502-new_variable-75-75", method="", type_label=new_variable];
509 [label="75_ mapping(address => uint) balances_re_ent24;\n509-new_variable-76-76", method="", type_label=new_variable];
515 [label="76_ function withdrawFunds_re_ent24 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent24[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent24[msg.sender] -= _weiToWithdraw;\n    }\n515-function_definition-77-81", method="withdrawFunds_re_ent24(uint256 _weiToWithdraw)", type_label=function_definition];
523 [label="77_ require(balances_re_ent24[msg.sender] >= _weiToWithdraw);\n523-expression_statement-78-78", method="withdrawFunds_re_ent24(uint256 _weiToWithdraw)", type_label=expression_statement];
534 [label="78_ require(msg.sender.send(_weiToWithdraw));\n534-expression_statement-79-79", method="withdrawFunds_re_ent24(uint256 _weiToWithdraw)", type_label=expression_statement];
546 [label="79_ balances_re_ent24[msg.sender] -= _weiToWithdraw;\n546-expression_statement-80-80", method="withdrawFunds_re_ent24(uint256 _weiToWithdraw)", type_label=expression_statement];
554 [label="81_ uint public decimals = 0;\n554-new_variable-82-82", method="", type_label=new_variable];
560 [label="82_ mapping(address => uint) userBalance_re_ent5;\n560-new_variable-83-83", method="", type_label=new_variable];
566 [label="83_ function withdrawBalance_re_ent5() public{\n        if( ! (msg.sender.send(userBalance_re_ent5[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent5[msg.sender] = 0;\n    }\n566-function_definition-84-89", method="withdrawBalance_re_ent5()", type_label=function_definition];
570 [label="84_ if\n570-if-85-87", method="withdrawBalance_re_ent5()", type_label=if];
3108 [label="84_ end_if", method="withdrawBalance_re_ent5()", type_label=end_if];
588 [label="87_ userBalance_re_ent5[msg.sender] = 0;\n588-expression_statement-88-88", method="withdrawBalance_re_ent5()", type_label=expression_statement];
596 [label="89_ uint public supply;\n596-new_variable-90-90", method="", type_label=new_variable];
601 [label="90_ mapping(address => uint) balances_re_ent15;\n601-new_variable-91-91", method="", type_label=new_variable];
607 [label="91_ function withdraw_balances_re_ent15 () public {\n       if (msg.sender.send(balances_re_ent15[msg.sender ]))\n          balances_re_ent15[msg.sender] = 0;\n      }\n607-function_definition-92-95", method="withdraw_balances_re_ent15()", type_label=function_definition];
611 [label="92_ if\n611-if-93-94", method="withdraw_balances_re_ent15()", type_label=if];
3149 [label="92_ end_if", method="withdraw_balances_re_ent15()", type_label=end_if];
624 [label="93_ balances_re_ent15[msg.sender] = 0;\n624-expression_statement-94-94", method="withdraw_balances_re_ent15()", type_label=expression_statement];
632 [label="95_ address public founder;\n632-new_variable-96-96", method="", type_label=new_variable];
637 [label="96_ uint256 counter_re_ent28 =0;\n637-new_variable-97-97", method="", type_label=new_variable];
642 [label="97_ function callme_re_ent28() public{\n        require(counter_re_ent28<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent28 += 1;\n    }\n642-function_definition-98-104", method="callme_re_ent28()", type_label=function_definition];
646 [label="98_ require(counter_re_ent28<=5);\n646-expression_statement-99-99", method="callme_re_ent28()", type_label=expression_statement];
653 [label="99_ if\n653-if-100-102", method="callme_re_ent28()", type_label=if];
3191 [label="99_ end_if", method="callme_re_ent28()", type_label=end_if];
668 [label="102_ counter_re_ent28 += 1;\n668-expression_statement-103-103", method="callme_re_ent28()", type_label=expression_statement];
672 [label="104_ mapping(address => uint) public balances;\n672-new_variable-105-105", method="", type_label=new_variable];
679 [label="105_ bool not_called_re_ent34 = true;\n679-new_variable-106-106", method="", type_label=new_variable];
685 [label="106_ function bug_re_ent34() public{\n        require(not_called_re_ent34);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent34 = false;\n    }\n685-function_definition-107-113", method="bug_re_ent34()", type_label=function_definition];
689 [label="107_ require(not_called_re_ent34);\n689-expression_statement-108-108", method="bug_re_ent34()", type_label=expression_statement];
694 [label="108_ if\n694-if-109-111", method="bug_re_ent34()", type_label=if];
3232 [label="108_ end_if", method="bug_re_ent34()", type_label=end_if];
709 [label="111_ not_called_re_ent34 = false;\n709-expression_statement-112-112", method="bug_re_ent34()", type_label=expression_statement];
714 [label="113_ mapping(address => mapping(address => uint)) allowed;\n714-new_variable-114-114", method="", type_label=new_variable];
752 [label="117_ supply = 200000000;\n752-expression_statement-118-118", method="", type_label=expression_statement];
756 [label="118_ founder = msg.sender;\n756-expression_statement-119-119", method="", type_label=expression_statement];
762 [label="119_ balances[founder] = supply;\n762-expression_statement-120-120", method="", type_label=expression_statement];
768 [label="121_ mapping(address => uint) userBalance_re_ent26;\n768-new_variable-122-122", method="", type_label=new_variable];
774 [label="122_ function withdrawBalance_re_ent26() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent26[msg.sender] = 0;\n    }\n774-function_definition-123-129", method="withdrawBalance_re_ent26()", type_label=function_definition];
778 [label="123_ (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n778-new_variable-124-124", method="withdrawBalance_re_ent26()", type_label=new_variable];
802 [label="124_ if\n802-if-125-127", method="withdrawBalance_re_ent26()", type_label=if];
3340 [label="124_ end_if", method="withdrawBalance_re_ent26()", type_label=end_if];
808 [label="127_ userBalance_re_ent26[msg.sender] = 0;\n808-expression_statement-128-128", method="withdrawBalance_re_ent26()", type_label=expression_statement];
816 [label="129_ function allowance(address tokenOwner, address spender) view public returns(uint){\n        return allowed[tokenOwner][spender];\n    }\n816-function_definition-130-132", method="allowance(address tokenOwner,address spender)", type_label=function_definition];
833 [label="130_ return allowed[tokenOwner][spender];\n833-return-131-131", method="allowance(address tokenOwner,address spender)", type_label=return];
839 [label="132_ bool not_called_re_ent20 = true;\n839-new_variable-133-133", method="", type_label=new_variable];
845 [label="133_ function bug_re_ent20() public{\n        require(not_called_re_ent20);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent20 = false;\n    }\n845-function_definition-134-140", method="bug_re_ent20()", type_label=function_definition];
849 [label="134_ require(not_called_re_ent20);\n849-expression_statement-135-135", method="bug_re_ent20()", type_label=expression_statement];
854 [label="135_ if\n854-if-136-138", method="bug_re_ent20()", type_label=if];
3392 [label="135_ end_if", method="bug_re_ent20()", type_label=end_if];
869 [label="138_ not_called_re_ent20 = false;\n869-expression_statement-139-139", method="bug_re_ent20()", type_label=expression_statement];
874 [label="140_ function approve(address spender, uint tokens) public returns(bool){\n        require(balances[msg.sender] >= tokens);\n        require(tokens > 0);\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n874-function_definition-141-147", method="approve(address spender,uint tokens)", type_label=function_definition];
890 [label="141_ require(balances[msg.sender] >= tokens);\n890-expression_statement-142-142", method="approve(address spender,uint tokens)", type_label=expression_statement];
901 [label="142_ require(tokens > 0);\n901-expression_statement-143-143", method="approve(address spender,uint tokens)", type_label=expression_statement];
908 [label="143_ allowed[msg.sender][spender] = tokens;\n908-expression_statement-144-144", method="approve(address spender,uint tokens)", type_label=expression_statement];
928 [label="145_ return true;\n928-return-146-146", method="approve(address spender,uint tokens)", type_label=return];
931 [label="147_ mapping(address => uint) redeemableEther_re_ent32;\n931-new_variable-148-148", method="", type_label=new_variable];
937 [label="148_ function claimReward_re_ent32() public {        \n        require(redeemableEther_re_ent32[msg.sender] > 0);\n        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n        msg.sender.transfer(transferValue_re_ent32);    \n        redeemableEther_re_ent32[msg.sender] = 0;\n    }\n937-function_definition-149-154", method="claimReward_re_ent32()", type_label=function_definition];
941 [label="149_ require(redeemableEther_re_ent32[msg.sender] > 0);\n941-expression_statement-150-150", method="claimReward_re_ent32()", type_label=expression_statement];
952 [label="150_ uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n952-new_variable-151-151", method="claimReward_re_ent32()", type_label=new_variable];
962 [label="151_ msg.sender.transfer(transferValue_re_ent32);\n962-expression_statement-152-152", method="claimReward_re_ent32()", type_label=expression_statement];
971 [label="152_ redeemableEther_re_ent32[msg.sender] = 0;\n971-expression_statement-153-153", method="claimReward_re_ent32()", type_label=expression_statement];
979 [label="154_ function transferFrom(address from, address to, uint tokens) public returns(bool){\n        require(allowed[from][to] >= tokens);\n        require(balances[from] >= tokens);\n        balances[from] -= tokens;\n        balances[to] += tokens;\n        allowed[from][to] -= tokens;\n        return true;\n    }\n979-function_definition-155-162", method="transferFrom(address from,address to,uint tokens)", type_label=function_definition];
999 [label="155_ require(allowed[from][to] >= tokens);\n999-expression_statement-156-156", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
1010 [label="156_ require(balances[from] >= tokens);\n1010-expression_statement-157-157", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
1019 [label="157_ balances[from] -= tokens;\n1019-expression_statement-158-158", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
1025 [label="158_ balances[to] += tokens;\n1025-expression_statement-159-159", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
1031 [label="159_ allowed[from][to] -= tokens;\n1031-expression_statement-160-160", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
1039 [label="160_ return true;\n1039-return-161-161", method="transferFrom(address from,address to,uint tokens)", type_label=return];
1042 [label="162_ mapping(address => uint) balances_re_ent38;\n1042-new_variable-163-163", method="", type_label=new_variable];
1048 [label="163_ function withdrawFunds_re_ent38 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent38[msg.sender] -= _weiToWithdraw;\n    }\n1048-function_definition-164-168", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=function_definition];
1056 [label="164_ require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n1056-expression_statement-165-165", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
1067 [label="165_ require(msg.sender.send(_weiToWithdraw));\n1067-expression_statement-166-166", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
1079 [label="166_ balances_re_ent38[msg.sender] -= _weiToWithdraw;\n1079-expression_statement-167-167", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
1087 [label="168_ function totalSupply() public view returns (uint){\n        return supply;\n    }\n1087-function_definition-169-171", method="totalSupply()", type_label=function_definition];
1096 [label="169_ return supply;\n1096-return-170-170", method="totalSupply()", type_label=return];
1098 [label="171_ mapping(address => uint) redeemableEther_re_ent4;\n1098-new_variable-172-172", method="", type_label=new_variable];
1104 [label="172_ function claimReward_re_ent4() public {        \n        require(redeemableEther_re_ent4[msg.sender] > 0);\n        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n        msg.sender.transfer(transferValue_re_ent4);    \n        redeemableEther_re_ent4[msg.sender] = 0;\n    }\n1104-function_definition-173-178", method="claimReward_re_ent4()", type_label=function_definition];
1108 [label="173_ require(redeemableEther_re_ent4[msg.sender] > 0);\n1108-expression_statement-174-174", method="claimReward_re_ent4()", type_label=expression_statement];
1119 [label="174_ uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n1119-new_variable-175-175", method="claimReward_re_ent4()", type_label=new_variable];
1129 [label="175_ msg.sender.transfer(transferValue_re_ent4);\n1129-expression_statement-176-176", method="claimReward_re_ent4()", type_label=expression_statement];
1138 [label="176_ redeemableEther_re_ent4[msg.sender] = 0;\n1138-expression_statement-177-177", method="claimReward_re_ent4()", type_label=expression_statement];
1146 [label="178_ function balanceOf(address tokenOwner) public view returns (uint balance){\n         return balances[tokenOwner];\n     }\n1146-function_definition-179-181", method="balanceOf(address tokenOwner)", type_label=function_definition];
1160 [label="179_ return balances[tokenOwner];\n1160-return-180-180", method="balanceOf(address tokenOwner)", type_label=return];
1164 [label="181_ uint256 counter_re_ent7 =0;\n1164-new_variable-182-182", method="", type_label=new_variable];
1169 [label="182_ function callme_re_ent7() public{\n        require(counter_re_ent7<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent7 += 1;\n    }\n1169-function_definition-183-189", method="callme_re_ent7()", type_label=function_definition];
1173 [label="183_ require(counter_re_ent7<=5);\n1173-expression_statement-184-184", method="callme_re_ent7()", type_label=expression_statement];
1180 [label="184_ if\n1180-if-185-187", method="callme_re_ent7()", type_label=if];
3718 [label="184_ end_if", method="callme_re_ent7()", type_label=end_if];
1195 [label="187_ counter_re_ent7 += 1;\n1195-expression_statement-188-188", method="callme_re_ent7()", type_label=expression_statement];
1199 [label="189_ function transfer(address to, uint tokens) public returns (bool success){\n         require(balances[msg.sender] >= tokens && tokens > 0);\n         balances[to] += tokens;\n         balances[msg.sender] -= tokens;\n         emit Transfer(msg.sender, to, tokens);\n         return true;\n     }\n1199-function_definition-190-196", method="transfer(address to,uint tokens)", type_label=function_definition];
1216 [label="190_ require(balances[msg.sender] >= tokens && tokens > 0);\n1216-expression_statement-191-191", method="transfer(address to,uint tokens)", type_label=expression_statement];
1231 [label="191_ balances[to] += tokens;\n1231-expression_statement-192-192", method="transfer(address to,uint tokens)", type_label=expression_statement];
1237 [label="192_ balances[msg.sender] -= tokens;\n1237-expression_statement-193-193", method="transfer(address to,uint tokens)", type_label=expression_statement];
1255 [label="194_ return true;\n1255-return-195-195", method="transfer(address to,uint tokens)", type_label=return];
1258 [label="196_ address payable lastPlayer_re_ent23;\n1258-new_variable-197-197", method="", type_label=new_variable];
1262 [label="197_ uint jackpot_re_ent23;\n1262-new_variable-198-198", method="", type_label=new_variable];
1266 [label="198_ function buyTicket_re_ent23() public{\n	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))\n        revert();\n      lastPlayer_re_ent23 = msg.sender;\n      jackpot_re_ent23    = address(this).balance;\n    }\n1266-function_definition-199-204", method="buyTicket_re_ent23()", type_label=function_definition];
1270 [label="199_ if\n1270-if-200-201", method="buyTicket_re_ent23()", type_label=if];
3808 [label="199_ end_if", method="buyTicket_re_ent23()", type_label=end_if];
1281 [label="201_ lastPlayer_re_ent23 = msg.sender;\n1281-expression_statement-202-202", method="buyTicket_re_ent23()", type_label=expression_statement];
1287 [label="202_ jackpot_re_ent23    = address(this).balance;\n1287-expression_statement-203-203", method="buyTicket_re_ent23()", type_label=expression_statement];
1301 [label="206_ uint256 counter_re_ent21 =0;\n1301-new_variable-207-207", method="", type_label=new_variable];
1306 [label="207_ function callme_re_ent21() public{\n        require(counter_re_ent21<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent21 += 1;\n    }\n1306-function_definition-208-214", method="callme_re_ent21()", type_label=function_definition];
1310 [label="208_ require(counter_re_ent21<=5);\n1310-expression_statement-209-209", method="callme_re_ent21()", type_label=expression_statement];
1317 [label="209_ if\n1317-if-210-212", method="callme_re_ent21()", type_label=if];
3855 [label="209_ end_if", method="callme_re_ent21()", type_label=end_if];
1332 [label="212_ counter_re_ent21 += 1;\n1332-expression_statement-213-213", method="callme_re_ent21()", type_label=expression_statement];
1336 [label="214_ address public admin;\n1336-new_variable-215-215", method="", type_label=new_variable];
1341 [label="215_ mapping(address => uint) balances_re_ent10;\n1341-new_variable-216-216", method="", type_label=new_variable];
1347 [label="216_ function withdrawFunds_re_ent10 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent10[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent10[msg.sender] -= _weiToWithdraw;\n    }\n1347-function_definition-217-221", method="withdrawFunds_re_ent10(uint256 _weiToWithdraw)", type_label=function_definition];
1355 [label="217_ require(balances_re_ent10[msg.sender] >= _weiToWithdraw);\n1355-expression_statement-218-218", method="withdrawFunds_re_ent10(uint256 _weiToWithdraw)", type_label=expression_statement];
1366 [label="218_ require(msg.sender.send(_weiToWithdraw));\n1366-expression_statement-219-219", method="withdrawFunds_re_ent10(uint256 _weiToWithdraw)", type_label=expression_statement];
1378 [label="219_ balances_re_ent10[msg.sender] -= _weiToWithdraw;\n1378-expression_statement-220-220", method="withdrawFunds_re_ent10(uint256 _weiToWithdraw)", type_label=expression_statement];
1386 [label="221_ address payable public deposit;\n1386-new_variable-222-222", method="", type_label=new_variable];
1391 [label="222_ mapping(address => uint) balances_re_ent21;\n1391-new_variable-223-223", method="", type_label=new_variable];
1397 [label="223_ function withdraw_balances_re_ent21 () public {\n       (bool success,)= msg.sender.call.value(balances_re_ent21[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent21[msg.sender] = 0;\n      }\n1397-function_definition-224-228", method="withdraw_balances_re_ent21()", type_label=function_definition];
1401 [label="224_ (bool success,)= msg.sender.call.value(balances_re_ent21[msg.sender ])(\"\");\n1401-new_variable-225-225", method="withdraw_balances_re_ent21()", type_label=new_variable];
1425 [label="225_ if\n1425-if-226-227", method="withdraw_balances_re_ent21()", type_label=if];
3963 [label="225_ end_if", method="withdraw_balances_re_ent21()", type_label=end_if];
1427 [label="226_ balances_re_ent21[msg.sender] = 0;\n1427-expression_statement-227-227", method="withdraw_balances_re_ent21()", type_label=expression_statement];
1435 [label="228_ uint tokenPrice = 0.0001 ether;\n1435-new_variable-229-229", method="", type_label=new_variable];
1441 [label="229_ mapping(address => uint) userBalance_re_ent12;\n1441-new_variable-230-230", method="", type_label=new_variable];
1447 [label="230_ function withdrawBalance_re_ent12() public{\n        if( ! (msg.sender.send(userBalance_re_ent12[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent12[msg.sender] = 0;\n    }\n1447-function_definition-231-236", method="withdrawBalance_re_ent12()", type_label=function_definition];
1451 [label="231_ if\n1451-if-232-234", method="withdrawBalance_re_ent12()", type_label=if];
3989 [label="231_ end_if", method="withdrawBalance_re_ent12()", type_label=end_if];
1469 [label="234_ userBalance_re_ent12[msg.sender] = 0;\n1469-expression_statement-235-235", method="withdrawBalance_re_ent12()", type_label=expression_statement];
1477 [label="236_ uint public hardCap =21000 ether;\n1477-new_variable-237-237", method="", type_label=new_variable];
1484 [label="237_ mapping(address => uint) redeemableEther_re_ent11;\n1484-new_variable-238-238", method="", type_label=new_variable];
1490 [label="238_ function claimReward_re_ent11() public {        \n        require(redeemableEther_re_ent11[msg.sender] > 0);\n        uint transferValue_re_ent11 = redeemableEther_re_ent11[msg.sender];\n        msg.sender.transfer(transferValue_re_ent11);    \n        redeemableEther_re_ent11[msg.sender] = 0;\n    }\n1490-function_definition-239-244", method="claimReward_re_ent11()", type_label=function_definition];
1494 [label="239_ require(redeemableEther_re_ent11[msg.sender] > 0);\n1494-expression_statement-240-240", method="claimReward_re_ent11()", type_label=expression_statement];
1505 [label="240_ uint transferValue_re_ent11 = redeemableEther_re_ent11[msg.sender];\n1505-new_variable-241-241", method="claimReward_re_ent11()", type_label=new_variable];
1515 [label="241_ msg.sender.transfer(transferValue_re_ent11);\n1515-expression_statement-242-242", method="claimReward_re_ent11()", type_label=expression_statement];
1524 [label="242_ redeemableEther_re_ent11[msg.sender] = 0;\n1524-expression_statement-243-243", method="claimReward_re_ent11()", type_label=expression_statement];
1532 [label="244_ uint public raisedAmount;\n1532-new_variable-245-245", method="", type_label=new_variable];
1537 [label="245_ mapping(address => uint) balances_re_ent1;\n1537-new_variable-246-246", method="", type_label=new_variable];
1543 [label="246_ function withdraw_balances_re_ent1 () public {\n       (bool success,) =msg.sender.call.value(balances_re_ent1[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent1[msg.sender] = 0;\n      }\n1543-function_definition-247-251", method="withdraw_balances_re_ent1()", type_label=function_definition];
1547 [label="247_ (bool success,) =msg.sender.call.value(balances_re_ent1[msg.sender ])(\"\");\n1547-new_variable-248-248", method="withdraw_balances_re_ent1()", type_label=new_variable];
1571 [label="248_ if\n1571-if-249-250", method="withdraw_balances_re_ent1()", type_label=if];
4109 [label="248_ end_if", method="withdraw_balances_re_ent1()", type_label=end_if];
1573 [label="249_ balances_re_ent1[msg.sender] = 0;\n1573-expression_statement-250-250", method="withdraw_balances_re_ent1()", type_label=expression_statement];
1581 [label="251_ uint public saleStart = now;\n1581-new_variable-252-252", method="", type_label=new_variable];
1587 [label="252_ uint public saleEnd = now + 14515200;\n1587-new_variable-253-253", method="", type_label=new_variable];
1595 [label="253_ uint public coinTradeStart = saleEnd + 15120000;\n1595-new_variable-254-254", method="", type_label=new_variable];
1603 [label="254_ bool not_called_re_ent41 = true;\n1603-new_variable-255-255", method="", type_label=new_variable];
1609 [label="255_ function bug_re_ent41() public{\n        require(not_called_re_ent41);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent41 = false;\n    }\n1609-function_definition-256-262", method="bug_re_ent41()", type_label=function_definition];
1613 [label="256_ require(not_called_re_ent41);\n1613-expression_statement-257-257", method="bug_re_ent41()", type_label=expression_statement];
1618 [label="257_ if\n1618-if-258-260", method="bug_re_ent41()", type_label=if];
4156 [label="257_ end_if", method="bug_re_ent41()", type_label=end_if];
1633 [label="260_ not_called_re_ent41 = false;\n1633-expression_statement-261-261", method="bug_re_ent41()", type_label=expression_statement];
1638 [label="262_ uint public maxInvestment = 30 ether;\n1638-new_variable-263-263", method="", type_label=new_variable];
1645 [label="263_ uint256 counter_re_ent42 =0;\n1645-new_variable-264-264", method="", type_label=new_variable];
1650 [label="264_ function callme_re_ent42() public{\n        require(counter_re_ent42<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent42 += 1;\n    }\n1650-function_definition-265-271", method="callme_re_ent42()", type_label=function_definition];
1654 [label="265_ require(counter_re_ent42<=5);\n1654-expression_statement-266-266", method="callme_re_ent42()", type_label=expression_statement];
1661 [label="266_ if\n1661-if-267-269", method="callme_re_ent42()", type_label=if];
4199 [label="266_ end_if", method="callme_re_ent42()", type_label=end_if];
1676 [label="269_ counter_re_ent42 += 1;\n1676-expression_statement-270-270", method="callme_re_ent42()", type_label=expression_statement];
1680 [label="271_ uint public minInvestment = 0.1 ether;\n1680-new_variable-272-272", method="", type_label=new_variable];
1693 [label="273_ address payable lastPlayer_re_ent2;\n1693-new_variable-274-274", method="", type_label=new_variable];
1697 [label="274_ uint jackpot_re_ent2;\n1697-new_variable-275-275", method="", type_label=new_variable];
1701 [label="275_ function buyTicket_re_ent2() public{\n	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))\n        revert();\n      lastPlayer_re_ent2 = msg.sender;\n      jackpot_re_ent2    = address(this).balance;\n    }\n1701-function_definition-276-281", method="buyTicket_re_ent2()", type_label=function_definition];
1705 [label="276_ if\n1705-if-277-278", method="buyTicket_re_ent2()", type_label=if];
4243 [label="276_ end_if", method="buyTicket_re_ent2()", type_label=end_if];
1716 [label="278_ lastPlayer_re_ent2 = msg.sender;\n1716-expression_statement-279-279", method="buyTicket_re_ent2()", type_label=expression_statement];
1722 [label="279_ jackpot_re_ent2    = address(this).balance;\n1722-expression_statement-280-280", method="buyTicket_re_ent2()", type_label=expression_statement];
1730 [label="281_ State public ieoState;\n1730-new_variable-282-282", method="", type_label=new_variable];
1736 [label="282_ modifier onlyAdmin(){\n        require(msg.sender == admin);\n        _;\n    }\n1736-expression_statement-283-286", method="", type_label=expression_statement];
1739 [label="283_ require(msg.sender == admin);\n1739-expression_statement-284-284", method="", type_label=expression_statement];
1748 [label="284_ _;\n1748-expression_statement-285-285", method="", type_label=expression_statement];
1750 [label="286_ bool not_called_re_ent13 = true;\n1750-new_variable-287-287", method="", type_label=new_variable];
1756 [label="287_ function bug_re_ent13() public{\n        require(not_called_re_ent13);\n        (bool success,)=msg.sender.call.value(1 ether)(\"\");\n        if( ! success ){\n            revert();\n        }\n        not_called_re_ent13 = false;\n    }\n1756-function_definition-288-295", method="bug_re_ent13()", type_label=function_definition];
1760 [label="288_ require(not_called_re_ent13);\n1760-expression_statement-289-289", method="bug_re_ent13()", type_label=expression_statement];
1765 [label="289_ (bool success,)=msg.sender.call.value(1 ether)(\"\");\n1765-new_variable-290-290", method="bug_re_ent13()", type_label=new_variable];
1786 [label="290_ if\n1786-if-291-293", method="bug_re_ent13()", type_label=if];
4324 [label="290_ end_if", method="bug_re_ent13()", type_label=end_if];
1792 [label="293_ not_called_re_ent13 = false;\n1792-expression_statement-294-294", method="bug_re_ent13()", type_label=expression_statement];
1817 [label="297_ deposit = _deposit;\n1817-expression_statement-298-298", method="", type_label=expression_statement];
1821 [label="298_ admin = msg.sender;\n1821-expression_statement-299-299", method="", type_label=expression_statement];
1827 [label="299_ ieoState = State.beforeStart;\n1827-expression_statement-300-300", method="", type_label=expression_statement];
1833 [label="301_ uint256 counter_re_ent14 =0;\n1833-new_variable-302-302", method="", type_label=new_variable];
1838 [label="302_ function callme_re_ent14() public{\n        require(counter_re_ent14<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent14 += 1;\n    }\n1838-function_definition-303-309", method="callme_re_ent14()", type_label=function_definition];
1842 [label="303_ require(counter_re_ent14<=5);\n1842-expression_statement-304-304", method="callme_re_ent14()", type_label=expression_statement];
1849 [label="304_ if\n1849-if-305-307", method="callme_re_ent14()", type_label=if];
4387 [label="304_ end_if", method="callme_re_ent14()", type_label=end_if];
1864 [label="307_ counter_re_ent14 += 1;\n1864-expression_statement-308-308", method="callme_re_ent14()", type_label=expression_statement];
1868 [label="309_ function halt() public onlyAdmin{\n        ieoState = State.halted;\n    }\n1868-function_definition-310-312", method="halt()", type_label=function_definition];
1871 [label="309_ onlyAdmin\n1871-expression_statement-310-310", method="halt()", type_label=expression_statement];
1874 [label="310_ ieoState = State.halted;\n1874-expression_statement-311-311", method="halt()", type_label=expression_statement];
1880 [label="312_ address payable lastPlayer_re_ent30;\n1880-new_variable-313-313", method="", type_label=new_variable];
1884 [label="313_ uint jackpot_re_ent30;\n1884-new_variable-314-314", method="", type_label=new_variable];
1888 [label="314_ function buyTicket_re_ent30() public{\n	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))\n        revert();\n      lastPlayer_re_ent30 = msg.sender;\n      jackpot_re_ent30    = address(this).balance;\n    }\n1888-function_definition-315-320", method="buyTicket_re_ent30()", type_label=function_definition];
1892 [label="315_ if\n1892-if-316-317", method="buyTicket_re_ent30()", type_label=if];
4430 [label="315_ end_if", method="buyTicket_re_ent30()", type_label=end_if];
1903 [label="317_ lastPlayer_re_ent30 = msg.sender;\n1903-expression_statement-318-318", method="buyTicket_re_ent30()", type_label=expression_statement];
1909 [label="318_ jackpot_re_ent30    = address(this).balance;\n1909-expression_statement-319-319", method="buyTicket_re_ent30()", type_label=expression_statement];
1917 [label="320_ function unhalt() public onlyAdmin{\n        ieoState = State.running;\n    }\n1917-function_definition-321-323", method="unhalt()", type_label=function_definition];
1920 [label="320_ onlyAdmin\n1920-expression_statement-321-321", method="unhalt()", type_label=expression_statement];
1923 [label="321_ ieoState = State.running;\n1923-expression_statement-322-322", method="unhalt()", type_label=expression_statement];
1929 [label="323_ mapping(address => uint) balances_re_ent8;\n1929-new_variable-324-324", method="", type_label=new_variable];
1935 [label="324_ function withdraw_balances_re_ent8 () public {\n       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent8[msg.sender] = 0;\n      }\n1935-function_definition-325-329", method="withdraw_balances_re_ent8()", type_label=function_definition];
1939 [label="325_ (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n1939-new_variable-326-326", method="withdraw_balances_re_ent8()", type_label=new_variable];
1963 [label="326_ if\n1963-if-327-328", method="withdraw_balances_re_ent8()", type_label=if];
4501 [label="326_ end_if", method="withdraw_balances_re_ent8()", type_label=end_if];
1965 [label="327_ balances_re_ent8[msg.sender] = 0;\n1965-expression_statement-328-328", method="withdraw_balances_re_ent8()", type_label=expression_statement];
1973 [label="329_ function changeDepositAddress(address payable newDeposit) public onlyAdmin{\n        deposit = newDeposit;\n    }\n1973-function_definition-330-332", method="changeDepositAddress(address payable newDeposit)", type_label=function_definition];
1980 [label="329_ onlyAdmin\n1980-expression_statement-330-330", method="changeDepositAddress(address payable newDeposit)", type_label=expression_statement];
1983 [label="330_ deposit = newDeposit;\n1983-expression_statement-331-331", method="changeDepositAddress(address payable newDeposit)", type_label=expression_statement];
1987 [label="332_ mapping(address => uint) redeemableEther_re_ent39;\n1987-new_variable-333-333", method="", type_label=new_variable];
1993 [label="333_ function claimReward_re_ent39() public {        \n        require(redeemableEther_re_ent39[msg.sender] > 0);\n        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n        msg.sender.transfer(transferValue_re_ent39);    \n        redeemableEther_re_ent39[msg.sender] = 0;\n    }\n1993-function_definition-334-339", method="claimReward_re_ent39()", type_label=function_definition];
1997 [label="334_ require(redeemableEther_re_ent39[msg.sender] > 0);\n1997-expression_statement-335-335", method="claimReward_re_ent39()", type_label=expression_statement];
2008 [label="335_ uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n2008-new_variable-336-336", method="claimReward_re_ent39()", type_label=new_variable];
2018 [label="336_ msg.sender.transfer(transferValue_re_ent39);\n2018-expression_statement-337-337", method="claimReward_re_ent39()", type_label=expression_statement];
2027 [label="337_ redeemableEther_re_ent39[msg.sender] = 0;\n2027-expression_statement-338-338", method="claimReward_re_ent39()", type_label=expression_statement];
2035 [label="339_ function getCurrentState() public view returns(State){\n        if(ieoState == State.halted){\n            return State.halted;\n        }else if(block.timestamp < saleStart){\n            return State.beforeStart;\n        }else if(block.timestamp >= saleStart && block.timestamp <= saleEnd){\n            return State.running;\n        }else{\n            return State.afterEnd;\n        }\n    }\n2035-function_definition-340-350", method="getCurrentState()", type_label=function_definition];
2045 [label="340_ if_ieoState == State.halted\n2045-if-341-349", method="getCurrentState()", type_label=if];
4583 [label="340_ end_if", method="getCurrentState()", type_label=end_if];
2052 [label="341_ return State.halted;\n2052-return-342-342", method="getCurrentState()", type_label=return];
2056 [label="342_ if_block.timestamp < saleStart\n2056-if-343-349", method="getCurrentState()", type_label=if];
2063 [label="343_ return State.beforeStart;\n2063-return-344-344", method="getCurrentState()", type_label=return];
2067 [label="344_ if_block.timestamp >= saleStart && block.timestamp <= saleEnd\n2067-if-345-349", method="getCurrentState()", type_label=if];
2080 [label="345_ return State.running;\n2080-return-346-346", method="getCurrentState()", type_label=return];
2085 [label="347_ return State.afterEnd;\n2085-return-348-348", method="getCurrentState()", type_label=return];
2089 [label="350_ mapping(address => uint) balances_re_ent36;\n2089-new_variable-351-351", method="", type_label=new_variable];
2095 [label="351_ function withdraw_balances_re_ent36 () public {\n       if (msg.sender.send(balances_re_ent36[msg.sender ]))\n          balances_re_ent36[msg.sender] = 0;\n      }\n2095-function_definition-352-355", method="withdraw_balances_re_ent36()", type_label=function_definition];
2099 [label="352_ if\n2099-if-353-354", method="withdraw_balances_re_ent36()", type_label=if];
4637 [label="352_ end_if", method="withdraw_balances_re_ent36()", type_label=end_if];
2112 [label="353_ balances_re_ent36[msg.sender] = 0;\n2112-expression_statement-354-354", method="withdraw_balances_re_ent36()", type_label=expression_statement];
2120 [label="355_ function invest() payable public returns(bool){\n        ieoState = getCurrentState();\n        require(ieoState == State.running);\n        require(msg.value >= minInvestment && msg.value <= maxInvestment);\n        uint tokens = msg.value / tokenPrice;\n        require(raisedAmount + msg.value <= hardCap);\n        raisedAmount += msg.value;\n        balances[msg.sender] += tokens;\n        balances[founder] -= tokens;\n        deposit.transfer(msg.value); \n        emit Invest(msg.sender, msg.value, tokens);\n        return true;\n    }\n2120-function_definition-356-368", method="invest()", type_label=function_definition];
2129 [label="356_ ieoState = getCurrentState();\n2129-expression_statement-357-357", method="invest()", type_label=expression_statement];
2134 [label="357_ require(ieoState == State.running);\n2134-expression_statement-358-358", method="invest()", type_label=expression_statement];
2143 [label="358_ require(msg.value >= minInvestment && msg.value <= maxInvestment);\n2143-expression_statement-359-359", method="invest()", type_label=expression_statement];
2158 [label="359_ uint tokens = msg.value / tokenPrice;\n2158-new_variable-360-360", method="invest()", type_label=new_variable];
2168 [label="360_ require(raisedAmount + msg.value <= hardCap);\n2168-expression_statement-361-361", method="invest()", type_label=expression_statement];
2179 [label="361_ raisedAmount += msg.value;\n2179-expression_statement-362-362", method="invest()", type_label=expression_statement];
2185 [label="362_ balances[msg.sender] += tokens;\n2185-expression_statement-363-363", method="invest()", type_label=expression_statement];
2193 [label="363_ balances[founder] -= tokens;\n2193-expression_statement-364-364", method="invest()", type_label=expression_statement];
2199 [label="364_ deposit.transfer(msg.value);\n2199-expression_statement-365-365", method="invest()", type_label=expression_statement];
2220 [label="366_ return true;\n2220-return-367-367", method="invest()", type_label=return];
2223 [label="368_ uint256 counter_re_ent35 =0;\n2223-new_variable-369-369", method="", type_label=new_variable];
2228 [label="369_ function callme_re_ent35() public{\n        require(counter_re_ent35<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent35 += 1;\n    }\n2228-function_definition-370-376", method="callme_re_ent35()", type_label=function_definition];
2232 [label="370_ require(counter_re_ent35<=5);\n2232-expression_statement-371-371", method="callme_re_ent35()", type_label=expression_statement];
2239 [label="371_ if\n2239-if-372-374", method="callme_re_ent35()", type_label=if];
4777 [label="371_ end_if", method="callme_re_ent35()", type_label=end_if];
2254 [label="374_ counter_re_ent35 += 1;\n2254-expression_statement-375-375", method="callme_re_ent35()", type_label=expression_statement];
2262 [label="377_ invest();\n2262-expression_statement-378-378", method="", type_label=expression_statement];
2265 [label="379_ mapping(address => uint) userBalance_re_ent40;\n2265-new_variable-380-380", method="", type_label=new_variable];
2271 [label="380_ function withdrawBalance_re_ent40() public{\n        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent40[msg.sender] = 0;\n    }\n2271-function_definition-381-387", method="withdrawBalance_re_ent40()", type_label=function_definition];
2275 [label="381_ (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n2275-new_variable-382-382", method="withdrawBalance_re_ent40()", type_label=new_variable];
2299 [label="382_ if\n2299-if-383-385", method="withdrawBalance_re_ent40()", type_label=if];
4837 [label="382_ end_if", method="withdrawBalance_re_ent40()", type_label=end_if];
2305 [label="385_ userBalance_re_ent40[msg.sender] = 0;\n2305-expression_statement-386-386", method="withdrawBalance_re_ent40()", type_label=expression_statement];
2313 [label="387_ function burn() public returns(bool){\n        ieoState = getCurrentState();\n        require(ieoState == State.afterEnd);\n        balances[founder] = 0;\n    }\n2313-function_definition-388-392", method="burn()", type_label=function_definition];
2321 [label="388_ ieoState = getCurrentState();\n2321-expression_statement-389-389", method="burn()", type_label=expression_statement];
2326 [label="389_ require(ieoState == State.afterEnd);\n2326-expression_statement-390-390", method="burn()", type_label=expression_statement];
2335 [label="390_ balances[founder] = 0;\n2335-expression_statement-391-391", method="burn()", type_label=expression_statement];
2341 [label="392_ mapping(address => uint) userBalance_re_ent33;\n2341-new_variable-393-393", method="", type_label=new_variable];
2347 [label="393_ function withdrawBalance_re_ent33() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent33[msg.sender] = 0;\n    }\n2347-function_definition-394-400", method="withdrawBalance_re_ent33()", type_label=function_definition];
2351 [label="394_ (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n2351-new_variable-395-395", method="withdrawBalance_re_ent33()", type_label=new_variable];
2375 [label="395_ if\n2375-if-396-398", method="withdrawBalance_re_ent33()", type_label=if];
4913 [label="395_ end_if", method="withdrawBalance_re_ent33()", type_label=end_if];
2381 [label="398_ userBalance_re_ent33[msg.sender] = 0;\n2381-expression_statement-399-399", method="withdrawBalance_re_ent33()", type_label=expression_statement];
2389 [label="400_ function transfer(address to, uint value) public returns(bool){\n        require(block.timestamp > coinTradeStart);\n        super.transfer(to, value);\n    }\n2389-function_definition-401-404", method="transfer(address to,uint value)", type_label=function_definition];
2405 [label="401_ require(block.timestamp > coinTradeStart);\n2405-expression_statement-402-402", method="transfer(address to,uint value)", type_label=expression_statement];
2414 [label="402_ super.transfer(to, value);\n2414-expression_statement-403-403", method="transfer(address to,uint value)", type_label=expression_statement];
2423 [label="404_ bool not_called_re_ent27 = true;\n2423-new_variable-405-405", method="", type_label=new_variable];
2429 [label="405_ function bug_re_ent27() public{\n        require(not_called_re_ent27);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent27 = false;\n    }\n2429-function_definition-406-412", method="bug_re_ent27()", type_label=function_definition];
2433 [label="406_ require(not_called_re_ent27);\n2433-expression_statement-407-407", method="bug_re_ent27()", type_label=expression_statement];
2438 [label="407_ if\n2438-if-408-410", method="bug_re_ent27()", type_label=if];
4976 [label="407_ end_if", method="bug_re_ent27()", type_label=end_if];
2453 [label="410_ not_called_re_ent27 = false;\n2453-expression_statement-411-411", method="bug_re_ent27()", type_label=expression_statement];
2458 [label="412_ function transferFrom(address _from, address _to, uint _value) public returns(bool){\n        require(block.timestamp > coinTradeStart);\n        super.transferFrom(_from, _to, _value);\n    }\n2458-function_definition-413-416", method="transferFrom(address _from,address _to,uint _value)", type_label=function_definition];
2478 [label="413_ require(block.timestamp > coinTradeStart);\n2478-expression_statement-414-414", method="transferFrom(address _from,address _to,uint _value)", type_label=expression_statement];
2487 [label="414_ super.transferFrom(_from, _to, _value);\n2487-expression_statement-415-415", method="transferFrom(address _from,address _to,uint _value)", type_label=expression_statement];
2498 [label="416_ mapping(address => uint) balances_re_ent31;\n2498-new_variable-417-417", method="", type_label=new_variable];
2504 [label="417_ function withdrawFunds_re_ent31 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent31[msg.sender] -= _weiToWithdraw;\n    }\n2504-function_definition-418-422", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=function_definition];
2512 [label="418_ require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n2512-expression_statement-419-419", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
2523 [label="419_ require(msg.sender.send(_weiToWithdraw));\n2523-expression_statement-420-420", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
2535 [label="420_ balances_re_ent31[msg.sender] -= _weiToWithdraw;\n2535-expression_statement-421-421", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
27 -> 35  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 46  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
46 -> 66  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
66 -> 71  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
92 -> 96  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
100 -> 104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
104 -> 2642  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
115 -> 121  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 159  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
159 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
170 -> 190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
190 -> 195  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
220 -> 224  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
228 -> 232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
232 -> 250  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
250 -> 2788  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
255 -> 261  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
291 -> 295  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
295 -> 306  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
306 -> 316  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
316 -> 325  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
359 -> 363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
363 -> 2901  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
429 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
433 -> 438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 2976  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
458 -> 465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
465 -> 469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
473 -> 477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
477 -> 3015  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
488 -> 494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
502 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
523 -> 534  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
534 -> 546  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
554 -> 560  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
566 -> 570  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
570 -> 3108  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
596 -> 601  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
607 -> 611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
611 -> 624  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
611 -> 3149  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3149 -> 632  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
624 -> 3149  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
632 -> 637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
642 -> 646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
646 -> 653  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
653 -> 3191  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
672 -> 679  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
685 -> 689  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
689 -> 694  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
694 -> 3232  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
752 -> 756  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
756 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
774 -> 778  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
778 -> 802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
802 -> 3340  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
816 -> 833  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
833 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
845 -> 849  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
849 -> 854  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
854 -> 3392  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
874 -> 890  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
890 -> 901  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
901 -> 908  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
928 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
937 -> 941  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
941 -> 952  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
952 -> 962  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
962 -> 971  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
979 -> 999  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
999 -> 1010  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1010 -> 1019  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1019 -> 1025  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1025 -> 1031  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1031 -> 1039  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1039 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1048 -> 1056  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1056 -> 1067  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1067 -> 1079  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1087 -> 1096  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1096 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1104 -> 1108  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1108 -> 1119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1119 -> 1129  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1129 -> 1138  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1146 -> 1160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1160 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1169 -> 1173  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1173 -> 1180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1180 -> 3718  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1199 -> 1216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1216 -> 1231  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1231 -> 1237  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1255 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1258 -> 1262  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1266 -> 1270  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1270 -> 3808  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1281 -> 1287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1306 -> 1310  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1310 -> 1317  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1317 -> 3855  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1336 -> 1341  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1347 -> 1355  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1355 -> 1366  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1366 -> 1378  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1386 -> 1391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1397 -> 1401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1401 -> 1425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1425 -> 1427  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1425 -> 3963  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3963 -> 1435  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1427 -> 3963  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1435 -> 1441  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1447 -> 1451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1451 -> 3989  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1477 -> 1484  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1490 -> 1494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1494 -> 1505  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1505 -> 1515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1515 -> 1524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1532 -> 1537  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1543 -> 1547  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1547 -> 1571  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1571 -> 1573  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1571 -> 4109  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4109 -> 1581  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1573 -> 4109  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1581 -> 1587  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1587 -> 1595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1595 -> 1603  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1609 -> 1613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1613 -> 1618  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1618 -> 4156  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1638 -> 1645  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1650 -> 1654  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1654 -> 1661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1661 -> 4199  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1693 -> 1697  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1701 -> 1705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1705 -> 4243  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1716 -> 1722  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1730 -> 1736  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1736 -> 1750  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1739 -> 1748  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1756 -> 1760  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1760 -> 1765  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1765 -> 1786  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1786 -> 4324  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1817 -> 1821  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1821 -> 1827  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1838 -> 1842  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1842 -> 1849  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1849 -> 4387  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1868 -> 1874  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1880 -> 1884  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1888 -> 1892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1892 -> 4430  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1903 -> 1909  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1917 -> 1923  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1935 -> 1939  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1939 -> 1963  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1963 -> 1965  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1963 -> 4501  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4501 -> 1973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1965 -> 4501  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1973 -> 1983  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1993 -> 1997  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1997 -> 2008  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2008 -> 2018  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2018 -> 2027  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2035 -> 2045  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2045 -> 2052  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2045 -> 2056  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4583 -> 2089  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2052 -> 4583  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2052 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2056 -> 2063  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2056 -> 2067  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2063 -> 4583  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2063 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2067 -> 2080  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2067 -> 2085  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2080 -> 4583  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2080 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2085 -> 4583  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2085 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2095 -> 2099  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2099 -> 2112  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2099 -> 4637  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4637 -> 2120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2112 -> 4637  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2120 -> 2129  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2129 -> 2134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2134 -> 2143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2143 -> 2158  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2158 -> 2168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2168 -> 2179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2179 -> 2185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2185 -> 2193  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2193 -> 2199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2220 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2228 -> 2232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2232 -> 2239  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2239 -> 4777  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2271 -> 2275  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2275 -> 2299  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2299 -> 4837  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2313 -> 2321  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2321 -> 2326  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2326 -> 2335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2347 -> 2351  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2351 -> 2375  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2375 -> 4913  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2389 -> 2405  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2405 -> 2414  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2429 -> 2433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2433 -> 2438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2438 -> 4976  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2458 -> 2478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2478 -> 2487  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2504 -> 2512  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2512 -> 2523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2523 -> 2535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
