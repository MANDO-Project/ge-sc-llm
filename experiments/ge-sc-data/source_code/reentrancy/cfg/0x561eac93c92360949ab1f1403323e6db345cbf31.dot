digraph  {
13 [label="3_ mapping (address=>uint256) public balances;\n13-new_variable-4-4", method="", type_label=new_variable];
20 [label="4_ uint public MinSum;\n20-new_variable-5-5", method="", type_label=new_variable];
25 [label="5_ LogFile Log;\n25-new_variable-6-6", method="", type_label=new_variable];
30 [label="6_ bool intitalized;\n30-new_variable-7-7", method="", type_label=new_variable];
34 [label="7_ function SetMinSum(uint _val)\n    public\n    {\n        if(intitalized)throw;\n        MinSum = _val;\n    }\n34-function_definition-8-13", method="SetMinSum(uint _val)", type_label=function_definition];
42 [label="10_ if\n42-if-11-11", method="SetMinSum(uint _val)", type_label=if];
294 [label="10_ end_if", method="SetMinSum(uint _val)", type_label=end_if];
44 [label="10_ throw;\n44-expression_statement-11-11", method="SetMinSum(uint _val)", type_label=expression_statement];
46 [label="11_ MinSum = _val;\n46-expression_statement-12-12", method="SetMinSum(uint _val)", type_label=expression_statement];
50 [label="13_ function SetLogFile(address _log)\n    public\n    {\n        if(intitalized)throw;\n        Log = LogFile(_log);\n    }\n50-function_definition-14-19", method="SetLogFile(address _log)", type_label=function_definition];
58 [label="16_ if\n58-if-17-17", method="SetLogFile(address _log)", type_label=if];
310 [label="16_ end_if", method="SetLogFile(address _log)", type_label=end_if];
60 [label="16_ throw;\n60-expression_statement-17-17", method="SetLogFile(address _log)", type_label=expression_statement];
62 [label="17_ Log = LogFile(_log);\n62-expression_statement-18-18", method="SetLogFile(address _log)", type_label=expression_statement];
69 [label="19_ function Initialized()\n    public\n    {\n        intitalized = true;\n    }\n69-function_definition-20-24", method="Initialized()", type_label=function_definition];
73 [label="22_ intitalized = true;\n73-expression_statement-23-23", method="Initialized()", type_label=expression_statement];
78 [label="24_ function Deposit()\n    public\n    payable\n    {\n        balances[msg.sender]+= msg.value;\n        Log.AddMessage(msg.sender,msg.value,\"Put\");\n    }\n78-function_definition-25-31", method="Deposit()", type_label=function_definition];
83 [label="28_ balances[msg.sender]+= msg.value;\n83-expression_statement-29-29", method="Deposit()", type_label=expression_statement];
93 [label="29_ Log.AddMessage(msg.sender,msg.value,\"Put\");\n93-expression_statement-30-30", method="Deposit()", type_label=expression_statement];
109 [label="31_ function Collect(uint _am)\n    public\n    payable\n    {\n        if(balances[msg.sender]>=MinSum && balances[msg.sender]>=_am)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                balances[msg.sender]-=_am;\n                Log.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }\n    }\n109-function_definition-32-44", method="Collect(uint _am)", type_label=function_definition];
118 [label="35_ if_balances[msg.sender]>=MinSum && balances[msg.sender]>=_am\n118-if-36-43", method="Collect(uint _am)", type_label=if];
370 [label="35_ end_if", method="Collect(uint _am)", type_label=end_if];
135 [label="37_ if\n135-if-38-42", method="Collect(uint _am)", type_label=if];
387 [label="37_ end_if", method="Collect(uint _am)", type_label=end_if];
148 [label="39_ balances[msg.sender]-=_am;\n148-expression_statement-40-40", method="Collect(uint _am)", type_label=expression_statement];
156 [label="40_ Log.AddMessage(msg.sender,_am,\"Collect\");\n156-expression_statement-41-41", method="Collect(uint _am)", type_label=expression_statement];
174 [label="48_ Deposit();\n174-expression_statement-49-49", method="", type_label=expression_statement];
180 [label="53_ struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n180-expression_statement-54-60", method="Message()", type_label=expression_statement];
198 [label="60_ Message[] public History;\n198-new_variable-61-61", method="", type_label=new_variable];
205 [label="61_ Message LastMsg;\n205-new_variable-62-62", method="", type_label=new_variable];
210 [label="62_ function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n210-function_definition-63-71", method="AddMessage(address _adr,uint _val,string _data)", type_label=function_definition];
226 [label="65_ LastMsg.Sender = _adr;\n226-expression_statement-66-66", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
232 [label="66_ LastMsg.Time = now;\n232-expression_statement-67-67", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
238 [label="67_ LastMsg.Val = _val;\n238-expression_statement-68-68", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
244 [label="68_ LastMsg.Data = _data;\n244-expression_statement-69-69", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
250 [label="69_ History.push(LastMsg);\n250-expression_statement-70-70", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
170;
13 -> 20  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
20 -> 25  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
25 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
34 -> 42  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
42 -> 44  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
42 -> 294  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
294 -> 46  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 294  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
50 -> 58  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
58 -> 60  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
58 -> 310  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
310 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
60 -> 310  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
69 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
78 -> 83  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
83 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 118  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
118 -> 135  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
118 -> 370  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
135 -> 148  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
135 -> 387  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
387 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
148 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 387  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
180 -> 198  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
198 -> 205  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
210 -> 226  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
226 -> 232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
232 -> 238  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
238 -> 244  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
244 -> 250  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
