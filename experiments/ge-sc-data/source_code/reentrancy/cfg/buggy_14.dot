digraph  {
13 [label="2_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n13-function_definition-3-10", method="mul(uint256 a,uint256 b)", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", method="mul(uint256 a,uint256 b)", type_label=if];
1850 [label="3_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", method="mul(uint256 a,uint256 b)", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", method="mul(uint256 a,uint256 b)", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", method="mul(uint256 a,uint256 b)", type_label=return];
56 [label="10_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n56-function_definition-11-15", method="div(uint256 a,uint256 b)", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", method="div(uint256 a,uint256 b)", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", method="div(uint256 a,uint256 b)", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", method="div(uint256 a,uint256 b)", type_label=return];
90 [label="15_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n90-function_definition-16-20", method="sub(uint256 a,uint256 b)", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", method="sub(uint256 a,uint256 b)", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", method="sub(uint256 a,uint256 b)", type_label=return];
124 [label="20_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n124-function_definition-21-25", method="add(uint256 a,uint256 b)", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", method="add(uint256 a,uint256 b)", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", method="add(uint256 a,uint256 b)", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", method="add(uint256 a,uint256 b)", type_label=return];
158 [label="25_ function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n158-function_definition-26-29", method="mod(uint256 a,uint256 b)", type_label=function_definition];
175 [label="26_ require(b != 0);\n175-expression_statement-27-27", method="mod(uint256 a,uint256 b)", type_label=expression_statement];
182 [label="27_ return a % b;\n182-return-28-28", method="mod(uint256 a,uint256 b)", type_label=return];
189 [label="31_ function totalSupply() external view returns (uint256);\n189-function_definition-32-32", method="totalSupply()", type_label=function_definition];
197 [label="32_ function balanceOf(address who) external view returns (uint256);\n197-function_definition-33-33", method="balanceOf(address who)", type_label=function_definition];
209 [label="33_ function transfer(address to, uint256 value) external returns (bool);\n209-function_definition-34-34", method="transfer(address to,uint256 value)", type_label=function_definition];
224 [label="34_ function transferFrom(address from, address to, uint256 value) external returns (bool);\n224-function_definition-35-35", method="transferFrom(address from,address to,uint256 value)", type_label=function_definition];
243 [label="35_ function approve(address spender, uint256 value) external returns (bool);\n243-function_definition-36-36", method="approve(address spender,uint256 value)", type_label=function_definition];
258 [label="36_ function allowance(address owner, address spender) external view returns (uint256);\n258-function_definition-37-37", method="allowance(address owner,address spender)", type_label=function_definition];
323 [label="43_ mapping(address => uint) balances_re_ent3;\n323-new_variable-44-44", method="", type_label=new_variable];
329 [label="44_ function withdrawFunds_re_ent3 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n	(bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent3[msg.sender] -= _weiToWithdraw;\n    }\n329-function_definition-45-50", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=function_definition];
337 [label="45_ require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n337-expression_statement-46-46", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
348 [label="46_ (bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n348-new_variable-47-47", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=new_variable];
368 [label="47_ require(success);\n368-expression_statement-48-48", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
373 [label="48_ balances_re_ent3[msg.sender] -= _weiToWithdraw;\n373-expression_statement-49-49", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
381 [label="50_ uint8 constant DECIMALS = 18;\n381-new_variable-51-51", method="", type_label=new_variable];
386 [label="51_ address payable lastPlayer_re_ent9;\n386-new_variable-52-52", method="", type_label=new_variable];
390 [label="52_ uint jackpot_re_ent9;\n390-new_variable-53-53", method="", type_label=new_variable];
394 [label="53_ function buyTicket_re_ent9() public{\n	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n	    if (!success)\n	        revert();\n      lastPlayer_re_ent9 = msg.sender;\n      jackpot_re_ent9    = address(this).balance;\n    }\n394-function_definition-54-60", method="buyTicket_re_ent9()", type_label=function_definition];
398 [label="54_ (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n398-new_variable-55-55", method="buyTicket_re_ent9()", type_label=new_variable];
416 [label="55_ if\n416-if-56-57", method="buyTicket_re_ent9()", type_label=if];
2236 [label="55_ end_if", method="buyTicket_re_ent9()", type_label=end_if];
421 [label="57_ lastPlayer_re_ent9 = msg.sender;\n421-expression_statement-58-58", method="buyTicket_re_ent9()", type_label=expression_statement];
427 [label="58_ jackpot_re_ent9    = address(this).balance;\n427-expression_statement-59-59", method="buyTicket_re_ent9()", type_label=expression_statement];
435 [label="60_ uint256 private _totalSupply;\n435-new_variable-61-61", method="", type_label=new_variable];
440 [label="61_ string private _name;\n440-new_variable-62-62", method="", type_label=new_variable];
445 [label="62_ string private _symbol;\n445-new_variable-63-63", method="", type_label=new_variable];
450 [label="63_ mapping(address => uint) redeemableEther_re_ent25;\n450-new_variable-64-64", method="", type_label=new_variable];
456 [label="64_ function claimReward_re_ent25() public {        \n        require(redeemableEther_re_ent25[msg.sender] > 0);\n        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n        msg.sender.transfer(transferValue_re_ent25);    \n        redeemableEther_re_ent25[msg.sender] = 0;\n    }\n456-function_definition-65-70", method="claimReward_re_ent25()", type_label=function_definition];
460 [label="65_ require(redeemableEther_re_ent25[msg.sender] > 0);\n460-expression_statement-66-66", method="claimReward_re_ent25()", type_label=expression_statement];
471 [label="66_ uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n471-new_variable-67-67", method="claimReward_re_ent25()", type_label=new_variable];
481 [label="67_ msg.sender.transfer(transferValue_re_ent25);\n481-expression_statement-68-68", method="claimReward_re_ent25()", type_label=expression_statement];
490 [label="68_ redeemableEther_re_ent25[msg.sender] = 0;\n490-expression_statement-69-69", method="claimReward_re_ent25()", type_label=expression_statement];
498 [label="70_ mapping (address => uint256) private _balances;\n498-new_variable-71-71", method="", type_label=new_variable];
505 [label="71_ mapping(address => uint) userBalance_re_ent19;\n505-new_variable-72-72", method="", type_label=new_variable];
511 [label="72_ function withdrawBalance_re_ent19() public{\n        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent19[msg.sender] = 0;\n    }\n511-function_definition-73-78", method="withdrawBalance_re_ent19()", type_label=function_definition];
515 [label="73_ if\n515-if-74-76", method="withdrawBalance_re_ent19()", type_label=if];
2335 [label="73_ end_if", method="withdrawBalance_re_ent19()", type_label=end_if];
533 [label="76_ userBalance_re_ent19[msg.sender] = 0;\n533-expression_statement-77-77", method="withdrawBalance_re_ent19()", type_label=expression_statement];
541 [label="78_ mapping (address => mapping (address => uint256)) private _allowed;\n541-new_variable-79-79", method="", type_label=new_variable];
550 [label="79_ function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n550-function_definition-80-82", method="totalSupply()", type_label=function_definition];
559 [label="80_ return _totalSupply;\n559-return-81-81", method="totalSupply()", type_label=return];
561 [label="82_ mapping(address => uint) redeemableEther_re_ent32;\n561-new_variable-83-83", method="", type_label=new_variable];
567 [label="83_ function claimReward_re_ent32() public {        \n        require(redeemableEther_re_ent32[msg.sender] > 0);\n        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n        msg.sender.transfer(transferValue_re_ent32);    \n        redeemableEther_re_ent32[msg.sender] = 0;\n    }\n567-function_definition-84-89", method="claimReward_re_ent32()", type_label=function_definition];
571 [label="84_ require(redeemableEther_re_ent32[msg.sender] > 0);\n571-expression_statement-85-85", method="claimReward_re_ent32()", type_label=expression_statement];
582 [label="85_ uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n582-new_variable-86-86", method="claimReward_re_ent32()", type_label=new_variable];
592 [label="86_ msg.sender.transfer(transferValue_re_ent32);\n592-expression_statement-87-87", method="claimReward_re_ent32()", type_label=expression_statement];
601 [label="87_ redeemableEther_re_ent32[msg.sender] = 0;\n601-expression_statement-88-88", method="claimReward_re_ent32()", type_label=expression_statement];
609 [label="89_ function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\n609-function_definition-90-92", method="balanceOf(address owner)", type_label=function_definition];
622 [label="90_ return _balances[owner];\n622-return-91-91", method="balanceOf(address owner)", type_label=return];
626 [label="92_ mapping(address => uint) balances_re_ent38;\n626-new_variable-93-93", method="", type_label=new_variable];
632 [label="93_ function withdrawFunds_re_ent38 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent38[msg.sender] -= _weiToWithdraw;\n    }\n632-function_definition-94-98", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=function_definition];
640 [label="94_ require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n640-expression_statement-95-95", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
651 [label="95_ require(msg.sender.send(_weiToWithdraw));\n651-expression_statement-96-96", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
663 [label="96_ balances_re_ent38[msg.sender] -= _weiToWithdraw;\n663-expression_statement-97-97", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
671 [label="98_ function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n671-function_definition-99-102", method="transfer(address to,uint256 value)", type_label=function_definition];
687 [label="99_ _transfer(msg.sender, to, value);\n687-expression_statement-100-100", method="transfer(address to,uint256 value)", type_label=expression_statement];
698 [label="100_ return true;\n698-return-101-101", method="transfer(address to,uint256 value)", type_label=return];
701 [label="102_ mapping(address => uint) redeemableEther_re_ent4;\n701-new_variable-103-103", method="", type_label=new_variable];
707 [label="103_ function claimReward_re_ent4() public {        \n        require(redeemableEther_re_ent4[msg.sender] > 0);\n        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n        msg.sender.transfer(transferValue_re_ent4);    \n        redeemableEther_re_ent4[msg.sender] = 0;\n    }\n707-function_definition-104-109", method="claimReward_re_ent4()", type_label=function_definition];
711 [label="104_ require(redeemableEther_re_ent4[msg.sender] > 0);\n711-expression_statement-105-105", method="claimReward_re_ent4()", type_label=expression_statement];
722 [label="105_ uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n722-new_variable-106-106", method="claimReward_re_ent4()", type_label=new_variable];
732 [label="106_ msg.sender.transfer(transferValue_re_ent4);\n732-expression_statement-107-107", method="claimReward_re_ent4()", type_label=expression_statement];
741 [label="107_ redeemableEther_re_ent4[msg.sender] = 0;\n741-expression_statement-108-108", method="claimReward_re_ent4()", type_label=expression_statement];
749 [label="109_ function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }\n749-function_definition-110-114", method="transferFrom(address from,address to,uint256 value)", type_label=function_definition];
769 [label="110_ _transfer(from, to, value);\n769-expression_statement-111-111", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
778 [label="111_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n778-expression_statement-112-112", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
800 [label="112_ return true;\n800-return-113-113", method="transferFrom(address from,address to,uint256 value)", type_label=return];
803 [label="114_ uint256 counter_re_ent7 =0;\n803-new_variable-115-115", method="", type_label=new_variable];
808 [label="115_ function callme_re_ent7() public{\n        require(counter_re_ent7<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent7 += 1;\n    }\n808-function_definition-116-122", method="callme_re_ent7()", type_label=function_definition];
812 [label="116_ require(counter_re_ent7<=5);\n812-expression_statement-117-117", method="callme_re_ent7()", type_label=expression_statement];
819 [label="117_ if\n819-if-118-120", method="callme_re_ent7()", type_label=if];
2639 [label="117_ end_if", method="callme_re_ent7()", type_label=end_if];
834 [label="120_ counter_re_ent7 += 1;\n834-expression_statement-121-121", method="callme_re_ent7()", type_label=expression_statement];
838 [label="122_ function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n838-function_definition-123-126", method="approve(address spender,uint256 value)", type_label=function_definition];
854 [label="123_ _approve(msg.sender, spender, value);\n854-expression_statement-124-124", method="approve(address spender,uint256 value)", type_label=expression_statement];
865 [label="124_ return true;\n865-return-125-125", method="approve(address spender,uint256 value)", type_label=return];
868 [label="126_ address payable lastPlayer_re_ent23;\n868-new_variable-127-127", method="", type_label=new_variable];
872 [label="127_ uint jackpot_re_ent23;\n872-new_variable-128-128", method="", type_label=new_variable];
876 [label="128_ function buyTicket_re_ent23() public{\n	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))\n        revert();\n      lastPlayer_re_ent23 = msg.sender;\n      jackpot_re_ent23    = address(this).balance;\n    }\n876-function_definition-129-134", method="buyTicket_re_ent23()", type_label=function_definition];
880 [label="129_ if\n880-if-130-131", method="buyTicket_re_ent23()", type_label=if];
2700 [label="129_ end_if", method="buyTicket_re_ent23()", type_label=end_if];
891 [label="131_ lastPlayer_re_ent23 = msg.sender;\n891-expression_statement-132-132", method="buyTicket_re_ent23()", type_label=expression_statement];
897 [label="132_ jackpot_re_ent23    = address(this).balance;\n897-expression_statement-133-133", method="buyTicket_re_ent23()", type_label=expression_statement];
905 [label="134_ function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\n905-function_definition-135-137", method="allowance(address owner,address spender)", type_label=function_definition];
922 [label="135_ return _allowed[owner][spender];\n922-return-136-136", method="allowance(address owner,address spender)", type_label=return];
928 [label="137_ uint256 counter_re_ent14 =0;\n928-new_variable-138-138", method="", type_label=new_variable];
933 [label="138_ function callme_re_ent14() public{\n        require(counter_re_ent14<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent14 += 1;\n    }\n933-function_definition-139-145", method="callme_re_ent14()", type_label=function_definition];
937 [label="139_ require(counter_re_ent14<=5);\n937-expression_statement-140-140", method="callme_re_ent14()", type_label=expression_statement];
944 [label="140_ if\n944-if-141-143", method="callme_re_ent14()", type_label=if];
2764 [label="140_ end_if", method="callme_re_ent14()", type_label=end_if];
959 [label="143_ counter_re_ent14 += 1;\n959-expression_statement-144-144", method="callme_re_ent14()", type_label=expression_statement];
963 [label="145_ function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\n963-function_definition-146-148", method="burn(uint256 value)", type_label=function_definition];
971 [label="146_ _burn(msg.sender, value);\n971-expression_statement-147-147", method="burn(uint256 value)", type_label=expression_statement];
980 [label="148_ address payable lastPlayer_re_ent30;\n980-new_variable-149-149", method="", type_label=new_variable];
984 [label="149_ uint jackpot_re_ent30;\n984-new_variable-150-150", method="", type_label=new_variable];
988 [label="150_ function buyTicket_re_ent30() public{\n	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))\n        revert();\n      lastPlayer_re_ent30 = msg.sender;\n      jackpot_re_ent30    = address(this).balance;\n    }\n988-function_definition-151-156", method="buyTicket_re_ent30()", type_label=function_definition];
992 [label="151_ if\n992-if-152-153", method="buyTicket_re_ent30()", type_label=if];
2812 [label="151_ end_if", method="buyTicket_re_ent30()", type_label=end_if];
1003 [label="153_ lastPlayer_re_ent30 = msg.sender;\n1003-expression_statement-154-154", method="buyTicket_re_ent30()", type_label=expression_statement];
1009 [label="154_ jackpot_re_ent30    = address(this).balance;\n1009-expression_statement-155-155", method="buyTicket_re_ent30()", type_label=expression_statement];
1017 [label="156_ function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\n1017-function_definition-157-162", method="_mint(address account,uint256 value)", type_label=function_definition];
1029 [label="157_ require(account != address(0));\n1029-expression_statement-158-158", method="_mint(address account,uint256 value)", type_label=expression_statement];
1038 [label="158_ _totalSupply = _totalSupply.add(value);\n1038-expression_statement-159-159", method="_mint(address account,uint256 value)", type_label=expression_statement];
1047 [label="159_ _balances[account] = _balances[account].add(value);\n1047-expression_statement-160-160", method="_mint(address account,uint256 value)", type_label=expression_statement];
1070 [label="162_ mapping(address => uint) balances_re_ent8;\n1070-new_variable-163-163", method="", type_label=new_variable];
1076 [label="163_ function withdraw_balances_re_ent8 () public {\n       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent8[msg.sender] = 0;\n      }\n1076-function_definition-164-168", method="withdraw_balances_re_ent8()", type_label=function_definition];
1080 [label="164_ (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n1080-new_variable-165-165", method="withdraw_balances_re_ent8()", type_label=new_variable];
1104 [label="165_ if\n1104-if-166-167", method="withdraw_balances_re_ent8()", type_label=if];
2924 [label="165_ end_if", method="withdraw_balances_re_ent8()", type_label=end_if];
1106 [label="166_ balances_re_ent8[msg.sender] = 0;\n1106-expression_statement-167-167", method="withdraw_balances_re_ent8()", type_label=expression_statement];
1114 [label="168_ function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\n1114-function_definition-169-174", method="_transfer(address from,address to,uint256 value)", type_label=function_definition];
1130 [label="169_ require(to != address(0));\n1130-expression_statement-170-170", method="_transfer(address from,address to,uint256 value)", type_label=expression_statement];
1139 [label="170_ _balances[from] = _balances[from].sub(value);\n1139-expression_statement-171-171", method="_transfer(address from,address to,uint256 value)", type_label=expression_statement];
1152 [label="171_ _balances[to] = _balances[to].add(value);\n1152-expression_statement-172-172", method="_transfer(address from,address to,uint256 value)", type_label=expression_statement];
1173 [label="174_ mapping(address => uint) redeemableEther_re_ent39;\n1173-new_variable-175-175", method="", type_label=new_variable];
1179 [label="175_ function claimReward_re_ent39() public {        \n        require(redeemableEther_re_ent39[msg.sender] > 0);\n        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n        msg.sender.transfer(transferValue_re_ent39);    \n        redeemableEther_re_ent39[msg.sender] = 0;\n    }\n1179-function_definition-176-181", method="claimReward_re_ent39()", type_label=function_definition];
1183 [label="176_ require(redeemableEther_re_ent39[msg.sender] > 0);\n1183-expression_statement-177-177", method="claimReward_re_ent39()", type_label=expression_statement];
1194 [label="177_ uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n1194-new_variable-178-178", method="claimReward_re_ent39()", type_label=new_variable];
1204 [label="178_ msg.sender.transfer(transferValue_re_ent39);\n1204-expression_statement-179-179", method="claimReward_re_ent39()", type_label=expression_statement];
1213 [label="179_ redeemableEther_re_ent39[msg.sender] = 0;\n1213-expression_statement-180-180", method="claimReward_re_ent39()", type_label=expression_statement];
1221 [label="181_ function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n1221-function_definition-182-187", method="_approve(address owner,address spender,uint256 value)", type_label=function_definition];
1237 [label="182_ require(spender != address(0));\n1237-expression_statement-183-183", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1246 [label="183_ require(owner != address(0));\n1246-expression_statement-184-184", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1255 [label="184_ _allowed[owner][spender] = value;\n1255-expression_statement-185-185", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1271 [label="187_ mapping(address => uint) balances_re_ent36;\n1271-new_variable-188-188", method="", type_label=new_variable];
1277 [label="188_ function withdraw_balances_re_ent36 () public {\n       if (msg.sender.send(balances_re_ent36[msg.sender ]))\n          balances_re_ent36[msg.sender] = 0;\n      }\n1277-function_definition-189-192", method="withdraw_balances_re_ent36()", type_label=function_definition];
1281 [label="189_ if\n1281-if-190-191", method="withdraw_balances_re_ent36()", type_label=if];
3101 [label="189_ end_if", method="withdraw_balances_re_ent36()", type_label=end_if];
1294 [label="190_ balances_re_ent36[msg.sender] = 0;\n1294-expression_statement-191-191", method="withdraw_balances_re_ent36()", type_label=expression_statement];
1302 [label="192_ function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n1302-function_definition-193-198", method="_burn(address account,uint256 value)", type_label=function_definition];
1314 [label="193_ require(account != address(0));\n1314-expression_statement-194-194", method="_burn(address account,uint256 value)", type_label=expression_statement];
1323 [label="194_ _totalSupply = _totalSupply.sub(value);\n1323-expression_statement-195-195", method="_burn(address account,uint256 value)", type_label=expression_statement];
1332 [label="195_ _balances[account] = _balances[account].sub(value);\n1332-expression_statement-196-196", method="_burn(address account,uint256 value)", type_label=expression_statement];
1355 [label="198_ uint256 counter_re_ent35 =0;\n1355-new_variable-199-199", method="", type_label=new_variable];
1360 [label="199_ function callme_re_ent35() public{\n        require(counter_re_ent35<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent35 += 1;\n    }\n1360-function_definition-200-206", method="callme_re_ent35()", type_label=function_definition];
1364 [label="200_ require(counter_re_ent35<=5);\n1364-expression_statement-201-201", method="callme_re_ent35()", type_label=expression_statement];
1371 [label="201_ if\n1371-if-202-204", method="callme_re_ent35()", type_label=if];
3191 [label="201_ end_if", method="callme_re_ent35()", type_label=end_if];
1386 [label="204_ counter_re_ent35 += 1;\n1386-expression_statement-205-205", method="callme_re_ent35()", type_label=expression_statement];
1396 [label="208_ string private _name;\n1396-new_variable-209-209", method="", type_label=new_variable];
1401 [label="209_ string private _symbol;\n1401-new_variable-210-210", method="", type_label=new_variable];
1406 [label="210_ mapping(address => uint) userBalance_re_ent26;\n1406-new_variable-211-211", method="", type_label=new_variable];
1412 [label="211_ function withdrawBalance_re_ent26() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent26[msg.sender] = 0;\n    }\n1412-function_definition-212-218", method="withdrawBalance_re_ent26()", type_label=function_definition];
1416 [label="212_ (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n1416-new_variable-213-213", method="withdrawBalance_re_ent26()", type_label=new_variable];
1440 [label="213_ if\n1440-if-214-216", method="withdrawBalance_re_ent26()", type_label=if];
3260 [label="213_ end_if", method="withdrawBalance_re_ent26()", type_label=end_if];
1446 [label="216_ userBalance_re_ent26[msg.sender] = 0;\n1446-expression_statement-217-217", method="withdrawBalance_re_ent26()", type_label=expression_statement];
1454 [label="218_ uint8 private _decimals;\n1454-new_variable-219-219", method="", type_label=new_variable];
1473 [label="220_ _name = name;\n1473-expression_statement-221-221", method="", type_label=expression_statement];
1477 [label="221_ _symbol = symbol;\n1477-expression_statement-222-222", method="", type_label=expression_statement];
1481 [label="222_ _decimals = decimals;\n1481-expression_statement-223-223", method="", type_label=expression_statement];
1485 [label="224_ mapping(address => uint) userBalance_re_ent40;\n1485-new_variable-225-225", method="", type_label=new_variable];
1491 [label="225_ function withdrawBalance_re_ent40() public{\n        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent40[msg.sender] = 0;\n    }\n1491-function_definition-226-232", method="withdrawBalance_re_ent40()", type_label=function_definition];
1495 [label="226_ (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n1495-new_variable-227-227", method="withdrawBalance_re_ent40()", type_label=new_variable];
1519 [label="227_ if\n1519-if-228-230", method="withdrawBalance_re_ent40()", type_label=if];
3339 [label="227_ end_if", method="withdrawBalance_re_ent40()", type_label=end_if];
1525 [label="230_ userBalance_re_ent40[msg.sender] = 0;\n1525-expression_statement-231-231", method="withdrawBalance_re_ent40()", type_label=expression_statement];
1533 [label="232_ function name() public view returns (string memory) {\n        return _name;\n    }\n1533-function_definition-233-235", method="name()", type_label=function_definition];
1542 [label="233_ return _name;\n1542-return-234-234", method="name()", type_label=return];
1544 [label="235_ mapping(address => uint) userBalance_re_ent33;\n1544-new_variable-236-236", method="", type_label=new_variable];
1550 [label="236_ function withdrawBalance_re_ent33() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent33[msg.sender] = 0;\n    }\n1550-function_definition-237-243", method="withdrawBalance_re_ent33()", type_label=function_definition];
1554 [label="237_ (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n1554-new_variable-238-238", method="withdrawBalance_re_ent33()", type_label=new_variable];
1578 [label="238_ if\n1578-if-239-241", method="withdrawBalance_re_ent33()", type_label=if];
3398 [label="238_ end_if", method="withdrawBalance_re_ent33()", type_label=end_if];
1584 [label="241_ userBalance_re_ent33[msg.sender] = 0;\n1584-expression_statement-242-242", method="withdrawBalance_re_ent33()", type_label=expression_statement];
1592 [label="243_ function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n1592-function_definition-244-246", method="symbol()", type_label=function_definition];
1601 [label="244_ return _symbol;\n1601-return-245-245", method="symbol()", type_label=return];
1603 [label="246_ bool not_called_re_ent27 = true;\n1603-new_variable-247-247", method="", type_label=new_variable];
1609 [label="247_ function bug_re_ent27() public{\n        require(not_called_re_ent27);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent27 = false;\n    }\n1609-function_definition-248-254", method="bug_re_ent27()", type_label=function_definition];
1613 [label="248_ require(not_called_re_ent27);\n1613-expression_statement-249-249", method="bug_re_ent27()", type_label=expression_statement];
1618 [label="249_ if\n1618-if-250-252", method="bug_re_ent27()", type_label=if];
3438 [label="249_ end_if", method="bug_re_ent27()", type_label=end_if];
1633 [label="252_ not_called_re_ent27 = false;\n1633-expression_statement-253-253", method="bug_re_ent27()", type_label=expression_statement];
1638 [label="254_ function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n1638-function_definition-255-257", method="decimals()", type_label=function_definition];
1647 [label="255_ return _decimals;\n1647-return-256-256", method="decimals()", type_label=return];
1649 [label="257_ mapping(address => uint) balances_re_ent31;\n1649-new_variable-258-258", method="", type_label=new_variable];
1655 [label="258_ function withdrawFunds_re_ent31 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent31[msg.sender] -= _weiToWithdraw;\n    }\n1655-function_definition-259-263", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=function_definition];
1663 [label="259_ require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n1663-expression_statement-260-260", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
1674 [label="260_ require(msg.sender.send(_weiToWithdraw));\n1674-expression_statement-261-261", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
1686 [label="261_ balances_re_ent31[msg.sender] -= _weiToWithdraw;\n1686-expression_statement-262-262", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
1703 [label="265_ bool not_called_re_ent20 = true;\n1703-new_variable-266-266", method="", type_label=new_variable];
1709 [label="266_ function bug_re_ent20() public{\n        require(not_called_re_ent20);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent20 = false;\n    }\n1709-function_definition-267-273", method="bug_re_ent20()", type_label=function_definition];
1713 [label="267_ require(not_called_re_ent20);\n1713-expression_statement-268-268", method="bug_re_ent20()", type_label=expression_statement];
1718 [label="268_ if\n1718-if-269-271", method="bug_re_ent20()", type_label=if];
3538 [label="268_ end_if", method="bug_re_ent20()", type_label=end_if];
1733 [label="271_ not_called_re_ent20 = false;\n1733-expression_statement-272-272", method="bug_re_ent20()", type_label=expression_statement];
1738 [label="273_ uint8 public constant DECIMALS = 18;\n1738-new_variable-274-274", method="", type_label=new_variable];
1744 [label="274_ uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n1744-new_variable-275-275", method="", type_label=new_variable];
1758 [label="275_ ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS)\n1758-expression_statement-276-276", method="", type_label=expression_statement];
1769 [label="276_ _mint(msg.sender, INITIAL_SUPPLY);\n1769-expression_statement-277-277", method="", type_label=expression_statement];
1778 [label="278_ bool not_called_re_ent13 = true;\n1778-new_variable-279-279", method="", type_label=new_variable];
1784 [label="279_ function bug_re_ent13() public{\n        require(not_called_re_ent13);\n        (bool success,)=msg.sender.call.value(1 ether)(\"\");\n        if( ! success ){\n            revert();\n        }\n        not_called_re_ent13 = false;\n    }\n1784-function_definition-280-287", method="bug_re_ent13()", type_label=function_definition];
1788 [label="280_ require(not_called_re_ent13);\n1788-expression_statement-281-281", method="bug_re_ent13()", type_label=expression_statement];
1793 [label="281_ (bool success,)=msg.sender.call.value(1 ether)(\"\");\n1793-new_variable-282-282", method="bug_re_ent13()", type_label=new_variable];
1814 [label="282_ if\n1814-if-283-285", method="bug_re_ent13()", type_label=if];
3634 [label="282_ end_if", method="bug_re_ent13()", type_label=end_if];
1820 [label="285_ not_called_re_ent13 = false;\n1820-expression_statement-286-286", method="bug_re_ent13()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 1850  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1850 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 1850  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
329 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
337 -> 348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
348 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
368 -> 373  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
381 -> 386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
386 -> 390  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
394 -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
398 -> 416  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
416 -> 2236  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
421 -> 427  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
435 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
440 -> 445  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
445 -> 450  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
456 -> 460  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
460 -> 471  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
471 -> 481  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
481 -> 490  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
498 -> 505  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
511 -> 515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 2335  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
550 -> 559  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
559 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
567 -> 571  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
571 -> 582  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
582 -> 592  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
592 -> 601  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
609 -> 622  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
622 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
632 -> 640  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
640 -> 651  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
651 -> 663  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
671 -> 687  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 698  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
698 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
707 -> 711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
711 -> 722  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
722 -> 732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
732 -> 741  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
749 -> 769  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
769 -> 778  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
778 -> 800  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
800 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
808 -> 812  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
812 -> 819  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
819 -> 2639  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
838 -> 854  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
854 -> 865  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
865 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
868 -> 872  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
876 -> 880  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
880 -> 2700  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
891 -> 897  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
905 -> 922  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
922 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
933 -> 937  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
937 -> 944  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
944 -> 2764  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
963 -> 971  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
980 -> 984  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
988 -> 992  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
992 -> 2812  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1003 -> 1009  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1017 -> 1029  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1029 -> 1038  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1038 -> 1047  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1076 -> 1080  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1080 -> 1104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1104 -> 1106  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1104 -> 2924  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2924 -> 1114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1106 -> 2924  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1114 -> 1130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1130 -> 1139  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1139 -> 1152  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1179 -> 1183  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1183 -> 1194  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1194 -> 1204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1204 -> 1213  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1221 -> 1237  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1237 -> 1246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1246 -> 1255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1277 -> 1281  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1281 -> 1294  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1281 -> 3101  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3101 -> 1302  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1294 -> 3101  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1302 -> 1314  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1314 -> 1323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1323 -> 1332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1360 -> 1364  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1364 -> 1371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1371 -> 3191  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1396 -> 1401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1401 -> 1406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1412 -> 1416  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1416 -> 1440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1440 -> 3260  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1473 -> 1477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1477 -> 1481  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1491 -> 1495  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1495 -> 1519  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1519 -> 3339  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1533 -> 1542  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1542 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1550 -> 1554  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1554 -> 1578  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1578 -> 3398  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1592 -> 1601  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1601 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1609 -> 1613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1613 -> 1618  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1618 -> 3438  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1638 -> 1647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1647 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1655 -> 1663  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1663 -> 1674  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1674 -> 1686  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1709 -> 1713  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1713 -> 1718  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1718 -> 3538  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1738 -> 1744  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1784 -> 1788  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1788 -> 1793  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1793 -> 1814  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1814 -> 3634  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
}
