digraph  {
13 [label="3_ mapping (address=>uint256) public balances;\n13-new_variable-4-4", method="", type_label=new_variable];
20 [label="4_ uint public MinSum = 1 ether;\n20-new_variable-5-5", method="", type_label=new_variable];
27 [label="5_ LogFile Log = LogFile(0x0486cF65A2F2F3A392CBEa398AFB7F5f0B72FF46);\n27-new_variable-6-6", method="", type_label=new_variable];
36 [label="6_ bool intitalized;\n36-new_variable-7-7", method="", type_label=new_variable];
40 [label="7_ function SetMinSum(uint _val)\n    public\n    {\n        if(intitalized)revert();\n        MinSum = _val;\n    }\n40-function_definition-8-13", method="SetMinSum(uint _val)", type_label=function_definition];
48 [label="10_ if\n48-if-11-11", method="SetMinSum(uint _val)", type_label=if];
306 [label="10_ end_if", method="SetMinSum(uint _val)", type_label=end_if];
52 [label="11_ MinSum = _val;\n52-expression_statement-12-12", method="SetMinSum(uint _val)", type_label=expression_statement];
56 [label="13_ function SetLogFile(address _log)\n    public\n    {\n        if(intitalized)revert();\n        Log = LogFile(_log);\n    }\n56-function_definition-14-19", method="SetLogFile(address _log)", type_label=function_definition];
64 [label="16_ if\n64-if-17-17", method="SetLogFile(address _log)", type_label=if];
322 [label="16_ end_if", method="SetLogFile(address _log)", type_label=end_if];
68 [label="17_ Log = LogFile(_log);\n68-expression_statement-18-18", method="SetLogFile(address _log)", type_label=expression_statement];
75 [label="19_ function Initialized()\n    public\n    {\n        intitalized = true;\n    }\n75-function_definition-20-24", method="Initialized()", type_label=function_definition];
79 [label="22_ intitalized = true;\n79-expression_statement-23-23", method="Initialized()", type_label=expression_statement];
84 [label="24_ function Deposit()\n    public\n    payable\n    {\n        balances[msg.sender]+= msg.value;\n        Log.AddMessage(msg.sender,msg.value,\"Put\");\n    }\n84-function_definition-25-31", method="Deposit()", type_label=function_definition];
89 [label="28_ balances[msg.sender]+= msg.value;\n89-expression_statement-29-29", method="Deposit()", type_label=expression_statement];
99 [label="29_ Log.AddMessage(msg.sender,msg.value,\"Put\");\n99-expression_statement-30-30", method="Deposit()", type_label=expression_statement];
115 [label="31_ function Collect(uint _am)\n    public\n    payable\n    {\n        if(balances[msg.sender]>=MinSum && balances[msg.sender]>=_am)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                balances[msg.sender]-=_am;\n                Log.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }\n    }\n115-function_definition-32-44", method="Collect(uint _am)", type_label=function_definition];
124 [label="35_ if_balances[msg.sender]>=MinSum && balances[msg.sender]>=_am\n124-if-36-43", method="Collect(uint _am)", type_label=if];
382 [label="35_ end_if", method="Collect(uint _am)", type_label=end_if];
141 [label="37_ if\n141-if-38-42", method="Collect(uint _am)", type_label=if];
399 [label="37_ end_if", method="Collect(uint _am)", type_label=end_if];
154 [label="39_ balances[msg.sender]-=_am;\n154-expression_statement-40-40", method="Collect(uint _am)", type_label=expression_statement];
162 [label="40_ Log.AddMessage(msg.sender,_am,\"Collect\");\n162-expression_statement-41-41", method="Collect(uint _am)", type_label=expression_statement];
180 [label="48_ Deposit();\n180-expression_statement-49-49", method="", type_label=expression_statement];
186 [label="53_ struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n186-expression_statement-54-60", method="Message()", type_label=expression_statement];
204 [label="60_ Message[] public History;\n204-new_variable-61-61", method="", type_label=new_variable];
211 [label="61_ Message LastMsg;\n211-new_variable-62-62", method="", type_label=new_variable];
216 [label="62_ function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n216-function_definition-63-71", method="AddMessage(address _adr,uint _val,string _data)", type_label=function_definition];
232 [label="65_ LastMsg.Sender = _adr;\n232-expression_statement-66-66", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
238 [label="66_ LastMsg.Time = now;\n238-expression_statement-67-67", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
244 [label="67_ LastMsg.Val = _val;\n244-expression_statement-68-68", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
250 [label="68_ LastMsg.Data = _data;\n250-expression_statement-69-69", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
256 [label="69_ History.push(LastMsg);\n256-expression_statement-70-70", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
176;
13 -> 20  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
20 -> 27  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
27 -> 36  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
40 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 306  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
56 -> 64  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
64 -> 322  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
75 -> 79  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
84 -> 89  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
89 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
115 -> 124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
124 -> 141  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
124 -> 382  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
141 -> 154  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
141 -> 399  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
399 -> 176  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
154 -> 162  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
162 -> 399  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
186 -> 204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
204 -> 211  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
216 -> 232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
232 -> 238  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
238 -> 244  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
244 -> 250  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
250 -> 256  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
