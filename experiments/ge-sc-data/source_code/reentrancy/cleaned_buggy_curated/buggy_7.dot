digraph  {
13 [label="3_ mapping(address => uint) balances_re_ent21;\n13-new_variable-4-4", method="", type_label=new_variable];
19 [label="4_ function withdraw_balances_re_ent21 () public {\n       (bool success,)= msg.sender.call.value(balances_re_ent21[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent21[msg.sender] = 0;\n      }\n19-function_definition-5-9", method="withdraw_balances_re_ent21()", type_label=function_definition];
23 [label="5_ (bool success,)= msg.sender.call.value(balances_re_ent21[msg.sender ])(\"\");\n23-new_variable-6-6", method="withdraw_balances_re_ent21()", type_label=new_variable];
47 [label="6_ if\n47-if-7-8", method="withdraw_balances_re_ent21()", type_label=if];
1921 [label="6_ end_if", method="withdraw_balances_re_ent21()", type_label=end_if];
49 [label="7_ balances_re_ent21[msg.sender] = 0;\n49-expression_statement-8-8", method="withdraw_balances_re_ent21()", type_label=expression_statement];
57 [label="9_ bool private stopped;\n57-new_variable-10-10", method="", type_label=new_variable];
62 [label="10_ mapping(address => uint) userBalance_re_ent12;\n62-new_variable-11-11", method="", type_label=new_variable];
68 [label="11_ function withdrawBalance_re_ent12() public{\n        if( ! (msg.sender.send(userBalance_re_ent12[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent12[msg.sender] = 0;\n    }\n68-function_definition-12-17", method="withdrawBalance_re_ent12()", type_label=function_definition];
72 [label="12_ if\n72-if-13-15", method="withdrawBalance_re_ent12()", type_label=if];
1946 [label="12_ end_if", method="withdrawBalance_re_ent12()", type_label=end_if];
90 [label="15_ userBalance_re_ent12[msg.sender] = 0;\n90-expression_statement-16-16", method="withdrawBalance_re_ent12()", type_label=expression_statement];
98 [label="17_ address private _owner;\n98-new_variable-18-18", method="", type_label=new_variable];
103 [label="18_ mapping(address => uint) redeemableEther_re_ent11;\n103-new_variable-19-19", method="", type_label=new_variable];
109 [label="19_ function claimReward_re_ent11() public {        \n        require(redeemableEther_re_ent11[msg.sender] > 0);\n        uint transferValue_re_ent11 = redeemableEther_re_ent11[msg.sender];\n        msg.sender.transfer(transferValue_re_ent11);    \n        redeemableEther_re_ent11[msg.sender] = 0;\n    }\n109-function_definition-20-25", method="claimReward_re_ent11()", type_label=function_definition];
113 [label="20_ require(redeemableEther_re_ent11[msg.sender] > 0);\n113-expression_statement-21-21", method="claimReward_re_ent11()", type_label=expression_statement];
124 [label="21_ uint transferValue_re_ent11 = redeemableEther_re_ent11[msg.sender];\n124-new_variable-22-22", method="claimReward_re_ent11()", type_label=new_variable];
134 [label="22_ msg.sender.transfer(transferValue_re_ent11);\n134-expression_statement-23-23", method="claimReward_re_ent11()", type_label=expression_statement];
143 [label="23_ redeemableEther_re_ent11[msg.sender] = 0;\n143-expression_statement-24-24", method="claimReward_re_ent11()", type_label=expression_statement];
151 [label="25_ address private _master;\n151-new_variable-26-26", method="", type_label=new_variable];
156 [label="26_ mapping(address => uint) balances_re_ent36;\n156-new_variable-27-27", method="", type_label=new_variable];
162 [label="27_ function withdraw_balances_re_ent36 () public {\n       if (msg.sender.send(balances_re_ent36[msg.sender ]))\n          balances_re_ent36[msg.sender] = 0;\n      }\n162-function_definition-28-31", method="withdraw_balances_re_ent36()", type_label=function_definition];
166 [label="28_ if\n166-if-29-30", method="withdraw_balances_re_ent36()", type_label=if];
2040 [label="28_ end_if", method="withdraw_balances_re_ent36()", type_label=end_if];
179 [label="29_ balances_re_ent36[msg.sender] = 0;\n179-expression_statement-30-30", method="withdraw_balances_re_ent36()", type_label=expression_statement];
189 [label="32_ uint256 counter_re_ent35 =0;\n189-new_variable-33-33", method="", type_label=new_variable];
194 [label="33_ function callme_re_ent35() public{\n        require(counter_re_ent35<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent35 += 1;\n    }\n194-function_definition-34-40", method="callme_re_ent35()", type_label=function_definition];
198 [label="34_ require(counter_re_ent35<=5);\n198-expression_statement-35-35", method="callme_re_ent35()", type_label=expression_statement];
205 [label="35_ if\n205-if-36-38", method="callme_re_ent35()", type_label=if];
2079 [label="35_ end_if", method="callme_re_ent35()", type_label=end_if];
220 [label="38_ counter_re_ent35 += 1;\n220-expression_statement-39-39", method="callme_re_ent35()", type_label=expression_statement];
226 [label="41_ mapping(address => uint) userBalance_re_ent40;\n226-new_variable-42-42", method="", type_label=new_variable];
232 [label="42_ function withdrawBalance_re_ent40() public{\n        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent40[msg.sender] = 0;\n    }\n232-function_definition-43-49", method="withdrawBalance_re_ent40()", type_label=function_definition];
236 [label="43_ (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n236-new_variable-44-44", method="withdrawBalance_re_ent40()", type_label=new_variable];
260 [label="44_ if\n260-if-45-47", method="withdrawBalance_re_ent40()", type_label=if];
2134 [label="44_ end_if", method="withdrawBalance_re_ent40()", type_label=end_if];
266 [label="47_ userBalance_re_ent40[msg.sender] = 0;\n266-expression_statement-48-48", method="withdrawBalance_re_ent40()", type_label=expression_statement];
284 [label="50_ mapping(address => uint) userBalance_re_ent33;\n284-new_variable-51-51", method="", type_label=new_variable];
290 [label="51_ function withdrawBalance_re_ent33() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent33[msg.sender] = 0;\n    }\n290-function_definition-52-58", method="withdrawBalance_re_ent33()", type_label=function_definition];
294 [label="52_ (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n294-new_variable-53-53", method="withdrawBalance_re_ent33()", type_label=new_variable];
318 [label="53_ if\n318-if-54-56", method="withdrawBalance_re_ent33()", type_label=if];
2192 [label="53_ end_if", method="withdrawBalance_re_ent33()", type_label=end_if];
324 [label="56_ userBalance_re_ent33[msg.sender] = 0;\n324-expression_statement-57-57", method="withdrawBalance_re_ent33()", type_label=expression_statement];
344 [label="61_ stopped = false;\n344-expression_statement-62-62", method="", type_label=expression_statement];
349 [label="62_ _owner = msg.sender;\n349-expression_statement-63-63", method="", type_label=expression_statement];
355 [label="63_ _master = msg.sender;\n355-expression_statement-64-64", method="", type_label=expression_statement];
377 [label="67_ uint256 counter_re_ent42 =0;\n377-new_variable-68-68", method="", type_label=new_variable];
382 [label="68_ function callme_re_ent42() public{\n        require(counter_re_ent42<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent42 += 1;\n    }\n382-function_definition-69-75", method="callme_re_ent42()", type_label=function_definition];
386 [label="69_ require(counter_re_ent42<=5);\n386-expression_statement-70-70", method="callme_re_ent42()", type_label=expression_statement];
393 [label="70_ if\n393-if-71-73", method="callme_re_ent42()", type_label=if];
2267 [label="70_ end_if", method="callme_re_ent42()", type_label=end_if];
408 [label="73_ counter_re_ent42 += 1;\n408-expression_statement-74-74", method="callme_re_ent42()", type_label=expression_statement];
412 [label="75_ function owner() public view returns (address)\n    {\n        return _owner;\n    }\n412-function_definition-76-79", method="owner()", type_label=function_definition];
421 [label="77_ return _owner;\n421-return-78-78", method="owner()", type_label=return];
423 [label="79_ address payable lastPlayer_re_ent2;\n423-new_variable-80-80", method="", type_label=new_variable];
427 [label="80_ uint jackpot_re_ent2;\n427-new_variable-81-81", method="", type_label=new_variable];
431 [label="81_ function buyTicket_re_ent2() public{\n	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))\n        revert();\n      lastPlayer_re_ent2 = msg.sender;\n      jackpot_re_ent2    = address(this).balance;\n    }\n431-function_definition-82-87", method="buyTicket_re_ent2()", type_label=function_definition];
435 [label="82_ if\n435-if-83-84", method="buyTicket_re_ent2()", type_label=if];
2309 [label="82_ end_if", method="buyTicket_re_ent2()", type_label=end_if];
446 [label="84_ lastPlayer_re_ent2 = msg.sender;\n446-expression_statement-85-85", method="buyTicket_re_ent2()", type_label=expression_statement];
452 [label="85_ jackpot_re_ent2    = address(this).balance;\n452-expression_statement-86-86", method="buyTicket_re_ent2()", type_label=expression_statement];
460 [label="87_ function master() public view returns (address)\n    {\n        return _master;\n    }\n460-function_definition-88-91", method="master()", type_label=function_definition];
469 [label="89_ return _master;\n469-return-90-90", method="master()", type_label=return];
471 [label="91_ mapping(address => uint) balances_re_ent17;\n471-new_variable-92-92", method="", type_label=new_variable];
477 [label="92_ function withdrawFunds_re_ent17 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent17[msg.sender] >= _weiToWithdraw);\n        (bool success,)=msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent17[msg.sender] -= _weiToWithdraw;\n    }\n477-function_definition-93-98", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=function_definition];
485 [label="93_ require(balances_re_ent17[msg.sender] >= _weiToWithdraw);\n485-expression_statement-94-94", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
496 [label="94_ (bool success,)=msg.sender.call.value(_weiToWithdraw)(\"\");\n496-new_variable-95-95", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=new_variable];
516 [label="95_ require(success);\n516-expression_statement-96-96", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
521 [label="96_ balances_re_ent17[msg.sender] -= _weiToWithdraw;\n521-expression_statement-97-97", method="withdrawFunds_re_ent17(uint256 _weiToWithdraw)", type_label=expression_statement];
529 [label="98_ modifier onlyOwner()\n    {\n        require(isOwner());\n        _;\n    }\n529-expression_statement-99-103", method="", type_label=expression_statement];
532 [label="100_ require(isOwner());\n532-expression_statement-101-101", method="", type_label=expression_statement];
538 [label="101_ _;\n538-expression_statement-102-102", method="", type_label=expression_statement];
540 [label="103_ modifier onlyMaster()\n    {\n        require(isMaster() || isOwner());\n        _;\n    }\n540-expression_statement-104-108", method="", type_label=expression_statement];
543 [label="105_ require(isMaster() || isOwner());\n543-expression_statement-106-106", method="", type_label=expression_statement];
552 [label="106_ _;\n552-expression_statement-107-107", method="", type_label=expression_statement];
554 [label="108_ modifier onlyWhenNotStopped()\n    {\n        require(!isStopped());\n        _;\n    }\n554-expression_statement-109-113", method="", type_label=expression_statement];
557 [label="110_ require(!isStopped());\n557-expression_statement-111-111", method="", type_label=expression_statement];
564 [label="111_ _;\n564-expression_statement-112-112", method="", type_label=expression_statement];
566 [label="113_ function isOwner() public view returns (bool)\n    {\n        return msg.sender == _owner;\n    }\n566-function_definition-114-117", method="isOwner()", type_label=function_definition];
575 [label="115_ return msg.sender == _owner;\n575-return-116-116", method="isOwner()", type_label=return];
581 [label="117_ address payable lastPlayer_re_ent37;\n581-new_variable-118-118", method="", type_label=new_variable];
585 [label="118_ uint jackpot_re_ent37;\n585-new_variable-119-119", method="", type_label=new_variable];
589 [label="119_ function buyTicket_re_ent37() public{\n	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))\n        revert();\n      lastPlayer_re_ent37 = msg.sender;\n      jackpot_re_ent37    = address(this).balance;\n    }\n589-function_definition-120-125", method="buyTicket_re_ent37()", type_label=function_definition];
593 [label="120_ if\n593-if-121-122", method="buyTicket_re_ent37()", type_label=if];
2467 [label="120_ end_if", method="buyTicket_re_ent37()", type_label=end_if];
604 [label="122_ lastPlayer_re_ent37 = msg.sender;\n604-expression_statement-123-123", method="buyTicket_re_ent37()", type_label=expression_statement];
610 [label="123_ jackpot_re_ent37    = address(this).balance;\n610-expression_statement-124-124", method="buyTicket_re_ent37()", type_label=expression_statement];
618 [label="125_ function isMaster() public view returns (bool)\n    {\n        return msg.sender == _master;\n    }\n618-function_definition-126-129", method="isMaster()", type_label=function_definition];
627 [label="127_ return msg.sender == _master;\n627-return-128-128", method="isMaster()", type_label=return];
633 [label="129_ mapping(address => uint) balances_re_ent3;\n633-new_variable-130-130", method="", type_label=new_variable];
639 [label="130_ function withdrawFunds_re_ent3 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n	(bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent3[msg.sender] -= _weiToWithdraw;\n    }\n639-function_definition-131-136", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=function_definition];
647 [label="131_ require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n647-expression_statement-132-132", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
658 [label="132_ (bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n658-new_variable-133-133", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=new_variable];
678 [label="133_ require(success);\n678-expression_statement-134-134", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
683 [label="134_ balances_re_ent3[msg.sender] -= _weiToWithdraw;\n683-expression_statement-135-135", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
691 [label="136_ function transferOwnership(address newOwner) external onlyOwner\n    {\n        _transferOwnership(newOwner);\n    }\n691-function_definition-137-140", method="transferOwnership(address newOwner)", type_label=function_definition];
698 [label="136_ onlyOwner\n698-expression_statement-137-137", method="transferOwnership(address newOwner)", type_label=expression_statement];
701 [label="138_ _transferOwnership(newOwner);\n701-expression_statement-139-139", method="transferOwnership(address newOwner)", type_label=expression_statement];
706 [label="140_ address payable lastPlayer_re_ent9;\n706-new_variable-141-141", method="", type_label=new_variable];
710 [label="141_ uint jackpot_re_ent9;\n710-new_variable-142-142", method="", type_label=new_variable];
714 [label="142_ function buyTicket_re_ent9() public{\n	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n	    if (!success)\n	        revert();\n      lastPlayer_re_ent9 = msg.sender;\n      jackpot_re_ent9    = address(this).balance;\n    }\n714-function_definition-143-149", method="buyTicket_re_ent9()", type_label=function_definition];
718 [label="143_ (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n718-new_variable-144-144", method="buyTicket_re_ent9()", type_label=new_variable];
736 [label="144_ if\n736-if-145-146", method="buyTicket_re_ent9()", type_label=if];
2610 [label="144_ end_if", method="buyTicket_re_ent9()", type_label=end_if];
741 [label="146_ lastPlayer_re_ent9 = msg.sender;\n741-expression_statement-147-147", method="buyTicket_re_ent9()", type_label=expression_statement];
747 [label="147_ jackpot_re_ent9    = address(this).balance;\n747-expression_statement-148-148", method="buyTicket_re_ent9()", type_label=expression_statement];
755 [label="149_ function transferMasterRole(address newMaster) external onlyOwner\n    {\n        _transferMasterRole(newMaster);\n    }\n755-function_definition-150-153", method="transferMasterRole(address newMaster)", type_label=function_definition];
762 [label="149_ onlyOwner\n762-expression_statement-150-150", method="transferMasterRole(address newMaster)", type_label=expression_statement];
765 [label="151_ _transferMasterRole(newMaster);\n765-expression_statement-152-152", method="transferMasterRole(address newMaster)", type_label=expression_statement];
770 [label="153_ mapping(address => uint) redeemableEther_re_ent25;\n770-new_variable-154-154", method="", type_label=new_variable];
776 [label="154_ function claimReward_re_ent25() public {        \n        require(redeemableEther_re_ent25[msg.sender] > 0);\n        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n        msg.sender.transfer(transferValue_re_ent25);    \n        redeemableEther_re_ent25[msg.sender] = 0;\n    }\n776-function_definition-155-160", method="claimReward_re_ent25()", type_label=function_definition];
780 [label="155_ require(redeemableEther_re_ent25[msg.sender] > 0);\n780-expression_statement-156-156", method="claimReward_re_ent25()", type_label=expression_statement];
791 [label="156_ uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n791-new_variable-157-157", method="claimReward_re_ent25()", type_label=new_variable];
801 [label="157_ msg.sender.transfer(transferValue_re_ent25);\n801-expression_statement-158-158", method="claimReward_re_ent25()", type_label=expression_statement];
810 [label="158_ redeemableEther_re_ent25[msg.sender] = 0;\n810-expression_statement-159-159", method="claimReward_re_ent25()", type_label=expression_statement];
818 [label="160_ function isStopped() public view returns (bool)\n    {\n        return stopped;\n    }\n818-function_definition-161-164", method="isStopped()", type_label=function_definition];
827 [label="162_ return stopped;\n827-return-163-163", method="isStopped()", type_label=return];
829 [label="164_ mapping(address => uint) userBalance_re_ent19;\n829-new_variable-165-165", method="", type_label=new_variable];
835 [label="165_ function withdrawBalance_re_ent19() public{\n        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent19[msg.sender] = 0;\n    }\n835-function_definition-166-171", method="withdrawBalance_re_ent19()", type_label=function_definition];
839 [label="166_ if\n839-if-167-169", method="withdrawBalance_re_ent19()", type_label=if];
2713 [label="166_ end_if", method="withdrawBalance_re_ent19()", type_label=end_if];
857 [label="169_ userBalance_re_ent19[msg.sender] = 0;\n857-expression_statement-170-170", method="withdrawBalance_re_ent19()", type_label=expression_statement];
865 [label="171_ function stop() public onlyOwner\n    {\n        _stop();\n    }\n865-function_definition-172-175", method="stop()", type_label=function_definition];
868 [label="171_ onlyOwner\n868-expression_statement-172-172", method="stop()", type_label=expression_statement];
871 [label="173_ _stop();\n871-expression_statement-174-174", method="stop()", type_label=expression_statement];
874 [label="175_ mapping(address => uint) userBalance_re_ent26;\n874-new_variable-176-176", method="", type_label=new_variable];
880 [label="176_ function withdrawBalance_re_ent26() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent26[msg.sender] = 0;\n    }\n880-function_definition-177-183", method="withdrawBalance_re_ent26()", type_label=function_definition];
884 [label="177_ (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n884-new_variable-178-178", method="withdrawBalance_re_ent26()", type_label=new_variable];
908 [label="178_ if\n908-if-179-181", method="withdrawBalance_re_ent26()", type_label=if];
2782 [label="178_ end_if", method="withdrawBalance_re_ent26()", type_label=end_if];
914 [label="181_ userBalance_re_ent26[msg.sender] = 0;\n914-expression_statement-182-182", method="withdrawBalance_re_ent26()", type_label=expression_statement];
922 [label="183_ function start() public onlyOwner\n    {\n        _start();\n    }\n922-function_definition-184-187", method="start()", type_label=function_definition];
925 [label="183_ onlyOwner\n925-expression_statement-184-184", method="start()", type_label=expression_statement];
928 [label="185_ _start();\n928-expression_statement-186-186", method="start()", type_label=expression_statement];
931 [label="187_ bool not_called_re_ent20 = true;\n931-new_variable-188-188", method="", type_label=new_variable];
937 [label="188_ function bug_re_ent20() public{\n        require(not_called_re_ent20);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent20 = false;\n    }\n937-function_definition-189-195", method="bug_re_ent20()", type_label=function_definition];
941 [label="189_ require(not_called_re_ent20);\n941-expression_statement-190-190", method="bug_re_ent20()", type_label=expression_statement];
946 [label="190_ if\n946-if-191-193", method="bug_re_ent20()", type_label=if];
2820 [label="190_ end_if", method="bug_re_ent20()", type_label=end_if];
961 [label="193_ not_called_re_ent20 = false;\n961-expression_statement-194-194", method="bug_re_ent20()", type_label=expression_statement];
966 [label="195_ function _transferOwnership(address newOwner) internal\n    {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n966-function_definition-196-201", method="_transferOwnership(address newOwner)", type_label=function_definition];
974 [label="197_ require(newOwner != address(0));\n974-expression_statement-198-198", method="_transferOwnership(address newOwner)", type_label=expression_statement];
989 [label="199_ _owner = newOwner;\n989-expression_statement-200-200", method="_transferOwnership(address newOwner)", type_label=expression_statement];
993 [label="201_ mapping(address => uint) redeemableEther_re_ent32;\n993-new_variable-202-202", method="", type_label=new_variable];
999 [label="202_ function claimReward_re_ent32() public {        \n        require(redeemableEther_re_ent32[msg.sender] > 0);\n        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n        msg.sender.transfer(transferValue_re_ent32);    \n        redeemableEther_re_ent32[msg.sender] = 0;\n    }\n999-function_definition-203-208", method="claimReward_re_ent32()", type_label=function_definition];
1003 [label="203_ require(redeemableEther_re_ent32[msg.sender] > 0);\n1003-expression_statement-204-204", method="claimReward_re_ent32()", type_label=expression_statement];
1014 [label="204_ uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n1014-new_variable-205-205", method="claimReward_re_ent32()", type_label=new_variable];
1024 [label="205_ msg.sender.transfer(transferValue_re_ent32);\n1024-expression_statement-206-206", method="claimReward_re_ent32()", type_label=expression_statement];
1033 [label="206_ redeemableEther_re_ent32[msg.sender] = 0;\n1033-expression_statement-207-207", method="claimReward_re_ent32()", type_label=expression_statement];
1041 [label="208_ function _transferMasterRole(address newMaster) internal\n    {\n        require(newMaster != address(0));\n        emit MasterRoleTransferred(_master, newMaster);\n        _master = newMaster;\n    }\n1041-function_definition-209-214", method="_transferMasterRole(address newMaster)", type_label=function_definition];
1049 [label="210_ require(newMaster != address(0));\n1049-expression_statement-211-211", method="_transferMasterRole(address newMaster)", type_label=expression_statement];
1064 [label="212_ _master = newMaster;\n1064-expression_statement-213-213", method="_transferMasterRole(address newMaster)", type_label=expression_statement];
1068 [label="214_ mapping(address => uint) balances_re_ent38;\n1068-new_variable-215-215", method="", type_label=new_variable];
1074 [label="215_ function withdrawFunds_re_ent38 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent38[msg.sender] -= _weiToWithdraw;\n    }\n1074-function_definition-216-220", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=function_definition];
1082 [label="216_ require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n1082-expression_statement-217-217", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
1093 [label="217_ require(msg.sender.send(_weiToWithdraw));\n1093-expression_statement-218-218", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
1105 [label="218_ balances_re_ent38[msg.sender] -= _weiToWithdraw;\n1105-expression_statement-219-219", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
1113 [label="220_ function _stop() internal\n    {\n        emit Stopped();\n        stopped = true;\n    }\n1113-function_definition-221-225", method="_stop()", type_label=function_definition];
1119 [label="223_ stopped = true;\n1119-expression_statement-224-224", method="_stop()", type_label=expression_statement];
1124 [label="225_ mapping(address => uint) redeemableEther_re_ent4;\n1124-new_variable-226-226", method="", type_label=new_variable];
1130 [label="226_ function claimReward_re_ent4() public {        \n        require(redeemableEther_re_ent4[msg.sender] > 0);\n        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n        msg.sender.transfer(transferValue_re_ent4);    \n        redeemableEther_re_ent4[msg.sender] = 0;\n    }\n1130-function_definition-227-232", method="claimReward_re_ent4()", type_label=function_definition];
1134 [label="227_ require(redeemableEther_re_ent4[msg.sender] > 0);\n1134-expression_statement-228-228", method="claimReward_re_ent4()", type_label=expression_statement];
1145 [label="228_ uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n1145-new_variable-229-229", method="claimReward_re_ent4()", type_label=new_variable];
1155 [label="229_ msg.sender.transfer(transferValue_re_ent4);\n1155-expression_statement-230-230", method="claimReward_re_ent4()", type_label=expression_statement];
1164 [label="230_ redeemableEther_re_ent4[msg.sender] = 0;\n1164-expression_statement-231-231", method="claimReward_re_ent4()", type_label=expression_statement];
1172 [label="232_ function _start() internal\n    {\n        emit Started();\n        stopped = false;\n    }\n1172-function_definition-233-237", method="_start()", type_label=function_definition];
1178 [label="235_ stopped = false;\n1178-expression_statement-236-236", method="_start()", type_label=expression_statement];
1183 [label="237_ uint256 counter_re_ent7 =0;\n1183-new_variable-238-238", method="", type_label=new_variable];
1188 [label="238_ function callme_re_ent7() public{\n        require(counter_re_ent7<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent7 += 1;\n    }\n1188-function_definition-239-245", method="callme_re_ent7()", type_label=function_definition];
1192 [label="239_ require(counter_re_ent7<=5);\n1192-expression_statement-240-240", method="callme_re_ent7()", type_label=expression_statement];
1199 [label="240_ if\n1199-if-241-243", method="callme_re_ent7()", type_label=if];
3073 [label="240_ end_if", method="callme_re_ent7()", type_label=end_if];
1214 [label="243_ counter_re_ent7 += 1;\n1214-expression_statement-244-244", method="callme_re_ent7()", type_label=expression_statement];
1224 [label="248_ mapping(address => uint) balances_re_ent1;\n1224-new_variable-249-249", method="", type_label=new_variable];
1230 [label="249_ function withdraw_balances_re_ent1 () public {\n       (bool success,) =msg.sender.call.value(balances_re_ent1[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent1[msg.sender] = 0;\n      }\n1230-function_definition-250-254", method="withdraw_balances_re_ent1()", type_label=function_definition];
1234 [label="250_ (bool success,) =msg.sender.call.value(balances_re_ent1[msg.sender ])(\"\");\n1234-new_variable-251-251", method="withdraw_balances_re_ent1()", type_label=new_variable];
1258 [label="251_ if\n1258-if-252-253", method="withdraw_balances_re_ent1()", type_label=if];
3132 [label="251_ end_if", method="withdraw_balances_re_ent1()", type_label=end_if];
1260 [label="252_ balances_re_ent1[msg.sender] = 0;\n1260-expression_statement-253-253", method="withdraw_balances_re_ent1()", type_label=expression_statement];
1268 [label="254_ mapping(string => string) private btc;\n1268-new_variable-255-255", method="", type_label=new_variable];
1275 [label="255_ bool not_called_re_ent41 = true;\n1275-new_variable-256-256", method="", type_label=new_variable];
1281 [label="256_ function bug_re_ent41() public{\n        require(not_called_re_ent41);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent41 = false;\n    }\n1281-function_definition-257-263", method="bug_re_ent41()", type_label=function_definition];
1285 [label="257_ require(not_called_re_ent41);\n1285-expression_statement-258-258", method="bug_re_ent41()", type_label=expression_statement];
1290 [label="258_ if\n1290-if-259-261", method="bug_re_ent41()", type_label=if];
3164 [label="258_ end_if", method="bug_re_ent41()", type_label=end_if];
1305 [label="261_ not_called_re_ent41 = false;\n1305-expression_statement-262-262", method="bug_re_ent41()", type_label=expression_statement];
1310 [label="263_ mapping(string => address) private eth;\n1310-new_variable-264-264", method="", type_label=new_variable];
1317 [label="264_ bool not_called_re_ent27 = true;\n1317-new_variable-265-265", method="", type_label=new_variable];
1323 [label="265_ function bug_re_ent27() public{\n        require(not_called_re_ent27);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent27 = false;\n    }\n1323-function_definition-266-272", method="bug_re_ent27()", type_label=function_definition];
1327 [label="266_ require(not_called_re_ent27);\n1327-expression_statement-267-267", method="bug_re_ent27()", type_label=expression_statement];
1332 [label="267_ if\n1332-if-268-270", method="bug_re_ent27()", type_label=if];
3206 [label="267_ end_if", method="bug_re_ent27()", type_label=end_if];
1347 [label="270_ not_called_re_ent27 = false;\n1347-expression_statement-271-271", method="bug_re_ent27()", type_label=expression_statement];
1366 [label="273_ mapping(address => uint) balances_re_ent31;\n1366-new_variable-274-274", method="", type_label=new_variable];
1372 [label="274_ function withdrawFunds_re_ent31 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent31[msg.sender] -= _weiToWithdraw;\n    }\n1372-function_definition-275-279", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=function_definition];
1380 [label="275_ require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n1380-expression_statement-276-276", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
1391 [label="276_ require(msg.sender.send(_weiToWithdraw));\n1391-expression_statement-277-277", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
1403 [label="277_ balances_re_ent31[msg.sender] -= _weiToWithdraw;\n1403-expression_statement-278-278", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
1421 [label="280_ bool not_called_re_ent13 = true;\n1421-new_variable-281-281", method="", type_label=new_variable];
1427 [label="281_ function bug_re_ent13() public{\n        require(not_called_re_ent13);\n        (bool success,)=msg.sender.call.value(1 ether)(\"\");\n        if( ! success ){\n            revert();\n        }\n        not_called_re_ent13 = false;\n    }\n1427-function_definition-282-289", method="bug_re_ent13()", type_label=function_definition];
1431 [label="282_ require(not_called_re_ent13);\n1431-expression_statement-283-283", method="bug_re_ent13()", type_label=expression_statement];
1436 [label="283_ (bool success,)=msg.sender.call.value(1 ether)(\"\");\n1436-new_variable-284-284", method="bug_re_ent13()", type_label=new_variable];
1457 [label="284_ if\n1457-if-285-287", method="bug_re_ent13()", type_label=if];
3331 [label="284_ end_if", method="bug_re_ent13()", type_label=end_if];
1463 [label="287_ not_called_re_ent13 = false;\n1463-expression_statement-288-288", method="bug_re_ent13()", type_label=expression_statement];
1474 [label="290_ function version() external pure returns(string memory)\n    {\n        return '1.0.0';\n    }\n1474-function_definition-291-294", method="version()", type_label=function_definition];
1483 [label="292_ return '1.0.0';\n1483-return-293-293", method="version()", type_label=return];
1486 [label="294_ address payable lastPlayer_re_ent23;\n1486-new_variable-295-295", method="", type_label=new_variable];
1490 [label="295_ uint jackpot_re_ent23;\n1490-new_variable-296-296", method="", type_label=new_variable];
1494 [label="296_ function buyTicket_re_ent23() public{\n	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))\n        revert();\n      lastPlayer_re_ent23 = msg.sender;\n      jackpot_re_ent23    = address(this).balance;\n    }\n1494-function_definition-297-302", method="buyTicket_re_ent23()", type_label=function_definition];
1498 [label="297_ if\n1498-if-298-299", method="buyTicket_re_ent23()", type_label=if];
3372 [label="297_ end_if", method="buyTicket_re_ent23()", type_label=end_if];
1509 [label="299_ lastPlayer_re_ent23 = msg.sender;\n1509-expression_statement-300-300", method="buyTicket_re_ent23()", type_label=expression_statement];
1515 [label="300_ jackpot_re_ent23    = address(this).balance;\n1515-expression_statement-301-301", method="buyTicket_re_ent23()", type_label=expression_statement];
1523 [label="302_ function getAddress(string calldata account) external view returns (string memory, address)\n    {\n        return (btc[account], eth[account]);\n    }\n1523-function_definition-303-306", method="getAddress(string calldata account)", type_label=function_definition];
1539 [label="304_ return (btc[account], eth[account]);\n1539-return-305-305", method="getAddress(string calldata account)", type_label=return];
1547 [label="306_ uint256 counter_re_ent14 =0;\n1547-new_variable-307-307", method="", type_label=new_variable];
1552 [label="307_ function callme_re_ent14() public{\n        require(counter_re_ent14<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent14 += 1;\n    }\n1552-function_definition-308-314", method="callme_re_ent14()", type_label=function_definition];
1556 [label="308_ require(counter_re_ent14<=5);\n1556-expression_statement-309-309", method="callme_re_ent14()", type_label=expression_statement];
1563 [label="309_ if\n1563-if-310-312", method="callme_re_ent14()", type_label=if];
3437 [label="309_ end_if", method="callme_re_ent14()", type_label=end_if];
1578 [label="312_ counter_re_ent14 += 1;\n1578-expression_statement-313-313", method="callme_re_ent14()", type_label=expression_statement];
1582 [label="314_ function setAddress(string calldata account, string calldata btcAddress, address ethAddress) external onlyMaster onlyWhenNotStopped\n    {\n        require(bytes(account).length > 0);\n        btc[account] = btcAddress;\n        eth[account] = ethAddress;\n        emit SetAddress(account, btcAddress, ethAddress);\n    }\n1582-function_definition-315-321", method="setAddress(string calldata account,string calldata btcAddress,address ethAddress)", type_label=function_definition];
1597 [label="314_ onlyMaster\n1597-expression_statement-315-315", method="setAddress(string calldata account,string calldata btcAddress,address ethAddress)", type_label=expression_statement];
1599 [label="314_ onlyWhenNotStopped\n1599-expression_statement-315-315", method="setAddress(string calldata account,string calldata btcAddress,address ethAddress)", type_label=expression_statement];
1602 [label="316_ require(bytes(account).length > 0);\n1602-expression_statement-317-317", method="setAddress(string calldata account,string calldata btcAddress,address ethAddress)", type_label=expression_statement];
1613 [label="317_ btc[account] = btcAddress;\n1613-expression_statement-318-318", method="setAddress(string calldata account,string calldata btcAddress,address ethAddress)", type_label=expression_statement];
1619 [label="318_ eth[account] = ethAddress;\n1619-expression_statement-319-319", method="setAddress(string calldata account,string calldata btcAddress,address ethAddress)", type_label=expression_statement];
1633 [label="321_ address payable lastPlayer_re_ent30;\n1633-new_variable-322-322", method="", type_label=new_variable];
1637 [label="322_ uint jackpot_re_ent30;\n1637-new_variable-323-323", method="", type_label=new_variable];
1641 [label="323_ function buyTicket_re_ent30() public{\n	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))\n        revert();\n      lastPlayer_re_ent30 = msg.sender;\n      jackpot_re_ent30    = address(this).balance;\n    }\n1641-function_definition-324-329", method="buyTicket_re_ent30()", type_label=function_definition];
1645 [label="324_ if\n1645-if-325-326", method="buyTicket_re_ent30()", type_label=if];
3519 [label="324_ end_if", method="buyTicket_re_ent30()", type_label=end_if];
1656 [label="326_ lastPlayer_re_ent30 = msg.sender;\n1656-expression_statement-327-327", method="buyTicket_re_ent30()", type_label=expression_statement];
1662 [label="327_ jackpot_re_ent30    = address(this).balance;\n1662-expression_statement-328-328", method="buyTicket_re_ent30()", type_label=expression_statement];
1670 [label="329_ function updateAccount(string calldata from, string calldata to) external onlyMaster onlyWhenNotStopped\n    {\n        require(bytes(from).length > 0);\n        require(bytes(to).length > 0);\n        btc[to] = btc[from];\n        eth[to] = eth[from];\n        btc[from] = '';\n        eth[from] = address(0);\n        emit UpdateAddress(from, to);\n    }\n1670-function_definition-330-339", method="updateAccount(string calldata from,string calldata to)", type_label=function_definition];
1681 [label="329_ onlyMaster\n1681-expression_statement-330-330", method="updateAccount(string calldata from,string calldata to)", type_label=expression_statement];
1683 [label="329_ onlyWhenNotStopped\n1683-expression_statement-330-330", method="updateAccount(string calldata from,string calldata to)", type_label=expression_statement];
1686 [label="331_ require(bytes(from).length > 0);\n1686-expression_statement-332-332", method="updateAccount(string calldata from,string calldata to)", type_label=expression_statement];
1697 [label="332_ require(bytes(to).length > 0);\n1697-expression_statement-333-333", method="updateAccount(string calldata from,string calldata to)", type_label=expression_statement];
1708 [label="333_ btc[to] = btc[from];\n1708-expression_statement-334-334", method="updateAccount(string calldata from,string calldata to)", type_label=expression_statement];
1716 [label="334_ eth[to] = eth[from];\n1716-expression_statement-335-335", method="updateAccount(string calldata from,string calldata to)", type_label=expression_statement];
1724 [label="335_ btc[from] = '';\n1724-expression_statement-336-336", method="updateAccount(string calldata from,string calldata to)", type_label=expression_statement];
1731 [label="336_ eth[from] = address(0);\n1731-expression_statement-337-337", method="updateAccount(string calldata from,string calldata to)", type_label=expression_statement];
1745 [label="339_ mapping(address => uint) balances_re_ent8;\n1745-new_variable-340-340", method="", type_label=new_variable];
1751 [label="340_ function withdraw_balances_re_ent8 () public {\n       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent8[msg.sender] = 0;\n      }\n1751-function_definition-341-345", method="withdraw_balances_re_ent8()", type_label=function_definition];
1755 [label="341_ (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n1755-new_variable-342-342", method="withdraw_balances_re_ent8()", type_label=new_variable];
1779 [label="342_ if\n1779-if-343-344", method="withdraw_balances_re_ent8()", type_label=if];
3653 [label="342_ end_if", method="withdraw_balances_re_ent8()", type_label=end_if];
1781 [label="343_ balances_re_ent8[msg.sender] = 0;\n1781-expression_statement-344-344", method="withdraw_balances_re_ent8()", type_label=expression_statement];
1789 [label="345_ function deleteAccount(string calldata account) external onlyMaster onlyWhenNotStopped\n    {\n        require(bytes(account).length > 0);\n        btc[account] = '';\n        eth[account] = address(0);\n        emit DeleteAddress(account);\n    }\n1789-function_definition-346-352", method="deleteAccount(string calldata account)", type_label=function_definition];
1796 [label="345_ onlyMaster\n1796-expression_statement-346-346", method="deleteAccount(string calldata account)", type_label=expression_statement];
1798 [label="345_ onlyWhenNotStopped\n1798-expression_statement-346-346", method="deleteAccount(string calldata account)", type_label=expression_statement];
1801 [label="347_ require(bytes(account).length > 0);\n1801-expression_statement-348-348", method="deleteAccount(string calldata account)", type_label=expression_statement];
1812 [label="348_ btc[account] = '';\n1812-expression_statement-349-349", method="deleteAccount(string calldata account)", type_label=expression_statement];
1819 [label="349_ eth[account] = address(0);\n1819-expression_statement-350-350", method="deleteAccount(string calldata account)", type_label=expression_statement];
1831 [label="352_ mapping(address => uint) redeemableEther_re_ent39;\n1831-new_variable-353-353", method="", type_label=new_variable];
1837 [label="353_ function claimReward_re_ent39() public {        \n        require(redeemableEther_re_ent39[msg.sender] > 0);\n        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n        msg.sender.transfer(transferValue_re_ent39);    \n        redeemableEther_re_ent39[msg.sender] = 0;\n    }\n1837-function_definition-354-359", method="claimReward_re_ent39()", type_label=function_definition];
1841 [label="354_ require(redeemableEther_re_ent39[msg.sender] > 0);\n1841-expression_statement-355-355", method="claimReward_re_ent39()", type_label=expression_statement];
1852 [label="355_ uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n1852-new_variable-356-356", method="claimReward_re_ent39()", type_label=new_variable];
1862 [label="356_ msg.sender.transfer(transferValue_re_ent39);\n1862-expression_statement-357-357", method="claimReward_re_ent39()", type_label=expression_statement];
1871 [label="357_ redeemableEther_re_ent39[msg.sender] = 0;\n1871-expression_statement-358-358", method="claimReward_re_ent39()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
187;
19 -> 23  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
23 -> 47  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
47 -> 49  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
47 -> 1921  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1921 -> 57  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
49 -> 1921  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
57 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
68 -> 72  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
72 -> 1946  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
98 -> 103  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
113 -> 124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
124 -> 134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
134 -> 143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
162 -> 166  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
166 -> 179  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
166 -> 2040  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2040 -> 187  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
179 -> 2040  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
194 -> 198  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
198 -> 205  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
205 -> 2079  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
232 -> 236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
236 -> 260  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
260 -> 2134  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
290 -> 294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
294 -> 318  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
318 -> 2192  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
344 -> 349  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
349 -> 355  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
382 -> 386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
386 -> 393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
393 -> 2267  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
412 -> 421  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
421 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
423 -> 427  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
431 -> 435  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
435 -> 2309  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
446 -> 452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
460 -> 469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
469 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
477 -> 485  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
485 -> 496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
496 -> 516  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
516 -> 521  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
529 -> 540  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
532 -> 538  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
540 -> 554  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
543 -> 552  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
557 -> 564  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
566 -> 575  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
575 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
581 -> 585  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
589 -> 593  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
593 -> 2467  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
604 -> 610  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
618 -> 627  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
627 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
639 -> 647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
647 -> 658  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
658 -> 678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
678 -> 683  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
691 -> 701  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
706 -> 710  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 718  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
718 -> 736  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
736 -> 2610  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
741 -> 747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
755 -> 765  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
776 -> 780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
780 -> 791  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
791 -> 801  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
801 -> 810  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
818 -> 827  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
827 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
835 -> 839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
839 -> 2713  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
865 -> 871  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
880 -> 884  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
884 -> 908  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
908 -> 2782  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
922 -> 928  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
937 -> 941  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
941 -> 946  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
946 -> 2820  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
966 -> 974  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
999 -> 1003  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1003 -> 1014  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1014 -> 1024  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1024 -> 1033  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1041 -> 1049  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1074 -> 1082  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1082 -> 1093  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1093 -> 1105  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1113 -> 1119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1130 -> 1134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1134 -> 1145  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1145 -> 1155  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1155 -> 1164  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1172 -> 1178  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1188 -> 1192  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1192 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1199 -> 3073  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1230 -> 1234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1234 -> 1258  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1258 -> 1260  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1258 -> 3132  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3132 -> 1268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1260 -> 3132  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1268 -> 1275  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1281 -> 1285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1285 -> 1290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1290 -> 3164  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1310 -> 1317  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1323 -> 1327  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1327 -> 1332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1332 -> 3206  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1372 -> 1380  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1380 -> 1391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1391 -> 1403  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1427 -> 1431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1431 -> 1436  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1436 -> 1457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1457 -> 3331  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1474 -> 1483  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1483 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1486 -> 1490  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1494 -> 1498  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1498 -> 3372  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1509 -> 1515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1523 -> 1539  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1539 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1552 -> 1556  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1556 -> 1563  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1563 -> 3437  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1582 -> 1602  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1597 -> 1599  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1602 -> 1613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1613 -> 1619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1633 -> 1637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1641 -> 1645  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1645 -> 3519  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1656 -> 1662  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1670 -> 1686  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1681 -> 1683  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1686 -> 1697  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1697 -> 1708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1708 -> 1716  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1716 -> 1724  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1724 -> 1731  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1751 -> 1755  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1755 -> 1779  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1779 -> 1781  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1779 -> 3653  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3653 -> 1789  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1781 -> 3653  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1789 -> 1801  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1796 -> 1798  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1801 -> 1812  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1812 -> 1819  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1837 -> 1841  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1841 -> 1852  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1852 -> 1862  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1862 -> 1871  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
