digraph  {
13 [label="2_ bool not_called_re_ent27 = true;\n13-new_variable-3-3", method="", type_label=new_variable];
19 [label="3_ function bug_re_ent27() public{\n        require(not_called_re_ent27);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent27 = false;\n    }\n19-function_definition-4-10", method="bug_re_ent27()", type_label=function_definition];
23 [label="4_ require(not_called_re_ent27);\n23-expression_statement-5-5", method="bug_re_ent27()", type_label=expression_statement];
28 [label="5_ if\n28-if-6-8", method="bug_re_ent27()", type_label=if];
1478 [label="5_ end_if", method="bug_re_ent27()", type_label=end_if];
43 [label="8_ not_called_re_ent27 = false;\n43-expression_statement-9-9", method="bug_re_ent27()", type_label=expression_statement];
62 [label="11_ mapping(address => uint) balances_re_ent31;\n62-new_variable-12-12", method="", type_label=new_variable];
68 [label="12_ function withdrawFunds_re_ent31 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent31[msg.sender] -= _weiToWithdraw;\n    }\n68-function_definition-13-17", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=function_definition];
76 [label="13_ require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n76-expression_statement-14-14", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
87 [label="14_ require(msg.sender.send(_weiToWithdraw));\n87-expression_statement-15-15", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
99 [label="15_ balances_re_ent31[msg.sender] -= _weiToWithdraw;\n99-expression_statement-16-16", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
121 [label="18_ bool not_called_re_ent13 = true;\n121-new_variable-19-19", method="", type_label=new_variable];
127 [label="19_ function bug_re_ent13() public{\n        require(not_called_re_ent13);\n        (bool success,)=msg.sender.call.value(1 ether)(\"\");\n        if( ! success ){\n            revert();\n        }\n        not_called_re_ent13 = false;\n    }\n127-function_definition-20-27", method="bug_re_ent13()", type_label=function_definition];
131 [label="20_ require(not_called_re_ent13);\n131-expression_statement-21-21", method="bug_re_ent13()", type_label=expression_statement];
136 [label="21_ (bool success,)=msg.sender.call.value(1 ether)(\"\");\n136-new_variable-22-22", method="bug_re_ent13()", type_label=new_variable];
157 [label="22_ if\n157-if-23-25", method="bug_re_ent13()", type_label=if];
1607 [label="22_ end_if", method="bug_re_ent13()", type_label=end_if];
163 [label="25_ not_called_re_ent13 = false;\n163-expression_statement-26-26", method="bug_re_ent13()", type_label=expression_statement];
182 [label="28_ address payable lastPlayer_re_ent9;\n182-new_variable-29-29", method="", type_label=new_variable];
186 [label="29_ uint jackpot_re_ent9;\n186-new_variable-30-30", method="", type_label=new_variable];
190 [label="30_ function buyTicket_re_ent9() public{\n	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n	    if (!success)\n	        revert();\n      lastPlayer_re_ent9 = msg.sender;\n      jackpot_re_ent9    = address(this).balance;\n    }\n190-function_definition-31-37", method="buyTicket_re_ent9()", type_label=function_definition];
194 [label="31_ (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n194-new_variable-32-32", method="buyTicket_re_ent9()", type_label=new_variable];
212 [label="32_ if\n212-if-33-34", method="buyTicket_re_ent9()", type_label=if];
1662 [label="32_ end_if", method="buyTicket_re_ent9()", type_label=end_if];
217 [label="34_ lastPlayer_re_ent9 = msg.sender;\n217-expression_statement-35-35", method="buyTicket_re_ent9()", type_label=expression_statement];
223 [label="35_ jackpot_re_ent9    = address(this).balance;\n223-expression_statement-36-36", method="buyTicket_re_ent9()", type_label=expression_statement];
231 [label="37_ uint256 public totalSupply;\n231-new_variable-38-38", method="", type_label=new_variable];
236 [label="38_ mapping(address => uint) redeemableEther_re_ent25;\n236-new_variable-39-39", method="", type_label=new_variable];
242 [label="39_ function claimReward_re_ent25() public {        \n        require(redeemableEther_re_ent25[msg.sender] > 0);\n        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n        msg.sender.transfer(transferValue_re_ent25);    \n        redeemableEther_re_ent25[msg.sender] = 0;\n    }\n242-function_definition-40-45", method="claimReward_re_ent25()", type_label=function_definition];
246 [label="40_ require(redeemableEther_re_ent25[msg.sender] > 0);\n246-expression_statement-41-41", method="claimReward_re_ent25()", type_label=expression_statement];
257 [label="41_ uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n257-new_variable-42-42", method="claimReward_re_ent25()", type_label=new_variable];
267 [label="42_ msg.sender.transfer(transferValue_re_ent25);\n267-expression_statement-43-43", method="claimReward_re_ent25()", type_label=expression_statement];
276 [label="43_ redeemableEther_re_ent25[msg.sender] = 0;\n276-expression_statement-44-44", method="claimReward_re_ent25()", type_label=expression_statement];
284 [label="45_ string public name;\n284-new_variable-46-46", method="", type_label=new_variable];
289 [label="46_ mapping(address => uint) userBalance_re_ent19;\n289-new_variable-47-47", method="", type_label=new_variable];
295 [label="47_ function withdrawBalance_re_ent19() public{\n        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent19[msg.sender] = 0;\n    }\n295-function_definition-48-53", method="withdrawBalance_re_ent19()", type_label=function_definition];
299 [label="48_ if\n299-if-49-51", method="withdrawBalance_re_ent19()", type_label=if];
1749 [label="48_ end_if", method="withdrawBalance_re_ent19()", type_label=end_if];
317 [label="51_ userBalance_re_ent19[msg.sender] = 0;\n317-expression_statement-52-52", method="withdrawBalance_re_ent19()", type_label=expression_statement];
325 [label="53_ uint8 public decimals;\n325-new_variable-54-54", method="", type_label=new_variable];
330 [label="54_ mapping(address => uint) userBalance_re_ent26;\n330-new_variable-55-55", method="", type_label=new_variable];
336 [label="55_ function withdrawBalance_re_ent26() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent26[msg.sender] = 0;\n    }\n336-function_definition-56-62", method="withdrawBalance_re_ent26()", type_label=function_definition];
340 [label="56_ (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n340-new_variable-57-57", method="withdrawBalance_re_ent26()", type_label=new_variable];
364 [label="57_ if\n364-if-58-60", method="withdrawBalance_re_ent26()", type_label=if];
1814 [label="57_ end_if", method="withdrawBalance_re_ent26()", type_label=end_if];
370 [label="60_ userBalance_re_ent26[msg.sender] = 0;\n370-expression_statement-61-61", method="withdrawBalance_re_ent26()", type_label=expression_statement];
378 [label="62_ string public symbol;\n378-new_variable-63-63", method="", type_label=new_variable];
383 [label="63_ bool not_called_re_ent20 = true;\n383-new_variable-64-64", method="", type_label=new_variable];
389 [label="64_ function bug_re_ent20() public{\n        require(not_called_re_ent20);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent20 = false;\n    }\n389-function_definition-65-71", method="bug_re_ent20()", type_label=function_definition];
393 [label="65_ require(not_called_re_ent20);\n393-expression_statement-66-66", method="bug_re_ent20()", type_label=expression_statement];
398 [label="66_ if\n398-if-67-69", method="bug_re_ent20()", type_label=if];
1848 [label="66_ end_if", method="bug_re_ent20()", type_label=end_if];
413 [label="69_ not_called_re_ent20 = false;\n413-expression_statement-70-70", method="bug_re_ent20()", type_label=expression_statement];
418 [label="71_ address public owner;\n418-new_variable-72-72", method="", type_label=new_variable];
423 [label="72_ mapping(address => uint) redeemableEther_re_ent32;\n423-new_variable-73-73", method="", type_label=new_variable];
429 [label="73_ function claimReward_re_ent32() public {        \n        require(redeemableEther_re_ent32[msg.sender] > 0);\n        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n        msg.sender.transfer(transferValue_re_ent32);    \n        redeemableEther_re_ent32[msg.sender] = 0;\n    }\n429-function_definition-74-79", method="claimReward_re_ent32()", type_label=function_definition];
433 [label="74_ require(redeemableEther_re_ent32[msg.sender] > 0);\n433-expression_statement-75-75", method="claimReward_re_ent32()", type_label=expression_statement];
444 [label="75_ uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n444-new_variable-76-76", method="claimReward_re_ent32()", type_label=new_variable];
454 [label="76_ msg.sender.transfer(transferValue_re_ent32);\n454-expression_statement-77-77", method="claimReward_re_ent32()", type_label=expression_statement];
463 [label="77_ redeemableEther_re_ent32[msg.sender] = 0;\n463-expression_statement-78-78", method="claimReward_re_ent32()", type_label=expression_statement];
471 [label="79_ mapping (address => uint256) internal balances;\n471-new_variable-80-80", method="", type_label=new_variable];
478 [label="80_ mapping(address => uint) balances_re_ent38;\n478-new_variable-81-81", method="", type_label=new_variable];
484 [label="81_ function withdrawFunds_re_ent38 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent38[msg.sender] -= _weiToWithdraw;\n    }\n484-function_definition-82-86", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=function_definition];
492 [label="82_ require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n492-expression_statement-83-83", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
503 [label="83_ require(msg.sender.send(_weiToWithdraw));\n503-expression_statement-84-84", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
515 [label="84_ balances_re_ent38[msg.sender] -= _weiToWithdraw;\n515-expression_statement-85-85", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
523 [label="86_ mapping (address => mapping (address => uint256)) internal allowed;\n523-new_variable-87-87", method="", type_label=new_variable];
532 [label="87_ mapping(address => uint) redeemableEther_re_ent4;\n532-new_variable-88-88", method="", type_label=new_variable];
538 [label="88_ function claimReward_re_ent4() public {        \n        require(redeemableEther_re_ent4[msg.sender] > 0);\n        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n        msg.sender.transfer(transferValue_re_ent4);    \n        redeemableEther_re_ent4[msg.sender] = 0;\n    }\n538-function_definition-89-94", method="claimReward_re_ent4()", type_label=function_definition];
542 [label="89_ require(redeemableEther_re_ent4[msg.sender] > 0);\n542-expression_statement-90-90", method="claimReward_re_ent4()", type_label=expression_statement];
553 [label="90_ uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n553-new_variable-91-91", method="claimReward_re_ent4()", type_label=new_variable];
563 [label="91_ msg.sender.transfer(transferValue_re_ent4);\n563-expression_statement-92-92", method="claimReward_re_ent4()", type_label=expression_statement];
572 [label="92_ redeemableEther_re_ent4[msg.sender] = 0;\n572-expression_statement-93-93", method="claimReward_re_ent4()", type_label=expression_statement];
580 [label="94_ bool isTransPaused=false;\n580-new_variable-95-95", method="", type_label=new_variable];
596 [label="99_ owner=msg.sender;\n596-expression_statement-100-100", method="", type_label=expression_statement];
602 [label="100_ if__initialAmount<=0\n602-if-101-107", method="", type_label=if];
2052 [label="100_ end_if", method="", type_label=end_if];
607 [label="101_ totalSupply = 100000000000000000;\n607-expression_statement-102-102", method="", type_label=expression_statement];
611 [label="102_ balances[owner]=totalSupply;\n611-expression_statement-103-103", method="", type_label=expression_statement];
618 [label="104_ totalSupply = _initialAmount;\n618-expression_statement-105-105", method="", type_label=expression_statement];
622 [label="105_ balances[owner]=_initialAmount;\n622-expression_statement-106-106", method="", type_label=expression_statement];
628 [label="107_ if__decimalUnits<=0\n628-if-108-112", method="", type_label=if];
2078 [label="107_ end_if", method="", type_label=end_if];
633 [label="108_ decimals=2;\n633-expression_statement-109-109", method="", type_label=expression_statement];
638 [label="110_ decimals = _decimalUnits;\n638-expression_statement-111-111", method="", type_label=expression_statement];
642 [label="112_ name = \"CareerOn Chain Token\";\n642-expression_statement-113-113", method="", type_label=expression_statement];
647 [label="113_ symbol = \"COT\";\n647-expression_statement-114-114", method="", type_label=expression_statement];
652 [label="115_ uint256 counter_re_ent7 =0;\n652-new_variable-116-116", method="", type_label=new_variable];
657 [label="116_ function callme_re_ent7() public{\n        require(counter_re_ent7<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent7 += 1;\n    }\n657-function_definition-117-123", method="callme_re_ent7()", type_label=function_definition];
661 [label="117_ require(counter_re_ent7<=5);\n661-expression_statement-118-118", method="callme_re_ent7()", type_label=expression_statement];
668 [label="118_ if\n668-if-119-121", method="callme_re_ent7()", type_label=if];
2118 [label="118_ end_if", method="callme_re_ent7()", type_label=end_if];
683 [label="121_ counter_re_ent7 += 1;\n683-expression_statement-122-122", method="callme_re_ent7()", type_label=expression_statement];
687 [label="123_ function transfer(\n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to]\n        );\n        balances[msg.sender] -= _value; \n        balances[_to] += _value; \n		if(msg.sender==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(msg.sender, _to, _value); \n		}\n        return true;\n    }\n687-function_definition-124-141", method="transfer(address _to,uint256 _value)", type_label=function_definition];
704 [label="127_ assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to]\n        );\n704-expression_statement-128-132", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
734 [label="132_ balances[msg.sender] -= _value;\n734-expression_statement-133-133", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
742 [label="133_ balances[_to] += _value;\n742-expression_statement-134-134", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
748 [label="134_ if_msg.sender==owner\n748-if-135-139", method="transfer(address _to,uint256 _value)", type_label=if];
2198 [label="134_ end_if", method="transfer(address _to,uint256 _value)", type_label=end_if];
776 [label="139_ return true;\n776-return-140-140", method="transfer(address _to,uint256 _value)", type_label=return];
779 [label="141_ address payable lastPlayer_re_ent23;\n779-new_variable-142-142", method="", type_label=new_variable];
783 [label="142_ uint jackpot_re_ent23;\n783-new_variable-143-143", method="", type_label=new_variable];
787 [label="143_ function buyTicket_re_ent23() public{\n	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))\n        revert();\n      lastPlayer_re_ent23 = msg.sender;\n      jackpot_re_ent23    = address(this).balance;\n    }\n787-function_definition-144-149", method="buyTicket_re_ent23()", type_label=function_definition];
791 [label="144_ if\n791-if-145-146", method="buyTicket_re_ent23()", type_label=if];
2241 [label="144_ end_if", method="buyTicket_re_ent23()", type_label=end_if];
802 [label="146_ lastPlayer_re_ent23 = msg.sender;\n802-expression_statement-147-147", method="buyTicket_re_ent23()", type_label=expression_statement];
808 [label="147_ jackpot_re_ent23    = address(this).balance;\n808-expression_statement-148-148", method="buyTicket_re_ent23()", type_label=expression_statement];
816 [label="149_ function transferFrom(\n        address _from, \n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to] &&\n                allowed[_from][msg.sender] >= _value\n        );\n        balances[_to] += _value; \n        balances[_from] -= _value;  \n        allowed[_from][msg.sender] -= _value; \n        if(_from==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(_from, _to, _value); \n		}\n        return true;\n    }\n816-function_definition-150-170", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
837 [label="154_ assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to] &&\n                allowed[_from][msg.sender] >= _value\n        );\n837-expression_statement-155-160", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
877 [label="160_ balances[_to] += _value;\n877-expression_statement-161-161", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
883 [label="161_ balances[_from] -= _value;\n883-expression_statement-162-162", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
889 [label="162_ allowed[_from][msg.sender] -= _value;\n889-expression_statement-163-163", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
899 [label="163_ if__from==owner\n899-if-164-168", method="transferFrom(address _from,address _to,uint256 _value)", type_label=if];
2349 [label="163_ end_if", method="transferFrom(address _from,address _to,uint256 _value)", type_label=end_if];
923 [label="168_ return true;\n923-return-169-169", method="transferFrom(address _from,address _to,uint256 _value)", type_label=return];
926 [label="170_ uint256 counter_re_ent14 =0;\n926-new_variable-171-171", method="", type_label=new_variable];
931 [label="171_ function callme_re_ent14() public{\n        require(counter_re_ent14<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent14 += 1;\n    }\n931-function_definition-172-178", method="callme_re_ent14()", type_label=function_definition];
935 [label="172_ require(counter_re_ent14<=5);\n935-expression_statement-173-173", method="callme_re_ent14()", type_label=expression_statement];
942 [label="173_ if\n942-if-174-176", method="callme_re_ent14()", type_label=if];
2392 [label="173_ end_if", method="callme_re_ent14()", type_label=end_if];
957 [label="176_ counter_re_ent14 += 1;\n957-expression_statement-177-177", method="callme_re_ent14()", type_label=expression_statement];
961 [label="178_ function approve(address _spender, uint256 _value) public returns (bool success) \n    { \n        assert(msg.sender!=_spender && _value>0);\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n961-function_definition-179-185", method="approve(address _spender,uint256 _value)", type_label=function_definition];
978 [label="180_ assert(msg.sender!=_spender && _value>0);\n978-expression_statement-181-181", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
991 [label="181_ allowed[msg.sender][_spender] = _value;\n991-expression_statement-182-182", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
1011 [label="183_ return true;\n1011-return-184-184", method="approve(address _spender,uint256 _value)", type_label=return];
1014 [label="185_ address payable lastPlayer_re_ent30;\n1014-new_variable-186-186", method="", type_label=new_variable];
1018 [label="186_ uint jackpot_re_ent30;\n1018-new_variable-187-187", method="", type_label=new_variable];
1022 [label="187_ function buyTicket_re_ent30() public{\n	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))\n        revert();\n      lastPlayer_re_ent30 = msg.sender;\n      jackpot_re_ent30    = address(this).balance;\n    }\n1022-function_definition-188-193", method="buyTicket_re_ent30()", type_label=function_definition];
1026 [label="188_ if\n1026-if-189-190", method="buyTicket_re_ent30()", type_label=if];
2476 [label="188_ end_if", method="buyTicket_re_ent30()", type_label=end_if];
1037 [label="190_ lastPlayer_re_ent30 = msg.sender;\n1037-expression_statement-191-191", method="buyTicket_re_ent30()", type_label=expression_statement];
1043 [label="191_ jackpot_re_ent30    = address(this).balance;\n1043-expression_statement-192-192", method="buyTicket_re_ent30()", type_label=expression_statement];
1051 [label="193_ function allowance(\n        address _owner, \n        address _spender) public view returns (uint256 remaining) \n    {\n        return allowed[_owner][_spender]; \n    }\n1051-function_definition-194-199", method="allowance(address _owner,address _spender)", type_label=function_definition];
1069 [label="197_ return allowed[_owner][_spender];\n1069-return-198-198", method="allowance(address _owner,address _spender)", type_label=return];
1075 [label="199_ mapping(address => uint) balances_re_ent8;\n1075-new_variable-200-200", method="", type_label=new_variable];
1081 [label="200_ function withdraw_balances_re_ent8 () public {\n       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent8[msg.sender] = 0;\n      }\n1081-function_definition-201-205", method="withdraw_balances_re_ent8()", type_label=function_definition];
1085 [label="201_ (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n1085-new_variable-202-202", method="withdraw_balances_re_ent8()", type_label=new_variable];
1109 [label="202_ if\n1109-if-203-204", method="withdraw_balances_re_ent8()", type_label=if];
2559 [label="202_ end_if", method="withdraw_balances_re_ent8()", type_label=end_if];
1111 [label="203_ balances_re_ent8[msg.sender] = 0;\n1111-expression_statement-204-204", method="withdraw_balances_re_ent8()", type_label=expression_statement];
1119 [label="205_ function balanceOf(address accountAddr) public view returns (uint256) {\n        return balances[accountAddr];\n    }\n1119-function_definition-206-208", method="balanceOf(address accountAddr)", type_label=function_definition];
1132 [label="206_ return balances[accountAddr];\n1132-return-207-207", method="balanceOf(address accountAddr)", type_label=return];
1136 [label="208_ mapping(address => uint) redeemableEther_re_ent39;\n1136-new_variable-209-209", method="", type_label=new_variable];
1142 [label="209_ function claimReward_re_ent39() public {        \n        require(redeemableEther_re_ent39[msg.sender] > 0);\n        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n        msg.sender.transfer(transferValue_re_ent39);    \n        redeemableEther_re_ent39[msg.sender] = 0;\n    }\n1142-function_definition-210-215", method="claimReward_re_ent39()", type_label=function_definition];
1146 [label="210_ require(redeemableEther_re_ent39[msg.sender] > 0);\n1146-expression_statement-211-211", method="claimReward_re_ent39()", type_label=expression_statement];
1157 [label="211_ uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n1157-new_variable-212-212", method="claimReward_re_ent39()", type_label=new_variable];
1167 [label="212_ msg.sender.transfer(transferValue_re_ent39);\n1167-expression_statement-213-213", method="claimReward_re_ent39()", type_label=expression_statement];
1176 [label="213_ redeemableEther_re_ent39[msg.sender] = 0;\n1176-expression_statement-214-214", method="claimReward_re_ent39()", type_label=expression_statement];
1184 [label="215_ function changeOwner(address newOwner) public{\n        assert(msg.sender==owner && msg.sender!=newOwner);\n        balances[newOwner]=balances[owner];\n        balances[owner]=0;\n        owner=newOwner;\n        emit OwnerChang(msg.sender,newOwner,balances[owner]); \n    }\n1184-function_definition-216-222", method="changeOwner(address newOwner)", type_label=function_definition];
1192 [label="216_ assert(msg.sender==owner && msg.sender!=newOwner);\n1192-expression_statement-217-217", method="changeOwner(address newOwner)", type_label=expression_statement];
1207 [label="217_ balances[newOwner]=balances[owner];\n1207-expression_statement-218-218", method="changeOwner(address newOwner)", type_label=expression_statement];
1215 [label="218_ balances[owner]=0;\n1215-expression_statement-219-219", method="changeOwner(address newOwner)", type_label=expression_statement];
1221 [label="219_ owner=newOwner;\n1221-expression_statement-220-220", method="changeOwner(address newOwner)", type_label=expression_statement];
1237 [label="222_ mapping(address => uint) balances_re_ent36;\n1237-new_variable-223-223", method="", type_label=new_variable];
1243 [label="223_ function withdraw_balances_re_ent36 () public {\n       if (msg.sender.send(balances_re_ent36[msg.sender ]))\n          balances_re_ent36[msg.sender] = 0;\n      }\n1243-function_definition-224-227", method="withdraw_balances_re_ent36()", type_label=function_definition];
1247 [label="224_ if\n1247-if-225-226", method="withdraw_balances_re_ent36()", type_label=if];
2697 [label="224_ end_if", method="withdraw_balances_re_ent36()", type_label=end_if];
1260 [label="225_ balances_re_ent36[msg.sender] = 0;\n1260-expression_statement-226-226", method="withdraw_balances_re_ent36()", type_label=expression_statement];
1268 [label="227_ function setPauseStatus(bool isPaused)public{\n        assert(msg.sender==owner);\n        isTransPaused=isPaused;\n    }\n1268-function_definition-228-231", method="setPauseStatus(bool isPaused)", type_label=function_definition];
1276 [label="228_ assert(msg.sender==owner);\n1276-expression_statement-229-229", method="setPauseStatus(bool isPaused)", type_label=expression_statement];
1285 [label="229_ isTransPaused=isPaused;\n1285-expression_statement-230-230", method="setPauseStatus(bool isPaused)", type_label=expression_statement];
1289 [label="231_ uint256 counter_re_ent35 =0;\n1289-new_variable-232-232", method="", type_label=new_variable];
1294 [label="232_ function callme_re_ent35() public{\n        require(counter_re_ent35<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent35 += 1;\n    }\n1294-function_definition-233-239", method="callme_re_ent35()", type_label=function_definition];
1298 [label="233_ require(counter_re_ent35<=5);\n1298-expression_statement-234-234", method="callme_re_ent35()", type_label=expression_statement];
1305 [label="234_ if\n1305-if-235-237", method="callme_re_ent35()", type_label=if];
2755 [label="234_ end_if", method="callme_re_ent35()", type_label=end_if];
1320 [label="237_ counter_re_ent35 += 1;\n1320-expression_statement-238-238", method="callme_re_ent35()", type_label=expression_statement];
1324 [label="239_ function changeContractName(string memory _newName,string memory _newSymbol) public {\n        assert(msg.sender==owner);\n        name=_newName;\n        symbol=_newSymbol;\n    }\n1324-function_definition-240-244", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=function_definition];
1336 [label="240_ assert(msg.sender==owner);\n1336-expression_statement-241-241", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=expression_statement];
1345 [label="241_ name=_newName;\n1345-expression_statement-242-242", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=expression_statement];
1349 [label="242_ symbol=_newSymbol;\n1349-expression_statement-243-243", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=expression_statement];
1353 [label="244_ mapping(address => uint) userBalance_re_ent40;\n1353-new_variable-245-245", method="", type_label=new_variable];
1359 [label="245_ function withdrawBalance_re_ent40() public{\n        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent40[msg.sender] = 0;\n    }\n1359-function_definition-246-252", method="withdrawBalance_re_ent40()", type_label=function_definition];
1363 [label="246_ (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n1363-new_variable-247-247", method="withdrawBalance_re_ent40()", type_label=new_variable];
1387 [label="247_ if\n1387-if-248-250", method="withdrawBalance_re_ent40()", type_label=if];
2837 [label="247_ end_if", method="withdrawBalance_re_ent40()", type_label=end_if];
1393 [label="250_ userBalance_re_ent40[msg.sender] = 0;\n1393-expression_statement-251-251", method="withdrawBalance_re_ent40()", type_label=expression_statement];
1407 [label="255_ mapping(address => uint) userBalance_re_ent33;\n1407-new_variable-256-256", method="", type_label=new_variable];
1413 [label="256_ function withdrawBalance_re_ent33() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent33[msg.sender] = 0;\n    }\n1413-function_definition-257-263", method="withdrawBalance_re_ent33()", type_label=function_definition];
1417 [label="257_ (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n1417-new_variable-258-258", method="withdrawBalance_re_ent33()", type_label=new_variable];
1441 [label="258_ if\n1441-if-259-261", method="withdrawBalance_re_ent33()", type_label=if];
2891 [label="258_ end_if", method="withdrawBalance_re_ent33()", type_label=end_if];
1447 [label="261_ userBalance_re_ent33[msg.sender] = 0;\n1447-expression_statement-262-262", method="withdrawBalance_re_ent33()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
766;
915;
19 -> 23  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
23 -> 28  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
28 -> 1478  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
68 -> 76  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
76 -> 87  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
127 -> 131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
131 -> 136  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
136 -> 157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
157 -> 1607  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
182 -> 186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
190 -> 194  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
194 -> 212  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
212 -> 1662  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
217 -> 223  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
231 -> 236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
242 -> 246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
246 -> 257  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
257 -> 267  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
267 -> 276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
284 -> 289  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
295 -> 299  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
299 -> 1749  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
325 -> 330  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
336 -> 340  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
340 -> 364  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 1814  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
378 -> 383  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
389 -> 393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
393 -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
398 -> 1848  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
418 -> 423  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
429 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
433 -> 444  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
444 -> 454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
454 -> 463  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
471 -> 478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
484 -> 492  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
492 -> 503  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
503 -> 515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
523 -> 532  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
538 -> 542  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
542 -> 553  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
553 -> 563  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
563 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
596 -> 602  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
602 -> 607  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
602 -> 618  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2052 -> 628  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
607 -> 611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
611 -> 2052  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
618 -> 622  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
622 -> 2052  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
628 -> 633  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
628 -> 638  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2078 -> 642  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
633 -> 2078  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
638 -> 2078  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
642 -> 647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
657 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 668  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
668 -> 2118  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
687 -> 704  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
704 -> 734  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
734 -> 742  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
742 -> 748  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
776 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
779 -> 783  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
787 -> 791  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
791 -> 2241  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
802 -> 808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
816 -> 837  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
837 -> 877  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
877 -> 883  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
883 -> 889  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
889 -> 899  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
923 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
931 -> 935  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
935 -> 942  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
942 -> 2392  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
961 -> 978  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
978 -> 991  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1011 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1014 -> 1018  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1022 -> 1026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1026 -> 2476  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1037 -> 1043  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1051 -> 1069  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1069 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1081 -> 1085  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1085 -> 1109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1109 -> 1111  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1109 -> 2559  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2559 -> 1119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1111 -> 2559  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1119 -> 1132  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1132 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1142 -> 1146  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1146 -> 1157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1157 -> 1167  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1167 -> 1176  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1184 -> 1192  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1192 -> 1207  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1207 -> 1215  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1215 -> 1221  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1243 -> 1247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1247 -> 1260  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1247 -> 2697  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2697 -> 1268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1260 -> 2697  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1268 -> 1276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1276 -> 1285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1294 -> 1298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1298 -> 1305  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1305 -> 2755  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1324 -> 1336  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1336 -> 1345  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1345 -> 1349  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1359 -> 1363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1363 -> 1387  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1387 -> 2837  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1413 -> 1417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1417 -> 1441  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1441 -> 2891  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
766 -> 2198  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
915 -> 2349  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
}
