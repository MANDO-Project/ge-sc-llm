digraph  {
13 [label="2_ mapping (address => uint) credit;\n13-new_variable-3-3", method="", type_label=new_variable];
19 [label="3_ uint balance;\n19-new_variable-4-4", method="", type_label=new_variable];
23 [label="4_ function withdrawAll() public {\n        uint oCredit = credit[msg.sender];\n        if (oCredit > 0) {\n            balance -= oCredit;\n            bool callResult = msg.sender.call.value(oCredit)();\n            require (callResult);\n            credit[msg.sender] = 0;\n        }\n    }\n23-function_definition-5-13", method="withdrawAll()", type_label=function_definition];
27 [label="5_ uint oCredit = credit[msg.sender];\n27-new_variable-6-6", method="withdrawAll()", type_label=new_variable];
37 [label="6_ if_oCredit > 0\n37-if-7-12", method="withdrawAll()", type_label=if];
128 [label="6_ end_if", method="withdrawAll()", type_label=end_if];
42 [label="7_ balance -= oCredit;\n42-expression_statement-8-8", method="withdrawAll()", type_label=expression_statement];
46 [label="8_ bool callResult = msg.sender.call.value(oCredit)();\n46-new_variable-9-9", method="withdrawAll()", type_label=new_variable];
62 [label="9_ require (callResult);\n62-expression_statement-10-10", method="withdrawAll()", type_label=expression_statement];
67 [label="10_ credit[msg.sender] = 0;\n67-expression_statement-11-11", method="withdrawAll()", type_label=expression_statement];
75 [label="13_ function deposit() public payable {\n        credit[msg.sender] += msg.value;\n        balance += msg.value;\n    }\n75-function_definition-14-17", method="deposit()", type_label=function_definition];
80 [label="14_ credit[msg.sender] += msg.value;\n80-expression_statement-15-15", method="deposit()", type_label=expression_statement];
90 [label="15_ balance += msg.value;\n90-expression_statement-16-16", method="deposit()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 19  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
23 -> 27  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
27 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
37 -> 42  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
37 -> 128  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
128 -> 75  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
42 -> 46  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
46 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 67  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
67 -> 128  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
75 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 90  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
