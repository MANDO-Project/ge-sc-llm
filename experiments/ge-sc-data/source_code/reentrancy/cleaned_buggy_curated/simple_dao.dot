digraph  {
13 [label="2_ mapping (address => uint) public credit;\n13-new_variable-3-3", method="", type_label=new_variable];
20 [label="3_ function donate(address to) payable {\n    credit[to] += msg.value;\n  }\n20-function_definition-4-6", method="donate(address to)", type_label=function_definition];
28 [label="4_ credit[to] += msg.value;\n28-expression_statement-5-5", method="donate(address to)", type_label=expression_statement];
36 [label="6_ function withdraw(uint amount) {\n    if (credit[msg.sender]>= amount) {\n      bool res = msg.sender.call.value(amount)();\n      credit[msg.sender]-=amount;\n    }\n  }\n36-function_definition-7-12", method="withdraw(uint amount)", type_label=function_definition];
43 [label="7_ if_credit[msg.sender]>= amount\n43-if-8-11", method="withdraw(uint amount)", type_label=if];
129 [label="7_ end_if", method="withdraw(uint amount)", type_label=end_if];
52 [label="8_ bool res = msg.sender.call.value(amount)();\n52-new_variable-9-9", method="withdraw(uint amount)", type_label=new_variable];
68 [label="9_ credit[msg.sender]-=amount;\n68-expression_statement-10-10", method="withdraw(uint amount)", type_label=expression_statement];
76 [label="12_ function queryCredit(address to) returns (uint){\n    return credit[to];\n  }\n76-function_definition-13-15", method="queryCredit(address to)", type_label=function_definition];
87 [label="13_ return credit[to];\n87-return-14-14", method="queryCredit(address to)", type_label=return];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
20 -> 28  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
36 -> 43  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
43 -> 52  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
43 -> 129  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
129 -> 76  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
52 -> 68  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
68 -> 129  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
76 -> 87  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
