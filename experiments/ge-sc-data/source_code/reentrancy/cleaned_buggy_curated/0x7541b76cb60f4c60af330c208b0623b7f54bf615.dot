digraph  {
13 [label="3_ function Put(uint _unlockTime)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        acc.unlockTime = _unlockTime>now?_unlockTime:now;\n        LogFile.AddMessage(msg.sender,msg.value,\"Put\");\n    }\n13-function_definition-4-12", method="Put(uint _unlockTime)", type_label=function_definition];
22 [label="7_ var acc = Acc[msg.sender];\n22-new_variable-8-8", method="Put(uint _unlockTime)", type_label=new_variable];
32 [label="8_ acc.balance += msg.value;\n32-expression_statement-9-9", method="Put(uint _unlockTime)", type_label=expression_statement];
40 [label="9_ acc.unlockTime = _unlockTime>now?_unlockTime:now;\n40-expression_statement-10-10", method="Put(uint _unlockTime)", type_label=expression_statement];
51 [label="10_ LogFile.AddMessage(msg.sender,msg.value,\"Put\");\n51-expression_statement-11-11", method="Put(uint _unlockTime)", type_label=expression_statement];
67 [label="12_ function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }\n    }\n67-function_definition-13-26", method="Collect(uint _am)", type_label=function_definition];
76 [label="16_ var acc = Acc[msg.sender];\n76-new_variable-17-17", method="Collect(uint _am)", type_label=new_variable];
86 [label="17_ if_acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime\n86-if-18-25", method="Collect(uint _am)", type_label=if];
353 [label="17_ end_if", method="Collect(uint _am)", type_label=end_if];
105 [label="19_ if\n105-if-20-24", method="Collect(uint _am)", type_label=if];
372 [label="19_ end_if", method="Collect(uint _am)", type_label=end_if];
118 [label="21_ acc.balance-=_am;\n118-expression_statement-22-22", method="Collect(uint _am)", type_label=expression_statement];
124 [label="22_ LogFile.AddMessage(msg.sender,_am,\"Collect\");\n124-expression_statement-23-23", method="Collect(uint _am)", type_label=expression_statement];
142 [label="30_ Put(0);\n142-expression_statement-31-31", method="", type_label=expression_statement];
147 [label="32_ struct Holder   \n    {\n        uint unlockTime;\n        uint balance;\n    }\n147-expression_statement-33-37", method="Holder()", type_label=expression_statement];
157 [label="37_ mapping (address => Holder) public Acc;\n157-new_variable-38-38", method="", type_label=new_variable];
165 [label="38_ Log LogFile;\n165-new_variable-39-39", method="", type_label=new_variable];
170 [label="39_ uint public MinSum = 2 ether;\n170-new_variable-40-40", method="", type_label=new_variable];
177 [label="40_ function U_BANK(address log) public{\n        LogFile = Log(log);\n    }\n177-function_definition-41-43", method="U_BANK(address log)", type_label=function_definition];
185 [label="41_ LogFile = Log(log);\n185-expression_statement-42-42", method="U_BANK(address log)", type_label=expression_statement];
195 [label="46_ struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n195-expression_statement-47-53", method="Message()", type_label=expression_statement];
213 [label="53_ Message[] public History;\n213-new_variable-54-54", method="", type_label=new_variable];
220 [label="54_ Message LastMsg;\n220-new_variable-55-55", method="", type_label=new_variable];
225 [label="55_ function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n225-function_definition-56-64", method="AddMessage(address _adr,uint _val,string _data)", type_label=function_definition];
241 [label="58_ LastMsg.Sender = _adr;\n241-expression_statement-59-59", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
247 [label="59_ LastMsg.Time = now;\n247-expression_statement-60-60", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
253 [label="60_ LastMsg.Val = _val;\n253-expression_statement-61-61", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
259 [label="61_ LastMsg.Data = _data;\n259-expression_statement-62-62", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
265 [label="62_ History.push(LastMsg);\n265-expression_statement-63-63", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
138;
13 -> 22  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
22 -> 32  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
32 -> 40  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
40 -> 51  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
67 -> 76  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
76 -> 86  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
86 -> 105  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
86 -> 353  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
105 -> 118  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
105 -> 372  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
372 -> 138  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
118 -> 124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
124 -> 372  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
147 -> 157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
157 -> 165  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
165 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
177 -> 185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
195 -> 213  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
213 -> 220  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
225 -> 241  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
241 -> 247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
247 -> 253  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
253 -> 259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
259 -> 265  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
