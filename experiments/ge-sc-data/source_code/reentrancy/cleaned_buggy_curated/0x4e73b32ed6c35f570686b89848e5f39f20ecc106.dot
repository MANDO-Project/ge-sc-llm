digraph  {
13 [label="3_ mapping (address=>uint256) public balances;\n13-new_variable-4-4", method="", type_label=new_variable];
20 [label="4_ uint public MinSum;\n20-new_variable-5-5", method="", type_label=new_variable];
25 [label="5_ LogFile Log;\n25-new_variable-6-6", method="", type_label=new_variable];
30 [label="6_ bool intitalized;\n30-new_variable-7-7", method="", type_label=new_variable];
34 [label="7_ function SetMinSum(uint _val)\n    public\n    {\n        require(!intitalized);\n        MinSum = _val;\n    }\n34-function_definition-8-13", method="SetMinSum(uint _val)", type_label=function_definition];
42 [label="10_ require(!intitalized);\n42-expression_statement-11-11", method="SetMinSum(uint _val)", type_label=expression_statement];
48 [label="11_ MinSum = _val;\n48-expression_statement-12-12", method="SetMinSum(uint _val)", type_label=expression_statement];
52 [label="13_ function SetLogFile(address _log)\n    public\n    {\n        require(!intitalized);\n        Log = LogFile(_log);\n    }\n52-function_definition-14-19", method="SetLogFile(address _log)", type_label=function_definition];
60 [label="16_ require(!intitalized);\n60-expression_statement-17-17", method="SetLogFile(address _log)", type_label=expression_statement];
66 [label="17_ Log = LogFile(_log);\n66-expression_statement-18-18", method="SetLogFile(address _log)", type_label=expression_statement];
73 [label="19_ function Initialized()\n    public\n    {\n        intitalized = true;\n    }\n73-function_definition-20-24", method="Initialized()", type_label=function_definition];
77 [label="22_ intitalized = true;\n77-expression_statement-23-23", method="Initialized()", type_label=expression_statement];
82 [label="24_ function Deposit()\n    public\n    payable\n    {\n        balances[msg.sender]+= msg.value;\n        Log.AddMessage(msg.sender,msg.value,\"Put\");\n    }\n82-function_definition-25-31", method="Deposit()", type_label=function_definition];
87 [label="28_ balances[msg.sender]+= msg.value;\n87-expression_statement-29-29", method="Deposit()", type_label=expression_statement];
97 [label="29_ Log.AddMessage(msg.sender,msg.value,\"Put\");\n97-expression_statement-30-30", method="Deposit()", type_label=expression_statement];
113 [label="31_ function Collect(uint _am)\n    public\n    payable\n    {\n        if(balances[msg.sender]>=MinSum && balances[msg.sender]>=_am)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                balances[msg.sender]-=_am;\n                Log.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }\n    }\n113-function_definition-32-44", method="Collect(uint _am)", type_label=function_definition];
122 [label="35_ if_balances[msg.sender]>=MinSum && balances[msg.sender]>=_am\n122-if-36-43", method="Collect(uint _am)", type_label=if];
378 [label="35_ end_if", method="Collect(uint _am)", type_label=end_if];
139 [label="37_ if\n139-if-38-42", method="Collect(uint _am)", type_label=if];
395 [label="37_ end_if", method="Collect(uint _am)", type_label=end_if];
152 [label="39_ balances[msg.sender]-=_am;\n152-expression_statement-40-40", method="Collect(uint _am)", type_label=expression_statement];
160 [label="40_ Log.AddMessage(msg.sender,_am,\"Collect\");\n160-expression_statement-41-41", method="Collect(uint _am)", type_label=expression_statement];
178 [label="48_ Deposit();\n178-expression_statement-49-49", method="", type_label=expression_statement];
184 [label="53_ struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n184-expression_statement-54-60", method="Message()", type_label=expression_statement];
202 [label="60_ Message[] public History;\n202-new_variable-61-61", method="", type_label=new_variable];
209 [label="61_ Message LastMsg;\n209-new_variable-62-62", method="", type_label=new_variable];
214 [label="62_ function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n214-function_definition-63-71", method="AddMessage(address _adr,uint _val,string _data)", type_label=function_definition];
230 [label="65_ LastMsg.Sender = _adr;\n230-expression_statement-66-66", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
236 [label="66_ LastMsg.Time = now;\n236-expression_statement-67-67", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
242 [label="67_ LastMsg.Val = _val;\n242-expression_statement-68-68", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
248 [label="68_ LastMsg.Data = _data;\n248-expression_statement-69-69", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
254 [label="69_ History.push(LastMsg);\n254-expression_statement-70-70", method="AddMessage(address _adr,uint _val,string _data)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
174;
13 -> 20  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
20 -> 25  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
25 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
34 -> 42  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
42 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
52 -> 60  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
60 -> 66  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
82 -> 87  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 97  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
113 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 139  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
122 -> 378  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
139 -> 152  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
139 -> 395  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
395 -> 174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
152 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 395  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
184 -> 202  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
202 -> 209  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
214 -> 230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
236 -> 242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
242 -> 248  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
248 -> 254  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
