digraph  {
13 [label="2_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n13-function_definition-3-7", method="add(uint256 a,uint256 b)", type_label=function_definition];
30 [label="3_ uint256 c = a + b;\n30-new_variable-4-4", method="add(uint256 a,uint256 b)", type_label=new_variable];
38 [label="4_ require(c >= a, \"SafeMath: addition overflow\");\n38-expression_statement-5-5", method="add(uint256 a,uint256 b)", type_label=expression_statement];
48 [label="5_ return c;\n48-return-6-6", method="add(uint256 a,uint256 b)", type_label=return];
50 [label="7_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n        return c;\n    }\n50-function_definition-8-12", method="sub(uint256 a,uint256 b)", type_label=function_definition];
67 [label="8_ require(b <= a, \"SafeMath: subtraction overflow\");\n67-expression_statement-9-9", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
77 [label="9_ uint256 c = a - b;\n77-new_variable-10-10", method="sub(uint256 a,uint256 b)", type_label=new_variable];
85 [label="10_ return c;\n85-return-11-11", method="sub(uint256 a,uint256 b)", type_label=return];
87 [label="12_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n87-function_definition-13-20", method="mul(uint256 a,uint256 b)", type_label=function_definition];
104 [label="13_ if_a == 0\n104-if-14-16", method="mul(uint256 a,uint256 b)", type_label=if];
1911 [label="13_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
109 [label="14_ return 0;\n109-return-15-15", method="mul(uint256 a,uint256 b)", type_label=return];
111 [label="16_ uint256 c = a * b;\n111-new_variable-17-17", method="mul(uint256 a,uint256 b)", type_label=new_variable];
119 [label="17_ require(c / a == b, \"SafeMath: multiplication overflow\");\n119-expression_statement-18-18", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
131 [label="18_ return c;\n131-return-19-19", method="mul(uint256 a,uint256 b)", type_label=return];
133 [label="20_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        return c;\n    }\n133-function_definition-21-25", method="div(uint256 a,uint256 b)", type_label=function_definition];
150 [label="21_ require(b > 0, \"SafeMath: division by zero\");\n150-expression_statement-22-22", method="div(uint256 a,uint256 b)", type_label=expression_statement];
160 [label="22_ uint256 c = a / b;\n160-new_variable-23-23", method="div(uint256 a,uint256 b)", type_label=new_variable];
168 [label="23_ return c;\n168-return-24-24", method="div(uint256 a,uint256 b)", type_label=return];
170 [label="25_ function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n170-function_definition-26-29", method="mod(uint256 a,uint256 b)", type_label=function_definition];
187 [label="26_ require(b != 0, \"SafeMath: modulo by zero\");\n187-expression_statement-27-27", method="mod(uint256 a,uint256 b)", type_label=expression_statement];
197 [label="27_ return a % b;\n197-return-28-28", method="mod(uint256 a,uint256 b)", type_label=return];
204 [label="31_ function totalSupply() external view returns (uint256);\n204-function_definition-32-32", method="totalSupply()", type_label=function_definition];
212 [label="32_ function balanceOf(address account) external view returns (uint256);\n212-function_definition-33-33", method="balanceOf(address account)", type_label=function_definition];
224 [label="33_ function transfer(address recipient, uint256 amount) external returns (bool);\n224-function_definition-34-34", method="transfer(address recipient,uint256 amount)", type_label=function_definition];
239 [label="34_ function allowance(address owner, address spender) external view returns (uint256);\n239-function_definition-35-35", method="allowance(address owner,address spender)", type_label=function_definition];
255 [label="35_ function approve(address spender, uint256 amount) external returns (bool);\n255-function_definition-36-36", method="approve(address spender,uint256 amount)", type_label=function_definition];
270 [label="36_ function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n270-function_definition-37-37", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=function_definition];
328 [label="42_ address payable lastPlayer_re_ent37;\n328-new_variable-43-43", method="", type_label=new_variable];
332 [label="43_ uint jackpot_re_ent37;\n332-new_variable-44-44", method="", type_label=new_variable];
336 [label="44_ function buyTicket_re_ent37() public{\n	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))\n        revert();\n      lastPlayer_re_ent37 = msg.sender;\n      jackpot_re_ent37    = address(this).balance;\n    }\n336-function_definition-45-50", method="buyTicket_re_ent37()", type_label=function_definition];
340 [label="45_ if\n340-if-46-47", method="buyTicket_re_ent37()", type_label=if];
2147 [label="45_ end_if", method="buyTicket_re_ent37()", type_label=end_if];
351 [label="47_ lastPlayer_re_ent37 = msg.sender;\n351-expression_statement-48-48", method="buyTicket_re_ent37()", type_label=expression_statement];
357 [label="48_ jackpot_re_ent37    = address(this).balance;\n357-expression_statement-49-49", method="buyTicket_re_ent37()", type_label=expression_statement];
365 [label="50_ mapping (address => uint256) private _balances;\n365-new_variable-51-51", method="", type_label=new_variable];
372 [label="51_ mapping(address => uint) balances_re_ent3;\n372-new_variable-52-52", method="", type_label=new_variable];
378 [label="52_ function withdrawFunds_re_ent3 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n	(bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n        require(success);   \n        balances_re_ent3[msg.sender] -= _weiToWithdraw;\n    }\n378-function_definition-53-58", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=function_definition];
386 [label="53_ require(balances_re_ent3[msg.sender] >= _weiToWithdraw);\n386-expression_statement-54-54", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
397 [label="54_ (bool success,)= msg.sender.call.value(_weiToWithdraw)(\"\");\n397-new_variable-55-55", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=new_variable];
417 [label="55_ require(success);\n417-expression_statement-56-56", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
422 [label="56_ balances_re_ent3[msg.sender] -= _weiToWithdraw;\n422-expression_statement-57-57", method="withdrawFunds_re_ent3(uint256 _weiToWithdraw)", type_label=expression_statement];
430 [label="58_ mapping (address => mapping (address => uint256)) private _allowances;\n430-new_variable-59-59", method="", type_label=new_variable];
439 [label="59_ address payable lastPlayer_re_ent9;\n439-new_variable-60-60", method="", type_label=new_variable];
443 [label="60_ uint jackpot_re_ent9;\n443-new_variable-61-61", method="", type_label=new_variable];
447 [label="61_ function buyTicket_re_ent9() public{\n	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n	    if (!success)\n	        revert();\n      lastPlayer_re_ent9 = msg.sender;\n      jackpot_re_ent9    = address(this).balance;\n    }\n447-function_definition-62-68", method="buyTicket_re_ent9()", type_label=function_definition];
451 [label="62_ (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)(\"\");\n451-new_variable-63-63", method="buyTicket_re_ent9()", type_label=new_variable];
469 [label="63_ if\n469-if-64-65", method="buyTicket_re_ent9()", type_label=if];
2276 [label="63_ end_if", method="buyTicket_re_ent9()", type_label=end_if];
474 [label="65_ lastPlayer_re_ent9 = msg.sender;\n474-expression_statement-66-66", method="buyTicket_re_ent9()", type_label=expression_statement];
480 [label="66_ jackpot_re_ent9    = address(this).balance;\n480-expression_statement-67-67", method="buyTicket_re_ent9()", type_label=expression_statement];
488 [label="68_ uint256 private _totalSupply;\n488-new_variable-69-69", method="", type_label=new_variable];
493 [label="69_ mapping(address => uint) redeemableEther_re_ent25;\n493-new_variable-70-70", method="", type_label=new_variable];
499 [label="70_ function claimReward_re_ent25() public {        \n        require(redeemableEther_re_ent25[msg.sender] > 0);\n        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n        msg.sender.transfer(transferValue_re_ent25);    \n        redeemableEther_re_ent25[msg.sender] = 0;\n    }\n499-function_definition-71-76", method="claimReward_re_ent25()", type_label=function_definition];
503 [label="71_ require(redeemableEther_re_ent25[msg.sender] > 0);\n503-expression_statement-72-72", method="claimReward_re_ent25()", type_label=expression_statement];
514 [label="72_ uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];\n514-new_variable-73-73", method="claimReward_re_ent25()", type_label=new_variable];
524 [label="73_ msg.sender.transfer(transferValue_re_ent25);\n524-expression_statement-74-74", method="claimReward_re_ent25()", type_label=expression_statement];
533 [label="74_ redeemableEther_re_ent25[msg.sender] = 0;\n533-expression_statement-75-75", method="claimReward_re_ent25()", type_label=expression_statement];
541 [label="76_ string private _name;\n541-new_variable-77-77", method="", type_label=new_variable];
546 [label="77_ mapping(address => uint) userBalance_re_ent19;\n546-new_variable-78-78", method="", type_label=new_variable];
552 [label="78_ function withdrawBalance_re_ent19() public{\n        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){\n            revert();\n        }\n        userBalance_re_ent19[msg.sender] = 0;\n    }\n552-function_definition-79-84", method="withdrawBalance_re_ent19()", type_label=function_definition];
556 [label="79_ if\n556-if-80-82", method="withdrawBalance_re_ent19()", type_label=if];
2363 [label="79_ end_if", method="withdrawBalance_re_ent19()", type_label=end_if];
574 [label="82_ userBalance_re_ent19[msg.sender] = 0;\n574-expression_statement-83-83", method="withdrawBalance_re_ent19()", type_label=expression_statement];
582 [label="84_ string private _symbol;\n582-new_variable-85-85", method="", type_label=new_variable];
587 [label="85_ mapping(address => uint) userBalance_re_ent26;\n587-new_variable-86-86", method="", type_label=new_variable];
593 [label="86_ function withdrawBalance_re_ent26() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent26[msg.sender] = 0;\n    }\n593-function_definition-87-93", method="withdrawBalance_re_ent26()", type_label=function_definition];
597 [label="87_ (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])(\"\");\n597-new_variable-88-88", method="withdrawBalance_re_ent26()", type_label=new_variable];
621 [label="88_ if\n621-if-89-91", method="withdrawBalance_re_ent26()", type_label=if];
2428 [label="88_ end_if", method="withdrawBalance_re_ent26()", type_label=end_if];
627 [label="91_ userBalance_re_ent26[msg.sender] = 0;\n627-expression_statement-92-92", method="withdrawBalance_re_ent26()", type_label=expression_statement];
635 [label="93_ uint8 private _decimals;\n635-new_variable-94-94", method="", type_label=new_variable];
642 [label="95_ _name = \"UBBC Token\";\n642-expression_statement-96-96", method="", type_label=expression_statement];
647 [label="96_ _symbol = \"UBBC\";\n647-expression_statement-97-97", method="", type_label=expression_statement];
652 [label="97_ _decimals = 18;\n652-expression_statement-98-98", method="", type_label=expression_statement];
656 [label="98_ _totalSupply = 260000000 ether;\n656-expression_statement-99-99", method="", type_label=expression_statement];
661 [label="99_ _balances[0x0e475cd2c1f8222868cf85B4f97D7EB70fB3ffD3] = _totalSupply;\n661-expression_statement-100-100", method="", type_label=expression_statement];
667 [label="101_ bool not_called_re_ent20 = true;\n667-new_variable-102-102", method="", type_label=new_variable];
673 [label="102_ function bug_re_ent20() public{\n        require(not_called_re_ent20);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent20 = false;\n    }\n673-function_definition-103-109", method="bug_re_ent20()", type_label=function_definition];
677 [label="103_ require(not_called_re_ent20);\n677-expression_statement-104-104", method="bug_re_ent20()", type_label=expression_statement];
682 [label="104_ if\n682-if-105-107", method="bug_re_ent20()", type_label=if];
2489 [label="104_ end_if", method="bug_re_ent20()", type_label=end_if];
697 [label="107_ not_called_re_ent20 = false;\n697-expression_statement-108-108", method="bug_re_ent20()", type_label=expression_statement];
702 [label="109_ mapping(address => uint) balances_re_ent31;\n702-new_variable-110-110", method="", type_label=new_variable];
708 [label="110_ function withdrawFunds_re_ent31 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent31[msg.sender] -= _weiToWithdraw;\n    }\n708-function_definition-111-115", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=function_definition];
716 [label="111_ require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n716-expression_statement-112-112", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
727 [label="112_ require(msg.sender.send(_weiToWithdraw));\n727-expression_statement-113-113", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
739 [label="113_ balances_re_ent31[msg.sender] -= _weiToWithdraw;\n739-expression_statement-114-114", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
761 [label="116_ bool not_called_re_ent13 = true;\n761-new_variable-117-117", method="", type_label=new_variable];
767 [label="117_ function bug_re_ent13() public{\n        require(not_called_re_ent13);\n        (bool success,)=msg.sender.call.value(1 ether)(\"\");\n        if( ! success ){\n            revert();\n        }\n        not_called_re_ent13 = false;\n    }\n767-function_definition-118-125", method="bug_re_ent13()", type_label=function_definition];
771 [label="118_ require(not_called_re_ent13);\n771-expression_statement-119-119", method="bug_re_ent13()", type_label=expression_statement];
776 [label="119_ (bool success,)=msg.sender.call.value(1 ether)(\"\");\n776-new_variable-120-120", method="bug_re_ent13()", type_label=new_variable];
797 [label="120_ if\n797-if-121-123", method="bug_re_ent13()", type_label=if];
2604 [label="120_ end_if", method="bug_re_ent13()", type_label=end_if];
803 [label="123_ not_called_re_ent13 = false;\n803-expression_statement-124-124", method="bug_re_ent13()", type_label=expression_statement];
822 [label="126_ function name() public view returns (string memory) {\n        return _name;\n    }\n822-function_definition-127-129", method="name()", type_label=function_definition];
831 [label="127_ return _name;\n831-return-128-128", method="name()", type_label=return];
833 [label="129_ mapping(address => uint) redeemableEther_re_ent32;\n833-new_variable-130-130", method="", type_label=new_variable];
839 [label="130_ function claimReward_re_ent32() public {        \n        require(redeemableEther_re_ent32[msg.sender] > 0);\n        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n        msg.sender.transfer(transferValue_re_ent32);    \n        redeemableEther_re_ent32[msg.sender] = 0;\n    }\n839-function_definition-131-136", method="claimReward_re_ent32()", type_label=function_definition];
843 [label="131_ require(redeemableEther_re_ent32[msg.sender] > 0);\n843-expression_statement-132-132", method="claimReward_re_ent32()", type_label=expression_statement];
854 [label="132_ uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n854-new_variable-133-133", method="claimReward_re_ent32()", type_label=new_variable];
864 [label="133_ msg.sender.transfer(transferValue_re_ent32);\n864-expression_statement-134-134", method="claimReward_re_ent32()", type_label=expression_statement];
873 [label="134_ redeemableEther_re_ent32[msg.sender] = 0;\n873-expression_statement-135-135", method="claimReward_re_ent32()", type_label=expression_statement];
881 [label="136_ function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n881-function_definition-137-139", method="symbol()", type_label=function_definition];
890 [label="137_ return _symbol;\n890-return-138-138", method="symbol()", type_label=return];
892 [label="139_ mapping(address => uint) balances_re_ent38;\n892-new_variable-140-140", method="", type_label=new_variable];
898 [label="140_ function withdrawFunds_re_ent38 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent38[msg.sender] -= _weiToWithdraw;\n    }\n898-function_definition-141-145", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=function_definition];
906 [label="141_ require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n906-expression_statement-142-142", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
917 [label="142_ require(msg.sender.send(_weiToWithdraw));\n917-expression_statement-143-143", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
929 [label="143_ balances_re_ent38[msg.sender] -= _weiToWithdraw;\n929-expression_statement-144-144", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
937 [label="145_ function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n937-function_definition-146-148", method="decimals()", type_label=function_definition];
946 [label="146_ return _decimals;\n946-return-147-147", method="decimals()", type_label=return];
948 [label="148_ mapping(address => uint) redeemableEther_re_ent4;\n948-new_variable-149-149", method="", type_label=new_variable];
954 [label="149_ function claimReward_re_ent4() public {        \n        require(redeemableEther_re_ent4[msg.sender] > 0);\n        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n        msg.sender.transfer(transferValue_re_ent4);    \n        redeemableEther_re_ent4[msg.sender] = 0;\n    }\n954-function_definition-150-155", method="claimReward_re_ent4()", type_label=function_definition];
958 [label="150_ require(redeemableEther_re_ent4[msg.sender] > 0);\n958-expression_statement-151-151", method="claimReward_re_ent4()", type_label=expression_statement];
969 [label="151_ uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n969-new_variable-152-152", method="claimReward_re_ent4()", type_label=new_variable];
979 [label="152_ msg.sender.transfer(transferValue_re_ent4);\n979-expression_statement-153-153", method="claimReward_re_ent4()", type_label=expression_statement];
988 [label="153_ redeemableEther_re_ent4[msg.sender] = 0;\n988-expression_statement-154-154", method="claimReward_re_ent4()", type_label=expression_statement];
996 [label="155_ function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n996-function_definition-156-158", method="totalSupply()", type_label=function_definition];
1005 [label="156_ return _totalSupply;\n1005-return-157-157", method="totalSupply()", type_label=return];
1007 [label="158_ uint256 counter_re_ent7 =0;\n1007-new_variable-159-159", method="", type_label=new_variable];
1012 [label="159_ function callme_re_ent7() public{\n        require(counter_re_ent7<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent7 += 1;\n    }\n1012-function_definition-160-166", method="callme_re_ent7()", type_label=function_definition];
1016 [label="160_ require(counter_re_ent7<=5);\n1016-expression_statement-161-161", method="callme_re_ent7()", type_label=expression_statement];
1023 [label="161_ if\n1023-if-162-164", method="callme_re_ent7()", type_label=if];
2830 [label="161_ end_if", method="callme_re_ent7()", type_label=end_if];
1038 [label="164_ counter_re_ent7 += 1;\n1038-expression_statement-165-165", method="callme_re_ent7()", type_label=expression_statement];
1042 [label="166_ function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n1042-function_definition-167-169", method="balanceOf(address account)", type_label=function_definition];
1055 [label="167_ return _balances[account];\n1055-return-168-168", method="balanceOf(address account)", type_label=return];
1059 [label="169_ address payable lastPlayer_re_ent23;\n1059-new_variable-170-170", method="", type_label=new_variable];
1063 [label="170_ uint jackpot_re_ent23;\n1063-new_variable-171-171", method="", type_label=new_variable];
1067 [label="171_ function buyTicket_re_ent23() public{\n	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))\n        revert();\n      lastPlayer_re_ent23 = msg.sender;\n      jackpot_re_ent23    = address(this).balance;\n    }\n1067-function_definition-172-177", method="buyTicket_re_ent23()", type_label=function_definition];
1071 [label="172_ if\n1071-if-173-174", method="buyTicket_re_ent23()", type_label=if];
2878 [label="172_ end_if", method="buyTicket_re_ent23()", type_label=end_if];
1082 [label="174_ lastPlayer_re_ent23 = msg.sender;\n1082-expression_statement-175-175", method="buyTicket_re_ent23()", type_label=expression_statement];
1088 [label="175_ jackpot_re_ent23    = address(this).balance;\n1088-expression_statement-176-176", method="buyTicket_re_ent23()", type_label=expression_statement];
1096 [label="177_ function transfer(address recipient, uint256 amount) public  returns (bool) {\n         _transfer(msg.sender, recipient, amount);\n         return true;\n    }\n1096-function_definition-178-181", method="transfer(address recipient,uint256 amount)", type_label=function_definition];
1112 [label="178_ _transfer(msg.sender, recipient, amount);\n1112-expression_statement-179-179", method="transfer(address recipient,uint256 amount)", type_label=expression_statement];
1123 [label="179_ return true;\n1123-return-180-180", method="transfer(address recipient,uint256 amount)", type_label=return];
1126 [label="181_ uint256 counter_re_ent14 =0;\n1126-new_variable-182-182", method="", type_label=new_variable];
1131 [label="182_ function callme_re_ent14() public{\n        require(counter_re_ent14<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent14 += 1;\n    }\n1131-function_definition-183-189", method="callme_re_ent14()", type_label=function_definition];
1135 [label="183_ require(counter_re_ent14<=5);\n1135-expression_statement-184-184", method="callme_re_ent14()", type_label=expression_statement];
1142 [label="184_ if\n1142-if-185-187", method="callme_re_ent14()", type_label=if];
2949 [label="184_ end_if", method="callme_re_ent14()", type_label=end_if];
1157 [label="187_ counter_re_ent14 += 1;\n1157-expression_statement-188-188", method="callme_re_ent14()", type_label=expression_statement];
1161 [label="189_ function allowance(address owner, address spender) public  view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n1161-function_definition-190-192", method="allowance(address owner,address spender)", type_label=function_definition];
1178 [label="190_ return _allowances[owner][spender];\n1178-return-191-191", method="allowance(address owner,address spender)", type_label=return];
1184 [label="192_ address payable lastPlayer_re_ent30;\n1184-new_variable-193-193", method="", type_label=new_variable];
1188 [label="193_ uint jackpot_re_ent30;\n1188-new_variable-194-194", method="", type_label=new_variable];
1192 [label="194_ function buyTicket_re_ent30() public{\n	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))\n        revert();\n      lastPlayer_re_ent30 = msg.sender;\n      jackpot_re_ent30    = address(this).balance;\n    }\n1192-function_definition-195-200", method="buyTicket_re_ent30()", type_label=function_definition];
1196 [label="195_ if\n1196-if-196-197", method="buyTicket_re_ent30()", type_label=if];
3003 [label="195_ end_if", method="buyTicket_re_ent30()", type_label=end_if];
1207 [label="197_ lastPlayer_re_ent30 = msg.sender;\n1207-expression_statement-198-198", method="buyTicket_re_ent30()", type_label=expression_statement];
1213 [label="198_ jackpot_re_ent30    = address(this).balance;\n1213-expression_statement-199-199", method="buyTicket_re_ent30()", type_label=expression_statement];
1221 [label="200_ function approve(address spender, uint256 value) public  returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n1221-function_definition-201-204", method="approve(address spender,uint256 value)", type_label=function_definition];
1237 [label="201_ _approve(msg.sender, spender, value);\n1237-expression_statement-202-202", method="approve(address spender,uint256 value)", type_label=expression_statement];
1248 [label="202_ return true;\n1248-return-203-203", method="approve(address spender,uint256 value)", type_label=return];
1251 [label="204_ mapping(address => uint) balances_re_ent8;\n1251-new_variable-205-205", method="", type_label=new_variable];
1257 [label="205_ function withdraw_balances_re_ent8 () public {\n       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent8[msg.sender] = 0;\n      }\n1257-function_definition-206-210", method="withdraw_balances_re_ent8()", type_label=function_definition];
1261 [label="206_ (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n1261-new_variable-207-207", method="withdraw_balances_re_ent8()", type_label=new_variable];
1285 [label="207_ if\n1285-if-208-209", method="withdraw_balances_re_ent8()", type_label=if];
3092 [label="207_ end_if", method="withdraw_balances_re_ent8()", type_label=end_if];
1287 [label="208_ balances_re_ent8[msg.sender] = 0;\n1287-expression_statement-209-209", method="withdraw_balances_re_ent8()", type_label=expression_statement];
1295 [label="210_ function transferFrom(address sender, address recipient, uint256 amount) public  returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n1295-function_definition-211-215", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=function_definition];
1315 [label="211_ _transfer(sender, recipient, amount);\n1315-expression_statement-212-212", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1324 [label="212_ _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n1324-expression_statement-213-213", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1346 [label="213_ return true;\n1346-return-214-214", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=return];
1349 [label="215_ mapping(address => uint) redeemableEther_re_ent39;\n1349-new_variable-216-216", method="", type_label=new_variable];
1355 [label="216_ function claimReward_re_ent39() public {        \n        require(redeemableEther_re_ent39[msg.sender] > 0);\n        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n        msg.sender.transfer(transferValue_re_ent39);    \n        redeemableEther_re_ent39[msg.sender] = 0;\n    }\n1355-function_definition-217-222", method="claimReward_re_ent39()", type_label=function_definition];
1359 [label="217_ require(redeemableEther_re_ent39[msg.sender] > 0);\n1359-expression_statement-218-218", method="claimReward_re_ent39()", type_label=expression_statement];
1370 [label="218_ uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n1370-new_variable-219-219", method="claimReward_re_ent39()", type_label=new_variable];
1380 [label="219_ msg.sender.transfer(transferValue_re_ent39);\n1380-expression_statement-220-220", method="claimReward_re_ent39()", type_label=expression_statement];
1389 [label="220_ redeemableEther_re_ent39[msg.sender] = 0;\n1389-expression_statement-221-221", method="claimReward_re_ent39()", type_label=expression_statement];
1397 [label="222_ function increaseAllowance(address spender, uint256 addedValue) public  returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n1397-function_definition-223-226", method="increaseAllowance(address spender,uint256 addedValue)", type_label=function_definition];
1413 [label="223_ _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n1413-expression_statement-224-224", method="increaseAllowance(address spender,uint256 addedValue)", type_label=expression_statement];
1435 [label="224_ return true;\n1435-return-225-225", method="increaseAllowance(address spender,uint256 addedValue)", type_label=return];
1438 [label="226_ mapping(address => uint) balances_re_ent36;\n1438-new_variable-227-227", method="", type_label=new_variable];
1444 [label="227_ function withdraw_balances_re_ent36 () public {\n       if (msg.sender.send(balances_re_ent36[msg.sender ]))\n          balances_re_ent36[msg.sender] = 0;\n      }\n1444-function_definition-228-231", method="withdraw_balances_re_ent36()", type_label=function_definition];
1448 [label="228_ if\n1448-if-229-230", method="withdraw_balances_re_ent36()", type_label=if];
3255 [label="228_ end_if", method="withdraw_balances_re_ent36()", type_label=end_if];
1461 [label="229_ balances_re_ent36[msg.sender] = 0;\n1461-expression_statement-230-230", method="withdraw_balances_re_ent36()", type_label=expression_statement];
1469 [label="231_ function decreaseAllowance(address spender, uint256 subtractedValue) public  returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n1469-function_definition-232-235", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=function_definition];
1485 [label="232_ _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n1485-expression_statement-233-233", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=expression_statement];
1507 [label="233_ return true;\n1507-return-234-234", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=return];
1510 [label="235_ uint256 counter_re_ent35 =0;\n1510-new_variable-236-236", method="", type_label=new_variable];
1515 [label="236_ function callme_re_ent35() public{\n        require(counter_re_ent35<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent35 += 1;\n    }\n1515-function_definition-237-243", method="callme_re_ent35()", type_label=function_definition];
1519 [label="237_ require(counter_re_ent35<=5);\n1519-expression_statement-238-238", method="callme_re_ent35()", type_label=expression_statement];
1526 [label="238_ if\n1526-if-239-241", method="callme_re_ent35()", type_label=if];
3333 [label="238_ end_if", method="callme_re_ent35()", type_label=end_if];
1541 [label="241_ counter_re_ent35 += 1;\n1541-expression_statement-242-242", method="callme_re_ent35()", type_label=expression_statement];
1545 [label="243_ function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n1545-function_definition-244-250", method="_transfer(address sender,address recipient,uint256 amount)", type_label=function_definition];
1561 [label="244_ require(sender != address(0), \"ERC20: transfer from the zero address\");\n1561-expression_statement-245-245", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1573 [label="245_ require(recipient != address(0), \"ERC20: transfer to the zero address\");\n1573-expression_statement-246-246", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1585 [label="246_ _balances[sender] = _balances[sender].sub(amount);\n1585-expression_statement-247-247", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1598 [label="247_ _balances[recipient] = _balances[recipient].add(amount);\n1598-expression_statement-248-248", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1619 [label="250_ mapping(address => uint) userBalance_re_ent40;\n1619-new_variable-251-251", method="", type_label=new_variable];
1625 [label="251_ function withdrawBalance_re_ent40() public{\n        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent40[msg.sender] = 0;\n    }\n1625-function_definition-252-258", method="withdrawBalance_re_ent40()", type_label=function_definition];
1629 [label="252_ (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n1629-new_variable-253-253", method="withdrawBalance_re_ent40()", type_label=new_variable];
1653 [label="253_ if\n1653-if-254-256", method="withdrawBalance_re_ent40()", type_label=if];
3460 [label="253_ end_if", method="withdrawBalance_re_ent40()", type_label=end_if];
1659 [label="256_ userBalance_re_ent40[msg.sender] = 0;\n1659-expression_statement-257-257", method="withdrawBalance_re_ent40()", type_label=expression_statement];
1667 [label="258_ function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n1667-function_definition-259-264", method="_approve(address owner,address spender,uint256 value)", type_label=function_definition];
1683 [label="259_ require(owner != address(0), \"ERC20: approve from the zero address\");\n1683-expression_statement-260-260", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1695 [label="260_ require(spender != address(0), \"ERC20: approve to the zero address\");\n1695-expression_statement-261-261", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1707 [label="261_ _allowances[owner][spender] = value;\n1707-expression_statement-262-262", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1723 [label="264_ mapping(address => uint) userBalance_re_ent33;\n1723-new_variable-265-265", method="", type_label=new_variable];
1729 [label="265_ function withdrawBalance_re_ent33() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent33[msg.sender] = 0;\n    }\n1729-function_definition-266-272", method="withdrawBalance_re_ent33()", type_label=function_definition];
1733 [label="266_ (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n1733-new_variable-267-267", method="withdrawBalance_re_ent33()", type_label=new_variable];
1757 [label="267_ if\n1757-if-268-270", method="withdrawBalance_re_ent33()", type_label=if];
3564 [label="267_ end_if", method="withdrawBalance_re_ent33()", type_label=end_if];
1763 [label="270_ userBalance_re_ent33[msg.sender] = 0;\n1763-expression_statement-271-271", method="withdrawBalance_re_ent33()", type_label=expression_statement];
1777 [label="275_ bool not_called_re_ent27 = true;\n1777-new_variable-276-276", method="", type_label=new_variable];
1783 [label="276_ function bug_re_ent27() public{\n        require(not_called_re_ent27);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent27 = false;\n    }\n1783-function_definition-277-283", method="bug_re_ent27()", type_label=function_definition];
1787 [label="277_ require(not_called_re_ent27);\n1787-expression_statement-278-278", method="bug_re_ent27()", type_label=expression_statement];
1792 [label="278_ if\n1792-if-279-281", method="bug_re_ent27()", type_label=if];
3599 [label="278_ end_if", method="bug_re_ent27()", type_label=end_if];
1807 [label="281_ not_called_re_ent27 = false;\n1807-expression_statement-282-282", method="bug_re_ent27()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
50 -> 67  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
67 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 85  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
85 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
87 -> 104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
104 -> 109  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
104 -> 1911  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1911 -> 111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 1911  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
109 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
111 -> 119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
119 -> 131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
131 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
133 -> 150  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
150 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
168 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
170 -> 187  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
187 -> 197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
197 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
328 -> 332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
336 -> 340  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
340 -> 2147  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
351 -> 357  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
365 -> 372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
378 -> 386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
386 -> 397  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
397 -> 417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
417 -> 422  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
430 -> 439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
439 -> 443  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
447 -> 451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
451 -> 469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
469 -> 2276  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
474 -> 480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
488 -> 493  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
499 -> 503  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
503 -> 514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
514 -> 524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
524 -> 533  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
541 -> 546  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
552 -> 556  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
556 -> 2363  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
582 -> 587  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
593 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
597 -> 621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
621 -> 2428  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
642 -> 647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
647 -> 652  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
652 -> 656  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
656 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
673 -> 677  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
677 -> 682  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
682 -> 2489  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
708 -> 716  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
716 -> 727  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
727 -> 739  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
767 -> 771  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
771 -> 776  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
776 -> 797  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
797 -> 2604  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
822 -> 831  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
831 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
839 -> 843  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
843 -> 854  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
854 -> 864  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
864 -> 873  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
881 -> 890  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
890 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
898 -> 906  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
906 -> 917  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
917 -> 929  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
937 -> 946  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
946 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
954 -> 958  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
958 -> 969  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
969 -> 979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
979 -> 988  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
996 -> 1005  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1005 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1012 -> 1016  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1016 -> 1023  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1023 -> 2830  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1042 -> 1055  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1055 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1059 -> 1063  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1067 -> 1071  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1071 -> 2878  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1082 -> 1088  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1096 -> 1112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1112 -> 1123  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1123 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1131 -> 1135  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1135 -> 1142  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1142 -> 2949  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1161 -> 1178  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1178 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1184 -> 1188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1192 -> 1196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1196 -> 3003  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1207 -> 1213  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1221 -> 1237  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1237 -> 1248  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1248 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1257 -> 1261  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1261 -> 1285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1285 -> 1287  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1285 -> 3092  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3092 -> 1295  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1287 -> 3092  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1295 -> 1315  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1315 -> 1324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1324 -> 1346  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1346 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1355 -> 1359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1359 -> 1370  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1370 -> 1380  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1380 -> 1389  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1397 -> 1413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1413 -> 1435  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1435 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1444 -> 1448  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1448 -> 1461  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1448 -> 3255  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3255 -> 1469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1461 -> 3255  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1469 -> 1485  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1485 -> 1507  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1507 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1515 -> 1519  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1519 -> 1526  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1526 -> 3333  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1545 -> 1561  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1561 -> 1573  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1573 -> 1585  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1585 -> 1598  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1625 -> 1629  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1629 -> 1653  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1653 -> 3460  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1667 -> 1683  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1683 -> 1695  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1695 -> 1707  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1729 -> 1733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1733 -> 1757  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1757 -> 3564  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1783 -> 1787  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1787 -> 1792  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1792 -> 3599  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
}
