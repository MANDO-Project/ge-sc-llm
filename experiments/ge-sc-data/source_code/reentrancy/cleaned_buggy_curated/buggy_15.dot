digraph  {
13 [label="2_ function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external;\n13-function_definition-3-3", method="receiveApproval(address _from,uint256 _value,address _token,bytes calldata _extraData)", type_label=function_definition];
35 [label="5_ bool not_called_re_ent20 = true;\n35-new_variable-6-6", method="", type_label=new_variable];
41 [label="6_ function bug_re_ent20() public{\n        require(not_called_re_ent20);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent20 = false;\n    }\n41-function_definition-7-13", method="bug_re_ent20()", type_label=function_definition];
45 [label="7_ require(not_called_re_ent20);\n45-expression_statement-8-8", method="bug_re_ent20()", type_label=expression_statement];
50 [label="8_ if\n50-if-9-11", method="bug_re_ent20()", type_label=if];
1289 [label="8_ end_if", method="bug_re_ent20()", type_label=end_if];
65 [label="11_ not_called_re_ent20 = false;\n65-expression_statement-12-12", method="bug_re_ent20()", type_label=expression_statement];
70 [label="13_ string public name;\n70-new_variable-14-14", method="", type_label=new_variable];
75 [label="14_ mapping(address => uint) redeemableEther_re_ent32;\n75-new_variable-15-15", method="", type_label=new_variable];
81 [label="15_ function claimReward_re_ent32() public {        \n        require(redeemableEther_re_ent32[msg.sender] > 0);\n        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n        msg.sender.transfer(transferValue_re_ent32);    \n        redeemableEther_re_ent32[msg.sender] = 0;\n    }\n81-function_definition-16-21", method="claimReward_re_ent32()", type_label=function_definition];
85 [label="16_ require(redeemableEther_re_ent32[msg.sender] > 0);\n85-expression_statement-17-17", method="claimReward_re_ent32()", type_label=expression_statement];
96 [label="17_ uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];\n96-new_variable-18-18", method="claimReward_re_ent32()", type_label=new_variable];
106 [label="18_ msg.sender.transfer(transferValue_re_ent32);\n106-expression_statement-19-19", method="claimReward_re_ent32()", type_label=expression_statement];
115 [label="19_ redeemableEther_re_ent32[msg.sender] = 0;\n115-expression_statement-20-20", method="claimReward_re_ent32()", type_label=expression_statement];
123 [label="21_ string public symbol;\n123-new_variable-22-22", method="", type_label=new_variable];
128 [label="22_ mapping(address => uint) balances_re_ent38;\n128-new_variable-23-23", method="", type_label=new_variable];
134 [label="23_ function withdrawFunds_re_ent38 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent38[msg.sender] -= _weiToWithdraw;\n    }\n134-function_definition-24-28", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=function_definition];
142 [label="24_ require(balances_re_ent38[msg.sender] >= _weiToWithdraw);\n142-expression_statement-25-25", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
153 [label="25_ require(msg.sender.send(_weiToWithdraw));\n153-expression_statement-26-26", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
165 [label="26_ balances_re_ent38[msg.sender] -= _weiToWithdraw;\n165-expression_statement-27-27", method="withdrawFunds_re_ent38(uint256 _weiToWithdraw)", type_label=expression_statement];
173 [label="28_ uint8 public decimals = 18;\n173-new_variable-29-29", method="", type_label=new_variable];
179 [label="29_ mapping(address => uint) redeemableEther_re_ent4;\n179-new_variable-30-30", method="", type_label=new_variable];
185 [label="30_ function claimReward_re_ent4() public {        \n        require(redeemableEther_re_ent4[msg.sender] > 0);\n        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n        msg.sender.transfer(transferValue_re_ent4);    \n        redeemableEther_re_ent4[msg.sender] = 0;\n    }\n185-function_definition-31-36", method="claimReward_re_ent4()", type_label=function_definition];
189 [label="31_ require(redeemableEther_re_ent4[msg.sender] > 0);\n189-expression_statement-32-32", method="claimReward_re_ent4()", type_label=expression_statement];
200 [label="32_ uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];\n200-new_variable-33-33", method="claimReward_re_ent4()", type_label=new_variable];
210 [label="33_ msg.sender.transfer(transferValue_re_ent4);\n210-expression_statement-34-34", method="claimReward_re_ent4()", type_label=expression_statement];
219 [label="34_ redeemableEther_re_ent4[msg.sender] = 0;\n219-expression_statement-35-35", method="claimReward_re_ent4()", type_label=expression_statement];
227 [label="36_ uint256 public totalSupply;\n227-new_variable-37-37", method="", type_label=new_variable];
232 [label="37_ uint256 counter_re_ent7 =0;\n232-new_variable-38-38", method="", type_label=new_variable];
237 [label="38_ function callme_re_ent7() public{\n        require(counter_re_ent7<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent7 += 1;\n    }\n237-function_definition-39-45", method="callme_re_ent7()", type_label=function_definition];
241 [label="39_ require(counter_re_ent7<=5);\n241-expression_statement-40-40", method="callme_re_ent7()", type_label=expression_statement];
248 [label="40_ if\n248-if-41-43", method="callme_re_ent7()", type_label=if];
1487 [label="40_ end_if", method="callme_re_ent7()", type_label=end_if];
263 [label="43_ counter_re_ent7 += 1;\n263-expression_statement-44-44", method="callme_re_ent7()", type_label=expression_statement];
267 [label="45_ mapping (address => uint256) public balanceOf;\n267-new_variable-46-46", method="", type_label=new_variable];
274 [label="46_ address payable lastPlayer_re_ent23;\n274-new_variable-47-47", method="", type_label=new_variable];
278 [label="47_ uint jackpot_re_ent23;\n278-new_variable-48-48", method="", type_label=new_variable];
282 [label="48_ function buyTicket_re_ent23() public{\n	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))\n        revert();\n      lastPlayer_re_ent23 = msg.sender;\n      jackpot_re_ent23    = address(this).balance;\n    }\n282-function_definition-49-54", method="buyTicket_re_ent23()", type_label=function_definition];
286 [label="49_ if\n286-if-50-51", method="buyTicket_re_ent23()", type_label=if];
1525 [label="49_ end_if", method="buyTicket_re_ent23()", type_label=end_if];
297 [label="51_ lastPlayer_re_ent23 = msg.sender;\n297-expression_statement-52-52", method="buyTicket_re_ent23()", type_label=expression_statement];
303 [label="52_ jackpot_re_ent23    = address(this).balance;\n303-expression_statement-53-53", method="buyTicket_re_ent23()", type_label=expression_statement];
311 [label="54_ mapping (address => mapping (address => uint256)) public allowance;\n311-new_variable-55-55", method="", type_label=new_variable];
320 [label="55_ bool not_called_re_ent27 = true;\n320-new_variable-56-56", method="", type_label=new_variable];
326 [label="56_ function bug_re_ent27() public{\n        require(not_called_re_ent27);\n        if( ! (msg.sender.send(1 ether) ) ){\n            revert();\n        }\n        not_called_re_ent27 = false;\n    }\n326-function_definition-57-63", method="bug_re_ent27()", type_label=function_definition];
330 [label="57_ require(not_called_re_ent27);\n330-expression_statement-58-58", method="bug_re_ent27()", type_label=expression_statement];
335 [label="58_ if\n335-if-59-61", method="bug_re_ent27()", type_label=if];
1574 [label="58_ end_if", method="bug_re_ent27()", type_label=end_if];
350 [label="61_ not_called_re_ent27 = false;\n350-expression_statement-62-62", method="bug_re_ent27()", type_label=expression_statement];
369 [label="64_ mapping(address => uint) balances_re_ent31;\n369-new_variable-65-65", method="", type_label=new_variable];
375 [label="65_ function withdrawFunds_re_ent31 (uint256 _weiToWithdraw) public {\n        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n        require(msg.sender.send(_weiToWithdraw));   \n        balances_re_ent31[msg.sender] -= _weiToWithdraw;\n    }\n375-function_definition-66-70", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=function_definition];
383 [label="66_ require(balances_re_ent31[msg.sender] >= _weiToWithdraw);\n383-expression_statement-67-67", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
394 [label="67_ require(msg.sender.send(_weiToWithdraw));\n394-expression_statement-68-68", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
406 [label="68_ balances_re_ent31[msg.sender] -= _weiToWithdraw;\n406-expression_statement-69-69", method="withdrawFunds_re_ent31(uint256 _weiToWithdraw)", type_label=expression_statement];
428 [label="71_ bool not_called_re_ent13 = true;\n428-new_variable-72-72", method="", type_label=new_variable];
434 [label="72_ function bug_re_ent13() public{\n        require(not_called_re_ent13);\n        (bool success,)=msg.sender.call.value(1 ether)(\"\");\n        if( ! success ){\n            revert();\n        }\n        not_called_re_ent13 = false;\n    }\n434-function_definition-73-80", method="bug_re_ent13()", type_label=function_definition];
438 [label="73_ require(not_called_re_ent13);\n438-expression_statement-74-74", method="bug_re_ent13()", type_label=expression_statement];
443 [label="74_ (bool success,)=msg.sender.call.value(1 ether)(\"\");\n443-new_variable-75-75", method="bug_re_ent13()", type_label=new_variable];
464 [label="75_ if\n464-if-76-78", method="bug_re_ent13()", type_label=if];
1703 [label="75_ end_if", method="bug_re_ent13()", type_label=end_if];
470 [label="78_ not_called_re_ent13 = false;\n470-expression_statement-79-79", method="bug_re_ent13()", type_label=expression_statement];
499 [label="86_ totalSupply = initialSupply * 10 ** uint256(decimals);\n499-expression_statement-87-87", method="", type_label=expression_statement];
509 [label="87_ balanceOf[msg.sender] = totalSupply;\n509-expression_statement-88-88", method="", type_label=expression_statement];
517 [label="88_ name = tokenName;\n517-expression_statement-89-89", method="", type_label=expression_statement];
521 [label="89_ symbol = tokenSymbol;\n521-expression_statement-90-90", method="", type_label=expression_statement];
525 [label="91_ uint256 counter_re_ent14 =0;\n525-new_variable-92-92", method="", type_label=new_variable];
530 [label="92_ function callme_re_ent14() public{\n        require(counter_re_ent14<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent14 += 1;\n    }\n530-function_definition-93-99", method="callme_re_ent14()", type_label=function_definition];
534 [label="93_ require(counter_re_ent14<=5);\n534-expression_statement-94-94", method="callme_re_ent14()", type_label=expression_statement];
541 [label="94_ if\n541-if-95-97", method="callme_re_ent14()", type_label=if];
1780 [label="94_ end_if", method="callme_re_ent14()", type_label=end_if];
556 [label="97_ counter_re_ent14 += 1;\n556-expression_statement-98-98", method="callme_re_ent14()", type_label=expression_statement];
560 [label="99_ function _transfer(address _from, address _to, uint _value) internal {\n        require(_to != address(0x0));\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        emit Transfer(_from, _to, _value);\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n560-function_definition-100-109", method="_transfer(address _from,address _to,uint _value)", type_label=function_definition];
576 [label="100_ require(_to != address(0x0));\n576-expression_statement-101-101", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
585 [label="101_ require(balanceOf[_from] >= _value);\n585-expression_statement-102-102", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
594 [label="102_ require(balanceOf[_to] + _value >= balanceOf[_to]);\n594-expression_statement-103-103", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
607 [label="103_ uint previousBalances = balanceOf[_from] + balanceOf[_to];\n607-new_variable-104-104", method="_transfer(address _from,address _to,uint _value)", type_label=new_variable];
619 [label="104_ balanceOf[_from] -= _value;\n619-expression_statement-105-105", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
625 [label="105_ balanceOf[_to] += _value;\n625-expression_statement-106-106", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
639 [label="107_ assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n639-expression_statement-108-108", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
652 [label="109_ address payable lastPlayer_re_ent30;\n652-new_variable-110-110", method="", type_label=new_variable];
656 [label="110_ uint jackpot_re_ent30;\n656-new_variable-111-111", method="", type_label=new_variable];
660 [label="111_ function buyTicket_re_ent30() public{\n	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))\n        revert();\n      lastPlayer_re_ent30 = msg.sender;\n      jackpot_re_ent30    = address(this).balance;\n    }\n660-function_definition-112-117", method="buyTicket_re_ent30()", type_label=function_definition];
664 [label="112_ if\n664-if-113-114", method="buyTicket_re_ent30()", type_label=if];
1903 [label="112_ end_if", method="buyTicket_re_ent30()", type_label=end_if];
675 [label="114_ lastPlayer_re_ent30 = msg.sender;\n675-expression_statement-115-115", method="buyTicket_re_ent30()", type_label=expression_statement];
681 [label="115_ jackpot_re_ent30    = address(this).balance;\n681-expression_statement-116-116", method="buyTicket_re_ent30()", type_label=expression_statement];
689 [label="117_ function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n689-function_definition-118-121", method="transfer(address _to,uint256 _value)", type_label=function_definition];
706 [label="118_ _transfer(msg.sender, _to, _value);\n706-expression_statement-119-119", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
717 [label="119_ return true;\n717-return-120-120", method="transfer(address _to,uint256 _value)", type_label=return];
720 [label="121_ mapping(address => uint) balances_re_ent8;\n720-new_variable-122-122", method="", type_label=new_variable];
726 [label="122_ function withdraw_balances_re_ent8 () public {\n       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n       if (success)\n          balances_re_ent8[msg.sender] = 0;\n      }\n726-function_definition-123-127", method="withdraw_balances_re_ent8()", type_label=function_definition];
730 [label="123_ (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])(\"\");\n730-new_variable-124-124", method="withdraw_balances_re_ent8()", type_label=new_variable];
754 [label="124_ if\n754-if-125-126", method="withdraw_balances_re_ent8()", type_label=if];
1993 [label="124_ end_if", method="withdraw_balances_re_ent8()", type_label=end_if];
756 [label="125_ balances_re_ent8[msg.sender] = 0;\n756-expression_statement-126-126", method="withdraw_balances_re_ent8()", type_label=expression_statement];
764 [label="127_ function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);      \n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n764-function_definition-128-133", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
785 [label="128_ require(_value <= allowance[_from][msg.sender]);\n785-expression_statement-129-129", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
798 [label="129_ allowance[_from][msg.sender] -= _value;\n798-expression_statement-130-130", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
808 [label="130_ _transfer(_from, _to, _value);\n808-expression_statement-131-131", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
817 [label="131_ return true;\n817-return-132-132", method="transferFrom(address _from,address _to,uint256 _value)", type_label=return];
820 [label="133_ mapping(address => uint) redeemableEther_re_ent39;\n820-new_variable-134-134", method="", type_label=new_variable];
826 [label="134_ function claimReward_re_ent39() public {        \n        require(redeemableEther_re_ent39[msg.sender] > 0);\n        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n        msg.sender.transfer(transferValue_re_ent39);    \n        redeemableEther_re_ent39[msg.sender] = 0;\n    }\n826-function_definition-135-140", method="claimReward_re_ent39()", type_label=function_definition];
830 [label="135_ require(redeemableEther_re_ent39[msg.sender] > 0);\n830-expression_statement-136-136", method="claimReward_re_ent39()", type_label=expression_statement];
841 [label="136_ uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];\n841-new_variable-137-137", method="claimReward_re_ent39()", type_label=new_variable];
851 [label="137_ msg.sender.transfer(transferValue_re_ent39);\n851-expression_statement-138-138", method="claimReward_re_ent39()", type_label=expression_statement];
860 [label="138_ redeemableEther_re_ent39[msg.sender] = 0;\n860-expression_statement-139-139", method="claimReward_re_ent39()", type_label=expression_statement];
868 [label="140_ function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n868-function_definition-141-146", method="approve(address _spender,uint256 _value)", type_label=function_definition];
885 [label="142_ allowance[msg.sender][_spender] = _value;\n885-expression_statement-143-143", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
905 [label="144_ return true;\n905-return-145-145", method="approve(address _spender,uint256 _value)", type_label=return];
908 [label="146_ mapping(address => uint) balances_re_ent36;\n908-new_variable-147-147", method="", type_label=new_variable];
914 [label="147_ function withdraw_balances_re_ent36 () public {\n       if (msg.sender.send(balances_re_ent36[msg.sender ]))\n          balances_re_ent36[msg.sender] = 0;\n      }\n914-function_definition-148-151", method="withdraw_balances_re_ent36()", type_label=function_definition];
918 [label="148_ if\n918-if-149-150", method="withdraw_balances_re_ent36()", type_label=if];
2157 [label="148_ end_if", method="withdraw_balances_re_ent36()", type_label=end_if];
931 [label="149_ balances_re_ent36[msg.sender] = 0;\n931-expression_statement-150-150", method="withdraw_balances_re_ent36()", type_label=expression_statement];
939 [label="151_ function approveAndCall(address _spender, uint256 _value, bytes memory _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n            return true;\n        }\n    }\n939-function_definition-152-160", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=function_definition];
960 [label="154_ tokenRecipient spender = tokenRecipient(_spender);\n960-new_variable-155-155", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=new_variable];
970 [label="155_ if\n970-if-156-159", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=if];
2209 [label="155_ end_if", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=end_if];
978 [label="156_ spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n978-expression_statement-157-157", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=expression_statement];
995 [label="157_ return true;\n995-return-158-158", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=return];
998 [label="160_ uint256 counter_re_ent35 =0;\n998-new_variable-161-161", method="", type_label=new_variable];
1003 [label="161_ function callme_re_ent35() public{\n        require(counter_re_ent35<=5);\n	if( ! (msg.sender.send(10 ether) ) ){\n            revert();\n        }\n        counter_re_ent35 += 1;\n    }\n1003-function_definition-162-168", method="callme_re_ent35()", type_label=function_definition];
1007 [label="162_ require(counter_re_ent35<=5);\n1007-expression_statement-163-163", method="callme_re_ent35()", type_label=expression_statement];
1014 [label="163_ if\n1014-if-164-166", method="callme_re_ent35()", type_label=if];
2253 [label="163_ end_if", method="callme_re_ent35()", type_label=end_if];
1029 [label="166_ counter_re_ent35 += 1;\n1029-expression_statement-167-167", method="callme_re_ent35()", type_label=expression_statement];
1033 [label="168_ function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);    \n        balanceOf[msg.sender] -= _value;             \n        totalSupply -= _value;                       \n        emit Burn(msg.sender, _value);\n        return true;\n    }\n1033-function_definition-169-175", method="burn(uint256 _value)", type_label=function_definition];
1046 [label="169_ require(balanceOf[msg.sender] >= _value);\n1046-expression_statement-170-170", method="burn(uint256 _value)", type_label=expression_statement];
1057 [label="170_ balanceOf[msg.sender] -= _value;\n1057-expression_statement-171-171", method="burn(uint256 _value)", type_label=expression_statement];
1065 [label="171_ totalSupply -= _value;\n1065-expression_statement-172-172", method="burn(uint256 _value)", type_label=expression_statement];
1077 [label="173_ return true;\n1077-return-174-174", method="burn(uint256 _value)", type_label=return];
1080 [label="175_ mapping(address => uint) userBalance_re_ent40;\n1080-new_variable-176-176", method="", type_label=new_variable];
1086 [label="176_ function withdrawBalance_re_ent40() public{\n        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent40[msg.sender] = 0;\n    }\n1086-function_definition-177-183", method="withdrawBalance_re_ent40()", type_label=function_definition];
1090 [label="177_ (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])(\"\");\n1090-new_variable-178-178", method="withdrawBalance_re_ent40()", type_label=new_variable];
1114 [label="178_ if\n1114-if-179-181", method="withdrawBalance_re_ent40()", type_label=if];
2353 [label="178_ end_if", method="withdrawBalance_re_ent40()", type_label=end_if];
1120 [label="181_ userBalance_re_ent40[msg.sender] = 0;\n1120-expression_statement-182-182", method="withdrawBalance_re_ent40()", type_label=expression_statement];
1128 [label="183_ function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);                 \n        require(_value <= allowance[_from][msg.sender]);     \n        balanceOf[_from] -= _value;                          \n        allowance[_from][msg.sender] -= _value;              \n        totalSupply -= _value;                               \n        emit Burn(_from, _value);\n        return true;\n    }\n1128-function_definition-184-192", method="burnFrom(address _from,uint256 _value)", type_label=function_definition];
1145 [label="184_ require(balanceOf[_from] >= _value);\n1145-expression_statement-185-185", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1154 [label="185_ require(_value <= allowance[_from][msg.sender]);\n1154-expression_statement-186-186", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1167 [label="186_ balanceOf[_from] -= _value;\n1167-expression_statement-187-187", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1173 [label="187_ allowance[_from][msg.sender] -= _value;\n1173-expression_statement-188-188", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1183 [label="188_ totalSupply -= _value;\n1183-expression_statement-189-189", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1193 [label="190_ return true;\n1193-return-191-191", method="burnFrom(address _from,uint256 _value)", type_label=return];
1196 [label="192_ mapping(address => uint) userBalance_re_ent33;\n1196-new_variable-193-193", method="", type_label=new_variable];
1202 [label="193_ function withdrawBalance_re_ent33() public{\n        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n        if( ! success ){\n            revert();\n        }\n        userBalance_re_ent33[msg.sender] = 0;\n    }\n1202-function_definition-194-200", method="withdrawBalance_re_ent33()", type_label=function_definition];
1206 [label="194_ (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])(\"\");\n1206-new_variable-195-195", method="withdrawBalance_re_ent33()", type_label=new_variable];
1230 [label="195_ if\n1230-if-196-198", method="withdrawBalance_re_ent33()", type_label=if];
2469 [label="195_ end_if", method="withdrawBalance_re_ent33()", type_label=end_if];
1236 [label="198_ userBalance_re_ent33[msg.sender] = 0;\n1236-expression_statement-199-199", method="withdrawBalance_re_ent33()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
41 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 50  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
50 -> 1289  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
70 -> 75  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
81 -> 85  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
85 -> 96  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
96 -> 106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
106 -> 115  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
123 -> 128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
134 -> 142  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
142 -> 153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
153 -> 165  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
173 -> 179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
185 -> 189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
189 -> 200  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
200 -> 210  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
210 -> 219  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
227 -> 232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
237 -> 241  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
241 -> 248  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
248 -> 1487  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
267 -> 274  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
274 -> 278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
282 -> 286  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
286 -> 1525  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
297 -> 303  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
311 -> 320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
326 -> 330  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
330 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
335 -> 1574  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
375 -> 383  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
383 -> 394  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
394 -> 406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
434 -> 438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 443  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
443 -> 464  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
464 -> 1703  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
499 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
509 -> 517  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
517 -> 521  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
530 -> 534  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
534 -> 541  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
541 -> 1780  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
560 -> 576  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
576 -> 585  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
585 -> 594  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
594 -> 607  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
607 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
619 -> 625  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
652 -> 656  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
660 -> 664  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
664 -> 1903  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
675 -> 681  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
689 -> 706  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
706 -> 717  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
717 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
726 -> 730  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
730 -> 754  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
754 -> 756  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
754 -> 1993  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1993 -> 764  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
756 -> 1993  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
764 -> 785  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
785 -> 798  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
798 -> 808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
808 -> 817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
817 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
826 -> 830  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
830 -> 841  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
841 -> 851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
851 -> 860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
868 -> 885  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
905 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
914 -> 918  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
918 -> 931  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
918 -> 2157  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2157 -> 939  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
931 -> 2157  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
939 -> 960  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
960 -> 970  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
970 -> 978  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
970 -> 2209  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2209 -> 998  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
978 -> 995  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
995 -> 2209  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
995 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1003 -> 1007  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1007 -> 1014  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1014 -> 2253  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1033 -> 1046  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1046 -> 1057  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1057 -> 1065  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1077 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1086 -> 1090  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1090 -> 1114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1114 -> 2353  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1128 -> 1145  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1145 -> 1154  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1154 -> 1167  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1167 -> 1173  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1173 -> 1183  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1193 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1202 -> 1206  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1206 -> 1230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1230 -> 2469  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
}
