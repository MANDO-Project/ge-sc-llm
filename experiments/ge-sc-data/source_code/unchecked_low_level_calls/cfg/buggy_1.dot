digraph  {
15 [label="2_ uint256 public totalSupply;\n15-new_variable-3-3", method="", type_label=new_variable];
20 [label="3_ function balanceOf(address _owner) public view returns (uint256 balance);\n20-function_definition-4-4", method="balanceOf(address _owner)", type_label=function_definition];
33 [label="4_ function bug_unchk_send19() payable public{\n      msg.sender.transfer(1 ether);}\n33-function_definition-5-6", method="bug_unchk_send19()", type_label=function_definition];
38 [label="5_ msg.sender.transfer(1 ether);\n38-expression_statement-6-6", method="bug_unchk_send19()", type_label=expression_statement];
48 [label="6_ function transfer(address _to, uint256 _value) public returns (bool success);\n48-function_definition-7-7", method="transfer(address _to,uint256 _value)", type_label=function_definition];
64 [label="7_ function bug_unchk_send26() payable public{\n      msg.sender.transfer(1 ether);}\n64-function_definition-8-9", method="bug_unchk_send26()", type_label=function_definition];
69 [label="8_ msg.sender.transfer(1 ether);\n69-expression_statement-9-9", method="bug_unchk_send26()", type_label=expression_statement];
79 [label="9_ function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n79-function_definition-10-10", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
99 [label="10_ function bug_unchk_send20() payable public{\n      msg.sender.transfer(1 ether);}\n99-function_definition-11-12", method="bug_unchk_send20()", type_label=function_definition];
104 [label="11_ msg.sender.transfer(1 ether);\n104-expression_statement-12-12", method="bug_unchk_send20()", type_label=expression_statement];
114 [label="12_ function approve(address _spender, uint256 _value) public returns (bool success);\n114-function_definition-13-13", method="approve(address _spender,uint256 _value)", type_label=function_definition];
130 [label="13_ function bug_unchk_send32() payable public{\n      msg.sender.transfer(1 ether);}\n130-function_definition-14-15", method="bug_unchk_send32()", type_label=function_definition];
135 [label="14_ msg.sender.transfer(1 ether);\n135-expression_statement-15-15", method="bug_unchk_send32()", type_label=expression_statement];
145 [label="15_ function allowance(address _owner, address _spender) public view returns (uint256 remaining);\n145-function_definition-16-16", method="allowance(address _owner,address _spender)", type_label=function_definition];
162 [label="16_ function bug_unchk_send4() payable public{\n      msg.sender.transfer(1 ether);}\n162-function_definition-17-18", method="bug_unchk_send4()", type_label=function_definition];
167 [label="17_ msg.sender.transfer(1 ether);\n167-expression_statement-18-18", method="bug_unchk_send4()", type_label=expression_statement];
177 [label="18_ function bug_unchk_send31() payable public{\n      msg.sender.transfer(1 ether);}\n177-function_definition-19-20", method="bug_unchk_send31()", type_label=function_definition];
182 [label="19_ msg.sender.transfer(1 ether);\n182-expression_statement-20-20", method="bug_unchk_send31()", type_label=expression_statement];
206 [label="21_ function bug_unchk_send13() payable public{\n      msg.sender.transfer(1 ether);}\n206-function_definition-22-23", method="bug_unchk_send13()", type_label=function_definition];
211 [label="22_ msg.sender.transfer(1 ether);\n211-expression_statement-23-23", method="bug_unchk_send13()", type_label=expression_statement];
241 [label="26_ uint256 constant private MAX_UINT256 = 2**256 - 1;\n241-new_variable-27-27", method="", type_label=new_variable];
251 [label="27_ function bug_unchk_send2() payable public{\n      msg.sender.transfer(1 ether);}\n251-function_definition-28-29", method="bug_unchk_send2()", type_label=function_definition];
256 [label="28_ msg.sender.transfer(1 ether);\n256-expression_statement-29-29", method="bug_unchk_send2()", type_label=expression_statement];
266 [label="29_ mapping (address => uint256) public balances;\n266-new_variable-30-30", method="", type_label=new_variable];
273 [label="30_ function bug_unchk_send17() payable public{\n      msg.sender.transfer(1 ether);}\n273-function_definition-31-32", method="bug_unchk_send17()", type_label=function_definition];
278 [label="31_ msg.sender.transfer(1 ether);\n278-expression_statement-32-32", method="bug_unchk_send17()", type_label=expression_statement];
288 [label="32_ mapping (address => mapping (address => uint256)) public allowed;\n288-new_variable-33-33", method="", type_label=new_variable];
297 [label="33_ function bug_unchk_send3() payable public{\n      msg.sender.transfer(1 ether);}\n297-function_definition-34-35", method="bug_unchk_send3()", type_label=function_definition];
302 [label="34_ msg.sender.transfer(1 ether);\n302-expression_statement-35-35", method="bug_unchk_send3()", type_label=expression_statement];
312 [label="35_ string public name;\n312-new_variable-36-36", method="", type_label=new_variable];
317 [label="36_ function bug_unchk_send9() payable public{\n      msg.sender.transfer(1 ether);}\n317-function_definition-37-38", method="bug_unchk_send9()", type_label=function_definition];
322 [label="37_ msg.sender.transfer(1 ether);\n322-expression_statement-38-38", method="bug_unchk_send9()", type_label=expression_statement];
332 [label="38_ uint8 public decimals;\n332-new_variable-39-39", method="", type_label=new_variable];
337 [label="39_ function bug_unchk_send25() payable public{\n      msg.sender.transfer(1 ether);}\n337-function_definition-40-41", method="bug_unchk_send25()", type_label=function_definition];
342 [label="40_ msg.sender.transfer(1 ether);\n342-expression_statement-41-41", method="bug_unchk_send25()", type_label=expression_statement];
352 [label="41_ string public symbol;\n352-new_variable-42-42", method="", type_label=new_variable];
359 [label="43_ totalSupply = 3 * 1e28;\n359-expression_statement-44-44", method="", type_label=expression_statement];
365 [label="44_ name = \"HotDollars Token\";\n365-expression_statement-45-45", method="", type_label=expression_statement];
370 [label="45_ decimals = 18;\n370-expression_statement-46-46", method="", type_label=expression_statement];
374 [label="46_ symbol = \"HDS\";\n374-expression_statement-47-47", method="", type_label=expression_statement];
379 [label="47_ balances[msg.sender] = totalSupply;\n379-expression_statement-48-48", method="", type_label=expression_statement];
387 [label="49_ function bug_unchk_send7() payable public{\n      msg.sender.transfer(1 ether);}\n387-function_definition-50-51", method="bug_unchk_send7()", type_label=function_definition];
392 [label="50_ msg.sender.transfer(1 ether);\n392-expression_statement-51-51", method="bug_unchk_send7()", type_label=expression_statement];
402 [label="51_ function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(balances[msg.sender] >= _value);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);  \n        return true;\n    }\n402-function_definition-52-58", method="transfer(address _to,uint256 _value)", type_label=function_definition];
419 [label="52_ require(balances[msg.sender] >= _value);\n419-expression_statement-53-53", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
430 [label="53_ balances[msg.sender] -= _value;\n430-expression_statement-54-54", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
438 [label="54_ balances[_to] += _value;\n438-expression_statement-55-55", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
454 [label="56_ return true;\n454-return-57-57", method="transfer(address _to,uint256 _value)", type_label=return];
457 [label="58_ function bug_unchk_send23() payable public{\n      msg.sender.transfer(1 ether);}\n457-function_definition-59-60", method="bug_unchk_send23()", type_label=function_definition];
462 [label="59_ msg.sender.transfer(1 ether);\n462-expression_statement-60-60", method="bug_unchk_send23()", type_label=expression_statement];
472 [label="60_ function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        uint256 allowance = allowed[_from][msg.sender];\n        require(balances[_from] >= _value && allowance >= _value);\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        if (allowance < MAX_UINT256) {\n            allowed[_from][msg.sender] -= _value;\n        }\n        emit Transfer(_from, _to, _value);  \n        return true;\n    }\n472-function_definition-61-71", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
493 [label="61_ uint256 allowance = allowed[_from][msg.sender];\n493-new_variable-62-62", method="transferFrom(address _from,address _to,uint256 _value)", type_label=new_variable];
505 [label="62_ require(balances[_from] >= _value && allowance >= _value);\n505-expression_statement-63-63", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
518 [label="63_ balances[_to] += _value;\n518-expression_statement-64-64", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
524 [label="64_ balances[_from] -= _value;\n524-expression_statement-65-65", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
530 [label="65_ if_allowance < MAX_UINT256\n530-if-66-68", method="transferFrom(address _from,address _to,uint256 _value)", type_label=if];
1223 [label="65_ end_if", method="transferFrom(address _from,address _to,uint256 _value)", type_label=end_if];
535 [label="66_ allowed[_from][msg.sender] -= _value;\n535-expression_statement-67-67", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
553 [label="69_ return true;\n553-return-70-70", method="transferFrom(address _from,address _to,uint256 _value)", type_label=return];
556 [label="71_ function bug_unchk_send14() payable public{\n      msg.sender.transfer(1 ether);}\n556-function_definition-72-73", method="bug_unchk_send14()", type_label=function_definition];
561 [label="72_ msg.sender.transfer(1 ether);\n561-expression_statement-73-73", method="bug_unchk_send14()", type_label=expression_statement];
571 [label="73_ function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n571-function_definition-74-76", method="balanceOf(address _owner)", type_label=function_definition];
585 [label="74_ return balances[_owner];\n585-return-75-75", method="balanceOf(address _owner)", type_label=return];
589 [label="76_ function bug_unchk_send30() payable public{\n      msg.sender.transfer(1 ether);}\n589-function_definition-77-78", method="bug_unchk_send30()", type_label=function_definition];
594 [label="77_ msg.sender.transfer(1 ether);\n594-expression_statement-78-78", method="bug_unchk_send30()", type_label=expression_statement];
604 [label="78_ function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);  \n        return true;\n    }\n604-function_definition-79-83", method="approve(address _spender,uint256 _value)", type_label=function_definition];
621 [label="79_ allowed[msg.sender][_spender] = _value;\n621-expression_statement-80-80", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
641 [label="81_ return true;\n641-return-82-82", method="approve(address _spender,uint256 _value)", type_label=return];
644 [label="83_ function bug_unchk_send8() payable public{\n      msg.sender.transfer(1 ether);}\n644-function_definition-84-85", method="bug_unchk_send8()", type_label=function_definition];
649 [label="84_ msg.sender.transfer(1 ether);\n649-expression_statement-85-85", method="bug_unchk_send8()", type_label=expression_statement];
659 [label="85_ function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n659-function_definition-86-88", method="allowance(address _owner,address _spender)", type_label=function_definition];
677 [label="86_ return allowed[_owner][_spender];\n677-return-87-87", method="allowance(address _owner,address _spender)", type_label=return];
683 [label="88_ function bug_unchk_send27() payable public{\n      msg.sender.transfer(1 ether);}\n683-function_definition-89-90", method="bug_unchk_send27()", type_label=function_definition];
688 [label="89_ msg.sender.transfer(1 ether);\n688-expression_statement-90-90", method="bug_unchk_send27()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
545;
33 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
64 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
99 -> 104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 135  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
162 -> 167  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
177 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
206 -> 211  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
251 -> 256  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
273 -> 278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
297 -> 302  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
317 -> 322  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
337 -> 342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
359 -> 365  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
365 -> 370  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
370 -> 374  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
374 -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
387 -> 392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
402 -> 419  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
419 -> 430  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
430 -> 438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
454 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
457 -> 462  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
472 -> 493  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
493 -> 505  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
505 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
518 -> 524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
524 -> 530  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
530 -> 535  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
530 -> 1223  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1223 -> 545  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
535 -> 1223  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
553 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
556 -> 561  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
571 -> 585  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
585 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
589 -> 594  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
604 -> 621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
641 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
644 -> 649  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
659 -> 677  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
677 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
683 -> 688  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
