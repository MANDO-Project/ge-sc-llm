digraph  {
13 [label="2_ add\n13-function_definition-3-6", type_label=function_definition];
31 [label="3_ c = a + b;\n31-expression_statement-4-4", type_label=expression_statement];
37 [label="4_ require(c >= a);\n37-expression_statement-5-5", type_label=expression_statement];
44 [label="6_ sub\n44-function_definition-7-10", type_label=function_definition];
62 [label="7_ require(b <= a);\n62-expression_statement-8-8", type_label=expression_statement];
69 [label="8_ c = a - b;\n69-expression_statement-9-9", type_label=expression_statement];
75 [label="10_ mul\n75-function_definition-11-14", type_label=function_definition];
93 [label="11_ c = a * b;\n93-expression_statement-12-12", type_label=expression_statement];
99 [label="12_ require(a == 0 || c / a == b);\n99-expression_statement-13-13", type_label=expression_statement];
112 [label="14_ div\n112-function_definition-15-18", type_label=function_definition];
130 [label="15_ require(b > 0);\n130-expression_statement-16-16", type_label=expression_statement];
137 [label="16_ c = a / b;\n137-expression_statement-17-17", type_label=expression_statement];
146 [label="20_ totalSupply\n146-function_definition-21-21", type_label=function_definition];
154 [label="21_ balanceOf\n154-function_definition-22-22", type_label=function_definition];
167 [label="22_ allowance\n167-function_definition-23-23", type_label=function_definition];
184 [label="23_ transfer\n184-function_definition-24-24", type_label=function_definition];
200 [label="24_ approve\n200-function_definition-25-25", type_label=function_definition];
216 [label="25_ transferFrom\n216-function_definition-26-26", type_label=function_definition];
267 [label="30_ receiveApproval\n267-function_definition-31-31", type_label=function_definition];
289 [label="33_ address public owner;\n289-new_variable-34-34", type_label=new_variable];
294 [label="34_ address public newOwner;\n294-new_variable-35-35", type_label=new_variable];
311 [label="37_ owner = msg.sender;\n311-expression_statement-38-38", type_label=expression_statement];
317 [label="39_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n317-expression_statement-40-43", type_label=expression_statement];
320 [label="40_ require(msg.sender == owner);\n320-expression_statement-41-41", type_label=expression_statement];
329 [label="41_ _;\n329-expression_statement-42-42", type_label=expression_statement];
331 [label="43_ transferOwnership\n331-function_definition-44-46", type_label=function_definition];
338 [label="43_ onlyOwner\n338-expression_statement-44-44", type_label=expression_statement];
341 [label="44_ newOwner = _newOwner;\n341-expression_statement-45-45", type_label=expression_statement];
345 [label="46_ acceptOwnership\n345-function_definition-47-52", type_label=function_definition];
349 [label="47_ require(msg.sender == newOwner);\n349-expression_statement-48-48", type_label=expression_statement];
364 [label="49_ owner = newOwner;\n364-expression_statement-50-50", type_label=expression_statement];
368 [label="50_ newOwner = address(0);\n368-expression_statement-51-51", type_label=expression_statement];
388 [label="55_ string public symbol;\n388-new_variable-56-56", type_label=new_variable];
393 [label="56_ string public  name;\n393-new_variable-57-57", type_label=new_variable];
398 [label="57_ uint8 public decimals;\n398-new_variable-58-58", type_label=new_variable];
403 [label="58_ uint _initialTokenNumber;\n403-new_variable-59-59", type_label=new_variable];
407 [label="59_ uint _totalSupply;\n407-new_variable-60-60", type_label=new_variable];
411 [label="60_ mapping(address => uint) balances;\n411-new_variable-61-61", type_label=new_variable];
417 [label="61_ mapping(address => mapping(address => uint)) allowed;\n417-new_variable-62-62", type_label=new_variable];
425 [label="62_ uint exchangerToken;\n425-new_variable-63-63", type_label=new_variable];
429 [label="63_ uint reservedToken;\n429-new_variable-64-64", type_label=new_variable];
433 [label="64_ uint developedToken;\n433-new_variable-65-65", type_label=new_variable];
437 [label="65_ address public constant developed1Address     = 0xcFCb491953Da1d10D037165dFa1298D00773fcA7;\n437-new_variable-66-66", type_label=new_variable];
443 [label="66_ address public constant developed2Address     = 0xA123BceDB9d2E4b09c8962C62924f091380E1Ad7;\n443-new_variable-67-67", type_label=new_variable];
449 [label="67_ address public constant developed3Address     = 0x51aeD4EDC28aad15C353D958c5A813aa21F351b6;\n449-new_variable-68-68", type_label=new_variable];
455 [label="68_ address public constant exchangedAddress     = 0x2630e8620d53C7f64f82DAEA50257E83297eE009;\n455-new_variable-69-69", type_label=new_variable];
463 [label="70_ symbol = \"STON\";\n463-expression_statement-71-71", type_label=expression_statement];
468 [label="71_ name = \"STONetwork\";\n468-expression_statement-72-72", type_label=expression_statement];
473 [label="72_ decimals = 18;\n473-expression_statement-73-73", type_label=expression_statement];
477 [label="73_ _initialTokenNumber = 1000000000;\n477-expression_statement-74-74", type_label=expression_statement];
481 [label="74_ _totalSupply = _initialTokenNumber * 10 ** uint(decimals);\n481-expression_statement-75-75", type_label=expression_statement];
491 [label="75_ reservedToken = _totalSupply * 40 / 100;\n491-expression_statement-76-76", type_label=expression_statement];
499 [label="76_ developedToken = _totalSupply * 10 / 100;\n499-expression_statement-77-77", type_label=expression_statement];
507 [label="77_ exchangerToken = _totalSupply * 30 / 100;\n507-expression_statement-78-78", type_label=expression_statement];
515 [label="78_ balances[owner] = reservedToken;\n515-expression_statement-79-79", type_label=expression_statement];
531 [label="80_ balances[exchangedAddress] = exchangerToken;\n531-expression_statement-81-81", type_label=expression_statement];
547 [label="82_ balances[developed1Address] = developedToken;\n547-expression_statement-83-83", type_label=expression_statement];
563 [label="84_ balances[developed2Address] = developedToken;\n563-expression_statement-85-85", type_label=expression_statement];
579 [label="86_ balances[developed3Address] = developedToken;\n579-expression_statement-87-87", type_label=expression_statement];
595 [label="89_ totalSupply\n595-function_definition-90-92", type_label=function_definition];
604 [label="90_ return _totalSupply.sub(balances[address(0)]);\n604-return-91-91", type_label=return];
615 [label="92_ balanceOf\n615-function_definition-93-95", type_label=function_definition];
629 [label="93_ return balances[_owner];\n629-return-94-94", type_label=return];
633 [label="95_ transfer\n633-function_definition-96-102", type_label=function_definition];
650 [label="96_ require(balances[msg.sender] >= _value);\n650-expression_statement-97-97", type_label=expression_statement];
661 [label="97_ balances[msg.sender] = balances[msg.sender].sub(_value);\n661-expression_statement-98-98", type_label=expression_statement];
678 [label="98_ balances[_to] = balances[_to].add(_value);\n678-expression_statement-99-99", type_label=expression_statement];
701 [label="100_ return true;\n701-return-101-101", type_label=return];
704 [label="102_ approve\n704-function_definition-103-107", type_label=function_definition];
721 [label="103_ allowed[msg.sender][_spender] = _value;\n721-expression_statement-104-104", type_label=expression_statement];
741 [label="105_ return true;\n741-return-106-106", type_label=return];
744 [label="107_ transferFrom\n744-function_definition-108-116", type_label=function_definition];
765 [label="108_ require(balances[_from] >= _value);\n765-expression_statement-109-109", type_label=expression_statement];
774 [label="109_ require(allowed[_from][msg.sender] >= _value);\n774-expression_statement-110-110", type_label=expression_statement];
787 [label="110_ balances[_from] = balances[_from].sub(_value);\n787-expression_statement-111-111", type_label=expression_statement];
800 [label="111_ allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n800-expression_statement-112-112", type_label=expression_statement];
821 [label="112_ balances[_to] = balances[_to].add(_value);\n821-expression_statement-113-113", type_label=expression_statement];
842 [label="114_ return true;\n842-return-115-115", type_label=return];
845 [label="116_ allowance\n845-function_definition-117-119", type_label=function_definition];
863 [label="117_ return allowed[_owner][_spender];\n863-return-118-118", type_label=return];
869 [label="119_ approveAndCall\n869-function_definition-120-125", type_label=function_definition];
890 [label="120_ allowed[msg.sender][_spender] = _value;\n890-expression_statement-121-121", type_label=expression_statement];
910 [label="122_ ApproveAndCallFallBack(_spender).receiveApproval(msg.sender, _value, address(this), data);\n910-expression_statement-123-123", type_label=expression_statement];
930 [label="123_ return true;\n930-return-124-124", type_label=return];
939 [label="128_ transferAnyERC20Token\n939-function_definition-129-131", type_label=function_definition];
950 [label="128_ onlyOwner\n950-expression_statement-129-129", type_label=expression_statement];
958 [label="129_ return ERC20Interface(_tokenAddress).transfer(owner, _value);\n958-return-130-130", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
289 -> 294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
331 -> 341  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
345 -> 349  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
388 -> 393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
393 -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
398 -> 403  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
403 -> 407  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
407 -> 411  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
411 -> 417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
417 -> 425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 429  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
429 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
433 -> 437  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
437 -> 443  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
443 -> 449  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
449 -> 455  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
463 -> 468  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
468 -> 473  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
473 -> 477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
477 -> 481  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
481 -> 491  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
491 -> 499  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
499 -> 507  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
507 -> 515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
595 -> 604  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
604 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
615 -> 629  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
629 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
633 -> 650  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
650 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
701 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
704 -> 721  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
741 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
744 -> 765  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
765 -> 774  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
774 -> 787  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
787 -> 800  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
800 -> 821  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
842 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
845 -> 863  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
863 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
869 -> 890  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
910 -> 930  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
930 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
939 -> 958  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
958 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
