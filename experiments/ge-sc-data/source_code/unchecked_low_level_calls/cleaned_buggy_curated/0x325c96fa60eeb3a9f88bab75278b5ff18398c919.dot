digraph  {
13 [label="2_ address public owner;\n13-new_variable-3-3", type_label=new_variable];
34 [label="5_ Ownable\n34-function_definition-6-8", type_label=function_definition];
38 [label="6_ owner = msg.sender;\n38-expression_statement-7-7", type_label=expression_statement];
44 [label="8_ modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n44-expression_statement-9-12", type_label=expression_statement];
47 [label="9_ require(msg.sender == owner);\n47-expression_statement-10-10", type_label=expression_statement];
56 [label="10_ _;\n56-expression_statement-11-11", type_label=expression_statement];
58 [label="12_ transferOwnership\n58-function_definition-13-17", type_label=function_definition];
65 [label="12_ onlyOwner\n65-expression_statement-13-13", type_label=expression_statement];
68 [label="13_ require(newOwner != address(0));\n68-expression_statement-14-14", type_label=expression_statement];
83 [label="15_ owner = newOwner;\n83-expression_statement-16-16", type_label=expression_statement];
87 [label="17_ renounceOwnership\n87-function_definition-18-21", type_label=function_definition];
90 [label="17_ onlyOwner\n90-expression_statement-18-18", type_label=expression_statement];
97 [label="19_ owner = address(0);\n97-expression_statement-20-20", type_label=expression_statement];
109 [label="23_ mapping (address => bool) public investorWhiteList;\n109-new_variable-24-24", type_label=new_variable];
116 [label="24_ mapping (address => address) public referralList;\n116-new_variable-25-25", type_label=new_variable];
123 [label="25_ InvestorWhiteList\n123-function_definition-26-27", type_label=function_definition];
126 [label="27_ addInvestorToWhiteList\n126-function_definition-28-31", type_label=function_definition];
133 [label="27_ onlyOwner\n133-expression_statement-28-28", type_label=expression_statement];
136 [label="28_ require(investor != 0x0 && !investorWhiteList[investor]);\n136-expression_statement-29-29", type_label=expression_statement];
148 [label="29_ investorWhiteList[investor] = true;\n148-expression_statement-30-30", type_label=expression_statement];
155 [label="31_ removeInvestorFromWhiteList\n155-function_definition-32-35", type_label=function_definition];
162 [label="31_ onlyOwner\n162-expression_statement-32-32", type_label=expression_statement];
165 [label="32_ require(investor != 0x0 && investorWhiteList[investor]);\n165-expression_statement-33-33", type_label=expression_statement];
176 [label="33_ investorWhiteList[investor] = false;\n176-expression_statement-34-34", type_label=expression_statement];
183 [label="35_ addReferralOf\n183-function_definition-36-39", type_label=function_definition];
194 [label="35_ onlyOwner\n194-expression_statement-36-36", type_label=expression_statement];
197 [label="36_ require(investor != 0x0 && referral != 0x0 && referralList[investor] == 0x0 && investor != referral);\n197-expression_statement-37-37", type_label=expression_statement];
218 [label="37_ referralList[investor] = referral;\n218-expression_statement-38-38", type_label=expression_statement];
224 [label="39_ isAllowed\n224-function_definition-40-42", type_label=function_definition];
230 [label="39_ constant\n230-expression_statement-40-40", type_label=expression_statement];
239 [label="40_ return investorWhiteList[investor];\n239-return-41-41", type_label=return];
243 [label="42_ getReferralOf\n243-function_definition-43-45", type_label=function_definition];
249 [label="42_ constant\n249-expression_statement-43-43", type_label=expression_statement];
258 [label="43_ return referralList[investor];\n258-return-44-44", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
34 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
47 -> 56  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
58 -> 68  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 97  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 116  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
126 -> 136  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
136 -> 148  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
155 -> 165  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
165 -> 176  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
183 -> 197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
197 -> 218  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
224 -> 239  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
239 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
243 -> 258  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
258 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
