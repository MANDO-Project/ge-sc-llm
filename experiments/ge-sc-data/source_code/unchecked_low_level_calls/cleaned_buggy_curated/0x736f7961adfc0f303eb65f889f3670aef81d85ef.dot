digraph  {
12 [label="2_ mul\n12-function_definition-3-10", type_label=function_definition];
29 [label="3_ if_a == 0\n29-if-4-6", type_label=if];
776 [label="3_ end_if", type_label=end_if];
34 [label="4_ return 0;\n34-return-5-5", type_label=return];
36 [label="6_ uint256 c = a * b;\n36-new_variable-7-7", type_label=new_variable];
44 [label="7_ assert(c / a == b);\n44-expression_statement-8-8", type_label=expression_statement];
53 [label="8_ return c;\n53-return-9-9", type_label=return];
55 [label="10_ div\n55-function_definition-11-14", type_label=function_definition];
72 [label="11_ uint256 c = a / b;\n72-new_variable-12-12", type_label=new_variable];
80 [label="12_ return c;\n80-return-13-13", type_label=return];
82 [label="14_ sub\n82-function_definition-15-18", type_label=function_definition];
99 [label="15_ assert(b <= a);\n99-expression_statement-16-16", type_label=expression_statement];
106 [label="16_ return a - b;\n106-return-17-17", type_label=return];
110 [label="18_ add\n110-function_definition-19-23", type_label=function_definition];
127 [label="19_ uint256 c = a + b;\n127-new_variable-20-20", type_label=new_variable];
135 [label="20_ assert(c >= a);\n135-expression_statement-21-21", type_label=expression_statement];
142 [label="21_ return c;\n142-return-22-22", type_label=return];
147 [label="25_ totalSupply\n147-function_definition-26-26", type_label=function_definition];
156 [label="26_ balanceOf\n156-function_definition-27-27", type_label=function_definition];
169 [label="27_ allowance\n169-function_definition-28-28", type_label=function_definition];
186 [label="28_ transferFrom\n186-function_definition-29-29", type_label=function_definition];
206 [label="29_ approve\n206-function_definition-30-30", type_label=function_definition];
222 [label="30_ transfer\n222-function_definition-31-31", type_label=function_definition];
277 [label="36_ string public constant symbol = \",000.MYR.MalaysianRinggit\";\n277-new_variable-37-37", type_label=new_variable];
284 [label="37_ string public constant name = \"Bank Negara Malaysia-Central Bank of Malaysia\";\n284-new_variable-38-38", type_label=new_variable];
291 [label="38_ uint public constant decimals = 18;\n291-new_variable-39-39", type_label=new_variable];
297 [label="39_ uint256 _totalSupply = 999000000000000000000 * 10 ** 18;\n297-new_variable-40-40", type_label=new_variable];
306 [label="40_ address public owner;\n306-new_variable-41-41", type_label=new_variable];
311 [label="41_ mapping(address => uint256) balances;\n311-new_variable-42-42", type_label=new_variable];
317 [label="42_ mapping(address => mapping (address => uint256)) allowed;\n317-new_variable-43-43", type_label=new_variable];
325 [label="43_ modifier onlyOwner() {\n         if (msg.sender != owner) {\n             revert();\n         }\n         _;\n     }\n325-expression_statement-44-49", type_label=expression_statement];
328 [label="44_ if_msg.sender != owner\n328-if-45-47", type_label=if];
1075 [label="44_ end_if", type_label=end_if];
337 [label="47_ _;\n337-expression_statement-48-48", type_label=expression_statement];
341 [label="50_ owner = msg.sender;\n341-expression_statement-51-51", type_label=expression_statement];
347 [label="51_ balances[owner] = _totalSupply;\n347-expression_statement-52-52", type_label=expression_statement];
361 [label="54_ burntokens\n361-function_definition-55-57", type_label=function_definition];
368 [label="54_ onlyOwner\n368-expression_statement-55-55", type_label=expression_statement];
371 [label="55_ _totalSupply = (_totalSupply).sub(tokens);\n371-expression_statement-56-56", type_label=expression_statement];
381 [label="57_ totalSupply\n381-function_definition-58-60", type_label=function_definition];
391 [label="58_ total_Supply = _totalSupply;\n391-expression_statement-59-59", type_label=expression_statement];
395 [label="60_ balanceOf\n395-function_definition-61-63", type_label=function_definition];
409 [label="61_ return balances[_owner];\n409-return-62-62", type_label=return];
413 [label="63_ transfer\n413-function_definition-64-71", type_label=function_definition];
430 [label="64_ require( _to != 0x0);\n430-expression_statement-65-65", type_label=expression_statement];
437 [label="65_ require(balances[msg.sender] >= _amount && _amount >= 0);\n437-expression_statement-66-66", type_label=expression_statement];
452 [label="66_ balances[msg.sender] = (balances[msg.sender]).sub(_amount);\n452-expression_statement-67-67", type_label=expression_statement];
470 [label="67_ balances[_to] = (balances[_to]).add(_amount);\n470-expression_statement-68-68", type_label=expression_statement];
494 [label="69_ return true;\n494-return-70-70", type_label=return];
497 [label="71_ transferFrom\n497-function_definition-72-80", type_label=function_definition];
518 [label="72_ require( _to != 0x0);\n518-expression_statement-73-73", type_label=expression_statement];
525 [label="73_ require(balances[_from] >= _amount && allowed[_from][msg.sender] >= _amount && _amount >= 0);\n525-expression_statement-74-74", type_label=expression_statement];
548 [label="74_ balances[_from] = (balances[_from]).sub(_amount);\n548-expression_statement-75-75", type_label=expression_statement];
562 [label="75_ allowed[_from][msg.sender] = (allowed[_from][msg.sender]).sub(_amount);\n562-expression_statement-76-76", type_label=expression_statement];
584 [label="76_ balances[_to] = (balances[_to]).add(_amount);\n584-expression_statement-77-77", type_label=expression_statement];
606 [label="78_ return true;\n606-return-79-79", type_label=return];
609 [label="80_ approve\n609-function_definition-81-86", type_label=function_definition];
626 [label="81_ require( _spender != 0x0);\n626-expression_statement-82-82", type_label=expression_statement];
633 [label="82_ allowed[msg.sender][_spender] = _amount;\n633-expression_statement-83-83", type_label=expression_statement];
653 [label="84_ return true;\n653-return-85-85", type_label=return];
656 [label="86_ allowance\n656-function_definition-87-90", type_label=function_definition];
674 [label="87_ require( _owner != 0x0 && _spender !=0x0);\n674-expression_statement-88-88", type_label=expression_statement];
685 [label="88_ return allowed[_owner][_spender];\n685-return-89-89", type_label=return];
691 [label="90_ transferOwnership\n691-function_definition-91-99", type_label=function_definition];
698 [label="90_ onlyOwner\n698-expression_statement-91-91", type_label=expression_statement];
701 [label="92_ uint256 x = balances[owner];\n701-new_variable-93-93", type_label=new_variable];
709 [label="93_ require( newOwner != 0x0);\n709-expression_statement-94-94", type_label=expression_statement];
716 [label="94_ balances[newOwner] = (balances[newOwner]).add(balances[owner]);\n716-expression_statement-95-95", type_label=expression_statement];
732 [label="95_ balances[owner] = 0;\n732-expression_statement-96-96", type_label=expression_statement];
738 [label="96_ owner = newOwner;\n738-expression_statement-97-97", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
12 -> 29  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 34  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
29 -> 776  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
776 -> 36  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
34 -> 776  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
34 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
36 -> 44  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 53  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
53 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
55 -> 72  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
72 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
82 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
99 -> 106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
106 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
110 -> 127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
127 -> 135  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
135 -> 142  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
142 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
277 -> 284  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
284 -> 291  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
291 -> 297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
297 -> 306  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
306 -> 311  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
311 -> 317  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
317 -> 325  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
328 -> 1075  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
341 -> 347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
361 -> 371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
381 -> 391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
395 -> 409  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
409 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
413 -> 430  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
430 -> 437  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
437 -> 452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
452 -> 470  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
494 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
497 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
518 -> 525  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
525 -> 548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
548 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
562 -> 584  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
606 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
609 -> 626  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
626 -> 633  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
653 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
656 -> 674  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
674 -> 685  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
685 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
691 -> 701  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
701 -> 709  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
709 -> 716  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
716 -> 732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
732 -> 738  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
