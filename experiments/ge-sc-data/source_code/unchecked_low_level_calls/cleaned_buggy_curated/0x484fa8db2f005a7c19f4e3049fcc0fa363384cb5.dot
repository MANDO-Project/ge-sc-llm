digraph  {
13 [label="2_ mul\n13-function_definition-3-7", type_label=function_definition];
30 [label="3_ uint256 c = a * b;\n30-new_variable-4-4", type_label=new_variable];
38 [label="4_ assert(a == 0 || c / a == b);\n38-expression_statement-5-5", type_label=expression_statement];
51 [label="5_ return c;\n51-return-6-6", type_label=return];
53 [label="7_ div\n53-function_definition-8-11", type_label=function_definition];
70 [label="8_ uint256 c = a / b;\n70-new_variable-9-9", type_label=new_variable];
78 [label="9_ return c;\n78-return-10-10", type_label=return];
80 [label="11_ sub\n80-function_definition-12-15", type_label=function_definition];
97 [label="12_ assert(b <= a);\n97-expression_statement-13-13", type_label=expression_statement];
104 [label="13_ return a - b;\n104-return-14-14", type_label=return];
108 [label="15_ add\n108-function_definition-16-20", type_label=function_definition];
125 [label="16_ uint256 c = a + b;\n125-new_variable-17-17", type_label=new_variable];
133 [label="17_ assert(c >= a);\n133-expression_statement-18-18", type_label=expression_statement];
140 [label="18_ return c;\n140-return-19-19", type_label=return];
145 [label="21_ transfer\n145-function_definition-22-22", type_label=function_definition];
164 [label="24_ address public wallet;\n164-new_variable-25-25", type_label=new_variable];
169 [label="25_ address public addressOfTokenUsedAsReward;\n169-new_variable-26-26", type_label=new_variable];
174 [label="26_ uint256 public price = 1650;\n174-new_variable-27-27", type_label=new_variable];
180 [label="27_ token tokenReward;\n180-new_variable-28-28", type_label=new_variable];
185 [label="28_ uint256 public weiRaised;\n185-new_variable-29-29", type_label=new_variable];
210 [label="31_ wallet = 0x237625d599dd5F30E51ccd0F51B5Ee564d31Bd7b;\n210-expression_statement-32-32", type_label=expression_statement];
214 [label="32_ addressOfTokenUsedAsReward =  0x4a74Df6113E3d38d8e184273341Cb6BBb6885152;\n214-expression_statement-33-33", type_label=expression_statement];
218 [label="33_ tokenReward = token(addressOfTokenUsedAsReward);\n218-expression_statement-34-34", type_label=expression_statement];
225 [label="35_ bool public started = true;\n225-new_variable-36-36", type_label=new_variable];
232 [label="36_ startSale\n232-function_definition-37-40", type_label=function_definition];
236 [label="37_ require (msg.sender == wallet);\n236-expression_statement-38-38", type_label=expression_statement];
245 [label="38_ started = true;\n245-expression_statement-39-39", type_label=expression_statement];
250 [label="40_ stopSale\n250-function_definition-41-44", type_label=function_definition];
254 [label="41_ require(msg.sender == wallet);\n254-expression_statement-42-42", type_label=expression_statement];
263 [label="42_ started = false;\n263-expression_statement-43-43", type_label=expression_statement];
268 [label="44_ setPrice\n268-function_definition-45-48", type_label=function_definition];
276 [label="45_ require(msg.sender == wallet);\n276-expression_statement-46-46", type_label=expression_statement];
285 [label="46_ price = _price;\n285-expression_statement-47-47", type_label=expression_statement];
289 [label="48_ changeWallet\n289-function_definition-49-52", type_label=function_definition];
297 [label="49_ require (msg.sender == wallet);\n297-expression_statement-50-50", type_label=expression_statement];
306 [label="50_ wallet = _wallet;\n306-expression_statement-51-51", type_label=expression_statement];
314 [label="53_ buyTokens(msg.sender);\n314-expression_statement-54-54", type_label=expression_statement];
321 [label="55_ buyTokens\n321-function_definition-56-65", type_label=function_definition];
330 [label="56_ require(beneficiary != 0x0);\n330-expression_statement-57-57", type_label=expression_statement];
337 [label="57_ require(validPurchase());\n337-expression_statement-58-58", type_label=expression_statement];
343 [label="58_ uint256 weiAmount = msg.value;\n343-new_variable-59-59", type_label=new_variable];
351 [label="59_ uint256 tokens = (weiAmount) * price;\n351-new_variable-60-60", type_label=new_variable];
360 [label="60_ weiRaised = weiRaised.add(weiAmount);\n360-expression_statement-61-61", type_label=expression_statement];
369 [label="61_ tokenReward.transfer(beneficiary, tokens);\n369-expression_statement-62-62", type_label=expression_statement];
390 [label="63_ forwardFunds();\n390-expression_statement-64-64", type_label=expression_statement];
393 [label="65_ forwardFunds\n393-function_definition-66-68", type_label=function_definition];
397 [label="66_ wallet.transfer(msg.value);\n397-expression_statement-67-67", type_label=expression_statement];
406 [label="68_ validPurchase\n406-function_definition-69-73", type_label=function_definition];
409 [label="68_ constant\n409-expression_statement-69-69", type_label=expression_statement];
416 [label="69_ bool withinPeriod = started;\n416-new_variable-70-70", type_label=new_variable];
422 [label="70_ bool nonZeroPurchase = msg.value != 0;\n422-new_variable-71-71", type_label=new_variable];
432 [label="71_ return withinPeriod && nonZeroPurchase;\n432-return-72-72", type_label=return];
436 [label="73_ withdrawTokens\n436-function_definition-74-77", type_label=function_definition];
444 [label="74_ require (msg.sender == wallet);\n444-expression_statement-75-75", type_label=expression_statement];
453 [label="75_ tokenReward.transfer(wallet,_amount);\n453-expression_statement-76-76", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 51  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
51 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
53 -> 70  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
70 -> 78  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
78 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
80 -> 97  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
97 -> 104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
104 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
108 -> 125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
125 -> 133  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
133 -> 140  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
140 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
164 -> 169  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
169 -> 174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
174 -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
180 -> 185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
210 -> 214  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
214 -> 218  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
232 -> 236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
236 -> 245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
250 -> 254  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
254 -> 263  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
268 -> 276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
276 -> 285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
289 -> 297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
297 -> 306  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
321 -> 330  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
330 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
337 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
343 -> 351  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
360 -> 369  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
393 -> 397  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
406 -> 416  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
416 -> 422  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
422 -> 432  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
432 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
436 -> 444  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
444 -> 453  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
