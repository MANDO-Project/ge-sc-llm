digraph  {
13 [label="2_ transfer\n13-function_definition-3-3", type_label=function_definition];
28 [label="3_ approve\n28-function_definition-4-4", type_label=function_definition];
43 [label="4_ transferFrom\n43-function_definition-5-5", type_label=function_definition];
62 [label="5_ totalSupply\n62-function_definition-6-6", type_label=function_definition];
70 [label="6_ balanceOf\n70-function_definition-7-7", type_label=function_definition];
82 [label="7_ allowance\n82-function_definition-8-8", type_label=function_definition];
129 [label="12_ mul\n129-function_definition-13-20", type_label=function_definition];
146 [label="13_ if_a == 0\n146-if-14-16", type_label=if];
1295 [label="13_ end_if", type_label=end_if];
151 [label="14_ return 0;\n151-return-15-15", type_label=return];
153 [label="16_ uint256 c = a * b;\n153-new_variable-17-17", type_label=new_variable];
161 [label="17_ require(c / a == b);\n161-expression_statement-18-18", type_label=expression_statement];
170 [label="18_ return c;\n170-return-19-19", type_label=return];
172 [label="20_ div\n172-function_definition-21-25", type_label=function_definition];
189 [label="21_ require(b > 0);\n189-expression_statement-22-22", type_label=expression_statement];
196 [label="22_ uint256 c = a / b;\n196-new_variable-23-23", type_label=new_variable];
204 [label="23_ return c;\n204-return-24-24", type_label=return];
206 [label="25_ sub\n206-function_definition-26-30", type_label=function_definition];
223 [label="26_ require(b <= a);\n223-expression_statement-27-27", type_label=expression_statement];
230 [label="27_ uint256 c = a - b;\n230-new_variable-28-28", type_label=new_variable];
238 [label="28_ return c;\n238-return-29-29", type_label=return];
240 [label="30_ add\n240-function_definition-31-35", type_label=function_definition];
257 [label="31_ uint256 c = a + b;\n257-new_variable-32-32", type_label=new_variable];
265 [label="32_ require(c >= a);\n265-expression_statement-33-33", type_label=expression_statement];
272 [label="33_ return c;\n272-return-34-34", type_label=return];
274 [label="35_ mod\n274-function_definition-36-39", type_label=function_definition];
291 [label="36_ require(b != 0);\n291-expression_statement-37-37", type_label=expression_statement];
298 [label="37_ return a % b;\n298-return-38-38", type_label=return];
313 [label="42_ mapping (address => uint256) private _balances;\n313-new_variable-43-43", type_label=new_variable];
320 [label="43_ mapping (address => mapping (address => uint256)) private _allowed;\n320-new_variable-44-44", type_label=new_variable];
329 [label="44_ uint256 private _totalSupply;\n329-new_variable-45-45", type_label=new_variable];
334 [label="45_ totalSupply\n334-function_definition-46-48", type_label=function_definition];
343 [label="46_ return _totalSupply;\n343-return-47-47", type_label=return];
345 [label="48_ balanceOf\n345-function_definition-49-51", type_label=function_definition];
358 [label="49_ return _balances[owner];\n358-return-50-50", type_label=return];
362 [label="51_ allowance\n362-function_definition-52-54", type_label=function_definition];
379 [label="52_ return _allowed[owner][spender];\n379-return-53-53", type_label=return];
385 [label="54_ transfer\n385-function_definition-55-58", type_label=function_definition];
401 [label="55_ _transfer(msg.sender, to, value);\n401-expression_statement-56-56", type_label=expression_statement];
412 [label="56_ return true;\n412-return-57-57", type_label=return];
415 [label="58_ approve\n415-function_definition-59-64", type_label=function_definition];
431 [label="59_ require(spender != address(0));\n431-expression_statement-60-60", type_label=expression_statement];
440 [label="60_ _allowed[msg.sender][spender] = value;\n440-expression_statement-61-61", type_label=expression_statement];
460 [label="62_ return true;\n460-return-63-63", type_label=return];
463 [label="64_ transferFrom\n463-function_definition-65-70", type_label=function_definition];
483 [label="65_ _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n483-expression_statement-66-66", type_label=expression_statement];
504 [label="66_ _transfer(from, to, value);\n504-expression_statement-67-67", type_label=expression_statement];
529 [label="68_ return true;\n529-return-69-69", type_label=return];
532 [label="70_ increaseAllowance\n532-function_definition-71-76", type_label=function_definition];
548 [label="71_ require(spender != address(0));\n548-expression_statement-72-72", type_label=expression_statement];
557 [label="72_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].add(addedValue);\n557-expression_statement-73-73", type_label=expression_statement];
594 [label="74_ return true;\n594-return-75-75", type_label=return];
597 [label="76_ decreaseAllowance\n597-function_definition-77-82", type_label=function_definition];
613 [label="77_ require(spender != address(0));\n613-expression_statement-78-78", type_label=expression_statement];
622 [label="78_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].sub(subtractedValue);\n622-expression_statement-79-79", type_label=expression_statement];
659 [label="80_ return true;\n659-return-81-81", type_label=return];
662 [label="82_ _transfer\n662-function_definition-83-88", type_label=function_definition];
678 [label="83_ require(to != address(0));\n678-expression_statement-84-84", type_label=expression_statement];
687 [label="84_ _balances[from] = _balances[from].sub(value);\n687-expression_statement-85-85", type_label=expression_statement];
700 [label="85_ _balances[to] = _balances[to].add(value);\n700-expression_statement-86-86", type_label=expression_statement];
721 [label="88_ _mint\n721-function_definition-89-94", type_label=function_definition];
733 [label="89_ require(account != address(0));\n733-expression_statement-90-90", type_label=expression_statement];
742 [label="90_ _totalSupply = _totalSupply.add(value);\n742-expression_statement-91-91", type_label=expression_statement];
751 [label="91_ _balances[account] = _balances[account].add(value);\n751-expression_statement-92-92", type_label=expression_statement];
774 [label="94_ _burn\n774-function_definition-95-100", type_label=function_definition];
786 [label="95_ require(account != address(0));\n786-expression_statement-96-96", type_label=expression_statement];
795 [label="96_ _totalSupply = _totalSupply.sub(value);\n795-expression_statement-97-97", type_label=expression_statement];
804 [label="97_ _balances[account] = _balances[account].sub(value);\n804-expression_statement-98-98", type_label=expression_statement];
827 [label="100_ _burnFrom\n827-function_definition-101-105", type_label=function_definition];
839 [label="101_ _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(value);\n839-expression_statement-102-102", type_label=expression_statement];
860 [label="102_ _burn(account, value);\n860-expression_statement-103-103", type_label=expression_statement];
889 [label="107_ string private _name;\n889-new_variable-108-108", type_label=new_variable];
894 [label="108_ string private _symbol;\n894-new_variable-109-109", type_label=new_variable];
899 [label="109_ uint8 private _decimals;\n899-new_variable-110-110", type_label=new_variable];
918 [label="111_ _name = name;\n918-expression_statement-112-112", type_label=expression_statement];
922 [label="112_ _symbol = symbol;\n922-expression_statement-113-113", type_label=expression_statement];
926 [label="113_ _decimals = decimals;\n926-expression_statement-114-114", type_label=expression_statement];
930 [label="115_ name\n930-function_definition-116-118", type_label=function_definition];
939 [label="116_ return _name;\n939-return-117-117", type_label=return];
941 [label="118_ symbol\n941-function_definition-119-121", type_label=function_definition];
950 [label="119_ return _symbol;\n950-return-120-120", type_label=return];
952 [label="121_ decimals\n952-function_definition-122-124", type_label=function_definition];
961 [label="122_ return _decimals;\n961-return-123-123", type_label=return];
966 [label="126_ address private _owner;\n966-new_variable-127-127", type_label=new_variable];
983 [label="129_ _owner = msg.sender;\n983-expression_statement-130-130", type_label=expression_statement];
997 [label="132_ owner\n997-function_definition-133-135", type_label=function_definition];
1006 [label="133_ return _owner;\n1006-return-134-134", type_label=return];
1008 [label="135_ modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n1008-expression_statement-136-139", type_label=expression_statement];
1011 [label="136_ require(isOwner());\n1011-expression_statement-137-137", type_label=expression_statement];
1017 [label="137_ _;\n1017-expression_statement-138-138", type_label=expression_statement];
1019 [label="139_ isOwner\n1019-function_definition-140-142", type_label=function_definition];
1028 [label="140_ return msg.sender == _owner;\n1028-return-141-141", type_label=return];
1034 [label="142_ renounceOwnership\n1034-function_definition-143-146", type_label=function_definition];
1037 [label="142_ onlyOwner\n1037-expression_statement-143-143", type_label=expression_statement];
1048 [label="144_ _owner = address(0);\n1048-expression_statement-145-145", type_label=expression_statement];
1054 [label="146_ transferOwnership\n1054-function_definition-147-149", type_label=function_definition];
1061 [label="146_ onlyOwner\n1061-expression_statement-147-147", type_label=expression_statement];
1064 [label="147_ _transferOwnership(newOwner);\n1064-expression_statement-148-148", type_label=expression_statement];
1069 [label="149_ _transferOwnership\n1069-function_definition-150-154", type_label=function_definition];
1077 [label="150_ require(newOwner != address(0));\n1077-expression_statement-151-151", type_label=expression_statement];
1092 [label="152_ _owner = newOwner;\n1092-expression_statement-153-153", type_label=expression_statement];
1118 [label="159_ ERC20Detailed(\"HealthyLife\", \"HELI\", 18)\n1118-expression_statement-160-160", type_label=expression_statement];
1129 [label="161_ _mint(_tokenHolder, 100000000000000000000000);\n1129-expression_statement-162-162", type_label=expression_statement];
1136 [label="163_ mint\n1136-function_definition-164-166", type_label=function_definition];
1143 [label="163_ onlyOwner\n1143-expression_statement-164-164", type_label=expression_statement];
1146 [label="164_ _mint( owner() , value );\n1146-expression_statement-165-165", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
129 -> 146  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
146 -> 151  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
146 -> 1295  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1295 -> 153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 1295  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
151 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
153 -> 161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
161 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
170 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
172 -> 189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
189 -> 196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
196 -> 204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
204 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
206 -> 223  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
223 -> 230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 238  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
238 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
240 -> 257  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
257 -> 265  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
265 -> 272  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
272 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
274 -> 291  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
291 -> 298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
298 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
313 -> 320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
334 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
343 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
345 -> 358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
358 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
362 -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
379 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
385 -> 401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
415 -> 431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
431 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
460 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
463 -> 483  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
483 -> 504  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
529 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
532 -> 548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
548 -> 557  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
594 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
597 -> 613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
613 -> 622  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
659 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
662 -> 678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
678 -> 687  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 700  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
721 -> 733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
733 -> 742  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
742 -> 751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
774 -> 786  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
786 -> 795  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
795 -> 804  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
827 -> 839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
839 -> 860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
889 -> 894  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
894 -> 899  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
918 -> 922  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
922 -> 926  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
930 -> 939  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
939 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
941 -> 950  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
950 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
952 -> 961  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
961 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
997 -> 1006  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1006 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1011 -> 1017  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1019 -> 1028  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1028 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1034 -> 1048  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1054 -> 1064  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1069 -> 1077  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1136 -> 1146  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
