digraph  {
9 [label="1_ mapping (uint32 => bytes32) private Cert;\n9-new_variable-2-2", type_label=new_variable];
16 [label="2_ SetCert\n16-function_definition-3-7", type_label=function_definition];
27 [label="3_ if_msg.sender == 0x46b396728e61741D3AbD6Aa5bfC42610997c32C3\n27-if-4-6", type_label=if];
79 [label="3_ end_if", type_label=end_if];
34 [label="4_ Cert [_IndiceIndex] = _Cert;\n34-expression_statement-5-5", type_label=expression_statement];
40 [label="7_ GetCert\n40-function_definition-8-10", type_label=function_definition];
46 [label="7_ constant\n46-expression_statement-8-8", type_label=expression_statement];
53 [label="8_ return Cert [_IndiceIndex];\n53-return-9-9", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
16 -> 27  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
27 -> 34  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
27 -> 79  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
79 -> 40  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
34 -> 79  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
40 -> 53  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
53 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
