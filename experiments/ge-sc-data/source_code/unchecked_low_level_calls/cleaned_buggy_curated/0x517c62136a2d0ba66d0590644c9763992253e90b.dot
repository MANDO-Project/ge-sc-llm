digraph  {
13 [label="2_ safeAdd\n13-function_definition-3-6", type_label=function_definition];
31 [label="3_ c = a + b;\n31-expression_statement-4-4", type_label=expression_statement];
37 [label="4_ require(c >= a);\n37-expression_statement-5-5", type_label=expression_statement];
44 [label="6_ safeSub\n44-function_definition-7-10", type_label=function_definition];
62 [label="7_ require(b <= a);\n62-expression_statement-8-8", type_label=expression_statement];
69 [label="8_ c = a - b;\n69-expression_statement-9-9", type_label=expression_statement];
75 [label="10_ safeMul\n75-function_definition-11-14", type_label=function_definition];
93 [label="11_ c = a * b;\n93-expression_statement-12-12", type_label=expression_statement];
99 [label="12_ require(a == 0 || c / a == b);\n99-expression_statement-13-13", type_label=expression_statement];
112 [label="14_ safeDiv\n112-function_definition-15-18", type_label=function_definition];
130 [label="15_ require(b > 0);\n130-expression_statement-16-16", type_label=expression_statement];
137 [label="16_ c = a / b;\n137-expression_statement-17-17", type_label=expression_statement];
146 [label="20_ totalSupply\n146-function_definition-21-21", type_label=function_definition];
154 [label="21_ balanceOf\n154-function_definition-22-22", type_label=function_definition];
167 [label="22_ allowance\n167-function_definition-23-23", type_label=function_definition];
184 [label="23_ transfer\n184-function_definition-24-24", type_label=function_definition];
200 [label="24_ approve\n200-function_definition-25-25", type_label=function_definition];
216 [label="25_ transferFrom\n216-function_definition-26-26", type_label=function_definition];
267 [label="30_ receiveApproval\n267-function_definition-31-31", type_label=function_definition];
289 [label="33_ address public owner;\n289-new_variable-34-34", type_label=new_variable];
294 [label="34_ address public newOwner;\n294-new_variable-35-35", type_label=new_variable];
311 [label="37_ owner = msg.sender;\n311-expression_statement-38-38", type_label=expression_statement];
317 [label="39_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n317-expression_statement-40-43", type_label=expression_statement];
320 [label="40_ require(msg.sender == owner);\n320-expression_statement-41-41", type_label=expression_statement];
329 [label="41_ _;\n329-expression_statement-42-42", type_label=expression_statement];
331 [label="43_ transferOwnership\n331-function_definition-44-46", type_label=function_definition];
338 [label="43_ onlyOwner\n338-expression_statement-44-44", type_label=expression_statement];
341 [label="44_ newOwner = _newOwner;\n341-expression_statement-45-45", type_label=expression_statement];
345 [label="46_ acceptOwnership\n345-function_definition-47-52", type_label=function_definition];
349 [label="47_ require(msg.sender == newOwner);\n349-expression_statement-48-48", type_label=expression_statement];
364 [label="49_ owner = newOwner;\n364-expression_statement-50-50", type_label=expression_statement];
368 [label="50_ newOwner = address(0);\n368-expression_statement-51-51", type_label=expression_statement];
386 [label="54_ string public symbol;\n386-new_variable-55-55", type_label=new_variable];
391 [label="55_ string public  name;\n391-new_variable-56-56", type_label=new_variable];
396 [label="56_ uint8 public decimals;\n396-new_variable-57-57", type_label=new_variable];
401 [label="57_ uint public _totalSupply;\n401-new_variable-58-58", type_label=new_variable];
406 [label="58_ mapping(address => uint) balances;\n406-new_variable-59-59", type_label=new_variable];
412 [label="59_ mapping(address => mapping(address => uint)) allowed;\n412-new_variable-60-60", type_label=new_variable];
422 [label="61_ symbol = \"ITS\";\n422-expression_statement-62-62", type_label=expression_statement];
427 [label="62_ name = \"ITSToken\";\n427-expression_statement-63-63", type_label=expression_statement];
432 [label="63_ decimals = 2;\n432-expression_statement-64-64", type_label=expression_statement];
436 [label="64_ _totalSupply = 15840000000;\n436-expression_statement-65-65", type_label=expression_statement];
440 [label="65_ balances[0x88F30FD7d35B4A95d5b6c86926d3Eabb35ff4403] = _totalSupply;\n440-expression_statement-66-66", type_label=expression_statement];
456 [label="68_ totalSupply\n456-function_definition-69-71", type_label=function_definition];
465 [label="69_ return _totalSupply  - balances[address(0)];\n465-return-70-70", type_label=return];
473 [label="71_ balanceOf\n473-function_definition-72-74", type_label=function_definition];
487 [label="72_ return balances[tokenOwner];\n487-return-73-73", type_label=return];
491 [label="74_ transfer\n491-function_definition-75-80", type_label=function_definition];
508 [label="75_ balances[msg.sender] = safeSub(balances[msg.sender], tokens);\n508-expression_statement-76-76", type_label=expression_statement];
525 [label="76_ balances[to] = safeAdd(balances[to], tokens);\n525-expression_statement-77-77", type_label=expression_statement];
548 [label="78_ return true;\n548-return-79-79", type_label=return];
551 [label="80_ approve\n551-function_definition-81-85", type_label=function_definition];
568 [label="81_ allowed[msg.sender][spender] = tokens;\n568-expression_statement-82-82", type_label=expression_statement];
588 [label="83_ return true;\n588-return-84-84", type_label=return];
591 [label="85_ transferFrom\n591-function_definition-86-92", type_label=function_definition];
612 [label="86_ balances[from] = safeSub(balances[from], tokens);\n612-expression_statement-87-87", type_label=expression_statement];
625 [label="87_ allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\n625-expression_statement-88-88", type_label=expression_statement];
646 [label="88_ balances[to] = safeAdd(balances[to], tokens);\n646-expression_statement-89-89", type_label=expression_statement];
667 [label="90_ return true;\n667-return-91-91", type_label=return];
670 [label="92_ allowance\n670-function_definition-93-95", type_label=function_definition];
688 [label="93_ return allowed[tokenOwner][spender];\n688-return-94-94", type_label=return];
694 [label="95_ approveAndCall\n694-function_definition-96-101", type_label=function_definition];
715 [label="96_ allowed[msg.sender][spender] = tokens;\n715-expression_statement-97-97", type_label=expression_statement];
735 [label="98_ ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n735-expression_statement-99-99", type_label=expression_statement];
755 [label="99_ return true;\n755-return-100-100", type_label=return];
774 [label="105_ burn\n774-function_definition-106-108", type_label=function_definition];
782 [label="106_ _burn(msg.sender, _value);\n782-expression_statement-107-107", type_label=expression_statement];
791 [label="108_ _burn\n791-function_definition-109-115", type_label=function_definition];
803 [label="109_ require(_value <= balances[_who]);\n803-expression_statement-110-110", type_label=expression_statement];
812 [label="110_ balances[_who] = balances[_who] - _value;\n812-expression_statement-111-111", type_label=expression_statement];
822 [label="111_ _totalSupply = _totalSupply - _value;\n822-expression_statement-112-112", type_label=expression_statement];
844 [label="115_ transferAnyERC20Token\n844-function_definition-116-118", type_label=function_definition];
855 [label="115_ onlyOwner\n855-expression_statement-116-116", type_label=expression_statement];
863 [label="116_ return ERC20Interface(tokenAddress).transfer(owner, tokens);\n863-return-117-117", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
289 -> 294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
331 -> 341  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
345 -> 349  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
386 -> 391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
391 -> 396  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
396 -> 401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
406 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
422 -> 427  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
427 -> 432  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
432 -> 436  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
436 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
456 -> 465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
465 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
473 -> 487  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
487 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
491 -> 508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
508 -> 525  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
548 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
551 -> 568  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
588 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
591 -> 612  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
612 -> 625  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
625 -> 646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
667 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
670 -> 688  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
688 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
694 -> 715  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
735 -> 755  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
755 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
774 -> 782  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
791 -> 803  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
803 -> 812  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
812 -> 822  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
844 -> 863  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
863 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
