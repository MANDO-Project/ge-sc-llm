digraph  {
13 [label="2_ mul\n13-function_definition-3-10", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", type_label=if];
1567 [label="3_ end_if", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", type_label=return];
56 [label="10_ div\n56-function_definition-11-15", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", type_label=return];
90 [label="15_ sub\n90-function_definition-16-20", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", type_label=return];
124 [label="20_ add\n124-function_definition-21-25", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", type_label=return];
158 [label="25_ mod\n158-function_definition-26-29", type_label=function_definition];
175 [label="26_ require(b != 0);\n175-expression_statement-27-27", type_label=expression_statement];
182 [label="27_ return a % b;\n182-return-28-28", type_label=return];
189 [label="31_ address private _owner;\n189-new_variable-32-32", type_label=new_variable];
206 [label="34_ _owner = msg.sender;\n206-expression_statement-35-35", type_label=expression_statement];
220 [label="37_ owner\n220-function_definition-38-40", type_label=function_definition];
229 [label="38_ return _owner;\n229-return-39-39", type_label=return];
231 [label="40_ modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n231-expression_statement-41-44", type_label=expression_statement];
234 [label="41_ require(isOwner());\n234-expression_statement-42-42", type_label=expression_statement];
240 [label="42_ _;\n240-expression_statement-43-43", type_label=expression_statement];
242 [label="44_ isOwner\n242-function_definition-45-47", type_label=function_definition];
251 [label="45_ return msg.sender == _owner;\n251-return-46-46", type_label=return];
257 [label="47_ renounceOwnership\n257-function_definition-48-51", type_label=function_definition];
260 [label="47_ onlyOwner\n260-expression_statement-48-48", type_label=expression_statement];
271 [label="49_ _owner = address(0);\n271-expression_statement-50-50", type_label=expression_statement];
277 [label="51_ transferOwnership\n277-function_definition-52-54", type_label=function_definition];
284 [label="51_ onlyOwner\n284-expression_statement-52-52", type_label=expression_statement];
287 [label="52_ _transferOwnership(newOwner);\n287-expression_statement-53-53", type_label=expression_statement];
292 [label="54_ _transferOwnership\n292-function_definition-55-59", type_label=function_definition];
300 [label="55_ require(newOwner != address(0));\n300-expression_statement-56-56", type_label=expression_statement];
315 [label="57_ _owner = newOwner;\n315-expression_statement-58-58", type_label=expression_statement];
330 [label="62_ address payable public ownerAddress;\n330-new_variable-63-63", type_label=new_variable];
335 [label="63_ bool public commFree;\n335-new_variable-64-64", type_label=new_variable];
340 [label="64_ uint customComm;\n340-new_variable-65-65", type_label=new_variable];
344 [label="65_ uint vidComm;\n344-new_variable-66-66", type_label=new_variable];
348 [label="66_ uint tipComm;\n348-new_variable-67-67", type_label=new_variable];
352 [label="67_ uint8 constant playerMessageMaxLength = 64;\n352-new_variable-68-68", type_label=new_variable];
357 [label="68_ mapping(address => userAccount) public user;\n357-new_variable-69-69", type_label=new_variable];
365 [label="69_ mapping (uint => address payable) public star;\n365-new_variable-70-70", type_label=new_variable];
372 [label="70_ mapping (uint => uint) public referrer;\n372-new_variable-71-71", type_label=new_variable];
515 [label="79_ struct userAccount {\n    uint[] vidsOwned;\n    uint[3][] subscriptions;\n    uint epsPremium;\n  }\n515-expression_statement-80-84", type_label=expression_statement];
535 [label="85_ commFree = true;\n535-expression_statement-86-86", type_label=expression_statement];
540 [label="86_ customComm = 10;\n540-expression_statement-87-87", type_label=expression_statement];
544 [label="87_ vidComm = 10;\n544-expression_statement-88-88", type_label=expression_statement];
548 [label="88_ tipComm = 5;\n548-expression_statement-89-89", type_label=expression_statement];
552 [label="89_ ownerAddress = msg.sender;\n552-expression_statement-90-90", type_label=expression_statement];
558 [label="91_ tipStar\n558-function_definition-92-101", type_label=function_definition];
571 [label="92_ require(msg.value >= 10000000000000000);\n571-expression_statement-93-93", type_label=expression_statement];
580 [label="93_ uint _commission = msg.value.div(tipComm);\n580-new_variable-94-94", type_label=new_variable];
593 [label="94_ uint _starShare = msg.value-_commission;\n593-new_variable-95-95", type_label=new_variable];
603 [label="95_ address payable starAddress = star[_starId];\n603-new_variable-96-96", type_label=new_variable];
611 [label="96_ require(starAddress != address(0));\n611-expression_statement-97-97", type_label=expression_statement];
620 [label="97_ starAddress.transfer(_starShare);\n620-expression_statement-98-98", type_label=expression_statement];
627 [label="98_ ownerAddress.transfer(_commission);\n627-expression_statement-99-99", type_label=expression_statement];
644 [label="101_ fundStar\n644-function_definition-102-120", type_label=function_definition];
661 [label="102_ bytes memory _messageBytes = bytes(_message);\n661-new_variable-103-103", type_label=new_variable];
669 [label="103_ require(msg.value >= 10000000000000000);\n669-expression_statement-104-104", type_label=expression_statement];
678 [label="104_ require(_messageBytes.length <= playerMessageMaxLength, \"Too long\");\n678-expression_statement-105-105", type_label=expression_statement];
690 [label="105_ uint _commission = msg.value.div(tipComm);\n690-new_variable-106-106", type_label=new_variable];
703 [label="106_ address payable _referrerAddress;\n703-new_variable-107-107", type_label=new_variable];
708 [label="107_ uint _referralShare;\n708-new_variable-108-108", type_label=new_variable];
713 [label="108_ if_referrer[_starId] != 0\n713-if-109-112", type_label=if];
2250 [label="108_ end_if", type_label=end_if];
720 [label="109_ _referrerAddress = star[referrer[_starId]];\n720-expression_statement-110-110", type_label=expression_statement];
728 [label="110_ _referralShare = msg.value.div(5);\n728-expression_statement-111-111", type_label=expression_statement];
739 [label="112_ uint _starShare = msg.value - _commission - _referralShare;\n739-new_variable-113-113", type_label=new_variable];
751 [label="113_ address payable _starAddress = star[_starId];\n751-new_variable-114-114", type_label=new_variable];
759 [label="114_ require(_starAddress != address(0));\n759-expression_statement-115-115", type_label=expression_statement];
768 [label="115_ _starAddress.transfer(_starShare);\n768-expression_statement-116-116", type_label=expression_statement];
775 [label="116_ _referrerAddress.transfer(_referralShare);\n775-expression_statement-117-117", type_label=expression_statement];
782 [label="117_ ownerAddress.transfer(_commission);\n782-expression_statement-118-118", type_label=expression_statement];
805 [label="120_ buyPrivateShow\n805-function_definition-121-130", type_label=function_definition];
818 [label="121_ require(msg.value >= 10000000000000000);\n818-expression_statement-122-122", type_label=expression_statement];
827 [label="122_ uint _commission = msg.value.div(vidComm);\n827-new_variable-123-123", type_label=new_variable];
840 [label="123_ uint _starShare = msg.value-_commission;\n840-new_variable-124-124", type_label=new_variable];
850 [label="124_ address payable starAddress = star[_starId];\n850-new_variable-125-125", type_label=new_variable];
858 [label="125_ require(starAddress != address(0));\n858-expression_statement-126-126", type_label=expression_statement];
867 [label="126_ starAddress.transfer(_starShare);\n867-expression_statement-127-127", type_label=expression_statement];
874 [label="127_ ownerAddress.transfer(_commission);\n874-expression_statement-128-128", type_label=expression_statement];
891 [label="130_ buySub\n891-function_definition-131-142", type_label=function_definition];
908 [label="131_ require(msg.value >= 10000000000000000);\n908-expression_statement-132-132", type_label=expression_statement];
917 [label="132_ require(_tier > 0 && _buyerId > 0);\n917-expression_statement-133-133", type_label=expression_statement];
928 [label="133_ uint _commission = msg.value.div(vidComm);\n928-new_variable-134-134", type_label=new_variable];
941 [label="134_ uint _starShare = msg.value-_commission;\n941-new_variable-135-135", type_label=new_variable];
951 [label="135_ address payable _starAddress = star[_starId];\n951-new_variable-136-136", type_label=new_variable];
959 [label="136_ require(_starAddress != address(0));\n959-expression_statement-137-137", type_label=expression_statement];
968 [label="137_ _starAddress.transfer(_starShare);\n968-expression_statement-138-138", type_label=expression_statement];
975 [label="138_ ownerAddress.transfer(_commission);\n975-expression_statement-139-139", type_label=expression_statement];
982 [label="139_ user[msg.sender].subscriptions.push([_starId,_tier, msg.value]);\n982-expression_statement-140-140", type_label=expression_statement];
1012 [label="142_ buyVid\n1012-function_definition-143-163", type_label=function_definition];
1029 [label="143_ require(msg.value >= 10000000000000000);\n1029-expression_statement-144-144", type_label=expression_statement];
1038 [label="144_ uint _commission = msg.value.div(vidComm);\n1038-new_variable-145-145", type_label=new_variable];
1051 [label="145_ if\n1051-if-146-148", type_label=if];
2588 [label="145_ end_if", type_label=end_if];
1054 [label="146_ _commission = 0;\n1054-expression_statement-147-147", type_label=expression_statement];
1058 [label="148_ address payable _referrerAddress;\n1058-new_variable-149-149", type_label=new_variable];
1063 [label="149_ uint _referralShare;\n1063-new_variable-150-150", type_label=new_variable];
1068 [label="150_ if_referrer[_starId] != 0\n1068-if-151-154", type_label=if];
2605 [label="150_ end_if", type_label=end_if];
1075 [label="151_ _referrerAddress = star[referrer[_starId]];\n1075-expression_statement-152-152", type_label=expression_statement];
1083 [label="152_ _referralShare = msg.value.div(5);\n1083-expression_statement-153-153", type_label=expression_statement];
1094 [label="154_ uint _starShare = msg.value- _commission - _referralShare;\n1094-new_variable-155-155", type_label=new_variable];
1106 [label="155_ address payable _starAddress = star[_starId];\n1106-new_variable-156-156", type_label=new_variable];
1114 [label="156_ require(_starAddress != address(0));\n1114-expression_statement-157-157", type_label=expression_statement];
1123 [label="157_ _starAddress.transfer(_starShare);\n1123-expression_statement-158-158", type_label=expression_statement];
1130 [label="158_ _referrerAddress.transfer(_referralShare);\n1130-expression_statement-159-159", type_label=expression_statement];
1137 [label="159_ ownerAddress.transfer(_commission);\n1137-expression_statement-160-160", type_label=expression_statement];
1144 [label="160_ user[msg.sender].vidsOwned.push(_videoId);\n1144-expression_statement-161-161", type_label=expression_statement];
1171 [label="163_ buyStoreItem\n1171-function_definition-164-184", type_label=function_definition];
1188 [label="164_ require(msg.value >= 10000000000000000);\n1188-expression_statement-165-165", type_label=expression_statement];
1197 [label="165_ require(_itemId > 0 && _buyerId > 0);\n1197-expression_statement-166-166", type_label=expression_statement];
1208 [label="166_ uint _commission = msg.value.div(vidComm);\n1208-new_variable-167-167", type_label=new_variable];
1221 [label="167_ if\n1221-if-168-170", type_label=if];
2758 [label="167_ end_if", type_label=end_if];
1224 [label="168_ _commission = 0;\n1224-expression_statement-169-169", type_label=expression_statement];
1228 [label="170_ uint _referralShare;\n1228-new_variable-171-171", type_label=new_variable];
1233 [label="171_ address payable _referrerAddress;\n1233-new_variable-172-172", type_label=new_variable];
1238 [label="172_ if_referrer[_starId] != 0\n1238-if-173-176", type_label=if];
2775 [label="172_ end_if", type_label=end_if];
1245 [label="173_ _referrerAddress = star[referrer[_starId]];\n1245-expression_statement-174-174", type_label=expression_statement];
1253 [label="174_ _referralShare = msg.value.div(5);\n1253-expression_statement-175-175", type_label=expression_statement];
1264 [label="176_ uint _starShare = msg.value- _commission-_referralShare;\n1264-new_variable-177-177", type_label=new_variable];
1276 [label="177_ address payable _starAddress = star[_starId];\n1276-new_variable-178-178", type_label=new_variable];
1284 [label="178_ require(_starAddress != address(0));\n1284-expression_statement-179-179", type_label=expression_statement];
1293 [label="179_ _starAddress.transfer(_starShare);\n1293-expression_statement-180-180", type_label=expression_statement];
1300 [label="180_ _referrerAddress.transfer(_referralShare);\n1300-expression_statement-181-181", type_label=expression_statement];
1307 [label="181_ ownerAddress.transfer(_commission);\n1307-expression_statement-182-182", type_label=expression_statement];
1330 [label="184_ buyPremium\n1330-function_definition-185-189", type_label=function_definition];
1339 [label="185_ require(msg.value >= 10000000000000000);\n1339-expression_statement-186-186", type_label=expression_statement];
1348 [label="186_ ownerAddress.transfer(msg.value);\n1348-expression_statement-187-187", type_label=expression_statement];
1365 [label="189_ buyCustomVid\n1365-function_definition-190-202", type_label=function_definition];
1382 [label="190_ require(msg.value >= 10000000000000000);\n1382-expression_statement-191-191", type_label=expression_statement];
1391 [label="191_ uint _commission = msg.value.div(customComm);\n1391-new_variable-192-192", type_label=new_variable];
1404 [label="192_ if\n1404-if-193-195", type_label=if];
2941 [label="192_ end_if", type_label=end_if];
1407 [label="193_ _commission = 0;\n1407-expression_statement-194-194", type_label=expression_statement];
1411 [label="195_ uint _starShare = msg.value - _commission;\n1411-new_variable-196-196", type_label=new_variable];
1421 [label="196_ address payable _starAddress = star[_starId];\n1421-new_variable-197-197", type_label=new_variable];
1429 [label="197_ require(_starAddress != address(0));\n1429-expression_statement-198-198", type_label=expression_statement];
1438 [label="198_ _starAddress.transfer(_starShare);\n1438-expression_statement-199-199", type_label=expression_statement];
1445 [label="199_ ownerAddress.transfer(_commission);\n1445-expression_statement-200-200", type_label=expression_statement];
1464 [label="202_ addStar\n1464-function_definition-203-205", type_label=function_definition];
1475 [label="202_ onlyOwner\n1475-expression_statement-203-203", type_label=expression_statement];
1478 [label="203_ star[_starId] = _starAddress;\n1478-expression_statement-204-204", type_label=expression_statement];
1484 [label="205_ addReferrer\n1484-function_definition-206-208", type_label=function_definition];
1495 [label="205_ onlyOwner\n1495-expression_statement-206-206", type_label=expression_statement];
1498 [label="206_ referrer[_starId] = _referrerId;\n1498-expression_statement-207-207", type_label=expression_statement];
1504 [label="208_ commission\n1504-function_definition-209-214", type_label=function_definition];
1523 [label="208_ onlyOwner\n1523-expression_statement-209-209", type_label=expression_statement];
1526 [label="209_ commFree = _commFree;\n1526-expression_statement-210-210", type_label=expression_statement];
1530 [label="210_ customComm = _customcomm;\n1530-expression_statement-211-211", type_label=expression_statement];
1534 [label="211_ vidComm = _vidcomm;\n1534-expression_statement-212-212", type_label=expression_statement];
1538 [label="212_ tipComm = _tipcomm;\n1538-expression_statement-213-213", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 1567  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1567 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 1567  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
220 -> 229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
229 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
234 -> 240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
242 -> 251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
251 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
257 -> 271  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
277 -> 287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
292 -> 300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
330 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
335 -> 340  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
340 -> 344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
344 -> 348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
348 -> 352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
352 -> 357  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
357 -> 365  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
365 -> 372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
535 -> 540  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
540 -> 544  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
544 -> 548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
548 -> 552  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
558 -> 571  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
571 -> 580  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
580 -> 593  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
593 -> 603  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
603 -> 611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
611 -> 620  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
620 -> 627  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
644 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 669  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
669 -> 678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
678 -> 690  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
690 -> 703  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
703 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 713  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
713 -> 720  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
713 -> 2250  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2250 -> 739  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
720 -> 728  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
728 -> 2250  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
739 -> 751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
751 -> 759  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
759 -> 768  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
768 -> 775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
775 -> 782  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
805 -> 818  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
818 -> 827  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
827 -> 840  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
840 -> 850  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
850 -> 858  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
858 -> 867  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
867 -> 874  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
891 -> 908  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
908 -> 917  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
917 -> 928  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
928 -> 941  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
941 -> 951  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
951 -> 959  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
959 -> 968  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
968 -> 975  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
975 -> 982  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1012 -> 1029  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1029 -> 1038  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1038 -> 1051  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1051 -> 1054  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1051 -> 2588  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2588 -> 1058  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1054 -> 2588  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1058 -> 1063  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1063 -> 1068  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1068 -> 1075  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1068 -> 2605  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2605 -> 1094  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1075 -> 1083  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1083 -> 2605  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1094 -> 1106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1106 -> 1114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1114 -> 1123  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1123 -> 1130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1130 -> 1137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1137 -> 1144  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1171 -> 1188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1188 -> 1197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1197 -> 1208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1208 -> 1221  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1221 -> 1224  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1221 -> 2758  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2758 -> 1228  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1224 -> 2758  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1228 -> 1233  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1233 -> 1238  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1238 -> 1245  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1238 -> 2775  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2775 -> 1264  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1245 -> 1253  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1253 -> 2775  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1264 -> 1276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1276 -> 1284  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1284 -> 1293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1293 -> 1300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1300 -> 1307  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1330 -> 1339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1339 -> 1348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1365 -> 1382  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1382 -> 1391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1391 -> 1404  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1404 -> 1407  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1404 -> 2941  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2941 -> 1411  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1407 -> 2941  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1411 -> 1421  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1421 -> 1429  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1429 -> 1438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1438 -> 1445  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1464 -> 1478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1484 -> 1498  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1504 -> 1526  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1526 -> 1530  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1530 -> 1534  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1534 -> 1538  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
