digraph  {
13 [label="2_ mul\n13-function_definition-3-10", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", type_label=if];
984 [label="3_ end_if", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", type_label=return];
56 [label="10_ div\n56-function_definition-11-15", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", type_label=return];
90 [label="15_ sub\n90-function_definition-16-20", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", type_label=return];
124 [label="20_ add\n124-function_definition-21-25", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", type_label=return];
158 [label="25_ mod\n158-function_definition-26-29", type_label=function_definition];
175 [label="26_ require(b != 0);\n175-expression_statement-27-27", type_label=expression_statement];
182 [label="27_ return a % b;\n182-return-28-28", type_label=return];
189 [label="31_ transfer\n189-function_definition-32-32", type_label=function_definition];
204 [label="32_ approve\n204-function_definition-33-33", type_label=function_definition];
219 [label="33_ transferFrom\n219-function_definition-34-34", type_label=function_definition];
238 [label="34_ totalSupply\n238-function_definition-35-35", type_label=function_definition];
246 [label="35_ balanceOf\n246-function_definition-36-36", type_label=function_definition];
258 [label="36_ allowance\n258-function_definition-37-37", type_label=function_definition];
313 [label="42_ mapping (address => uint256) private _balances;\n313-new_variable-43-43", type_label=new_variable];
320 [label="43_ mapping (address => mapping (address => uint256)) private _allowed;\n320-new_variable-44-44", type_label=new_variable];
329 [label="44_ uint256 private _totalSupply;\n329-new_variable-45-45", type_label=new_variable];
334 [label="45_ totalSupply\n334-function_definition-46-48", type_label=function_definition];
343 [label="46_ return _totalSupply;\n343-return-47-47", type_label=return];
345 [label="48_ balanceOf\n345-function_definition-49-51", type_label=function_definition];
358 [label="49_ return _balances[owner];\n358-return-50-50", type_label=return];
362 [label="51_ allowance\n362-function_definition-52-54", type_label=function_definition];
379 [label="52_ return _allowed[owner][spender];\n379-return-53-53", type_label=return];
385 [label="54_ transfer\n385-function_definition-55-58", type_label=function_definition];
401 [label="55_ _transfer(msg.sender, to, value);\n401-expression_statement-56-56", type_label=expression_statement];
412 [label="56_ return true;\n412-return-57-57", type_label=return];
415 [label="58_ approve\n415-function_definition-59-62", type_label=function_definition];
431 [label="59_ _approve(msg.sender, spender, value);\n431-expression_statement-60-60", type_label=expression_statement];
442 [label="60_ return true;\n442-return-61-61", type_label=return];
445 [label="62_ transferFrom\n445-function_definition-63-67", type_label=function_definition];
465 [label="63_ _transfer(from, to, value);\n465-expression_statement-64-64", type_label=expression_statement];
474 [label="64_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n474-expression_statement-65-65", type_label=expression_statement];
496 [label="65_ return true;\n496-return-66-66", type_label=return];
499 [label="67_ increaseAllowance\n499-function_definition-68-71", type_label=function_definition];
515 [label="68_ _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n515-expression_statement-69-69", type_label=expression_statement];
537 [label="69_ return true;\n537-return-70-70", type_label=return];
540 [label="71_ decreaseAllowance\n540-function_definition-72-75", type_label=function_definition];
556 [label="72_ _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n556-expression_statement-73-73", type_label=expression_statement];
578 [label="73_ return true;\n578-return-74-74", type_label=return];
581 [label="75_ _transfer\n581-function_definition-76-81", type_label=function_definition];
597 [label="76_ require(to != address(0));\n597-expression_statement-77-77", type_label=expression_statement];
606 [label="77_ _balances[from] = _balances[from].sub(value);\n606-expression_statement-78-78", type_label=expression_statement];
619 [label="78_ _balances[to] = _balances[to].add(value);\n619-expression_statement-79-79", type_label=expression_statement];
640 [label="81_ _mint\n640-function_definition-82-87", type_label=function_definition];
652 [label="82_ require(account != address(0));\n652-expression_statement-83-83", type_label=expression_statement];
661 [label="83_ _totalSupply = _totalSupply.add(value);\n661-expression_statement-84-84", type_label=expression_statement];
670 [label="84_ _balances[account] = _balances[account].add(value);\n670-expression_statement-85-85", type_label=expression_statement];
693 [label="87_ _burn\n693-function_definition-88-93", type_label=function_definition];
705 [label="88_ require(account != address(0));\n705-expression_statement-89-89", type_label=expression_statement];
714 [label="89_ _totalSupply = _totalSupply.sub(value);\n714-expression_statement-90-90", type_label=expression_statement];
723 [label="90_ _balances[account] = _balances[account].sub(value);\n723-expression_statement-91-91", type_label=expression_statement];
746 [label="93_ _approve\n746-function_definition-94-99", type_label=function_definition];
762 [label="94_ require(spender != address(0));\n762-expression_statement-95-95", type_label=expression_statement];
771 [label="95_ require(owner != address(0));\n771-expression_statement-96-96", type_label=expression_statement];
780 [label="96_ _allowed[owner][spender] = value;\n780-expression_statement-97-97", type_label=expression_statement];
796 [label="99_ _burnFrom\n796-function_definition-100-103", type_label=function_definition];
808 [label="100_ _burn(account, value);\n808-expression_statement-101-101", type_label=expression_statement];
815 [label="101_ _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\n815-expression_statement-102-102", type_label=expression_statement];
843 [label="105_ string private _name;\n843-new_variable-106-106", type_label=new_variable];
848 [label="106_ string private _symbol;\n848-new_variable-107-107", type_label=new_variable];
853 [label="107_ uint8 private _decimals;\n853-new_variable-108-108", type_label=new_variable];
872 [label="109_ _name = name;\n872-expression_statement-110-110", type_label=expression_statement];
876 [label="110_ _symbol = symbol;\n876-expression_statement-111-111", type_label=expression_statement];
880 [label="111_ _decimals = decimals;\n880-expression_statement-112-112", type_label=expression_statement];
884 [label="113_ name\n884-function_definition-114-116", type_label=function_definition];
893 [label="114_ return _name;\n893-return-115-115", type_label=return];
895 [label="116_ symbol\n895-function_definition-117-119", type_label=function_definition];
904 [label="117_ return _symbol;\n904-return-118-118", type_label=return];
906 [label="119_ decimals\n906-function_definition-120-122", type_label=function_definition];
915 [label="120_ return _decimals;\n915-return-121-121", type_label=return];
926 [label="124_ uint8 public constant DECIMALS = 3;\n926-new_variable-125-125", type_label=new_variable];
932 [label="125_ uint256 public constant INITIAL_SUPPLY = 420000;\n932-new_variable-126-126", type_label=new_variable];
939 [label="126_ ERC20Detailed(\"ExtistenzToken\", \"EXT\", DECIMALS)\n939-expression_statement-127-127", type_label=expression_statement];
950 [label="127_ _mint(msg.sender, INITIAL_SUPPLY);\n950-expression_statement-128-128", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 984  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
984 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 984  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
313 -> 320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
334 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
343 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
345 -> 358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
358 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
362 -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
379 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
385 -> 401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
415 -> 431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
431 -> 442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
442 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
445 -> 465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
465 -> 474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
474 -> 496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
496 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
499 -> 515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 537  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
537 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
540 -> 556  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
556 -> 578  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
578 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
581 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
597 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
606 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
640 -> 652  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
652 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 670  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
693 -> 705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
705 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 723  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
746 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
762 -> 771  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
771 -> 780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
796 -> 808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
808 -> 815  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
843 -> 848  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
848 -> 853  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
872 -> 876  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
876 -> 880  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
884 -> 893  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
893 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
895 -> 904  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
904 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
906 -> 915  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
915 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
926 -> 932  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
