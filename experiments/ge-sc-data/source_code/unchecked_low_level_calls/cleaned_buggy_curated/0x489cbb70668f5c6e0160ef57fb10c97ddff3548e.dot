digraph  {
12 [label="2_ decimals\n12-function_definition-3-3", type_label=function_definition];
20 [label="3_ totalSupply\n20-function_definition-4-4", type_label=function_definition];
28 [label="4_ balanceOf\n28-function_definition-5-5", type_label=function_definition];
40 [label="5_ transfer\n40-function_definition-6-6", type_label=function_definition];
75 [label="9_ allowance\n75-function_definition-10-10", type_label=function_definition];
91 [label="10_ transferFrom\n91-function_definition-11-11", type_label=function_definition];
110 [label="11_ approve\n110-function_definition-12-12", type_label=function_definition];
142 [label="15_ address public owner;\n142-new_variable-16-16", type_label=new_variable];
159 [label="18_ owner = msg.sender;\n159-expression_statement-19-19", type_label=expression_statement];
165 [label="20_ modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n165-expression_statement-21-24", type_label=expression_statement];
168 [label="21_ require(msg.sender == owner);\n168-expression_statement-22-22", type_label=expression_statement];
177 [label="22_ _;\n177-expression_statement-23-23", type_label=expression_statement];
179 [label="24_ transferOwnership\n179-function_definition-25-29", type_label=function_definition];
186 [label="24_ onlyOwner\n186-expression_statement-25-25", type_label=expression_statement];
189 [label="25_ require(newOwner != address(0));\n189-expression_statement-26-26", type_label=expression_statement];
204 [label="27_ owner = newOwner;\n204-expression_statement-28-28", type_label=expression_statement];
214 [label="31_ ERC20 public token = ERC20(0x611171923b84185e9328827CFAaE6630481eCc7a);\n214-new_variable-32-32", type_label=new_variable];
224 [label="32_ uint256 public releaseTimeFund = 1537833600;\n224-new_variable-33-33", type_label=new_variable];
230 [label="33_ uint256 public releaseTimeTeamAdvisorsPartners = 1552348800;\n230-new_variable-34-34", type_label=new_variable];
236 [label="34_ address public ReserveFund = 0xC5fed49Be1F6c3949831a06472aC5AB271AF89BD;\n236-new_variable-35-35", type_label=new_variable];
242 [label="35_ uint public ReserveFundAmount = 18600000 ether;\n242-new_variable-36-36", type_label=new_variable];
249 [label="36_ address public AdvisorsPartners = 0x5B5521E9D795CA083eF928A58393B8f7FF95e098;\n249-new_variable-37-37", type_label=new_variable];
255 [label="37_ uint public AdvisorsPartnersAmount = 3720000 ether;\n255-new_variable-38-38", type_label=new_variable];
262 [label="38_ address public Team = 0x556dB38b73B97954960cA72580EbdAc89327808E;\n262-new_variable-39-39", type_label=new_variable];
268 [label="39_ uint public TeamAmount = 4650000 ether;\n268-new_variable-40-40", type_label=new_variable];
275 [label="40_ unlockFund\n275-function_definition-41-49", type_label=function_definition];
278 [label="40_ onlyOwner\n278-expression_statement-41-41", type_label=expression_statement];
281 [label="41_ require(releaseTimeFund <= block.timestamp);\n281-expression_statement-42-42", type_label=expression_statement];
290 [label="42_ require(ReserveFundAmount > 0);\n290-expression_statement-43-43", type_label=expression_statement];
297 [label="43_ uint tokenBalance = token.balanceOf(this);\n297-new_variable-44-44", type_label=new_variable];
308 [label="44_ require(tokenBalance >= ReserveFundAmount);\n308-expression_statement-45-45", type_label=expression_statement];
315 [label="45_ if\n315-if-46-48", type_label=if];
716 [label="45_ end_if", type_label=end_if];
325 [label="46_ ReserveFundAmount = 0;\n325-expression_statement-47-47", type_label=expression_statement];
329 [label="49_ unlockTeamAdvisorsPartnersTokens\n329-function_definition-50-62", type_label=function_definition];
332 [label="49_ onlyOwner\n332-expression_statement-50-50", type_label=expression_statement];
335 [label="50_ require(releaseTimeTeamAdvisorsPartners <= block.timestamp);\n335-expression_statement-51-51", type_label=expression_statement];
344 [label="51_ require(AdvisorsPartnersAmount > 0);\n344-expression_statement-52-52", type_label=expression_statement];
351 [label="52_ require(TeamAmount > 0);\n351-expression_statement-53-53", type_label=expression_statement];
358 [label="53_ uint tokenBalance = token.balanceOf(this);\n358-new_variable-54-54", type_label=new_variable];
369 [label="54_ require(tokenBalance >= AdvisorsPartnersAmount + TeamAmount);\n369-expression_statement-55-55", type_label=expression_statement];
378 [label="55_ if\n378-if-56-58", type_label=if];
779 [label="55_ end_if", type_label=end_if];
388 [label="56_ AdvisorsPartnersAmount = 0;\n388-expression_statement-57-57", type_label=expression_statement];
392 [label="58_ if\n392-if-59-61", type_label=if];
793 [label="58_ end_if", type_label=end_if];
402 [label="59_ TeamAmount = 0;\n402-expression_statement-60-60", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
168 -> 177  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
179 -> 189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
214 -> 224  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
224 -> 230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
236 -> 242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
242 -> 249  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
249 -> 255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
255 -> 262  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
262 -> 268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
275 -> 281  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
281 -> 290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
290 -> 297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
297 -> 308  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
308 -> 315  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
315 -> 325  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
315 -> 716  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
716 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
325 -> 716  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
329 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
335 -> 344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
344 -> 351  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
358 -> 369  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
369 -> 378  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
378 -> 388  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
378 -> 779  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
779 -> 392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
388 -> 779  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
392 -> 402  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
392 -> 793  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
793 -> 2  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
402 -> 793  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
}
