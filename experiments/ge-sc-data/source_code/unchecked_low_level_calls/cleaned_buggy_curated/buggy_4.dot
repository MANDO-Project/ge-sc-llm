digraph  {
15 [label="2_ function totalSupply() external view returns (uint256);\n15-function_definition-3-3", method="totalSupply()", type_label=function_definition];
23 [label="3_ function balanceOf(address who) external view returns (uint256);\n23-function_definition-4-4", method="balanceOf(address who)", type_label=function_definition];
35 [label="4_ function transfer(address to, uint256 value) external returns (bool);\n35-function_definition-5-5", method="transfer(address to,uint256 value)", type_label=function_definition];
70 [label="8_ function bug_unchk_send2() payable public{\n      msg.sender.transfer(1 ether);}\n70-function_definition-9-10", method="bug_unchk_send2()", type_label=function_definition];
75 [label="9_ msg.sender.transfer(1 ether);\n75-expression_statement-10-10", method="bug_unchk_send2()", type_label=expression_statement];
85 [label="10_ string public name = \"PHO\";\n85-new_variable-11-11", method="", type_label=new_variable];
92 [label="11_ function bug_unchk_send17() payable public{\n      msg.sender.transfer(1 ether);}\n92-function_definition-12-13", method="bug_unchk_send17()", type_label=function_definition];
97 [label="12_ msg.sender.transfer(1 ether);\n97-expression_statement-13-13", method="bug_unchk_send17()", type_label=expression_statement];
107 [label="13_ string public symbol = \"PHO\";\n107-new_variable-14-14", method="", type_label=new_variable];
114 [label="14_ function bug_unchk_send3() payable public{\n      msg.sender.transfer(1 ether);}\n114-function_definition-15-16", method="bug_unchk_send3()", type_label=function_definition];
119 [label="15_ msg.sender.transfer(1 ether);\n119-expression_statement-16-16", method="bug_unchk_send3()", type_label=expression_statement];
129 [label="16_ uint8 public decimals = 18;\n129-new_variable-17-17", method="", type_label=new_variable];
135 [label="17_ function bug_unchk_send9() payable public{\n      msg.sender.transfer(1 ether);}\n135-function_definition-18-19", method="bug_unchk_send9()", type_label=function_definition];
140 [label="18_ msg.sender.transfer(1 ether);\n140-expression_statement-19-19", method="bug_unchk_send9()", type_label=expression_statement];
150 [label="19_ uint256 saleAmount;\n150-new_variable-20-20", method="", type_label=new_variable];
154 [label="20_ function bug_unchk_send25() payable public{\n      msg.sender.transfer(1 ether);}\n154-function_definition-21-22", method="bug_unchk_send25()", type_label=function_definition];
159 [label="21_ msg.sender.transfer(1 ether);\n159-expression_statement-22-22", method="bug_unchk_send25()", type_label=expression_statement];
169 [label="22_ uint256 evtAmount;\n169-new_variable-23-23", method="", type_label=new_variable];
173 [label="23_ function bug_unchk_send19() payable public{\n      msg.sender.transfer(1 ether);}\n173-function_definition-24-25", method="bug_unchk_send19()", type_label=function_definition];
178 [label="24_ msg.sender.transfer(1 ether);\n178-expression_statement-25-25", method="bug_unchk_send19()", type_label=expression_statement];
188 [label="25_ uint256 teamAmount;\n188-new_variable-26-26", method="", type_label=new_variable];
192 [label="26_ function bug_unchk_send26() payable public{\n      msg.sender.transfer(1 ether);}\n192-function_definition-27-28", method="bug_unchk_send26()", type_label=function_definition];
197 [label="27_ msg.sender.transfer(1 ether);\n197-expression_statement-28-28", method="bug_unchk_send26()", type_label=expression_statement];
207 [label="28_ uint256 _totalSupply;\n207-new_variable-29-29", method="", type_label=new_variable];
211 [label="29_ function bug_unchk_send20() payable public{\n      msg.sender.transfer(1 ether);}\n211-function_definition-30-31", method="bug_unchk_send20()", type_label=function_definition];
216 [label="30_ msg.sender.transfer(1 ether);\n216-expression_statement-31-31", method="bug_unchk_send20()", type_label=expression_statement];
226 [label="31_ mapping(address => uint256) balances;\n226-new_variable-32-32", method="", type_label=new_variable];
232 [label="32_ function bug_unchk_send32() payable public{\n      msg.sender.transfer(1 ether);}\n232-function_definition-33-34", method="bug_unchk_send32()", type_label=function_definition];
237 [label="33_ msg.sender.transfer(1 ether);\n237-expression_statement-34-34", method="bug_unchk_send32()", type_label=expression_statement];
247 [label="34_ address public owner;\n247-new_variable-35-35", method="", type_label=new_variable];
252 [label="35_ function bug_unchk_send4() payable public{\n      msg.sender.transfer(1 ether);}\n252-function_definition-36-37", method="bug_unchk_send4()", type_label=function_definition];
257 [label="36_ msg.sender.transfer(1 ether);\n257-expression_statement-37-37", method="bug_unchk_send4()", type_label=expression_statement];
267 [label="37_ address public sale;\n267-new_variable-38-38", method="", type_label=new_variable];
272 [label="38_ function bug_unchk_send7() payable public{\n      msg.sender.transfer(1 ether);}\n272-function_definition-39-40", method="bug_unchk_send7()", type_label=function_definition];
277 [label="39_ msg.sender.transfer(1 ether);\n277-expression_statement-40-40", method="bug_unchk_send7()", type_label=expression_statement];
287 [label="40_ address public evt;\n287-new_variable-41-41", method="", type_label=new_variable];
292 [label="41_ function bug_unchk_send23() payable public{\n      msg.sender.transfer(1 ether);}\n292-function_definition-42-43", method="bug_unchk_send23()", type_label=function_definition];
297 [label="42_ msg.sender.transfer(1 ether);\n297-expression_statement-43-43", method="bug_unchk_send23()", type_label=expression_statement];
307 [label="43_ address public team;\n307-new_variable-44-44", method="", type_label=new_variable];
312 [label="44_ modifier isOwner {\n        require(owner == msg.sender);\n        _;\n    }\n312-expression_statement-45-48", method="", type_label=expression_statement];
315 [label="45_ require(owner == msg.sender);\n315-expression_statement-46-46", method="", type_label=expression_statement];
324 [label="46_ _;\n324-expression_statement-47-47", method="", type_label=expression_statement];
328 [label="49_ owner   = msg.sender;\n328-expression_statement-50-50", method="", type_label=expression_statement];
334 [label="50_ sale    = 0x071F73f4D0befd4406901AACE6D5FFD6D297c561;\n334-expression_statement-51-51", method="", type_label=expression_statement];
338 [label="51_ evt     = 0x76535ca5BF1d33434A302e5A464Df433BB1F80F6;\n338-expression_statement-52-52", method="", type_label=expression_statement];
342 [label="52_ team    = 0xD7EC5D8697e4c83Dc33D781d19dc2910fB165D5C;\n342-expression_statement-53-53", method="", type_label=expression_statement];
346 [label="53_ saleAmount    = toWei(1000000000);\n346-expression_statement-54-54", method="", type_label=expression_statement];
353 [label="54_ evtAmount     = toWei(200000000);\n353-expression_statement-55-55", method="", type_label=expression_statement];
360 [label="55_ teamAmount    = toWei(800000000);\n360-expression_statement-56-56", method="", type_label=expression_statement];
367 [label="56_ _totalSupply  = toWei(2000000000);\n367-expression_statement-57-57", method="", type_label=expression_statement];
374 [label="57_ require(_totalSupply == saleAmount + evtAmount + teamAmount );\n374-expression_statement-58-58", method="", type_label=expression_statement];
385 [label="58_ balances[owner] = _totalSupply;\n385-expression_statement-59-59", method="", type_label=expression_statement];
403 [label="60_ transfer(sale, saleAmount);\n403-expression_statement-61-61", method="", type_label=expression_statement];
410 [label="61_ transfer(evt, evtAmount);\n410-expression_statement-62-62", method="", type_label=expression_statement];
417 [label="62_ transfer(team, teamAmount);\n417-expression_statement-63-63", method="", type_label=expression_statement];
424 [label="63_ require(balances[owner] == 0);\n424-expression_statement-64-64", method="", type_label=expression_statement];
433 [label="65_ function bug_unchk_send14() payable public{\n      msg.sender.transfer(1 ether);}\n433-function_definition-66-67", method="bug_unchk_send14()", type_label=function_definition];
438 [label="66_ msg.sender.transfer(1 ether);\n438-expression_statement-67-67", method="bug_unchk_send14()", type_label=expression_statement];
448 [label="67_ function totalSupply() public view returns (uint) {\n        return _totalSupply;\n    }\n448-function_definition-68-70", method="totalSupply()", type_label=function_definition];
457 [label="68_ return _totalSupply;\n457-return-69-69", method="totalSupply()", type_label=return];
459 [label="70_ function bug_unchk_send30() payable public{\n      msg.sender.transfer(1 ether);}\n459-function_definition-71-72", method="bug_unchk_send30()", type_label=function_definition];
464 [label="71_ msg.sender.transfer(1 ether);\n464-expression_statement-72-72", method="bug_unchk_send30()", type_label=expression_statement];
474 [label="72_ function balanceOf(address who) public view returns (uint256) {\n        return balances[who];\n    }\n474-function_definition-73-75", method="balanceOf(address who)", type_label=function_definition];
487 [label="73_ return balances[who];\n487-return-74-74", method="balanceOf(address who)", type_label=return];
491 [label="75_ function bug_unchk_send8() payable public{\n      msg.sender.transfer(1 ether);}\n491-function_definition-76-77", method="bug_unchk_send8()", type_label=function_definition];
496 [label="76_ msg.sender.transfer(1 ether);\n496-expression_statement-77-77", method="bug_unchk_send8()", type_label=expression_statement];
506 [label="77_ function transfer(address to, uint256 value) public returns (bool success) {\n        require(msg.sender != to);\n        require(value > 0);\n        require( balances[msg.sender] >= value );\n        require( balances[to] + value >= balances[to] );\n        if(msg.sender == team) {\n            require(now >= 1589036400);      \n            if(balances[msg.sender] - value < toWei(600000000))\n                require(now >= 1620572400);      \n            if(balances[msg.sender] - value < toWei(400000000))\n                require(now >= 1652108400);      \n            if(balances[msg.sender] - value < toWei(200000000))\n                require(now >= 1683644400);      \n        }\n        balances[msg.sender] -= value;\n        balances[to] += value;\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n506-function_definition-78-96", method="transfer(address to,uint256 value)", type_label=function_definition];
523 [label="78_ require(msg.sender != to);\n523-expression_statement-79-79", method="transfer(address to,uint256 value)", type_label=expression_statement];
532 [label="79_ require(value > 0);\n532-expression_statement-80-80", method="transfer(address to,uint256 value)", type_label=expression_statement];
539 [label="80_ require( balances[msg.sender] >= value );\n539-expression_statement-81-81", method="transfer(address to,uint256 value)", type_label=expression_statement];
550 [label="81_ require( balances[to] + value >= balances[to] );\n550-expression_statement-82-82", method="transfer(address to,uint256 value)", type_label=expression_statement];
563 [label="82_ if_msg.sender == team\n563-if-83-91", method="transfer(address to,uint256 value)", type_label=if];
1339 [label="82_ end_if", method="transfer(address to,uint256 value)", type_label=end_if];
570 [label="83_ require(now >= 1589036400);\n570-expression_statement-84-84", method="transfer(address to,uint256 value)", type_label=expression_statement];
577 [label="84_ if\n577-if-85-86", method="transfer(address to,uint256 value)", type_label=if];
1353 [label="84_ end_if", method="transfer(address to,uint256 value)", type_label=end_if];
590 [label="85_ require(now >= 1620572400);\n590-expression_statement-86-86", method="transfer(address to,uint256 value)", type_label=expression_statement];
597 [label="86_ if\n597-if-87-88", method="transfer(address to,uint256 value)", type_label=if];
1373 [label="86_ end_if", method="transfer(address to,uint256 value)", type_label=end_if];
610 [label="87_ require(now >= 1652108400);\n610-expression_statement-88-88", method="transfer(address to,uint256 value)", type_label=expression_statement];
617 [label="88_ if\n617-if-89-90", method="transfer(address to,uint256 value)", type_label=if];
1393 [label="88_ end_if", method="transfer(address to,uint256 value)", type_label=end_if];
630 [label="89_ require(now >= 1683644400);\n630-expression_statement-90-90", method="transfer(address to,uint256 value)", type_label=expression_statement];
637 [label="91_ balances[msg.sender] -= value;\n637-expression_statement-92-92", method="transfer(address to,uint256 value)", type_label=expression_statement];
645 [label="92_ balances[to] += value;\n645-expression_statement-93-93", method="transfer(address to,uint256 value)", type_label=expression_statement];
661 [label="94_ return true;\n661-return-95-95", method="transfer(address to,uint256 value)", type_label=return];
664 [label="96_ function bug_unchk_send27() payable public{\n      msg.sender.transfer(1 ether);}\n664-function_definition-97-98", method="bug_unchk_send27()", type_label=function_definition];
669 [label="97_ msg.sender.transfer(1 ether);\n669-expression_statement-98-98", method="bug_unchk_send27()", type_label=expression_statement];
679 [label="98_ function burnCoins(uint256 value) public {\n        require(balances[msg.sender] >= value);\n        require(_totalSupply >= value);\n        balances[msg.sender] -= value;\n        _totalSupply -= value;\n        emit Transfer(msg.sender, address(0), value);\n    }\n679-function_definition-99-105", method="burnCoins(uint256 value)", type_label=function_definition];
687 [label="99_ require(balances[msg.sender] >= value);\n687-expression_statement-100-100", method="burnCoins(uint256 value)", type_label=expression_statement];
698 [label="100_ require(_totalSupply >= value);\n698-expression_statement-101-101", method="burnCoins(uint256 value)", type_label=expression_statement];
705 [label="101_ balances[msg.sender] -= value;\n705-expression_statement-102-102", method="burnCoins(uint256 value)", type_label=expression_statement];
713 [label="102_ _totalSupply -= value;\n713-expression_statement-103-103", method="burnCoins(uint256 value)", type_label=expression_statement];
729 [label="105_ function bug_unchk_send31() payable public{\n      msg.sender.transfer(1 ether);}\n729-function_definition-106-107", method="bug_unchk_send31()", type_label=function_definition];
734 [label="106_ msg.sender.transfer(1 ether);\n734-expression_statement-107-107", method="bug_unchk_send31()", type_label=expression_statement];
744 [label="107_ function toWei(uint256 value) private view returns (uint256) {\n        return value * (10 ** uint256(decimals));\n    }\n744-function_definition-108-110", method="toWei(uint256 value)", type_label=function_definition];
757 [label="108_ return value * (10 ** uint256(decimals));\n757-return-109-109", method="toWei(uint256 value)", type_label=return];
766 [label="110_ function bug_unchk_send13() payable public{\n      msg.sender.transfer(1 ether);}\n766-function_definition-111-112", method="bug_unchk_send13()", type_label=function_definition];
771 [label="111_ msg.sender.transfer(1 ether);\n771-expression_statement-112-112", method="bug_unchk_send13()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
70 -> 75  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
92 -> 97  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
135 -> 140  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
154 -> 159  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
173 -> 178  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
192 -> 197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
211 -> 216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
232 -> 237  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
252 -> 257  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
272 -> 277  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
292 -> 297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
307 -> 312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
315 -> 324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
328 -> 334  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
334 -> 338  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
338 -> 342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
342 -> 346  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
346 -> 353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
353 -> 360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
360 -> 367  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
367 -> 374  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
374 -> 385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
403 -> 410  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
410 -> 417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
417 -> 424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
433 -> 438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
448 -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
457 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
459 -> 464  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
474 -> 487  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
487 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
491 -> 496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
506 -> 523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
523 -> 532  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
532 -> 539  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
539 -> 550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
550 -> 563  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
563 -> 570  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
563 -> 1339  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
570 -> 577  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
577 -> 590  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
577 -> 1353  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1353 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
590 -> 1353  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
597 -> 610  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
597 -> 1373  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1373 -> 617  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
610 -> 1373  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
617 -> 630  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
617 -> 1393  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1393 -> 637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
630 -> 1393  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
637 -> 645  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
664 -> 669  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
679 -> 687  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 698  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
698 -> 705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
705 -> 713  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
729 -> 734  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
744 -> 757  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
757 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
766 -> 771  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
