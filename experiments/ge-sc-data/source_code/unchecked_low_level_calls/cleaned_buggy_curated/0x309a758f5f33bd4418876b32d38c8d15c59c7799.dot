digraph  {
13 [label="2_ mul\n13-function_definition-3-10", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", type_label=if];
1384 [label="3_ end_if", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", type_label=return];
56 [label="10_ div\n56-function_definition-11-15", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", type_label=return];
90 [label="15_ sub\n90-function_definition-16-20", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", type_label=return];
124 [label="20_ add\n124-function_definition-21-25", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", type_label=return];
158 [label="25_ mod\n158-function_definition-26-29", type_label=function_definition];
175 [label="26_ require(b != 0);\n175-expression_statement-27-27", type_label=expression_statement];
182 [label="27_ return a % b;\n182-return-28-28", type_label=return];
189 [label="31_ transfer\n189-function_definition-32-32", type_label=function_definition];
204 [label="32_ approve\n204-function_definition-33-33", type_label=function_definition];
219 [label="33_ transferFrom\n219-function_definition-34-34", type_label=function_definition];
238 [label="34_ totalSupply\n238-function_definition-35-35", type_label=function_definition];
246 [label="35_ balanceOf\n246-function_definition-36-36", type_label=function_definition];
258 [label="36_ allowance\n258-function_definition-37-37", type_label=function_definition];
313 [label="42_ mapping (address => uint256) private _balances;\n313-new_variable-43-43", type_label=new_variable];
320 [label="43_ mapping (address => mapping (address => uint256)) private _allowed;\n320-new_variable-44-44", type_label=new_variable];
329 [label="44_ uint256 private _totalSupply;\n329-new_variable-45-45", type_label=new_variable];
334 [label="45_ totalSupply\n334-function_definition-46-48", type_label=function_definition];
343 [label="46_ return _totalSupply;\n343-return-47-47", type_label=return];
345 [label="48_ balanceOf\n345-function_definition-49-51", type_label=function_definition];
358 [label="49_ return _balances[owner];\n358-return-50-50", type_label=return];
362 [label="51_ allowance\n362-function_definition-52-54", type_label=function_definition];
379 [label="52_ return _allowed[owner][spender];\n379-return-53-53", type_label=return];
385 [label="54_ transfer\n385-function_definition-55-58", type_label=function_definition];
401 [label="55_ _transfer(msg.sender, to, value);\n401-expression_statement-56-56", type_label=expression_statement];
412 [label="56_ return true;\n412-return-57-57", type_label=return];
415 [label="58_ approve\n415-function_definition-59-62", type_label=function_definition];
431 [label="59_ _approve(msg.sender, spender, value);\n431-expression_statement-60-60", type_label=expression_statement];
442 [label="60_ return true;\n442-return-61-61", type_label=return];
445 [label="62_ transferFrom\n445-function_definition-63-67", type_label=function_definition];
465 [label="63_ _transfer(from, to, value);\n465-expression_statement-64-64", type_label=expression_statement];
474 [label="64_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n474-expression_statement-65-65", type_label=expression_statement];
496 [label="65_ return true;\n496-return-66-66", type_label=return];
499 [label="67_ increaseAllowance\n499-function_definition-68-71", type_label=function_definition];
515 [label="68_ _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n515-expression_statement-69-69", type_label=expression_statement];
537 [label="69_ return true;\n537-return-70-70", type_label=return];
540 [label="71_ decreaseAllowance\n540-function_definition-72-75", type_label=function_definition];
556 [label="72_ _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n556-expression_statement-73-73", type_label=expression_statement];
578 [label="73_ return true;\n578-return-74-74", type_label=return];
581 [label="75_ _transfer\n581-function_definition-76-81", type_label=function_definition];
597 [label="76_ require(to != address(0));\n597-expression_statement-77-77", type_label=expression_statement];
606 [label="77_ _balances[from] = _balances[from].sub(value);\n606-expression_statement-78-78", type_label=expression_statement];
619 [label="78_ _balances[to] = _balances[to].add(value);\n619-expression_statement-79-79", type_label=expression_statement];
640 [label="81_ _mint\n640-function_definition-82-87", type_label=function_definition];
652 [label="82_ require(account != address(0));\n652-expression_statement-83-83", type_label=expression_statement];
661 [label="83_ _totalSupply = _totalSupply.add(value);\n661-expression_statement-84-84", type_label=expression_statement];
670 [label="84_ _balances[account] = _balances[account].add(value);\n670-expression_statement-85-85", type_label=expression_statement];
693 [label="87_ _burn\n693-function_definition-88-93", type_label=function_definition];
705 [label="88_ require(account != address(0));\n705-expression_statement-89-89", type_label=expression_statement];
714 [label="89_ _totalSupply = _totalSupply.sub(value);\n714-expression_statement-90-90", type_label=expression_statement];
723 [label="90_ _balances[account] = _balances[account].sub(value);\n723-expression_statement-91-91", type_label=expression_statement];
746 [label="93_ _approve\n746-function_definition-94-99", type_label=function_definition];
762 [label="94_ require(spender != address(0));\n762-expression_statement-95-95", type_label=expression_statement];
771 [label="95_ require(owner != address(0));\n771-expression_statement-96-96", type_label=expression_statement];
780 [label="96_ _allowed[owner][spender] = value;\n780-expression_statement-97-97", type_label=expression_statement];
796 [label="99_ _burnFrom\n796-function_definition-100-103", type_label=function_definition];
808 [label="100_ _burn(account, value);\n808-expression_statement-101-101", type_label=expression_statement];
815 [label="101_ _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\n815-expression_statement-102-102", type_label=expression_statement];
840 [label="105_ address private _owner;\n840-new_variable-106-106", type_label=new_variable];
845 [label="106_ bool private _paused;\n845-new_variable-107-107", type_label=new_variable];
872 [label="110_ mapping(address => bool) private owners;\n872-new_variable-111-111", type_label=new_variable];
881 [label="112_ setOwner(msg.sender);\n881-expression_statement-113-113", type_label=expression_statement];
888 [label="114_ modifier onlyOwner() {\n        require(owners[msg.sender]);\n        _;\n    }\n888-expression_statement-115-118", type_label=expression_statement];
891 [label="115_ require(owners[msg.sender]);\n891-expression_statement-116-116", type_label=expression_statement];
900 [label="116_ _;\n900-expression_statement-117-117", type_label=expression_statement];
902 [label="118_ setOwner\n902-function_definition-119-125", type_label=function_definition];
914 [label="119_ if\n914-if-120-124", type_label=if];
2268 [label="119_ end_if", type_label=end_if];
920 [label="120_ owners[addr] = true;\n920-expression_statement-121-121", type_label=expression_statement];
927 [label="121_ _owner = addr;\n927-expression_statement-122-122", type_label=expression_statement];
931 [label="122_ return true;\n931-return-123-123", type_label=return];
934 [label="125_ changeOwner\n934-function_definition-126-132", type_label=function_definition];
940 [label="125_ onlyOwner\n940-expression_statement-126-126", type_label=expression_statement];
948 [label="126_ require (!owners[newOwner]);\n948-expression_statement-127-127", type_label=expression_statement];
956 [label="127_ owners[newOwner];\n956-expression_statement-128-128", type_label=expression_statement];
960 [label="128_ _owner = newOwner;\n960-expression_statement-129-129", type_label=expression_statement];
970 [label="130_ return true;\n970-return-131-131", type_label=return];
973 [label="132_ Owner\n973-function_definition-133-135", type_label=function_definition];
982 [label="133_ return _owner;\n982-return-134-134", type_label=return];
984 [label="135_ paused\n984-function_definition-136-138", type_label=function_definition];
993 [label="136_ return _paused;\n993-return-137-137", type_label=return];
995 [label="138_ modifier whenNotPaused() {\n    require(!_paused);\n    _;\n    }\n995-expression_statement-139-142", type_label=expression_statement];
998 [label="139_ require(!_paused);\n998-expression_statement-140-140", type_label=expression_statement];
1004 [label="140_ _;\n1004-expression_statement-141-141", type_label=expression_statement];
1006 [label="142_ modifier whenPaused() {\n    require(_paused);\n    _;\n    }\n1006-expression_statement-143-146", type_label=expression_statement];
1009 [label="143_ require(_paused);\n1009-expression_statement-144-144", type_label=expression_statement];
1014 [label="144_ _;\n1014-expression_statement-145-145", type_label=expression_statement];
1016 [label="146_ pause\n1016-function_definition-147-150", type_label=function_definition];
1019 [label="146_ onlyOwner\n1019-expression_statement-147-147", type_label=expression_statement];
1021 [label="146_ whenNotPaused\n1021-expression_statement-147-147", type_label=expression_statement];
1024 [label="147_ _paused = true;\n1024-expression_statement-148-148", type_label=expression_statement];
1035 [label="150_ unpause\n1035-function_definition-151-154", type_label=function_definition];
1038 [label="150_ onlyOwner\n1038-expression_statement-151-151", type_label=expression_statement];
1040 [label="150_ whenPaused\n1040-expression_statement-151-151", type_label=expression_statement];
1043 [label="151_ _paused = false;\n1043-expression_statement-152-152", type_label=expression_statement];
1068 [label="157_ string private _name = \"Lobefy Token\";\n1068-new_variable-158-158", type_label=new_variable];
1075 [label="158_ string private _symbol = \"CRWD\";\n1075-new_variable-159-159", type_label=new_variable];
1082 [label="159_ uint256 private _decimals = 18;\n1082-new_variable-160-160", type_label=new_variable];
1088 [label="160_ address private team = 0xDA19316953D19f5f8C6361d68C6D0078c06285d3;\n1088-new_variable-161-161", type_label=new_variable];
1094 [label="161_ uint256 private team1Balance = 50 * (10 ** 6) * (10 ** 18);\n1094-new_variable-162-162", type_label=new_variable];
1112 [label="163_ mint(team, team1Balance);\n1112-expression_statement-164-164", type_label=expression_statement];
1119 [label="165_ name\n1119-function_definition-166-168", type_label=function_definition];
1128 [label="166_ return _name;\n1128-return-167-167", type_label=return];
1130 [label="168_ symbol\n1130-function_definition-169-171", type_label=function_definition];
1139 [label="169_ return _symbol;\n1139-return-170-170", type_label=return];
1141 [label="171_ decimals\n1141-function_definition-172-174", type_label=function_definition];
1150 [label="172_ return _decimals;\n1150-return-173-173", type_label=return];
1152 [label="174_ burn\n1152-function_definition-175-177", type_label=function_definition];
1160 [label="175_ _burn(msg.sender, value);\n1160-expression_statement-176-176", type_label=expression_statement];
1169 [label="177_ burnFrom\n1169-function_definition-178-180", type_label=function_definition];
1181 [label="178_ _burnFrom(from, value);\n1181-expression_statement-179-179", type_label=expression_statement];
1188 [label="180_ mint\n1188-function_definition-181-184", type_label=function_definition];
1199 [label="180_ onlyOwner\n1199-expression_statement-181-181", type_label=expression_statement];
1206 [label="181_ _mint(to, value);\n1206-expression_statement-182-182", type_label=expression_statement];
1213 [label="182_ return true;\n1213-return-183-183", type_label=return];
1216 [label="184_ transfer\n1216-function_definition-185-187", type_label=function_definition];
1227 [label="184_ whenNotPaused\n1227-expression_statement-185-185", type_label=expression_statement];
1234 [label="185_ return super.transfer(to, value);\n1234-return-186-186", type_label=return];
1243 [label="187_ transferFrom\n1243-function_definition-188-190", type_label=function_definition];
1258 [label="187_ whenNotPaused\n1258-expression_statement-188-188", type_label=expression_statement];
1265 [label="188_ return super.transferFrom(from, to, value);\n1265-return-189-189", type_label=return];
1276 [label="190_ approve\n1276-function_definition-191-193", type_label=function_definition];
1287 [label="190_ whenNotPaused\n1287-expression_statement-191-191", type_label=expression_statement];
1294 [label="191_ return super.approve(spender, value);\n1294-return-192-192", type_label=return];
1303 [label="193_ increaseAllowance\n1303-function_definition-194-196", type_label=function_definition];
1314 [label="193_ whenNotPaused\n1314-expression_statement-194-194", type_label=expression_statement];
1322 [label="194_ return super.increaseAllowance(spender, addedValue);\n1322-return-195-195", type_label=return];
1331 [label="196_ decreaseAllowance\n1331-function_definition-197-199", type_label=function_definition];
1342 [label="196_ whenNotPaused\n1342-expression_statement-197-197", type_label=expression_statement];
1350 [label="197_ return super.decreaseAllowance(spender, subtractedValue);\n1350-return-198-198", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 1384  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1384 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 1384  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
313 -> 320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
334 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
343 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
345 -> 358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
358 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
362 -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
379 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
385 -> 401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
415 -> 431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
431 -> 442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
442 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
445 -> 465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
465 -> 474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
474 -> 496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
496 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
499 -> 515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 537  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
537 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
540 -> 556  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
556 -> 578  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
578 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
581 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
597 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
606 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
640 -> 652  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
652 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 670  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
693 -> 705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
705 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 723  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
746 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
762 -> 771  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
771 -> 780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
796 -> 808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
808 -> 815  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
840 -> 845  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
891 -> 900  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
902 -> 914  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
914 -> 920  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
914 -> 2268  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2268 -> 934  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
920 -> 927  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
927 -> 931  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
931 -> 2268  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
931 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
934 -> 948  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
948 -> 956  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
956 -> 960  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
970 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
973 -> 982  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
982 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
984 -> 993  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
993 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
995 -> 1006  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
998 -> 1004  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1009 -> 1014  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1016 -> 1024  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1019 -> 1021  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1035 -> 1043  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1038 -> 1040  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1068 -> 1075  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1075 -> 1082  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1082 -> 1088  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1088 -> 1094  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1119 -> 1128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1128 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1130 -> 1139  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1139 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1141 -> 1150  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1150 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1152 -> 1160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1169 -> 1181  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1188 -> 1206  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1206 -> 1213  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1213 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1216 -> 1234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1234 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1243 -> 1265  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1265 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1276 -> 1294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1294 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1303 -> 1322  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1322 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1331 -> 1350  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1350 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
