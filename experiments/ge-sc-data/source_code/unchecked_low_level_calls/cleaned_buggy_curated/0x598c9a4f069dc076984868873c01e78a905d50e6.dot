digraph  {
13 [label="2_ mul\n13-function_definition-3-10", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", type_label=if];
1051 [label="3_ end_if", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", type_label=return];
56 [label="10_ div\n56-function_definition-11-15", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", type_label=return];
90 [label="15_ sub\n90-function_definition-16-20", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", type_label=return];
124 [label="20_ add\n124-function_definition-21-25", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", type_label=return];
158 [label="25_ mod\n158-function_definition-26-29", type_label=function_definition];
175 [label="26_ require(b != 0);\n175-expression_statement-27-27", type_label=expression_statement];
182 [label="27_ return a % b;\n182-return-28-28", type_label=return];
189 [label="31_ totalSupply\n189-function_definition-32-32", type_label=function_definition];
197 [label="32_ balanceOf\n197-function_definition-33-33", type_label=function_definition];
209 [label="33_ allowance\n209-function_definition-34-34", type_label=function_definition];
225 [label="34_ transfer\n225-function_definition-35-35", type_label=function_definition];
240 [label="35_ approve\n240-function_definition-36-36", type_label=function_definition];
255 [label="36_ transferFrom\n255-function_definition-37-37", type_label=function_definition];
313 [label="42_ mapping (address => uint256) private _balances;\n313-new_variable-43-43", type_label=new_variable];
320 [label="43_ mapping (address => mapping (address => uint256)) private _allowed;\n320-new_variable-44-44", type_label=new_variable];
329 [label="44_ uint256 private _totalSupply;\n329-new_variable-45-45", type_label=new_variable];
334 [label="45_ string private _name;\n334-new_variable-46-46", type_label=new_variable];
339 [label="46_ string private _symbol;\n339-new_variable-47-47", type_label=new_variable];
344 [label="47_ uint8 private _decimals;\n344-new_variable-48-48", type_label=new_variable];
363 [label="49_ _name = name;\n363-expression_statement-50-50", type_label=expression_statement];
367 [label="50_ _symbol = symbol;\n367-expression_statement-51-51", type_label=expression_statement];
371 [label="51_ _decimals = decimals;\n371-expression_statement-52-52", type_label=expression_statement];
375 [label="53_ name\n375-function_definition-54-56", type_label=function_definition];
384 [label="54_ return _name;\n384-return-55-55", type_label=return];
386 [label="56_ symbol\n386-function_definition-57-59", type_label=function_definition];
395 [label="57_ return _symbol;\n395-return-58-58", type_label=return];
397 [label="59_ decimals\n397-function_definition-60-62", type_label=function_definition];
406 [label="60_ return _decimals;\n406-return-61-61", type_label=return];
408 [label="62_ totalSupply\n408-function_definition-63-65", type_label=function_definition];
417 [label="63_ return _totalSupply;\n417-return-64-64", type_label=return];
419 [label="65_ balanceOf\n419-function_definition-66-68", type_label=function_definition];
432 [label="66_ return _balances[owner];\n432-return-67-67", type_label=return];
436 [label="68_ allowance\n436-function_definition-69-71", type_label=function_definition];
453 [label="69_ return _allowed[owner][spender];\n453-return-70-70", type_label=return];
459 [label="71_ transfer\n459-function_definition-72-75", type_label=function_definition];
475 [label="72_ _transfer(msg.sender, to, value);\n475-expression_statement-73-73", type_label=expression_statement];
486 [label="73_ return true;\n486-return-74-74", type_label=return];
489 [label="75_ burn\n489-function_definition-76-78", type_label=function_definition];
497 [label="76_ _burn(msg.sender, value);\n497-expression_statement-77-77", type_label=expression_statement];
506 [label="78_ burnFrom\n506-function_definition-79-81", type_label=function_definition];
518 [label="79_ _burnFrom(from, value);\n518-expression_statement-80-80", type_label=expression_statement];
525 [label="81_ approve\n525-function_definition-82-87", type_label=function_definition];
541 [label="82_ require(spender != address(0));\n541-expression_statement-83-83", type_label=expression_statement];
550 [label="83_ _allowed[msg.sender][spender] = value;\n550-expression_statement-84-84", type_label=expression_statement];
570 [label="85_ return true;\n570-return-86-86", type_label=return];
573 [label="87_ transferFrom\n573-function_definition-88-93", type_label=function_definition];
593 [label="88_ _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n593-expression_statement-89-89", type_label=expression_statement];
614 [label="89_ _transfer(from, to, value);\n614-expression_statement-90-90", type_label=expression_statement];
639 [label="91_ return true;\n639-return-92-92", type_label=return];
642 [label="93_ increaseAllowance\n642-function_definition-94-99", type_label=function_definition];
658 [label="94_ require(spender != address(0));\n658-expression_statement-95-95", type_label=expression_statement];
667 [label="95_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].add(addedValue);\n667-expression_statement-96-96", type_label=expression_statement];
704 [label="97_ return true;\n704-return-98-98", type_label=return];
707 [label="99_ decreaseAllowance\n707-function_definition-100-105", type_label=function_definition];
723 [label="100_ require(spender != address(0));\n723-expression_statement-101-101", type_label=expression_statement];
732 [label="101_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].sub(subtractedValue);\n732-expression_statement-102-102", type_label=expression_statement];
769 [label="103_ return true;\n769-return-104-104", type_label=return];
772 [label="105_ _transfer\n772-function_definition-106-111", type_label=function_definition];
788 [label="106_ require(to != address(0));\n788-expression_statement-107-107", type_label=expression_statement];
797 [label="107_ _balances[from] = _balances[from].sub(value);\n797-expression_statement-108-108", type_label=expression_statement];
810 [label="108_ _balances[to] = _balances[to].add(value);\n810-expression_statement-109-109", type_label=expression_statement];
831 [label="111_ _mint\n831-function_definition-112-117", type_label=function_definition];
843 [label="112_ require(account != address(0));\n843-expression_statement-113-113", type_label=expression_statement];
852 [label="113_ _totalSupply = _totalSupply.add(value);\n852-expression_statement-114-114", type_label=expression_statement];
861 [label="114_ _balances[account] = _balances[account].add(value);\n861-expression_statement-115-115", type_label=expression_statement];
884 [label="117_ _burn\n884-function_definition-118-123", type_label=function_definition];
896 [label="118_ require(account != address(0));\n896-expression_statement-119-119", type_label=expression_statement];
905 [label="119_ _totalSupply = _totalSupply.sub(value);\n905-expression_statement-120-120", type_label=expression_statement];
914 [label="120_ _balances[account] = _balances[account].sub(value);\n914-expression_statement-121-121", type_label=expression_statement];
937 [label="123_ _burnFrom\n937-function_definition-124-128", type_label=function_definition];
949 [label="124_ _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(value);\n949-expression_statement-125-125", type_label=expression_statement];
970 [label="125_ _burn(account, value);\n970-expression_statement-126-126", type_label=expression_statement];
999 [label="130_ uint256 public constant INITIAL_SUPPLY = 20000000000000000;\n999-new_variable-131-131", type_label=new_variable];
1006 [label="131_ ERC20(\"Ledgerium\", \"XLG\", 8)\n1006-expression_statement-132-132", type_label=expression_statement];
1017 [label="132_ _mint(msg.sender, INITIAL_SUPPLY);\n1017-expression_statement-133-133", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 1051  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1051 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 1051  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
313 -> 320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
329 -> 334  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
334 -> 339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
339 -> 344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
363 -> 367  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
367 -> 371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
375 -> 384  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
384 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
386 -> 395  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
395 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
397 -> 406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
406 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
408 -> 417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
417 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
419 -> 432  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
432 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
436 -> 453  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
453 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
459 -> 475  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
475 -> 486  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
486 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
489 -> 497  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
506 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
525 -> 541  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
541 -> 550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
570 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
573 -> 593  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
593 -> 614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
639 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
642 -> 658  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
658 -> 667  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
704 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
707 -> 723  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
723 -> 732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
769 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
772 -> 788  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
788 -> 797  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
797 -> 810  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
831 -> 843  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
843 -> 852  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
852 -> 861  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
884 -> 896  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
896 -> 905  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
905 -> 914  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
937 -> 949  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
949 -> 970  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
