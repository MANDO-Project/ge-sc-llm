digraph  {
13 [label="2_ transfer\n13-function_definition-3-3", type_label=function_definition];
28 [label="3_ approve\n28-function_definition-4-4", type_label=function_definition];
43 [label="4_ transferFrom\n43-function_definition-5-5", type_label=function_definition];
62 [label="5_ totalSupply\n62-function_definition-6-6", type_label=function_definition];
70 [label="6_ balanceOf\n70-function_definition-7-7", type_label=function_definition];
82 [label="7_ allowance\n82-function_definition-8-8", type_label=function_definition];
129 [label="12_ mul\n129-function_definition-13-20", type_label=function_definition];
146 [label="13_ if_a == 0\n146-if-14-16", type_label=if];
1799 [label="13_ end_if", type_label=end_if];
151 [label="14_ return 0;\n151-return-15-15", type_label=return];
153 [label="16_ uint256 c = a * b;\n153-new_variable-17-17", type_label=new_variable];
161 [label="17_ require(c / a == b);\n161-expression_statement-18-18", type_label=expression_statement];
170 [label="18_ return c;\n170-return-19-19", type_label=return];
172 [label="20_ div\n172-function_definition-21-25", type_label=function_definition];
189 [label="21_ require(b > 0);\n189-expression_statement-22-22", type_label=expression_statement];
196 [label="22_ uint256 c = a / b;\n196-new_variable-23-23", type_label=new_variable];
204 [label="23_ return c;\n204-return-24-24", type_label=return];
206 [label="25_ sub\n206-function_definition-26-30", type_label=function_definition];
223 [label="26_ require(b <= a);\n223-expression_statement-27-27", type_label=expression_statement];
230 [label="27_ uint256 c = a - b;\n230-new_variable-28-28", type_label=new_variable];
238 [label="28_ return c;\n238-return-29-29", type_label=return];
240 [label="30_ add\n240-function_definition-31-35", type_label=function_definition];
257 [label="31_ uint256 c = a + b;\n257-new_variable-32-32", type_label=new_variable];
265 [label="32_ require(c >= a);\n265-expression_statement-33-33", type_label=expression_statement];
272 [label="33_ return c;\n272-return-34-34", type_label=return];
274 [label="35_ mod\n274-function_definition-36-39", type_label=function_definition];
291 [label="36_ require(b != 0);\n291-expression_statement-37-37", type_label=expression_statement];
298 [label="37_ return a % b;\n298-return-38-38", type_label=return];
313 [label="42_ mapping (address => uint256) private _balances;\n313-new_variable-43-43", type_label=new_variable];
320 [label="43_ mapping (address => mapping (address => uint256)) private _allowed;\n320-new_variable-44-44", type_label=new_variable];
329 [label="44_ uint256 private _totalSupply;\n329-new_variable-45-45", type_label=new_variable];
334 [label="45_ totalSupply\n334-function_definition-46-48", type_label=function_definition];
343 [label="46_ return _totalSupply;\n343-return-47-47", type_label=return];
345 [label="48_ balanceOf\n345-function_definition-49-51", type_label=function_definition];
358 [label="49_ return _balances[owner];\n358-return-50-50", type_label=return];
362 [label="51_ allowance\n362-function_definition-52-54", type_label=function_definition];
379 [label="52_ return _allowed[owner][spender];\n379-return-53-53", type_label=return];
385 [label="54_ transfer\n385-function_definition-55-58", type_label=function_definition];
401 [label="55_ _transfer(msg.sender, to, value);\n401-expression_statement-56-56", type_label=expression_statement];
412 [label="56_ return true;\n412-return-57-57", type_label=return];
415 [label="58_ approve\n415-function_definition-59-62", type_label=function_definition];
431 [label="59_ _approve(msg.sender, spender, value);\n431-expression_statement-60-60", type_label=expression_statement];
442 [label="60_ return true;\n442-return-61-61", type_label=return];
445 [label="62_ transferFrom\n445-function_definition-63-67", type_label=function_definition];
465 [label="63_ _transfer(from, to, value);\n465-expression_statement-64-64", type_label=expression_statement];
474 [label="64_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n474-expression_statement-65-65", type_label=expression_statement];
496 [label="65_ return true;\n496-return-66-66", type_label=return];
499 [label="67_ increaseAllowance\n499-function_definition-68-71", type_label=function_definition];
515 [label="68_ _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n515-expression_statement-69-69", type_label=expression_statement];
537 [label="69_ return true;\n537-return-70-70", type_label=return];
540 [label="71_ decreaseAllowance\n540-function_definition-72-75", type_label=function_definition];
556 [label="72_ _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n556-expression_statement-73-73", type_label=expression_statement];
578 [label="73_ return true;\n578-return-74-74", type_label=return];
581 [label="75_ _transfer\n581-function_definition-76-81", type_label=function_definition];
597 [label="76_ require(to != address(0));\n597-expression_statement-77-77", type_label=expression_statement];
606 [label="77_ _balances[from] = _balances[from].sub(value);\n606-expression_statement-78-78", type_label=expression_statement];
619 [label="78_ _balances[to] = _balances[to].add(value);\n619-expression_statement-79-79", type_label=expression_statement];
640 [label="81_ _mint\n640-function_definition-82-87", type_label=function_definition];
652 [label="82_ require(account != address(0));\n652-expression_statement-83-83", type_label=expression_statement];
661 [label="83_ _totalSupply = _totalSupply.add(value);\n661-expression_statement-84-84", type_label=expression_statement];
670 [label="84_ _balances[account] = _balances[account].add(value);\n670-expression_statement-85-85", type_label=expression_statement];
693 [label="87_ _burn\n693-function_definition-88-93", type_label=function_definition];
705 [label="88_ require(account != address(0));\n705-expression_statement-89-89", type_label=expression_statement];
714 [label="89_ _totalSupply = _totalSupply.sub(value);\n714-expression_statement-90-90", type_label=expression_statement];
723 [label="90_ _balances[account] = _balances[account].sub(value);\n723-expression_statement-91-91", type_label=expression_statement];
746 [label="93_ _approve\n746-function_definition-94-99", type_label=function_definition];
762 [label="94_ require(spender != address(0));\n762-expression_statement-95-95", type_label=expression_statement];
771 [label="95_ require(owner != address(0));\n771-expression_statement-96-96", type_label=expression_statement];
780 [label="96_ _allowed[owner][spender] = value;\n780-expression_statement-97-97", type_label=expression_statement];
796 [label="99_ _burnFrom\n796-function_definition-100-103", type_label=function_definition];
808 [label="100_ _burn(account, value);\n808-expression_statement-101-101", type_label=expression_statement];
815 [label="101_ _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\n815-expression_statement-102-102", type_label=expression_statement];
843 [label="105_ burn\n843-function_definition-106-108", type_label=function_definition];
851 [label="106_ _burn(msg.sender, value);\n851-expression_statement-107-107", type_label=expression_statement];
860 [label="108_ burnFrom\n860-function_definition-109-111", type_label=function_definition];
872 [label="109_ _burnFrom(from, value);\n872-expression_statement-110-110", type_label=expression_statement];
882 [label="113_ struct Role {\n        mapping (address => bool) bearer;\n    }\n882-expression_statement-114-116", type_label=expression_statement];
890 [label="116_ add\n890-function_definition-117-121", type_label=function_definition];
903 [label="117_ require(account != address(0));\n903-expression_statement-118-118", type_label=expression_statement];
912 [label="118_ require(!has(role, account));\n912-expression_statement-119-119", type_label=expression_statement];
923 [label="119_ role.bearer[account] = true;\n923-expression_statement-120-120", type_label=expression_statement];
932 [label="121_ remove\n932-function_definition-122-126", type_label=function_definition];
945 [label="122_ require(account != address(0));\n945-expression_statement-123-123", type_label=expression_statement];
954 [label="123_ require(has(role, account));\n954-expression_statement-124-124", type_label=expression_statement];
964 [label="124_ role.bearer[account] = false;\n964-expression_statement-125-125", type_label=expression_statement];
973 [label="126_ has\n973-function_definition-127-130", type_label=function_definition];
991 [label="127_ require(account != address(0));\n991-expression_statement-128-128", type_label=expression_statement];
1000 [label="128_ return role.bearer[account];\n1000-return-129-129", type_label=return];
1028 [label="135_ Roles.Role private _pausers;\n1028-new_variable-136-136", type_label=new_variable];
1037 [label="137_ _addPauser(msg.sender);\n1037-expression_statement-138-138", type_label=expression_statement];
1044 [label="139_ modifier onlyPauser() {\n        require(isPauser(msg.sender));\n        _;\n    }\n1044-expression_statement-140-143", type_label=expression_statement];
1047 [label="140_ require(isPauser(msg.sender));\n1047-expression_statement-141-141", type_label=expression_statement];
1057 [label="141_ _;\n1057-expression_statement-142-142", type_label=expression_statement];
1059 [label="143_ isPauser\n1059-function_definition-144-146", type_label=function_definition];
1072 [label="144_ return _pausers.has(account);\n1072-return-145-145", type_label=return];
1079 [label="146_ addPauser\n1079-function_definition-147-149", type_label=function_definition];
1086 [label="146_ onlyPauser\n1086-expression_statement-147-147", type_label=expression_statement];
1089 [label="147_ _addPauser(account);\n1089-expression_statement-148-148", type_label=expression_statement];
1094 [label="149_ renouncePauser\n1094-function_definition-150-152", type_label=function_definition];
1098 [label="150_ _removePauser(msg.sender);\n1098-expression_statement-151-151", type_label=expression_statement];
1105 [label="152_ _addPauser\n1105-function_definition-153-156", type_label=function_definition];
1113 [label="153_ _pausers.add(account);\n1113-expression_statement-154-154", type_label=expression_statement];
1124 [label="156_ _removePauser\n1124-function_definition-157-160", type_label=function_definition];
1132 [label="157_ _pausers.remove(account);\n1132-expression_statement-158-158", type_label=expression_statement];
1161 [label="164_ bool private _paused;\n1161-new_variable-165-165", type_label=new_variable];
1168 [label="166_ _paused = false;\n1168-expression_statement-167-167", type_label=expression_statement];
1173 [label="168_ paused\n1173-function_definition-169-171", type_label=function_definition];
1182 [label="169_ return _paused;\n1182-return-170-170", type_label=return];
1184 [label="171_ modifier whenNotPaused() {\n        require(!_paused);\n        _;\n    }\n1184-expression_statement-172-175", type_label=expression_statement];
1187 [label="172_ require(!_paused);\n1187-expression_statement-173-173", type_label=expression_statement];
1193 [label="173_ _;\n1193-expression_statement-174-174", type_label=expression_statement];
1195 [label="175_ modifier whenPaused() {\n        require(_paused);\n        _;\n    }\n1195-expression_statement-176-179", type_label=expression_statement];
1198 [label="176_ require(_paused);\n1198-expression_statement-177-177", type_label=expression_statement];
1203 [label="177_ _;\n1203-expression_statement-178-178", type_label=expression_statement];
1205 [label="179_ pause\n1205-function_definition-180-183", type_label=function_definition];
1208 [label="179_ onlyPauser\n1208-expression_statement-180-180", type_label=expression_statement];
1210 [label="179_ whenNotPaused\n1210-expression_statement-180-180", type_label=expression_statement];
1213 [label="180_ _paused = true;\n1213-expression_statement-181-181", type_label=expression_statement];
1224 [label="183_ unpause\n1224-function_definition-184-187", type_label=function_definition];
1227 [label="183_ onlyPauser\n1227-expression_statement-184-184", type_label=expression_statement];
1229 [label="183_ whenPaused\n1229-expression_statement-184-184", type_label=expression_statement];
1232 [label="184_ _paused = false;\n1232-expression_statement-185-185", type_label=expression_statement];
1252 [label="189_ transfer\n1252-function_definition-190-192", type_label=function_definition];
1263 [label="189_ whenNotPaused\n1263-expression_statement-190-190", type_label=expression_statement];
1270 [label="190_ return super.transfer(to, value);\n1270-return-191-191", type_label=return];
1279 [label="192_ transferFrom\n1279-function_definition-193-195", type_label=function_definition];
1294 [label="192_ whenNotPaused\n1294-expression_statement-193-193", type_label=expression_statement];
1301 [label="193_ return super.transferFrom(from, to, value);\n1301-return-194-194", type_label=return];
1312 [label="195_ approve\n1312-function_definition-196-198", type_label=function_definition];
1323 [label="195_ whenNotPaused\n1323-expression_statement-196-196", type_label=expression_statement];
1330 [label="196_ return super.approve(spender, value);\n1330-return-197-197", type_label=return];
1339 [label="198_ increaseAllowance\n1339-function_definition-199-201", type_label=function_definition];
1350 [label="198_ whenNotPaused\n1350-expression_statement-199-199", type_label=expression_statement];
1358 [label="199_ return super.increaseAllowance(spender, addedValue);\n1358-return-200-200", type_label=return];
1367 [label="201_ decreaseAllowance\n1367-function_definition-202-204", type_label=function_definition];
1378 [label="201_ whenNotPaused\n1378-expression_statement-202-202", type_label=expression_statement];
1386 [label="202_ return super.decreaseAllowance(spender, subtractedValue);\n1386-return-203-203", type_label=return];
1417 [label="209_ Roles.Role private _minters;\n1417-new_variable-210-210", type_label=new_variable];
1426 [label="211_ _addMinter(msg.sender);\n1426-expression_statement-212-212", type_label=expression_statement];
1433 [label="213_ modifier onlyMinter() {\n        require(isMinter(msg.sender));\n        _;\n    }\n1433-expression_statement-214-217", type_label=expression_statement];
1436 [label="214_ require(isMinter(msg.sender));\n1436-expression_statement-215-215", type_label=expression_statement];
1446 [label="215_ _;\n1446-expression_statement-216-216", type_label=expression_statement];
1448 [label="217_ isMinter\n1448-function_definition-218-220", type_label=function_definition];
1461 [label="218_ return _minters.has(account);\n1461-return-219-219", type_label=return];
1468 [label="220_ addMinter\n1468-function_definition-221-223", type_label=function_definition];
1475 [label="220_ onlyMinter\n1475-expression_statement-221-221", type_label=expression_statement];
1478 [label="221_ _addMinter(account);\n1478-expression_statement-222-222", type_label=expression_statement];
1483 [label="223_ renounceMinter\n1483-function_definition-224-226", type_label=function_definition];
1487 [label="224_ _removeMinter(msg.sender);\n1487-expression_statement-225-225", type_label=expression_statement];
1494 [label="226_ _addMinter\n1494-function_definition-227-230", type_label=function_definition];
1502 [label="227_ _minters.add(account);\n1502-expression_statement-228-228", type_label=expression_statement];
1513 [label="230_ _removeMinter\n1513-function_definition-231-234", type_label=function_definition];
1521 [label="231_ _minters.remove(account);\n1521-expression_statement-232-232", type_label=expression_statement];
1541 [label="236_ mint\n1541-function_definition-237-240", type_label=function_definition];
1552 [label="236_ onlyMinter\n1552-expression_statement-237-237", type_label=expression_statement];
1559 [label="237_ _mint(to, value);\n1559-expression_statement-238-238", type_label=expression_statement];
1566 [label="238_ return true;\n1566-return-239-239", type_label=return];
1584 [label="242_ string private _name;\n1584-new_variable-243-243", type_label=new_variable];
1589 [label="243_ string private _symbol;\n1589-new_variable-244-244", type_label=new_variable];
1594 [label="244_ uint8 private _decimals;\n1594-new_variable-245-245", type_label=new_variable];
1613 [label="246_ _name = name;\n1613-expression_statement-247-247", type_label=expression_statement];
1617 [label="247_ _symbol = symbol;\n1617-expression_statement-248-248", type_label=expression_statement];
1621 [label="248_ _decimals = decimals;\n1621-expression_statement-249-249", type_label=expression_statement];
1625 [label="250_ name\n1625-function_definition-251-253", type_label=function_definition];
1634 [label="251_ return _name;\n1634-return-252-252", type_label=return];
1636 [label="253_ symbol\n1636-function_definition-254-256", type_label=function_definition];
1645 [label="254_ return _symbol;\n1645-return-255-255", type_label=return];
1647 [label="256_ decimals\n1647-function_definition-257-259", type_label=function_definition];
1656 [label="257_ return _decimals;\n1656-return-258-258", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
129 -> 146  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
146 -> 151  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
146 -> 1799  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1799 -> 153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 1799  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
151 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
153 -> 161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
161 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
170 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
172 -> 189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
189 -> 196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
196 -> 204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
204 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
206 -> 223  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
223 -> 230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 238  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
238 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
240 -> 257  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
257 -> 265  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
265 -> 272  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
272 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
274 -> 291  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
291 -> 298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
298 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
313 -> 320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
334 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
343 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
345 -> 358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
358 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
362 -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
379 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
385 -> 401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
415 -> 431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
431 -> 442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
442 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
445 -> 465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
465 -> 474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
474 -> 496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
496 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
499 -> 515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 537  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
537 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
540 -> 556  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
556 -> 578  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
578 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
581 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
597 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
606 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
640 -> 652  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
652 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 670  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
693 -> 705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
705 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 723  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
746 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
762 -> 771  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
771 -> 780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
796 -> 808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
808 -> 815  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
843 -> 851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
860 -> 872  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
890 -> 903  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
903 -> 912  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
912 -> 923  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
932 -> 945  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
945 -> 954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
954 -> 964  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
973 -> 991  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
991 -> 1000  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1000 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1047 -> 1057  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1059 -> 1072  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1072 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1079 -> 1089  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1094 -> 1098  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1105 -> 1113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1124 -> 1132  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1173 -> 1182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1184 -> 1195  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1187 -> 1193  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1198 -> 1203  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1205 -> 1213  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1208 -> 1210  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1224 -> 1232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1227 -> 1229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1252 -> 1270  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1270 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1279 -> 1301  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1301 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1312 -> 1330  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1330 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1339 -> 1358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1358 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1367 -> 1386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1386 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1436 -> 1446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1448 -> 1461  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1461 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1468 -> 1478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1483 -> 1487  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1494 -> 1502  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1513 -> 1521  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1541 -> 1559  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1559 -> 1566  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1566 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1584 -> 1589  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1589 -> 1594  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1613 -> 1617  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1617 -> 1621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1625 -> 1634  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1634 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1636 -> 1645  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1645 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1647 -> 1656  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1656 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
