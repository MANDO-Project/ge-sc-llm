digraph  {
13 [label="2_ uint public count = 1;\n13-new_variable-3-3", method="", type_label=new_variable];
19 [label="3_ function overflowaddtostate(uint256 input) public {\n        count += input;\n    }\n19-function_definition-4-6", method="overflowaddtostate(uint256 input)", type_label=function_definition];
27 [label="4_ count += input;\n27-expression_statement-5-5", method="overflowaddtostate(uint256 input)", type_label=expression_statement];
31 [label="6_ function overflowmultostate(uint256 input) public {\n        count *= input;\n    }\n31-function_definition-7-9", method="overflowmultostate(uint256 input)", type_label=function_definition];
39 [label="7_ count *= input;\n39-expression_statement-8-8", method="overflowmultostate(uint256 input)", type_label=expression_statement];
43 [label="9_ function underflowtostate(uint256 input) public {\n        count -= input;\n    }\n43-function_definition-10-12", method="underflowtostate(uint256 input)", type_label=function_definition];
51 [label="10_ count -= input;\n51-expression_statement-11-11", method="underflowtostate(uint256 input)", type_label=expression_statement];
55 [label="12_ function overflowlocalonly(uint256 input) public {\n        uint res = count + input;\n    }\n55-function_definition-13-15", method="overflowlocalonly(uint256 input)", type_label=function_definition];
63 [label="13_ uint res = count + input;\n63-new_variable-14-14", method="overflowlocalonly(uint256 input)", type_label=new_variable];
71 [label="15_ function overflowmulocalonly(uint256 input) public {\n        uint res = count * input;\n    }\n71-function_definition-16-18", method="overflowmulocalonly(uint256 input)", type_label=function_definition];
79 [label="16_ uint res = count * input;\n79-new_variable-17-17", method="overflowmulocalonly(uint256 input)", type_label=new_variable];
87 [label="18_ function underflowlocalonly(uint256 input) public {\n       	uint res = count - input;\n    }\n87-function_definition-19-21", method="underflowlocalonly(uint256 input)", type_label=function_definition];
95 [label="19_ uint res = count - input;\n95-new_variable-20-20", method="underflowlocalonly(uint256 input)", type_label=new_variable];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
19 -> 27  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 39  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
43 -> 51  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
55 -> 63  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
71 -> 79  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 95  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
