digraph  {
13 [label="2_ function totalSupply() external view returns (uint256);\n13-function_definition-3-3", method="totalSupply()", type_label=function_definition];
21 [label="3_ function balanceOf(address who) external view returns (uint256);\n21-function_definition-4-4", method="balanceOf(address who)", type_label=function_definition];
33 [label="4_ function allowance(address owner, address spender) external view returns (uint256);\n33-function_definition-5-5", method="allowance(address owner,address spender)", type_label=function_definition];
49 [label="5_ function transfer(address to, uint256 value) external returns (bool);\n49-function_definition-6-6", method="transfer(address to,uint256 value)", type_label=function_definition];
64 [label="6_ function approve(address spender, uint256 value) external returns (bool);\n64-function_definition-7-7", method="approve(address spender,uint256 value)", type_label=function_definition];
79 [label="7_ function transferFrom(address from, address to, uint256 value) external returns (bool);\n79-function_definition-8-8", method="transferFrom(address from,address to,uint256 value)", type_label=function_definition];
129 [label="12_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n129-function_definition-13-20", method="mul(uint256 a,uint256 b)", type_label=function_definition];
146 [label="13_ if_a == 0\n146-if-14-16", method="mul(uint256 a,uint256 b)", type_label=if];
2328 [label="13_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
151 [label="14_ return 0;\n151-return-15-15", method="mul(uint256 a,uint256 b)", type_label=return];
153 [label="16_ uint256 c = a * b;\n153-new_variable-17-17", method="mul(uint256 a,uint256 b)", type_label=new_variable];
161 [label="17_ assert(c / a == b);\n161-expression_statement-18-18", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
170 [label="18_ return c;\n170-return-19-19", method="mul(uint256 a,uint256 b)", type_label=return];
172 [label="20_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n172-function_definition-21-24", method="div(uint256 a,uint256 b)", type_label=function_definition];
189 [label="21_ uint256 c = a / b;\n189-new_variable-22-22", method="div(uint256 a,uint256 b)", type_label=new_variable];
197 [label="22_ return c;\n197-return-23-23", method="div(uint256 a,uint256 b)", type_label=return];
199 [label="24_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n199-function_definition-25-28", method="sub(uint256 a,uint256 b)", type_label=function_definition];
216 [label="25_ assert(b <= a);\n216-expression_statement-26-26", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
223 [label="26_ return a - b;\n223-return-27-27", method="sub(uint256 a,uint256 b)", type_label=return];
227 [label="28_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n227-function_definition-29-33", method="add(uint256 a,uint256 b)", type_label=function_definition];
244 [label="29_ uint256 c = a + b;\n244-new_variable-30-30", method="add(uint256 a,uint256 b)", type_label=new_variable];
252 [label="30_ assert(c >= a);\n252-expression_statement-31-31", method="add(uint256 a,uint256 b)", type_label=expression_statement];
259 [label="31_ return c;\n259-return-32-32", method="add(uint256 a,uint256 b)", type_label=return];
261 [label="33_ function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n    uint256 c = add(a,m);\n    uint256 d = sub(c,1);\n    return mul(div(d,m),m);\n  }\n261-function_definition-34-38", method="ceil(uint256 a,uint256 m)", type_label=function_definition];
278 [label="34_ uint256 c = add(a,m);\n278-new_variable-35-35", method="ceil(uint256 a,uint256 m)", type_label=new_variable];
289 [label="35_ uint256 d = sub(c,1);\n289-new_variable-36-36", method="ceil(uint256 a,uint256 m)", type_label=new_variable];
300 [label="36_ return mul(div(d,m),m);\n300-return-37-37", method="ceil(uint256 a,uint256 m)", type_label=return];
318 [label="40_ mapping(address => uint) balances_intou22;\n318-new_variable-41-41", method="", type_label=new_variable];
324 [label="41_ function transfer_intou22(address _to, uint _value) public returns (bool) {\n    require(balances_intou22[msg.sender] - _value >= 0);   \n    balances_intou22[msg.sender] -= _value;   \n    balances_intou22[_to] += _value;   \n    return true;\n  }\n324-function_definition-42-47", method="transfer_intou22(address _to,uint _value)", type_label=function_definition];
340 [label="42_ require(balances_intou22[msg.sender] - _value >= 0);\n340-expression_statement-43-43", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
353 [label="43_ balances_intou22[msg.sender] -= _value;\n353-expression_statement-44-44", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
361 [label="44_ balances_intou22[_to] += _value;\n361-expression_statement-45-45", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
367 [label="45_ return true;\n367-return-46-46", method="transfer_intou22(address _to,uint _value)", type_label=return];
370 [label="47_ string private _name;\n370-new_variable-48-48", method="", type_label=new_variable];
375 [label="48_ function bug_intou12(uint8 p_intou12) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou12;    \n}\n375-function_definition-49-52", method="bug_intou12(uint8 p_intou12)", type_label=function_definition];
383 [label="49_ uint8 vundflw1=0;\n383-new_variable-50-50", method="bug_intou12(uint8 p_intou12)", type_label=new_variable];
389 [label="50_ vundflw1 = vundflw1 + p_intou12;\n389-expression_statement-51-51", method="bug_intou12(uint8 p_intou12)", type_label=expression_statement];
395 [label="52_ string private _symbol;\n395-new_variable-53-53", method="", type_label=new_variable];
400 [label="53_ function bug_intou11() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n400-function_definition-54-57", method="bug_intou11()", type_label=function_definition];
404 [label="54_ uint8 vundflw =0;\n404-new_variable-55-55", method="bug_intou11()", type_label=new_variable];
410 [label="55_ vundflw = vundflw -10;\n410-expression_statement-56-56", method="bug_intou11()", type_label=expression_statement];
416 [label="57_ uint8 private _decimals;\n416-new_variable-58-58", method="", type_label=new_variable];
435 [label="59_ _name = name;\n435-expression_statement-60-60", method="", type_label=expression_statement];
439 [label="60_ _symbol = symbol;\n439-expression_statement-61-61", method="", type_label=expression_statement];
443 [label="61_ _decimals = decimals;\n443-expression_statement-62-62", method="", type_label=expression_statement];
447 [label="63_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n447-function_definition-64-67", method="bug_intou19()", type_label=function_definition];
451 [label="64_ uint8 vundflw =0;\n451-new_variable-65-65", method="bug_intou19()", type_label=new_variable];
457 [label="65_ vundflw = vundflw -10;\n457-expression_statement-66-66", method="bug_intou19()", type_label=expression_statement];
463 [label="67_ function name() public view returns(string memory) {\n    return _name;\n  }\n463-function_definition-68-70", method="name()", type_label=function_definition];
472 [label="68_ return _name;\n472-return-69-69", method="name()", type_label=return];
474 [label="70_ mapping(address => uint) balances_intou26;\n474-new_variable-71-71", method="", type_label=new_variable];
480 [label="71_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n480-function_definition-72-77", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
496 [label="72_ require(balances_intou26[msg.sender] - _value >= 0);\n496-expression_statement-73-73", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
509 [label="73_ balances_intou26[msg.sender] -= _value;\n509-expression_statement-74-74", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
517 [label="74_ balances_intou26[_to] += _value;\n517-expression_statement-75-75", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
523 [label="75_ return true;\n523-return-76-76", method="transfer_intou26(address _to,uint _value)", type_label=return];
526 [label="77_ function symbol() public view returns(string memory) {\n    return _symbol;\n  }\n526-function_definition-78-80", method="symbol()", type_label=function_definition];
535 [label="78_ return _symbol;\n535-return-79-79", method="symbol()", type_label=return];
537 [label="80_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n537-function_definition-81-84", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
545 [label="81_ uint8 vundflw1=0;\n545-new_variable-82-82", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
551 [label="82_ vundflw1 = vundflw1 + p_intou20;\n551-expression_statement-83-83", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
557 [label="84_ function decimals() public view returns(uint8) {\n    return _decimals;\n  }\n557-function_definition-85-87", method="decimals()", type_label=function_definition];
566 [label="85_ return _decimals;\n566-return-86-86", method="decimals()", type_label=return];
568 [label="87_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n568-function_definition-88-91", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
576 [label="88_ uint8 vundflw1=0;\n576-new_variable-89-89", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
582 [label="89_ vundflw1 = vundflw1 + p_intou32;\n582-expression_statement-90-90", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
599 [label="94_ mapping(address => uint) public lockTime_intou1;\n599-new_variable-95-95", method="", type_label=new_variable];
606 [label="95_ function increaseLockTime_intou1(uint _secondsToIncrease) public {\n        lockTime_intou1[msg.sender] += _secondsToIncrease;   \n    }\n606-function_definition-96-98", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=function_definition];
614 [label="96_ lockTime_intou1[msg.sender] += _secondsToIncrease;\n614-expression_statement-97-97", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=expression_statement];
622 [label="98_ function withdraw_ovrflow1() public {\n        require(now > lockTime_intou1[msg.sender]);    \n        uint transferValue_intou1 = 10;           \n        msg.sender.transfer(transferValue_intou1);\n    }\n622-function_definition-99-103", method="withdraw_ovrflow1()", type_label=function_definition];
626 [label="99_ require(now > lockTime_intou1[msg.sender]);\n626-expression_statement-100-100", method="withdraw_ovrflow1()", type_label=expression_statement];
637 [label="100_ uint transferValue_intou1 = 10;\n637-new_variable-101-101", method="withdraw_ovrflow1()", type_label=new_variable];
643 [label="101_ msg.sender.transfer(transferValue_intou1);\n643-expression_statement-102-102", method="withdraw_ovrflow1()", type_label=expression_statement];
652 [label="103_ mapping (address => uint256) private _balances;\n652-new_variable-104-104", method="", type_label=new_variable];
659 [label="104_ mapping(address => uint) balances_intou2;\n659-new_variable-105-105", method="", type_label=new_variable];
665 [label="105_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n665-function_definition-106-111", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
681 [label="106_ require(balances_intou2[msg.sender] - _value >= 0);\n681-expression_statement-107-107", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
694 [label="107_ balances_intou2[msg.sender] -= _value;\n694-expression_statement-108-108", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
702 [label="108_ balances_intou2[_to] += _value;\n702-expression_statement-109-109", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
708 [label="109_ return true;\n708-return-110-110", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
711 [label="111_ mapping (address => mapping (address => uint256)) private _allowed;\n711-new_variable-112-112", method="", type_label=new_variable];
720 [label="112_ mapping(address => uint) public lockTime_intou17;\n720-new_variable-113-113", method="", type_label=new_variable];
727 [label="113_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n727-function_definition-114-116", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
735 [label="114_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n735-expression_statement-115-115", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
743 [label="116_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n743-function_definition-117-121", method="withdraw_intou17()", type_label=function_definition];
747 [label="117_ require(now > lockTime_intou17[msg.sender]);\n747-expression_statement-118-118", method="withdraw_intou17()", type_label=expression_statement];
758 [label="118_ uint transferValue_intou17 = 10;\n758-new_variable-119-119", method="withdraw_intou17()", type_label=new_variable];
764 [label="119_ msg.sender.transfer(transferValue_intou17);\n764-expression_statement-120-120", method="withdraw_intou17()", type_label=expression_statement];
773 [label="121_ string constant tokenName = \"BIGBOMB\";\n773-new_variable-122-122", method="", type_label=new_variable];
779 [label="122_ mapping(address => uint) public lockTime_intou37;\n779-new_variable-123-123", method="", type_label=new_variable];
786 [label="123_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n786-function_definition-124-126", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
794 [label="124_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n794-expression_statement-125-125", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
802 [label="126_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n802-function_definition-127-131", method="withdraw_intou37()", type_label=function_definition];
806 [label="127_ require(now > lockTime_intou37[msg.sender]);\n806-expression_statement-128-128", method="withdraw_intou37()", type_label=expression_statement];
817 [label="128_ uint transferValue_intou37 = 10;\n817-new_variable-129-129", method="withdraw_intou37()", type_label=new_variable];
823 [label="129_ msg.sender.transfer(transferValue_intou37);\n823-expression_statement-130-130", method="withdraw_intou37()", type_label=expression_statement];
832 [label="131_ string constant tokenSymbol = \"BBOMB\";\n832-new_variable-132-132", method="", type_label=new_variable];
838 [label="132_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n838-function_definition-133-136", method="bug_intou3()", type_label=function_definition];
842 [label="133_ uint8 vundflw =0;\n842-new_variable-134-134", method="bug_intou3()", type_label=new_variable];
848 [label="134_ vundflw = vundflw -10;\n848-expression_statement-135-135", method="bug_intou3()", type_label=expression_statement];
854 [label="136_ uint8  constant tokenDecimals = 18;\n854-new_variable-137-137", method="", type_label=new_variable];
859 [label="137_ mapping(address => uint) public lockTime_intou9;\n859-new_variable-138-138", method="", type_label=new_variable];
866 [label="138_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n866-function_definition-139-141", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
874 [label="139_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n874-expression_statement-140-140", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
882 [label="141_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n882-function_definition-142-146", method="withdraw_intou9()", type_label=function_definition];
886 [label="142_ require(now > lockTime_intou9[msg.sender]);\n886-expression_statement-143-143", method="withdraw_intou9()", type_label=expression_statement];
897 [label="143_ uint transferValue_intou9 = 10;\n897-new_variable-144-144", method="withdraw_intou9()", type_label=new_variable];
903 [label="144_ msg.sender.transfer(transferValue_intou9);\n903-expression_statement-145-145", method="withdraw_intou9()", type_label=expression_statement];
912 [label="146_ uint256 _totalSupply = 800000000000000000000000;\n912-new_variable-147-147", method="", type_label=new_variable];
917 [label="147_ mapping(address => uint) public lockTime_intou25;\n917-new_variable-148-148", method="", type_label=new_variable];
924 [label="148_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n924-function_definition-149-151", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
932 [label="149_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n932-expression_statement-150-150", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
940 [label="151_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n940-function_definition-152-156", method="withdraw_intou25()", type_label=function_definition];
944 [label="152_ require(now > lockTime_intou25[msg.sender]);\n944-expression_statement-153-153", method="withdraw_intou25()", type_label=expression_statement];
955 [label="153_ uint transferValue_intou25 = 10;\n955-new_variable-154-154", method="withdraw_intou25()", type_label=new_variable];
961 [label="154_ msg.sender.transfer(transferValue_intou25);\n961-expression_statement-155-155", method="withdraw_intou25()", type_label=expression_statement];
970 [label="156_ uint256 public basePercent = 100;\n970-new_variable-157-157", method="", type_label=new_variable];
977 [label="157_ ERC20Detailed(tokenName, tokenSymbol, tokenDecimals)\n977-expression_statement-158-158", method="", type_label=expression_statement];
986 [label="158_ _mint(msg.sender, _totalSupply);\n986-expression_statement-159-159", method="", type_label=expression_statement];
995 [label="160_ mapping(address => uint) balances_intou38;\n995-new_variable-161-161", method="", type_label=new_variable];
1001 [label="161_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n1001-function_definition-162-167", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
1017 [label="162_ require(balances_intou38[msg.sender] - _value >= 0);\n1017-expression_statement-163-163", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1030 [label="163_ balances_intou38[msg.sender] -= _value;\n1030-expression_statement-164-164", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1038 [label="164_ balances_intou38[_to] += _value;\n1038-expression_statement-165-165", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1044 [label="165_ return true;\n1044-return-166-166", method="transfer_intou38(address _to,uint _value)", type_label=return];
1047 [label="167_ function totalSupply() public view returns (uint256) {\n    return _totalSupply;\n  }\n1047-function_definition-168-170", method="totalSupply()", type_label=function_definition];
1056 [label="168_ return _totalSupply;\n1056-return-169-169", method="totalSupply()", type_label=return];
1058 [label="170_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n1058-function_definition-171-174", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
1066 [label="171_ uint8 vundflw1=0;\n1066-new_variable-172-172", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
1072 [label="172_ vundflw1 = vundflw1 + p_intou4;\n1072-expression_statement-173-173", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
1078 [label="174_ function balanceOf(address owner) public view returns (uint256) {\n    return _balances[owner];\n  }\n1078-function_definition-175-177", method="balanceOf(address owner)", type_label=function_definition];
1091 [label="175_ return _balances[owner];\n1091-return-176-176", method="balanceOf(address owner)", type_label=return];
1095 [label="177_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1095-function_definition-178-181", method="bug_intou7()", type_label=function_definition];
1099 [label="178_ uint8 vundflw =0;\n1099-new_variable-179-179", method="bug_intou7()", type_label=new_variable];
1105 [label="179_ vundflw = vundflw -10;\n1105-expression_statement-180-180", method="bug_intou7()", type_label=expression_statement];
1111 [label="181_ function allowance(address owner, address spender) public view returns (uint256) {\n    return _allowed[owner][spender];\n  }\n1111-function_definition-182-184", method="allowance(address owner,address spender)", type_label=function_definition];
1128 [label="182_ return _allowed[owner][spender];\n1128-return-183-183", method="allowance(address owner,address spender)", type_label=return];
1134 [label="184_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1134-function_definition-185-188", method="bug_intou23()", type_label=function_definition];
1138 [label="185_ uint8 vundflw =0;\n1138-new_variable-186-186", method="bug_intou23()", type_label=new_variable];
1144 [label="186_ vundflw = vundflw -10;\n1144-expression_statement-187-187", method="bug_intou23()", type_label=expression_statement];
1150 [label="188_ function findfourPercent(uint256 value) public view returns (uint256)  {\n    uint256 roundValue = value.ceil(basePercent);\n    uint256 fourPercent = roundValue.mul(basePercent).div(2500);\n    return fourPercent;\n  }\n1150-function_definition-189-193", method="findfourPercent(uint256 value)", type_label=function_definition];
1163 [label="189_ uint256 roundValue = value.ceil(basePercent);\n1163-new_variable-190-190", method="findfourPercent(uint256 value)", type_label=new_variable];
1174 [label="190_ uint256 fourPercent = roundValue.mul(basePercent).div(2500);\n1174-new_variable-191-191", method="findfourPercent(uint256 value)", type_label=new_variable];
1190 [label="191_ return fourPercent;\n1190-return-192-192", method="findfourPercent(uint256 value)", type_label=return];
1192 [label="193_ mapping(address => uint) balances_intou14;\n1192-new_variable-194-194", method="", type_label=new_variable];
1198 [label="194_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n1198-function_definition-195-200", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
1214 [label="195_ require(balances_intou14[msg.sender] - _value >= 0);\n1214-expression_statement-196-196", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1227 [label="196_ balances_intou14[msg.sender] -= _value;\n1227-expression_statement-197-197", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1235 [label="197_ balances_intou14[_to] += _value;\n1235-expression_statement-198-198", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1241 [label="198_ return true;\n1241-return-199-199", method="transfer_intou14(address _to,uint _value)", type_label=return];
1244 [label="200_ function transfer(address to, uint256 value) public returns (bool) {\n    require(value <= _balances[msg.sender]);\n    require(to != address(0));\n    uint256 tokensToBurn = findfourPercent(value);\n    uint256 tokensToTransfer = value.sub(tokensToBurn);\n    _balances[msg.sender] = _balances[msg.sender].sub(value);\n    _balances[to] = _balances[to].add(tokensToTransfer);\n    _totalSupply = _totalSupply.sub(tokensToBurn);\n    emit Transfer(msg.sender, to, tokensToTransfer);\n    emit Transfer(msg.sender, address(0), tokensToBurn);\n    return true;\n  }\n1244-function_definition-201-212", method="transfer(address to,uint256 value)", type_label=function_definition];
1260 [label="201_ require(value <= _balances[msg.sender]);\n1260-expression_statement-202-202", method="transfer(address to,uint256 value)", type_label=expression_statement];
1271 [label="202_ require(to != address(0));\n1271-expression_statement-203-203", method="transfer(address to,uint256 value)", type_label=expression_statement];
1280 [label="203_ uint256 tokensToBurn = findfourPercent(value);\n1280-new_variable-204-204", method="transfer(address to,uint256 value)", type_label=new_variable];
1289 [label="204_ uint256 tokensToTransfer = value.sub(tokensToBurn);\n1289-new_variable-205-205", method="transfer(address to,uint256 value)", type_label=new_variable];
1300 [label="205_ _balances[msg.sender] = _balances[msg.sender].sub(value);\n1300-expression_statement-206-206", method="transfer(address to,uint256 value)", type_label=expression_statement];
1317 [label="206_ _balances[to] = _balances[to].add(tokensToTransfer);\n1317-expression_statement-207-207", method="transfer(address to,uint256 value)", type_label=expression_statement];
1330 [label="207_ _totalSupply = _totalSupply.sub(tokensToBurn);\n1330-expression_statement-208-208", method="transfer(address to,uint256 value)", type_label=expression_statement];
1361 [label="210_ return true;\n1361-return-211-211", method="transfer(address to,uint256 value)", type_label=return];
1364 [label="212_ mapping(address => uint) balances_intou30;\n1364-new_variable-213-213", method="", type_label=new_variable];
1370 [label="213_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n1370-function_definition-214-219", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
1386 [label="214_ require(balances_intou30[msg.sender] - _value >= 0);\n1386-expression_statement-215-215", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1399 [label="215_ balances_intou30[msg.sender] -= _value;\n1399-expression_statement-216-216", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1407 [label="216_ balances_intou30[_to] += _value;\n1407-expression_statement-217-217", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1413 [label="217_ return true;\n1413-return-218-218", method="transfer_intou30(address _to,uint _value)", type_label=return];
1416 [label="219_ function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\n    for (uint256 i = 0; i < receivers.length; i++) {\n      transfer(receivers[i], amounts[i]);\n    }\n  }\n1416-function_definition-220-224", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=function_definition];
1430 [label="220_ for(i < receivers.length;;i++)\n1430-for-221-223", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=for];
3612 [label="220_ end_loop", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=end_loop];
1443 [label="220_ i++\n1443-expression_statement-221-221", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=expression_statement];
1446 [label="221_ transfer(receivers[i], amounts[i]);\n1446-expression_statement-222-222", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=expression_statement];
1457 [label="224_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n1457-function_definition-225-228", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
1465 [label="225_ uint8 vundflw1=0;\n1465-new_variable-226-226", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
1471 [label="226_ vundflw1 = vundflw1 + p_intou8;\n1471-expression_statement-227-227", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
1477 [label="228_ function approve(address spender, uint256 value) public returns (bool) {\n    require(spender != address(0));\n    _allowed[msg.sender][spender] = value;\n    emit Approval(msg.sender, spender, value);\n    return true;\n  }\n1477-function_definition-229-234", method="approve(address spender,uint256 value)", type_label=function_definition];
1493 [label="229_ require(spender != address(0));\n1493-expression_statement-230-230", method="approve(address spender,uint256 value)", type_label=expression_statement];
1502 [label="230_ _allowed[msg.sender][spender] = value;\n1502-expression_statement-231-231", method="approve(address spender,uint256 value)", type_label=expression_statement];
1522 [label="232_ return true;\n1522-return-233-233", method="approve(address spender,uint256 value)", type_label=return];
1525 [label="234_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1525-function_definition-235-238", method="bug_intou39()", type_label=function_definition];
1529 [label="235_ uint8 vundflw =0;\n1529-new_variable-236-236", method="bug_intou39()", type_label=new_variable];
1535 [label="236_ vundflw = vundflw -10;\n1535-expression_statement-237-237", method="bug_intou39()", type_label=expression_statement];
1541 [label="238_ function transferFrom(address from, address to, uint256 value) public returns (bool) {\n    require(value <= _balances[from]);\n    require(value <= _allowed[from][msg.sender]);\n    require(to != address(0));\n    _balances[from] = _balances[from].sub(value);\n    uint256 tokensToBurn = findfourPercent(value);\n    uint256 tokensToTransfer = value.sub(tokensToBurn);\n    _balances[to] = _balances[to].add(tokensToTransfer);\n    _totalSupply = _totalSupply.sub(tokensToBurn);\n    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n    emit Transfer(from, to, tokensToTransfer);\n    emit Transfer(from, address(0), tokensToBurn);\n    return true;\n  }\n1541-function_definition-239-252", method="transferFrom(address from,address to,uint256 value)", type_label=function_definition];
1561 [label="239_ require(value <= _balances[from]);\n1561-expression_statement-240-240", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
1570 [label="240_ require(value <= _allowed[from][msg.sender]);\n1570-expression_statement-241-241", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
1583 [label="241_ require(to != address(0));\n1583-expression_statement-242-242", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
1592 [label="242_ _balances[from] = _balances[from].sub(value);\n1592-expression_statement-243-243", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
1605 [label="243_ uint256 tokensToBurn = findfourPercent(value);\n1605-new_variable-244-244", method="transferFrom(address from,address to,uint256 value)", type_label=new_variable];
1614 [label="244_ uint256 tokensToTransfer = value.sub(tokensToBurn);\n1614-new_variable-245-245", method="transferFrom(address from,address to,uint256 value)", type_label=new_variable];
1625 [label="245_ _balances[to] = _balances[to].add(tokensToTransfer);\n1625-expression_statement-246-246", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
1638 [label="246_ _totalSupply = _totalSupply.sub(tokensToBurn);\n1638-expression_statement-247-247", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
1647 [label="247_ _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n1647-expression_statement-248-248", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
1686 [label="250_ return true;\n1686-return-251-251", method="transferFrom(address from,address to,uint256 value)", type_label=return];
1689 [label="252_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n1689-function_definition-253-256", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
1697 [label="253_ uint8 vundflw1=0;\n1697-new_variable-254-254", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
1703 [label="254_ vundflw1 = vundflw1 + p_intou36;\n1703-expression_statement-255-255", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
1709 [label="256_ function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    require(spender != address(0));\n    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].add(addedValue));\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n    return true;\n  }\n1709-function_definition-257-262", method="increaseAllowance(address spender,uint256 addedValue)", type_label=function_definition];
1725 [label="257_ require(spender != address(0));\n1725-expression_statement-258-258", method="increaseAllowance(address spender,uint256 addedValue)", type_label=expression_statement];
1734 [label="258_ _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].add(addedValue));\n1734-expression_statement-259-259", method="increaseAllowance(address spender,uint256 addedValue)", type_label=expression_statement];
1772 [label="260_ return true;\n1772-return-261-261", method="increaseAllowance(address spender,uint256 addedValue)", type_label=return];
1775 [label="262_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1775-function_definition-263-266", method="bug_intou35()", type_label=function_definition];
1779 [label="263_ uint8 vundflw =0;\n1779-new_variable-264-264", method="bug_intou35()", type_label=new_variable];
1785 [label="264_ vundflw = vundflw -10;\n1785-expression_statement-265-265", method="bug_intou35()", type_label=expression_statement];
1791 [label="266_ function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    require(spender != address(0));\n    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].sub(subtractedValue));\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n    return true;\n  }\n1791-function_definition-267-272", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=function_definition];
1807 [label="267_ require(spender != address(0));\n1807-expression_statement-268-268", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=expression_statement];
1816 [label="268_ _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].sub(subtractedValue));\n1816-expression_statement-269-269", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=expression_statement];
1854 [label="270_ return true;\n1854-return-271-271", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=return];
1857 [label="272_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n1857-function_definition-273-276", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
1865 [label="273_ uint8 vundflw1=0;\n1865-new_variable-274-274", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
1871 [label="274_ vundflw1 = vundflw1 + p_intou40;\n1871-expression_statement-275-275", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
1877 [label="276_ function _mint(address account, uint256 amount) internal {\n    require(amount != 0);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n1877-function_definition-277-281", method="_mint(address account,uint256 amount)", type_label=function_definition];
1889 [label="277_ require(amount != 0);\n1889-expression_statement-278-278", method="_mint(address account,uint256 amount)", type_label=expression_statement];
1896 [label="278_ _balances[account] = _balances[account].add(amount);\n1896-expression_statement-279-279", method="_mint(address account,uint256 amount)", type_label=expression_statement];
1919 [label="281_ mapping(address => uint) public lockTime_intou33;\n1919-new_variable-282-282", method="", type_label=new_variable];
1926 [label="282_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n1926-function_definition-283-285", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
1934 [label="283_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n1934-expression_statement-284-284", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
1942 [label="285_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n1942-function_definition-286-290", method="withdraw_intou33()", type_label=function_definition];
1946 [label="286_ require(now > lockTime_intou33[msg.sender]);\n1946-expression_statement-287-287", method="withdraw_intou33()", type_label=expression_statement];
1957 [label="287_ uint transferValue_intou33 = 10;\n1957-new_variable-288-288", method="withdraw_intou33()", type_label=new_variable];
1963 [label="288_ msg.sender.transfer(transferValue_intou33);\n1963-expression_statement-289-289", method="withdraw_intou33()", type_label=expression_statement];
1972 [label="290_ function burn(uint256 amount) external {\n    _burn(msg.sender, amount);\n  }\n1972-function_definition-291-293", method="burn(uint256 amount)", type_label=function_definition];
1980 [label="291_ _burn(msg.sender, amount);\n1980-expression_statement-292-292", method="burn(uint256 amount)", type_label=expression_statement];
1989 [label="293_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1989-function_definition-294-297", method="bug_intou27()", type_label=function_definition];
1993 [label="294_ uint8 vundflw =0;\n1993-new_variable-295-295", method="bug_intou27()", type_label=new_variable];
1999 [label="295_ vundflw = vundflw -10;\n1999-expression_statement-296-296", method="bug_intou27()", type_label=expression_statement];
2005 [label="297_ function _burn(address account, uint256 amount) internal {\n    require(amount != 0);\n    require(amount <= _balances[account]);\n    _totalSupply = _totalSupply.sub(amount);\n    _balances[account] = _balances[account].sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n2005-function_definition-298-304", method="_burn(address account,uint256 amount)", type_label=function_definition];
2017 [label="298_ require(amount != 0);\n2017-expression_statement-299-299", method="_burn(address account,uint256 amount)", type_label=expression_statement];
2024 [label="299_ require(amount <= _balances[account]);\n2024-expression_statement-300-300", method="_burn(address account,uint256 amount)", type_label=expression_statement];
2033 [label="300_ _totalSupply = _totalSupply.sub(amount);\n2033-expression_statement-301-301", method="_burn(address account,uint256 amount)", type_label=expression_statement];
2042 [label="301_ _balances[account] = _balances[account].sub(amount);\n2042-expression_statement-302-302", method="_burn(address account,uint256 amount)", type_label=expression_statement];
2065 [label="304_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2065-function_definition-305-308", method="bug_intou31()", type_label=function_definition];
2069 [label="305_ uint8 vundflw =0;\n2069-new_variable-306-306", method="bug_intou31()", type_label=new_variable];
2075 [label="306_ vundflw = vundflw -10;\n2075-expression_statement-307-307", method="bug_intou31()", type_label=expression_statement];
2081 [label="308_ function burnFrom(address account, uint256 amount) external {\n    require(amount <= _allowed[account][msg.sender]);\n    _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(amount);\n    _burn(account, amount);\n  }\n2081-function_definition-309-313", method="burnFrom(address account,uint256 amount)", type_label=function_definition];
2093 [label="309_ require(amount <= _allowed[account][msg.sender]);\n2093-expression_statement-310-310", method="burnFrom(address account,uint256 amount)", type_label=expression_statement];
2106 [label="310_ _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(amount);\n2106-expression_statement-311-311", method="burnFrom(address account,uint256 amount)", type_label=expression_statement];
2127 [label="311_ _burn(account, amount);\n2127-expression_statement-312-312", method="burnFrom(address account,uint256 amount)", type_label=expression_statement];
2134 [label="313_ mapping(address => uint) public lockTime_intou13;\n2134-new_variable-314-314", method="", type_label=new_variable];
2141 [label="314_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n2141-function_definition-315-317", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
2149 [label="315_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n2149-expression_statement-316-316", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
2157 [label="317_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n2157-function_definition-318-322", method="withdraw_intou13()", type_label=function_definition];
2161 [label="318_ require(now > lockTime_intou13[msg.sender]);\n2161-expression_statement-319-319", method="withdraw_intou13()", type_label=expression_statement];
2172 [label="319_ uint transferValue_intou13 = 10;\n2172-new_variable-320-320", method="withdraw_intou13()", type_label=new_variable];
2178 [label="320_ msg.sender.transfer(transferValue_intou13);\n2178-expression_statement-321-321", method="withdraw_intou13()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
129 -> 146  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
146 -> 151  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
146 -> 2328  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2328 -> 153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 2328  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
151 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
153 -> 161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
161 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
170 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
172 -> 189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
189 -> 197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
197 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
199 -> 216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
216 -> 223  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
223 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
227 -> 244  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
244 -> 252  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
252 -> 259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
259 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
261 -> 278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
278 -> 289  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
289 -> 300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
300 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
324 -> 340  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
340 -> 353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
353 -> 361  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
361 -> 367  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
367 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
375 -> 383  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
383 -> 389  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
400 -> 404  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
404 -> 410  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
435 -> 439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
439 -> 443  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
447 -> 451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
451 -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
463 -> 472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
472 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
480 -> 496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
496 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
509 -> 517  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
517 -> 523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
523 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
526 -> 535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
535 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
537 -> 545  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
545 -> 551  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
557 -> 566  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
566 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
568 -> 576  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
576 -> 582  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
606 -> 614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
622 -> 626  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
626 -> 637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
637 -> 643  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
652 -> 659  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
665 -> 681  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
681 -> 694  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
694 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
702 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
711 -> 720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
727 -> 735  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
743 -> 747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
747 -> 758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
758 -> 764  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
773 -> 779  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
786 -> 794  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
802 -> 806  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
806 -> 817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
817 -> 823  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
838 -> 842  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
842 -> 848  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
854 -> 859  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
866 -> 874  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
882 -> 886  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
886 -> 897  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
897 -> 903  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
912 -> 917  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
924 -> 932  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
940 -> 944  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
944 -> 955  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
955 -> 961  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1001 -> 1017  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1017 -> 1030  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1030 -> 1038  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1038 -> 1044  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1044 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1047 -> 1056  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1056 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1058 -> 1066  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1066 -> 1072  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1078 -> 1091  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1091 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1095 -> 1099  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1099 -> 1105  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1111 -> 1128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1128 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1134 -> 1138  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1138 -> 1144  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1150 -> 1163  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1163 -> 1174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1174 -> 1190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1190 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1198 -> 1214  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1214 -> 1227  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1227 -> 1235  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1235 -> 1241  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1241 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1244 -> 1260  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1260 -> 1271  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1271 -> 1280  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1280 -> 1289  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1289 -> 1300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1300 -> 1317  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1317 -> 1330  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1361 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1370 -> 1386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1386 -> 1399  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1399 -> 1407  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1407 -> 1413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1413 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1416 -> 1430  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1430 -> 1446  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1430 -> 3612  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3612 -> 1457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1443 -> 1430  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1446 -> 1443  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1457 -> 1465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1465 -> 1471  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1477 -> 1493  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1493 -> 1502  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1522 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1525 -> 1529  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1529 -> 1535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1541 -> 1561  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1561 -> 1570  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1570 -> 1583  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1583 -> 1592  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1592 -> 1605  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1605 -> 1614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1614 -> 1625  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1625 -> 1638  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1638 -> 1647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1686 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1689 -> 1697  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1697 -> 1703  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1709 -> 1725  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1725 -> 1734  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1772 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1775 -> 1779  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1779 -> 1785  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1791 -> 1807  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1807 -> 1816  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1854 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1857 -> 1865  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1865 -> 1871  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1877 -> 1889  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1889 -> 1896  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1926 -> 1934  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1942 -> 1946  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1946 -> 1957  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1957 -> 1963  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1972 -> 1980  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1989 -> 1993  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1993 -> 1999  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2005 -> 2017  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2017 -> 2024  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2024 -> 2033  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2033 -> 2042  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2065 -> 2069  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2069 -> 2075  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2081 -> 2093  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2093 -> 2106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2106 -> 2127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2141 -> 2149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2157 -> 2161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2161 -> 2172  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2172 -> 2178  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
