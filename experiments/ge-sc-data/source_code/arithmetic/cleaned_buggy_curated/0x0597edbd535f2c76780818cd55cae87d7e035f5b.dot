digraph  {
13 [label="2_ totalSupply\n13-function_definition-3-3", type_label=function_definition];
21 [label="3_ balanceOf\n21-function_definition-4-4", type_label=function_definition];
33 [label="4_ transfer\n33-function_definition-5-5", type_label=function_definition];
65 [label="8_ mul\n65-function_definition-9-16", type_label=function_definition];
82 [label="9_ if_a == 0\n82-if-10-12", type_label=if];
872 [label="9_ end_if", type_label=end_if];
87 [label="10_ return 0;\n87-return-11-11", type_label=return];
89 [label="12_ uint256 c = a * b;\n89-new_variable-13-13", type_label=new_variable];
97 [label="13_ assert(c / a == b);\n97-expression_statement-14-14", type_label=expression_statement];
106 [label="14_ return c;\n106-return-15-15", type_label=return];
108 [label="16_ div\n108-function_definition-17-20", type_label=function_definition];
125 [label="17_ uint256 c = a / b;\n125-new_variable-18-18", type_label=new_variable];
133 [label="18_ return c;\n133-return-19-19", type_label=return];
135 [label="20_ sub\n135-function_definition-21-24", type_label=function_definition];
152 [label="21_ assert(b <= a);\n152-expression_statement-22-22", type_label=expression_statement];
159 [label="22_ return a - b;\n159-return-23-23", type_label=return];
163 [label="24_ add\n163-function_definition-25-29", type_label=function_definition];
180 [label="25_ uint256 c = a + b;\n180-new_variable-26-26", type_label=new_variable];
188 [label="26_ assert(c >= a);\n188-expression_statement-27-27", type_label=expression_statement];
195 [label="27_ return c;\n195-return-28-28", type_label=return];
203 [label="31_ allowance\n203-function_definition-32-32", type_label=function_definition];
219 [label="32_ transferFrom\n219-function_definition-33-33", type_label=function_definition];
238 [label="33_ approve\n238-function_definition-34-34", type_label=function_definition];
278 [label="38_ mapping(address => uint256) balances;\n278-new_variable-39-39", type_label=new_variable];
284 [label="39_ uint256 totalSupply_;\n284-new_variable-40-40", type_label=new_variable];
288 [label="40_ totalSupply\n288-function_definition-41-43", type_label=function_definition];
297 [label="41_ return totalSupply_;\n297-return-42-42", type_label=return];
299 [label="43_ transfer\n299-function_definition-44-51", type_label=function_definition];
315 [label="44_ require(_to != address(0));\n315-expression_statement-45-45", type_label=expression_statement];
324 [label="45_ require(_value <= balances[msg.sender]);\n324-expression_statement-46-46", type_label=expression_statement];
335 [label="46_ balances[msg.sender] = balances[msg.sender].sub(_value);\n335-expression_statement-47-47", type_label=expression_statement];
352 [label="47_ balances[_to] = balances[_to].add(_value);\n352-expression_statement-48-48", type_label=expression_statement];
375 [label="49_ return true;\n375-return-50-50", type_label=return];
378 [label="51_ balanceOf\n378-function_definition-52-54", type_label=function_definition];
392 [label="52_ return balances[_owner];\n392-return-53-53", type_label=return];
405 [label="56_ mapping (address => mapping (address => uint256)) internal allowed;\n405-new_variable-57-57", type_label=new_variable];
414 [label="57_ transferFrom\n414-function_definition-58-67", type_label=function_definition];
434 [label="58_ require(_to != address(0));\n434-expression_statement-59-59", type_label=expression_statement];
443 [label="59_ require(_value <= balances[_from]);\n443-expression_statement-60-60", type_label=expression_statement];
452 [label="60_ require(_value <= allowed[_from][msg.sender]);\n452-expression_statement-61-61", type_label=expression_statement];
465 [label="61_ balances[_from] = balances[_from].sub(_value);\n465-expression_statement-62-62", type_label=expression_statement];
478 [label="62_ balances[_to] = balances[_to].add(_value);\n478-expression_statement-63-63", type_label=expression_statement];
491 [label="63_ allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n491-expression_statement-64-64", type_label=expression_statement];
520 [label="65_ return true;\n520-return-66-66", type_label=return];
523 [label="67_ approve\n523-function_definition-68-73", type_label=function_definition];
539 [label="68_ require((_value == 0) || allowed[msg.sender][_spender]== 0);\n539-expression_statement-69-69", type_label=expression_statement];
557 [label="69_ allowed[msg.sender][_spender] = _value;\n557-expression_statement-70-70", type_label=expression_statement];
577 [label="71_ return true;\n577-return-72-72", type_label=return];
580 [label="73_ allowance\n580-function_definition-74-76", type_label=function_definition];
597 [label="74_ return allowed[_owner][_spender];\n597-return-75-75", type_label=return];
603 [label="76_ increaseApproval\n603-function_definition-77-81", type_label=function_definition];
619 [label="77_ allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n619-expression_statement-78-78", type_label=expression_statement];
656 [label="79_ return true;\n656-return-80-80", type_label=return];
659 [label="81_ decreaseApproval\n659-function_definition-82-91", type_label=function_definition];
675 [label="82_ uint oldValue = allowed[msg.sender][_spender];\n675-new_variable-83-83", type_label=new_variable];
687 [label="83_ if__subtractedValue > oldValue\n687-if-84-88", type_label=if];
1477 [label="83_ end_if", type_label=end_if];
692 [label="84_ allowed[msg.sender][_spender] = 0;\n692-expression_statement-85-85", type_label=expression_statement];
703 [label="86_ allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n703-expression_statement-87-87", type_label=expression_statement];
734 [label="89_ return true;\n734-return-90-90", type_label=return];
743 [label="93_ string public constant name = \"Moon\";\n743-new_variable-94-94", type_label=new_variable];
750 [label="94_ string public constant symbol = \"MOON\";\n750-new_variable-95-95", type_label=new_variable];
757 [label="95_ uint8 public constant decimals = 18;\n757-new_variable-96-96", type_label=new_variable];
763 [label="96_ uint256 public constant INITIAL_SUPPLY = 1e27;\n763-new_variable-97-97", type_label=new_variable];
771 [label="98_ totalSupply_ = INITIAL_SUPPLY;\n771-expression_statement-99-99", type_label=expression_statement];
775 [label="99_ balances[msg.sender] = INITIAL_SUPPLY;\n775-expression_statement-100-100", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
718;
65 -> 82  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
82 -> 87  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
82 -> 872  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
872 -> 89  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 872  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
87 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
89 -> 97  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
97 -> 106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
106 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
108 -> 125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
125 -> 133  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
133 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
135 -> 152  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
152 -> 159  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
159 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
163 -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
180 -> 188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
188 -> 195  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
195 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
278 -> 284  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
288 -> 297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
297 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
299 -> 315  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
315 -> 324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
324 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
335 -> 352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
375 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
378 -> 392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
392 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
414 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
434 -> 443  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
443 -> 452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
452 -> 465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
465 -> 478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
478 -> 491  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
520 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
523 -> 539  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
539 -> 557  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
577 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
580 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
597 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
603 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
656 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
659 -> 675  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
675 -> 687  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 692  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
687 -> 703  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1477 -> 718  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
692 -> 1477  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
703 -> 1477  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
734 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
743 -> 750  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
750 -> 757  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
757 -> 763  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
771 -> 775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
