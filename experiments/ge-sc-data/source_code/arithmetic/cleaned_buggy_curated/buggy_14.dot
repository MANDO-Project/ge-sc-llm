digraph  {
13 [label="2_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n13-function_definition-3-10", method="mul(uint256 a,uint256 b)", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", method="mul(uint256 a,uint256 b)", type_label=if];
1578 [label="3_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", method="mul(uint256 a,uint256 b)", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", method="mul(uint256 a,uint256 b)", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", method="mul(uint256 a,uint256 b)", type_label=return];
56 [label="10_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n56-function_definition-11-15", method="div(uint256 a,uint256 b)", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", method="div(uint256 a,uint256 b)", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", method="div(uint256 a,uint256 b)", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", method="div(uint256 a,uint256 b)", type_label=return];
90 [label="15_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n90-function_definition-16-20", method="sub(uint256 a,uint256 b)", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", method="sub(uint256 a,uint256 b)", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", method="sub(uint256 a,uint256 b)", type_label=return];
124 [label="20_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n124-function_definition-21-25", method="add(uint256 a,uint256 b)", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", method="add(uint256 a,uint256 b)", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", method="add(uint256 a,uint256 b)", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", method="add(uint256 a,uint256 b)", type_label=return];
158 [label="25_ function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n158-function_definition-26-29", method="mod(uint256 a,uint256 b)", type_label=function_definition];
175 [label="26_ require(b != 0);\n175-expression_statement-27-27", method="mod(uint256 a,uint256 b)", type_label=expression_statement];
182 [label="27_ return a % b;\n182-return-28-28", method="mod(uint256 a,uint256 b)", type_label=return];
189 [label="31_ function totalSupply() external view returns (uint256);\n189-function_definition-32-32", method="totalSupply()", type_label=function_definition];
197 [label="32_ function balanceOf(address who) external view returns (uint256);\n197-function_definition-33-33", method="balanceOf(address who)", type_label=function_definition];
209 [label="33_ function transfer(address to, uint256 value) external returns (bool);\n209-function_definition-34-34", method="transfer(address to,uint256 value)", type_label=function_definition];
224 [label="34_ function transferFrom(address from, address to, uint256 value) external returns (bool);\n224-function_definition-35-35", method="transferFrom(address from,address to,uint256 value)", type_label=function_definition];
243 [label="35_ function approve(address spender, uint256 value) external returns (bool);\n243-function_definition-36-36", method="approve(address spender,uint256 value)", type_label=function_definition];
258 [label="36_ function allowance(address owner, address spender) external view returns (uint256);\n258-function_definition-37-37", method="allowance(address owner,address spender)", type_label=function_definition];
323 [label="43_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n323-function_definition-44-47", method="bug_intou3()", type_label=function_definition];
327 [label="44_ uint8 vundflw =0;\n327-new_variable-45-45", method="bug_intou3()", type_label=new_variable];
333 [label="45_ vundflw = vundflw -10;\n333-expression_statement-46-46", method="bug_intou3()", type_label=expression_statement];
339 [label="47_ uint8 constant DECIMALS = 18;\n339-new_variable-48-48", method="", type_label=new_variable];
344 [label="48_ mapping(address => uint) public lockTime_intou9;\n344-new_variable-49-49", method="", type_label=new_variable];
351 [label="49_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n351-function_definition-50-52", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
359 [label="50_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n359-expression_statement-51-51", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
367 [label="52_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n367-function_definition-53-57", method="withdraw_intou9()", type_label=function_definition];
371 [label="53_ require(now > lockTime_intou9[msg.sender]);\n371-expression_statement-54-54", method="withdraw_intou9()", type_label=expression_statement];
382 [label="54_ uint transferValue_intou9 = 10;\n382-new_variable-55-55", method="withdraw_intou9()", type_label=new_variable];
388 [label="55_ msg.sender.transfer(transferValue_intou9);\n388-expression_statement-56-56", method="withdraw_intou9()", type_label=expression_statement];
397 [label="57_ uint256 private _totalSupply;\n397-new_variable-58-58", method="", type_label=new_variable];
402 [label="58_ string private _name;\n402-new_variable-59-59", method="", type_label=new_variable];
407 [label="59_ string private _symbol;\n407-new_variable-60-60", method="", type_label=new_variable];
412 [label="60_ mapping(address => uint) public lockTime_intou25;\n412-new_variable-61-61", method="", type_label=new_variable];
419 [label="61_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n419-function_definition-62-64", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
427 [label="62_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n427-expression_statement-63-63", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
435 [label="64_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n435-function_definition-65-69", method="withdraw_intou25()", type_label=function_definition];
439 [label="65_ require(now > lockTime_intou25[msg.sender]);\n439-expression_statement-66-66", method="withdraw_intou25()", type_label=expression_statement];
450 [label="66_ uint transferValue_intou25 = 10;\n450-new_variable-67-67", method="withdraw_intou25()", type_label=new_variable];
456 [label="67_ msg.sender.transfer(transferValue_intou25);\n456-expression_statement-68-68", method="withdraw_intou25()", type_label=expression_statement];
465 [label="69_ mapping (address => uint256) private _balances;\n465-new_variable-70-70", method="", type_label=new_variable];
472 [label="70_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n472-function_definition-71-74", method="bug_intou19()", type_label=function_definition];
476 [label="71_ uint8 vundflw =0;\n476-new_variable-72-72", method="bug_intou19()", type_label=new_variable];
482 [label="72_ vundflw = vundflw -10;\n482-expression_statement-73-73", method="bug_intou19()", type_label=expression_statement];
488 [label="74_ mapping (address => mapping (address => uint256)) private _allowed;\n488-new_variable-75-75", method="", type_label=new_variable];
497 [label="75_ function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n497-function_definition-76-78", method="totalSupply()", type_label=function_definition];
506 [label="76_ return _totalSupply;\n506-return-77-77", method="totalSupply()", type_label=return];
508 [label="78_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n508-function_definition-79-82", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
516 [label="79_ uint8 vundflw1=0;\n516-new_variable-80-80", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
522 [label="80_ vundflw1 = vundflw1 + p_intou32;\n522-expression_statement-81-81", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
528 [label="82_ function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\n528-function_definition-83-85", method="balanceOf(address owner)", type_label=function_definition];
541 [label="83_ return _balances[owner];\n541-return-84-84", method="balanceOf(address owner)", type_label=return];
545 [label="85_ mapping(address => uint) balances_intou38;\n545-new_variable-86-86", method="", type_label=new_variable];
551 [label="86_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n551-function_definition-87-92", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
567 [label="87_ require(balances_intou38[msg.sender] - _value >= 0);\n567-expression_statement-88-88", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
580 [label="88_ balances_intou38[msg.sender] -= _value;\n580-expression_statement-89-89", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
588 [label="89_ balances_intou38[_to] += _value;\n588-expression_statement-90-90", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
594 [label="90_ return true;\n594-return-91-91", method="transfer_intou38(address _to,uint _value)", type_label=return];
597 [label="92_ function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n597-function_definition-93-96", method="transfer(address to,uint256 value)", type_label=function_definition];
613 [label="93_ _transfer(msg.sender, to, value);\n613-expression_statement-94-94", method="transfer(address to,uint256 value)", type_label=expression_statement];
624 [label="94_ return true;\n624-return-95-95", method="transfer(address to,uint256 value)", type_label=return];
627 [label="96_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n627-function_definition-97-100", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
635 [label="97_ uint8 vundflw1=0;\n635-new_variable-98-98", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
641 [label="98_ vundflw1 = vundflw1 + p_intou4;\n641-expression_statement-99-99", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
647 [label="100_ function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }\n647-function_definition-101-105", method="transferFrom(address from,address to,uint256 value)", type_label=function_definition];
667 [label="101_ _transfer(from, to, value);\n667-expression_statement-102-102", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
676 [label="102_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n676-expression_statement-103-103", method="transferFrom(address from,address to,uint256 value)", type_label=expression_statement];
698 [label="103_ return true;\n698-return-104-104", method="transferFrom(address from,address to,uint256 value)", type_label=return];
701 [label="105_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n701-function_definition-106-109", method="bug_intou7()", type_label=function_definition];
705 [label="106_ uint8 vundflw =0;\n705-new_variable-107-107", method="bug_intou7()", type_label=new_variable];
711 [label="107_ vundflw = vundflw -10;\n711-expression_statement-108-108", method="bug_intou7()", type_label=expression_statement];
717 [label="109_ function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n717-function_definition-110-113", method="approve(address spender,uint256 value)", type_label=function_definition];
733 [label="110_ _approve(msg.sender, spender, value);\n733-expression_statement-111-111", method="approve(address spender,uint256 value)", type_label=expression_statement];
744 [label="111_ return true;\n744-return-112-112", method="approve(address spender,uint256 value)", type_label=return];
747 [label="113_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n747-function_definition-114-117", method="bug_intou23()", type_label=function_definition];
751 [label="114_ uint8 vundflw =0;\n751-new_variable-115-115", method="bug_intou23()", type_label=new_variable];
757 [label="115_ vundflw = vundflw -10;\n757-expression_statement-116-116", method="bug_intou23()", type_label=expression_statement];
763 [label="117_ function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\n763-function_definition-118-120", method="allowance(address owner,address spender)", type_label=function_definition];
780 [label="118_ return _allowed[owner][spender];\n780-return-119-119", method="allowance(address owner,address spender)", type_label=return];
786 [label="120_ mapping(address => uint) balances_intou14;\n786-new_variable-121-121", method="", type_label=new_variable];
792 [label="121_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n792-function_definition-122-127", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
808 [label="122_ require(balances_intou14[msg.sender] - _value >= 0);\n808-expression_statement-123-123", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
821 [label="123_ balances_intou14[msg.sender] -= _value;\n821-expression_statement-124-124", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
829 [label="124_ balances_intou14[_to] += _value;\n829-expression_statement-125-125", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
835 [label="125_ return true;\n835-return-126-126", method="transfer_intou14(address _to,uint _value)", type_label=return];
838 [label="127_ function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\n838-function_definition-128-130", method="burn(uint256 value)", type_label=function_definition];
846 [label="128_ _burn(msg.sender, value);\n846-expression_statement-129-129", method="burn(uint256 value)", type_label=expression_statement];
855 [label="130_ mapping(address => uint) balances_intou30;\n855-new_variable-131-131", method="", type_label=new_variable];
861 [label="131_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n861-function_definition-132-137", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
877 [label="132_ require(balances_intou30[msg.sender] - _value >= 0);\n877-expression_statement-133-133", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
890 [label="133_ balances_intou30[msg.sender] -= _value;\n890-expression_statement-134-134", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
898 [label="134_ balances_intou30[_to] += _value;\n898-expression_statement-135-135", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
904 [label="135_ return true;\n904-return-136-136", method="transfer_intou30(address _to,uint _value)", type_label=return];
907 [label="137_ function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\n907-function_definition-138-143", method="_mint(address account,uint256 value)", type_label=function_definition];
919 [label="138_ require(account != address(0));\n919-expression_statement-139-139", method="_mint(address account,uint256 value)", type_label=expression_statement];
928 [label="139_ _totalSupply = _totalSupply.add(value);\n928-expression_statement-140-140", method="_mint(address account,uint256 value)", type_label=expression_statement];
937 [label="140_ _balances[account] = _balances[account].add(value);\n937-expression_statement-141-141", method="_mint(address account,uint256 value)", type_label=expression_statement];
960 [label="143_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n960-function_definition-144-147", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
968 [label="144_ uint8 vundflw1=0;\n968-new_variable-145-145", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
974 [label="145_ vundflw1 = vundflw1 + p_intou8;\n974-expression_statement-146-146", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
980 [label="147_ function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\n980-function_definition-148-153", method="_transfer(address from,address to,uint256 value)", type_label=function_definition];
996 [label="148_ require(to != address(0));\n996-expression_statement-149-149", method="_transfer(address from,address to,uint256 value)", type_label=expression_statement];
1005 [label="149_ _balances[from] = _balances[from].sub(value);\n1005-expression_statement-150-150", method="_transfer(address from,address to,uint256 value)", type_label=expression_statement];
1018 [label="150_ _balances[to] = _balances[to].add(value);\n1018-expression_statement-151-151", method="_transfer(address from,address to,uint256 value)", type_label=expression_statement];
1039 [label="153_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1039-function_definition-154-157", method="bug_intou39()", type_label=function_definition];
1043 [label="154_ uint8 vundflw =0;\n1043-new_variable-155-155", method="bug_intou39()", type_label=new_variable];
1049 [label="155_ vundflw = vundflw -10;\n1049-expression_statement-156-156", method="bug_intou39()", type_label=expression_statement];
1055 [label="157_ function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n1055-function_definition-158-163", method="_approve(address owner,address spender,uint256 value)", type_label=function_definition];
1071 [label="158_ require(spender != address(0));\n1071-expression_statement-159-159", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1080 [label="159_ require(owner != address(0));\n1080-expression_statement-160-160", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1089 [label="160_ _allowed[owner][spender] = value;\n1089-expression_statement-161-161", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1105 [label="163_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n1105-function_definition-164-167", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
1113 [label="164_ uint8 vundflw1=0;\n1113-new_variable-165-165", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
1119 [label="165_ vundflw1 = vundflw1 + p_intou36;\n1119-expression_statement-166-166", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
1125 [label="167_ function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n1125-function_definition-168-173", method="_burn(address account,uint256 value)", type_label=function_definition];
1137 [label="168_ require(account != address(0));\n1137-expression_statement-169-169", method="_burn(address account,uint256 value)", type_label=expression_statement];
1146 [label="169_ _totalSupply = _totalSupply.sub(value);\n1146-expression_statement-170-170", method="_burn(address account,uint256 value)", type_label=expression_statement];
1155 [label="170_ _balances[account] = _balances[account].sub(value);\n1155-expression_statement-171-171", method="_burn(address account,uint256 value)", type_label=expression_statement];
1178 [label="173_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1178-function_definition-174-177", method="bug_intou35()", type_label=function_definition];
1182 [label="174_ uint8 vundflw =0;\n1182-new_variable-175-175", method="bug_intou35()", type_label=new_variable];
1188 [label="175_ vundflw = vundflw -10;\n1188-expression_statement-176-176", method="bug_intou35()", type_label=expression_statement];
1200 [label="179_ string private _name;\n1200-new_variable-180-180", method="", type_label=new_variable];
1205 [label="180_ string private _symbol;\n1205-new_variable-181-181", method="", type_label=new_variable];
1210 [label="181_ mapping(address => uint) balances_intou26;\n1210-new_variable-182-182", method="", type_label=new_variable];
1216 [label="182_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n1216-function_definition-183-188", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
1232 [label="183_ require(balances_intou26[msg.sender] - _value >= 0);\n1232-expression_statement-184-184", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1245 [label="184_ balances_intou26[msg.sender] -= _value;\n1245-expression_statement-185-185", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1253 [label="185_ balances_intou26[_to] += _value;\n1253-expression_statement-186-186", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1259 [label="186_ return true;\n1259-return-187-187", method="transfer_intou26(address _to,uint _value)", type_label=return];
1262 [label="188_ uint8 private _decimals;\n1262-new_variable-189-189", method="", type_label=new_variable];
1281 [label="190_ _name = name;\n1281-expression_statement-191-191", method="", type_label=expression_statement];
1285 [label="191_ _symbol = symbol;\n1285-expression_statement-192-192", method="", type_label=expression_statement];
1289 [label="192_ _decimals = decimals;\n1289-expression_statement-193-193", method="", type_label=expression_statement];
1293 [label="194_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n1293-function_definition-195-198", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
1301 [label="195_ uint8 vundflw1=0;\n1301-new_variable-196-196", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
1307 [label="196_ vundflw1 = vundflw1 + p_intou40;\n1307-expression_statement-197-197", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
1313 [label="198_ function name() public view returns (string memory) {\n        return _name;\n    }\n1313-function_definition-199-201", method="name()", type_label=function_definition];
1322 [label="199_ return _name;\n1322-return-200-200", method="name()", type_label=return];
1324 [label="201_ mapping(address => uint) public lockTime_intou33;\n1324-new_variable-202-202", method="", type_label=new_variable];
1331 [label="202_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n1331-function_definition-203-205", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
1339 [label="203_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n1339-expression_statement-204-204", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
1347 [label="205_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n1347-function_definition-206-210", method="withdraw_intou33()", type_label=function_definition];
1351 [label="206_ require(now > lockTime_intou33[msg.sender]);\n1351-expression_statement-207-207", method="withdraw_intou33()", type_label=expression_statement];
1362 [label="207_ uint transferValue_intou33 = 10;\n1362-new_variable-208-208", method="withdraw_intou33()", type_label=new_variable];
1368 [label="208_ msg.sender.transfer(transferValue_intou33);\n1368-expression_statement-209-209", method="withdraw_intou33()", type_label=expression_statement];
1377 [label="210_ function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n1377-function_definition-211-213", method="symbol()", type_label=function_definition];
1386 [label="211_ return _symbol;\n1386-return-212-212", method="symbol()", type_label=return];
1388 [label="213_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1388-function_definition-214-217", method="bug_intou27()", type_label=function_definition];
1392 [label="214_ uint8 vundflw =0;\n1392-new_variable-215-215", method="bug_intou27()", type_label=new_variable];
1398 [label="215_ vundflw = vundflw -10;\n1398-expression_statement-216-216", method="bug_intou27()", type_label=expression_statement];
1404 [label="217_ function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n1404-function_definition-218-220", method="decimals()", type_label=function_definition];
1413 [label="218_ return _decimals;\n1413-return-219-219", method="decimals()", type_label=return];
1415 [label="220_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1415-function_definition-221-224", method="bug_intou31()", type_label=function_definition];
1419 [label="221_ uint8 vundflw =0;\n1419-new_variable-222-222", method="bug_intou31()", type_label=new_variable];
1425 [label="222_ vundflw = vundflw -10;\n1425-expression_statement-223-223", method="bug_intou31()", type_label=expression_statement];
1440 [label="226_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n1440-function_definition-227-230", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
1448 [label="227_ uint8 vundflw1=0;\n1448-new_variable-228-228", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
1454 [label="228_ vundflw1 = vundflw1 + p_intou20;\n1454-expression_statement-229-229", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
1460 [label="230_ uint8 public constant DECIMALS = 18;\n1460-new_variable-231-231", method="", type_label=new_variable];
1466 [label="231_ uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n1466-new_variable-232-232", method="", type_label=new_variable];
1480 [label="232_ ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS)\n1480-expression_statement-233-233", method="", type_label=expression_statement];
1491 [label="233_ _mint(msg.sender, INITIAL_SUPPLY);\n1491-expression_statement-234-234", method="", type_label=expression_statement];
1500 [label="235_ mapping(address => uint) public lockTime_intou13;\n1500-new_variable-236-236", method="", type_label=new_variable];
1507 [label="236_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n1507-function_definition-237-239", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
1515 [label="237_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n1515-expression_statement-238-238", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
1523 [label="239_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n1523-function_definition-240-244", method="withdraw_intou13()", type_label=function_definition];
1527 [label="240_ require(now > lockTime_intou13[msg.sender]);\n1527-expression_statement-241-241", method="withdraw_intou13()", type_label=expression_statement];
1538 [label="241_ uint transferValue_intou13 = 10;\n1538-new_variable-242-242", method="withdraw_intou13()", type_label=new_variable];
1544 [label="242_ msg.sender.transfer(transferValue_intou13);\n1544-expression_statement-243-243", method="withdraw_intou13()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 1578  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1578 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 1578  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
323 -> 327  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
327 -> 333  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
339 -> 344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
367 -> 371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
371 -> 382  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
382 -> 388  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
397 -> 402  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
402 -> 407  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
407 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
419 -> 427  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
435 -> 439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
439 -> 450  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
450 -> 456  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
472 -> 476  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
476 -> 482  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
497 -> 506  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
506 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
508 -> 516  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
516 -> 522  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
528 -> 541  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
541 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
551 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
567 -> 580  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
580 -> 588  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
588 -> 594  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
594 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
597 -> 613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
613 -> 624  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
624 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
627 -> 635  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
635 -> 641  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
647 -> 667  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
667 -> 676  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
676 -> 698  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
698 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
701 -> 705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
705 -> 711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
717 -> 733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
733 -> 744  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
744 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
747 -> 751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
751 -> 757  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
763 -> 780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
780 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
792 -> 808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
808 -> 821  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
821 -> 829  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
829 -> 835  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
835 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
838 -> 846  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
861 -> 877  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
877 -> 890  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
890 -> 898  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
898 -> 904  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
904 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
907 -> 919  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
919 -> 928  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
928 -> 937  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
960 -> 968  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
968 -> 974  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
980 -> 996  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
996 -> 1005  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1005 -> 1018  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1039 -> 1043  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1043 -> 1049  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1055 -> 1071  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1071 -> 1080  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1080 -> 1089  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1105 -> 1113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1113 -> 1119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1125 -> 1137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1137 -> 1146  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1146 -> 1155  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1178 -> 1182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1182 -> 1188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1200 -> 1205  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1205 -> 1210  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1216 -> 1232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1232 -> 1245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1245 -> 1253  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1253 -> 1259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1259 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1281 -> 1285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1285 -> 1289  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1293 -> 1301  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1301 -> 1307  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1313 -> 1322  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1322 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1331 -> 1339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1347 -> 1351  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1351 -> 1362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1362 -> 1368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1377 -> 1386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1386 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1388 -> 1392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1392 -> 1398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1404 -> 1413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1413 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1415 -> 1419  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1419 -> 1425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1440 -> 1448  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1448 -> 1454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1460 -> 1466  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1507 -> 1515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1523 -> 1527  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1527 -> 1538  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1538 -> 1544  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
