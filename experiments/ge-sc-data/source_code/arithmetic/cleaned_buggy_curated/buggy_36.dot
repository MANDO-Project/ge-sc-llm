digraph  {
13 [label="2_ function bug_intou24(uint8 p_intou24) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou24;    \n}\n13-function_definition-3-6", method="bug_intou24(uint8 p_intou24)", type_label=function_definition];
21 [label="3_ uint8 vundflw1=0;\n21-new_variable-4-4", method="bug_intou24(uint8 p_intou24)", type_label=new_variable];
27 [label="4_ vundflw1 = vundflw1 + p_intou24;\n27-expression_statement-5-5", method="bug_intou24(uint8 p_intou24)", type_label=expression_statement];
33 [label="6_ address public owner;\n33-new_variable-7-7", method="", type_label=new_variable];
40 [label="8_ owner = msg.sender;\n40-expression_statement-9-9", method="", type_label=expression_statement];
46 [label="10_ function bug_intou11() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n46-function_definition-11-14", method="bug_intou11()", type_label=function_definition];
50 [label="11_ uint8 vundflw =0;\n50-new_variable-12-12", method="bug_intou11()", type_label=new_variable];
56 [label="12_ vundflw = vundflw -10;\n56-expression_statement-13-13", method="bug_intou11()", type_label=expression_statement];
62 [label="14_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n62-expression_statement-15-18", method="", type_label=expression_statement];
65 [label="15_ require(msg.sender == owner);\n65-expression_statement-16-16", method="", type_label=expression_statement];
74 [label="16_ _;\n74-expression_statement-17-17", method="", type_label=expression_statement];
76 [label="18_ function transferOwnership(address newOwner) onlyOwner public {\n        owner = newOwner;\n    }\n76-function_definition-19-21", method="transferOwnership(address newOwner)", type_label=function_definition];
82 [label="18_ onlyOwner\n82-expression_statement-19-19", method="transferOwnership(address newOwner)", type_label=expression_statement];
86 [label="19_ owner = newOwner;\n86-expression_statement-20-20", method="transferOwnership(address newOwner)", type_label=expression_statement];
90 [label="21_ mapping(address => uint) public lockTime_intou1;\n90-new_variable-22-22", method="", type_label=new_variable];
97 [label="22_ function increaseLockTime_intou1(uint _secondsToIncrease) public {\n        lockTime_intou1[msg.sender] += _secondsToIncrease;   \n    }\n97-function_definition-23-25", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=function_definition];
105 [label="23_ lockTime_intou1[msg.sender] += _secondsToIncrease;\n105-expression_statement-24-24", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=expression_statement];
113 [label="25_ function withdraw_ovrflow1() public {\n        require(now > lockTime_intou1[msg.sender]);    \n        uint transferValue_intou1 = 10;           \n        msg.sender.transfer(transferValue_intou1);\n    }\n113-function_definition-26-30", method="withdraw_ovrflow1()", type_label=function_definition];
117 [label="26_ require(now > lockTime_intou1[msg.sender]);\n117-expression_statement-27-27", method="withdraw_ovrflow1()", type_label=expression_statement];
128 [label="27_ uint transferValue_intou1 = 10;\n128-new_variable-28-28", method="withdraw_ovrflow1()", type_label=new_variable];
134 [label="28_ msg.sender.transfer(transferValue_intou1);\n134-expression_statement-29-29", method="withdraw_ovrflow1()", type_label=expression_statement];
146 [label="32_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n146-function_definition-33-36", method="bug_intou39()", type_label=function_definition];
150 [label="33_ uint8 vundflw =0;\n150-new_variable-34-34", method="bug_intou39()", type_label=new_variable];
156 [label="34_ vundflw = vundflw -10;\n156-expression_statement-35-35", method="bug_intou39()", type_label=expression_statement];
172 [label="37_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n172-function_definition-38-41", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
180 [label="38_ uint8 vundflw1=0;\n180-new_variable-39-39", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
186 [label="39_ vundflw1 = vundflw1 + p_intou36;\n186-expression_statement-40-40", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
210 [label="42_ function receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData) public {\n        Token t = Token(_token);\n        require(t.transferFrom(_from, address(this), _value));\n        emit receivedTokens(_from, _value, _token, _extraData);\n    }\n210-function_definition-43-47", method="receiveApproval(address _from,uint256 _value,address _token,bytes memory _extraData)", type_label=function_definition];
230 [label="43_ Token t = Token(_token);\n230-new_variable-44-44", method="receiveApproval(address _from,uint256 _value,address _token,bytes memory _extraData)", type_label=new_variable];
240 [label="44_ require(t.transferFrom(_from, address(this), _value));\n240-expression_statement-45-45", method="receiveApproval(address _from,uint256 _value,address _token,bytes memory _extraData)", type_label=expression_statement];
266 [label="47_ mapping(address => uint) balances_intou2;\n266-new_variable-48-48", method="", type_label=new_variable];
272 [label="48_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n272-function_definition-49-54", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
288 [label="49_ require(balances_intou2[msg.sender] - _value >= 0);\n288-expression_statement-50-50", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
301 [label="50_ balances_intou2[msg.sender] -= _value;\n301-expression_statement-51-51", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
309 [label="51_ balances_intou2[_to] += _value;\n309-expression_statement-52-52", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
315 [label="52_ return true;\n315-return-53-53", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
332 [label="57_ mapping(address => uint) public lockTime_intou17;\n332-new_variable-58-58", method="", type_label=new_variable];
339 [label="58_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n339-function_definition-59-61", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
347 [label="59_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n347-expression_statement-60-60", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
355 [label="61_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n355-function_definition-62-66", method="withdraw_intou17()", type_label=function_definition];
359 [label="62_ require(now > lockTime_intou17[msg.sender]);\n359-expression_statement-63-63", method="withdraw_intou17()", type_label=expression_statement];
370 [label="63_ uint transferValue_intou17 = 10;\n370-new_variable-64-64", method="withdraw_intou17()", type_label=new_variable];
376 [label="64_ msg.sender.transfer(transferValue_intou17);\n376-expression_statement-65-65", method="withdraw_intou17()", type_label=expression_statement];
388 [label="68_ function totalSupply() public view returns (uint256);\n388-function_definition-69-69", method="totalSupply()", type_label=function_definition];
396 [label="69_ mapping(address => uint) public lockTime_intou37;\n396-new_variable-70-70", method="", type_label=new_variable];
403 [label="70_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n403-function_definition-71-73", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
411 [label="71_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n411-expression_statement-72-72", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
419 [label="73_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n419-function_definition-74-78", method="withdraw_intou37()", type_label=function_definition];
423 [label="74_ require(now > lockTime_intou37[msg.sender]);\n423-expression_statement-75-75", method="withdraw_intou37()", type_label=expression_statement];
434 [label="75_ uint transferValue_intou37 = 10;\n434-new_variable-76-76", method="withdraw_intou37()", type_label=new_variable];
440 [label="76_ msg.sender.transfer(transferValue_intou37);\n440-expression_statement-77-77", method="withdraw_intou37()", type_label=expression_statement];
449 [label="78_ function actualBalanceOf(address _owner) public view returns (uint256 balance);\n449-function_definition-79-79", method="actualBalanceOf(address _owner)", type_label=function_definition];
462 [label="79_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n462-function_definition-80-83", method="bug_intou3()", type_label=function_definition];
466 [label="80_ uint8 vundflw =0;\n466-new_variable-81-81", method="bug_intou3()", type_label=new_variable];
472 [label="81_ vundflw = vundflw -10;\n472-expression_statement-82-82", method="bug_intou3()", type_label=expression_statement];
478 [label="83_ function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n478-function_definition-84-84", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
498 [label="84_ mapping(address => uint) public lockTime_intou9;\n498-new_variable-85-85", method="", type_label=new_variable];
505 [label="85_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n505-function_definition-86-88", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
513 [label="86_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n513-expression_statement-87-87", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
521 [label="88_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n521-function_definition-89-93", method="withdraw_intou9()", type_label=function_definition];
525 [label="89_ require(now > lockTime_intou9[msg.sender]);\n525-expression_statement-90-90", method="withdraw_intou9()", type_label=expression_statement];
536 [label="90_ uint transferValue_intou9 = 10;\n536-new_variable-91-91", method="withdraw_intou9()", type_label=new_variable];
542 [label="91_ msg.sender.transfer(transferValue_intou9);\n542-expression_statement-92-92", method="withdraw_intou9()", type_label=expression_statement];
551 [label="93_ function renounceOwnership() public;\n551-function_definition-94-94", method="renounceOwnership()", type_label=function_definition];
554 [label="94_ mapping(address => uint) public lockTime_intou25;\n554-new_variable-95-95", method="", type_label=new_variable];
561 [label="95_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n561-function_definition-96-98", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
569 [label="96_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n569-expression_statement-97-97", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
577 [label="98_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n577-function_definition-99-103", method="withdraw_intou25()", type_label=function_definition];
581 [label="99_ require(now > lockTime_intou25[msg.sender]);\n581-expression_statement-100-100", method="withdraw_intou25()", type_label=expression_statement];
592 [label="100_ uint transferValue_intou25 = 10;\n592-new_variable-101-101", method="withdraw_intou25()", type_label=new_variable];
598 [label="101_ msg.sender.transfer(transferValue_intou25);\n598-expression_statement-102-102", method="withdraw_intou25()", type_label=expression_statement];
607 [label="103_ function transferOwnership(address _newOwner) public;\n607-function_definition-104-104", method="transferOwnership(address _newOwner)", type_label=function_definition];
614 [label="104_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n614-function_definition-105-108", method="bug_intou19()", type_label=function_definition];
618 [label="105_ uint8 vundflw =0;\n618-new_variable-106-106", method="bug_intou19()", type_label=new_variable];
624 [label="106_ vundflw = vundflw -10;\n624-expression_statement-107-107", method="bug_intou19()", type_label=expression_statement];
630 [label="108_ function pause() public;\n630-function_definition-109-109", method="pause()", type_label=function_definition];
633 [label="109_ mapping(address => uint) balances_intou26;\n633-new_variable-110-110", method="", type_label=new_variable];
639 [label="110_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n639-function_definition-111-116", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
655 [label="111_ require(balances_intou26[msg.sender] - _value >= 0);\n655-expression_statement-112-112", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
668 [label="112_ balances_intou26[msg.sender] -= _value;\n668-expression_statement-113-113", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
676 [label="113_ balances_intou26[_to] += _value;\n676-expression_statement-114-114", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
682 [label="114_ return true;\n682-return-115-115", method="transfer_intou26(address _to,uint _value)", type_label=return];
685 [label="116_ function unpause() public;\n685-function_definition-117-117", method="unpause()", type_label=function_definition];
688 [label="117_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n688-function_definition-118-121", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
696 [label="118_ uint8 vundflw1=0;\n696-new_variable-119-119", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
702 [label="119_ vundflw1 = vundflw1 + p_intou20;\n702-expression_statement-120-120", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
711 [label="123_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"Safe mul error\");\n        return c;\n    }\n711-function_definition-124-131", method="mul(uint256 a,uint256 b)", type_label=function_definition];
728 [label="124_ if_a == 0\n728-if-125-127", method="mul(uint256 a,uint256 b)", type_label=if];
3345 [label="124_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
733 [label="125_ return 0;\n733-return-126-126", method="mul(uint256 a,uint256 b)", type_label=return];
735 [label="127_ uint256 c = a * b;\n735-new_variable-128-128", method="mul(uint256 a,uint256 b)", type_label=new_variable];
743 [label="128_ require(c / a == b, \"Safe mul error\");\n743-expression_statement-129-129", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
755 [label="129_ return c;\n755-return-130-130", method="mul(uint256 a,uint256 b)", type_label=return];
757 [label="131_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"Safe div error\");\n        uint256 c = a / b;\n        return c;\n    }\n757-function_definition-132-136", method="div(uint256 a,uint256 b)", type_label=function_definition];
774 [label="132_ require(b > 0, \"Safe div error\");\n774-expression_statement-133-133", method="div(uint256 a,uint256 b)", type_label=expression_statement];
784 [label="133_ uint256 c = a / b;\n784-new_variable-134-134", method="div(uint256 a,uint256 b)", type_label=new_variable];
792 [label="134_ return c;\n792-return-135-135", method="div(uint256 a,uint256 b)", type_label=return];
794 [label="136_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"Safe sub error\");\n        uint256 c = a - b;\n        return c;\n    }\n794-function_definition-137-141", method="sub(uint256 a,uint256 b)", type_label=function_definition];
811 [label="137_ require(b <= a, \"Safe sub error\");\n811-expression_statement-138-138", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
821 [label="138_ uint256 c = a - b;\n821-new_variable-139-139", method="sub(uint256 a,uint256 b)", type_label=new_variable];
829 [label="139_ return c;\n829-return-140-140", method="sub(uint256 a,uint256 b)", type_label=return];
831 [label="141_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"Safe add error\");\n        return c;\n    }\n831-function_definition-142-146", method="add(uint256 a,uint256 b)", type_label=function_definition];
848 [label="142_ uint256 c = a + b;\n848-new_variable-143-143", method="add(uint256 a,uint256 b)", type_label=new_variable];
856 [label="143_ require(c >= a, \"Safe add error\");\n856-expression_statement-144-144", method="add(uint256 a,uint256 b)", type_label=expression_statement];
866 [label="144_ return c;\n866-return-145-145", method="add(uint256 a,uint256 b)", type_label=return];
868 [label="146_ function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"Safe mod error\");\n        return a % b;\n    }\n868-function_definition-147-150", method="mod(uint256 a,uint256 b)", type_label=function_definition];
885 [label="147_ require(b != 0, \"Safe mod error\");\n885-expression_statement-148-148", method="mod(uint256 a,uint256 b)", type_label=expression_statement];
895 [label="148_ return a % b;\n895-return-149-149", method="mod(uint256 a,uint256 b)", type_label=return];
913 [label="153_ mapping(address => uint) public lockTime_intou5;\n913-new_variable-154-154", method="", type_label=new_variable];
920 [label="154_ function increaseLockTime_intou5(uint _secondsToIncrease) public {\n        lockTime_intou5[msg.sender] += _secondsToIncrease;   \n    }\n920-function_definition-155-157", method="increaseLockTime_intou5(uint _secondsToIncrease)", type_label=function_definition];
928 [label="155_ lockTime_intou5[msg.sender] += _secondsToIncrease;\n928-expression_statement-156-156", method="increaseLockTime_intou5(uint _secondsToIncrease)", type_label=expression_statement];
936 [label="157_ function withdraw_intou5() public {\n        require(now > lockTime_intou5[msg.sender]);    \n        uint transferValue_intou5 = 10;           \n        msg.sender.transfer(transferValue_intou5);\n    }\n936-function_definition-158-162", method="withdraw_intou5()", type_label=function_definition];
940 [label="158_ require(now > lockTime_intou5[msg.sender]);\n940-expression_statement-159-159", method="withdraw_intou5()", type_label=expression_statement];
951 [label="159_ uint transferValue_intou5 = 10;\n951-new_variable-160-160", method="withdraw_intou5()", type_label=new_variable];
957 [label="160_ msg.sender.transfer(transferValue_intou5);\n957-expression_statement-161-161", method="withdraw_intou5()", type_label=expression_statement];
966 [label="162_ uint public minimumQuorum;\n966-new_variable-163-163", method="", type_label=new_variable];
971 [label="163_ function bug_intou15() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n971-function_definition-164-167", method="bug_intou15()", type_label=function_definition];
975 [label="164_ uint8 vundflw =0;\n975-new_variable-165-165", method="bug_intou15()", type_label=new_variable];
981 [label="165_ vundflw = vundflw -10;\n981-expression_statement-166-166", method="bug_intou15()", type_label=expression_statement];
987 [label="167_ uint public minimumTokensToVote;\n987-new_variable-168-168", method="", type_label=new_variable];
992 [label="168_ function bug_intou28(uint8 p_intou28) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou28;    \n}\n992-function_definition-169-172", method="bug_intou28(uint8 p_intou28)", type_label=function_definition];
1000 [label="169_ uint8 vundflw1=0;\n1000-new_variable-170-170", method="bug_intou28(uint8 p_intou28)", type_label=new_variable];
1006 [label="170_ vundflw1 = vundflw1 + p_intou28;\n1006-expression_statement-171-171", method="bug_intou28(uint8 p_intou28)", type_label=expression_statement];
1012 [label="172_ uint public debatingPeriodInMinutes;\n1012-new_variable-173-173", method="", type_label=new_variable];
1017 [label="173_ mapping(address => uint) balances_intou34;\n1017-new_variable-174-174", method="", type_label=new_variable];
1023 [label="174_ function transfer_intou34(address _to, uint _value) public returns (bool) {\n    require(balances_intou34[msg.sender] - _value >= 0);   \n    balances_intou34[msg.sender] -= _value;   \n    balances_intou34[_to] += _value;   \n    return true;\n  }\n1023-function_definition-175-180", method="transfer_intou34(address _to,uint _value)", type_label=function_definition];
1039 [label="175_ require(balances_intou34[msg.sender] - _value >= 0);\n1039-expression_statement-176-176", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
1052 [label="176_ balances_intou34[msg.sender] -= _value;\n1052-expression_statement-177-177", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
1060 [label="177_ balances_intou34[_to] += _value;\n1060-expression_statement-178-178", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
1066 [label="178_ return true;\n1066-return-179-179", method="transfer_intou34(address _to,uint _value)", type_label=return];
1069 [label="180_ Proposal[] public proposals;\n1069-new_variable-181-181", method="", type_label=new_variable];
1076 [label="181_ mapping(address => uint) public lockTime_intou21;\n1076-new_variable-182-182", method="", type_label=new_variable];
1083 [label="182_ function increaseLockTime_intou21(uint _secondsToIncrease) public {\n        lockTime_intou21[msg.sender] += _secondsToIncrease;   \n    }\n1083-function_definition-183-185", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=function_definition];
1091 [label="183_ lockTime_intou21[msg.sender] += _secondsToIncrease;\n1091-expression_statement-184-184", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=expression_statement];
1099 [label="185_ function withdraw_intou21() public {\n        require(now > lockTime_intou21[msg.sender]);    \n        uint transferValue_intou21 = 10;           \n        msg.sender.transfer(transferValue_intou21);\n    }\n1099-function_definition-186-190", method="withdraw_intou21()", type_label=function_definition];
1103 [label="186_ require(now > lockTime_intou21[msg.sender]);\n1103-expression_statement-187-187", method="withdraw_intou21()", type_label=expression_statement];
1114 [label="187_ uint transferValue_intou21 = 10;\n1114-new_variable-188-188", method="withdraw_intou21()", type_label=new_variable];
1120 [label="188_ msg.sender.transfer(transferValue_intou21);\n1120-expression_statement-189-189", method="withdraw_intou21()", type_label=expression_statement];
1129 [label="190_ uint public numProposals;\n1129-new_variable-191-191", method="", type_label=new_variable];
1134 [label="191_ mapping(address => uint) balances_intou10;\n1134-new_variable-192-192", method="", type_label=new_variable];
1140 [label="192_ function transfer_intou10(address _to, uint _value) public returns (bool) {\n    require(balances_intou10[msg.sender] - _value >= 0);   \n    balances_intou10[msg.sender] -= _value;   \n    balances_intou10[_to] += _value;   \n    return true;\n  }\n1140-function_definition-193-198", method="transfer_intou10(address _to,uint _value)", type_label=function_definition];
1156 [label="193_ require(balances_intou10[msg.sender] - _value >= 0);\n1156-expression_statement-194-194", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
1169 [label="194_ balances_intou10[msg.sender] -= _value;\n1169-expression_statement-195-195", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
1177 [label="195_ balances_intou10[_to] += _value;\n1177-expression_statement-196-196", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
1183 [label="196_ return true;\n1183-return-197-197", method="transfer_intou10(address _to,uint _value)", type_label=return];
1186 [label="198_ Token public tokenAddress;\n1186-new_variable-199-199", method="", type_label=new_variable];
1192 [label="199_ mapping(address => uint) balances_intou22;\n1192-new_variable-200-200", method="", type_label=new_variable];
1198 [label="200_ function transfer_intou22(address _to, uint _value) public returns (bool) {\n    require(balances_intou22[msg.sender] - _value >= 0);   \n    balances_intou22[msg.sender] -= _value;   \n    balances_intou22[_to] += _value;   \n    return true;\n  }\n1198-function_definition-201-206", method="transfer_intou22(address _to,uint _value)", type_label=function_definition];
1214 [label="201_ require(balances_intou22[msg.sender] - _value >= 0);\n1214-expression_statement-202-202", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
1227 [label="202_ balances_intou22[msg.sender] -= _value;\n1227-expression_statement-203-203", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
1235 [label="203_ balances_intou22[_to] += _value;\n1235-expression_statement-204-204", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
1241 [label="204_ return true;\n1241-return-205-205", method="transfer_intou22(address _to,uint _value)", type_label=return];
1244 [label="206_ address chairmanAddress;\n1244-new_variable-207-207", method="", type_label=new_variable];
1248 [label="207_ function bug_intou12(uint8 p_intou12) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou12;    \n}\n1248-function_definition-208-211", method="bug_intou12(uint8 p_intou12)", type_label=function_definition];
1256 [label="208_ uint8 vundflw1=0;\n1256-new_variable-209-209", method="bug_intou12(uint8 p_intou12)", type_label=new_variable];
1262 [label="209_ vundflw1 = vundflw1 + p_intou12;\n1262-expression_statement-210-210", method="bug_intou12(uint8 p_intou12)", type_label=expression_statement];
1268 [label="211_ bool public initialized = false;\n1268-new_variable-212-212", method="", type_label=new_variable];
1275 [label="212_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1275-function_definition-213-216", method="bug_intou35()", type_label=function_definition];
1279 [label="213_ uint8 vundflw =0;\n1279-new_variable-214-214", method="bug_intou35()", type_label=new_variable];
1285 [label="214_ vundflw = vundflw -10;\n1285-expression_statement-215-215", method="bug_intou35()", type_label=expression_statement];
1293 [label="217_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n1293-function_definition-218-221", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
1301 [label="218_ uint8 vundflw1=0;\n1301-new_variable-219-219", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
1307 [label="219_ vundflw1 = vundflw1 + p_intou40;\n1307-expression_statement-220-220", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
1331 [label="222_ mapping(address => uint) public lockTime_intou33;\n1331-new_variable-223-223", method="", type_label=new_variable];
1338 [label="223_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n1338-function_definition-224-226", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
1346 [label="224_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n1346-expression_statement-225-225", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
1354 [label="226_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n1354-function_definition-227-231", method="withdraw_intou33()", type_label=function_definition];
1358 [label="227_ require(now > lockTime_intou33[msg.sender]);\n1358-expression_statement-228-228", method="withdraw_intou33()", type_label=expression_statement];
1369 [label="228_ uint transferValue_intou33 = 10;\n1369-new_variable-229-229", method="withdraw_intou33()", type_label=new_variable];
1375 [label="229_ msg.sender.transfer(transferValue_intou33);\n1375-expression_statement-230-230", method="withdraw_intou33()", type_label=expression_statement];
1398 [label="232_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1398-function_definition-233-236", method="bug_intou27()", type_label=function_definition];
1402 [label="233_ uint8 vundflw =0;\n1402-new_variable-234-234", method="bug_intou27()", type_label=new_variable];
1408 [label="234_ vundflw = vundflw -10;\n1408-expression_statement-235-235", method="bug_intou27()", type_label=expression_statement];
1432 [label="237_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1432-function_definition-238-241", method="bug_intou31()", type_label=function_definition];
1436 [label="238_ uint8 vundflw =0;\n1436-new_variable-239-239", method="bug_intou31()", type_label=new_variable];
1442 [label="239_ vundflw = vundflw -10;\n1442-expression_statement-240-240", method="bug_intou31()", type_label=expression_statement];
1470 [label="242_ mapping(address => uint) public lockTime_intou13;\n1470-new_variable-243-243", method="", type_label=new_variable];
1477 [label="243_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n1477-function_definition-244-246", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
1485 [label="244_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n1485-expression_statement-245-245", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
1493 [label="246_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n1493-function_definition-247-251", method="withdraw_intou13()", type_label=function_definition];
1497 [label="247_ require(now > lockTime_intou13[msg.sender]);\n1497-expression_statement-248-248", method="withdraw_intou13()", type_label=expression_statement];
1508 [label="248_ uint transferValue_intou13 = 10;\n1508-new_variable-249-249", method="withdraw_intou13()", type_label=new_variable];
1514 [label="249_ msg.sender.transfer(transferValue_intou13);\n1514-expression_statement-250-250", method="withdraw_intou13()", type_label=expression_statement];
1537 [label="252_ struct Proposal {\n        address recipient;\n        uint amount;\n        string description;\n        bool signedByChairman;\n        uint minExecutionDate;\n        bool executed;\n        bool proposalPassed;\n        uint numberOfVotes;\n        bytes32 proposalHash;\n        Vote[] votes;\n        mapping (address => bool) voted;\n    }\n1537-expression_statement-253-265", method="Proposal()", type_label=expression_statement];
1587 [label="265_ struct Vote {\n        bool inSupport;\n        address voter;\n    }\n1587-expression_statement-266-269", method="Vote()", type_label=expression_statement];
1597 [label="269_ modifier onlyTokenholders {\n        require(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote);\n        _;\n    }\n1597-expression_statement-270-273", method="", type_label=expression_statement];
1600 [label="270_ require(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote);\n1600-expression_statement-271-271", method="", type_label=expression_statement];
1614 [label="271_ _;\n1614-expression_statement-272-272", method="", type_label=expression_statement];
1616 [label="273_ modifier onlyChairman {\n        require(msg.sender == chairmanAddress);\n        _;\n    }\n1616-expression_statement-274-277", method="", type_label=expression_statement];
1619 [label="274_ require(msg.sender == chairmanAddress);\n1619-expression_statement-275-275", method="", type_label=expression_statement];
1628 [label="275_ _;\n1628-expression_statement-276-276", method="", type_label=expression_statement];
1632 [label="279_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n1632-function_definition-280-283", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
1640 [label="280_ uint8 vundflw1=0;\n1640-new_variable-281-281", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
1646 [label="281_ vundflw1 = vundflw1 + p_intou32;\n1646-expression_statement-282-282", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
1652 [label="283_ function init(Token _tokenAddress, address _chairmanAddress, uint _minimumTokensToVote, uint _minimumPercentToPassAVote, uint _minutesForDebate) onlyOwner public {\n        require(!initialized);\n        initialized = true;\n        changeVotingRules(_tokenAddress, _chairmanAddress, _minimumTokensToVote, _minimumPercentToPassAVote, _minutesForDebate);\n        emit Initialized();\n    }\n1652-function_definition-284-289", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=function_definition];
1675 [label="283_ onlyOwner\n1675-expression_statement-284-284", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1679 [label="284_ require(!initialized);\n1679-expression_statement-285-285", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1685 [label="285_ initialized = true;\n1685-expression_statement-286-286", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1690 [label="286_ changeVotingRules(_tokenAddress, _chairmanAddress, _minimumTokensToVote, _minimumPercentToPassAVote, _minutesForDebate);\n1690-expression_statement-287-287", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1705 [label="289_ mapping(address => uint) balances_intou38;\n1705-new_variable-290-290", method="", type_label=new_variable];
1711 [label="290_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n1711-function_definition-291-296", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
1727 [label="291_ require(balances_intou38[msg.sender] - _value >= 0);\n1727-expression_statement-292-292", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1740 [label="292_ balances_intou38[msg.sender] -= _value;\n1740-expression_statement-293-293", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1748 [label="293_ balances_intou38[_to] += _value;\n1748-expression_statement-294-294", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1754 [label="294_ return true;\n1754-return-295-295", method="transfer_intou38(address _to,uint _value)", type_label=return];
1757 [label="296_ function changeVotingRules(Token _tokenAddress, address _chairmanAddress, uint _minimumTokensToVote, uint _minimumPercentToPassAVote, uint _minutesForDebate) onlyOwner public {\n        require(_chairmanAddress != address(0));\n        require(_minimumPercentToPassAVote <= 51);\n        tokenAddress = Token(_tokenAddress);\n        chairmanAddress = _chairmanAddress;\n        if (_minimumTokensToVote == 0 ) _minimumTokensToVote = 1;\n        minimumTokensToVote = _minimumTokensToVote;\n        if (_minimumPercentToPassAVote == 0 ) _minimumPercentToPassAVote = 51;\n        minimumQuorum = _minimumPercentToPassAVote;\n        debatingPeriodInMinutes = _minutesForDebate;\n        emit ChangeOfRules(_minimumTokensToVote, minimumQuorum, debatingPeriodInMinutes, address(tokenAddress), chairmanAddress);\n    }\n1757-function_definition-297-308", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=function_definition];
1780 [label="296_ onlyOwner\n1780-expression_statement-297-297", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1784 [label="297_ require(_chairmanAddress != address(0));\n1784-expression_statement-298-298", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1793 [label="298_ require(_minimumPercentToPassAVote <= 51);\n1793-expression_statement-299-299", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1800 [label="299_ tokenAddress = Token(_tokenAddress);\n1800-expression_statement-300-300", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1807 [label="300_ chairmanAddress = _chairmanAddress;\n1807-expression_statement-301-301", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1811 [label="301_ if__minimumTokensToVote == 0\n1811-if-302-302", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=if];
4428 [label="301_ end_if", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=end_if];
1815 [label="301_ _minimumTokensToVote = 1;\n1815-expression_statement-302-302", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1819 [label="302_ minimumTokensToVote = _minimumTokensToVote;\n1819-expression_statement-303-303", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1823 [label="303_ if__minimumPercentToPassAVote == 0\n1823-if-304-304", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=if];
4440 [label="303_ end_if", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=end_if];
1827 [label="303_ _minimumPercentToPassAVote = 51;\n1827-expression_statement-304-304", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1831 [label="304_ minimumQuorum = _minimumPercentToPassAVote;\n1831-expression_statement-305-305", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1835 [label="305_ debatingPeriodInMinutes = _minutesForDebate;\n1835-expression_statement-306-306", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1853 [label="308_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n1853-function_definition-309-312", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
1861 [label="309_ uint8 vundflw1=0;\n1861-new_variable-310-310", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
1867 [label="310_ vundflw1 = vundflw1 + p_intou4;\n1867-expression_statement-311-311", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
1873 [label="312_ function newProposal(\n        address destination,\n        uint weiAmount,\n        string memory transactionDescription,\n        bytes memory transactionBytecode\n    )\n        onlyTokenholders public\n        returns (uint proposalID)\n    {\n        proposalID = proposals.length++;\n        Proposal storage p = proposals[proposalID];\n        p.recipient = destination;\n        p.signedByChairman = false;\n        p.amount = weiAmount;\n        p.description = transactionDescription;\n        p.proposalHash = keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n        p.minExecutionDate = now + debatingPeriodInMinutes * 1 minutes;\n        p.executed = false;\n        p.proposalPassed = false;\n        p.numberOfVotes = 0;\n        emit ProposalAdded(proposalID, destination, weiAmount, transactionDescription);\n        numProposals = proposalID+1;\n        return proposalID;\n    }\n1873-function_definition-313-336", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=function_definition];
1891 [label="318_ onlyTokenholders\n1891-expression_statement-319-319", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1900 [label="321_ proposalID = proposals.length++;\n1900-expression_statement-322-322", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1903 [label="321_ proposals.length++\n1903-expression_statement-322-322", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1907 [label="322_ Proposal storage p = proposals[proposalID];\n1907-new_variable-323-323", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=new_variable];
1916 [label="323_ p.recipient = destination;\n1916-expression_statement-324-324", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1922 [label="324_ p.signedByChairman = false;\n1922-expression_statement-325-325", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1929 [label="325_ p.amount = weiAmount;\n1929-expression_statement-326-326", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1935 [label="326_ p.description = transactionDescription;\n1935-expression_statement-327-327", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1941 [label="327_ p.proposalHash = keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n1941-expression_statement-328-328", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1959 [label="328_ p.minExecutionDate = now + debatingPeriodInMinutes * 1 minutes;\n1959-expression_statement-329-329", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1970 [label="329_ p.executed = false;\n1970-expression_statement-330-330", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1977 [label="330_ p.proposalPassed = false;\n1977-expression_statement-331-331", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1984 [label="331_ p.numberOfVotes = 0;\n1984-expression_statement-332-332", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
2000 [label="333_ numProposals = proposalID+1;\n2000-expression_statement-334-334", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
2006 [label="334_ return proposalID;\n2006-return-335-335", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=return];
2008 [label="336_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2008-function_definition-337-340", method="bug_intou7()", type_label=function_definition];
2012 [label="337_ uint8 vundflw =0;\n2012-new_variable-338-338", method="bug_intou7()", type_label=new_variable];
2018 [label="338_ vundflw = vundflw -10;\n2018-expression_statement-339-339", method="bug_intou7()", type_label=expression_statement];
2024 [label="340_ function checkProposalCode(\n        uint proposalNumber,\n        address destination,\n        uint weiAmount,\n        bytes memory transactionBytecode\n    )\n        view public\n        returns (bool codeChecksOut)\n    {\n        Proposal storage p = proposals[proposalNumber];\n        return p.proposalHash == keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n    }\n2024-function_definition-341-352", method="checkProposalCode(uint proposalNumber,address destination,uint weiAmount,bytes memory transactionBytecode)", type_label=function_definition];
2050 [label="349_ Proposal storage p = proposals[proposalNumber];\n2050-new_variable-350-350", method="checkProposalCode(uint proposalNumber,address destination,uint weiAmount,bytes memory transactionBytecode)", type_label=new_variable];
2059 [label="350_ return p.proposalHash == keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n2059-return-351-351", method="checkProposalCode(uint proposalNumber,address destination,uint weiAmount,bytes memory transactionBytecode)", type_label=return];
2077 [label="352_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2077-function_definition-353-356", method="bug_intou23()", type_label=function_definition];
2081 [label="353_ uint8 vundflw =0;\n2081-new_variable-354-354", method="bug_intou23()", type_label=new_variable];
2087 [label="354_ vundflw = vundflw -10;\n2087-expression_statement-355-355", method="bug_intou23()", type_label=expression_statement];
2093 [label="356_ function sign(\n        uint proposalNumber,\n        bool signProposal\n    )\n        onlyTokenholders public\n        returns (uint voteID)\n    {\n        require(initialized);\n        Proposal storage p = proposals[proposalNumber];\n        require(msg.sender == chairmanAddress);\n        require(signProposal == true);\n        p.signedByChairman = signProposal;\n        emit ProposalSignedByChairman(proposalNumber,  signProposal, msg.sender);\n        return proposalNumber;\n    }\n2093-function_definition-357-371", method="sign(uint proposalNumber,bool signProposal)", type_label=function_definition];
2103 [label="360_ onlyTokenholders\n2103-expression_statement-361-361", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
2112 [label="363_ require(initialized);\n2112-expression_statement-364-364", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
2117 [label="364_ Proposal storage p = proposals[proposalNumber];\n2117-new_variable-365-365", method="sign(uint proposalNumber,bool signProposal)", type_label=new_variable];
2126 [label="365_ require(msg.sender == chairmanAddress);\n2126-expression_statement-366-366", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
2135 [label="366_ require(signProposal == true);\n2135-expression_statement-367-367", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
2143 [label="367_ p.signedByChairman = signProposal;\n2143-expression_statement-368-368", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
2159 [label="369_ return proposalNumber;\n2159-return-370-370", method="sign(uint proposalNumber,bool signProposal)", type_label=return];
2161 [label="371_ mapping(address => uint) balances_intou14;\n2161-new_variable-372-372", method="", type_label=new_variable];
2167 [label="372_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n2167-function_definition-373-378", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
2183 [label="373_ require(balances_intou14[msg.sender] - _value >= 0);\n2183-expression_statement-374-374", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
2196 [label="374_ balances_intou14[msg.sender] -= _value;\n2196-expression_statement-375-375", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
2204 [label="375_ balances_intou14[_to] += _value;\n2204-expression_statement-376-376", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
2210 [label="376_ return true;\n2210-return-377-377", method="transfer_intou14(address _to,uint _value)", type_label=return];
2213 [label="378_ function vote(\n        uint proposalNumber,\n        bool supportsProposal\n    )\n        onlyTokenholders public\n        returns (uint voteID)\n    {\n        Proposal storage p = proposals[proposalNumber];\n        require(p.voted[msg.sender] != true);\n        voteID = p.votes.length++;\n        p.votes[voteID] = Vote({inSupport: supportsProposal, voter: msg.sender});\n        p.voted[msg.sender] = true;\n        p.numberOfVotes = voteID +1;\n        emit Voted(proposalNumber,  supportsProposal, msg.sender);\n        return voteID;\n    }\n2213-function_definition-379-394", method="vote(uint proposalNumber,bool supportsProposal)", type_label=function_definition];
2223 [label="382_ onlyTokenholders\n2223-expression_statement-383-383", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2232 [label="385_ Proposal storage p = proposals[proposalNumber];\n2232-new_variable-386-386", method="vote(uint proposalNumber,bool supportsProposal)", type_label=new_variable];
2241 [label="386_ require(p.voted[msg.sender] != true);\n2241-expression_statement-387-387", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2255 [label="387_ voteID = p.votes.length++;\n2255-expression_statement-388-388", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2258 [label="387_ p.votes.length++\n2258-expression_statement-388-388", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2264 [label="388_ p.votes[voteID] = Vote({inSupport: supportsProposal, voter: msg.sender});\n2264-expression_statement-389-389", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2282 [label="389_ p.voted[msg.sender] = true;\n2282-expression_statement-390-390", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2293 [label="390_ p.numberOfVotes = voteID +1;\n2293-expression_statement-391-391", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2311 [label="392_ return voteID;\n2311-return-393-393", method="vote(uint proposalNumber,bool supportsProposal)", type_label=return];
2313 [label="394_ mapping(address => uint) balances_intou30;\n2313-new_variable-395-395", method="", type_label=new_variable];
2319 [label="395_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n2319-function_definition-396-401", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
2335 [label="396_ require(balances_intou30[msg.sender] - _value >= 0);\n2335-expression_statement-397-397", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
2348 [label="397_ balances_intou30[msg.sender] -= _value;\n2348-expression_statement-398-398", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
2356 [label="398_ balances_intou30[_to] += _value;\n2356-expression_statement-399-399", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
2362 [label="399_ return true;\n2362-return-400-400", method="transfer_intou30(address _to,uint _value)", type_label=return];
2365 [label="401_ function executeProposal(uint proposalNumber, bytes memory transactionBytecode) public {\n        Proposal storage p = proposals[proposalNumber];\n        require(initialized);\n        require(now > p.minExecutionDate                                              \n            && !p.executed                                                           \n            && p.proposalHash == keccak256(abi.encodePacked(p.recipient, p.amount, transactionBytecode)));  \n        uint quorum = 0;\n        uint yea = 0;\n        uint nay = 0;\n        for (uint i = 0; i <  p.votes.length; ++i) {\n            Vote storage v = p.votes[i];\n            uint voteWeight = tokenAddress.actualBalanceOf(v.voter);\n            quorum += voteWeight;\n            if (v.inSupport) {\n                yea += voteWeight;\n            } else {\n                nay += voteWeight;\n            }\n        }\n        Token t = Token(tokenAddress);\n        require(quorum >= t.totalSupply().mul(minimumQuorum).div(100));  \n        if (yea > nay ) {\n            p.executed = true;\n            (bool success, ) = p.recipient.call.value(p.amount)(transactionBytecode);\n            require(success);\n            p.proposalPassed = true;\n        } else {\n            p.proposalPassed = false;\n        }\n        emit ProposalTallied(proposalNumber, yea - nay, quorum, p.proposalPassed);\n    }\n2365-function_definition-402-432", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=function_definition];
2377 [label="402_ Proposal storage p = proposals[proposalNumber];\n2377-new_variable-403-403", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2386 [label="403_ require(initialized);\n2386-expression_statement-404-404", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2391 [label="404_ require(now > p.minExecutionDate                                              \n            && !p.executed                                                           \n            && p.proposalHash == keccak256(abi.encodePacked(p.recipient, p.amount, transactionBytecode)));\n2391-expression_statement-405-407", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2427 [label="407_ uint quorum = 0;\n2427-new_variable-408-408", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2433 [label="408_ uint yea = 0;\n2433-new_variable-409-409", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2439 [label="409_ uint nay = 0;\n2439-new_variable-410-410", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2445 [label="410_ for(i <  p.votes.length;;++i)\n2445-for-411-420", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=for];
5062 [label="410_ end_loop", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=end_loop];
2460 [label="410_ ++i\n2460-expression_statement-411-411", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2463 [label="411_ Vote storage v = p.votes[i];\n2463-new_variable-412-412", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2474 [label="412_ uint voteWeight = tokenAddress.actualBalanceOf(v.voter);\n2474-new_variable-413-413", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2487 [label="413_ quorum += voteWeight;\n2487-expression_statement-414-414", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2491 [label="414_ if\n2491-if-415-419", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=if];
5108 [label="414_ end_if", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=end_if];
2496 [label="415_ yea += voteWeight;\n2496-expression_statement-416-416", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2501 [label="417_ nay += voteWeight;\n2501-expression_statement-418-418", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2505 [label="420_ Token t = Token(tokenAddress);\n2505-new_variable-421-421", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2515 [label="421_ require(quorum >= t.totalSupply().mul(minimumQuorum).div(100));\n2515-expression_statement-422-422", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2535 [label="422_ if_yea > nay\n2535-if-423-430", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=if];
5152 [label="422_ end_if", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=end_if];
2540 [label="423_ p.executed = true;\n2540-expression_statement-424-424", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2547 [label="424_ (bool success, ) = p.recipient.call.value(p.amount)(transactionBytecode);\n2547-new_variable-425-425", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2568 [label="425_ require(success);\n2568-expression_statement-426-426", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2573 [label="426_ p.proposalPassed = true;\n2573-expression_statement-427-427", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2581 [label="428_ p.proposalPassed = false;\n2581-expression_statement-429-429", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2602 [label="432_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n2602-function_definition-433-436", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
2610 [label="433_ uint8 vundflw1=0;\n2610-new_variable-434-434", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
2616 [label="434_ vundflw1 = vundflw1 + p_intou8;\n2616-expression_statement-435-435", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
2588;
13 -> 21  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
21 -> 27  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
46 -> 50  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
50 -> 56  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
65 -> 74  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
76 -> 86  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
97 -> 105  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
113 -> 117  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
117 -> 128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
128 -> 134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
146 -> 150  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
150 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
172 -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
180 -> 186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
210 -> 230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
272 -> 288  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
288 -> 301  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
301 -> 309  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
309 -> 315  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
315 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
339 -> 347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
355 -> 359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
359 -> 370  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
370 -> 376  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
403 -> 411  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
419 -> 423  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
423 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
434 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
462 -> 466  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
466 -> 472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
505 -> 513  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
521 -> 525  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
525 -> 536  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
536 -> 542  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
561 -> 569  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
577 -> 581  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
581 -> 592  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
592 -> 598  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
614 -> 618  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
618 -> 624  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
639 -> 655  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
655 -> 668  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
668 -> 676  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
676 -> 682  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
682 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
688 -> 696  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
696 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
711 -> 728  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
728 -> 733  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
728 -> 3345  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3345 -> 735  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
733 -> 3345  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
733 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
735 -> 743  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
743 -> 755  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
755 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
757 -> 774  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
774 -> 784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
784 -> 792  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
792 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
794 -> 811  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
811 -> 821  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
821 -> 829  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
829 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
831 -> 848  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
848 -> 856  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
856 -> 866  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
866 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
868 -> 885  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
885 -> 895  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
895 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
920 -> 928  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
936 -> 940  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
940 -> 951  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
951 -> 957  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
971 -> 975  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
975 -> 981  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
992 -> 1000  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1000 -> 1006  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1012 -> 1017  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1023 -> 1039  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1039 -> 1052  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1052 -> 1060  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1060 -> 1066  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1066 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1069 -> 1076  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1083 -> 1091  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1099 -> 1103  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1103 -> 1114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1114 -> 1120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1129 -> 1134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1140 -> 1156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1156 -> 1169  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1169 -> 1177  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1177 -> 1183  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1183 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1186 -> 1192  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1198 -> 1214  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1214 -> 1227  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1227 -> 1235  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1235 -> 1241  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1241 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1248 -> 1256  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1256 -> 1262  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1275 -> 1279  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1279 -> 1285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1293 -> 1301  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1301 -> 1307  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1338 -> 1346  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1354 -> 1358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1358 -> 1369  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1369 -> 1375  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1398 -> 1402  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1402 -> 1408  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1432 -> 1436  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1436 -> 1442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1477 -> 1485  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1493 -> 1497  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1497 -> 1508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1508 -> 1514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1537 -> 1587  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1587 -> 1597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1597 -> 1616  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1600 -> 1614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1619 -> 1628  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1632 -> 1640  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1640 -> 1646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1652 -> 1679  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1679 -> 1685  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1685 -> 1690  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1711 -> 1727  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1727 -> 1740  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1740 -> 1748  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1748 -> 1754  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1754 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1757 -> 1784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1784 -> 1793  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1793 -> 1800  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1800 -> 1807  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1807 -> 1811  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1811 -> 1815  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1811 -> 4428  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4428 -> 1819  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1815 -> 4428  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1819 -> 1823  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1823 -> 1827  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1823 -> 4440  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4440 -> 1831  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1827 -> 4440  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1831 -> 1835  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1853 -> 1861  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1861 -> 1867  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1873 -> 1900  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1900 -> 1907  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1907 -> 1916  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1916 -> 1922  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1922 -> 1929  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1929 -> 1935  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1935 -> 1941  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1941 -> 1959  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1959 -> 1970  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1970 -> 1977  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1977 -> 1984  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2000 -> 2006  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2006 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2008 -> 2012  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2012 -> 2018  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2024 -> 2050  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2050 -> 2059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2059 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2077 -> 2081  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2081 -> 2087  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2093 -> 2112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2112 -> 2117  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2117 -> 2126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2126 -> 2135  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2135 -> 2143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2159 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2167 -> 2183  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2183 -> 2196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2196 -> 2204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2204 -> 2210  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2210 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2213 -> 2232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2232 -> 2241  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2241 -> 2255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2255 -> 2264  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2264 -> 2282  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2282 -> 2293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2311 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2319 -> 2335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2335 -> 2348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2348 -> 2356  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2356 -> 2362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2362 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2365 -> 2377  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2377 -> 2386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2386 -> 2391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2391 -> 2427  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2427 -> 2433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2433 -> 2439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2439 -> 2445  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2445 -> 2463  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2445 -> 5062  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
5062 -> 2505  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2460 -> 2445  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
2463 -> 2474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2474 -> 2487  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2487 -> 2491  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2491 -> 2496  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2491 -> 2501  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
5108 -> 2460  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
5108 -> 2460  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
2496 -> 5108  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2501 -> 5108  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2505 -> 2515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2515 -> 2535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2535 -> 2540  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2535 -> 2581  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
5152 -> 2588  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2540 -> 2547  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2547 -> 2568  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2568 -> 2573  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2573 -> 5152  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2581 -> 5152  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2602 -> 2610  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2610 -> 2616  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
