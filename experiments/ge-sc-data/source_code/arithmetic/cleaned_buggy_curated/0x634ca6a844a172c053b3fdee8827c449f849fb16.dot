digraph  {
13 [label="2_ address private _owner;\n13-new_variable-3-3", type_label=new_variable];
30 [label="5_ _owner = msg.sender;\n30-expression_statement-6-6", type_label=expression_statement];
44 [label="8_ owner\n44-function_definition-9-11", type_label=function_definition];
53 [label="9_ return _owner;\n53-return-10-10", type_label=return];
55 [label="11_ modifier onlyOwner() {\n         require(isOwner());\n         _;\n     }\n55-expression_statement-12-15", type_label=expression_statement];
58 [label="12_ require(isOwner());\n58-expression_statement-13-13", type_label=expression_statement];
64 [label="13_ _;\n64-expression_statement-14-14", type_label=expression_statement];
66 [label="15_ isOwner\n66-function_definition-16-18", type_label=function_definition];
75 [label="16_ return msg.sender == _owner;\n75-return-17-17", type_label=return];
81 [label="18_ renounceOwnership\n81-function_definition-19-22", type_label=function_definition];
84 [label="18_ onlyOwner\n84-expression_statement-19-19", type_label=expression_statement];
95 [label="20_ _owner = address(0);\n95-expression_statement-21-21", type_label=expression_statement];
101 [label="22_ transferOwnership\n101-function_definition-23-25", type_label=function_definition];
108 [label="22_ onlyOwner\n108-expression_statement-23-23", type_label=expression_statement];
111 [label="23_ _transferOwnership(newOwner);\n111-expression_statement-24-24", type_label=expression_statement];
116 [label="25_ _transferOwnership\n116-function_definition-26-30", type_label=function_definition];
124 [label="26_ require(newOwner != address(0));\n124-expression_statement-27-27", type_label=expression_statement];
139 [label="28_ _owner = newOwner;\n139-expression_statement-29-29", type_label=expression_statement];
153 [label="34_ bool public paused = false;\n153-new_variable-35-35", type_label=new_variable];
160 [label="35_ modifier whenNotPaused() {\n     require(!paused);\n     _;\n   }\n160-expression_statement-36-39", type_label=expression_statement];
163 [label="36_ require(!paused);\n163-expression_statement-37-37", type_label=expression_statement];
169 [label="37_ _;\n169-expression_statement-38-38", type_label=expression_statement];
171 [label="39_ modifier whenPaused() {\n     require(paused);\n     _;\n   }\n171-expression_statement-40-43", type_label=expression_statement];
174 [label="40_ require(paused);\n174-expression_statement-41-41", type_label=expression_statement];
179 [label="41_ _;\n179-expression_statement-42-42", type_label=expression_statement];
181 [label="43_ pause\n181-function_definition-44-47", type_label=function_definition];
183 [label="43_ onlyOwner\n183-expression_statement-44-44", type_label=expression_statement];
185 [label="43_ whenNotPaused\n185-expression_statement-44-44", type_label=expression_statement];
189 [label="44_ paused = true;\n189-expression_statement-45-45", type_label=expression_statement];
196 [label="47_ unpause\n196-function_definition-48-51", type_label=function_definition];
198 [label="47_ onlyOwner\n198-expression_statement-48-48", type_label=expression_statement];
200 [label="47_ whenPaused\n200-expression_statement-48-48", type_label=expression_statement];
204 [label="48_ paused = false;\n204-expression_statement-49-49", type_label=expression_statement];
214 [label="53_ transfer\n214-function_definition-54-54", type_label=function_definition];
229 [label="54_ approve\n229-function_definition-55-55", type_label=function_definition];
244 [label="55_ transferFrom\n244-function_definition-56-56", type_label=function_definition];
263 [label="56_ totalSupply\n263-function_definition-57-57", type_label=function_definition];
271 [label="57_ balanceOf\n271-function_definition-58-58", type_label=function_definition];
283 [label="58_ allowance\n283-function_definition-59-59", type_label=function_definition];
338 [label="64_ mapping (address => uint256) public _balances;\n338-new_variable-65-65", type_label=new_variable];
345 [label="65_ mapping (address => mapping (address => uint256)) private _allowed;\n345-new_variable-66-66", type_label=new_variable];
354 [label="66_ uint256 public totalSupply;\n354-new_variable-67-67", type_label=new_variable];
359 [label="67_ balanceOf\n359-function_definition-68-70", type_label=function_definition];
372 [label="68_ return _balances[owner];\n372-return-69-69", type_label=return];
376 [label="70_ allowance\n376-function_definition-71-73", type_label=function_definition];
393 [label="71_ return _allowed[owner][spender];\n393-return-72-72", type_label=return];
399 [label="73_ transfer\n399-function_definition-74-77", type_label=function_definition];
415 [label="74_ _transfer(msg.sender, to, value);\n415-expression_statement-75-75", type_label=expression_statement];
426 [label="75_ return true;\n426-return-76-76", type_label=return];
429 [label="77_ approve\n429-function_definition-78-81", type_label=function_definition];
445 [label="78_ _approve(msg.sender, spender, value);\n445-expression_statement-79-79", type_label=expression_statement];
456 [label="79_ return true;\n456-return-80-80", type_label=return];
459 [label="81_ transferFrom\n459-function_definition-82-86", type_label=function_definition];
479 [label="82_ _transfer(from, to, value);\n479-expression_statement-83-83", type_label=expression_statement];
488 [label="83_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n488-expression_statement-84-84", type_label=expression_statement];
510 [label="84_ return true;\n510-return-85-85", type_label=return];
513 [label="86_ increaseAllowance\n513-function_definition-87-90", type_label=function_definition];
529 [label="87_ _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n529-expression_statement-88-88", type_label=expression_statement];
551 [label="88_ return true;\n551-return-89-89", type_label=return];
554 [label="90_ decreaseAllowance\n554-function_definition-91-94", type_label=function_definition];
570 [label="91_ _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n570-expression_statement-92-92", type_label=expression_statement];
592 [label="92_ return true;\n592-return-93-93", type_label=return];
595 [label="94_ _transfer\n595-function_definition-95-100", type_label=function_definition];
611 [label="95_ require(to != address(0));\n611-expression_statement-96-96", type_label=expression_statement];
620 [label="96_ _balances[from] = _balances[from].sub(value);\n620-expression_statement-97-97", type_label=expression_statement];
633 [label="97_ _balances[to] = _balances[to].add(value);\n633-expression_statement-98-98", type_label=expression_statement];
654 [label="100_ _approve\n654-function_definition-101-106", type_label=function_definition];
670 [label="101_ require(spender != address(0));\n670-expression_statement-102-102", type_label=expression_statement];
679 [label="102_ require(owner != address(0));\n679-expression_statement-103-103", type_label=expression_statement];
688 [label="103_ _allowed[owner][spender] = value;\n688-expression_statement-104-104", type_label=expression_statement];
713 [label="108_ transfer\n713-function_definition-109-111", type_label=function_definition];
724 [label="108_ whenNotPaused\n724-expression_statement-109-109", type_label=expression_statement];
731 [label="109_ return super.transfer(to, value);\n731-return-110-110", type_label=return];
740 [label="111_ transferFrom\n740-function_definition-112-114", type_label=function_definition];
755 [label="111_ whenNotPaused\n755-expression_statement-112-112", type_label=expression_statement];
762 [label="112_ return super.transferFrom(from, to, value);\n762-return-113-113", type_label=return];
773 [label="114_ approve\n773-function_definition-115-117", type_label=function_definition];
784 [label="114_ whenNotPaused\n784-expression_statement-115-115", type_label=expression_statement];
791 [label="115_ return super.approve(spender, value);\n791-return-116-116", type_label=return];
800 [label="117_ increaseAllowance\n800-function_definition-118-120", type_label=function_definition];
811 [label="117_ whenNotPaused\n811-expression_statement-118-118", type_label=expression_statement];
819 [label="118_ return super.increaseAllowance(spender, addedValue);\n819-return-119-119", type_label=return];
828 [label="120_ decreaseAllowance\n828-function_definition-121-123", type_label=function_definition];
839 [label="120_ whenNotPaused\n839-expression_statement-121-121", type_label=expression_statement];
847 [label="121_ return super.decreaseAllowance(spender, subtractedValue);\n847-return-122-122", type_label=return];
862 [label="125_ MBTCToken public token;\n862-new_variable-126-126", type_label=new_variable];
868 [label="126_ uint256 constant public tokenDecimals = 18;\n868-new_variable-127-127", type_label=new_variable];
874 [label="127_ uint256 public totalSupply = 100000000 * (10 ** uint256(tokenDecimals));\n874-new_variable-128-128", type_label=new_variable];
889 [label="129_ token = createTokenContract();\n889-expression_statement-130-130", type_label=expression_statement];
894 [label="130_ token.unpause();\n894-expression_statement-131-131", type_label=expression_statement];
899 [label="132_ createTokenContract\n899-function_definition-133-135", type_label=function_definition];
908 [label="133_ return new MBTCToken();\n908-return-134-134", type_label=return];
914 [label="135_ enableTokenTransferability\n914-function_definition-136-138", type_label=function_definition];
917 [label="135_ onlyOwner\n917-expression_statement-136-136", type_label=expression_statement];
920 [label="136_ token.unpause();\n920-expression_statement-137-137", type_label=expression_statement];
925 [label="138_ disableTokenTransferability\n925-function_definition-139-141", type_label=function_definition];
928 [label="138_ onlyOwner\n928-expression_statement-139-139", type_label=expression_statement];
931 [label="139_ token.pause();\n931-expression_statement-140-140", type_label=expression_statement];
936 [label="141_ transfer\n936-function_definition-142-145", type_label=function_definition];
947 [label="141_ onlyOwner\n947-expression_statement-142-142", type_label=expression_statement];
955 [label="142_ uint256 converterdValue = value * (10 ** uint256(tokenDecimals));\n955-new_variable-143-143", type_label=new_variable];
968 [label="143_ return token.transfer(to, converterdValue);\n968-return-144-144", type_label=return];
983 [label="147_ string constant public name = \"Marvelous Business Transaction Coin\";\n983-new_variable-148-148", type_label=new_variable];
990 [label="148_ string constant public symbol = \"MBTC\";\n990-new_variable-149-149", type_label=new_variable];
997 [label="149_ uint8 constant public decimals = 18;\n997-new_variable-150-150", type_label=new_variable];
1003 [label="150_ uint256 constant TOKEN_UNIT = 10 ** uint256(decimals);\n1003-new_variable-151-151", type_label=new_variable];
1012 [label="151_ uint256 constant INITIAL_SUPPLY = 100000000 * TOKEN_UNIT;\n1012-new_variable-152-152", type_label=new_variable];
1021 [label="153_ paused = true;\n1021-expression_statement-154-154", type_label=expression_statement];
1026 [label="154_ totalSupply = INITIAL_SUPPLY;\n1026-expression_statement-155-155", type_label=expression_statement];
1030 [label="155_ _balances[msg.sender] = INITIAL_SUPPLY;\n1030-expression_statement-156-156", type_label=expression_statement];
1041 [label="159_ mul\n1041-function_definition-160-167", type_label=function_definition];
1058 [label="160_ if_a == 0\n1058-if-161-163", type_label=if];
2267 [label="160_ end_if", type_label=end_if];
1063 [label="161_ return 0;\n1063-return-162-162", type_label=return];
1065 [label="163_ uint256 c = a * b;\n1065-new_variable-164-164", type_label=new_variable];
1073 [label="164_ require(c / a == b);\n1073-expression_statement-165-165", type_label=expression_statement];
1082 [label="165_ return c;\n1082-return-166-166", type_label=return];
1084 [label="167_ div\n1084-function_definition-168-172", type_label=function_definition];
1101 [label="168_ require(b > 0);\n1101-expression_statement-169-169", type_label=expression_statement];
1108 [label="169_ uint256 c = a / b;\n1108-new_variable-170-170", type_label=new_variable];
1116 [label="170_ return c;\n1116-return-171-171", type_label=return];
1118 [label="172_ sub\n1118-function_definition-173-177", type_label=function_definition];
1135 [label="173_ require(b <= a);\n1135-expression_statement-174-174", type_label=expression_statement];
1142 [label="174_ uint256 c = a - b;\n1142-new_variable-175-175", type_label=new_variable];
1150 [label="175_ return c;\n1150-return-176-176", type_label=return];
1152 [label="177_ add\n1152-function_definition-178-182", type_label=function_definition];
1169 [label="178_ uint256 c = a + b;\n1169-new_variable-179-179", type_label=new_variable];
1177 [label="179_ require(c >= a);\n1177-expression_statement-180-180", type_label=expression_statement];
1184 [label="180_ return c;\n1184-return-181-181", type_label=return];
1186 [label="182_ mod\n1186-function_definition-183-186", type_label=function_definition];
1203 [label="183_ require(b != 0);\n1203-expression_statement-184-184", type_label=expression_statement];
1210 [label="184_ return a % b;\n1210-return-185-185", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
44 -> 53  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
53 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
58 -> 64  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
66 -> 75  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
81 -> 95  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
101 -> 111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
116 -> 124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
153 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 171  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
163 -> 169  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
174 -> 179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
181 -> 189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
183 -> 185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
196 -> 204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
198 -> 200  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
338 -> 345  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
345 -> 354  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
359 -> 372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
372 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
376 -> 393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
393 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
399 -> 415  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
415 -> 426  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
426 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
429 -> 445  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
445 -> 456  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
456 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
459 -> 479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
479 -> 488  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
488 -> 510  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
510 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
513 -> 529  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
529 -> 551  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
551 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
554 -> 570  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
570 -> 592  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
592 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
595 -> 611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
611 -> 620  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
620 -> 633  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
654 -> 670  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
670 -> 679  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
679 -> 688  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
713 -> 731  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
731 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
740 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
762 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
773 -> 791  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
791 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
800 -> 819  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
819 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
828 -> 847  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
847 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
862 -> 868  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
868 -> 874  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
889 -> 894  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
899 -> 908  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
908 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
914 -> 920  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
925 -> 931  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
936 -> 955  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
955 -> 968  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
968 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
983 -> 990  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
990 -> 997  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
997 -> 1003  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1003 -> 1012  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1021 -> 1026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1026 -> 1030  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1041 -> 1058  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1058 -> 1063  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1058 -> 2267  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2267 -> 1065  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1063 -> 2267  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1063 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1065 -> 1073  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1073 -> 1082  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1082 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1084 -> 1101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1101 -> 1108  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1108 -> 1116  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1116 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1118 -> 1135  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1135 -> 1142  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1142 -> 1150  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1150 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1152 -> 1169  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1169 -> 1177  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1177 -> 1184  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1184 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1186 -> 1203  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1203 -> 1210  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1210 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
