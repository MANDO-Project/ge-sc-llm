digraph  {
13 [label="2_ function add(uint a, uint b) internal pure returns (uint c) {	 \n        c = a + b;\n        require(c >= a);\n    }\n13-function_definition-3-6", method="add(uint a,uint b)", type_label=function_definition];
31 [label="3_ c = a + b;\n31-expression_statement-4-4", method="add(uint a,uint b)", type_label=expression_statement];
37 [label="4_ require(c >= a);\n37-expression_statement-5-5", method="add(uint a,uint b)", type_label=expression_statement];
44 [label="6_ function sub(uint a, uint b) internal pure returns (uint c) {	 \n        require(b <= a);\n        c = a - b;\n    }\n44-function_definition-7-10", method="sub(uint a,uint b)", type_label=function_definition];
62 [label="7_ require(b <= a);\n62-expression_statement-8-8", method="sub(uint a,uint b)", type_label=expression_statement];
69 [label="8_ c = a - b;\n69-expression_statement-9-9", method="sub(uint a,uint b)", type_label=expression_statement];
75 [label="10_ function mul(uint a, uint b) internal pure returns (uint c) {	 \n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n75-function_definition-11-14", method="mul(uint a,uint b)", type_label=function_definition];
93 [label="11_ c = a * b;\n93-expression_statement-12-12", method="mul(uint a,uint b)", type_label=expression_statement];
99 [label="12_ require(a == 0 || c / a == b);\n99-expression_statement-13-13", method="mul(uint a,uint b)", type_label=expression_statement];
112 [label="14_ function div(uint a, uint b) internal pure returns (uint c) {	 \n        require(b > 0);\n        c = a / b;\n    }\n112-function_definition-15-18", method="div(uint a,uint b)", type_label=function_definition];
130 [label="15_ require(b > 0);\n130-expression_statement-16-16", method="div(uint a,uint b)", type_label=expression_statement];
137 [label="16_ c = a / b;\n137-expression_statement-17-17", method="div(uint a,uint b)", type_label=expression_statement];
146 [label="20_ function totalSupply() public view returns (uint);\n146-function_definition-21-21", method="totalSupply()", type_label=function_definition];
154 [label="21_ mapping(address => uint) public lockTime_intou17;\n154-new_variable-22-22", method="", type_label=new_variable];
161 [label="22_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n161-function_definition-23-25", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
169 [label="23_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n169-expression_statement-24-24", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
177 [label="25_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n177-function_definition-26-30", method="withdraw_intou17()", type_label=function_definition];
181 [label="26_ require(now > lockTime_intou17[msg.sender]);\n181-expression_statement-27-27", method="withdraw_intou17()", type_label=expression_statement];
192 [label="27_ uint transferValue_intou17 = 10;\n192-new_variable-28-28", method="withdraw_intou17()", type_label=new_variable];
198 [label="28_ msg.sender.transfer(transferValue_intou17);\n198-expression_statement-29-29", method="withdraw_intou17()", type_label=expression_statement];
207 [label="30_ function balanceOf(address tokenOwner) public view returns (uint balance);\n207-function_definition-31-31", method="balanceOf(address tokenOwner)", type_label=function_definition];
220 [label="31_ mapping(address => uint) public lockTime_intou37;\n220-new_variable-32-32", method="", type_label=new_variable];
227 [label="32_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n227-function_definition-33-35", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
235 [label="33_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n235-expression_statement-34-34", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
243 [label="35_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n243-function_definition-36-40", method="withdraw_intou37()", type_label=function_definition];
247 [label="36_ require(now > lockTime_intou37[msg.sender]);\n247-expression_statement-37-37", method="withdraw_intou37()", type_label=expression_statement];
258 [label="37_ uint transferValue_intou37 = 10;\n258-new_variable-38-38", method="withdraw_intou37()", type_label=new_variable];
264 [label="38_ msg.sender.transfer(transferValue_intou37);\n264-expression_statement-39-39", method="withdraw_intou37()", type_label=expression_statement];
273 [label="40_ function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n273-function_definition-41-41", method="allowance(address tokenOwner,address spender)", type_label=function_definition];
290 [label="41_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n290-function_definition-42-45", method="bug_intou3()", type_label=function_definition];
294 [label="42_ uint8 vundflw =0;\n294-new_variable-43-43", method="bug_intou3()", type_label=new_variable];
300 [label="43_ vundflw = vundflw -10;\n300-expression_statement-44-44", method="bug_intou3()", type_label=expression_statement];
306 [label="45_ function transfer(address to, uint tokens) public returns (bool success);\n306-function_definition-46-46", method="transfer(address to,uint tokens)", type_label=function_definition];
322 [label="46_ mapping(address => uint) public lockTime_intou9;\n322-new_variable-47-47", method="", type_label=new_variable];
329 [label="47_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n329-function_definition-48-50", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
337 [label="48_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n337-expression_statement-49-49", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
345 [label="50_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n345-function_definition-51-55", method="withdraw_intou9()", type_label=function_definition];
349 [label="51_ require(now > lockTime_intou9[msg.sender]);\n349-expression_statement-52-52", method="withdraw_intou9()", type_label=expression_statement];
360 [label="52_ uint transferValue_intou9 = 10;\n360-new_variable-53-53", method="withdraw_intou9()", type_label=new_variable];
366 [label="53_ msg.sender.transfer(transferValue_intou9);\n366-expression_statement-54-54", method="withdraw_intou9()", type_label=expression_statement];
375 [label="55_ function approve(address spender, uint tokens) public returns (bool success);\n375-function_definition-56-56", method="approve(address spender,uint tokens)", type_label=function_definition];
391 [label="56_ mapping(address => uint) public lockTime_intou25;\n391-new_variable-57-57", method="", type_label=new_variable];
398 [label="57_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n398-function_definition-58-60", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
406 [label="58_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n406-expression_statement-59-59", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
414 [label="60_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n414-function_definition-61-65", method="withdraw_intou25()", type_label=function_definition];
418 [label="61_ require(now > lockTime_intou25[msg.sender]);\n418-expression_statement-62-62", method="withdraw_intou25()", type_label=expression_statement];
429 [label="62_ uint transferValue_intou25 = 10;\n429-new_variable-63-63", method="withdraw_intou25()", type_label=new_variable];
435 [label="63_ msg.sender.transfer(transferValue_intou25);\n435-expression_statement-64-64", method="withdraw_intou25()", type_label=expression_statement];
444 [label="65_ function transferFrom(address from, address to, uint tokens) public returns (bool success);\n444-function_definition-66-66", method="transferFrom(address from,address to,uint tokens)", type_label=function_definition];
464 [label="66_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n464-function_definition-67-70", method="bug_intou19()", type_label=function_definition];
468 [label="67_ uint8 vundflw =0;\n468-new_variable-68-68", method="bug_intou19()", type_label=new_variable];
474 [label="68_ vundflw = vundflw -10;\n474-expression_statement-69-69", method="bug_intou19()", type_label=expression_statement];
480 [label="70_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n480-function_definition-71-74", method="bug_intou27()", type_label=function_definition];
484 [label="71_ uint8 vundflw =0;\n484-new_variable-72-72", method="bug_intou27()", type_label=new_variable];
490 [label="72_ vundflw = vundflw -10;\n490-expression_statement-73-73", method="bug_intou27()", type_label=expression_statement];
510 [label="75_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n510-function_definition-76-79", method="bug_intou31()", type_label=function_definition];
514 [label="76_ uint8 vundflw =0;\n514-new_variable-77-77", method="bug_intou31()", type_label=new_variable];
520 [label="77_ vundflw = vundflw -10;\n520-expression_statement-78-78", method="bug_intou31()", type_label=expression_statement];
543 [label="82_ function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\n543-function_definition-83-83", method="receiveApproval(address from,uint256 tokens,address token,bytes memory data)", type_label=function_definition];
562 [label="83_ mapping(address => uint) balances_intou26;\n562-new_variable-84-84", method="", type_label=new_variable];
568 [label="84_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n568-function_definition-85-90", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
584 [label="85_ require(balances_intou26[msg.sender] - _value >= 0);\n584-expression_statement-86-86", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
597 [label="86_ balances_intou26[msg.sender] -= _value;\n597-expression_statement-87-87", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
605 [label="87_ balances_intou26[_to] += _value;\n605-expression_statement-88-88", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
611 [label="88_ return true;\n611-return-89-89", method="transfer_intou26(address _to,uint _value)", type_label=return];
617 [label="92_ mapping(address => uint) public lockTime_intou21;\n617-new_variable-93-93", method="", type_label=new_variable];
624 [label="93_ function increaseLockTime_intou21(uint _secondsToIncrease) public {\n        lockTime_intou21[msg.sender] += _secondsToIncrease;   \n    }\n624-function_definition-94-96", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=function_definition];
632 [label="94_ lockTime_intou21[msg.sender] += _secondsToIncrease;\n632-expression_statement-95-95", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=expression_statement];
640 [label="96_ function withdraw_intou21() public {\n        require(now > lockTime_intou21[msg.sender]);    \n        uint transferValue_intou21 = 10;           \n        msg.sender.transfer(transferValue_intou21);\n    }\n640-function_definition-97-101", method="withdraw_intou21()", type_label=function_definition];
644 [label="97_ require(now > lockTime_intou21[msg.sender]);\n644-expression_statement-98-98", method="withdraw_intou21()", type_label=expression_statement];
655 [label="98_ uint transferValue_intou21 = 10;\n655-new_variable-99-99", method="withdraw_intou21()", type_label=new_variable];
661 [label="99_ msg.sender.transfer(transferValue_intou21);\n661-expression_statement-100-100", method="withdraw_intou21()", type_label=expression_statement];
670 [label="101_ address public owner;\n670-new_variable-102-102", method="", type_label=new_variable];
675 [label="102_ mapping(address => uint) balances_intou10;\n675-new_variable-103-103", method="", type_label=new_variable];
681 [label="103_ function transfer_intou10(address _to, uint _value) public returns (bool) {\n    require(balances_intou10[msg.sender] - _value >= 0);   \n    balances_intou10[msg.sender] -= _value;   \n    balances_intou10[_to] += _value;   \n    return true;\n  }\n681-function_definition-104-109", method="transfer_intou10(address _to,uint _value)", type_label=function_definition];
697 [label="104_ require(balances_intou10[msg.sender] - _value >= 0);\n697-expression_statement-105-105", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
710 [label="105_ balances_intou10[msg.sender] -= _value;\n710-expression_statement-106-106", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
718 [label="106_ balances_intou10[_to] += _value;\n718-expression_statement-107-107", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
724 [label="107_ return true;\n724-return-108-108", method="transfer_intou10(address _to,uint _value)", type_label=return];
727 [label="109_ address public newOwner;\n727-new_variable-110-110", method="", type_label=new_variable];
732 [label="110_ mapping(address => uint) public lockTime_intou13;\n732-new_variable-111-111", method="", type_label=new_variable];
739 [label="111_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n739-function_definition-112-114", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
747 [label="112_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n747-expression_statement-113-113", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
755 [label="114_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n755-function_definition-115-119", method="withdraw_intou13()", type_label=function_definition];
759 [label="115_ require(now > lockTime_intou13[msg.sender]);\n759-expression_statement-116-116", method="withdraw_intou13()", type_label=expression_statement];
770 [label="116_ uint transferValue_intou13 = 10;\n770-new_variable-117-117", method="withdraw_intou13()", type_label=new_variable];
776 [label="117_ msg.sender.transfer(transferValue_intou13);\n776-expression_statement-118-118", method="withdraw_intou13()", type_label=expression_statement];
797 [label="121_ owner = msg.sender;\n797-expression_statement-122-122", method="", type_label=expression_statement];
803 [label="123_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n803-function_definition-124-127", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
811 [label="124_ uint8 vundflw1=0;\n811-new_variable-125-125", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
817 [label="125_ vundflw1 = vundflw1 + p_intou20;\n817-expression_statement-126-126", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
823 [label="127_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n823-expression_statement-128-131", method="", type_label=expression_statement];
826 [label="128_ require(msg.sender == owner);\n826-expression_statement-129-129", method="", type_label=expression_statement];
835 [label="129_ _;\n835-expression_statement-130-130", method="", type_label=expression_statement];
837 [label="131_ function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n837-function_definition-132-134", method="transferOwnership(address _newOwner)", type_label=function_definition];
844 [label="131_ onlyOwner\n844-expression_statement-132-132", method="transferOwnership(address _newOwner)", type_label=expression_statement];
847 [label="132_ newOwner = _newOwner;\n847-expression_statement-133-133", method="transferOwnership(address _newOwner)", type_label=expression_statement];
851 [label="134_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n851-function_definition-135-138", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
859 [label="135_ uint8 vundflw1=0;\n859-new_variable-136-136", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
865 [label="136_ vundflw1 = vundflw1 + p_intou32;\n865-expression_statement-137-137", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
871 [label="138_ function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnershipTransferred(owner, newOwner);	 \n        owner = newOwner;\n        newOwner = address(0);\n    }\n871-function_definition-139-144", method="acceptOwnership()", type_label=function_definition];
875 [label="139_ require(msg.sender == newOwner);\n875-expression_statement-140-140", method="acceptOwnership()", type_label=expression_statement];
890 [label="141_ owner = newOwner;\n890-expression_statement-142-142", method="acceptOwnership()", type_label=expression_statement];
894 [label="142_ newOwner = address(0);\n894-expression_statement-143-143", method="acceptOwnership()", type_label=expression_statement];
900 [label="144_ mapping(address => uint) balances_intou38;\n900-new_variable-145-145", method="", type_label=new_variable];
906 [label="145_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n906-function_definition-146-151", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
922 [label="146_ require(balances_intou38[msg.sender] - _value >= 0);\n922-expression_statement-147-147", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
935 [label="147_ balances_intou38[msg.sender] -= _value;\n935-expression_statement-148-148", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
943 [label="148_ balances_intou38[_to] += _value;\n943-expression_statement-149-149", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
949 [label="149_ return true;\n949-return-150-150", method="transfer_intou38(address _to,uint _value)", type_label=return];
966 [label="154_ mapping(address => uint) balances_intou22;\n966-new_variable-155-155", method="", type_label=new_variable];
972 [label="155_ function transfer_intou22(address _to, uint _value) public returns (bool) {\n    require(balances_intou22[msg.sender] - _value >= 0);   \n    balances_intou22[msg.sender] -= _value;   \n    balances_intou22[_to] += _value;   \n    return true;\n  }\n972-function_definition-156-161", method="transfer_intou22(address _to,uint _value)", type_label=function_definition];
988 [label="156_ require(balances_intou22[msg.sender] - _value >= 0);\n988-expression_statement-157-157", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
1001 [label="157_ balances_intou22[msg.sender] -= _value;\n1001-expression_statement-158-158", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
1009 [label="158_ balances_intou22[_to] += _value;\n1009-expression_statement-159-159", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
1015 [label="159_ return true;\n1015-return-160-160", method="transfer_intou22(address _to,uint _value)", type_label=return];
1018 [label="161_ string public symbol;\n1018-new_variable-162-162", method="", type_label=new_variable];
1023 [label="162_ function bug_intou12(uint8 p_intou12) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou12;    \n}\n1023-function_definition-163-166", method="bug_intou12(uint8 p_intou12)", type_label=function_definition];
1031 [label="163_ uint8 vundflw1=0;\n1031-new_variable-164-164", method="bug_intou12(uint8 p_intou12)", type_label=new_variable];
1037 [label="164_ vundflw1 = vundflw1 + p_intou12;\n1037-expression_statement-165-165", method="bug_intou12(uint8 p_intou12)", type_label=expression_statement];
1043 [label="166_ string public  name;\n1043-new_variable-167-167", method="", type_label=new_variable];
1048 [label="167_ function bug_intou11() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1048-function_definition-168-171", method="bug_intou11()", type_label=function_definition];
1052 [label="168_ uint8 vundflw =0;\n1052-new_variable-169-169", method="bug_intou11()", type_label=new_variable];
1058 [label="169_ vundflw = vundflw -10;\n1058-expression_statement-170-170", method="bug_intou11()", type_label=expression_statement];
1064 [label="171_ uint8 public decimals;\n1064-new_variable-172-172", method="", type_label=new_variable];
1069 [label="172_ mapping(address => uint) public lockTime_intou1;\n1069-new_variable-173-173", method="", type_label=new_variable];
1076 [label="173_ function increaseLockTime_intou1(uint _secondsToIncrease) public {\n        lockTime_intou1[msg.sender] += _secondsToIncrease;   \n    }\n1076-function_definition-174-176", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=function_definition];
1084 [label="174_ lockTime_intou1[msg.sender] += _secondsToIncrease;\n1084-expression_statement-175-175", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=expression_statement];
1092 [label="176_ function withdraw_ovrflow1() public {\n        require(now > lockTime_intou1[msg.sender]);    \n        uint transferValue_intou1 = 10;           \n        msg.sender.transfer(transferValue_intou1);\n    }\n1092-function_definition-177-181", method="withdraw_ovrflow1()", type_label=function_definition];
1096 [label="177_ require(now > lockTime_intou1[msg.sender]);\n1096-expression_statement-178-178", method="withdraw_ovrflow1()", type_label=expression_statement];
1107 [label="178_ uint transferValue_intou1 = 10;\n1107-new_variable-179-179", method="withdraw_ovrflow1()", type_label=new_variable];
1113 [label="179_ msg.sender.transfer(transferValue_intou1);\n1113-expression_statement-180-180", method="withdraw_ovrflow1()", type_label=expression_statement];
1122 [label="181_ uint _totalSupply;\n1122-new_variable-182-182", method="", type_label=new_variable];
1126 [label="182_ mapping(address => uint) balances;\n1126-new_variable-183-183", method="", type_label=new_variable];
1132 [label="183_ mapping(address => uint) balances_intou2;\n1132-new_variable-184-184", method="", type_label=new_variable];
1138 [label="184_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n1138-function_definition-185-190", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
1154 [label="185_ require(balances_intou2[msg.sender] - _value >= 0);\n1154-expression_statement-186-186", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
1167 [label="186_ balances_intou2[msg.sender] -= _value;\n1167-expression_statement-187-187", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
1175 [label="187_ balances_intou2[_to] += _value;\n1175-expression_statement-188-188", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
1181 [label="188_ return true;\n1181-return-189-189", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
1184 [label="190_ mapping(address => mapping(address => uint)) allowed;\n1184-new_variable-191-191", method="", type_label=new_variable];
1194 [label="192_ symbol = \"XQC\";\n1194-expression_statement-193-193", method="", type_label=expression_statement];
1199 [label="193_ name = \"Quras Token\";\n1199-expression_statement-194-194", method="", type_label=expression_statement];
1204 [label="194_ decimals = 8;\n1204-expression_statement-195-195", method="", type_label=expression_statement];
1208 [label="195_ _totalSupply = 88888888800000000;\n1208-expression_statement-196-196", method="", type_label=expression_statement];
1212 [label="196_ balances[owner] = _totalSupply;\n1212-expression_statement-197-197", method="", type_label=expression_statement];
1228 [label="199_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n1228-function_definition-200-203", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
1236 [label="200_ uint8 vundflw1=0;\n1236-new_variable-201-201", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
1242 [label="201_ vundflw1 = vundflw1 + p_intou4;\n1242-expression_statement-202-202", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
1248 [label="203_ function totalSupply() public view returns (uint) {		 \n        return _totalSupply.sub(balances[address(0)]);\n    }\n1248-function_definition-204-206", method="totalSupply()", type_label=function_definition];
1257 [label="204_ return _totalSupply.sub(balances[address(0)]);\n1257-return-205-205", method="totalSupply()", type_label=return];
1268 [label="206_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1268-function_definition-207-210", method="bug_intou7()", type_label=function_definition];
1272 [label="207_ uint8 vundflw =0;\n1272-new_variable-208-208", method="bug_intou7()", type_label=new_variable];
1278 [label="208_ vundflw = vundflw -10;\n1278-expression_statement-209-209", method="bug_intou7()", type_label=expression_statement];
1284 [label="210_ function balanceOf(address tokenOwner) public view returns (uint balance) {		 \n        return balances[tokenOwner];\n    }\n1284-function_definition-211-213", method="balanceOf(address tokenOwner)", type_label=function_definition];
1298 [label="211_ return balances[tokenOwner];\n1298-return-212-212", method="balanceOf(address tokenOwner)", type_label=return];
1302 [label="213_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1302-function_definition-214-217", method="bug_intou23()", type_label=function_definition];
1306 [label="214_ uint8 vundflw =0;\n1306-new_variable-215-215", method="bug_intou23()", type_label=new_variable];
1312 [label="215_ vundflw = vundflw -10;\n1312-expression_statement-216-216", method="bug_intou23()", type_label=expression_statement];
1318 [label="217_ function transfer(address to, uint tokens) public returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(msg.sender, to, tokens);		 \n        return true;\n    }\n1318-function_definition-218-223", method="transfer(address to,uint tokens)", type_label=function_definition];
1335 [label="218_ balances[msg.sender] = balances[msg.sender].sub(tokens);\n1335-expression_statement-219-219", method="transfer(address to,uint tokens)", type_label=expression_statement];
1352 [label="219_ balances[to] = balances[to].add(tokens);\n1352-expression_statement-220-220", method="transfer(address to,uint tokens)", type_label=expression_statement];
1375 [label="221_ return true;\n1375-return-222-222", method="transfer(address to,uint tokens)", type_label=return];
1378 [label="223_ mapping(address => uint) balances_intou14;\n1378-new_variable-224-224", method="", type_label=new_variable];
1384 [label="224_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n1384-function_definition-225-230", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
1400 [label="225_ require(balances_intou14[msg.sender] - _value >= 0);\n1400-expression_statement-226-226", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1413 [label="226_ balances_intou14[msg.sender] -= _value;\n1413-expression_statement-227-227", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1421 [label="227_ balances_intou14[_to] += _value;\n1421-expression_statement-228-228", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1427 [label="228_ return true;\n1427-return-229-229", method="transfer_intou14(address _to,uint _value)", type_label=return];
1430 [label="230_ function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n1430-function_definition-231-235", method="increaseApproval(address _spender,uint _addedValue)", type_label=function_definition];
1446 [label="231_ allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n1446-expression_statement-232-232", method="increaseApproval(address _spender,uint _addedValue)", type_label=expression_statement];
1483 [label="233_ return true;\n1483-return-234-234", method="increaseApproval(address _spender,uint _addedValue)", type_label=return];
1486 [label="235_ mapping(address => uint) balances_intou30;\n1486-new_variable-236-236", method="", type_label=new_variable];
1492 [label="236_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n1492-function_definition-237-242", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
1508 [label="237_ require(balances_intou30[msg.sender] - _value >= 0);\n1508-expression_statement-238-238", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1521 [label="238_ balances_intou30[msg.sender] -= _value;\n1521-expression_statement-239-239", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1529 [label="239_ balances_intou30[_to] += _value;\n1529-expression_statement-240-240", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1535 [label="240_ return true;\n1535-return-241-241", method="transfer_intou30(address _to,uint _value)", type_label=return];
1538 [label="242_ function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n1538-function_definition-243-252", method="decreaseApproval(address _spender,uint _subtractedValue)", type_label=function_definition];
1554 [label="243_ uint oldValue = allowed[msg.sender][_spender];\n1554-new_variable-244-244", method="decreaseApproval(address _spender,uint _subtractedValue)", type_label=new_variable];
1566 [label="244_ if__subtractedValue > oldValue\n1566-if-245-249", method="decreaseApproval(address _spender,uint _subtractedValue)", type_label=if];
3560 [label="244_ end_if", method="decreaseApproval(address _spender,uint _subtractedValue)", type_label=end_if];
1571 [label="245_ allowed[msg.sender][_spender] = 0;\n1571-expression_statement-246-246", method="decreaseApproval(address _spender,uint _subtractedValue)", type_label=expression_statement];
1582 [label="247_ allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n1582-expression_statement-248-248", method="decreaseApproval(address _spender,uint _subtractedValue)", type_label=expression_statement];
1613 [label="250_ return true;\n1613-return-251-251", method="decreaseApproval(address _spender,uint _subtractedValue)", type_label=return];
1616 [label="252_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n1616-function_definition-253-256", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
1624 [label="253_ uint8 vundflw1=0;\n1624-new_variable-254-254", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
1630 [label="254_ vundflw1 = vundflw1 + p_intou8;\n1630-expression_statement-255-255", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
1636 [label="256_ function approve(address spender, uint tokens) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);		 \n        return true;\n    }\n1636-function_definition-257-261", method="approve(address spender,uint tokens)", type_label=function_definition];
1653 [label="257_ allowed[msg.sender][spender] = tokens;\n1653-expression_statement-258-258", method="approve(address spender,uint tokens)", type_label=expression_statement];
1673 [label="259_ return true;\n1673-return-260-260", method="approve(address spender,uint tokens)", type_label=return];
1676 [label="261_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1676-function_definition-262-265", method="bug_intou39()", type_label=function_definition];
1680 [label="262_ uint8 vundflw =0;\n1680-new_variable-263-263", method="bug_intou39()", type_label=new_variable];
1686 [label="263_ vundflw = vundflw -10;\n1686-expression_statement-264-264", method="bug_intou39()", type_label=expression_statement];
1692 [label="265_ function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n        balances[from] = balances[from].sub(tokens);\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(from, to, tokens);		 \n        return true;\n    }\n1692-function_definition-266-272", method="transferFrom(address from,address to,uint tokens)", type_label=function_definition];
1713 [label="266_ balances[from] = balances[from].sub(tokens);\n1713-expression_statement-267-267", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
1726 [label="267_ allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n1726-expression_statement-268-268", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
1747 [label="268_ balances[to] = balances[to].add(tokens);\n1747-expression_statement-269-269", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
1768 [label="270_ return true;\n1768-return-271-271", method="transferFrom(address from,address to,uint tokens)", type_label=return];
1771 [label="272_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n1771-function_definition-273-276", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
1779 [label="273_ uint8 vundflw1=0;\n1779-new_variable-274-274", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
1785 [label="274_ vundflw1 = vundflw1 + p_intou36;\n1785-expression_statement-275-275", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
1791 [label="276_ function allowance(address tokenOwner, address spender) public view returns (uint remaining) {		 \n        return allowed[tokenOwner][spender];\n    }\n1791-function_definition-277-279", method="allowance(address tokenOwner,address spender)", type_label=function_definition];
1809 [label="277_ return allowed[tokenOwner][spender];\n1809-return-278-278", method="allowance(address tokenOwner,address spender)", type_label=return];
1815 [label="279_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1815-function_definition-280-283", method="bug_intou35()", type_label=function_definition];
1819 [label="280_ uint8 vundflw =0;\n1819-new_variable-281-281", method="bug_intou35()", type_label=new_variable];
1825 [label="281_ vundflw = vundflw -10;\n1825-expression_statement-282-282", method="bug_intou35()", type_label=expression_statement];
1831 [label="283_ function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);		 \n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n        return true;\n    }\n1831-function_definition-284-289", method="approveAndCall(address spender,uint tokens,bytes memory data)", type_label=function_definition];
1852 [label="284_ allowed[msg.sender][spender] = tokens;\n1852-expression_statement-285-285", method="approveAndCall(address spender,uint tokens,bytes memory data)", type_label=expression_statement];
1872 [label="286_ ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n1872-expression_statement-287-287", method="approveAndCall(address spender,uint tokens,bytes memory data)", type_label=expression_statement];
1892 [label="287_ return true;\n1892-return-288-288", method="approveAndCall(address spender,uint tokens,bytes memory data)", type_label=return];
1895 [label="289_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n1895-function_definition-290-293", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
1903 [label="290_ uint8 vundflw1=0;\n1903-new_variable-291-291", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
1909 [label="291_ vundflw1 = vundflw1 + p_intou40;\n1909-expression_statement-292-292", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
1915 [label="293_ function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n    }\n1915-function_definition-294-296", method="transferAnyERC20Token(address tokenAddress,uint tokens)", type_label=function_definition];
1926 [label="293_ onlyOwner\n1926-expression_statement-294-294", method="transferAnyERC20Token(address tokenAddress,uint tokens)", type_label=expression_statement];
1934 [label="294_ return ERC20Interface(tokenAddress).transfer(owner, tokens);\n1934-return-295-295", method="transferAnyERC20Token(address tokenAddress,uint tokens)", type_label=return];
1946 [label="296_ mapping(address => uint) public lockTime_intou33;\n1946-new_variable-297-297", method="", type_label=new_variable];
1953 [label="297_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n1953-function_definition-298-300", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
1961 [label="298_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n1961-expression_statement-299-299", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
1969 [label="300_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n1969-function_definition-301-305", method="withdraw_intou33()", type_label=function_definition];
1973 [label="301_ require(now > lockTime_intou33[msg.sender]);\n1973-expression_statement-302-302", method="withdraw_intou33()", type_label=expression_statement];
1984 [label="302_ uint transferValue_intou33 = 10;\n1984-new_variable-303-303", method="withdraw_intou33()", type_label=new_variable];
1990 [label="303_ msg.sender.transfer(transferValue_intou33);\n1990-expression_statement-304-304", method="withdraw_intou33()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
1597;
13 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
161 -> 169  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
177 -> 181  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
181 -> 192  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
192 -> 198  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
227 -> 235  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
243 -> 247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
247 -> 258  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
258 -> 264  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
290 -> 294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
294 -> 300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
329 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
345 -> 349  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
349 -> 360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
360 -> 366  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
398 -> 406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
414 -> 418  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
418 -> 429  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
429 -> 435  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
464 -> 468  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
468 -> 474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
480 -> 484  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
484 -> 490  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
510 -> 514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
514 -> 520  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
568 -> 584  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
584 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
597 -> 605  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
605 -> 611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
611 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
624 -> 632  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
640 -> 644  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
644 -> 655  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
655 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
670 -> 675  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
681 -> 697  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
697 -> 710  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
710 -> 718  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
718 -> 724  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
724 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
727 -> 732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
739 -> 747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
755 -> 759  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
759 -> 770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
770 -> 776  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
803 -> 811  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
811 -> 817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
826 -> 835  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
837 -> 847  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
851 -> 859  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
859 -> 865  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
871 -> 875  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
890 -> 894  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
906 -> 922  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
922 -> 935  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
935 -> 943  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
943 -> 949  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
949 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
972 -> 988  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
988 -> 1001  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1001 -> 1009  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1009 -> 1015  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1015 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1023 -> 1031  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1031 -> 1037  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1048 -> 1052  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1052 -> 1058  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1064 -> 1069  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1076 -> 1084  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1092 -> 1096  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1096 -> 1107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1107 -> 1113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1122 -> 1126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1126 -> 1132  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1138 -> 1154  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1154 -> 1167  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1167 -> 1175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1175 -> 1181  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1181 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1194 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1199 -> 1204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1204 -> 1208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1208 -> 1212  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1228 -> 1236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1236 -> 1242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1248 -> 1257  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1257 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1268 -> 1272  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1272 -> 1278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1284 -> 1298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1298 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1302 -> 1306  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1306 -> 1312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1318 -> 1335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1335 -> 1352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1375 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1384 -> 1400  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1400 -> 1413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1413 -> 1421  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1421 -> 1427  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1427 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1430 -> 1446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1483 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1492 -> 1508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1508 -> 1521  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1521 -> 1529  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1529 -> 1535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1535 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1538 -> 1554  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1554 -> 1566  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1566 -> 1571  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1566 -> 1582  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3560 -> 1597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1571 -> 3560  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1582 -> 3560  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1613 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1616 -> 1624  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1624 -> 1630  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1636 -> 1653  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1673 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1676 -> 1680  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1680 -> 1686  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1692 -> 1713  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1713 -> 1726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1726 -> 1747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1768 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1771 -> 1779  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1779 -> 1785  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1791 -> 1809  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1809 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1815 -> 1819  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1819 -> 1825  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1831 -> 1852  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1872 -> 1892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1892 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1895 -> 1903  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1903 -> 1909  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1915 -> 1934  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1934 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1953 -> 1961  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1969 -> 1973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1973 -> 1984  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1984 -> 1990  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
