digraph  {
13 [label="2_ transfer\n13-function_definition-3-3", type_label=function_definition];
28 [label="3_ approve\n28-function_definition-4-4", type_label=function_definition];
43 [label="4_ transferFrom\n43-function_definition-5-5", type_label=function_definition];
62 [label="5_ totalSupply\n62-function_definition-6-6", type_label=function_definition];
70 [label="6_ balanceOf\n70-function_definition-7-7", type_label=function_definition];
82 [label="7_ allowance\n82-function_definition-8-8", type_label=function_definition];
129 [label="12_ mul\n129-function_definition-13-20", type_label=function_definition];
146 [label="13_ if_a == 0\n146-if-14-16", type_label=if];
1130 [label="13_ end_if", type_label=end_if];
151 [label="14_ return 0;\n151-return-15-15", type_label=return];
153 [label="16_ uint256 c = a * b;\n153-new_variable-17-17", type_label=new_variable];
161 [label="17_ require(c / a == b, \"SafeMath: multiplication overflow\");\n161-expression_statement-18-18", type_label=expression_statement];
173 [label="18_ return c;\n173-return-19-19", type_label=return];
175 [label="20_ div\n175-function_definition-21-25", type_label=function_definition];
192 [label="21_ require(b > 0, \"SafeMath: division by zero\");\n192-expression_statement-22-22", type_label=expression_statement];
202 [label="22_ uint256 c = a / b;\n202-new_variable-23-23", type_label=new_variable];
210 [label="23_ return c;\n210-return-24-24", type_label=return];
212 [label="25_ sub\n212-function_definition-26-30", type_label=function_definition];
229 [label="26_ require(b <= a, \"SafeMath: subtraction overflow\");\n229-expression_statement-27-27", type_label=expression_statement];
239 [label="27_ uint256 c = a - b;\n239-new_variable-28-28", type_label=new_variable];
247 [label="28_ return c;\n247-return-29-29", type_label=return];
249 [label="30_ add\n249-function_definition-31-35", type_label=function_definition];
266 [label="31_ uint256 c = a + b;\n266-new_variable-32-32", type_label=new_variable];
274 [label="32_ require(c >= a, \"SafeMath: addition overflow\");\n274-expression_statement-33-33", type_label=expression_statement];
284 [label="33_ return c;\n284-return-34-34", type_label=return];
286 [label="35_ mod\n286-function_definition-36-39", type_label=function_definition];
303 [label="36_ require(b != 0, \"SafeMath: modulo by zero\");\n303-expression_statement-37-37", type_label=expression_statement];
313 [label="37_ return a % b;\n313-return-38-38", type_label=return];
328 [label="42_ mapping (address => uint256) private _balances;\n328-new_variable-43-43", type_label=new_variable];
335 [label="43_ mapping (address => mapping (address => uint256)) private _allowances;\n335-new_variable-44-44", type_label=new_variable];
344 [label="44_ uint256 private _totalSupply;\n344-new_variable-45-45", type_label=new_variable];
349 [label="45_ totalSupply\n349-function_definition-46-48", type_label=function_definition];
358 [label="46_ return _totalSupply;\n358-return-47-47", type_label=return];
360 [label="48_ balanceOf\n360-function_definition-49-51", type_label=function_definition];
373 [label="49_ return _balances[owner];\n373-return-50-50", type_label=return];
377 [label="51_ allowance\n377-function_definition-52-54", type_label=function_definition];
394 [label="52_ return _allowances[owner][spender];\n394-return-53-53", type_label=return];
400 [label="54_ transfer\n400-function_definition-55-58", type_label=function_definition];
416 [label="55_ _transfer(msg.sender, to, value);\n416-expression_statement-56-56", type_label=expression_statement];
427 [label="56_ return true;\n427-return-57-57", type_label=return];
430 [label="58_ approve\n430-function_definition-59-62", type_label=function_definition];
446 [label="59_ _approve(msg.sender, spender, value);\n446-expression_statement-60-60", type_label=expression_statement];
457 [label="60_ return true;\n457-return-61-61", type_label=return];
460 [label="62_ transferFrom\n460-function_definition-63-67", type_label=function_definition];
480 [label="63_ _transfer(from, to, value);\n480-expression_statement-64-64", type_label=expression_statement];
489 [label="64_ _approve(from, msg.sender, _allowances[from][msg.sender].sub(value));\n489-expression_statement-65-65", type_label=expression_statement];
511 [label="65_ return true;\n511-return-66-66", type_label=return];
514 [label="67_ increaseAllowance\n514-function_definition-68-71", type_label=function_definition];
530 [label="68_ _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n530-expression_statement-69-69", type_label=expression_statement];
552 [label="69_ return true;\n552-return-70-70", type_label=return];
555 [label="71_ decreaseAllowance\n555-function_definition-72-75", type_label=function_definition];
571 [label="72_ _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n571-expression_statement-73-73", type_label=expression_statement];
593 [label="73_ return true;\n593-return-74-74", type_label=return];
596 [label="75_ _transfer\n596-function_definition-76-81", type_label=function_definition];
612 [label="76_ require(to != address(0), \"ERC20: transfer to the zero address\");\n612-expression_statement-77-77", type_label=expression_statement];
624 [label="77_ _balances[from] = _balances[from].sub(value);\n624-expression_statement-78-78", type_label=expression_statement];
637 [label="78_ _balances[to] = _balances[to].add(value);\n637-expression_statement-79-79", type_label=expression_statement];
658 [label="81_ _mint\n658-function_definition-82-87", type_label=function_definition];
670 [label="82_ require(account != address(0), \"ERC20: mint to the zero address\");\n670-expression_statement-83-83", type_label=expression_statement];
682 [label="83_ _totalSupply = _totalSupply.add(value);\n682-expression_statement-84-84", type_label=expression_statement];
691 [label="84_ _balances[account] = _balances[account].add(value);\n691-expression_statement-85-85", type_label=expression_statement];
714 [label="87_ _burn\n714-function_definition-88-93", type_label=function_definition];
726 [label="88_ require(account != address(0), \"ERC20: burn from the zero address\");\n726-expression_statement-89-89", type_label=expression_statement];
738 [label="89_ _totalSupply = _totalSupply.sub(value);\n738-expression_statement-90-90", type_label=expression_statement];
747 [label="90_ _balances[account] = _balances[account].sub(value);\n747-expression_statement-91-91", type_label=expression_statement];
770 [label="93_ _approve\n770-function_definition-94-99", type_label=function_definition];
786 [label="94_ require(owner != address(0), \"ERC20: approve from the zero address\");\n786-expression_statement-95-95", type_label=expression_statement];
798 [label="95_ require(spender != address(0), \"ERC20: approve to the zero address\");\n798-expression_statement-96-96", type_label=expression_statement];
810 [label="96_ _allowances[owner][spender] = value;\n810-expression_statement-97-97", type_label=expression_statement];
826 [label="99_ _burnFrom\n826-function_definition-100-103", type_label=function_definition];
838 [label="100_ _burn(account, value);\n838-expression_statement-101-101", type_label=expression_statement];
845 [label="101_ _approve(account, msg.sender, _allowances[account][msg.sender].sub(value));\n845-expression_statement-102-102", type_label=expression_statement];
873 [label="105_ string private _name;\n873-new_variable-106-106", type_label=new_variable];
878 [label="106_ string private _symbol;\n878-new_variable-107-107", type_label=new_variable];
883 [label="107_ uint8 private _decimals;\n883-new_variable-108-108", type_label=new_variable];
902 [label="109_ _name = name;\n902-expression_statement-110-110", type_label=expression_statement];
906 [label="110_ _symbol = symbol;\n906-expression_statement-111-111", type_label=expression_statement];
910 [label="111_ _decimals = decimals;\n910-expression_statement-112-112", type_label=expression_statement];
914 [label="113_ name\n914-function_definition-114-116", type_label=function_definition];
923 [label="114_ return _name;\n923-return-115-115", type_label=return];
925 [label="116_ symbol\n925-function_definition-117-119", type_label=function_definition];
934 [label="117_ return _symbol;\n934-return-118-118", type_label=return];
936 [label="119_ decimals\n936-function_definition-120-122", type_label=function_definition];
945 [label="120_ return _decimals;\n945-return-121-121", type_label=return];
956 [label="124_ uint8 public constant DECIMALS = 7;\n956-new_variable-125-125", type_label=new_variable];
962 [label="125_ uint256 public constant INITIAL_SUPPLY = 5421301301958463;\n962-new_variable-126-126", type_label=new_variable];
969 [label="126_ ERC20Detailed(\"BOSAGORA\", \"BOA\", DECIMALS)\n969-expression_statement-127-127", type_label=expression_statement];
980 [label="127_ _mint(msg.sender, INITIAL_SUPPLY);\n980-expression_statement-128-128", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
129 -> 146  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
146 -> 151  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
146 -> 1130  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1130 -> 153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 1130  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
151 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
153 -> 161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
161 -> 173  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
173 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
175 -> 192  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
192 -> 202  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
202 -> 210  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
210 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
212 -> 229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
229 -> 239  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
239 -> 247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
247 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
249 -> 266  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
266 -> 274  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
274 -> 284  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
284 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
286 -> 303  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
303 -> 313  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
313 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
328 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
335 -> 344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
349 -> 358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
358 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
360 -> 373  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
373 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
377 -> 394  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
394 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
400 -> 416  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
416 -> 427  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
427 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
430 -> 446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
446 -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
457 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
460 -> 480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
480 -> 489  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
489 -> 511  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
511 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
514 -> 530  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
530 -> 552  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
552 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
555 -> 571  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
571 -> 593  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
593 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
596 -> 612  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
612 -> 624  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
624 -> 637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
658 -> 670  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
670 -> 682  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
682 -> 691  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
726 -> 738  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
738 -> 747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
770 -> 786  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
786 -> 798  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
798 -> 810  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
826 -> 838  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
838 -> 845  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
873 -> 878  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
878 -> 883  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
902 -> 906  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
906 -> 910  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
914 -> 923  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
923 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
925 -> 934  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
934 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
936 -> 945  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
945 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
956 -> 962  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
