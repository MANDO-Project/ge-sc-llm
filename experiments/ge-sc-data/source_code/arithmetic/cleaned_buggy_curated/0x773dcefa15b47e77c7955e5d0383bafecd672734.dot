digraph  {
12 [label="2_ mul\n12-function_definition-3-10", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", type_label=if];
1235 [label="3_ end_if", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", type_label=return];
37 [label="6_ c = a * b;\n37-expression_statement-7-7", type_label=expression_statement];
43 [label="7_ assert(c / a == b);\n43-expression_statement-8-8", type_label=expression_statement];
52 [label="8_ return c;\n52-return-9-9", type_label=return];
54 [label="10_ div\n54-function_definition-11-13", type_label=function_definition];
71 [label="11_ return a / b;\n71-return-12-12", type_label=return];
75 [label="13_ sub\n75-function_definition-14-17", type_label=function_definition];
92 [label="14_ assert(b <= a);\n92-expression_statement-15-15", type_label=expression_statement];
99 [label="15_ return a - b;\n99-return-16-16", type_label=return];
103 [label="17_ add\n103-function_definition-18-22", type_label=function_definition];
121 [label="18_ c = a + b;\n121-expression_statement-19-19", type_label=expression_statement];
127 [label="19_ assert(c >= a);\n127-expression_statement-20-20", type_label=expression_statement];
134 [label="20_ return c;\n134-return-21-21", type_label=return];
139 [label="24_ address public owner;\n139-new_variable-25-25", type_label=new_variable];
154 [label="26_ Ownable\n154-function_definition-27-29", type_label=function_definition];
158 [label="27_ owner = msg.sender;\n158-expression_statement-28-28", type_label=expression_statement];
164 [label="29_ modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n164-expression_statement-30-33", type_label=expression_statement];
167 [label="30_ require(msg.sender == owner);\n167-expression_statement-31-31", type_label=expression_statement];
176 [label="31_ _;\n176-expression_statement-32-32", type_label=expression_statement];
178 [label="33_ transferOwnership\n178-function_definition-34-38", type_label=function_definition];
185 [label="33_ onlyOwner\n185-expression_statement-34-34", type_label=expression_statement];
188 [label="34_ require(newOwner != address(0));\n188-expression_statement-35-35", type_label=expression_statement];
197 [label="35_ OwnershipTransferred(owner, newOwner);\n197-expression_statement-36-36", type_label=expression_statement];
204 [label="36_ owner = newOwner;\n204-expression_statement-37-37", type_label=expression_statement];
211 [label="40_ uint256 public totalSupply;\n211-new_variable-41-41", type_label=new_variable];
216 [label="41_ balanceOf\n216-function_definition-42-42", type_label=function_definition];
228 [label="42_ transfer\n228-function_definition-43-43", type_label=function_definition];
263 [label="46_ allowance\n263-function_definition-47-47", type_label=function_definition];
279 [label="47_ transferFrom\n279-function_definition-48-48", type_label=function_definition];
298 [label="48_ approve\n298-function_definition-49-49", type_label=function_definition];
338 [label="53_ mapping(address => uint256) balances;\n338-new_variable-54-54", type_label=new_variable];
344 [label="54_ transfer\n344-function_definition-55-62", type_label=function_definition];
360 [label="55_ require(_to != address(0));\n360-expression_statement-56-56", type_label=expression_statement];
369 [label="56_ require(_value <= balances[msg.sender]);\n369-expression_statement-57-57", type_label=expression_statement];
380 [label="57_ balances[msg.sender] = balances[msg.sender].sub(_value);\n380-expression_statement-58-58", type_label=expression_statement];
397 [label="58_ balances[_to] = balances[_to].add(_value);\n397-expression_statement-59-59", type_label=expression_statement];
410 [label="59_ Transfer(msg.sender, _to, _value);\n410-expression_statement-60-60", type_label=expression_statement];
421 [label="60_ return true;\n421-return-61-61", type_label=return];
424 [label="62_ balanceOf\n424-function_definition-63-65", type_label=function_definition];
438 [label="63_ return balances[_owner];\n438-return-64-64", type_label=return];
451 [label="67_ mapping (address => mapping (address => uint256)) internal allowed;\n451-new_variable-68-68", type_label=new_variable];
460 [label="68_ transferFrom\n460-function_definition-69-78", type_label=function_definition];
480 [label="69_ require(_to != address(0));\n480-expression_statement-70-70", type_label=expression_statement];
489 [label="70_ require(_value <= balances[_from]);\n489-expression_statement-71-71", type_label=expression_statement];
498 [label="71_ require(_value <= allowed[_from][msg.sender]);\n498-expression_statement-72-72", type_label=expression_statement];
511 [label="72_ balances[_from] = balances[_from].sub(_value);\n511-expression_statement-73-73", type_label=expression_statement];
524 [label="73_ balances[_to] = balances[_to].add(_value);\n524-expression_statement-74-74", type_label=expression_statement];
537 [label="74_ allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n537-expression_statement-75-75", type_label=expression_statement];
558 [label="75_ Transfer(_from, _to, _value);\n558-expression_statement-76-76", type_label=expression_statement];
567 [label="76_ return true;\n567-return-77-77", type_label=return];
570 [label="78_ approve\n570-function_definition-79-83", type_label=function_definition];
586 [label="79_ allowed[msg.sender][_spender] = _value;\n586-expression_statement-80-80", type_label=expression_statement];
596 [label="80_ Approval(msg.sender, _spender, _value);\n596-expression_statement-81-81", type_label=expression_statement];
607 [label="81_ return true;\n607-return-82-82", type_label=return];
610 [label="83_ allowance\n610-function_definition-84-86", type_label=function_definition];
627 [label="84_ return allowed[_owner][_spender];\n627-return-85-85", type_label=return];
633 [label="86_ increaseApproval\n633-function_definition-87-91", type_label=function_definition];
649 [label="87_ allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n649-expression_statement-88-88", type_label=expression_statement];
670 [label="88_ Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n670-expression_statement-89-89", type_label=expression_statement];
687 [label="89_ return true;\n687-return-90-90", type_label=return];
690 [label="91_ decreaseApproval\n690-function_definition-92-101", type_label=function_definition];
706 [label="92_ uint oldValue = allowed[msg.sender][_spender];\n706-new_variable-93-93", type_label=new_variable];
718 [label="93_ if__subtractedValue > oldValue\n718-if-94-98", type_label=if];
1923 [label="93_ end_if", type_label=end_if];
723 [label="94_ allowed[msg.sender][_spender] = 0;\n723-expression_statement-95-95", type_label=expression_statement];
734 [label="96_ allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n734-expression_statement-97-97", type_label=expression_statement];
749 [label="98_ Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n749-expression_statement-99-99", type_label=expression_statement];
766 [label="99_ return true;\n766-return-100-100", type_label=return];
788 [label="104_ burn\n788-function_definition-105-107", type_label=function_definition];
796 [label="105_ _burn(msg.sender, _value);\n796-expression_statement-106-106", type_label=expression_statement];
805 [label="107_ _burn\n805-function_definition-108-114", type_label=function_definition];
817 [label="108_ require(_value <= balances[_who]);\n817-expression_statement-109-109", type_label=expression_statement];
826 [label="109_ balances[_who] = balances[_who].sub(_value);\n826-expression_statement-110-110", type_label=expression_statement];
839 [label="110_ totalSupply = totalSupply.sub(_value);\n839-expression_statement-111-111", type_label=expression_statement];
883 [label="117_ modifier hasMintPermission() {\n    require(msg.sender == owner);\n    _;\n  }\n883-expression_statement-118-121", type_label=expression_statement];
886 [label="118_ require(msg.sender == owner);\n886-expression_statement-119-119", type_label=expression_statement];
895 [label="119_ _;\n895-expression_statement-120-120", type_label=expression_statement];
897 [label="121_ mint\n897-function_definition-122-132", type_label=function_definition];
907 [label="122_ hasMintPermission\n907-expression_statement-123-123", type_label=expression_statement];
915 [label="126_ totalSupply = totalSupply.add(_amount);\n915-expression_statement-127-127", type_label=expression_statement];
924 [label="127_ balances[_to] = balances[_to].add(_amount);\n924-expression_statement-128-128", type_label=expression_statement];
953 [label="130_ return true;\n953-return-131-131", type_label=return];
966 [label="136_ bool public paused = false;\n966-new_variable-137-137", type_label=new_variable];
973 [label="137_ modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n973-expression_statement-138-141", type_label=expression_statement];
976 [label="138_ require(!paused);\n976-expression_statement-139-139", type_label=expression_statement];
982 [label="139_ _;\n982-expression_statement-140-140", type_label=expression_statement];
984 [label="141_ modifier whenPaused() {\n    require(paused);\n    _;\n  }\n984-expression_statement-142-145", type_label=expression_statement];
987 [label="142_ require(paused);\n987-expression_statement-143-143", type_label=expression_statement];
992 [label="143_ _;\n992-expression_statement-144-144", type_label=expression_statement];
994 [label="145_ pause\n994-function_definition-146-149", type_label=function_definition];
996 [label="145_ onlyOwner\n996-expression_statement-146-146", type_label=expression_statement];
998 [label="145_ whenNotPaused\n998-expression_statement-146-146", type_label=expression_statement];
1002 [label="146_ paused = true;\n1002-expression_statement-147-147", type_label=expression_statement];
1007 [label="147_ Pause();\n1007-expression_statement-148-148", type_label=expression_statement];
1010 [label="149_ unpause\n1010-function_definition-150-153", type_label=function_definition];
1012 [label="149_ onlyOwner\n1012-expression_statement-150-150", type_label=expression_statement];
1014 [label="149_ whenPaused\n1014-expression_statement-150-150", type_label=expression_statement];
1018 [label="150_ paused = false;\n1018-expression_statement-151-151", type_label=expression_statement];
1023 [label="151_ Unpause();\n1023-expression_statement-152-152", type_label=expression_statement];
1035 [label="155_ transfer\n1035-function_definition-156-158", type_label=function_definition];
1046 [label="155_ whenNotPaused\n1046-expression_statement-156-156", type_label=expression_statement];
1053 [label="156_ return super.transfer(_to, _value);\n1053-return-157-157", type_label=return];
1062 [label="158_ transferFrom\n1062-function_definition-159-161", type_label=function_definition];
1077 [label="158_ whenNotPaused\n1077-expression_statement-159-159", type_label=expression_statement];
1084 [label="159_ return super.transferFrom(_from, _to, _value);\n1084-return-160-160", type_label=return];
1095 [label="161_ approve\n1095-function_definition-162-164", type_label=function_definition];
1106 [label="161_ whenNotPaused\n1106-expression_statement-162-162", type_label=expression_statement];
1113 [label="162_ return super.approve(_spender, _value);\n1113-return-163-163", type_label=return];
1122 [label="164_ increaseApproval\n1122-function_definition-165-167", type_label=function_definition];
1133 [label="164_ whenNotPaused\n1133-expression_statement-165-165", type_label=expression_statement];
1141 [label="165_ return super.increaseApproval(_spender, _addedValue);\n1141-return-166-166", type_label=return];
1150 [label="167_ decreaseApproval\n1150-function_definition-168-170", type_label=function_definition];
1161 [label="167_ whenNotPaused\n1161-expression_statement-168-168", type_label=expression_statement];
1169 [label="168_ return super.decreaseApproval(_spender, _subtractedValue);\n1169-return-169-169", type_label=return];
1190 [label="172_ string public constant name = \"SignalCoin\";\n1190-new_variable-173-173", type_label=new_variable];
1197 [label="173_ string public constant symbol = \"SGC\";\n1197-new_variable-174-174", type_label=new_variable];
1204 [label="174_ uint8 public constant decimals = 6;\n1204-new_variable-175-175", type_label=new_variable];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
12 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 1235  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1235 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 1235  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 43  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
43 -> 52  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
52 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
54 -> 71  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
71 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
75 -> 92  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
92 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
99 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
103 -> 121  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
121 -> 127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
127 -> 134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
134 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
154 -> 158  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
167 -> 176  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
178 -> 188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
188 -> 197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
197 -> 204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
344 -> 360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
360 -> 369  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
369 -> 380  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
380 -> 397  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
397 -> 410  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
410 -> 421  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
421 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
424 -> 438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
460 -> 480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
480 -> 489  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
489 -> 498  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
498 -> 511  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
511 -> 524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
524 -> 537  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
537 -> 558  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
558 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
567 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
570 -> 586  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
586 -> 596  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
596 -> 607  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
607 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
610 -> 627  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
627 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
633 -> 649  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
649 -> 670  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
670 -> 687  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
690 -> 706  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
706 -> 718  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
718 -> 723  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
718 -> 734  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1923 -> 749  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
723 -> 1923  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
734 -> 1923  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
749 -> 766  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
766 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
788 -> 796  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
805 -> 817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
817 -> 826  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
826 -> 839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
886 -> 895  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
897 -> 915  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
915 -> 924  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
953 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
966 -> 973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
973 -> 984  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
976 -> 982  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
987 -> 992  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
994 -> 1002  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
996 -> 998  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1002 -> 1007  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1010 -> 1018  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1012 -> 1014  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1018 -> 1023  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1035 -> 1053  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1053 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1062 -> 1084  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1084 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1095 -> 1113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1113 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1122 -> 1141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1141 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1150 -> 1169  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1169 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1190 -> 1197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1197 -> 1204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
