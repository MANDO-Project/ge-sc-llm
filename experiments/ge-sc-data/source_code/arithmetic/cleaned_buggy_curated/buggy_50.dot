digraph  {
13 [label="3_ mapping(address => uint) balances_intou2;\n13-new_variable-4-4", method="", type_label=new_variable];
19 [label="4_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n19-function_definition-5-10", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
35 [label="5_ require(balances_intou2[msg.sender] - _value >= 0);\n35-expression_statement-6-6", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
48 [label="6_ balances_intou2[msg.sender] -= _value;\n48-expression_statement-7-7", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
56 [label="7_ balances_intou2[_to] += _value;\n56-expression_statement-8-8", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
62 [label="8_ return true;\n62-return-9-9", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
65 [label="10_ address payable private manager;\n65-new_variable-11-11", method="", type_label=new_variable];
70 [label="11_ mapping(address => uint) public lockTime_intou17;\n70-new_variable-12-12", method="", type_label=new_variable];
77 [label="12_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n77-function_definition-13-15", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
85 [label="13_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n85-expression_statement-14-14", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
93 [label="15_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n93-function_definition-16-20", method="withdraw_intou17()", type_label=function_definition];
97 [label="16_ require(now > lockTime_intou17[msg.sender]);\n97-expression_statement-17-17", method="withdraw_intou17()", type_label=expression_statement];
108 [label="17_ uint transferValue_intou17 = 10;\n108-new_variable-18-18", method="withdraw_intou17()", type_label=new_variable];
114 [label="18_ msg.sender.transfer(transferValue_intou17);\n114-expression_statement-19-19", method="withdraw_intou17()", type_label=expression_statement];
123 [label="20_ bool private contractactive;\n123-new_variable-21-21", method="", type_label=new_variable];
128 [label="21_ mapping(address => uint) public lockTime_intou37;\n128-new_variable-22-22", method="", type_label=new_variable];
135 [label="22_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n135-function_definition-23-25", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
143 [label="23_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n143-expression_statement-24-24", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
151 [label="25_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n151-function_definition-26-30", method="withdraw_intou37()", type_label=function_definition];
155 [label="26_ require(now > lockTime_intou37[msg.sender]);\n155-expression_statement-27-27", method="withdraw_intou37()", type_label=expression_statement];
166 [label="27_ uint transferValue_intou37 = 10;\n166-new_variable-28-28", method="withdraw_intou37()", type_label=new_variable];
172 [label="28_ msg.sender.transfer(transferValue_intou37);\n172-expression_statement-29-29", method="withdraw_intou37()", type_label=expression_statement];
181 [label="30_ uint private hashfee;\n181-new_variable-31-31", method="", type_label=new_variable];
186 [label="31_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n186-function_definition-32-35", method="bug_intou3()", type_label=function_definition];
190 [label="32_ uint8 vundflw =0;\n190-new_variable-33-33", method="bug_intou3()", type_label=new_variable];
196 [label="33_ vundflw = vundflw -10;\n196-expression_statement-34-34", method="bug_intou3()", type_label=expression_statement];
202 [label="35_ uint private changehashownerfee;\n202-new_variable-36-36", method="", type_label=new_variable];
207 [label="36_ struct HashRegistration \n    {\n        address owner;\n        uint registrationtime;\n    }\n207-expression_statement-37-41", method="HashRegistration()", type_label=expression_statement];
217 [label="41_ mapping(address => uint) public lockTime_intou9;\n217-new_variable-42-42", method="", type_label=new_variable];
224 [label="42_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n224-function_definition-43-45", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
232 [label="43_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n232-expression_statement-44-44", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
240 [label="45_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n240-function_definition-46-50", method="withdraw_intou9()", type_label=function_definition];
244 [label="46_ require(now > lockTime_intou9[msg.sender]);\n244-expression_statement-47-47", method="withdraw_intou9()", type_label=expression_statement];
255 [label="47_ uint transferValue_intou9 = 10;\n255-new_variable-48-48", method="withdraw_intou9()", type_label=new_variable];
261 [label="48_ msg.sender.transfer(transferValue_intou9);\n261-expression_statement-49-49", method="withdraw_intou9()", type_label=expression_statement];
270 [label="50_ mapping(bytes32 => HashRegistration[]) HashList;\n270-new_variable-51-51", method="", type_label=new_variable];
278 [label="51_ mapping(address => uint) public lockTime_intou25;\n278-new_variable-52-52", method="", type_label=new_variable];
285 [label="52_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n285-function_definition-53-55", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
293 [label="53_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n293-expression_statement-54-54", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
301 [label="55_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n301-function_definition-56-60", method="withdraw_intou25()", type_label=function_definition];
305 [label="56_ require(now > lockTime_intou25[msg.sender]);\n305-expression_statement-57-57", method="withdraw_intou25()", type_label=expression_statement];
316 [label="57_ uint transferValue_intou25 = 10;\n316-new_variable-58-58", method="withdraw_intou25()", type_label=new_variable];
322 [label="58_ msg.sender.transfer(transferValue_intou25);\n322-expression_statement-59-59", method="withdraw_intou25()", type_label=expression_statement];
331 [label="60_ uint private HashListLength;\n331-new_variable-61-61", method="", type_label=new_variable];
336 [label="61_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n336-function_definition-62-65", method="bug_intou31()", type_label=function_definition];
340 [label="62_ uint8 vundflw =0;\n340-new_variable-63-63", method="bug_intou31()", type_label=new_variable];
346 [label="63_ vundflw = vundflw -10;\n346-expression_statement-64-64", method="bug_intou31()", type_label=expression_statement];
366 [label="66_ mapping(address => uint) public lockTime_intou13;\n366-new_variable-67-67", method="", type_label=new_variable];
373 [label="67_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n373-function_definition-68-70", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
381 [label="68_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n381-expression_statement-69-69", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
389 [label="70_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n389-function_definition-71-75", method="withdraw_intou13()", type_label=function_definition];
393 [label="71_ require(now > lockTime_intou13[msg.sender]);\n393-expression_statement-72-72", method="withdraw_intou13()", type_label=expression_statement];
404 [label="72_ uint transferValue_intou13 = 10;\n404-new_variable-73-73", method="withdraw_intou13()", type_label=new_variable];
410 [label="73_ msg.sender.transfer(transferValue_intou13);\n410-expression_statement-74-74", method="withdraw_intou13()", type_label=expression_statement];
439 [label="78_ manager = msg.sender;\n439-expression_statement-79-79", method="", type_label=expression_statement];
445 [label="79_ contractactive = true;\n445-expression_statement-80-80", method="", type_label=expression_statement];
450 [label="80_ hashfee = 5000000000000000;\n450-expression_statement-81-81", method="", type_label=expression_statement];
454 [label="81_ changehashownerfee = 25000000000000000;\n454-expression_statement-82-82", method="", type_label=expression_statement];
458 [label="82_ HashListLength = 0;\n458-expression_statement-83-83", method="", type_label=expression_statement];
462 [label="84_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n462-function_definition-85-88", method="bug_intou19()", type_label=function_definition];
466 [label="85_ uint8 vundflw =0;\n466-new_variable-86-86", method="bug_intou19()", type_label=new_variable];
472 [label="86_ vundflw = vundflw -10;\n472-expression_statement-87-87", method="bug_intou19()", type_label=expression_statement];
478 [label="88_ modifier onlyManager()\n    {\n        require(msg.sender == manager);\n        _;\n    }\n478-expression_statement-89-93", method="", type_label=expression_statement];
481 [label="90_ require(msg.sender == manager);\n481-expression_statement-91-91", method="", type_label=expression_statement];
490 [label="91_ _;\n490-expression_statement-92-92", method="", type_label=expression_statement];
492 [label="93_ function gethashfee() external view returns(uint)\n    {\n        return hashfee;\n    }\n492-function_definition-94-97", method="gethashfee()", type_label=function_definition];
501 [label="95_ return hashfee;\n501-return-96-96", method="gethashfee()", type_label=return];
503 [label="97_ mapping(address => uint) balances_intou26;\n503-new_variable-98-98", method="", type_label=new_variable];
509 [label="98_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n509-function_definition-99-104", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
525 [label="99_ require(balances_intou26[msg.sender] - _value >= 0);\n525-expression_statement-100-100", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
538 [label="100_ balances_intou26[msg.sender] -= _value;\n538-expression_statement-101-101", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
546 [label="101_ balances_intou26[_to] += _value;\n546-expression_statement-102-102", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
552 [label="102_ return true;\n552-return-103-103", method="transfer_intou26(address _to,uint _value)", type_label=return];
555 [label="104_ function sethashfee(uint newfee) external onlyManager\n    {\n        require(newfee >= 0);\n        hashfee = newfee;\n    }\n555-function_definition-105-109", method="sethashfee(uint newfee)", type_label=function_definition];
562 [label="104_ onlyManager\n562-expression_statement-105-105", method="sethashfee(uint newfee)", type_label=expression_statement];
565 [label="106_ require(newfee >= 0);\n565-expression_statement-107-107", method="sethashfee(uint newfee)", type_label=expression_statement];
572 [label="107_ hashfee = newfee;\n572-expression_statement-108-108", method="sethashfee(uint newfee)", type_label=expression_statement];
576 [label="109_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n576-function_definition-110-113", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
584 [label="110_ uint8 vundflw1=0;\n584-new_variable-111-111", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
590 [label="111_ vundflw1 = vundflw1 + p_intou20;\n590-expression_statement-112-112", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
596 [label="113_ function getchangehashownerfee() external view returns(uint)\n    {\n        return changehashownerfee;\n    }\n596-function_definition-114-117", method="getchangehashownerfee()", type_label=function_definition];
605 [label="115_ return changehashownerfee;\n605-return-116-116", method="getchangehashownerfee()", type_label=return];
607 [label="117_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n607-function_definition-118-121", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
615 [label="118_ uint8 vundflw1=0;\n615-new_variable-119-119", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
621 [label="119_ vundflw1 = vundflw1 + p_intou32;\n621-expression_statement-120-120", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
627 [label="121_ function setchangehashownerfee(uint newfee) external onlyManager\n    {\n        require(newfee >= 0);\n        changehashownerfee = newfee;\n    }\n627-function_definition-122-126", method="setchangehashownerfee(uint newfee)", type_label=function_definition];
634 [label="121_ onlyManager\n634-expression_statement-122-122", method="setchangehashownerfee(uint newfee)", type_label=expression_statement];
637 [label="123_ require(newfee >= 0);\n637-expression_statement-124-124", method="setchangehashownerfee(uint newfee)", type_label=expression_statement];
644 [label="124_ changehashownerfee = newfee;\n644-expression_statement-125-125", method="setchangehashownerfee(uint newfee)", type_label=expression_statement];
648 [label="126_ mapping(address => uint) balances_intou38;\n648-new_variable-127-127", method="", type_label=new_variable];
654 [label="127_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n654-function_definition-128-133", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
670 [label="128_ require(balances_intou38[msg.sender] - _value >= 0);\n670-expression_statement-129-129", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
683 [label="129_ balances_intou38[msg.sender] -= _value;\n683-expression_statement-130-130", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
691 [label="130_ balances_intou38[_to] += _value;\n691-expression_statement-131-131", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
697 [label="131_ return true;\n697-return-132-132", method="transfer_intou38(address _to,uint _value)", type_label=return];
700 [label="133_ function getcontractactive() external view returns (bool)\n    {\n        return contractactive;\n    }\n700-function_definition-134-137", method="getcontractactive()", type_label=function_definition];
709 [label="135_ return contractactive;\n709-return-136-136", method="getcontractactive()", type_label=return];
711 [label="137_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n711-function_definition-138-141", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
719 [label="138_ uint8 vundflw1=0;\n719-new_variable-139-139", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
725 [label="139_ vundflw1 = vundflw1 + p_intou4;\n725-expression_statement-140-140", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
731 [label="141_ function setcontractactive(bool contactive) external onlyManager\n    {\n        contractactive = contactive;\n    }\n731-function_definition-142-145", method="setcontractactive(bool contactive)", type_label=function_definition];
738 [label="141_ onlyManager\n738-expression_statement-142-142", method="setcontractactive(bool contactive)", type_label=expression_statement];
741 [label="143_ contractactive = contactive;\n741-expression_statement-144-144", method="setcontractactive(bool contactive)", type_label=expression_statement];
745 [label="145_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n745-function_definition-146-149", method="bug_intou7()", type_label=function_definition];
749 [label="146_ uint8 vundflw =0;\n749-new_variable-147-147", method="bug_intou7()", type_label=new_variable];
755 [label="147_ vundflw = vundflw -10;\n755-expression_statement-148-148", method="bug_intou7()", type_label=expression_statement];
761 [label="149_ function getmanager() external view returns(address)\n    {\n        return manager;\n    }\n761-function_definition-150-153", method="getmanager()", type_label=function_definition];
770 [label="151_ return manager;\n770-return-152-152", method="getmanager()", type_label=return];
772 [label="153_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n772-function_definition-154-157", method="bug_intou23()", type_label=function_definition];
776 [label="154_ uint8 vundflw =0;\n776-new_variable-155-155", method="bug_intou23()", type_label=new_variable];
782 [label="155_ vundflw = vundflw -10;\n782-expression_statement-156-156", method="bug_intou23()", type_label=expression_statement];
788 [label="157_ function setmanager(address payable newmngr) external onlyManager\n    {\n        require(newmngr.balance > 0);\n        manager = newmngr;\n    }\n788-function_definition-158-162", method="setmanager(address payable newmngr)", type_label=function_definition];
795 [label="157_ onlyManager\n795-expression_statement-158-158", method="setmanager(address payable newmngr)", type_label=expression_statement];
798 [label="159_ require(newmngr.balance > 0);\n798-expression_statement-160-160", method="setmanager(address payable newmngr)", type_label=expression_statement];
807 [label="160_ manager = newmngr;\n807-expression_statement-161-161", method="setmanager(address payable newmngr)", type_label=expression_statement];
811 [label="162_ mapping(address => uint) balances_intou14;\n811-new_variable-163-163", method="", type_label=new_variable];
817 [label="163_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n817-function_definition-164-169", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
833 [label="164_ require(balances_intou14[msg.sender] - _value >= 0);\n833-expression_statement-165-165", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
846 [label="165_ balances_intou14[msg.sender] -= _value;\n846-expression_statement-166-166", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
854 [label="166_ balances_intou14[_to] += _value;\n854-expression_statement-167-167", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
860 [label="167_ return true;\n860-return-168-168", method="transfer_intou14(address _to,uint _value)", type_label=return];
863 [label="169_ function getcontractbalance() public view returns(uint)\n    {\n        return address(this).balance;\n    }\n863-function_definition-170-173", method="getcontractbalance()", type_label=function_definition];
872 [label="171_ return address(this).balance;\n872-return-172-172", method="getcontractbalance()", type_label=return];
878 [label="173_ mapping(address => uint) balances_intou30;\n878-new_variable-174-174", method="", type_label=new_variable];
884 [label="174_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n884-function_definition-175-180", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
900 [label="175_ require(balances_intou30[msg.sender] - _value >= 0);\n900-expression_statement-176-176", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
913 [label="176_ balances_intou30[msg.sender] -= _value;\n913-expression_statement-177-177", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
921 [label="177_ balances_intou30[_to] += _value;\n921-expression_statement-178-178", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
927 [label="178_ return true;\n927-return-179-179", method="transfer_intou30(address _to,uint _value)", type_label=return];
930 [label="180_ function transfercontractbalance() external onlyManager\n    {\n        uint cb = address(this).balance;\n        require(cb > 0);\n        manager.transfer(cb);\n    }\n930-function_definition-181-186", method="transfercontractbalance()", type_label=function_definition];
933 [label="180_ onlyManager\n933-expression_statement-181-181", method="transfercontractbalance()", type_label=expression_statement];
936 [label="182_ uint cb = address(this).balance;\n936-new_variable-183-183", method="transfercontractbalance()", type_label=new_variable];
946 [label="183_ require(cb > 0);\n946-expression_statement-184-184", method="transfercontractbalance()", type_label=expression_statement];
953 [label="184_ manager.transfer(cb);\n953-expression_statement-185-185", method="transfercontractbalance()", type_label=expression_statement];
960 [label="186_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n960-function_definition-187-190", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
968 [label="187_ uint8 vundflw1=0;\n968-new_variable-188-188", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
974 [label="188_ vundflw1 = vundflw1 + p_intou8;\n974-expression_statement-189-189", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
980 [label="190_ function getHashOwnersCount(bytes32 hash) public view returns(uint)\n    {\n        return HashList[hash].length;\n    }\n980-function_definition-191-194", method="getHashOwnersCount(bytes32 hash)", type_label=function_definition];
993 [label="192_ return HashList[hash].length;\n993-return-193-193", method="getHashOwnersCount(bytes32 hash)", type_label=return];
999 [label="194_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n999-function_definition-195-198", method="bug_intou39()", type_label=function_definition];
1003 [label="195_ uint8 vundflw =0;\n1003-new_variable-196-196", method="bug_intou39()", type_label=new_variable];
1009 [label="196_ vundflw = vundflw -10;\n1009-expression_statement-197-197", method="bug_intou39()", type_label=expression_statement];
1015 [label="198_ function getNumberofHashesRegistered() external view returns(uint)\n    {\n        return HashListLength;\n    }\n1015-function_definition-199-202", method="getNumberofHashesRegistered()", type_label=function_definition];
1024 [label="200_ return HashListLength;\n1024-return-201-201", method="getNumberofHashesRegistered()", type_label=return];
1026 [label="202_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n1026-function_definition-203-206", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
1034 [label="203_ uint8 vundflw1=0;\n1034-new_variable-204-204", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
1040 [label="204_ vundflw1 = vundflw1 + p_intou36;\n1040-expression_statement-205-205", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
1046 [label="206_ function getHashDetails(bytes32 hash,uint indx) external view returns (address,uint)\n    {\n        uint owncount = getHashOwnersCount(hash);\n        require(owncount > 0);\n        require(indx < owncount);\n        return (HashList[hash][indx].owner,HashList[hash][indx].registrationtime);\n    }\n1046-function_definition-207-213", method="getHashDetails(bytes32 hash,uint indx)", type_label=function_definition];
1066 [label="208_ uint owncount = getHashOwnersCount(hash);\n1066-new_variable-209-209", method="getHashDetails(bytes32 hash,uint indx)", type_label=new_variable];
1075 [label="209_ require(owncount > 0);\n1075-expression_statement-210-210", method="getHashDetails(bytes32 hash,uint indx)", type_label=expression_statement];
1082 [label="210_ require(indx < owncount);\n1082-expression_statement-211-211", method="getHashDetails(bytes32 hash,uint indx)", type_label=expression_statement];
1089 [label="211_ return (HashList[hash][indx].owner,HashList[hash][indx].registrationtime);\n1089-return-212-212", method="getHashDetails(bytes32 hash,uint indx)", type_label=return];
1105 [label="213_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1105-function_definition-214-217", method="bug_intou35()", type_label=function_definition];
1109 [label="214_ uint8 vundflw =0;\n1109-new_variable-215-215", method="bug_intou35()", type_label=new_variable];
1115 [label="215_ vundflw = vundflw -10;\n1115-expression_statement-216-216", method="bug_intou35()", type_label=expression_statement];
1121 [label="217_ function registerHash(bytes32 hash) external payable\n    {\n        require(contractactive == true);\n        require(getHashOwnersCount(hash) == 0);\n        require(msg.value == hashfee);\n        HashRegistration memory thisregistration;\n        thisregistration.owner = msg.sender;\n        thisregistration.registrationtime = now;\n        HashList[hash].push(thisregistration);\n        HashListLength++;\n        emit RegisterHashEvent(thisregistration.owner, hash, thisregistration.registrationtime);\n    }\n1121-function_definition-218-229", method="registerHash(bytes32 hash)", type_label=function_definition];
1130 [label="219_ require(contractactive == true);\n1130-expression_statement-220-220", method="registerHash(bytes32 hash)", type_label=expression_statement];
1138 [label="220_ require(getHashOwnersCount(hash) == 0);\n1138-expression_statement-221-221", method="registerHash(bytes32 hash)", type_label=expression_statement];
1148 [label="221_ require(msg.value == hashfee);\n1148-expression_statement-222-222", method="registerHash(bytes32 hash)", type_label=expression_statement];
1157 [label="222_ HashRegistration memory thisregistration;\n1157-new_variable-223-223", method="registerHash(bytes32 hash)", type_label=new_variable];
1163 [label="223_ thisregistration.owner = msg.sender;\n1163-expression_statement-224-224", method="registerHash(bytes32 hash)", type_label=expression_statement];
1171 [label="224_ thisregistration.registrationtime = now;\n1171-expression_statement-225-225", method="registerHash(bytes32 hash)", type_label=expression_statement];
1177 [label="225_ HashList[hash].push(thisregistration);\n1177-expression_statement-226-226", method="registerHash(bytes32 hash)", type_label=expression_statement];
1186 [label="226_ HashListLength++;\n1186-expression_statement-227-227", method="registerHash(bytes32 hash)", type_label=expression_statement];
1187 [label="226_ HashListLength++\n1187-expression_statement-227-227", method="registerHash(bytes32 hash)", type_label=expression_statement];
1201 [label="229_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n1201-function_definition-230-233", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
1209 [label="230_ uint8 vundflw1=0;\n1209-new_variable-231-231", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
1215 [label="231_ vundflw1 = vundflw1 + p_intou40;\n1215-expression_statement-232-232", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
1221 [label="233_ function changeHashOwnership(bytes32 hash, address newowner) external payable\n    {\n        require(contractactive == true);\n        uint owncount = getHashOwnersCount(hash);\n        require(owncount > 0);\n        require(msg.sender == HashList[hash][owncount - 1].owner); \n        require(msg.value == changehashownerfee);\n        HashRegistration memory thisregistration;\n        thisregistration.owner = newowner;\n        thisregistration.registrationtime = now;\n        HashList[hash].push(thisregistration);\n        emit ChangeHashOwnershipEvent(msg.sender, thisregistration.owner, hash, thisregistration.registrationtime);\n    }\n1221-function_definition-234-246", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=function_definition];
1234 [label="235_ require(contractactive == true);\n1234-expression_statement-236-236", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1242 [label="236_ uint owncount = getHashOwnersCount(hash);\n1242-new_variable-237-237", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=new_variable];
1251 [label="237_ require(owncount > 0);\n1251-expression_statement-238-238", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1258 [label="238_ require(msg.sender == HashList[hash][owncount - 1].owner);\n1258-expression_statement-239-239", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1275 [label="239_ require(msg.value == changehashownerfee);\n1275-expression_statement-240-240", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1284 [label="240_ HashRegistration memory thisregistration;\n1284-new_variable-241-241", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=new_variable];
1290 [label="241_ thisregistration.owner = newowner;\n1290-expression_statement-242-242", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1296 [label="242_ thisregistration.registrationtime = now;\n1296-expression_statement-243-243", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1302 [label="243_ HashList[hash].push(thisregistration);\n1302-expression_statement-244-244", method="changeHashOwnership(bytes32 hash,address newowner)", type_label=expression_statement];
1327 [label="246_ mapping(address => uint) public lockTime_intou33;\n1327-new_variable-247-247", method="", type_label=new_variable];
1334 [label="247_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n1334-function_definition-248-250", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
1342 [label="248_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n1342-expression_statement-249-249", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
1350 [label="250_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n1350-function_definition-251-255", method="withdraw_intou33()", type_label=function_definition];
1354 [label="251_ require(now > lockTime_intou33[msg.sender]);\n1354-expression_statement-252-252", method="withdraw_intou33()", type_label=expression_statement];
1365 [label="252_ uint transferValue_intou33 = 10;\n1365-new_variable-253-253", method="withdraw_intou33()", type_label=new_variable];
1371 [label="253_ msg.sender.transfer(transferValue_intou33);\n1371-expression_statement-254-254", method="withdraw_intou33()", type_label=expression_statement];
1383 [label="258_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1383-function_definition-259-262", method="bug_intou27()", type_label=function_definition];
1387 [label="259_ uint8 vundflw =0;\n1387-new_variable-260-260", method="bug_intou27()", type_label=new_variable];
1393 [label="260_ vundflw = vundflw -10;\n1393-expression_statement-261-261", method="bug_intou27()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
19 -> 35  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 56  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
56 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
65 -> 70  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 85  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 97  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
97 -> 108  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
108 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
123 -> 128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
135 -> 143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 155  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
155 -> 166  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
166 -> 172  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
186 -> 190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
190 -> 196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
202 -> 207  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
207 -> 217  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
224 -> 232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
240 -> 244  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
244 -> 255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
255 -> 261  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
270 -> 278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
285 -> 293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
301 -> 305  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
305 -> 316  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
316 -> 322  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
336 -> 340  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
340 -> 346  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
373 -> 381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
389 -> 393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
393 -> 404  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
404 -> 410  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
439 -> 445  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
445 -> 450  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
450 -> 454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
454 -> 458  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
462 -> 466  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
466 -> 472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
481 -> 490  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
492 -> 501  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
501 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
509 -> 525  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
525 -> 538  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
538 -> 546  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
546 -> 552  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
552 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
555 -> 565  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
565 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
576 -> 584  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
584 -> 590  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
596 -> 605  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
605 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
607 -> 615  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
615 -> 621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
627 -> 637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
637 -> 644  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
654 -> 670  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
670 -> 683  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
683 -> 691  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
691 -> 697  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
697 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
700 -> 709  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
709 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
711 -> 719  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
719 -> 725  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
731 -> 741  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
745 -> 749  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
749 -> 755  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
761 -> 770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
770 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
772 -> 776  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
776 -> 782  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
788 -> 798  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
798 -> 807  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
817 -> 833  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
833 -> 846  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
846 -> 854  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
854 -> 860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
860 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
863 -> 872  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
872 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
884 -> 900  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
900 -> 913  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
913 -> 921  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
921 -> 927  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
927 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
930 -> 936  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
936 -> 946  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
946 -> 953  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
960 -> 968  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
968 -> 974  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
980 -> 993  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
993 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
999 -> 1003  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1003 -> 1009  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1015 -> 1024  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1024 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1026 -> 1034  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1034 -> 1040  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1046 -> 1066  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1066 -> 1075  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1075 -> 1082  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1082 -> 1089  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1089 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1105 -> 1109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1109 -> 1115  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1121 -> 1130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1130 -> 1138  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1138 -> 1148  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1148 -> 1157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1157 -> 1163  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1163 -> 1171  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1171 -> 1177  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1177 -> 1186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1201 -> 1209  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1209 -> 1215  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1221 -> 1234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1234 -> 1242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1242 -> 1251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1251 -> 1258  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1258 -> 1275  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1275 -> 1284  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1284 -> 1290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1290 -> 1296  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1296 -> 1302  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1334 -> 1342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1350 -> 1354  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1354 -> 1365  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1365 -> 1371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1383 -> 1387  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1387 -> 1393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
