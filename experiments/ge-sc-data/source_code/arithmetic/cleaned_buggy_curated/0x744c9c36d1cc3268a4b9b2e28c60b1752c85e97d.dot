digraph  {
13 [label="2_ safeAdd\n13-function_definition-3-6", type_label=function_definition];
31 [label="3_ c = a + b;\n31-expression_statement-4-4", type_label=expression_statement];
37 [label="4_ require(c >= a);\n37-expression_statement-5-5", type_label=expression_statement];
44 [label="6_ safeSub\n44-function_definition-7-10", type_label=function_definition];
62 [label="7_ require(b <= a);\n62-expression_statement-8-8", type_label=expression_statement];
69 [label="8_ c = a - b;\n69-expression_statement-9-9", type_label=expression_statement];
75 [label="10_ safeMul\n75-function_definition-11-14", type_label=function_definition];
93 [label="11_ c = a * b;\n93-expression_statement-12-12", type_label=expression_statement];
99 [label="12_ require(a == 0 || c / a == b);\n99-expression_statement-13-13", type_label=expression_statement];
112 [label="14_ safeDiv\n112-function_definition-15-18", type_label=function_definition];
130 [label="15_ require(b > 0);\n130-expression_statement-16-16", type_label=expression_statement];
137 [label="16_ c = a / b;\n137-expression_statement-17-17", type_label=expression_statement];
146 [label="20_ uint256 public totalSupply;\n146-new_variable-21-21", type_label=new_variable];
151 [label="21_ balanceOf\n151-function_definition-22-22", type_label=function_definition];
164 [label="22_ transfer\n164-function_definition-23-23", type_label=function_definition];
180 [label="23_ transferFrom\n180-function_definition-24-24", type_label=function_definition];
200 [label="24_ approve\n200-function_definition-25-25", type_label=function_definition];
216 [label="25_ allowance\n216-function_definition-26-26", type_label=function_definition];
264 [label="30_ address public owner;\n264-new_variable-31-31", type_label=new_variable];
269 [label="31_ address public newOwner;\n269-new_variable-32-32", type_label=new_variable];
286 [label="34_ owner = msg.sender;\n286-expression_statement-35-35", type_label=expression_statement];
292 [label="36_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n292-expression_statement-37-40", type_label=expression_statement];
295 [label="37_ require(msg.sender == owner);\n295-expression_statement-38-38", type_label=expression_statement];
304 [label="38_ _;\n304-expression_statement-39-39", type_label=expression_statement];
306 [label="40_ transferOwnership\n306-function_definition-41-43", type_label=function_definition];
313 [label="40_ onlyOwner\n313-expression_statement-41-41", type_label=expression_statement];
316 [label="41_ newOwner = _newOwner;\n316-expression_statement-42-42", type_label=expression_statement];
320 [label="43_ acceptOwnership\n320-function_definition-44-49", type_label=function_definition];
324 [label="44_ require(msg.sender == newOwner);\n324-expression_statement-45-45", type_label=expression_statement];
333 [label="45_ owner = newOwner;\n333-expression_statement-46-46", type_label=expression_statement];
337 [label="46_ newOwner = address(0);\n337-expression_statement-47-47", type_label=expression_statement];
361 [label="51_ address public owner = msg.sender;\n361-new_variable-52-52", type_label=new_variable];
369 [label="52_ string public symbol;\n369-new_variable-53-53", type_label=new_variable];
374 [label="53_ string public name;\n374-new_variable-54-54", type_label=new_variable];
379 [label="54_ uint8 public decimals;\n379-new_variable-55-55", type_label=new_variable];
384 [label="55_ uint public totalSupply;\n384-new_variable-56-56", type_label=new_variable];
389 [label="56_ mapping(address => uint) balances;\n389-new_variable-57-57", type_label=new_variable];
395 [label="57_ mapping(address => mapping(address => uint)) allowed;\n395-new_variable-58-58", type_label=new_variable];
405 [label="59_ symbol = \"ALV\";\n405-expression_statement-60-60", type_label=expression_statement];
410 [label="60_ name = \"Alluva\";\n410-expression_statement-61-61", type_label=expression_statement];
415 [label="61_ decimals = 18;\n415-expression_statement-62-62", type_label=expression_statement];
419 [label="62_ totalSupply = 3000000000000000000000000000;\n419-expression_statement-63-63", type_label=expression_statement];
423 [label="63_ balances[owner] = totalSupply;\n423-expression_statement-64-64", type_label=expression_statement];
439 [label="66_ balanceOf\n439-function_definition-67-69", type_label=function_definition];
453 [label="67_ return balances[_owner];\n453-return-68-68", type_label=return];
457 [label="69_ transfer\n457-function_definition-70-77", type_label=function_definition];
474 [label="70_ require(_to != address(0));\n474-expression_statement-71-71", type_label=expression_statement];
483 [label="71_ require(balances[msg.sender] >= _value);\n483-expression_statement-72-72", type_label=expression_statement];
494 [label="72_ balances[msg.sender] = safeSub(balances[msg.sender], _value);\n494-expression_statement-73-73", type_label=expression_statement];
511 [label="73_ balances[_to] = safeAdd(balances[_to], _value);\n511-expression_statement-74-74", type_label=expression_statement];
534 [label="75_ return true;\n534-return-76-76", type_label=return];
537 [label="77_ transferFrom\n537-function_definition-78-85", type_label=function_definition];
558 [label="78_ require(_to != address(0));\n558-expression_statement-79-79", type_label=expression_statement];
567 [label="79_ allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\n567-expression_statement-80-80", type_label=expression_statement];
588 [label="80_ balances[_from] = safeSub(balances[_from], _value);\n588-expression_statement-81-81", type_label=expression_statement];
601 [label="81_ balances[_to] = safeAdd(balances[_to], _value);\n601-expression_statement-82-82", type_label=expression_statement];
622 [label="83_ return true;\n622-return-84-84", type_label=return];
625 [label="85_ approve\n625-function_definition-86-91", type_label=function_definition];
642 [label="86_ require(_spender != address(0));\n642-expression_statement-87-87", type_label=expression_statement];
651 [label="87_ allowed[msg.sender][_spender] = _value;\n651-expression_statement-88-88", type_label=expression_statement];
671 [label="89_ return true;\n671-return-90-90", type_label=return];
674 [label="91_ allowance\n674-function_definition-92-94", type_label=function_definition];
692 [label="92_ return allowed[_owner][_spender];\n692-return-93-93", type_label=return];
698 [label="94_ increaseAllowance\n698-function_definition-95-100", type_label=function_definition];
714 [label="95_ require(_spender != address(0));\n714-expression_statement-96-96", type_label=expression_statement];
723 [label="96_ allowed[msg.sender][_spender] = safeAdd(allowed[msg.sender][_spender], _addedValue);\n723-expression_statement-97-97", type_label=expression_statement];
760 [label="98_ return true;\n760-return-99-99", type_label=return];
763 [label="100_ decreaseAllowance\n763-function_definition-101-106", type_label=function_definition];
779 [label="101_ require(_spender != address(0));\n779-expression_statement-102-102", type_label=expression_statement];
788 [label="102_ allowed[msg.sender][_spender] = safeSub(allowed[msg.sender][_spender], _subtractedValue);\n788-expression_statement-103-103", type_label=expression_statement];
825 [label="104_ return true;\n825-return-105-105", type_label=return];
834 [label="109_ transferAnyERC20Token\n834-function_definition-110-112", type_label=function_definition];
845 [label="109_ onlyOwner\n845-expression_statement-110-110", type_label=expression_statement];
853 [label="110_ return ERC20Interface(_tokenAddress).transfer(owner, _tokens);\n853-return-111-111", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
264 -> 269  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
295 -> 304  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
306 -> 316  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
324 -> 333  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
333 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
361 -> 369  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
369 -> 374  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
374 -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
379 -> 384  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
384 -> 389  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
389 -> 395  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
405 -> 410  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
410 -> 415  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
415 -> 419  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
419 -> 423  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
439 -> 453  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
453 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
457 -> 474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
474 -> 483  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
483 -> 494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
494 -> 511  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
534 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
537 -> 558  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
558 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
567 -> 588  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
588 -> 601  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
622 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
625 -> 642  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
642 -> 651  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
671 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
674 -> 692  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
692 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
698 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 723  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
760 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
763 -> 779  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
779 -> 788  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
825 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
834 -> 853  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
853 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
