digraph  {
13 [label="2_ mul\n13-function_definition-3-10", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", type_label=if];
1299 [label="3_ end_if", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", type_label=return];
56 [label="10_ div\n56-function_definition-11-15", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", type_label=return];
90 [label="15_ sub\n90-function_definition-16-20", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", type_label=return];
124 [label="20_ add\n124-function_definition-21-25", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", type_label=return];
158 [label="25_ mod\n158-function_definition-26-29", type_label=function_definition];
175 [label="26_ require(b != 0);\n175-expression_statement-27-27", type_label=expression_statement];
182 [label="27_ return a % b;\n182-return-28-28", type_label=return];
189 [label="31_ address private _owner;\n189-new_variable-32-32", type_label=new_variable];
206 [label="34_ _owner = msg.sender;\n206-expression_statement-35-35", type_label=expression_statement];
220 [label="37_ owner\n220-function_definition-38-40", type_label=function_definition];
229 [label="38_ return _owner;\n229-return-39-39", type_label=return];
231 [label="40_ modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n231-expression_statement-41-44", type_label=expression_statement];
234 [label="41_ require(isOwner());\n234-expression_statement-42-42", type_label=expression_statement];
240 [label="42_ _;\n240-expression_statement-43-43", type_label=expression_statement];
242 [label="44_ isOwner\n242-function_definition-45-47", type_label=function_definition];
251 [label="45_ return msg.sender == _owner;\n251-return-46-46", type_label=return];
257 [label="47_ renounceOwnership\n257-function_definition-48-51", type_label=function_definition];
260 [label="47_ onlyOwner\n260-expression_statement-48-48", type_label=expression_statement];
271 [label="49_ _owner = address(0);\n271-expression_statement-50-50", type_label=expression_statement];
277 [label="51_ transferOwnership\n277-function_definition-52-54", type_label=function_definition];
284 [label="51_ onlyOwner\n284-expression_statement-52-52", type_label=expression_statement];
287 [label="52_ _transferOwnership(newOwner);\n287-expression_statement-53-53", type_label=expression_statement];
292 [label="54_ _transferOwnership\n292-function_definition-55-59", type_label=function_definition];
300 [label="55_ require(newOwner != address(0));\n300-expression_statement-56-56", type_label=expression_statement];
315 [label="57_ _owner = newOwner;\n315-expression_statement-58-58", type_label=expression_statement];
322 [label="61_ totalSupply\n322-function_definition-62-62", type_label=function_definition];
330 [label="62_ balanceOf\n330-function_definition-63-63", type_label=function_definition];
342 [label="63_ allowance\n342-function_definition-64-64", type_label=function_definition];
358 [label="64_ transfer\n358-function_definition-65-65", type_label=function_definition];
373 [label="65_ approve\n373-function_definition-66-66", type_label=function_definition];
388 [label="66_ transferFrom\n388-function_definition-67-67", type_label=function_definition];
438 [label="71_ uint256 private _guardCounter;\n438-new_variable-72-72", type_label=new_variable];
445 [label="73_ _guardCounter = 1;\n445-expression_statement-74-74", type_label=expression_statement];
449 [label="75_ modifier nonReentrant() {\n        _guardCounter += 1;\n        uint256 localCounter = _guardCounter;\n        _;\n        require(localCounter == _guardCounter);\n    }\n449-expression_statement-76-81", type_label=expression_statement];
452 [label="76_ _guardCounter += 1;\n452-expression_statement-77-77", type_label=expression_statement];
456 [label="77_ uint256 localCounter = _guardCounter;\n456-new_variable-78-78", type_label=new_variable];
462 [label="78_ _;\n462-expression_statement-79-79", type_label=expression_statement];
464 [label="79_ require(localCounter == _guardCounter);\n464-expression_statement-80-80", type_label=expression_statement];
489 [label="85_ bool private _paused;\n489-new_variable-86-86", type_label=new_variable];
496 [label="87_ _paused = false;\n496-expression_statement-88-88", type_label=expression_statement];
501 [label="89_ paused\n501-function_definition-90-92", type_label=function_definition];
510 [label="90_ return _paused;\n510-return-91-91", type_label=return];
512 [label="92_ modifier whenNotPaused() {\n        require(!_paused);\n        _;\n    }\n512-expression_statement-93-96", type_label=expression_statement];
515 [label="93_ require(!_paused);\n515-expression_statement-94-94", type_label=expression_statement];
521 [label="94_ _;\n521-expression_statement-95-95", type_label=expression_statement];
523 [label="96_ modifier whenPaused() {\n        require(_paused);\n        _;\n    }\n523-expression_statement-97-100", type_label=expression_statement];
526 [label="97_ require(_paused);\n526-expression_statement-98-98", type_label=expression_statement];
531 [label="98_ _;\n531-expression_statement-99-99", type_label=expression_statement];
533 [label="100_ pause\n533-function_definition-101-104", type_label=function_definition];
536 [label="100_ onlyOwner\n536-expression_statement-101-101", type_label=expression_statement];
538 [label="100_ whenNotPaused\n538-expression_statement-101-101", type_label=expression_statement];
541 [label="101_ _paused = true;\n541-expression_statement-102-102", type_label=expression_statement];
552 [label="104_ unpause\n552-function_definition-105-108", type_label=function_definition];
555 [label="104_ onlyOwner\n555-expression_statement-105-105", type_label=expression_statement];
557 [label="104_ whenPaused\n557-expression_statement-105-105", type_label=expression_statement];
560 [label="105_ _paused = false;\n560-expression_statement-106-106", type_label=expression_statement];
591 [label="111_ mapping (address => uint256) private _balances;\n591-new_variable-112-112", type_label=new_variable];
598 [label="112_ mapping (address => mapping (address => uint256)) private _allowed;\n598-new_variable-113-113", type_label=new_variable];
607 [label="113_ uint256 private _totalSupply;\n607-new_variable-114-114", type_label=new_variable];
612 [label="114_ string private _name = \"Guider\";\n612-new_variable-115-115", type_label=new_variable];
619 [label="115_ string private _symbol = \"GDR\";\n619-new_variable-116-116", type_label=new_variable];
626 [label="116_ uint8 private _decimals = 18;\n626-new_variable-117-117", type_label=new_variable];
632 [label="117_ uint256 private _initSupplyIPON = 300000000;\n632-new_variable-118-118", type_label=new_variable];
638 [label="118_ uint256 private _initSupply = _initSupplyIPON.mul(10 **uint256(_decimals));\n638-new_variable-119-119", type_label=new_variable];
654 [label="119_ GuiderToken(\n    )\n654-expression_statement-120-121", type_label=expression_statement];
657 [label="121_ _mint(msg.sender, initSupply());\n657-expression_statement-122-122", type_label=expression_statement];
667 [label="123_ name\n667-function_definition-124-126", type_label=function_definition];
676 [label="124_ return _name;\n676-return-125-125", type_label=return];
678 [label="126_ symbol\n678-function_definition-127-129", type_label=function_definition];
687 [label="127_ return _symbol;\n687-return-128-128", type_label=return];
689 [label="129_ decimals\n689-function_definition-130-132", type_label=function_definition];
698 [label="130_ return _decimals;\n698-return-131-131", type_label=return];
700 [label="132_ initSupply\n700-function_definition-133-135", type_label=function_definition];
709 [label="133_ return _initSupply;\n709-return-134-134", type_label=return];
711 [label="135_ totalSupply\n711-function_definition-136-138", type_label=function_definition];
720 [label="136_ return _totalSupply;\n720-return-137-137", type_label=return];
722 [label="138_ balanceOf\n722-function_definition-139-141", type_label=function_definition];
735 [label="139_ return _balances[owner];\n735-return-140-140", type_label=return];
739 [label="141_ allowance\n739-function_definition-142-144", type_label=function_definition];
756 [label="142_ return _allowed[owner][spender];\n756-return-143-143", type_label=return];
762 [label="144_ approve\n762-function_definition-145-150", type_label=function_definition];
773 [label="144_ whenNotPaused\n773-expression_statement-145-145", type_label=expression_statement];
780 [label="145_ require(spender != address(0));\n780-expression_statement-146-146", type_label=expression_statement];
789 [label="146_ _allowed[msg.sender][spender] = value;\n789-expression_statement-147-147", type_label=expression_statement];
809 [label="148_ return true;\n809-return-149-149", type_label=return];
812 [label="150_ increaseAllowance\n812-function_definition-151-156", type_label=function_definition];
823 [label="150_ whenNotPaused\n823-expression_statement-151-151", type_label=expression_statement];
830 [label="151_ require(spender != address(0));\n830-expression_statement-152-152", type_label=expression_statement];
839 [label="152_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].add(addedValue);\n839-expression_statement-153-153", type_label=expression_statement];
876 [label="154_ return true;\n876-return-155-155", type_label=return];
879 [label="156_ decreaseAllowance\n879-function_definition-157-162", type_label=function_definition];
890 [label="156_ whenNotPaused\n890-expression_statement-157-157", type_label=expression_statement];
897 [label="157_ require(spender != address(0));\n897-expression_statement-158-158", type_label=expression_statement];
906 [label="158_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].sub(subtractedValue);\n906-expression_statement-159-159", type_label=expression_statement];
943 [label="160_ return true;\n943-return-161-161", type_label=return];
946 [label="162_ _transfer\n946-function_definition-163-168", type_label=function_definition];
962 [label="163_ require(to != address(0));\n962-expression_statement-164-164", type_label=expression_statement];
971 [label="164_ _balances[from] = _balances[from].sub(value);\n971-expression_statement-165-165", type_label=expression_statement];
984 [label="165_ _balances[to] = _balances[to].add(value);\n984-expression_statement-166-166", type_label=expression_statement];
1005 [label="168_ _mint\n1005-function_definition-169-174", type_label=function_definition];
1017 [label="169_ require(account != address(0));\n1017-expression_statement-170-170", type_label=expression_statement];
1026 [label="170_ _totalSupply = _totalSupply.add(value);\n1026-expression_statement-171-171", type_label=expression_statement];
1035 [label="171_ _balances[account] = _balances[account].add(value);\n1035-expression_statement-172-172", type_label=expression_statement];
1058 [label="174_ _burn\n1058-function_definition-175-180", type_label=function_definition];
1070 [label="175_ require(account != address(0));\n1070-expression_statement-176-176", type_label=expression_statement];
1079 [label="176_ _totalSupply = _totalSupply.sub(value);\n1079-expression_statement-177-177", type_label=expression_statement];
1088 [label="177_ _balances[account] = _balances[account].sub(value);\n1088-expression_statement-178-178", type_label=expression_statement];
1111 [label="180_ burn\n1111-function_definition-181-184", type_label=function_definition];
1122 [label="180_ onlyOwner\n1122-expression_statement-181-181", type_label=expression_statement];
1129 [label="181_ _burn(to, value);\n1129-expression_statement-182-182", type_label=expression_statement];
1136 [label="182_ return true;\n1136-return-183-183", type_label=return];
1139 [label="184_ OwnerTransfer\n1139-function_definition-185-188", type_label=function_definition];
1150 [label="184_ onlyOwner\n1150-expression_statement-185-185", type_label=expression_statement];
1157 [label="185_ _transfer(msg.sender, to, value);\n1157-expression_statement-186-186", type_label=expression_statement];
1168 [label="186_ return true;\n1168-return-187-187", type_label=return];
1171 [label="188_ transfer\n1171-function_definition-189-192", type_label=function_definition];
1182 [label="188_ whenNotPaused\n1182-expression_statement-189-189", type_label=expression_statement];
1189 [label="189_ _transfer(msg.sender, to, value);\n1189-expression_statement-190-190", type_label=expression_statement];
1200 [label="190_ return true;\n1200-return-191-191", type_label=return];
1203 [label="192_ transferFrom\n1203-function_definition-193-198", type_label=function_definition];
1218 [label="192_ whenNotPaused\n1218-expression_statement-193-193", type_label=expression_statement];
1225 [label="193_ _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n1225-expression_statement-194-194", type_label=expression_statement];
1246 [label="194_ _transfer(from, to, value);\n1246-expression_statement-195-195", type_label=expression_statement];
1271 [label="196_ return true;\n1271-return-197-197", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 1299  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1299 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 1299  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
220 -> 229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
229 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
234 -> 240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
242 -> 251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
251 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
257 -> 271  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
277 -> 287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
292 -> 300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
452 -> 456  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
456 -> 462  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
462 -> 464  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
501 -> 510  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
510 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
512 -> 523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 521  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
526 -> 531  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
533 -> 541  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
536 -> 538  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
552 -> 560  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
555 -> 557  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
591 -> 598  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
598 -> 607  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
607 -> 612  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
612 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
619 -> 626  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
626 -> 632  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
632 -> 638  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
667 -> 676  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
676 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
678 -> 687  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
689 -> 698  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
698 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
700 -> 709  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
709 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
711 -> 720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
720 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
722 -> 735  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
735 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
739 -> 756  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
756 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
762 -> 780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
780 -> 789  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
809 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
812 -> 830  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
830 -> 839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
876 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
879 -> 897  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
897 -> 906  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
943 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
946 -> 962  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
962 -> 971  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
971 -> 984  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1005 -> 1017  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1017 -> 1026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1026 -> 1035  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1058 -> 1070  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1070 -> 1079  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1079 -> 1088  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1111 -> 1129  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1129 -> 1136  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1136 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1139 -> 1157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1157 -> 1168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1168 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1171 -> 1189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1189 -> 1200  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1200 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1203 -> 1225  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1225 -> 1246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1271 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
