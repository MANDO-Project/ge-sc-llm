digraph  {
15 [label="2_ function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n        return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n15-function_definition-3-10", method="mul(uint256 a,uint256 b)", type_label=function_definition];
33 [label="3_ if_a == 0\n33-if-4-6", method="mul(uint256 a,uint256 b)", type_label=if];
1603 [label="3_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
38 [label="4_ return 0;\n38-return-5-5", method="mul(uint256 a,uint256 b)", type_label=return];
40 [label="6_ c = a * b;\n40-expression_statement-7-7", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
46 [label="7_ assert(c / a == b);\n46-expression_statement-8-8", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
55 [label="8_ return c;\n55-return-9-9", method="mul(uint256 a,uint256 b)", type_label=return];
57 [label="10_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a / b;\n  }\n57-function_definition-11-13", method="div(uint256 a,uint256 b)", type_label=function_definition];
74 [label="11_ return a / b;\n74-return-12-12", method="div(uint256 a,uint256 b)", type_label=return];
78 [label="13_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n78-function_definition-14-17", method="sub(uint256 a,uint256 b)", type_label=function_definition];
95 [label="14_ assert(b <= a);\n95-expression_statement-15-15", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
102 [label="15_ return a - b;\n102-return-16-16", method="sub(uint256 a,uint256 b)", type_label=return];
106 [label="17_ function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n106-function_definition-18-22", method="add(uint256 a,uint256 b)", type_label=function_definition];
124 [label="18_ c = a + b;\n124-expression_statement-19-19", method="add(uint256 a,uint256 b)", type_label=expression_statement];
130 [label="19_ assert(c >= a);\n130-expression_statement-20-20", method="add(uint256 a,uint256 b)", type_label=expression_statement];
137 [label="20_ return c;\n137-return-21-21", method="add(uint256 a,uint256 b)", type_label=return];
142 [label="24_ mapping(address => uint) public lockTime_intou17;\n142-new_variable-25-25", method="", type_label=new_variable];
149 [label="25_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n149-function_definition-26-28", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
157 [label="26_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n157-expression_statement-27-27", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
165 [label="28_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n165-function_definition-29-33", method="withdraw_intou17()", type_label=function_definition];
169 [label="29_ require(now > lockTime_intou17[msg.sender]);\n169-expression_statement-30-30", method="withdraw_intou17()", type_label=expression_statement];
180 [label="30_ uint transferValue_intou17 = 10;\n180-new_variable-31-31", method="withdraw_intou17()", type_label=new_variable];
186 [label="31_ msg.sender.transfer(transferValue_intou17);\n186-expression_statement-32-32", method="withdraw_intou17()", type_label=expression_statement];
195 [label="33_ address public owner;\n195-new_variable-34-34", method="", type_label=new_variable];
202 [label="35_ owner = msg.sender;\n202-expression_statement-36-36", method="", type_label=expression_statement];
208 [label="37_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n208-function_definition-38-41", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
216 [label="38_ uint8 vundflw1=0;\n216-new_variable-39-39", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
222 [label="39_ vundflw1 = vundflw1 + p_intou32;\n222-expression_statement-40-40", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
228 [label="41_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n228-expression_statement-42-45", method="", type_label=expression_statement];
231 [label="42_ require(msg.sender == owner);\n231-expression_statement-43-43", method="", type_label=expression_statement];
240 [label="43_ _;\n240-expression_statement-44-44", method="", type_label=expression_statement];
253 [label="48_ mapping(address => uint) public lockTime_intou37;\n253-new_variable-49-49", method="", type_label=new_variable];
260 [label="49_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n260-function_definition-50-52", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
268 [label="50_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n268-expression_statement-51-51", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
276 [label="52_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n276-function_definition-53-57", method="withdraw_intou37()", type_label=function_definition];
280 [label="53_ require(now > lockTime_intou37[msg.sender]);\n280-expression_statement-54-54", method="withdraw_intou37()", type_label=expression_statement];
291 [label="54_ uint transferValue_intou37 = 10;\n291-new_variable-55-55", method="withdraw_intou37()", type_label=new_variable];
297 [label="55_ msg.sender.transfer(transferValue_intou37);\n297-expression_statement-56-56", method="withdraw_intou37()", type_label=expression_statement];
306 [label="57_ string public name;\n306-new_variable-58-58", method="", type_label=new_variable];
311 [label="58_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n311-function_definition-59-62", method="bug_intou3()", type_label=function_definition];
315 [label="59_ uint8 vundflw =0;\n315-new_variable-60-60", method="bug_intou3()", type_label=new_variable];
321 [label="60_ vundflw = vundflw -10;\n321-expression_statement-61-61", method="bug_intou3()", type_label=expression_statement];
327 [label="62_ string public symbol;\n327-new_variable-63-63", method="", type_label=new_variable];
332 [label="63_ mapping(address => uint) public lockTime_intou9;\n332-new_variable-64-64", method="", type_label=new_variable];
339 [label="64_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n339-function_definition-65-67", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
347 [label="65_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n347-expression_statement-66-66", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
355 [label="67_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n355-function_definition-68-72", method="withdraw_intou9()", type_label=function_definition];
359 [label="68_ require(now > lockTime_intou9[msg.sender]);\n359-expression_statement-69-69", method="withdraw_intou9()", type_label=expression_statement];
370 [label="69_ uint transferValue_intou9 = 10;\n370-new_variable-70-70", method="withdraw_intou9()", type_label=new_variable];
376 [label="70_ msg.sender.transfer(transferValue_intou9);\n376-expression_statement-71-71", method="withdraw_intou9()", type_label=expression_statement];
385 [label="72_ uint8 public decimals;\n385-new_variable-73-73", method="", type_label=new_variable];
390 [label="73_ mapping(address => uint) public lockTime_intou25;\n390-new_variable-74-74", method="", type_label=new_variable];
397 [label="74_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n397-function_definition-75-77", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
405 [label="75_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n405-expression_statement-76-76", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
413 [label="77_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n413-function_definition-78-82", method="withdraw_intou25()", type_label=function_definition];
417 [label="78_ require(now > lockTime_intou25[msg.sender]);\n417-expression_statement-79-79", method="withdraw_intou25()", type_label=expression_statement];
428 [label="79_ uint transferValue_intou25 = 10;\n428-new_variable-80-80", method="withdraw_intou25()", type_label=new_variable];
434 [label="80_ msg.sender.transfer(transferValue_intou25);\n434-expression_statement-81-81", method="withdraw_intou25()", type_label=expression_statement];
443 [label="82_ uint256 private _totalSupply;\n443-new_variable-83-83", method="", type_label=new_variable];
448 [label="83_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n448-function_definition-84-87", method="bug_intou19()", type_label=function_definition];
452 [label="84_ uint8 vundflw =0;\n452-new_variable-85-85", method="bug_intou19()", type_label=new_variable];
458 [label="85_ vundflw = vundflw -10;\n458-expression_statement-86-86", method="bug_intou19()", type_label=expression_statement];
464 [label="87_ uint256 public cap;\n464-new_variable-88-88", method="", type_label=new_variable];
469 [label="88_ mapping(address => uint) balances_intou26;\n469-new_variable-89-89", method="", type_label=new_variable];
475 [label="89_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n475-function_definition-90-95", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
491 [label="90_ require(balances_intou26[msg.sender] - _value >= 0);\n491-expression_statement-91-91", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
504 [label="91_ balances_intou26[msg.sender] -= _value;\n504-expression_statement-92-92", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
512 [label="92_ balances_intou26[_to] += _value;\n512-expression_statement-93-93", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
518 [label="93_ return true;\n518-return-94-94", method="transfer_intou26(address _to,uint _value)", type_label=return];
521 [label="95_ mapping (address => uint256) private _balances;\n521-new_variable-96-96", method="", type_label=new_variable];
528 [label="96_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n528-function_definition-97-100", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
536 [label="97_ uint8 vundflw1=0;\n536-new_variable-98-98", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
542 [label="98_ vundflw1 = vundflw1 + p_intou20;\n542-expression_statement-99-99", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
548 [label="100_ mapping (address => mapping (address => uint256)) private _allowed;\n548-new_variable-101-101", method="", type_label=new_variable];
557 [label="101_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n557-function_definition-102-105", method="bug_intou27()", type_label=function_definition];
561 [label="102_ uint8 vundflw =0;\n561-new_variable-103-103", method="bug_intou27()", type_label=new_variable];
567 [label="103_ vundflw = vundflw -10;\n567-expression_statement-104-104", method="bug_intou27()", type_label=expression_statement];
587 [label="106_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n587-function_definition-107-110", method="bug_intou31()", type_label=function_definition];
591 [label="107_ uint8 vundflw =0;\n591-new_variable-108-108", method="bug_intou31()", type_label=new_variable];
597 [label="108_ vundflw = vundflw -10;\n597-expression_statement-109-109", method="bug_intou31()", type_label=expression_statement];
617 [label="111_ mapping(address => uint) public lockTime_intou13;\n617-new_variable-112-112", method="", type_label=new_variable];
624 [label="112_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n624-function_definition-113-115", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
632 [label="113_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n632-expression_statement-114-114", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
640 [label="115_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n640-function_definition-116-120", method="withdraw_intou13()", type_label=function_definition];
644 [label="116_ require(now > lockTime_intou13[msg.sender]);\n644-expression_statement-117-117", method="withdraw_intou13()", type_label=expression_statement];
655 [label="117_ uint transferValue_intou13 = 10;\n655-new_variable-118-118", method="withdraw_intou13()", type_label=new_variable];
661 [label="118_ msg.sender.transfer(transferValue_intou13);\n661-expression_statement-119-119", method="withdraw_intou13()", type_label=expression_statement];
680 [label="121_ modifier onlyPayloadSize(uint size) {\n        require(msg.data.length >= size + 4);\n        _;\n    }\n680-expression_statement-122-125", method="", type_label=expression_statement];
687 [label="122_ require(msg.data.length >= size + 4);\n687-expression_statement-123-123", method="", type_label=expression_statement];
700 [label="123_ _;\n700-expression_statement-124-124", method="", type_label=expression_statement];
724 [label="132_ require(_cap >= _initialSupply);\n724-expression_statement-133-133", method="", type_label=expression_statement];
731 [label="133_ cap = _cap;\n731-expression_statement-134-134", method="", type_label=expression_statement];
735 [label="134_ name = _name;\n735-expression_statement-135-135", method="", type_label=expression_statement];
739 [label="135_ symbol = _symbol;\n739-expression_statement-136-136", method="", type_label=expression_statement];
743 [label="136_ decimals = _decimals;\n743-expression_statement-137-137", method="", type_label=expression_statement];
747 [label="137_ _totalSupply = _initialSupply;\n747-expression_statement-138-138", method="", type_label=expression_statement];
751 [label="138_ _balances[owner] = _totalSupply;\n751-expression_statement-139-139", method="", type_label=expression_statement];
767 [label="141_ mapping(address => uint) balances_intou38;\n767-new_variable-142-142", method="", type_label=new_variable];
773 [label="142_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n773-function_definition-143-148", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
789 [label="143_ require(balances_intou38[msg.sender] - _value >= 0);\n789-expression_statement-144-144", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
802 [label="144_ balances_intou38[msg.sender] -= _value;\n802-expression_statement-145-145", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
810 [label="145_ balances_intou38[_to] += _value;\n810-expression_statement-146-146", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
816 [label="146_ return true;\n816-return-147-147", method="transfer_intou38(address _to,uint _value)", type_label=return];
819 [label="148_ function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n819-function_definition-149-151", method="totalSupply()", type_label=function_definition];
828 [label="149_ return _totalSupply;\n828-return-150-150", method="totalSupply()", type_label=return];
830 [label="151_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n830-function_definition-152-155", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
838 [label="152_ uint8 vundflw1=0;\n838-new_variable-153-153", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
844 [label="153_ vundflw1 = vundflw1 + p_intou4;\n844-expression_statement-154-154", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
850 [label="155_ function balanceOf(address _owner) public view returns (uint256) {\n        return _balances[_owner];\n    }\n850-function_definition-156-158", method="balanceOf(address _owner)", type_label=function_definition];
863 [label="156_ return _balances[_owner];\n863-return-157-157", method="balanceOf(address _owner)", type_label=return];
867 [label="158_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n867-function_definition-159-162", method="bug_intou7()", type_label=function_definition];
871 [label="159_ uint8 vundflw =0;\n871-new_variable-160-160", method="bug_intou7()", type_label=new_variable];
877 [label="160_ vundflw = vundflw -10;\n877-expression_statement-161-161", method="bug_intou7()", type_label=expression_statement];
883 [label="162_ function allowance(address _owner, address _spender) public view returns (uint256) {\n        return _allowed[_owner][_spender];\n    }\n883-function_definition-163-165", method="allowance(address _owner,address _spender)", type_label=function_definition];
900 [label="163_ return _allowed[_owner][_spender];\n900-return-164-164", method="allowance(address _owner,address _spender)", type_label=return];
906 [label="165_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n906-function_definition-166-169", method="bug_intou23()", type_label=function_definition];
910 [label="166_ uint8 vundflw =0;\n910-new_variable-167-167", method="bug_intou23()", type_label=new_variable];
916 [label="167_ vundflw = vundflw -10;\n916-expression_statement-168-168", method="bug_intou23()", type_label=expression_statement];
922 [label="169_ function transfer(address _to, uint256 _value) onlyPayloadSize(2 * 32) public returns (bool) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n922-function_definition-170-173", method="transfer(address _to,uint256 _value)", type_label=function_definition];
932 [label="169_ onlyPayloadSize(2 * 32)\n932-expression_statement-170-170", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
944 [label="170_ _transfer(msg.sender, _to, _value);\n944-expression_statement-171-171", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
955 [label="171_ return true;\n955-return-172-172", method="transfer(address _to,uint256 _value)", type_label=return];
958 [label="173_ mapping(address => uint) balances_intou14;\n958-new_variable-174-174", method="", type_label=new_variable];
964 [label="174_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n964-function_definition-175-180", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
980 [label="175_ require(balances_intou14[msg.sender] - _value >= 0);\n980-expression_statement-176-176", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
993 [label="176_ balances_intou14[msg.sender] -= _value;\n993-expression_statement-177-177", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1001 [label="177_ balances_intou14[_to] += _value;\n1001-expression_statement-178-178", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1007 [label="178_ return true;\n1007-return-179-179", method="transfer_intou14(address _to,uint _value)", type_label=return];
1010 [label="180_ function approve(address _spender, uint256 _value) public returns (bool) {\n        _approve(msg.sender, _spender, _value);\n        return true;\n    }\n1010-function_definition-181-184", method="approve(address _spender,uint256 _value)", type_label=function_definition];
1026 [label="181_ _approve(msg.sender, _spender, _value);\n1026-expression_statement-182-182", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
1037 [label="182_ return true;\n1037-return-183-183", method="approve(address _spender,uint256 _value)", type_label=return];
1040 [label="184_ mapping(address => uint) balances_intou30;\n1040-new_variable-185-185", method="", type_label=new_variable];
1046 [label="185_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n1046-function_definition-186-191", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
1062 [label="186_ require(balances_intou30[msg.sender] - _value >= 0);\n1062-expression_statement-187-187", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1075 [label="187_ balances_intou30[msg.sender] -= _value;\n1075-expression_statement-188-188", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1083 [label="188_ balances_intou30[_to] += _value;\n1083-expression_statement-189-189", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1089 [label="189_ return true;\n1089-return-190-190", method="transfer_intou30(address _to,uint _value)", type_label=return];
1092 [label="191_ function transferFrom(address _from, address _to, uint256 _value) onlyPayloadSize(3 * 32) public returns (bool) {\n        _transfer(_from, _to, _value);\n        _approve(_from, msg.sender, _allowed[_from][msg.sender].sub(_value));\n        return true;\n    }\n1092-function_definition-192-196", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
1106 [label="191_ onlyPayloadSize(3 * 32)\n1106-expression_statement-192-192", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
1118 [label="192_ _transfer(_from, _to, _value);\n1118-expression_statement-193-193", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
1127 [label="193_ _approve(_from, msg.sender, _allowed[_from][msg.sender].sub(_value));\n1127-expression_statement-194-194", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
1149 [label="194_ return true;\n1149-return-195-195", method="transferFrom(address _from,address _to,uint256 _value)", type_label=return];
1152 [label="196_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n1152-function_definition-197-200", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
1160 [label="197_ uint8 vundflw1=0;\n1160-new_variable-198-198", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
1166 [label="198_ vundflw1 = vundflw1 + p_intou8;\n1166-expression_statement-199-199", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
1172 [label="200_ function _transfer(address _from, address _to, uint256 _value) internal {\n        require(_to != address(0), \"ERC20: transfer to the zero address\");\n        _balances[_from] = _balances[_from].sub(_value);\n        _balances[_to] = _balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n    }\n1172-function_definition-201-206", method="_transfer(address _from,address _to,uint256 _value)", type_label=function_definition];
1188 [label="201_ require(_to != address(0), \"ERC20: transfer to the zero address\");\n1188-expression_statement-202-202", method="_transfer(address _from,address _to,uint256 _value)", type_label=expression_statement];
1200 [label="202_ _balances[_from] = _balances[_from].sub(_value);\n1200-expression_statement-203-203", method="_transfer(address _from,address _to,uint256 _value)", type_label=expression_statement];
1213 [label="203_ _balances[_to] = _balances[_to].add(_value);\n1213-expression_statement-204-204", method="_transfer(address _from,address _to,uint256 _value)", type_label=expression_statement];
1234 [label="206_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1234-function_definition-207-210", method="bug_intou39()", type_label=function_definition];
1238 [label="207_ uint8 vundflw =0;\n1238-new_variable-208-208", method="bug_intou39()", type_label=new_variable];
1244 [label="208_ vundflw = vundflw -10;\n1244-expression_statement-209-209", method="bug_intou39()", type_label=expression_statement];
1250 [label="210_ function _approve(address _owner, address _spender, uint256 _value) internal {\n        require(_owner != address(0), \"ERC20: approve from the zero address\");\n        require(_spender != address(0), \"ERC20: approve to the zero address\");\n        _allowed[_owner][_spender] = _value;\n        emit Approval(_owner, _spender, _value);\n    }\n1250-function_definition-211-216", method="_approve(address _owner,address _spender,uint256 _value)", type_label=function_definition];
1266 [label="211_ require(_owner != address(0), \"ERC20: approve from the zero address\");\n1266-expression_statement-212-212", method="_approve(address _owner,address _spender,uint256 _value)", type_label=expression_statement];
1278 [label="212_ require(_spender != address(0), \"ERC20: approve to the zero address\");\n1278-expression_statement-213-213", method="_approve(address _owner,address _spender,uint256 _value)", type_label=expression_statement];
1290 [label="213_ _allowed[_owner][_spender] = _value;\n1290-expression_statement-214-214", method="_approve(address _owner,address _spender,uint256 _value)", type_label=expression_statement];
1306 [label="216_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n1306-function_definition-217-220", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
1314 [label="217_ uint8 vundflw1=0;\n1314-new_variable-218-218", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
1320 [label="218_ vundflw1 = vundflw1 + p_intou36;\n1320-expression_statement-219-219", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
1326 [label="220_ function mint(address _to, uint256 _amount) onlyOwner public returns (bool) {\n        require(_totalSupply.add(_amount) <= cap);\n        _totalSupply = _totalSupply.add(_amount);\n        _balances[_to] = _balances[_to].add(_amount);\n        emit Mint(_to, _amount);\n        emit Transfer(address(0), _to, _amount);\n        return true;\n    }\n1326-function_definition-221-228", method="mint(address _to,uint256 _amount)", type_label=function_definition];
1336 [label="220_ onlyOwner\n1336-expression_statement-221-221", method="mint(address _to,uint256 _amount)", type_label=expression_statement];
1344 [label="221_ require(_totalSupply.add(_amount) <= cap);\n1344-expression_statement-222-222", method="mint(address _to,uint256 _amount)", type_label=expression_statement];
1356 [label="222_ _totalSupply = _totalSupply.add(_amount);\n1356-expression_statement-223-223", method="mint(address _to,uint256 _amount)", type_label=expression_statement];
1365 [label="223_ _balances[_to] = _balances[_to].add(_amount);\n1365-expression_statement-224-224", method="mint(address _to,uint256 _amount)", type_label=expression_statement];
1394 [label="226_ return true;\n1394-return-227-227", method="mint(address _to,uint256 _amount)", type_label=return];
1397 [label="228_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1397-function_definition-229-232", method="bug_intou35()", type_label=function_definition];
1401 [label="229_ uint8 vundflw =0;\n1401-new_variable-230-230", method="bug_intou35()", type_label=new_variable];
1407 [label="230_ vundflw = vundflw -10;\n1407-expression_statement-231-231", method="bug_intou35()", type_label=expression_statement];
1413 [label="232_ function transferBatch(address[] memory _tos, uint256[] memory _values) public returns (bool) {\n        require(_tos.length == _values.length);\n        for (uint256 i = 0; i < _tos.length; i++) {\n            transfer(_tos[i], _values[i]);\n        }\n        return true;\n    }\n1413-function_definition-233-239", method="transferBatch(address[] memory _tos,uint256[] memory _values)", type_label=function_definition];
1431 [label="233_ require(_tos.length == _values.length);\n1431-expression_statement-234-234", method="transferBatch(address[] memory _tos,uint256[] memory _values)", type_label=expression_statement];
1442 [label="234_ for(i < _tos.length;;i++)\n1442-for-235-237", method="transferBatch(address[] memory _tos,uint256[] memory _values)", type_label=for];
3012 [label="234_ end_loop", method="transferBatch(address[] memory _tos,uint256[] memory _values)", type_label=end_loop];
1455 [label="234_ i++\n1455-expression_statement-235-235", method="transferBatch(address[] memory _tos,uint256[] memory _values)", type_label=expression_statement];
1458 [label="235_ transfer(_tos[i], _values[i]);\n1458-expression_statement-236-236", method="transferBatch(address[] memory _tos,uint256[] memory _values)", type_label=expression_statement];
1469 [label="237_ return true;\n1469-return-238-238", method="transferBatch(address[] memory _tos,uint256[] memory _values)", type_label=return];
1472 [label="239_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n1472-function_definition-240-243", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
1480 [label="240_ uint8 vundflw1=0;\n1480-new_variable-241-241", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
1486 [label="241_ vundflw1 = vundflw1 + p_intou40;\n1486-expression_statement-242-242", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
1499 [label="245_ TokenERC20(18*10**16, 12*10**16, \"XL Token\", \"XL\", 8)\n1499-expression_statement-246-246", method="", type_label=expression_statement];
1522 [label="246_ mapping(address => uint) public lockTime_intou33;\n1522-new_variable-247-247", method="", type_label=new_variable];
1529 [label="247_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n1529-function_definition-248-250", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
1537 [label="248_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n1537-expression_statement-249-249", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
1545 [label="250_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n1545-function_definition-251-255", method="withdraw_intou33()", type_label=function_definition];
1549 [label="251_ require(now > lockTime_intou33[msg.sender]);\n1549-expression_statement-252-252", method="withdraw_intou33()", type_label=expression_statement];
1560 [label="252_ uint transferValue_intou33 = 10;\n1560-new_variable-253-253", method="withdraw_intou33()", type_label=new_variable];
1566 [label="253_ msg.sender.transfer(transferValue_intou33);\n1566-expression_statement-254-254", method="withdraw_intou33()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
15 -> 33  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
33 -> 38  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
33 -> 1603  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1603 -> 40  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 1603  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
38 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
40 -> 46  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
46 -> 55  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
55 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
57 -> 74  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
74 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
78 -> 95  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
95 -> 102  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
102 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
106 -> 124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
124 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
137 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
149 -> 157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
165 -> 169  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
169 -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
180 -> 186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
208 -> 216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
216 -> 222  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
231 -> 240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
260 -> 268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
276 -> 280  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
280 -> 291  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
291 -> 297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
311 -> 315  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
315 -> 321  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
327 -> 332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
339 -> 347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
355 -> 359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
359 -> 370  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
370 -> 376  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
385 -> 390  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
397 -> 405  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
413 -> 417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
417 -> 428  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
428 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
448 -> 452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
452 -> 458  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
464 -> 469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
475 -> 491  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
491 -> 504  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
504 -> 512  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
512 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
518 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
528 -> 536  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
536 -> 542  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
557 -> 561  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
561 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
587 -> 591  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
591 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
624 -> 632  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
640 -> 644  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
644 -> 655  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
655 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 700  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
724 -> 731  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
731 -> 735  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
735 -> 739  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
739 -> 743  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
743 -> 747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
747 -> 751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
773 -> 789  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
789 -> 802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
802 -> 810  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
810 -> 816  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
816 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
819 -> 828  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
828 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
830 -> 838  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
838 -> 844  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
850 -> 863  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
863 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
867 -> 871  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
871 -> 877  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
883 -> 900  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
900 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
906 -> 910  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
910 -> 916  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
922 -> 944  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
944 -> 955  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
955 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
964 -> 980  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
980 -> 993  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
993 -> 1001  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1001 -> 1007  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1007 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1010 -> 1026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1026 -> 1037  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1037 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1046 -> 1062  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1062 -> 1075  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1075 -> 1083  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1083 -> 1089  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1089 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1092 -> 1118  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1118 -> 1127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1127 -> 1149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1149 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1152 -> 1160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1160 -> 1166  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1172 -> 1188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1188 -> 1200  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1200 -> 1213  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1234 -> 1238  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1238 -> 1244  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1250 -> 1266  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1266 -> 1278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1278 -> 1290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1306 -> 1314  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1314 -> 1320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1326 -> 1344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1344 -> 1356  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1356 -> 1365  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1394 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1397 -> 1401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1401 -> 1407  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1413 -> 1431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1431 -> 1442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1442 -> 1458  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1442 -> 3012  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3012 -> 1469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1455 -> 1442  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1458 -> 1455  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1469 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1472 -> 1480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1480 -> 1486  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1529 -> 1537  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1545 -> 1549  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1549 -> 1560  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1560 -> 1566  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
