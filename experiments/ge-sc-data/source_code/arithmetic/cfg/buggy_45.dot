digraph  {
13 [label="2_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n13-function_definition-3-6", method="bug_intou39()", type_label=function_definition];
17 [label="3_ uint8 vundflw =0;\n17-new_variable-4-4", method="bug_intou39()", type_label=new_variable];
23 [label="4_ vundflw = vundflw -10;\n23-expression_statement-5-5", method="bug_intou39()", type_label=expression_statement];
35 [label="7_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n35-function_definition-8-11", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
43 [label="8_ uint8 vundflw1=0;\n43-new_variable-9-9", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
49 [label="9_ vundflw1 = vundflw1 + p_intou36;\n49-expression_statement-10-10", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
61 [label="12_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n61-function_definition-13-16", method="bug_intou35()", type_label=function_definition];
65 [label="13_ uint8 vundflw =0;\n65-new_variable-14-14", method="bug_intou35()", type_label=new_variable];
71 [label="14_ vundflw = vundflw -10;\n71-expression_statement-15-15", method="bug_intou35()", type_label=expression_statement];
79 [label="17_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n79-function_definition-18-21", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
87 [label="18_ uint8 vundflw1=0;\n87-new_variable-19-19", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
93 [label="19_ vundflw1 = vundflw1 + p_intou40;\n93-expression_statement-20-20", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
105 [label="22_ mapping(address => uint) public lockTime_intou33;\n105-new_variable-23-23", method="", type_label=new_variable];
112 [label="23_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n112-function_definition-24-26", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
120 [label="24_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n120-expression_statement-25-25", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
128 [label="26_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n128-function_definition-27-31", method="withdraw_intou33()", type_label=function_definition];
132 [label="27_ require(now > lockTime_intou33[msg.sender]);\n132-expression_statement-28-28", method="withdraw_intou33()", type_label=expression_statement];
143 [label="28_ uint transferValue_intou33 = 10;\n143-new_variable-29-29", method="withdraw_intou33()", type_label=new_variable];
149 [label="29_ msg.sender.transfer(transferValue_intou33);\n149-expression_statement-30-30", method="withdraw_intou33()", type_label=expression_statement];
164 [label="32_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n164-function_definition-33-36", method="bug_intou27()", type_label=function_definition];
168 [label="33_ uint8 vundflw =0;\n168-new_variable-34-34", method="bug_intou27()", type_label=new_variable];
174 [label="34_ vundflw = vundflw -10;\n174-expression_statement-35-35", method="bug_intou27()", type_label=expression_statement];
190 [label="37_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n190-function_definition-38-41", method="bug_intou31()", type_label=function_definition];
194 [label="38_ uint8 vundflw =0;\n194-new_variable-39-39", method="bug_intou31()", type_label=new_variable];
200 [label="39_ vundflw = vundflw -10;\n200-expression_statement-40-40", method="bug_intou31()", type_label=expression_statement];
216 [label="42_ mapping(address => uint) public lockTime_intou13;\n216-new_variable-43-43", method="", type_label=new_variable];
223 [label="43_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n223-function_definition-44-46", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
231 [label="44_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n231-expression_statement-45-45", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
239 [label="46_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n239-function_definition-47-51", method="withdraw_intou13()", type_label=function_definition];
243 [label="47_ require(now > lockTime_intou13[msg.sender]);\n243-expression_statement-48-48", method="withdraw_intou13()", type_label=expression_statement];
254 [label="48_ uint transferValue_intou13 = 10;\n254-new_variable-49-49", method="withdraw_intou13()", type_label=new_variable];
260 [label="49_ msg.sender.transfer(transferValue_intou13);\n260-expression_statement-50-50", method="withdraw_intou13()", type_label=expression_statement];
288 [label="60_ struct Guess {\n        mapping (address => PaidStatus) players;\n        uint guesses_number;\n    }\n288-expression_statement-61-64", method="Guess()", type_label=expression_statement];
301 [label="64_ function bug_intou12(uint8 p_intou12) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou12;    \n}\n301-function_definition-65-68", method="bug_intou12(uint8 p_intou12)", type_label=function_definition];
309 [label="65_ uint8 vundflw1=0;\n309-new_variable-66-66", method="bug_intou12(uint8 p_intou12)", type_label=new_variable];
315 [label="66_ vundflw1 = vundflw1 + p_intou12;\n315-expression_statement-67-67", method="bug_intou12(uint8 p_intou12)", type_label=expression_statement];
321 [label="68_ address payable public owner;\n321-new_variable-69-69", method="", type_label=new_variable];
326 [label="69_ function bug_intou11() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n326-function_definition-70-73", method="bug_intou11()", type_label=function_definition];
330 [label="70_ uint8 vundflw =0;\n330-new_variable-71-71", method="bug_intou11()", type_label=new_variable];
336 [label="71_ vundflw = vundflw -10;\n336-expression_statement-72-72", method="bug_intou11()", type_label=expression_statement];
342 [label="73_ address public oracle;\n342-new_variable-74-74", method="", type_label=new_variable];
347 [label="74_ mapping(address => uint) public lockTime_intou1;\n347-new_variable-75-75", method="", type_label=new_variable];
354 [label="75_ function increaseLockTime_intou1(uint _secondsToIncrease) public {\n        lockTime_intou1[msg.sender] += _secondsToIncrease;   \n    }\n354-function_definition-76-78", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=function_definition];
362 [label="76_ lockTime_intou1[msg.sender] += _secondsToIncrease;\n362-expression_statement-77-77", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=expression_statement];
370 [label="78_ function withdraw_ovrflow1() public {\n        require(now > lockTime_intou1[msg.sender]);    \n        uint transferValue_intou1 = 10;           \n        msg.sender.transfer(transferValue_intou1);\n    }\n370-function_definition-79-83", method="withdraw_ovrflow1()", type_label=function_definition];
374 [label="79_ require(now > lockTime_intou1[msg.sender]);\n374-expression_statement-80-80", method="withdraw_ovrflow1()", type_label=expression_statement];
385 [label="80_ uint transferValue_intou1 = 10;\n385-new_variable-81-81", method="withdraw_ovrflow1()", type_label=new_variable];
391 [label="81_ msg.sender.transfer(transferValue_intou1);\n391-expression_statement-82-82", method="withdraw_ovrflow1()", type_label=expression_statement];
400 [label="83_ State public state;\n400-new_variable-84-84", method="", type_label=new_variable];
406 [label="84_ mapping(address => uint) balances_intou2;\n406-new_variable-85-85", method="", type_label=new_variable];
412 [label="85_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n412-function_definition-86-91", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
428 [label="86_ require(balances_intou2[msg.sender] - _value >= 0);\n428-expression_statement-87-87", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
441 [label="87_ balances_intou2[msg.sender] -= _value;\n441-expression_statement-88-88", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
449 [label="88_ balances_intou2[_to] += _value;\n449-expression_statement-89-89", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
455 [label="89_ return true;\n455-return-90-90", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
458 [label="91_ mapping (uint => Guess) public guesses;\n458-new_variable-92-92", method="", type_label=new_variable];
466 [label="92_ mapping(address => uint) public lockTime_intou17;\n466-new_variable-93-93", method="", type_label=new_variable];
473 [label="93_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n473-function_definition-94-96", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
481 [label="94_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n481-expression_statement-95-95", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
489 [label="96_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n489-function_definition-97-101", method="withdraw_intou17()", type_label=function_definition];
493 [label="97_ require(now > lockTime_intou17[msg.sender]);\n493-expression_statement-98-98", method="withdraw_intou17()", type_label=expression_statement];
504 [label="98_ uint transferValue_intou17 = 10;\n504-new_variable-99-99", method="withdraw_intou17()", type_label=new_variable];
510 [label="99_ msg.sender.transfer(transferValue_intou17);\n510-expression_statement-100-100", method="withdraw_intou17()", type_label=expression_statement];
519 [label="101_ uint256 public bet;\n519-new_variable-102-102", method="", type_label=new_variable];
524 [label="102_ uint256 splitJackpot;\n524-new_variable-103-103", method="", type_label=new_variable];
528 [label="103_ mapping(address => uint) public lockTime_intou37;\n528-new_variable-104-104", method="", type_label=new_variable];
535 [label="104_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n535-function_definition-105-107", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
543 [label="105_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n543-expression_statement-106-106", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
551 [label="107_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n551-function_definition-108-112", method="withdraw_intou37()", type_label=function_definition];
555 [label="108_ require(now > lockTime_intou37[msg.sender]);\n555-expression_statement-109-109", method="withdraw_intou37()", type_label=expression_statement];
566 [label="109_ uint transferValue_intou37 = 10;\n566-new_variable-110-110", method="withdraw_intou37()", type_label=new_variable];
572 [label="110_ msg.sender.transfer(transferValue_intou37);\n572-expression_statement-111-111", method="withdraw_intou37()", type_label=expression_statement];
581 [label="112_ uint public result;\n581-new_variable-113-113", method="", type_label=new_variable];
586 [label="113_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n586-function_definition-114-117", method="bug_intou3()", type_label=function_definition];
590 [label="114_ uint8 vundflw =0;\n590-new_variable-115-115", method="bug_intou3()", type_label=new_variable];
596 [label="115_ vundflw = vundflw -10;\n596-expression_statement-116-116", method="bug_intou3()", type_label=expression_statement];
602 [label="117_ uint256 public initialPrice;\n602-new_variable-118-118", method="", type_label=new_variable];
607 [label="118_ mapping(address => uint) public lockTime_intou9;\n607-new_variable-119-119", method="", type_label=new_variable];
614 [label="119_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n614-function_definition-120-122", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
622 [label="120_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n622-expression_statement-121-121", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
630 [label="122_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n630-function_definition-123-127", method="withdraw_intou9()", type_label=function_definition];
634 [label="123_ require(now > lockTime_intou9[msg.sender]);\n634-expression_statement-124-124", method="withdraw_intou9()", type_label=expression_statement];
645 [label="124_ uint transferValue_intou9 = 10;\n645-new_variable-125-125", method="withdraw_intou9()", type_label=new_variable];
651 [label="125_ msg.sender.transfer(transferValue_intou9);\n651-expression_statement-126-126", method="withdraw_intou9()", type_label=expression_statement];
660 [label="127_ uint256 public finalPrice;\n660-new_variable-128-128", method="", type_label=new_variable];
665 [label="128_ mapping(address => uint) public lockTime_intou25;\n665-new_variable-129-129", method="", type_label=new_variable];
672 [label="129_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n672-function_definition-130-132", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
680 [label="130_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n680-expression_statement-131-131", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
688 [label="132_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n688-function_definition-133-137", method="withdraw_intou25()", type_label=function_definition];
692 [label="133_ require(now > lockTime_intou25[msg.sender]);\n692-expression_statement-134-134", method="withdraw_intou25()", type_label=expression_statement];
703 [label="134_ uint transferValue_intou25 = 10;\n703-new_variable-135-135", method="withdraw_intou25()", type_label=new_variable];
709 [label="135_ msg.sender.transfer(transferValue_intou25);\n709-expression_statement-136-136", method="withdraw_intou25()", type_label=expression_statement];
718 [label="137_ uint constant UP = 1;\n718-new_variable-138-138", method="", type_label=new_variable];
723 [label="138_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n723-function_definition-139-142", method="bug_intou19()", type_label=function_definition];
727 [label="139_ uint8 vundflw =0;\n727-new_variable-140-140", method="bug_intou19()", type_label=new_variable];
733 [label="140_ vundflw = vundflw -10;\n733-expression_statement-141-141", method="bug_intou19()", type_label=expression_statement];
739 [label="142_ uint constant DOWN = 0;\n739-new_variable-143-143", method="", type_label=new_variable];
744 [label="143_ modifier byPlayer(){\n        require(msg.sender != oracle);\n        _;\n    }\n744-expression_statement-144-147", method="", type_label=expression_statement];
747 [label="144_ require(msg.sender != oracle);\n747-expression_statement-145-145", method="", type_label=expression_statement];
756 [label="145_ _;\n756-expression_statement-146-146", method="", type_label=expression_statement];
758 [label="147_ modifier byOwner(){\n        require(msg.sender == owner);\n        _;\n    }\n758-expression_statement-148-151", method="", type_label=expression_statement];
761 [label="148_ require(msg.sender == owner);\n761-expression_statement-149-149", method="", type_label=expression_statement];
770 [label="149_ _;\n770-expression_statement-150-150", method="", type_label=expression_statement];
772 [label="151_ modifier byOracle(){\n        require(msg.sender == oracle);\n        _;\n    }\n772-expression_statement-152-155", method="", type_label=expression_statement];
775 [label="152_ require(msg.sender == oracle);\n775-expression_statement-153-153", method="", type_label=expression_statement];
784 [label="153_ _;\n784-expression_statement-154-154", method="", type_label=expression_statement];
786 [label="155_ modifier inState(State expected) {\n        require(state == expected);\n        _;\n    }\n786-expression_statement-156-159", method="", type_label=expression_statement];
794 [label="156_ require(state == expected);\n794-expression_statement-157-157", method="", type_label=expression_statement];
801 [label="157_ _;\n801-expression_statement-158-158", method="", type_label=expression_statement];
809 [label="160_ require(_bet > 0);\n809-expression_statement-161-161", method="", type_label=expression_statement];
816 [label="161_ owner = msg.sender;\n816-expression_statement-162-162", method="", type_label=expression_statement];
822 [label="162_ state = State.SETUP;\n822-expression_statement-163-163", method="", type_label=expression_statement];
828 [label="163_ bet = _bet;\n828-expression_statement-164-164", method="", type_label=expression_statement];
836 [label="166_ mapping(address => uint) balances_intou26;\n836-new_variable-167-167", method="", type_label=new_variable];
842 [label="167_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n842-function_definition-168-173", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
858 [label="168_ require(balances_intou26[msg.sender] - _value >= 0);\n858-expression_statement-169-169", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
871 [label="169_ balances_intou26[msg.sender] -= _value;\n871-expression_statement-170-170", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
879 [label="170_ balances_intou26[_to] += _value;\n879-expression_statement-171-171", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
885 [label="171_ return true;\n885-return-172-172", method="transfer_intou26(address _to,uint _value)", type_label=return];
888 [label="173_ function setOracle(address _oracle) public payable byOwner inState(State.SETUP) {\n        oracle = _oracle;\n        emit OracleSet(oracle);\n    }\n888-function_definition-174-177", method="setOracle(address _oracle)", type_label=function_definition];
896 [label="173_ byOwner\n896-expression_statement-174-174", method="setOracle(address _oracle)", type_label=expression_statement];
898 [label="173_ inState(State.SETUP)\n898-expression_statement-174-174", method="setOracle(address _oracle)", type_label=expression_statement];
905 [label="174_ oracle = _oracle;\n905-expression_statement-175-175", method="setOracle(address _oracle)", type_label=expression_statement];
913 [label="177_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n913-function_definition-178-181", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
921 [label="178_ uint8 vundflw1=0;\n921-new_variable-179-179", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
927 [label="179_ vundflw1 = vundflw1 + p_intou20;\n927-expression_statement-180-180", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
933 [label="181_ function setInitialPrice(uint256 _value) public payable byOracle inState(State.SETUP) {\n        initialPrice = _value;\n        state = State.OPEN;\n        emit GameOpened(initialPrice);\n    }\n933-function_definition-182-186", method="setInitialPrice(uint256 _value)", type_label=function_definition];
941 [label="181_ byOracle\n941-expression_statement-182-182", method="setInitialPrice(uint256 _value)", type_label=expression_statement];
943 [label="181_ inState(State.SETUP)\n943-expression_statement-182-182", method="setInitialPrice(uint256 _value)", type_label=expression_statement];
950 [label="182_ initialPrice = _value;\n950-expression_statement-183-183", method="setInitialPrice(uint256 _value)", type_label=expression_statement];
954 [label="183_ state = State.OPEN;\n954-expression_statement-184-184", method="setInitialPrice(uint256 _value)", type_label=expression_statement];
964 [label="186_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n964-function_definition-187-190", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
972 [label="187_ uint8 vundflw1=0;\n972-new_variable-188-188", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
978 [label="188_ vundflw1 = vundflw1 + p_intou32;\n978-expression_statement-189-189", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
984 [label="190_ function closeGame() public byOwner inState(State.OPEN){\n        state = State.CLOSED;\n        emit GameClosed();\n    }\n984-function_definition-191-194", method="closeGame()", type_label=function_definition];
987 [label="190_ byOwner\n987-expression_statement-191-191", method="closeGame()", type_label=expression_statement];
989 [label="190_ inState(State.OPEN)\n989-expression_statement-191-191", method="closeGame()", type_label=expression_statement];
996 [label="191_ state = State.CLOSED;\n996-expression_statement-192-192", method="closeGame()", type_label=expression_statement];
1004 [label="194_ mapping(address => uint) balances_intou38;\n1004-new_variable-195-195", method="", type_label=new_variable];
1010 [label="195_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n1010-function_definition-196-201", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
1026 [label="196_ require(balances_intou38[msg.sender] - _value >= 0);\n1026-expression_statement-197-197", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1039 [label="197_ balances_intou38[msg.sender] -= _value;\n1039-expression_statement-198-198", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1047 [label="198_ balances_intou38[_to] += _value;\n1047-expression_statement-199-199", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1053 [label="199_ return true;\n1053-return-200-200", method="transfer_intou38(address _to,uint _value)", type_label=return];
1056 [label="201_ function betUp() public payable byPlayer inState(State.OPEN){\n        require(msg.value == (bet*0.001 ether));\n        guesses[UP].guesses_number++;\n        guesses[UP].players[msg.sender] = PaidStatus.NOT_PAID;\n        emit PlayerBet(msg.sender, UP);\n    }\n1056-function_definition-202-207", method="betUp()", type_label=function_definition];
1060 [label="201_ byPlayer\n1060-expression_statement-202-202", method="betUp()", type_label=expression_statement];
1062 [label="201_ inState(State.OPEN)\n1062-expression_statement-202-202", method="betUp()", type_label=expression_statement];
1069 [label="202_ require(msg.value == (bet*0.001 ether));\n1069-expression_statement-203-203", method="betUp()", type_label=expression_statement];
1082 [label="203_ guesses[UP].guesses_number++;\n1082-expression_statement-204-204", method="betUp()", type_label=expression_statement];
1083 [label="203_ guesses[UP].guesses_number++\n1083-expression_statement-204-204", method="betUp()", type_label=expression_statement];
1089 [label="204_ guesses[UP].players[msg.sender] = PaidStatus.NOT_PAID;\n1089-expression_statement-205-205", method="betUp()", type_label=expression_statement];
1111 [label="207_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n1111-function_definition-208-211", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
1119 [label="208_ uint8 vundflw1=0;\n1119-new_variable-209-209", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
1125 [label="209_ vundflw1 = vundflw1 + p_intou4;\n1125-expression_statement-210-210", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
1131 [label="211_ function betDown() public payable byPlayer inState(State.OPEN){\n        require(msg.value == (bet*0.001 ether));\n        guesses[DOWN].guesses_number++;\n        guesses[DOWN].players[msg.sender] = PaidStatus.NOT_PAID;\n        emit PlayerBet(msg.sender, DOWN);\n    }\n1131-function_definition-212-217", method="betDown()", type_label=function_definition];
1135 [label="211_ byPlayer\n1135-expression_statement-212-212", method="betDown()", type_label=expression_statement];
1137 [label="211_ inState(State.OPEN)\n1137-expression_statement-212-212", method="betDown()", type_label=expression_statement];
1144 [label="212_ require(msg.value == (bet*0.001 ether));\n1144-expression_statement-213-213", method="betDown()", type_label=expression_statement];
1157 [label="213_ guesses[DOWN].guesses_number++;\n1157-expression_statement-214-214", method="betDown()", type_label=expression_statement];
1158 [label="213_ guesses[DOWN].guesses_number++\n1158-expression_statement-214-214", method="betDown()", type_label=expression_statement];
1164 [label="214_ guesses[DOWN].players[msg.sender] = PaidStatus.NOT_PAID;\n1164-expression_statement-215-215", method="betDown()", type_label=expression_statement];
1186 [label="217_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1186-function_definition-218-221", method="bug_intou7()", type_label=function_definition];
1190 [label="218_ uint8 vundflw =0;\n1190-new_variable-219-219", method="bug_intou7()", type_label=new_variable];
1196 [label="219_ vundflw = vundflw -10;\n1196-expression_statement-220-220", method="bug_intou7()", type_label=expression_statement];
1202 [label="221_ function setFinalPrice(uint256 _value) public payable byOracle inState(State.CLOSED) {\n        finalPrice = _value;\n        emit FinalPriceSet(finalPrice);\n        if(finalPrice > initialPrice){\n            result = UP;\n        }else{\n            result = DOWN;\n        }\n        if(guesses[result].guesses_number > 0){\n            state = State.PLAYERS_WIN;\n            splitJackpot = getBalance()/guesses[result].guesses_number;\n            emit PlayersWin(result, splitJackpot);\n        }else{\n            state = State.OWNER_WIN;\n            emit OwnerWins(owner);\n        }\n    }\n1202-function_definition-222-238", method="setFinalPrice(uint256 _value)", type_label=function_definition];
1210 [label="221_ byOracle\n1210-expression_statement-222-222", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1212 [label="221_ inState(State.CLOSED)\n1212-expression_statement-222-222", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1219 [label="222_ finalPrice = _value;\n1219-expression_statement-223-223", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1227 [label="224_ if_finalPrice > initialPrice\n1227-if-225-229", method="setFinalPrice(uint256 _value)", type_label=if];
2730 [label="224_ end_if", method="setFinalPrice(uint256 _value)", type_label=end_if];
1232 [label="225_ result = UP;\n1232-expression_statement-226-226", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1237 [label="227_ result = DOWN;\n1237-expression_statement-228-228", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1241 [label="229_ if_guesses[result].guesses_number > 0\n1241-if-230-237", method="setFinalPrice(uint256 _value)", type_label=if];
2744 [label="229_ end_if", method="setFinalPrice(uint256 _value)", type_label=end_if];
1250 [label="230_ state = State.PLAYERS_WIN;\n1250-expression_statement-231-231", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1256 [label="231_ splitJackpot = getBalance()/guesses[result].guesses_number;\n1256-expression_statement-232-232", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1274 [label="234_ state = State.OWNER_WIN;\n1274-expression_statement-235-235", method="setFinalPrice(uint256 _value)", type_label=expression_statement];
1284 [label="238_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1284-function_definition-239-242", method="bug_intou23()", type_label=function_definition];
1288 [label="239_ uint8 vundflw =0;\n1288-new_variable-240-240", method="bug_intou23()", type_label=new_variable];
1294 [label="240_ vundflw = vundflw -10;\n1294-expression_statement-241-241", method="bug_intou23()", type_label=expression_statement];
1300 [label="242_ function collectOwnerWinnings() public byOwner inState(State.OWNER_WIN){\n        selfdestruct(owner);\n    }\n1300-function_definition-243-245", method="collectOwnerWinnings()", type_label=function_definition];
1303 [label="242_ byOwner\n1303-expression_statement-243-243", method="collectOwnerWinnings()", type_label=expression_statement];
1305 [label="242_ inState(State.OWNER_WIN)\n1305-expression_statement-243-243", method="collectOwnerWinnings()", type_label=expression_statement];
1312 [label="243_ selfdestruct(owner);\n1312-expression_statement-244-244", method="collectOwnerWinnings()", type_label=expression_statement];
1317 [label="245_ mapping(address => uint) balances_intou14;\n1317-new_variable-246-246", method="", type_label=new_variable];
1323 [label="246_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n1323-function_definition-247-252", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
1339 [label="247_ require(balances_intou14[msg.sender] - _value >= 0);\n1339-expression_statement-248-248", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1352 [label="248_ balances_intou14[msg.sender] -= _value;\n1352-expression_statement-249-249", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1360 [label="249_ balances_intou14[_to] += _value;\n1360-expression_statement-250-250", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1366 [label="250_ return true;\n1366-return-251-251", method="transfer_intou14(address _to,uint _value)", type_label=return];
1369 [label="252_ function collectPlayerWinnings() public byPlayer inState(State.PLAYERS_WIN){\n        if(guesses[result].players[msg.sender] == PaidStatus.NOT_PAID){\n            guesses[result].players[msg.sender] = PaidStatus.PAID;\n            msg.sender.transfer(splitJackpot);\n        } else revert();\n    }\n1369-function_definition-253-258", method="collectPlayerWinnings()", type_label=function_definition];
1372 [label="252_ byPlayer\n1372-expression_statement-253-253", method="collectPlayerWinnings()", type_label=expression_statement];
1374 [label="252_ inState(State.PLAYERS_WIN)\n1374-expression_statement-253-253", method="collectPlayerWinnings()", type_label=expression_statement];
1381 [label="253_ if_guesses[result].players[msg.sender] == PaidStatus.NOT_PAID\n1381-if-254-257", method="collectPlayerWinnings()", type_label=if];
2884 [label="253_ end_if", method="collectPlayerWinnings()", type_label=end_if];
1396 [label="254_ guesses[result].players[msg.sender] = PaidStatus.PAID;\n1396-expression_statement-255-255", method="collectPlayerWinnings()", type_label=expression_statement];
1410 [label="255_ msg.sender.transfer(splitJackpot);\n1410-expression_statement-256-256", method="collectPlayerWinnings()", type_label=expression_statement];
1421 [label="258_ mapping(address => uint) balances_intou30;\n1421-new_variable-259-259", method="", type_label=new_variable];
1427 [label="259_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n1427-function_definition-260-265", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
1443 [label="260_ require(balances_intou30[msg.sender] - _value >= 0);\n1443-expression_statement-261-261", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1456 [label="261_ balances_intou30[msg.sender] -= _value;\n1456-expression_statement-262-262", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1464 [label="262_ balances_intou30[_to] += _value;\n1464-expression_statement-263-263", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1470 [label="263_ return true;\n1470-return-264-264", method="transfer_intou30(address _to,uint _value)", type_label=return];
1473 [label="265_ function getBalance() private view returns (uint256){\n        return address(this).balance;\n    }\n1473-function_definition-266-268", method="getBalance()", type_label=function_definition];
1482 [label="266_ return address(this).balance;\n1482-return-267-267", method="getBalance()", type_label=return];
1488 [label="268_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n1488-function_definition-269-272", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
1496 [label="269_ uint8 vundflw1=0;\n1496-new_variable-270-270", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
1502 [label="270_ vundflw1 = vundflw1 + p_intou8;\n1502-expression_statement-271-271", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
1280;
1420;
13 -> 17  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
17 -> 23  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 43  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
43 -> 49  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
61 -> 65  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
65 -> 71  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
79 -> 87  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
128 -> 132  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
132 -> 143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
143 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
164 -> 168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
168 -> 174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
190 -> 194  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
194 -> 200  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
223 -> 231  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
239 -> 243  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
243 -> 254  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
254 -> 260  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
301 -> 309  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
309 -> 315  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
326 -> 330  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
330 -> 336  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
342 -> 347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
354 -> 362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
370 -> 374  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
374 -> 385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
385 -> 391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
400 -> 406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 428  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
428 -> 441  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
441 -> 449  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
449 -> 455  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
455 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
458 -> 466  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
473 -> 481  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
489 -> 493  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
493 -> 504  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
504 -> 510  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
519 -> 524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
524 -> 528  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
535 -> 543  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
551 -> 555  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
555 -> 566  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
566 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
586 -> 590  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
590 -> 596  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
602 -> 607  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
614 -> 622  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
630 -> 634  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
634 -> 645  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
645 -> 651  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
660 -> 665  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
672 -> 680  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
688 -> 692  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
692 -> 703  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
703 -> 709  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
723 -> 727  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
727 -> 733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
739 -> 744  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
744 -> 758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
747 -> 756  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
758 -> 772  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
761 -> 770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
772 -> 786  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
775 -> 784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
794 -> 801  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
809 -> 816  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
816 -> 822  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
822 -> 828  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
842 -> 858  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
858 -> 871  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
871 -> 879  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
879 -> 885  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
885 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
888 -> 905  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
896 -> 898  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
913 -> 921  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
921 -> 927  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
933 -> 950  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
941 -> 943  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
950 -> 954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
964 -> 972  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
972 -> 978  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
984 -> 996  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
987 -> 989  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1010 -> 1026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1026 -> 1039  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1039 -> 1047  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1047 -> 1053  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1053 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1056 -> 1069  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1060 -> 1062  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1069 -> 1082  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1082 -> 1089  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1111 -> 1119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1119 -> 1125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1131 -> 1144  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1135 -> 1137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1144 -> 1157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1157 -> 1164  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1186 -> 1190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1190 -> 1196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1202 -> 1219  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1210 -> 1212  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1227 -> 1232  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1227 -> 1237  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2730 -> 1241  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1232 -> 2730  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1237 -> 2730  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1241 -> 1250  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1241 -> 1274  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1250 -> 1256  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1284 -> 1288  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1288 -> 1294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1300 -> 1312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1303 -> 1305  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1323 -> 1339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1339 -> 1352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1352 -> 1360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1360 -> 1366  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1366 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1369 -> 1381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1372 -> 1374  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1381 -> 1396  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1381 -> 1396  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=1, label=neg_next];
2884 -> 1421  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1396 -> 1410  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1410 -> 2884  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1427 -> 1443  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1443 -> 1456  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1456 -> 1464  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1464 -> 1470  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1470 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1473 -> 1482  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1482 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1488 -> 1496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1496 -> 1502  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1280 -> 2744  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1420 -> 2884  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
}
