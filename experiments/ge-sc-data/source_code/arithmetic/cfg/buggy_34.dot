digraph  {
13 [label="2_ function bug_intou24(uint8 p_intou24) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou24;    \n}\n13-function_definition-3-6", method="bug_intou24(uint8 p_intou24)", type_label=function_definition];
21 [label="3_ uint8 vundflw1=0;\n21-new_variable-4-4", method="bug_intou24(uint8 p_intou24)", type_label=new_variable];
27 [label="4_ vundflw1 = vundflw1 + p_intou24;\n27-expression_statement-5-5", method="bug_intou24(uint8 p_intou24)", type_label=expression_statement];
33 [label="6_ address payable public owner;\n33-new_variable-7-7", method="", type_label=new_variable];
38 [label="7_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n38-function_definition-8-11", method="bug_intou27()", type_label=function_definition];
42 [label="8_ uint8 vundflw =0;\n42-new_variable-9-9", method="bug_intou27()", type_label=new_variable];
48 [label="9_ vundflw = vundflw -10;\n48-expression_statement-10-10", method="bug_intou27()", type_label=expression_statement];
66 [label="13_ owner = msg.sender;\n66-expression_statement-14-14", method="", type_label=expression_statement];
72 [label="15_ mapping(address => uint) balances_intou2;\n72-new_variable-16-16", method="", type_label=new_variable];
78 [label="16_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n78-function_definition-17-22", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
94 [label="17_ require(balances_intou2[msg.sender] - _value >= 0);\n94-expression_statement-18-18", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
107 [label="18_ balances_intou2[msg.sender] -= _value;\n107-expression_statement-19-19", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
115 [label="19_ balances_intou2[_to] += _value;\n115-expression_statement-20-20", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
121 [label="20_ return true;\n121-return-21-21", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
124 [label="22_ modifier onlyOwner {\n       require(msg.sender == owner);\n       _;\n   }\n124-expression_statement-23-26", method="", type_label=expression_statement];
127 [label="23_ require(msg.sender == owner);\n127-expression_statement-24-24", method="", type_label=expression_statement];
136 [label="24_ _;\n136-expression_statement-25-25", method="", type_label=expression_statement];
138 [label="26_ function transferOwnership(address payable _newOwner) public onlyOwner {\n       owner = _newOwner;\n   }\n138-function_definition-27-29", method="transferOwnership(address payable _newOwner)", type_label=function_definition];
145 [label="26_ onlyOwner\n145-expression_statement-27-27", method="transferOwnership(address payable _newOwner)", type_label=expression_statement];
148 [label="27_ owner = _newOwner;\n148-expression_statement-28-28", method="transferOwnership(address payable _newOwner)", type_label=expression_statement];
152 [label="29_ mapping(address => uint) public lockTime_intou17;\n152-new_variable-30-30", method="", type_label=new_variable];
159 [label="30_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n159-function_definition-31-33", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
167 [label="31_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n167-expression_statement-32-32", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
175 [label="33_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n175-function_definition-34-38", method="withdraw_intou17()", type_label=function_definition];
179 [label="34_ require(now > lockTime_intou17[msg.sender]);\n179-expression_statement-35-35", method="withdraw_intou17()", type_label=expression_statement];
190 [label="35_ uint transferValue_intou17 = 10;\n190-new_variable-36-36", method="withdraw_intou17()", type_label=new_variable];
196 [label="36_ msg.sender.transfer(transferValue_intou17);\n196-expression_statement-37-37", method="withdraw_intou17()", type_label=expression_statement];
208 [label="40_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n208-function_definition-41-45", method="add(uint256 a,uint256 b)", type_label=function_definition];
225 [label="41_ uint256 c = a + b;\n225-new_variable-42-42", method="add(uint256 a,uint256 b)", type_label=new_variable];
233 [label="42_ require(c >= a, \"SafeMath: addition overflow\");\n233-expression_statement-43-43", method="add(uint256 a,uint256 b)", type_label=expression_statement];
243 [label="43_ return c;\n243-return-44-44", method="add(uint256 a,uint256 b)", type_label=return];
245 [label="45_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n        return c;\n    }\n245-function_definition-46-50", method="sub(uint256 a,uint256 b)", type_label=function_definition];
262 [label="46_ require(b <= a, \"SafeMath: subtraction overflow\");\n262-expression_statement-47-47", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
272 [label="47_ uint256 c = a - b;\n272-new_variable-48-48", method="sub(uint256 a,uint256 b)", type_label=new_variable];
280 [label="48_ return c;\n280-return-49-49", method="sub(uint256 a,uint256 b)", type_label=return];
282 [label="50_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n282-function_definition-51-58", method="mul(uint256 a,uint256 b)", type_label=function_definition];
299 [label="51_ if_a == 0\n299-if-52-54", method="mul(uint256 a,uint256 b)", type_label=if];
2771 [label="51_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
304 [label="52_ return 0;\n304-return-53-53", method="mul(uint256 a,uint256 b)", type_label=return];
306 [label="54_ uint256 c = a * b;\n306-new_variable-55-55", method="mul(uint256 a,uint256 b)", type_label=new_variable];
314 [label="55_ require(c / a == b, \"SafeMath: multiplication overflow\");\n314-expression_statement-56-56", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
326 [label="56_ return c;\n326-return-57-57", method="mul(uint256 a,uint256 b)", type_label=return];
328 [label="58_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        return c;\n    }\n328-function_definition-59-63", method="div(uint256 a,uint256 b)", type_label=function_definition];
345 [label="59_ require(b > 0, \"SafeMath: division by zero\");\n345-expression_statement-60-60", method="div(uint256 a,uint256 b)", type_label=expression_statement];
355 [label="60_ uint256 c = a / b;\n355-new_variable-61-61", method="div(uint256 a,uint256 b)", type_label=new_variable];
363 [label="61_ return c;\n363-return-62-62", method="div(uint256 a,uint256 b)", type_label=return];
365 [label="63_ function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n365-function_definition-64-67", method="mod(uint256 a,uint256 b)", type_label=function_definition];
382 [label="64_ require(b != 0, \"SafeMath: modulo by zero\");\n382-expression_statement-65-65", method="mod(uint256 a,uint256 b)", type_label=expression_statement];
392 [label="65_ return a % b;\n392-return-66-66", method="mod(uint256 a,uint256 b)", type_label=return];
407 [label="70_ mapping(address => uint) public lockTime_intou5;\n407-new_variable-71-71", method="", type_label=new_variable];
414 [label="71_ function increaseLockTime_intou5(uint _secondsToIncrease) public {\n        lockTime_intou5[msg.sender] += _secondsToIncrease;   \n    }\n414-function_definition-72-74", method="increaseLockTime_intou5(uint _secondsToIncrease)", type_label=function_definition];
422 [label="72_ lockTime_intou5[msg.sender] += _secondsToIncrease;\n422-expression_statement-73-73", method="increaseLockTime_intou5(uint _secondsToIncrease)", type_label=expression_statement];
430 [label="74_ function withdraw_intou5() public {\n        require(now > lockTime_intou5[msg.sender]);    \n        uint transferValue_intou5 = 10;           \n        msg.sender.transfer(transferValue_intou5);\n    }\n430-function_definition-75-79", method="withdraw_intou5()", type_label=function_definition];
434 [label="75_ require(now > lockTime_intou5[msg.sender]);\n434-expression_statement-76-76", method="withdraw_intou5()", type_label=expression_statement];
445 [label="76_ uint transferValue_intou5 = 10;\n445-new_variable-77-77", method="withdraw_intou5()", type_label=new_variable];
451 [label="77_ msg.sender.transfer(transferValue_intou5);\n451-expression_statement-78-78", method="withdraw_intou5()", type_label=expression_statement];
460 [label="79_ mapping (address => transferMapping) private _balances;\n460-new_variable-80-80", method="", type_label=new_variable];
468 [label="80_ function bug_intou15() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n468-function_definition-81-84", method="bug_intou15()", type_label=function_definition];
472 [label="81_ uint8 vundflw =0;\n472-new_variable-82-82", method="bug_intou15()", type_label=new_variable];
478 [label="82_ vundflw = vundflw -10;\n478-expression_statement-83-83", method="bug_intou15()", type_label=expression_statement];
484 [label="84_ mapping (address => mapping (address => uint256)) private _allowances;\n484-new_variable-85-85", method="", type_label=new_variable];
493 [label="85_ function bug_intou28(uint8 p_intou28) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou28;    \n}\n493-function_definition-86-89", method="bug_intou28(uint8 p_intou28)", type_label=function_definition];
501 [label="86_ uint8 vundflw1=0;\n501-new_variable-87-87", method="bug_intou28(uint8 p_intou28)", type_label=new_variable];
507 [label="87_ vundflw1 = vundflw1 + p_intou28;\n507-expression_statement-88-88", method="bug_intou28(uint8 p_intou28)", type_label=expression_statement];
513 [label="89_ uint256 private _totalSupply;\n513-new_variable-90-90", method="", type_label=new_variable];
518 [label="90_ mapping(address => uint) balances_intou34;\n518-new_variable-91-91", method="", type_label=new_variable];
524 [label="91_ function transfer_intou34(address _to, uint _value) public returns (bool) {\n    require(balances_intou34[msg.sender] - _value >= 0);   \n    balances_intou34[msg.sender] -= _value;   \n    balances_intou34[_to] += _value;   \n    return true;\n  }\n524-function_definition-92-97", method="transfer_intou34(address _to,uint _value)", type_label=function_definition];
540 [label="92_ require(balances_intou34[msg.sender] - _value >= 0);\n540-expression_statement-93-93", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
553 [label="93_ balances_intou34[msg.sender] -= _value;\n553-expression_statement-94-94", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
561 [label="94_ balances_intou34[_to] += _value;\n561-expression_statement-95-95", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
567 [label="95_ return true;\n567-return-96-96", method="transfer_intou34(address _to,uint _value)", type_label=return];
570 [label="97_ uint256 public _maxTotalSupply;\n570-new_variable-98-98", method="", type_label=new_variable];
575 [label="98_ mapping(address => uint) public lockTime_intou21;\n575-new_variable-99-99", method="", type_label=new_variable];
582 [label="99_ function increaseLockTime_intou21(uint _secondsToIncrease) public {\n        lockTime_intou21[msg.sender] += _secondsToIncrease;   \n    }\n582-function_definition-100-102", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=function_definition];
590 [label="100_ lockTime_intou21[msg.sender] += _secondsToIncrease;\n590-expression_statement-101-101", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=expression_statement];
598 [label="102_ function withdraw_intou21() public {\n        require(now > lockTime_intou21[msg.sender]);    \n        uint transferValue_intou21 = 10;           \n        msg.sender.transfer(transferValue_intou21);\n    }\n598-function_definition-103-107", method="withdraw_intou21()", type_label=function_definition];
602 [label="103_ require(now > lockTime_intou21[msg.sender]);\n602-expression_statement-104-104", method="withdraw_intou21()", type_label=expression_statement];
613 [label="104_ uint transferValue_intou21 = 10;\n613-new_variable-105-105", method="withdraw_intou21()", type_label=new_variable];
619 [label="105_ msg.sender.transfer(transferValue_intou21);\n619-expression_statement-106-106", method="withdraw_intou21()", type_label=expression_statement];
628 [label="107_ string private _name = \"Lollypop\";\n628-new_variable-108-108", method="", type_label=new_variable];
635 [label="108_ mapping(address => uint) balances_intou10;\n635-new_variable-109-109", method="", type_label=new_variable];
641 [label="109_ function transfer_intou10(address _to, uint _value) public returns (bool) {\n    require(balances_intou10[msg.sender] - _value >= 0);   \n    balances_intou10[msg.sender] -= _value;   \n    balances_intou10[_to] += _value;   \n    return true;\n  }\n641-function_definition-110-115", method="transfer_intou10(address _to,uint _value)", type_label=function_definition];
657 [label="110_ require(balances_intou10[msg.sender] - _value >= 0);\n657-expression_statement-111-111", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
670 [label="111_ balances_intou10[msg.sender] -= _value;\n670-expression_statement-112-112", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
678 [label="112_ balances_intou10[_to] += _value;\n678-expression_statement-113-113", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
684 [label="113_ return true;\n684-return-114-114", method="transfer_intou10(address _to,uint _value)", type_label=return];
687 [label="115_ string private _symbol = \"Lolly\";\n687-new_variable-116-116", method="", type_label=new_variable];
694 [label="116_ mapping(address => uint) balances_intou22;\n694-new_variable-117-117", method="", type_label=new_variable];
700 [label="117_ function transfer_intou22(address _to, uint _value) public returns (bool) {\n    require(balances_intou22[msg.sender] - _value >= 0);   \n    balances_intou22[msg.sender] -= _value;   \n    balances_intou22[_to] += _value;   \n    return true;\n  }\n700-function_definition-118-123", method="transfer_intou22(address _to,uint _value)", type_label=function_definition];
716 [label="118_ require(balances_intou22[msg.sender] - _value >= 0);\n716-expression_statement-119-119", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
729 [label="119_ balances_intou22[msg.sender] -= _value;\n729-expression_statement-120-120", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
737 [label="120_ balances_intou22[_to] += _value;\n737-expression_statement-121-121", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
743 [label="121_ return true;\n743-return-122-122", method="transfer_intou22(address _to,uint _value)", type_label=return];
746 [label="123_ uint8 private _decimals= 18;\n746-new_variable-124-124", method="", type_label=new_variable];
752 [label="124_ function bug_intou12(uint8 p_intou12) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou12;    \n}\n752-function_definition-125-128", method="bug_intou12(uint8 p_intou12)", type_label=function_definition];
760 [label="125_ uint8 vundflw1=0;\n760-new_variable-126-126", method="bug_intou12(uint8 p_intou12)", type_label=new_variable];
766 [label="126_ vundflw1 = vundflw1 + p_intou12;\n766-expression_statement-127-127", method="bug_intou12(uint8 p_intou12)", type_label=expression_statement];
772 [label="128_ uint256 public maxAgeOfToken = 365 days;\n772-new_variable-129-129", method="", type_label=new_variable];
779 [label="129_ function bug_intou11() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n779-function_definition-130-133", method="bug_intou11()", type_label=function_definition];
783 [label="130_ uint8 vundflw =0;\n783-new_variable-131-131", method="bug_intou11()", type_label=new_variable];
789 [label="131_ vundflw = vundflw -10;\n789-expression_statement-132-132", method="bug_intou11()", type_label=expression_statement];
795 [label="133_ uint256  public minAgeOfToken = 1 days;\n795-new_variable-134-134", method="", type_label=new_variable];
802 [label="134_ mapping(address => uint) public lockTime_intou1;\n802-new_variable-135-135", method="", type_label=new_variable];
809 [label="135_ function increaseLockTime_intou1(uint _secondsToIncrease) public {\n        lockTime_intou1[msg.sender] += _secondsToIncrease;   \n    }\n809-function_definition-136-138", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=function_definition];
817 [label="136_ lockTime_intou1[msg.sender] += _secondsToIncrease;\n817-expression_statement-137-137", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=expression_statement];
825 [label="138_ function withdraw_ovrflow1() public {\n        require(now > lockTime_intou1[msg.sender]);    \n        uint transferValue_intou1 = 10;           \n        msg.sender.transfer(transferValue_intou1);\n    }\n825-function_definition-139-143", method="withdraw_ovrflow1()", type_label=function_definition];
829 [label="139_ require(now > lockTime_intou1[msg.sender]);\n829-expression_statement-140-140", method="withdraw_ovrflow1()", type_label=expression_statement];
840 [label="140_ uint transferValue_intou1 = 10;\n840-new_variable-141-141", method="withdraw_ovrflow1()", type_label=new_variable];
846 [label="141_ msg.sender.transfer(transferValue_intou1);\n846-expression_statement-142-142", method="withdraw_ovrflow1()", type_label=expression_statement];
855 [label="143_ uint256 public perDayBonus = 100;\n855-new_variable-144-144", method="", type_label=new_variable];
861 [label="144_ struct  transferMapping{\n        uint256 amount;\n        uint256 time;\n    }\n861-expression_statement-145-148", method="transferMapping()", type_label=expression_statement];
873 [label="149_ _maxTotalSupply = 1000000000 * 10 ** 18;\n873-expression_statement-150-150", method="", type_label=expression_statement];
881 [label="150_ _totalSupply =  2000000 * 10 ** 18;\n881-expression_statement-151-151", method="", type_label=expression_statement];
889 [label="151_ _balances[msg.sender].amount = _totalSupply;\n889-expression_statement-152-152", method="", type_label=expression_statement];
899 [label="152_ _balances[msg.sender].time = now;\n899-expression_statement-153-153", method="", type_label=expression_statement];
909 [label="154_ mapping(address => uint) public lockTime_intou37;\n909-new_variable-155-155", method="", type_label=new_variable];
916 [label="155_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n916-function_definition-156-158", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
924 [label="156_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n924-expression_statement-157-157", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
932 [label="158_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n932-function_definition-159-163", method="withdraw_intou37()", type_label=function_definition];
936 [label="159_ require(now > lockTime_intou37[msg.sender]);\n936-expression_statement-160-160", method="withdraw_intou37()", type_label=expression_statement];
947 [label="160_ uint transferValue_intou37 = 10;\n947-new_variable-161-161", method="withdraw_intou37()", type_label=new_variable];
953 [label="161_ msg.sender.transfer(transferValue_intou37);\n953-expression_statement-162-162", method="withdraw_intou37()", type_label=expression_statement];
962 [label="163_ function calculateBonus(uint256 timeElasped , uint256 amount) public view  returns(uint256){\n        uint256 totalDays = timeElasped.div(minAgeOfToken);\n        if(totalDays > maxAgeOfToken){\n            totalDays = maxAgeOfToken;\n        }\n        uint256 totalBonus = (totalDays *  amount).div(perDayBonus);\n        return totalBonus;\n    }\n962-function_definition-164-171", method="calculateBonus(uint256 timeElasped,uint256 amount)", type_label=function_definition];
979 [label="164_ uint256 totalDays = timeElasped.div(minAgeOfToken);\n979-new_variable-165-165", method="calculateBonus(uint256 timeElasped,uint256 amount)", type_label=new_variable];
990 [label="165_ if_totalDays > maxAgeOfToken\n990-if-166-168", method="calculateBonus(uint256 timeElasped,uint256 amount)", type_label=if];
3462 [label="165_ end_if", method="calculateBonus(uint256 timeElasped,uint256 amount)", type_label=end_if];
995 [label="166_ totalDays = maxAgeOfToken;\n995-expression_statement-167-167", method="calculateBonus(uint256 timeElasped,uint256 amount)", type_label=expression_statement];
999 [label="168_ uint256 totalBonus = (totalDays *  amount).div(perDayBonus);\n999-new_variable-169-169", method="calculateBonus(uint256 timeElasped,uint256 amount)", type_label=new_variable];
1013 [label="169_ return totalBonus;\n1013-return-170-170", method="calculateBonus(uint256 timeElasped,uint256 amount)", type_label=return];
1015 [label="171_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1015-function_definition-172-175", method="bug_intou3()", type_label=function_definition];
1019 [label="172_ uint8 vundflw =0;\n1019-new_variable-173-173", method="bug_intou3()", type_label=new_variable];
1025 [label="173_ vundflw = vundflw -10;\n1025-expression_statement-174-174", method="bug_intou3()", type_label=expression_statement];
1031 [label="175_ function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n        uint256 senderTimeElasped = now - (_balances[sender].time);\n        uint256 recipientTimeElasped = now - (_balances[recipient].time);\n        if(senderTimeElasped >= minAgeOfToken && (_totalSupply < _maxTotalSupply)){\n            uint256 bonus = calculateBonus(senderTimeElasped , balanceOf(sender));\n            mint(sender , bonus);\n        }\n        if(recipientTimeElasped >= minAgeOfToken && (_totalSupply < _maxTotalSupply) && sender!= recipient){\n             uint256 bonus = calculateBonus(recipientTimeElasped , balanceOf(recipient));\n             mint(recipient , bonus);\n        }\n        _balances[sender].amount = _balances[sender].amount.sub(amount);\n        _balances[recipient].amount = _balances[recipient].amount.add(amount);\n        _balances[sender].time = now;\n        _balances[recipient].time = now;\n        emit Transfer(sender, recipient, amount);\n    }\n1031-function_definition-176-194", method="_transfer(address sender,address recipient,uint256 amount)", type_label=function_definition];
1047 [label="176_ require(sender != address(0), \"ERC20: transfer from the zero address\");\n1047-expression_statement-177-177", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1059 [label="177_ require(recipient != address(0), \"ERC20: transfer to the zero address\");\n1059-expression_statement-178-178", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1071 [label="178_ uint256 senderTimeElasped = now - (_balances[sender].time);\n1071-new_variable-179-179", method="_transfer(address sender,address recipient,uint256 amount)", type_label=new_variable];
1084 [label="179_ uint256 recipientTimeElasped = now - (_balances[recipient].time);\n1084-new_variable-180-180", method="_transfer(address sender,address recipient,uint256 amount)", type_label=new_variable];
1097 [label="180_ if_senderTimeElasped >= minAgeOfToken && (_totalSupply < _maxTotalSupply)\n1097-if-181-184", method="_transfer(address sender,address recipient,uint256 amount)", type_label=if];
3569 [label="180_ end_if", method="_transfer(address sender,address recipient,uint256 amount)", type_label=end_if];
1107 [label="181_ uint256 bonus = calculateBonus(senderTimeElasped , balanceOf(sender));\n1107-new_variable-182-182", method="_transfer(address sender,address recipient,uint256 amount)", type_label=new_variable];
1121 [label="182_ mint(sender , bonus);\n1121-expression_statement-183-183", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1128 [label="184_ if_recipientTimeElasped >= minAgeOfToken && (_totalSupply < _maxTotalSupply) && sender!= recipient\n1128-if-185-188", method="_transfer(address sender,address recipient,uint256 amount)", type_label=if];
3600 [label="184_ end_if", method="_transfer(address sender,address recipient,uint256 amount)", type_label=end_if];
1142 [label="185_ uint256 bonus = calculateBonus(recipientTimeElasped , balanceOf(recipient));\n1142-new_variable-186-186", method="_transfer(address sender,address recipient,uint256 amount)", type_label=new_variable];
1156 [label="186_ mint(recipient , bonus);\n1156-expression_statement-187-187", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1163 [label="188_ _balances[sender].amount = _balances[sender].amount.sub(amount);\n1163-expression_statement-189-189", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1180 [label="189_ _balances[recipient].amount = _balances[recipient].amount.add(amount);\n1180-expression_statement-190-190", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1197 [label="190_ _balances[sender].time = now;\n1197-expression_statement-191-191", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1205 [label="191_ _balances[recipient].time = now;\n1205-expression_statement-192-192", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1221 [label="194_ mapping(address => uint) public lockTime_intou9;\n1221-new_variable-195-195", method="", type_label=new_variable];
1228 [label="195_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n1228-function_definition-196-198", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
1236 [label="196_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n1236-expression_statement-197-197", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
1244 [label="198_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n1244-function_definition-199-203", method="withdraw_intou9()", type_label=function_definition];
1248 [label="199_ require(now > lockTime_intou9[msg.sender]);\n1248-expression_statement-200-200", method="withdraw_intou9()", type_label=expression_statement];
1259 [label="200_ uint transferValue_intou9 = 10;\n1259-new_variable-201-201", method="withdraw_intou9()", type_label=new_variable];
1265 [label="201_ msg.sender.transfer(transferValue_intou9);\n1265-expression_statement-202-202", method="withdraw_intou9()", type_label=expression_statement];
1274 [label="203_ function name() public view returns (string memory) {\n        return _name;\n    }\n1274-function_definition-204-206", method="name()", type_label=function_definition];
1283 [label="204_ return _name;\n1283-return-205-205", method="name()", type_label=return];
1285 [label="206_ mapping(address => uint) public lockTime_intou25;\n1285-new_variable-207-207", method="", type_label=new_variable];
1292 [label="207_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n1292-function_definition-208-210", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
1300 [label="208_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n1300-expression_statement-209-209", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
1308 [label="210_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n1308-function_definition-211-215", method="withdraw_intou25()", type_label=function_definition];
1312 [label="211_ require(now > lockTime_intou25[msg.sender]);\n1312-expression_statement-212-212", method="withdraw_intou25()", type_label=expression_statement];
1323 [label="212_ uint transferValue_intou25 = 10;\n1323-new_variable-213-213", method="withdraw_intou25()", type_label=new_variable];
1329 [label="213_ msg.sender.transfer(transferValue_intou25);\n1329-expression_statement-214-214", method="withdraw_intou25()", type_label=expression_statement];
1338 [label="215_ function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n1338-function_definition-216-218", method="symbol()", type_label=function_definition];
1347 [label="216_ return _symbol;\n1347-return-217-217", method="symbol()", type_label=return];
1349 [label="218_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1349-function_definition-219-222", method="bug_intou19()", type_label=function_definition];
1353 [label="219_ uint8 vundflw =0;\n1353-new_variable-220-220", method="bug_intou19()", type_label=new_variable];
1359 [label="220_ vundflw = vundflw -10;\n1359-expression_statement-221-221", method="bug_intou19()", type_label=expression_statement];
1365 [label="222_ function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n1365-function_definition-223-225", method="decimals()", type_label=function_definition];
1374 [label="223_ return _decimals;\n1374-return-224-224", method="decimals()", type_label=return];
1376 [label="225_ mapping(address => uint) balances_intou26;\n1376-new_variable-226-226", method="", type_label=new_variable];
1382 [label="226_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n1382-function_definition-227-232", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
1398 [label="227_ require(balances_intou26[msg.sender] - _value >= 0);\n1398-expression_statement-228-228", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1411 [label="228_ balances_intou26[msg.sender] -= _value;\n1411-expression_statement-229-229", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1419 [label="229_ balances_intou26[_to] += _value;\n1419-expression_statement-230-230", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1425 [label="230_ return true;\n1425-return-231-231", method="transfer_intou26(address _to,uint _value)", type_label=return];
1428 [label="232_ modifier onlyLollypopAndOwner {\n        require(msg.sender == address(this) || msg.sender == owner);\n        _;\n    }\n1428-expression_statement-233-236", method="", type_label=expression_statement];
1431 [label="233_ require(msg.sender == address(this) || msg.sender == owner);\n1431-expression_statement-234-234", method="", type_label=expression_statement];
1448 [label="234_ _;\n1448-expression_statement-235-235", method="", type_label=expression_statement];
1450 [label="236_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1450-function_definition-237-240", method="bug_intou31()", type_label=function_definition];
1454 [label="237_ uint8 vundflw =0;\n1454-new_variable-238-238", method="bug_intou31()", type_label=new_variable];
1460 [label="238_ vundflw = vundflw -10;\n1460-expression_statement-239-239", method="bug_intou31()", type_label=expression_statement];
1480 [label="241_ mapping(address => uint) public lockTime_intou13;\n1480-new_variable-242-242", method="", type_label=new_variable];
1487 [label="242_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n1487-function_definition-243-245", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
1495 [label="243_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n1495-expression_statement-244-244", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
1503 [label="245_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n1503-function_definition-246-250", method="withdraw_intou13()", type_label=function_definition];
1507 [label="246_ require(now > lockTime_intou13[msg.sender]);\n1507-expression_statement-247-247", method="withdraw_intou13()", type_label=expression_statement];
1518 [label="247_ uint transferValue_intou13 = 10;\n1518-new_variable-248-248", method="withdraw_intou13()", type_label=new_variable];
1524 [label="248_ msg.sender.transfer(transferValue_intou13);\n1524-expression_statement-249-249", method="withdraw_intou13()", type_label=expression_statement];
1547 [label="251_ function mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account].amount = _balances[account].amount.add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n1547-function_definition-252-257", method="mint(address account,uint256 amount)", type_label=function_definition];
1559 [label="252_ require(account != address(0), \"ERC20: mint to the zero address\");\n1559-expression_statement-253-253", method="mint(address account,uint256 amount)", type_label=expression_statement];
1571 [label="253_ _totalSupply = _totalSupply.add(amount);\n1571-expression_statement-254-254", method="mint(address account,uint256 amount)", type_label=expression_statement];
1580 [label="254_ _balances[account].amount = _balances[account].amount.add(amount);\n1580-expression_statement-255-255", method="mint(address account,uint256 amount)", type_label=expression_statement];
1607 [label="257_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n1607-function_definition-258-261", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
1615 [label="258_ uint8 vundflw1=0;\n1615-new_variable-259-259", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
1621 [label="259_ vundflw1 = vundflw1 + p_intou20;\n1621-expression_statement-260-260", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
1627 [label="261_ function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n1627-function_definition-262-264", method="totalSupply()", type_label=function_definition];
1636 [label="262_ return _totalSupply;\n1636-return-263-263", method="totalSupply()", type_label=return];
1638 [label="264_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n1638-function_definition-265-268", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
1646 [label="265_ uint8 vundflw1=0;\n1646-new_variable-266-266", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
1652 [label="266_ vundflw1 = vundflw1 + p_intou32;\n1652-expression_statement-267-267", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
1658 [label="268_ function balanceOf(address account) public view returns (uint256) {\n        return _balances[account].amount;\n    }\n1658-function_definition-269-271", method="balanceOf(address account)", type_label=function_definition];
1671 [label="269_ return _balances[account].amount;\n1671-return-270-270", method="balanceOf(address account)", type_label=return];
1677 [label="271_ mapping(address => uint) balances_intou38;\n1677-new_variable-272-272", method="", type_label=new_variable];
1683 [label="272_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n1683-function_definition-273-278", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
1699 [label="273_ require(balances_intou38[msg.sender] - _value >= 0);\n1699-expression_statement-274-274", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1712 [label="274_ balances_intou38[msg.sender] -= _value;\n1712-expression_statement-275-275", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1720 [label="275_ balances_intou38[_to] += _value;\n1720-expression_statement-276-276", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1726 [label="276_ return true;\n1726-return-277-277", method="transfer_intou38(address _to,uint _value)", type_label=return];
1729 [label="278_ function timeOf(address account) public view returns (uint256) {\n        return _balances[account].time;\n    }\n1729-function_definition-279-281", method="timeOf(address account)", type_label=function_definition];
1742 [label="279_ return _balances[account].time;\n1742-return-280-280", method="timeOf(address account)", type_label=return];
1748 [label="281_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n1748-function_definition-282-285", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
1756 [label="282_ uint8 vundflw1=0;\n1756-new_variable-283-283", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
1762 [label="283_ vundflw1 = vundflw1 + p_intou4;\n1762-expression_statement-284-284", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
1768 [label="285_ function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n1768-function_definition-286-289", method="transfer(address recipient,uint256 amount)", type_label=function_definition];
1784 [label="286_ _transfer(msg.sender, recipient, amount);\n1784-expression_statement-287-287", method="transfer(address recipient,uint256 amount)", type_label=expression_statement];
1795 [label="287_ return true;\n1795-return-288-288", method="transfer(address recipient,uint256 amount)", type_label=return];
1798 [label="289_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1798-function_definition-290-293", method="bug_intou7()", type_label=function_definition];
1802 [label="290_ uint8 vundflw =0;\n1802-new_variable-291-291", method="bug_intou7()", type_label=new_variable];
1808 [label="291_ vundflw = vundflw -10;\n1808-expression_statement-292-292", method="bug_intou7()", type_label=expression_statement];
1814 [label="293_ function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\n    require(receivers.length == amounts.length);\n    for (uint256 i = 0; i < receivers.length; i++) {\n      transfer(receivers[i], amounts[i]);\n    }\n  }\n1814-function_definition-294-299", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=function_definition];
1828 [label="294_ require(receivers.length == amounts.length);\n1828-expression_statement-295-295", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=expression_statement];
1839 [label="295_ for(i < receivers.length;;i++)\n1839-for-296-298", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=for];
4311 [label="295_ end_loop", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=end_loop];
1852 [label="295_ i++\n1852-expression_statement-296-296", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=expression_statement];
1855 [label="296_ transfer(receivers[i], amounts[i]);\n1855-expression_statement-297-297", method="multiTransfer(address[] memory receivers,uint256[] memory amounts)", type_label=expression_statement];
1866 [label="299_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1866-function_definition-300-303", method="bug_intou23()", type_label=function_definition];
1870 [label="300_ uint8 vundflw =0;\n1870-new_variable-301-301", method="bug_intou23()", type_label=new_variable];
1876 [label="301_ vundflw = vundflw -10;\n1876-expression_statement-302-302", method="bug_intou23()", type_label=expression_statement];
1882 [label="303_ function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n1882-function_definition-304-306", method="allowance(address owner,address spender)", type_label=function_definition];
1899 [label="304_ return _allowances[owner][spender];\n1899-return-305-305", method="allowance(address owner,address spender)", type_label=return];
1905 [label="306_ mapping(address => uint) balances_intou14;\n1905-new_variable-307-307", method="", type_label=new_variable];
1911 [label="307_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n1911-function_definition-308-313", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
1927 [label="308_ require(balances_intou14[msg.sender] - _value >= 0);\n1927-expression_statement-309-309", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1940 [label="309_ balances_intou14[msg.sender] -= _value;\n1940-expression_statement-310-310", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1948 [label="310_ balances_intou14[_to] += _value;\n1948-expression_statement-311-311", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1954 [label="311_ return true;\n1954-return-312-312", method="transfer_intou14(address _to,uint _value)", type_label=return];
1957 [label="313_ function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n1957-function_definition-314-317", method="approve(address spender,uint256 value)", type_label=function_definition];
1973 [label="314_ _approve(msg.sender, spender, value);\n1973-expression_statement-315-315", method="approve(address spender,uint256 value)", type_label=expression_statement];
1984 [label="315_ return true;\n1984-return-316-316", method="approve(address spender,uint256 value)", type_label=return];
1987 [label="317_ mapping(address => uint) balances_intou30;\n1987-new_variable-318-318", method="", type_label=new_variable];
1993 [label="318_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n1993-function_definition-319-324", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
2009 [label="319_ require(balances_intou30[msg.sender] - _value >= 0);\n2009-expression_statement-320-320", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
2022 [label="320_ balances_intou30[msg.sender] -= _value;\n2022-expression_statement-321-321", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
2030 [label="321_ balances_intou30[_to] += _value;\n2030-expression_statement-322-322", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
2036 [label="322_ return true;\n2036-return-323-323", method="transfer_intou30(address _to,uint _value)", type_label=return];
2039 [label="324_ function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n2039-function_definition-325-329", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=function_definition];
2059 [label="325_ _transfer(sender, recipient, amount);\n2059-expression_statement-326-326", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=expression_statement];
2068 [label="326_ _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n2068-expression_statement-327-327", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=expression_statement];
2090 [label="327_ return true;\n2090-return-328-328", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=return];
2093 [label="329_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n2093-function_definition-330-333", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
2101 [label="330_ uint8 vundflw1=0;\n2101-new_variable-331-331", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
2107 [label="331_ vundflw1 = vundflw1 + p_intou8;\n2107-expression_statement-332-332", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
2113 [label="333_ function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n2113-function_definition-334-337", method="increaseAllowance(address spender,uint256 addedValue)", type_label=function_definition];
2129 [label="334_ _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n2129-expression_statement-335-335", method="increaseAllowance(address spender,uint256 addedValue)", type_label=expression_statement];
2151 [label="335_ return true;\n2151-return-336-336", method="increaseAllowance(address spender,uint256 addedValue)", type_label=return];
2154 [label="337_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2154-function_definition-338-341", method="bug_intou39()", type_label=function_definition];
2158 [label="338_ uint8 vundflw =0;\n2158-new_variable-339-339", method="bug_intou39()", type_label=new_variable];
2164 [label="339_ vundflw = vundflw -10;\n2164-expression_statement-340-340", method="bug_intou39()", type_label=expression_statement];
2170 [label="341_ function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n2170-function_definition-342-345", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=function_definition];
2186 [label="342_ _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n2186-expression_statement-343-343", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=expression_statement];
2208 [label="343_ return true;\n2208-return-344-344", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=return];
2211 [label="345_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n2211-function_definition-346-349", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
2219 [label="346_ uint8 vundflw1=0;\n2219-new_variable-347-347", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
2225 [label="347_ vundflw1 = vundflw1 + p_intou36;\n2225-expression_statement-348-348", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
2231 [label="349_ function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account].amount = _balances[account].amount.sub(value);\n        emit Transfer(account, address(0), value);\n    }\n2231-function_definition-350-355", method="_burn(address account,uint256 value)", type_label=function_definition];
2243 [label="350_ require(account != address(0), \"ERC20: burn from the zero address\");\n2243-expression_statement-351-351", method="_burn(address account,uint256 value)", type_label=expression_statement];
2255 [label="351_ _totalSupply = _totalSupply.sub(value);\n2255-expression_statement-352-352", method="_burn(address account,uint256 value)", type_label=expression_statement];
2264 [label="352_ _balances[account].amount = _balances[account].amount.sub(value);\n2264-expression_statement-353-353", method="_burn(address account,uint256 value)", type_label=expression_statement];
2291 [label="355_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2291-function_definition-356-359", method="bug_intou35()", type_label=function_definition];
2295 [label="356_ uint8 vundflw =0;\n2295-new_variable-357-357", method="bug_intou35()", type_label=new_variable];
2301 [label="357_ vundflw = vundflw -10;\n2301-expression_statement-358-358", method="bug_intou35()", type_label=expression_statement];
2307 [label="359_ function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n2307-function_definition-360-365", method="_approve(address owner,address spender,uint256 value)", type_label=function_definition];
2323 [label="360_ require(owner != address(0), \"ERC20: approve from the zero address\");\n2323-expression_statement-361-361", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
2335 [label="361_ require(spender != address(0), \"ERC20: approve to the zero address\");\n2335-expression_statement-362-362", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
2347 [label="362_ _allowances[owner][spender] = value;\n2347-expression_statement-363-363", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
2363 [label="365_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n2363-function_definition-366-369", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
2371 [label="366_ uint8 vundflw1=0;\n2371-new_variable-367-367", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
2377 [label="367_ vundflw1 = vundflw1 + p_intou40;\n2377-expression_statement-368-368", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
2383 [label="369_ function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n    }\n2383-function_definition-370-373", method="_burnFrom(address account,uint256 amount)", type_label=function_definition];
2395 [label="370_ _burn(account, amount);\n2395-expression_statement-371-371", method="_burnFrom(address account,uint256 amount)", type_label=expression_statement];
2402 [label="371_ _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n2402-expression_statement-372-372", method="_burnFrom(address account,uint256 amount)", type_label=expression_statement];
2424 [label="373_ mapping(address => uint) public lockTime_intou33;\n2424-new_variable-374-374", method="", type_label=new_variable];
2431 [label="374_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n2431-function_definition-375-377", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
2439 [label="375_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n2439-expression_statement-376-376", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
2447 [label="377_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n2447-function_definition-378-382", method="withdraw_intou33()", type_label=function_definition];
2451 [label="378_ require(now > lockTime_intou33[msg.sender]);\n2451-expression_statement-379-379", method="withdraw_intou33()", type_label=expression_statement];
2462 [label="379_ uint transferValue_intou33 = 10;\n2462-new_variable-380-380", method="withdraw_intou33()", type_label=new_variable];
2468 [label="380_ msg.sender.transfer(transferValue_intou33);\n2468-expression_statement-381-381", method="withdraw_intou33()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 21  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
21 -> 27  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 42  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
42 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
78 -> 94  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
94 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 115  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
115 -> 121  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
121 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
127 -> 136  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
138 -> 148  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
159 -> 167  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
179 -> 190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
190 -> 196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
208 -> 225  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
225 -> 233  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
233 -> 243  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
243 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
245 -> 262  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
262 -> 272  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
272 -> 280  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
280 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
282 -> 299  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
299 -> 304  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
299 -> 2771  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2771 -> 306  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
304 -> 2771  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
304 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
306 -> 314  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
314 -> 326  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
326 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
328 -> 345  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
345 -> 355  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
355 -> 363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
363 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
365 -> 382  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
382 -> 392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
392 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
414 -> 422  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
430 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
434 -> 445  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
445 -> 451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
468 -> 472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
472 -> 478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
493 -> 501  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
501 -> 507  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
513 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
524 -> 540  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
540 -> 553  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
553 -> 561  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
561 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
567 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
570 -> 575  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
582 -> 590  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
598 -> 602  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
602 -> 613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
613 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
628 -> 635  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
641 -> 657  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
657 -> 670  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
670 -> 678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
678 -> 684  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
684 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
687 -> 694  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
700 -> 716  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
716 -> 729  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
729 -> 737  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
737 -> 743  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
743 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
752 -> 760  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
760 -> 766  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
779 -> 783  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
783 -> 789  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
795 -> 802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
809 -> 817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
825 -> 829  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
829 -> 840  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
840 -> 846  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
855 -> 861  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
873 -> 881  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
881 -> 889  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
889 -> 899  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
916 -> 924  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
932 -> 936  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
936 -> 947  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
947 -> 953  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
962 -> 979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
979 -> 990  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
990 -> 995  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
990 -> 3462  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3462 -> 999  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
995 -> 3462  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
999 -> 1013  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1013 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1015 -> 1019  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1019 -> 1025  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1031 -> 1047  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1047 -> 1059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1059 -> 1071  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1071 -> 1084  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1084 -> 1097  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1097 -> 1107  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1097 -> 3569  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3569 -> 1128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1107 -> 1121  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1121 -> 3569  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1128 -> 1142  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1128 -> 3600  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3600 -> 1163  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1142 -> 1156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1156 -> 3600  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1163 -> 1180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1180 -> 1197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1197 -> 1205  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1228 -> 1236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1244 -> 1248  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1248 -> 1259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1259 -> 1265  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1274 -> 1283  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1283 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1292 -> 1300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1308 -> 1312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1312 -> 1323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1323 -> 1329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1338 -> 1347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1347 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1349 -> 1353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1353 -> 1359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1365 -> 1374  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1374 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1382 -> 1398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1398 -> 1411  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1411 -> 1419  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1419 -> 1425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1425 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1431 -> 1448  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1450 -> 1454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1454 -> 1460  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1487 -> 1495  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1503 -> 1507  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1507 -> 1518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1518 -> 1524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1547 -> 1559  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1559 -> 1571  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1571 -> 1580  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1607 -> 1615  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1615 -> 1621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1627 -> 1636  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1636 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1638 -> 1646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1646 -> 1652  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1658 -> 1671  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1671 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1683 -> 1699  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1699 -> 1712  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1712 -> 1720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1720 -> 1726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1726 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1729 -> 1742  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1742 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1748 -> 1756  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1756 -> 1762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1768 -> 1784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1784 -> 1795  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1795 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1798 -> 1802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1802 -> 1808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1814 -> 1828  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1828 -> 1839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1839 -> 1855  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1839 -> 4311  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4311 -> 1866  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1852 -> 1839  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1855 -> 1852  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1866 -> 1870  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1870 -> 1876  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1882 -> 1899  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1899 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1911 -> 1927  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1927 -> 1940  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1940 -> 1948  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1948 -> 1954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1954 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1957 -> 1973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1973 -> 1984  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1984 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1993 -> 2009  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2009 -> 2022  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2022 -> 2030  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2030 -> 2036  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2036 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2039 -> 2059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2059 -> 2068  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2068 -> 2090  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2090 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2093 -> 2101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2101 -> 2107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2113 -> 2129  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2129 -> 2151  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2151 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2154 -> 2158  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2158 -> 2164  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2170 -> 2186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2186 -> 2208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2208 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2211 -> 2219  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2219 -> 2225  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2231 -> 2243  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2243 -> 2255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2255 -> 2264  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2291 -> 2295  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2295 -> 2301  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2307 -> 2323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2323 -> 2335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2335 -> 2347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2363 -> 2371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2371 -> 2377  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2383 -> 2395  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2395 -> 2402  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2431 -> 2439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2447 -> 2451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2451 -> 2462  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2462 -> 2468  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
