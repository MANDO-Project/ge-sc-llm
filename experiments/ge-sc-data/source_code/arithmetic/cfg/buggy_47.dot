digraph  {
13 [label="2_ function totalSupply() public view returns (uint);\n13-function_definition-3-3", method="totalSupply()", type_label=function_definition];
21 [label="3_ mapping(address => uint) public lockTime_intou17;\n21-new_variable-4-4", method="", type_label=new_variable];
28 [label="4_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n28-function_definition-5-7", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
36 [label="5_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n36-expression_statement-6-6", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
44 [label="7_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n44-function_definition-8-12", method="withdraw_intou17()", type_label=function_definition];
48 [label="8_ require(now > lockTime_intou17[msg.sender]);\n48-expression_statement-9-9", method="withdraw_intou17()", type_label=expression_statement];
59 [label="9_ uint transferValue_intou17 = 10;\n59-new_variable-10-10", method="withdraw_intou17()", type_label=new_variable];
65 [label="10_ msg.sender.transfer(transferValue_intou17);\n65-expression_statement-11-11", method="withdraw_intou17()", type_label=expression_statement];
74 [label="12_ function balanceOf(address tokenOwner) public view returns (uint balance);\n74-function_definition-13-13", method="balanceOf(address tokenOwner)", type_label=function_definition];
87 [label="13_ mapping(address => uint) public lockTime_intou37;\n87-new_variable-14-14", method="", type_label=new_variable];
94 [label="14_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n94-function_definition-15-17", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
102 [label="15_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n102-expression_statement-16-16", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
110 [label="17_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n110-function_definition-18-22", method="withdraw_intou37()", type_label=function_definition];
114 [label="18_ require(now > lockTime_intou37[msg.sender]);\n114-expression_statement-19-19", method="withdraw_intou37()", type_label=expression_statement];
125 [label="19_ uint transferValue_intou37 = 10;\n125-new_variable-20-20", method="withdraw_intou37()", type_label=new_variable];
131 [label="20_ msg.sender.transfer(transferValue_intou37);\n131-expression_statement-21-21", method="withdraw_intou37()", type_label=expression_statement];
140 [label="22_ function transfer(address to, uint tokens) public returns (bool success);\n140-function_definition-23-23", method="transfer(address to,uint tokens)", type_label=function_definition];
156 [label="23_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n156-function_definition-24-27", method="bug_intou3()", type_label=function_definition];
160 [label="24_ uint8 vundflw =0;\n160-new_variable-25-25", method="bug_intou3()", type_label=new_variable];
166 [label="25_ vundflw = vundflw -10;\n166-expression_statement-26-26", method="bug_intou3()", type_label=expression_statement];
172 [label="27_ function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n172-function_definition-28-28", method="allowance(address tokenOwner,address spender)", type_label=function_definition];
189 [label="28_ mapping(address => uint) public lockTime_intou9;\n189-new_variable-29-29", method="", type_label=new_variable];
196 [label="29_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n196-function_definition-30-32", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
204 [label="30_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n204-expression_statement-31-31", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
212 [label="32_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n212-function_definition-33-37", method="withdraw_intou9()", type_label=function_definition];
216 [label="33_ require(now > lockTime_intou9[msg.sender]);\n216-expression_statement-34-34", method="withdraw_intou9()", type_label=expression_statement];
227 [label="34_ uint transferValue_intou9 = 10;\n227-new_variable-35-35", method="withdraw_intou9()", type_label=new_variable];
233 [label="35_ msg.sender.transfer(transferValue_intou9);\n233-expression_statement-36-36", method="withdraw_intou9()", type_label=expression_statement];
242 [label="37_ function approve(address spender, uint tokens) public returns (bool success);\n242-function_definition-38-38", method="approve(address spender,uint tokens)", type_label=function_definition];
258 [label="38_ mapping(address => uint) public lockTime_intou25;\n258-new_variable-39-39", method="", type_label=new_variable];
265 [label="39_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n265-function_definition-40-42", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
273 [label="40_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n273-expression_statement-41-41", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
281 [label="42_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n281-function_definition-43-47", method="withdraw_intou25()", type_label=function_definition];
285 [label="43_ require(now > lockTime_intou25[msg.sender]);\n285-expression_statement-44-44", method="withdraw_intou25()", type_label=expression_statement];
296 [label="44_ uint transferValue_intou25 = 10;\n296-new_variable-45-45", method="withdraw_intou25()", type_label=new_variable];
302 [label="45_ msg.sender.transfer(transferValue_intou25);\n302-expression_statement-46-46", method="withdraw_intou25()", type_label=expression_statement];
311 [label="47_ function transferFrom(address from, address to, uint tokens) public returns (bool success);\n311-function_definition-48-48", method="transferFrom(address from,address to,uint tokens)", type_label=function_definition];
331 [label="48_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n331-function_definition-49-52", method="bug_intou19()", type_label=function_definition];
335 [label="49_ uint8 vundflw =0;\n335-new_variable-50-50", method="bug_intou19()", type_label=new_variable];
341 [label="50_ vundflw = vundflw -10;\n341-expression_statement-51-51", method="bug_intou19()", type_label=expression_statement];
381 [label="56_ mapping(address => uint) balances_intou18;\n381-new_variable-57-57", method="", type_label=new_variable];
387 [label="57_ function transfer_intou18(address _to, uint _value) public returns (bool) {\n    require(balances_intou18[msg.sender] - _value >= 0);   \n    balances_intou18[msg.sender] -= _value;   \n    balances_intou18[_to] += _value;   \n    return true;\n  }\n387-function_definition-58-63", method="transfer_intou18(address _to,uint _value)", type_label=function_definition];
403 [label="58_ require(balances_intou18[msg.sender] - _value >= 0);\n403-expression_statement-59-59", method="transfer_intou18(address _to,uint _value)", type_label=expression_statement];
416 [label="59_ balances_intou18[msg.sender] -= _value;\n416-expression_statement-60-60", method="transfer_intou18(address _to,uint _value)", type_label=expression_statement];
424 [label="60_ balances_intou18[_to] += _value;\n424-expression_statement-61-61", method="transfer_intou18(address _to,uint _value)", type_label=expression_statement];
430 [label="61_ return true;\n430-return-62-62", method="transfer_intou18(address _to,uint _value)", type_label=return];
433 [label="63_ string public name = \"Acunar\";\n433-new_variable-64-64", method="", type_label=new_variable];
440 [label="64_ mapping(address => uint) public lockTime_intou29;\n440-new_variable-65-65", method="", type_label=new_variable];
447 [label="65_ function increaseLockTime_intou29(uint _secondsToIncrease) public {\n        lockTime_intou29[msg.sender] += _secondsToIncrease;   \n    }\n447-function_definition-66-68", method="increaseLockTime_intou29(uint _secondsToIncrease)", type_label=function_definition];
455 [label="66_ lockTime_intou29[msg.sender] += _secondsToIncrease;\n455-expression_statement-67-67", method="increaseLockTime_intou29(uint _secondsToIncrease)", type_label=expression_statement];
463 [label="68_ function withdraw_intou29() public {\n        require(now > lockTime_intou29[msg.sender]);    \n        uint transferValue_intou29 = 10;           \n        msg.sender.transfer(transferValue_intou29);\n    }\n463-function_definition-69-73", method="withdraw_intou29()", type_label=function_definition];
467 [label="69_ require(now > lockTime_intou29[msg.sender]);\n467-expression_statement-70-70", method="withdraw_intou29()", type_label=expression_statement];
478 [label="70_ uint transferValue_intou29 = 10;\n478-new_variable-71-71", method="withdraw_intou29()", type_label=new_variable];
484 [label="71_ msg.sender.transfer(transferValue_intou29);\n484-expression_statement-72-72", method="withdraw_intou29()", type_label=expression_statement];
493 [label="73_ string public symbol = \"ACN\";\n493-new_variable-74-74", method="", type_label=new_variable];
500 [label="74_ mapping(address => uint) balances_intou6;\n500-new_variable-75-75", method="", type_label=new_variable];
506 [label="75_ function transfer_intou62(address _to, uint _value) public returns (bool) {\n    require(balances_intou6[msg.sender] - _value >= 0);   \n    balances_intou6[msg.sender] -= _value;   \n    balances_intou6[_to] += _value;   \n    return true;\n  }\n506-function_definition-76-81", method="transfer_intou62(address _to,uint _value)", type_label=function_definition];
522 [label="76_ require(balances_intou6[msg.sender] - _value >= 0);\n522-expression_statement-77-77", method="transfer_intou62(address _to,uint _value)", type_label=expression_statement];
535 [label="77_ balances_intou6[msg.sender] -= _value;\n535-expression_statement-78-78", method="transfer_intou62(address _to,uint _value)", type_label=expression_statement];
543 [label="78_ balances_intou6[_to] += _value;\n543-expression_statement-79-79", method="transfer_intou62(address _to,uint _value)", type_label=expression_statement];
549 [label="79_ return true;\n549-return-80-80", method="transfer_intou62(address _to,uint _value)", type_label=return];
552 [label="81_ uint public decimals = 0;\n552-new_variable-82-82", method="", type_label=new_variable];
558 [label="82_ function bug_intou16(uint8 p_intou16) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou16;    \n}\n558-function_definition-83-86", method="bug_intou16(uint8 p_intou16)", type_label=function_definition];
566 [label="83_ uint8 vundflw1=0;\n566-new_variable-84-84", method="bug_intou16(uint8 p_intou16)", type_label=new_variable];
572 [label="84_ vundflw1 = vundflw1 + p_intou16;\n572-expression_statement-85-85", method="bug_intou16(uint8 p_intou16)", type_label=expression_statement];
578 [label="86_ uint public supply;\n578-new_variable-87-87", method="", type_label=new_variable];
583 [label="87_ function bug_intou24(uint8 p_intou24) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou24;    \n}\n583-function_definition-88-91", method="bug_intou24(uint8 p_intou24)", type_label=function_definition];
591 [label="88_ uint8 vundflw1=0;\n591-new_variable-89-89", method="bug_intou24(uint8 p_intou24)", type_label=new_variable];
597 [label="89_ vundflw1 = vundflw1 + p_intou24;\n597-expression_statement-90-90", method="bug_intou24(uint8 p_intou24)", type_label=expression_statement];
603 [label="91_ address public founder;\n603-new_variable-92-92", method="", type_label=new_variable];
608 [label="92_ mapping(address => uint) public lockTime_intou5;\n608-new_variable-93-93", method="", type_label=new_variable];
615 [label="93_ function increaseLockTime_intou5(uint _secondsToIncrease) public {\n        lockTime_intou5[msg.sender] += _secondsToIncrease;   \n    }\n615-function_definition-94-96", method="increaseLockTime_intou5(uint _secondsToIncrease)", type_label=function_definition];
623 [label="94_ lockTime_intou5[msg.sender] += _secondsToIncrease;\n623-expression_statement-95-95", method="increaseLockTime_intou5(uint _secondsToIncrease)", type_label=expression_statement];
631 [label="96_ function withdraw_intou5() public {\n        require(now > lockTime_intou5[msg.sender]);    \n        uint transferValue_intou5 = 10;           \n        msg.sender.transfer(transferValue_intou5);\n    }\n631-function_definition-97-101", method="withdraw_intou5()", type_label=function_definition];
635 [label="97_ require(now > lockTime_intou5[msg.sender]);\n635-expression_statement-98-98", method="withdraw_intou5()", type_label=expression_statement];
646 [label="98_ uint transferValue_intou5 = 10;\n646-new_variable-99-99", method="withdraw_intou5()", type_label=new_variable];
652 [label="99_ msg.sender.transfer(transferValue_intou5);\n652-expression_statement-100-100", method="withdraw_intou5()", type_label=expression_statement];
661 [label="101_ mapping(address => uint) public balances;\n661-new_variable-102-102", method="", type_label=new_variable];
668 [label="102_ function bug_intou15() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n668-function_definition-103-106", method="bug_intou15()", type_label=function_definition];
672 [label="103_ uint8 vundflw =0;\n672-new_variable-104-104", method="bug_intou15()", type_label=new_variable];
678 [label="104_ vundflw = vundflw -10;\n678-expression_statement-105-105", method="bug_intou15()", type_label=expression_statement];
684 [label="106_ mapping(address => mapping(address => uint)) allowed;\n684-new_variable-107-107", method="", type_label=new_variable];
722 [label="110_ supply = 200000000;\n722-expression_statement-111-111", method="", type_label=expression_statement];
726 [label="111_ founder = msg.sender;\n726-expression_statement-112-112", method="", type_label=expression_statement];
732 [label="112_ balances[founder] = supply;\n732-expression_statement-113-113", method="", type_label=expression_statement];
738 [label="114_ mapping(address => uint) balances_intou26;\n738-new_variable-115-115", method="", type_label=new_variable];
744 [label="115_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n744-function_definition-116-121", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
760 [label="116_ require(balances_intou26[msg.sender] - _value >= 0);\n760-expression_statement-117-117", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
773 [label="117_ balances_intou26[msg.sender] -= _value;\n773-expression_statement-118-118", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
781 [label="118_ balances_intou26[_to] += _value;\n781-expression_statement-119-119", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
787 [label="119_ return true;\n787-return-120-120", method="transfer_intou26(address _to,uint _value)", type_label=return];
790 [label="121_ function allowance(address tokenOwner, address spender) view public returns(uint){\n        return allowed[tokenOwner][spender];\n    }\n790-function_definition-122-124", method="allowance(address tokenOwner,address spender)", type_label=function_definition];
807 [label="122_ return allowed[tokenOwner][spender];\n807-return-123-123", method="allowance(address tokenOwner,address spender)", type_label=return];
813 [label="124_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n813-function_definition-125-128", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
821 [label="125_ uint8 vundflw1=0;\n821-new_variable-126-126", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
827 [label="126_ vundflw1 = vundflw1 + p_intou20;\n827-expression_statement-127-127", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
833 [label="128_ function approve(address spender, uint tokens) public returns(bool){\n        require(balances[msg.sender] >= tokens);\n        require(tokens > 0);\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n833-function_definition-129-135", method="approve(address spender,uint tokens)", type_label=function_definition];
849 [label="129_ require(balances[msg.sender] >= tokens);\n849-expression_statement-130-130", method="approve(address spender,uint tokens)", type_label=expression_statement];
860 [label="130_ require(tokens > 0);\n860-expression_statement-131-131", method="approve(address spender,uint tokens)", type_label=expression_statement];
867 [label="131_ allowed[msg.sender][spender] = tokens;\n867-expression_statement-132-132", method="approve(address spender,uint tokens)", type_label=expression_statement];
887 [label="133_ return true;\n887-return-134-134", method="approve(address spender,uint tokens)", type_label=return];
890 [label="135_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n890-function_definition-136-139", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
898 [label="136_ uint8 vundflw1=0;\n898-new_variable-137-137", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
904 [label="137_ vundflw1 = vundflw1 + p_intou32;\n904-expression_statement-138-138", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
910 [label="139_ function transferFrom(address from, address to, uint tokens) public returns(bool){\n        require(allowed[from][to] >= tokens);\n        require(balances[from] >= tokens);\n        balances[from] -= tokens;\n        balances[to] += tokens;\n        allowed[from][to] -= tokens;\n        return true;\n    }\n910-function_definition-140-147", method="transferFrom(address from,address to,uint tokens)", type_label=function_definition];
930 [label="140_ require(allowed[from][to] >= tokens);\n930-expression_statement-141-141", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
941 [label="141_ require(balances[from] >= tokens);\n941-expression_statement-142-142", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
950 [label="142_ balances[from] -= tokens;\n950-expression_statement-143-143", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
956 [label="143_ balances[to] += tokens;\n956-expression_statement-144-144", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
962 [label="144_ allowed[from][to] -= tokens;\n962-expression_statement-145-145", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
970 [label="145_ return true;\n970-return-146-146", method="transferFrom(address from,address to,uint tokens)", type_label=return];
973 [label="147_ mapping(address => uint) balances_intou38;\n973-new_variable-148-148", method="", type_label=new_variable];
979 [label="148_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n979-function_definition-149-154", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
995 [label="149_ require(balances_intou38[msg.sender] - _value >= 0);\n995-expression_statement-150-150", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1008 [label="150_ balances_intou38[msg.sender] -= _value;\n1008-expression_statement-151-151", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1016 [label="151_ balances_intou38[_to] += _value;\n1016-expression_statement-152-152", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1022 [label="152_ return true;\n1022-return-153-153", method="transfer_intou38(address _to,uint _value)", type_label=return];
1025 [label="154_ function totalSupply() public view returns (uint){\n        return supply;\n    }\n1025-function_definition-155-157", method="totalSupply()", type_label=function_definition];
1034 [label="155_ return supply;\n1034-return-156-156", method="totalSupply()", type_label=return];
1036 [label="157_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n1036-function_definition-158-161", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
1044 [label="158_ uint8 vundflw1=0;\n1044-new_variable-159-159", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
1050 [label="159_ vundflw1 = vundflw1 + p_intou4;\n1050-expression_statement-160-160", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
1056 [label="161_ function balanceOf(address tokenOwner) public view returns (uint balance){\n         return balances[tokenOwner];\n     }\n1056-function_definition-162-164", method="balanceOf(address tokenOwner)", type_label=function_definition];
1070 [label="162_ return balances[tokenOwner];\n1070-return-163-163", method="balanceOf(address tokenOwner)", type_label=return];
1074 [label="164_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1074-function_definition-165-168", method="bug_intou7()", type_label=function_definition];
1078 [label="165_ uint8 vundflw =0;\n1078-new_variable-166-166", method="bug_intou7()", type_label=new_variable];
1084 [label="166_ vundflw = vundflw -10;\n1084-expression_statement-167-167", method="bug_intou7()", type_label=expression_statement];
1090 [label="168_ function transfer(address to, uint tokens) public returns (bool success){\n         require(balances[msg.sender] >= tokens && tokens > 0);\n         balances[to] += tokens;\n         balances[msg.sender] -= tokens;\n         emit Transfer(msg.sender, to, tokens);\n         return true;\n     }\n1090-function_definition-169-175", method="transfer(address to,uint tokens)", type_label=function_definition];
1107 [label="169_ require(balances[msg.sender] >= tokens && tokens > 0);\n1107-expression_statement-170-170", method="transfer(address to,uint tokens)", type_label=expression_statement];
1122 [label="170_ balances[to] += tokens;\n1122-expression_statement-171-171", method="transfer(address to,uint tokens)", type_label=expression_statement];
1128 [label="171_ balances[msg.sender] -= tokens;\n1128-expression_statement-172-172", method="transfer(address to,uint tokens)", type_label=expression_statement];
1146 [label="173_ return true;\n1146-return-174-174", method="transfer(address to,uint tokens)", type_label=return];
1149 [label="175_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1149-function_definition-176-179", method="bug_intou23()", type_label=function_definition];
1153 [label="176_ uint8 vundflw =0;\n1153-new_variable-177-177", method="bug_intou23()", type_label=new_variable];
1159 [label="177_ vundflw = vundflw -10;\n1159-expression_statement-178-178", method="bug_intou23()", type_label=expression_statement];
1171 [label="181_ function bug_intou28(uint8 p_intou28) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou28;    \n}\n1171-function_definition-182-185", method="bug_intou28(uint8 p_intou28)", type_label=function_definition];
1179 [label="182_ uint8 vundflw1=0;\n1179-new_variable-183-183", method="bug_intou28(uint8 p_intou28)", type_label=new_variable];
1185 [label="183_ vundflw1 = vundflw1 + p_intou28;\n1185-expression_statement-184-184", method="bug_intou28(uint8 p_intou28)", type_label=expression_statement];
1191 [label="185_ address public admin;\n1191-new_variable-186-186", method="", type_label=new_variable];
1196 [label="186_ mapping(address => uint) balances_intou34;\n1196-new_variable-187-187", method="", type_label=new_variable];
1202 [label="187_ function transfer_intou34(address _to, uint _value) public returns (bool) {\n    require(balances_intou34[msg.sender] - _value >= 0);   \n    balances_intou34[msg.sender] -= _value;   \n    balances_intou34[_to] += _value;   \n    return true;\n  }\n1202-function_definition-188-193", method="transfer_intou34(address _to,uint _value)", type_label=function_definition];
1218 [label="188_ require(balances_intou34[msg.sender] - _value >= 0);\n1218-expression_statement-189-189", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
1231 [label="189_ balances_intou34[msg.sender] -= _value;\n1231-expression_statement-190-190", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
1239 [label="190_ balances_intou34[_to] += _value;\n1239-expression_statement-191-191", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
1245 [label="191_ return true;\n1245-return-192-192", method="transfer_intou34(address _to,uint _value)", type_label=return];
1248 [label="193_ address payable public deposit;\n1248-new_variable-194-194", method="", type_label=new_variable];
1253 [label="194_ mapping(address => uint) public lockTime_intou21;\n1253-new_variable-195-195", method="", type_label=new_variable];
1260 [label="195_ function increaseLockTime_intou21(uint _secondsToIncrease) public {\n        lockTime_intou21[msg.sender] += _secondsToIncrease;   \n    }\n1260-function_definition-196-198", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=function_definition];
1268 [label="196_ lockTime_intou21[msg.sender] += _secondsToIncrease;\n1268-expression_statement-197-197", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=expression_statement];
1276 [label="198_ function withdraw_intou21() public {\n        require(now > lockTime_intou21[msg.sender]);    \n        uint transferValue_intou21 = 10;           \n        msg.sender.transfer(transferValue_intou21);\n    }\n1276-function_definition-199-203", method="withdraw_intou21()", type_label=function_definition];
1280 [label="199_ require(now > lockTime_intou21[msg.sender]);\n1280-expression_statement-200-200", method="withdraw_intou21()", type_label=expression_statement];
1291 [label="200_ uint transferValue_intou21 = 10;\n1291-new_variable-201-201", method="withdraw_intou21()", type_label=new_variable];
1297 [label="201_ msg.sender.transfer(transferValue_intou21);\n1297-expression_statement-202-202", method="withdraw_intou21()", type_label=expression_statement];
1306 [label="203_ uint tokenPrice = 0.0001 ether;\n1306-new_variable-204-204", method="", type_label=new_variable];
1312 [label="204_ mapping(address => uint) balances_intou10;\n1312-new_variable-205-205", method="", type_label=new_variable];
1318 [label="205_ function transfer_intou10(address _to, uint _value) public returns (bool) {\n    require(balances_intou10[msg.sender] - _value >= 0);   \n    balances_intou10[msg.sender] -= _value;   \n    balances_intou10[_to] += _value;   \n    return true;\n  }\n1318-function_definition-206-211", method="transfer_intou10(address _to,uint _value)", type_label=function_definition];
1334 [label="206_ require(balances_intou10[msg.sender] - _value >= 0);\n1334-expression_statement-207-207", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
1347 [label="207_ balances_intou10[msg.sender] -= _value;\n1347-expression_statement-208-208", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
1355 [label="208_ balances_intou10[_to] += _value;\n1355-expression_statement-209-209", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
1361 [label="209_ return true;\n1361-return-210-210", method="transfer_intou10(address _to,uint _value)", type_label=return];
1364 [label="211_ uint public hardCap =21000 ether;\n1364-new_variable-212-212", method="", type_label=new_variable];
1371 [label="212_ mapping(address => uint) balances_intou22;\n1371-new_variable-213-213", method="", type_label=new_variable];
1377 [label="213_ function transfer_intou22(address _to, uint _value) public returns (bool) {\n    require(balances_intou22[msg.sender] - _value >= 0);   \n    balances_intou22[msg.sender] -= _value;   \n    balances_intou22[_to] += _value;   \n    return true;\n  }\n1377-function_definition-214-219", method="transfer_intou22(address _to,uint _value)", type_label=function_definition];
1393 [label="214_ require(balances_intou22[msg.sender] - _value >= 0);\n1393-expression_statement-215-215", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
1406 [label="215_ balances_intou22[msg.sender] -= _value;\n1406-expression_statement-216-216", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
1414 [label="216_ balances_intou22[_to] += _value;\n1414-expression_statement-217-217", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
1420 [label="217_ return true;\n1420-return-218-218", method="transfer_intou22(address _to,uint _value)", type_label=return];
1423 [label="219_ uint public raisedAmount;\n1423-new_variable-220-220", method="", type_label=new_variable];
1428 [label="220_ function bug_intou12(uint8 p_intou12) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou12;    \n}\n1428-function_definition-221-224", method="bug_intou12(uint8 p_intou12)", type_label=function_definition];
1436 [label="221_ uint8 vundflw1=0;\n1436-new_variable-222-222", method="bug_intou12(uint8 p_intou12)", type_label=new_variable];
1442 [label="222_ vundflw1 = vundflw1 + p_intou12;\n1442-expression_statement-223-223", method="bug_intou12(uint8 p_intou12)", type_label=expression_statement];
1448 [label="224_ uint public saleStart = now;\n1448-new_variable-225-225", method="", type_label=new_variable];
1454 [label="225_ uint public saleEnd = now + 14515200;\n1454-new_variable-226-226", method="", type_label=new_variable];
1462 [label="226_ uint public coinTradeStart = saleEnd + 15120000;\n1462-new_variable-227-227", method="", type_label=new_variable];
1470 [label="227_ function bug_intou11() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1470-function_definition-228-231", method="bug_intou11()", type_label=function_definition];
1474 [label="228_ uint8 vundflw =0;\n1474-new_variable-229-229", method="bug_intou11()", type_label=new_variable];
1480 [label="229_ vundflw = vundflw -10;\n1480-expression_statement-230-230", method="bug_intou11()", type_label=expression_statement];
1486 [label="231_ uint public maxInvestment = 30 ether;\n1486-new_variable-232-232", method="", type_label=new_variable];
1493 [label="232_ mapping(address => uint) public lockTime_intou1;\n1493-new_variable-233-233", method="", type_label=new_variable];
1500 [label="233_ function increaseLockTime_intou1(uint _secondsToIncrease) public {\n        lockTime_intou1[msg.sender] += _secondsToIncrease;   \n    }\n1500-function_definition-234-236", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=function_definition];
1508 [label="234_ lockTime_intou1[msg.sender] += _secondsToIncrease;\n1508-expression_statement-235-235", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=expression_statement];
1516 [label="236_ function withdraw_ovrflow1() public {\n        require(now > lockTime_intou1[msg.sender]);    \n        uint transferValue_intou1 = 10;           \n        msg.sender.transfer(transferValue_intou1);\n    }\n1516-function_definition-237-241", method="withdraw_ovrflow1()", type_label=function_definition];
1520 [label="237_ require(now > lockTime_intou1[msg.sender]);\n1520-expression_statement-238-238", method="withdraw_ovrflow1()", type_label=expression_statement];
1531 [label="238_ uint transferValue_intou1 = 10;\n1531-new_variable-239-239", method="withdraw_ovrflow1()", type_label=new_variable];
1537 [label="239_ msg.sender.transfer(transferValue_intou1);\n1537-expression_statement-240-240", method="withdraw_ovrflow1()", type_label=expression_statement];
1546 [label="241_ uint public minInvestment = 0.1 ether;\n1546-new_variable-242-242", method="", type_label=new_variable];
1559 [label="243_ mapping(address => uint) balances_intou2;\n1559-new_variable-244-244", method="", type_label=new_variable];
1565 [label="244_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n1565-function_definition-245-250", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
1581 [label="245_ require(balances_intou2[msg.sender] - _value >= 0);\n1581-expression_statement-246-246", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
1594 [label="246_ balances_intou2[msg.sender] -= _value;\n1594-expression_statement-247-247", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
1602 [label="247_ balances_intou2[_to] += _value;\n1602-expression_statement-248-248", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
1608 [label="248_ return true;\n1608-return-249-249", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
1611 [label="250_ State public ieoState;\n1611-new_variable-251-251", method="", type_label=new_variable];
1617 [label="251_ modifier onlyAdmin(){\n        require(msg.sender == admin);\n        _;\n    }\n1617-expression_statement-252-255", method="", type_label=expression_statement];
1620 [label="252_ require(msg.sender == admin);\n1620-expression_statement-253-253", method="", type_label=expression_statement];
1629 [label="253_ _;\n1629-expression_statement-254-254", method="", type_label=expression_statement];
1631 [label="255_ mapping(address => uint) public lockTime_intou13;\n1631-new_variable-256-256", method="", type_label=new_variable];
1638 [label="256_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n1638-function_definition-257-259", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
1646 [label="257_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n1646-expression_statement-258-258", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
1654 [label="259_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n1654-function_definition-260-264", method="withdraw_intou13()", type_label=function_definition];
1658 [label="260_ require(now > lockTime_intou13[msg.sender]);\n1658-expression_statement-261-261", method="withdraw_intou13()", type_label=expression_statement];
1669 [label="261_ uint transferValue_intou13 = 10;\n1669-new_variable-262-262", method="withdraw_intou13()", type_label=new_variable];
1675 [label="262_ msg.sender.transfer(transferValue_intou13);\n1675-expression_statement-263-263", method="withdraw_intou13()", type_label=expression_statement];
1704 [label="266_ deposit = _deposit;\n1704-expression_statement-267-267", method="", type_label=expression_statement];
1708 [label="267_ admin = msg.sender;\n1708-expression_statement-268-268", method="", type_label=expression_statement];
1714 [label="268_ ieoState = State.beforeStart;\n1714-expression_statement-269-269", method="", type_label=expression_statement];
1720 [label="270_ mapping(address => uint) balances_intou14;\n1720-new_variable-271-271", method="", type_label=new_variable];
1726 [label="271_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n1726-function_definition-272-277", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
1742 [label="272_ require(balances_intou14[msg.sender] - _value >= 0);\n1742-expression_statement-273-273", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1755 [label="273_ balances_intou14[msg.sender] -= _value;\n1755-expression_statement-274-274", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1763 [label="274_ balances_intou14[_to] += _value;\n1763-expression_statement-275-275", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1769 [label="275_ return true;\n1769-return-276-276", method="transfer_intou14(address _to,uint _value)", type_label=return];
1772 [label="277_ function halt() public onlyAdmin{\n        ieoState = State.halted;\n    }\n1772-function_definition-278-280", method="halt()", type_label=function_definition];
1775 [label="277_ onlyAdmin\n1775-expression_statement-278-278", method="halt()", type_label=expression_statement];
1778 [label="278_ ieoState = State.halted;\n1778-expression_statement-279-279", method="halt()", type_label=expression_statement];
1784 [label="280_ mapping(address => uint) balances_intou30;\n1784-new_variable-281-281", method="", type_label=new_variable];
1790 [label="281_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n1790-function_definition-282-287", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
1806 [label="282_ require(balances_intou30[msg.sender] - _value >= 0);\n1806-expression_statement-283-283", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1819 [label="283_ balances_intou30[msg.sender] -= _value;\n1819-expression_statement-284-284", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1827 [label="284_ balances_intou30[_to] += _value;\n1827-expression_statement-285-285", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1833 [label="285_ return true;\n1833-return-286-286", method="transfer_intou30(address _to,uint _value)", type_label=return];
1836 [label="287_ function unhalt() public onlyAdmin{\n        ieoState = State.running;\n    }\n1836-function_definition-288-290", method="unhalt()", type_label=function_definition];
1839 [label="287_ onlyAdmin\n1839-expression_statement-288-288", method="unhalt()", type_label=expression_statement];
1842 [label="288_ ieoState = State.running;\n1842-expression_statement-289-289", method="unhalt()", type_label=expression_statement];
1848 [label="290_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n1848-function_definition-291-294", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
1856 [label="291_ uint8 vundflw1=0;\n1856-new_variable-292-292", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
1862 [label="292_ vundflw1 = vundflw1 + p_intou8;\n1862-expression_statement-293-293", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
1868 [label="294_ function changeDepositAddress(address payable newDeposit) public onlyAdmin{\n        deposit = newDeposit;\n    }\n1868-function_definition-295-297", method="changeDepositAddress(address payable newDeposit)", type_label=function_definition];
1875 [label="294_ onlyAdmin\n1875-expression_statement-295-295", method="changeDepositAddress(address payable newDeposit)", type_label=expression_statement];
1878 [label="295_ deposit = newDeposit;\n1878-expression_statement-296-296", method="changeDepositAddress(address payable newDeposit)", type_label=expression_statement];
1882 [label="297_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1882-function_definition-298-301", method="bug_intou39()", type_label=function_definition];
1886 [label="298_ uint8 vundflw =0;\n1886-new_variable-299-299", method="bug_intou39()", type_label=new_variable];
1892 [label="299_ vundflw = vundflw -10;\n1892-expression_statement-300-300", method="bug_intou39()", type_label=expression_statement];
1898 [label="301_ function getCurrentState() public view returns(State){\n        if(ieoState == State.halted){\n            return State.halted;\n        }else if(block.timestamp < saleStart){\n            return State.beforeStart;\n        }else if(block.timestamp >= saleStart && block.timestamp <= saleEnd){\n            return State.running;\n        }else{\n            return State.afterEnd;\n        }\n    }\n1898-function_definition-302-312", method="getCurrentState()", type_label=function_definition];
1908 [label="302_ if_ieoState == State.halted\n1908-if-303-311", method="getCurrentState()", type_label=if];
4208 [label="302_ end_if", method="getCurrentState()", type_label=end_if];
1915 [label="303_ return State.halted;\n1915-return-304-304", method="getCurrentState()", type_label=return];
1919 [label="304_ if_block.timestamp < saleStart\n1919-if-305-311", method="getCurrentState()", type_label=if];
1926 [label="305_ return State.beforeStart;\n1926-return-306-306", method="getCurrentState()", type_label=return];
1930 [label="306_ if_block.timestamp >= saleStart && block.timestamp <= saleEnd\n1930-if-307-311", method="getCurrentState()", type_label=if];
1943 [label="307_ return State.running;\n1943-return-308-308", method="getCurrentState()", type_label=return];
1948 [label="309_ return State.afterEnd;\n1948-return-310-310", method="getCurrentState()", type_label=return];
1952 [label="312_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n1952-function_definition-313-316", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
1960 [label="313_ uint8 vundflw1=0;\n1960-new_variable-314-314", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
1966 [label="314_ vundflw1 = vundflw1 + p_intou36;\n1966-expression_statement-315-315", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
1972 [label="316_ function invest() payable public returns(bool){\n        ieoState = getCurrentState();\n        require(ieoState == State.running);\n        require(msg.value >= minInvestment && msg.value <= maxInvestment);\n        uint tokens = msg.value / tokenPrice;\n        require(raisedAmount + msg.value <= hardCap);\n        raisedAmount += msg.value;\n        balances[msg.sender] += tokens;\n        balances[founder] -= tokens;\n        deposit.transfer(msg.value); \n        emit Invest(msg.sender, msg.value, tokens);\n        return true;\n    }\n1972-function_definition-317-329", method="invest()", type_label=function_definition];
1981 [label="317_ ieoState = getCurrentState();\n1981-expression_statement-318-318", method="invest()", type_label=expression_statement];
1986 [label="318_ require(ieoState == State.running);\n1986-expression_statement-319-319", method="invest()", type_label=expression_statement];
1995 [label="319_ require(msg.value >= minInvestment && msg.value <= maxInvestment);\n1995-expression_statement-320-320", method="invest()", type_label=expression_statement];
2010 [label="320_ uint tokens = msg.value / tokenPrice;\n2010-new_variable-321-321", method="invest()", type_label=new_variable];
2020 [label="321_ require(raisedAmount + msg.value <= hardCap);\n2020-expression_statement-322-322", method="invest()", type_label=expression_statement];
2031 [label="322_ raisedAmount += msg.value;\n2031-expression_statement-323-323", method="invest()", type_label=expression_statement];
2037 [label="323_ balances[msg.sender] += tokens;\n2037-expression_statement-324-324", method="invest()", type_label=expression_statement];
2045 [label="324_ balances[founder] -= tokens;\n2045-expression_statement-325-325", method="invest()", type_label=expression_statement];
2051 [label="325_ deposit.transfer(msg.value);\n2051-expression_statement-326-326", method="invest()", type_label=expression_statement];
2072 [label="327_ return true;\n2072-return-328-328", method="invest()", type_label=return];
2075 [label="329_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2075-function_definition-330-333", method="bug_intou35()", type_label=function_definition];
2079 [label="330_ uint8 vundflw =0;\n2079-new_variable-331-331", method="bug_intou35()", type_label=new_variable];
2085 [label="331_ vundflw = vundflw -10;\n2085-expression_statement-332-332", method="bug_intou35()", type_label=expression_statement];
2095 [label="334_ invest();\n2095-expression_statement-335-335", method="", type_label=expression_statement];
2098 [label="336_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n2098-function_definition-337-340", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
2106 [label="337_ uint8 vundflw1=0;\n2106-new_variable-338-338", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
2112 [label="338_ vundflw1 = vundflw1 + p_intou40;\n2112-expression_statement-339-339", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
2118 [label="340_ function burn() public returns(bool){\n        ieoState = getCurrentState();\n        require(ieoState == State.afterEnd);\n        balances[founder] = 0;\n    }\n2118-function_definition-341-345", method="burn()", type_label=function_definition];
2126 [label="341_ ieoState = getCurrentState();\n2126-expression_statement-342-342", method="burn()", type_label=expression_statement];
2131 [label="342_ require(ieoState == State.afterEnd);\n2131-expression_statement-343-343", method="burn()", type_label=expression_statement];
2140 [label="343_ balances[founder] = 0;\n2140-expression_statement-344-344", method="burn()", type_label=expression_statement];
2146 [label="345_ mapping(address => uint) public lockTime_intou33;\n2146-new_variable-346-346", method="", type_label=new_variable];
2153 [label="346_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n2153-function_definition-347-349", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
2161 [label="347_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n2161-expression_statement-348-348", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
2169 [label="349_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n2169-function_definition-350-354", method="withdraw_intou33()", type_label=function_definition];
2173 [label="350_ require(now > lockTime_intou33[msg.sender]);\n2173-expression_statement-351-351", method="withdraw_intou33()", type_label=expression_statement];
2184 [label="351_ uint transferValue_intou33 = 10;\n2184-new_variable-352-352", method="withdraw_intou33()", type_label=new_variable];
2190 [label="352_ msg.sender.transfer(transferValue_intou33);\n2190-expression_statement-353-353", method="withdraw_intou33()", type_label=expression_statement];
2199 [label="354_ function transfer(address to, uint value) public returns(bool){\n        require(block.timestamp > coinTradeStart);\n        super.transfer(to, value);\n    }\n2199-function_definition-355-358", method="transfer(address to,uint value)", type_label=function_definition];
2215 [label="355_ require(block.timestamp > coinTradeStart);\n2215-expression_statement-356-356", method="transfer(address to,uint value)", type_label=expression_statement];
2224 [label="356_ super.transfer(to, value);\n2224-expression_statement-357-357", method="transfer(address to,uint value)", type_label=expression_statement];
2233 [label="358_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2233-function_definition-359-362", method="bug_intou27()", type_label=function_definition];
2237 [label="359_ uint8 vundflw =0;\n2237-new_variable-360-360", method="bug_intou27()", type_label=new_variable];
2243 [label="360_ vundflw = vundflw -10;\n2243-expression_statement-361-361", method="bug_intou27()", type_label=expression_statement];
2249 [label="362_ function transferFrom(address _from, address _to, uint _value) public returns(bool){\n        require(block.timestamp > coinTradeStart);\n        super.transferFrom(_from, _to, _value);\n    }\n2249-function_definition-363-366", method="transferFrom(address _from,address _to,uint _value)", type_label=function_definition];
2269 [label="363_ require(block.timestamp > coinTradeStart);\n2269-expression_statement-364-364", method="transferFrom(address _from,address _to,uint _value)", type_label=expression_statement];
2278 [label="364_ super.transferFrom(_from, _to, _value);\n2278-expression_statement-365-365", method="transferFrom(address _from,address _to,uint _value)", type_label=expression_statement];
2289 [label="366_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2289-function_definition-367-370", method="bug_intou31()", type_label=function_definition];
2293 [label="367_ uint8 vundflw =0;\n2293-new_variable-368-368", method="bug_intou31()", type_label=new_variable];
2299 [label="368_ vundflw = vundflw -10;\n2299-expression_statement-369-369", method="bug_intou31()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
28 -> 36  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 59  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
59 -> 65  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
94 -> 102  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
110 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
125 -> 131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 166  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
196 -> 204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
212 -> 216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
216 -> 227  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
227 -> 233  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
265 -> 273  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
281 -> 285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
285 -> 296  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
296 -> 302  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
331 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
335 -> 341  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
387 -> 403  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
403 -> 416  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
416 -> 424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
424 -> 430  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
430 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
433 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
447 -> 455  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
463 -> 467  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
467 -> 478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
478 -> 484  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
493 -> 500  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
506 -> 522  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
522 -> 535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
535 -> 543  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
543 -> 549  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
549 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
558 -> 566  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
566 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
583 -> 591  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
591 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
603 -> 608  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
615 -> 623  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
631 -> 635  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
635 -> 646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
646 -> 652  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
668 -> 672  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
672 -> 678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
722 -> 726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
726 -> 732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
744 -> 760  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
760 -> 773  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
773 -> 781  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
781 -> 787  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
787 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
790 -> 807  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
807 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
813 -> 821  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
821 -> 827  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
833 -> 849  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
849 -> 860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
860 -> 867  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
887 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
890 -> 898  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
898 -> 904  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
910 -> 930  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
930 -> 941  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
941 -> 950  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
950 -> 956  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
956 -> 962  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
962 -> 970  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
970 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
979 -> 995  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
995 -> 1008  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1008 -> 1016  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1016 -> 1022  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1022 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1025 -> 1034  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1034 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1036 -> 1044  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1044 -> 1050  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1056 -> 1070  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1070 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1074 -> 1078  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1078 -> 1084  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1090 -> 1107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1107 -> 1122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1122 -> 1128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1146 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1149 -> 1153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1153 -> 1159  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1171 -> 1179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1179 -> 1185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1191 -> 1196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1202 -> 1218  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1218 -> 1231  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1231 -> 1239  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1239 -> 1245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1245 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1248 -> 1253  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1260 -> 1268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1276 -> 1280  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1280 -> 1291  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1291 -> 1297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1306 -> 1312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1318 -> 1334  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1334 -> 1347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1347 -> 1355  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1355 -> 1361  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1361 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1364 -> 1371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1377 -> 1393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1393 -> 1406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1406 -> 1414  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1414 -> 1420  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1420 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1428 -> 1436  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1436 -> 1442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1448 -> 1454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1454 -> 1462  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1470 -> 1474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1474 -> 1480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1486 -> 1493  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1500 -> 1508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1516 -> 1520  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1520 -> 1531  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1531 -> 1537  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1565 -> 1581  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1581 -> 1594  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1594 -> 1602  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1602 -> 1608  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1608 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1611 -> 1617  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1617 -> 1631  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1620 -> 1629  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1638 -> 1646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1654 -> 1658  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1658 -> 1669  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1669 -> 1675  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1704 -> 1708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1708 -> 1714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1726 -> 1742  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1742 -> 1755  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1755 -> 1763  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1763 -> 1769  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1769 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1772 -> 1778  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1790 -> 1806  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1806 -> 1819  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1819 -> 1827  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1827 -> 1833  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1833 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1836 -> 1842  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1848 -> 1856  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1856 -> 1862  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1868 -> 1878  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1882 -> 1886  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1886 -> 1892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1898 -> 1908  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1908 -> 1915  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1908 -> 1919  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4208 -> 1952  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1915 -> 4208  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1915 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1919 -> 1926  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1919 -> 1930  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1926 -> 4208  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1926 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1930 -> 1943  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1930 -> 1948  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1943 -> 4208  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1943 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1948 -> 4208  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1948 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1952 -> 1960  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1960 -> 1966  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1972 -> 1981  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1981 -> 1986  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1986 -> 1995  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1995 -> 2010  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2010 -> 2020  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2020 -> 2031  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2031 -> 2037  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2037 -> 2045  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2045 -> 2051  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2072 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2075 -> 2079  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2079 -> 2085  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2098 -> 2106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2106 -> 2112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2118 -> 2126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2126 -> 2131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2131 -> 2140  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2153 -> 2161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2169 -> 2173  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2173 -> 2184  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2184 -> 2190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2199 -> 2215  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2215 -> 2224  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2233 -> 2237  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2237 -> 2243  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2249 -> 2269  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2269 -> 2278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2289 -> 2293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2293 -> 2299  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
