digraph  {
13 [label="2_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n13-function_definition-3-7", method="add(uint256 a,uint256 b)", type_label=function_definition];
30 [label="3_ uint256 c = a + b;\n30-new_variable-4-4", method="add(uint256 a,uint256 b)", type_label=new_variable];
38 [label="4_ require(c >= a, \"SafeMath: addition overflow\");\n38-expression_statement-5-5", method="add(uint256 a,uint256 b)", type_label=expression_statement];
48 [label="5_ return c;\n48-return-6-6", method="add(uint256 a,uint256 b)", type_label=return];
50 [label="7_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n        return c;\n    }\n50-function_definition-8-12", method="sub(uint256 a,uint256 b)", type_label=function_definition];
67 [label="8_ require(b <= a, \"SafeMath: subtraction overflow\");\n67-expression_statement-9-9", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
77 [label="9_ uint256 c = a - b;\n77-new_variable-10-10", method="sub(uint256 a,uint256 b)", type_label=new_variable];
85 [label="10_ return c;\n85-return-11-11", method="sub(uint256 a,uint256 b)", type_label=return];
87 [label="12_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n87-function_definition-13-20", method="mul(uint256 a,uint256 b)", type_label=function_definition];
104 [label="13_ if_a == 0\n104-if-14-16", method="mul(uint256 a,uint256 b)", type_label=if];
1655 [label="13_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
109 [label="14_ return 0;\n109-return-15-15", method="mul(uint256 a,uint256 b)", type_label=return];
111 [label="16_ uint256 c = a * b;\n111-new_variable-17-17", method="mul(uint256 a,uint256 b)", type_label=new_variable];
119 [label="17_ require(c / a == b, \"SafeMath: multiplication overflow\");\n119-expression_statement-18-18", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
131 [label="18_ return c;\n131-return-19-19", method="mul(uint256 a,uint256 b)", type_label=return];
133 [label="20_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        return c;\n    }\n133-function_definition-21-25", method="div(uint256 a,uint256 b)", type_label=function_definition];
150 [label="21_ require(b > 0, \"SafeMath: division by zero\");\n150-expression_statement-22-22", method="div(uint256 a,uint256 b)", type_label=expression_statement];
160 [label="22_ uint256 c = a / b;\n160-new_variable-23-23", method="div(uint256 a,uint256 b)", type_label=new_variable];
168 [label="23_ return c;\n168-return-24-24", method="div(uint256 a,uint256 b)", type_label=return];
170 [label="25_ function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n170-function_definition-26-29", method="mod(uint256 a,uint256 b)", type_label=function_definition];
187 [label="26_ require(b != 0, \"SafeMath: modulo by zero\");\n187-expression_statement-27-27", method="mod(uint256 a,uint256 b)", type_label=expression_statement];
197 [label="27_ return a % b;\n197-return-28-28", method="mod(uint256 a,uint256 b)", type_label=return];
204 [label="31_ function totalSupply() external view returns (uint256);\n204-function_definition-32-32", method="totalSupply()", type_label=function_definition];
212 [label="32_ function balanceOf(address account) external view returns (uint256);\n212-function_definition-33-33", method="balanceOf(address account)", type_label=function_definition];
224 [label="33_ function transfer(address recipient, uint256 amount) external returns (bool);\n224-function_definition-34-34", method="transfer(address recipient,uint256 amount)", type_label=function_definition];
239 [label="34_ function allowance(address owner, address spender) external view returns (uint256);\n239-function_definition-35-35", method="allowance(address owner,address spender)", type_label=function_definition];
255 [label="35_ function approve(address spender, uint256 amount) external returns (bool);\n255-function_definition-36-36", method="approve(address spender,uint256 amount)", type_label=function_definition];
270 [label="36_ function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n270-function_definition-37-37", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=function_definition];
328 [label="42_ mapping(address => uint) public lockTime_intou37;\n328-new_variable-43-43", method="", type_label=new_variable];
335 [label="43_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n335-function_definition-44-46", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
343 [label="44_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n343-expression_statement-45-45", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
351 [label="46_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n351-function_definition-47-51", method="withdraw_intou37()", type_label=function_definition];
355 [label="47_ require(now > lockTime_intou37[msg.sender]);\n355-expression_statement-48-48", method="withdraw_intou37()", type_label=expression_statement];
366 [label="48_ uint transferValue_intou37 = 10;\n366-new_variable-49-49", method="withdraw_intou37()", type_label=new_variable];
372 [label="49_ msg.sender.transfer(transferValue_intou37);\n372-expression_statement-50-50", method="withdraw_intou37()", type_label=expression_statement];
381 [label="51_ mapping (address => uint256) private _balances;\n381-new_variable-52-52", method="", type_label=new_variable];
388 [label="52_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n388-function_definition-53-56", method="bug_intou3()", type_label=function_definition];
392 [label="53_ uint8 vundflw =0;\n392-new_variable-54-54", method="bug_intou3()", type_label=new_variable];
398 [label="54_ vundflw = vundflw -10;\n398-expression_statement-55-55", method="bug_intou3()", type_label=expression_statement];
404 [label="56_ mapping (address => mapping (address => uint256)) private _allowances;\n404-new_variable-57-57", method="", type_label=new_variable];
413 [label="57_ mapping(address => uint) public lockTime_intou9;\n413-new_variable-58-58", method="", type_label=new_variable];
420 [label="58_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n420-function_definition-59-61", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
428 [label="59_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n428-expression_statement-60-60", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
436 [label="61_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n436-function_definition-62-66", method="withdraw_intou9()", type_label=function_definition];
440 [label="62_ require(now > lockTime_intou9[msg.sender]);\n440-expression_statement-63-63", method="withdraw_intou9()", type_label=expression_statement];
451 [label="63_ uint transferValue_intou9 = 10;\n451-new_variable-64-64", method="withdraw_intou9()", type_label=new_variable];
457 [label="64_ msg.sender.transfer(transferValue_intou9);\n457-expression_statement-65-65", method="withdraw_intou9()", type_label=expression_statement];
466 [label="66_ uint256 private _totalSupply;\n466-new_variable-67-67", method="", type_label=new_variable];
471 [label="67_ mapping(address => uint) public lockTime_intou25;\n471-new_variable-68-68", method="", type_label=new_variable];
478 [label="68_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n478-function_definition-69-71", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
486 [label="69_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n486-expression_statement-70-70", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
494 [label="71_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n494-function_definition-72-76", method="withdraw_intou25()", type_label=function_definition];
498 [label="72_ require(now > lockTime_intou25[msg.sender]);\n498-expression_statement-73-73", method="withdraw_intou25()", type_label=expression_statement];
509 [label="73_ uint transferValue_intou25 = 10;\n509-new_variable-74-74", method="withdraw_intou25()", type_label=new_variable];
515 [label="74_ msg.sender.transfer(transferValue_intou25);\n515-expression_statement-75-75", method="withdraw_intou25()", type_label=expression_statement];
524 [label="76_ string private _name;\n524-new_variable-77-77", method="", type_label=new_variable];
529 [label="77_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n529-function_definition-78-81", method="bug_intou19()", type_label=function_definition];
533 [label="78_ uint8 vundflw =0;\n533-new_variable-79-79", method="bug_intou19()", type_label=new_variable];
539 [label="79_ vundflw = vundflw -10;\n539-expression_statement-80-80", method="bug_intou19()", type_label=expression_statement];
545 [label="81_ string private _symbol;\n545-new_variable-82-82", method="", type_label=new_variable];
550 [label="82_ mapping(address => uint) balances_intou26;\n550-new_variable-83-83", method="", type_label=new_variable];
556 [label="83_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n556-function_definition-84-89", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
572 [label="84_ require(balances_intou26[msg.sender] - _value >= 0);\n572-expression_statement-85-85", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
585 [label="85_ balances_intou26[msg.sender] -= _value;\n585-expression_statement-86-86", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
593 [label="86_ balances_intou26[_to] += _value;\n593-expression_statement-87-87", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
599 [label="87_ return true;\n599-return-88-88", method="transfer_intou26(address _to,uint _value)", type_label=return];
602 [label="89_ uint8 private _decimals;\n602-new_variable-90-90", method="", type_label=new_variable];
609 [label="91_ _name = \"UBBC Token\";\n609-expression_statement-92-92", method="", type_label=expression_statement];
614 [label="92_ _symbol = \"UBBC\";\n614-expression_statement-93-93", method="", type_label=expression_statement];
619 [label="93_ _decimals = 18;\n619-expression_statement-94-94", method="", type_label=expression_statement];
623 [label="94_ _totalSupply = 260000000 ether;\n623-expression_statement-95-95", method="", type_label=expression_statement];
628 [label="95_ _balances[0x0e475cd2c1f8222868cf85B4f97D7EB70fB3ffD3] = _totalSupply;\n628-expression_statement-96-96", method="", type_label=expression_statement];
634 [label="97_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n634-function_definition-98-101", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
642 [label="98_ uint8 vundflw1=0;\n642-new_variable-99-99", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
648 [label="99_ vundflw1 = vundflw1 + p_intou20;\n648-expression_statement-100-100", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
654 [label="101_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n654-function_definition-102-105", method="bug_intou31()", type_label=function_definition];
658 [label="102_ uint8 vundflw =0;\n658-new_variable-103-103", method="bug_intou31()", type_label=new_variable];
664 [label="103_ vundflw = vundflw -10;\n664-expression_statement-104-104", method="bug_intou31()", type_label=expression_statement];
684 [label="106_ mapping(address => uint) public lockTime_intou13;\n684-new_variable-107-107", method="", type_label=new_variable];
691 [label="107_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n691-function_definition-108-110", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
699 [label="108_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n699-expression_statement-109-109", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
707 [label="110_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n707-function_definition-111-115", method="withdraw_intou13()", type_label=function_definition];
711 [label="111_ require(now > lockTime_intou13[msg.sender]);\n711-expression_statement-112-112", method="withdraw_intou13()", type_label=expression_statement];
722 [label="112_ uint transferValue_intou13 = 10;\n722-new_variable-113-113", method="withdraw_intou13()", type_label=new_variable];
728 [label="113_ msg.sender.transfer(transferValue_intou13);\n728-expression_statement-114-114", method="withdraw_intou13()", type_label=expression_statement];
751 [label="116_ function name() public view returns (string memory) {\n        return _name;\n    }\n751-function_definition-117-119", method="name()", type_label=function_definition];
760 [label="117_ return _name;\n760-return-118-118", method="name()", type_label=return];
762 [label="119_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n762-function_definition-120-123", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
770 [label="120_ uint8 vundflw1=0;\n770-new_variable-121-121", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
776 [label="121_ vundflw1 = vundflw1 + p_intou32;\n776-expression_statement-122-122", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
782 [label="123_ function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n782-function_definition-124-126", method="symbol()", type_label=function_definition];
791 [label="124_ return _symbol;\n791-return-125-125", method="symbol()", type_label=return];
793 [label="126_ mapping(address => uint) balances_intou38;\n793-new_variable-127-127", method="", type_label=new_variable];
799 [label="127_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n799-function_definition-128-133", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
815 [label="128_ require(balances_intou38[msg.sender] - _value >= 0);\n815-expression_statement-129-129", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
828 [label="129_ balances_intou38[msg.sender] -= _value;\n828-expression_statement-130-130", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
836 [label="130_ balances_intou38[_to] += _value;\n836-expression_statement-131-131", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
842 [label="131_ return true;\n842-return-132-132", method="transfer_intou38(address _to,uint _value)", type_label=return];
845 [label="133_ function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n845-function_definition-134-136", method="decimals()", type_label=function_definition];
854 [label="134_ return _decimals;\n854-return-135-135", method="decimals()", type_label=return];
856 [label="136_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n856-function_definition-137-140", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
864 [label="137_ uint8 vundflw1=0;\n864-new_variable-138-138", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
870 [label="138_ vundflw1 = vundflw1 + p_intou4;\n870-expression_statement-139-139", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
876 [label="140_ function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n876-function_definition-141-143", method="totalSupply()", type_label=function_definition];
885 [label="141_ return _totalSupply;\n885-return-142-142", method="totalSupply()", type_label=return];
887 [label="143_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n887-function_definition-144-147", method="bug_intou7()", type_label=function_definition];
891 [label="144_ uint8 vundflw =0;\n891-new_variable-145-145", method="bug_intou7()", type_label=new_variable];
897 [label="145_ vundflw = vundflw -10;\n897-expression_statement-146-146", method="bug_intou7()", type_label=expression_statement];
903 [label="147_ function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n903-function_definition-148-150", method="balanceOf(address account)", type_label=function_definition];
916 [label="148_ return _balances[account];\n916-return-149-149", method="balanceOf(address account)", type_label=return];
920 [label="150_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n920-function_definition-151-154", method="bug_intou23()", type_label=function_definition];
924 [label="151_ uint8 vundflw =0;\n924-new_variable-152-152", method="bug_intou23()", type_label=new_variable];
930 [label="152_ vundflw = vundflw -10;\n930-expression_statement-153-153", method="bug_intou23()", type_label=expression_statement];
936 [label="154_ function transfer(address recipient, uint256 amount) public  returns (bool) {\n         _transfer(msg.sender, recipient, amount);\n         return true;\n    }\n936-function_definition-155-158", method="transfer(address recipient,uint256 amount)", type_label=function_definition];
952 [label="155_ _transfer(msg.sender, recipient, amount);\n952-expression_statement-156-156", method="transfer(address recipient,uint256 amount)", type_label=expression_statement];
963 [label="156_ return true;\n963-return-157-157", method="transfer(address recipient,uint256 amount)", type_label=return];
966 [label="158_ mapping(address => uint) balances_intou14;\n966-new_variable-159-159", method="", type_label=new_variable];
972 [label="159_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n972-function_definition-160-165", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
988 [label="160_ require(balances_intou14[msg.sender] - _value >= 0);\n988-expression_statement-161-161", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1001 [label="161_ balances_intou14[msg.sender] -= _value;\n1001-expression_statement-162-162", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1009 [label="162_ balances_intou14[_to] += _value;\n1009-expression_statement-163-163", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1015 [label="163_ return true;\n1015-return-164-164", method="transfer_intou14(address _to,uint _value)", type_label=return];
1018 [label="165_ function allowance(address owner, address spender) public  view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n1018-function_definition-166-168", method="allowance(address owner,address spender)", type_label=function_definition];
1035 [label="166_ return _allowances[owner][spender];\n1035-return-167-167", method="allowance(address owner,address spender)", type_label=return];
1041 [label="168_ mapping(address => uint) balances_intou30;\n1041-new_variable-169-169", method="", type_label=new_variable];
1047 [label="169_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n1047-function_definition-170-175", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
1063 [label="170_ require(balances_intou30[msg.sender] - _value >= 0);\n1063-expression_statement-171-171", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1076 [label="171_ balances_intou30[msg.sender] -= _value;\n1076-expression_statement-172-172", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1084 [label="172_ balances_intou30[_to] += _value;\n1084-expression_statement-173-173", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1090 [label="173_ return true;\n1090-return-174-174", method="transfer_intou30(address _to,uint _value)", type_label=return];
1093 [label="175_ function approve(address spender, uint256 value) public  returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n1093-function_definition-176-179", method="approve(address spender,uint256 value)", type_label=function_definition];
1109 [label="176_ _approve(msg.sender, spender, value);\n1109-expression_statement-177-177", method="approve(address spender,uint256 value)", type_label=expression_statement];
1120 [label="177_ return true;\n1120-return-178-178", method="approve(address spender,uint256 value)", type_label=return];
1123 [label="179_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n1123-function_definition-180-183", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
1131 [label="180_ uint8 vundflw1=0;\n1131-new_variable-181-181", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
1137 [label="181_ vundflw1 = vundflw1 + p_intou8;\n1137-expression_statement-182-182", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
1143 [label="183_ function transferFrom(address sender, address recipient, uint256 amount) public  returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n1143-function_definition-184-188", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=function_definition];
1163 [label="184_ _transfer(sender, recipient, amount);\n1163-expression_statement-185-185", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1172 [label="185_ _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n1172-expression_statement-186-186", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1194 [label="186_ return true;\n1194-return-187-187", method="transferFrom(address sender,address recipient,uint256 amount)", type_label=return];
1197 [label="188_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1197-function_definition-189-192", method="bug_intou39()", type_label=function_definition];
1201 [label="189_ uint8 vundflw =0;\n1201-new_variable-190-190", method="bug_intou39()", type_label=new_variable];
1207 [label="190_ vundflw = vundflw -10;\n1207-expression_statement-191-191", method="bug_intou39()", type_label=expression_statement];
1213 [label="192_ function increaseAllowance(address spender, uint256 addedValue) public  returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n1213-function_definition-193-196", method="increaseAllowance(address spender,uint256 addedValue)", type_label=function_definition];
1229 [label="193_ _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n1229-expression_statement-194-194", method="increaseAllowance(address spender,uint256 addedValue)", type_label=expression_statement];
1251 [label="194_ return true;\n1251-return-195-195", method="increaseAllowance(address spender,uint256 addedValue)", type_label=return];
1254 [label="196_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n1254-function_definition-197-200", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
1262 [label="197_ uint8 vundflw1=0;\n1262-new_variable-198-198", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
1268 [label="198_ vundflw1 = vundflw1 + p_intou36;\n1268-expression_statement-199-199", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
1274 [label="200_ function decreaseAllowance(address spender, uint256 subtractedValue) public  returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n1274-function_definition-201-204", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=function_definition];
1290 [label="201_ _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n1290-expression_statement-202-202", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=expression_statement];
1312 [label="202_ return true;\n1312-return-203-203", method="decreaseAllowance(address spender,uint256 subtractedValue)", type_label=return];
1315 [label="204_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1315-function_definition-205-208", method="bug_intou35()", type_label=function_definition];
1319 [label="205_ uint8 vundflw =0;\n1319-new_variable-206-206", method="bug_intou35()", type_label=new_variable];
1325 [label="206_ vundflw = vundflw -10;\n1325-expression_statement-207-207", method="bug_intou35()", type_label=expression_statement];
1331 [label="208_ function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n1331-function_definition-209-215", method="_transfer(address sender,address recipient,uint256 amount)", type_label=function_definition];
1347 [label="209_ require(sender != address(0), \"ERC20: transfer from the zero address\");\n1347-expression_statement-210-210", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1359 [label="210_ require(recipient != address(0), \"ERC20: transfer to the zero address\");\n1359-expression_statement-211-211", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1371 [label="211_ _balances[sender] = _balances[sender].sub(amount);\n1371-expression_statement-212-212", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1384 [label="212_ _balances[recipient] = _balances[recipient].add(amount);\n1384-expression_statement-213-213", method="_transfer(address sender,address recipient,uint256 amount)", type_label=expression_statement];
1405 [label="215_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n1405-function_definition-216-219", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
1413 [label="216_ uint8 vundflw1=0;\n1413-new_variable-217-217", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
1419 [label="217_ vundflw1 = vundflw1 + p_intou40;\n1419-expression_statement-218-218", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
1425 [label="219_ function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n1425-function_definition-220-225", method="_approve(address owner,address spender,uint256 value)", type_label=function_definition];
1441 [label="220_ require(owner != address(0), \"ERC20: approve from the zero address\");\n1441-expression_statement-221-221", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1453 [label="221_ require(spender != address(0), \"ERC20: approve to the zero address\");\n1453-expression_statement-222-222", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1465 [label="222_ _allowances[owner][spender] = value;\n1465-expression_statement-223-223", method="_approve(address owner,address spender,uint256 value)", type_label=expression_statement];
1481 [label="225_ mapping(address => uint) public lockTime_intou33;\n1481-new_variable-226-226", method="", type_label=new_variable];
1488 [label="226_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n1488-function_definition-227-229", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
1496 [label="227_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n1496-expression_statement-228-228", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
1504 [label="229_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n1504-function_definition-230-234", method="withdraw_intou33()", type_label=function_definition];
1508 [label="230_ require(now > lockTime_intou33[msg.sender]);\n1508-expression_statement-231-231", method="withdraw_intou33()", type_label=expression_statement];
1519 [label="231_ uint transferValue_intou33 = 10;\n1519-new_variable-232-232", method="withdraw_intou33()", type_label=new_variable];
1525 [label="232_ msg.sender.transfer(transferValue_intou33);\n1525-expression_statement-233-233", method="withdraw_intou33()", type_label=expression_statement];
1540 [label="237_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1540-function_definition-238-241", method="bug_intou27()", type_label=function_definition];
1544 [label="238_ uint8 vundflw =0;\n1544-new_variable-239-239", method="bug_intou27()", type_label=new_variable];
1550 [label="239_ vundflw = vundflw -10;\n1550-expression_statement-240-240", method="bug_intou27()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
50 -> 67  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
67 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 85  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
85 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
87 -> 104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
104 -> 109  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
104 -> 1655  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1655 -> 111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 1655  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
109 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
111 -> 119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
119 -> 131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
131 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
133 -> 150  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
150 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
168 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
170 -> 187  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
187 -> 197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
197 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
335 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 355  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
355 -> 366  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
366 -> 372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
388 -> 392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
392 -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
404 -> 413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
420 -> 428  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
436 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
440 -> 451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
451 -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
466 -> 471  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
478 -> 486  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
494 -> 498  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
498 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
509 -> 515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
529 -> 533  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
533 -> 539  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
545 -> 550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
556 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
572 -> 585  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
585 -> 593  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
593 -> 599  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
599 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
609 -> 614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
614 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
619 -> 623  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
623 -> 628  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
634 -> 642  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
642 -> 648  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
654 -> 658  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
658 -> 664  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
691 -> 699  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
707 -> 711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
711 -> 722  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
722 -> 728  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
751 -> 760  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
760 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
762 -> 770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
770 -> 776  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
782 -> 791  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
791 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
799 -> 815  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
815 -> 828  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
828 -> 836  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
836 -> 842  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
842 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
845 -> 854  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
854 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
856 -> 864  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
864 -> 870  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
876 -> 885  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
885 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
887 -> 891  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
891 -> 897  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
903 -> 916  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
916 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
920 -> 924  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
924 -> 930  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
936 -> 952  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
952 -> 963  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
963 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
972 -> 988  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
988 -> 1001  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1001 -> 1009  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1009 -> 1015  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1015 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1018 -> 1035  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1035 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1047 -> 1063  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1063 -> 1076  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1076 -> 1084  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1084 -> 1090  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1090 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1093 -> 1109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1109 -> 1120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1120 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1123 -> 1131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1131 -> 1137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1143 -> 1163  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1163 -> 1172  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1172 -> 1194  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1194 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1197 -> 1201  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1201 -> 1207  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1213 -> 1229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1229 -> 1251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1251 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1254 -> 1262  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1262 -> 1268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1274 -> 1290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1290 -> 1312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1312 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1315 -> 1319  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1319 -> 1325  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1331 -> 1347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1347 -> 1359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1359 -> 1371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1371 -> 1384  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1405 -> 1413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1413 -> 1419  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1425 -> 1441  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1441 -> 1453  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1453 -> 1465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1488 -> 1496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1504 -> 1508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1508 -> 1519  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1519 -> 1525  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1540 -> 1544  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1544 -> 1550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
