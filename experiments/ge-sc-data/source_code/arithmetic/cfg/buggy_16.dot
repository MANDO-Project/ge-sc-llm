digraph  {
13 [label="2_ function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n13-function_definition-3-6", method="mul(uint a,uint b)", type_label=function_definition];
31 [label="3_ c = a * b;\n31-expression_statement-4-4", method="mul(uint a,uint b)", type_label=expression_statement];
37 [label="4_ require(a == 0 || c / a == b);\n37-expression_statement-5-5", method="mul(uint a,uint b)", type_label=expression_statement];
50 [label="6_ function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n50-function_definition-7-10", method="div(uint a,uint b)", type_label=function_definition];
68 [label="7_ require(b > 0);\n68-expression_statement-8-8", method="div(uint a,uint b)", type_label=expression_statement];
75 [label="8_ c = a / b;\n75-expression_statement-9-9", method="div(uint a,uint b)", type_label=expression_statement];
81 [label="10_ function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n81-function_definition-11-14", method="sub(uint a,uint b)", type_label=function_definition];
99 [label="11_ require(b <= a);\n99-expression_statement-12-12", method="sub(uint a,uint b)", type_label=expression_statement];
106 [label="12_ c = a - b;\n106-expression_statement-13-13", method="sub(uint a,uint b)", type_label=expression_statement];
112 [label="14_ function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n112-function_definition-15-18", method="add(uint a,uint b)", type_label=function_definition];
130 [label="15_ c = a + b;\n130-expression_statement-16-16", method="add(uint a,uint b)", type_label=expression_statement];
136 [label="16_ require(c >= a);\n136-expression_statement-17-17", method="add(uint a,uint b)", type_label=expression_statement];
146 [label="20_ function totalSupply() public view returns (uint256);\n146-function_definition-21-21", method="totalSupply()", type_label=function_definition];
154 [label="21_ function bug_intou28(uint8 p_intou28) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou28;    \n}\n154-function_definition-22-25", method="bug_intou28(uint8 p_intou28)", type_label=function_definition];
162 [label="22_ uint8 vundflw1=0;\n162-new_variable-23-23", method="bug_intou28(uint8 p_intou28)", type_label=new_variable];
168 [label="23_ vundflw1 = vundflw1 + p_intou28;\n168-expression_statement-24-24", method="bug_intou28(uint8 p_intou28)", type_label=expression_statement];
174 [label="25_ function balanceOf(address tokenOwner) public view returns (uint256 balance);\n174-function_definition-26-26", method="balanceOf(address tokenOwner)", type_label=function_definition];
187 [label="26_ mapping(address => uint) balances_intou34;\n187-new_variable-27-27", method="", type_label=new_variable];
193 [label="27_ function transfer_intou34(address _to, uint _value) public returns (bool) {\n    require(balances_intou34[msg.sender] - _value >= 0);   \n    balances_intou34[msg.sender] -= _value;   \n    balances_intou34[_to] += _value;   \n    return true;\n  }\n193-function_definition-28-33", method="transfer_intou34(address _to,uint _value)", type_label=function_definition];
209 [label="28_ require(balances_intou34[msg.sender] - _value >= 0);\n209-expression_statement-29-29", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
222 [label="29_ balances_intou34[msg.sender] -= _value;\n222-expression_statement-30-30", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
230 [label="30_ balances_intou34[_to] += _value;\n230-expression_statement-31-31", method="transfer_intou34(address _to,uint _value)", type_label=expression_statement];
236 [label="31_ return true;\n236-return-32-32", method="transfer_intou34(address _to,uint _value)", type_label=return];
239 [label="33_ function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);\n239-function_definition-34-34", method="allowance(address tokenOwner,address spender)", type_label=function_definition];
256 [label="34_ mapping(address => uint) public lockTime_intou21;\n256-new_variable-35-35", method="", type_label=new_variable];
263 [label="35_ function increaseLockTime_intou21(uint _secondsToIncrease) public {\n        lockTime_intou21[msg.sender] += _secondsToIncrease;   \n    }\n263-function_definition-36-38", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=function_definition];
271 [label="36_ lockTime_intou21[msg.sender] += _secondsToIncrease;\n271-expression_statement-37-37", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=expression_statement];
279 [label="38_ function withdraw_intou21() public {\n        require(now > lockTime_intou21[msg.sender]);    \n        uint transferValue_intou21 = 10;           \n        msg.sender.transfer(transferValue_intou21);\n    }\n279-function_definition-39-43", method="withdraw_intou21()", type_label=function_definition];
283 [label="39_ require(now > lockTime_intou21[msg.sender]);\n283-expression_statement-40-40", method="withdraw_intou21()", type_label=expression_statement];
294 [label="40_ uint transferValue_intou21 = 10;\n294-new_variable-41-41", method="withdraw_intou21()", type_label=new_variable];
300 [label="41_ msg.sender.transfer(transferValue_intou21);\n300-expression_statement-42-42", method="withdraw_intou21()", type_label=expression_statement];
309 [label="43_ function transfer(address to, uint256 tokens) public returns (bool success);\n309-function_definition-44-44", method="transfer(address to,uint256 tokens)", type_label=function_definition];
325 [label="44_ mapping(address => uint) balances_intou10;\n325-new_variable-45-45", method="", type_label=new_variable];
331 [label="45_ function transfer_intou10(address _to, uint _value) public returns (bool) {\n    require(balances_intou10[msg.sender] - _value >= 0);   \n    balances_intou10[msg.sender] -= _value;   \n    balances_intou10[_to] += _value;   \n    return true;\n  }\n331-function_definition-46-51", method="transfer_intou10(address _to,uint _value)", type_label=function_definition];
347 [label="46_ require(balances_intou10[msg.sender] - _value >= 0);\n347-expression_statement-47-47", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
360 [label="47_ balances_intou10[msg.sender] -= _value;\n360-expression_statement-48-48", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
368 [label="48_ balances_intou10[_to] += _value;\n368-expression_statement-49-49", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
374 [label="49_ return true;\n374-return-50-50", method="transfer_intou10(address _to,uint _value)", type_label=return];
377 [label="51_ function approve(address spender, uint256 tokens) public returns (bool success);\n377-function_definition-52-52", method="approve(address spender,uint256 tokens)", type_label=function_definition];
393 [label="52_ mapping(address => uint) balances_intou22;\n393-new_variable-53-53", method="", type_label=new_variable];
399 [label="53_ function transfer_intou22(address _to, uint _value) public returns (bool) {\n    require(balances_intou22[msg.sender] - _value >= 0);   \n    balances_intou22[msg.sender] -= _value;   \n    balances_intou22[_to] += _value;   \n    return true;\n  }\n399-function_definition-54-59", method="transfer_intou22(address _to,uint _value)", type_label=function_definition];
415 [label="54_ require(balances_intou22[msg.sender] - _value >= 0);\n415-expression_statement-55-55", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
428 [label="55_ balances_intou22[msg.sender] -= _value;\n428-expression_statement-56-56", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
436 [label="56_ balances_intou22[_to] += _value;\n436-expression_statement-57-57", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
442 [label="57_ return true;\n442-return-58-58", method="transfer_intou22(address _to,uint _value)", type_label=return];
445 [label="59_ function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\n445-function_definition-60-60", method="transferFrom(address from,address to,uint256 tokens)", type_label=function_definition];
465 [label="60_ function bug_intou12(uint8 p_intou12) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou12;    \n}\n465-function_definition-61-64", method="bug_intou12(uint8 p_intou12)", type_label=function_definition];
473 [label="61_ uint8 vundflw1=0;\n473-new_variable-62-62", method="bug_intou12(uint8 p_intou12)", type_label=new_variable];
479 [label="62_ vundflw1 = vundflw1 + p_intou12;\n479-expression_statement-63-63", method="bug_intou12(uint8 p_intou12)", type_label=expression_statement];
485 [label="64_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n485-function_definition-65-68", method="bug_intou35()", type_label=function_definition];
489 [label="65_ uint8 vundflw =0;\n489-new_variable-66-66", method="bug_intou35()", type_label=new_variable];
495 [label="66_ vundflw = vundflw -10;\n495-expression_statement-67-67", method="bug_intou35()", type_label=expression_statement];
515 [label="69_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n515-function_definition-70-73", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
523 [label="70_ uint8 vundflw1=0;\n523-new_variable-71-71", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
529 [label="71_ vundflw1 = vundflw1 + p_intou40;\n529-expression_statement-72-72", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
552 [label="76_ address payable public owner;\n552-new_variable-77-77", method="", type_label=new_variable];
557 [label="77_ mapping(address => uint) public lockTime_intou33;\n557-new_variable-78-78", method="", type_label=new_variable];
564 [label="78_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n564-function_definition-79-81", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
572 [label="79_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n572-expression_statement-80-80", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
580 [label="81_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n580-function_definition-82-86", method="withdraw_intou33()", type_label=function_definition];
584 [label="82_ require(now > lockTime_intou33[msg.sender]);\n584-expression_statement-83-83", method="withdraw_intou33()", type_label=expression_statement];
595 [label="83_ uint transferValue_intou33 = 10;\n595-new_variable-84-84", method="withdraw_intou33()", type_label=new_variable];
601 [label="84_ msg.sender.transfer(transferValue_intou33);\n601-expression_statement-85-85", method="withdraw_intou33()", type_label=expression_statement];
622 [label="88_ owner = msg.sender;\n622-expression_statement-89-89", method="", type_label=expression_statement];
628 [label="90_ function bug_intou11() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n628-function_definition-91-94", method="bug_intou11()", type_label=function_definition];
632 [label="91_ uint8 vundflw =0;\n632-new_variable-92-92", method="bug_intou11()", type_label=new_variable];
638 [label="92_ vundflw = vundflw -10;\n638-expression_statement-93-93", method="bug_intou11()", type_label=expression_statement];
644 [label="94_ modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n644-expression_statement-95-98", method="", type_label=expression_statement];
647 [label="95_ require(msg.sender == owner);\n647-expression_statement-96-96", method="", type_label=expression_statement];
656 [label="96_ _;\n656-expression_statement-97-97", method="", type_label=expression_statement];
658 [label="98_ function transferOwnership(address payable newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n658-function_definition-99-103", method="transferOwnership(address payable newOwner)", type_label=function_definition];
665 [label="98_ onlyOwner\n665-expression_statement-99-99", method="transferOwnership(address payable newOwner)", type_label=expression_statement];
668 [label="99_ require(newOwner != address(0));\n668-expression_statement-100-100", method="transferOwnership(address payable newOwner)", type_label=expression_statement];
683 [label="101_ owner = newOwner;\n683-expression_statement-102-102", method="transferOwnership(address payable newOwner)", type_label=expression_statement];
687 [label="103_ mapping(address => uint) public lockTime_intou1;\n687-new_variable-104-104", method="", type_label=new_variable];
694 [label="104_ function increaseLockTime_intou1(uint _secondsToIncrease) public {\n        lockTime_intou1[msg.sender] += _secondsToIncrease;   \n    }\n694-function_definition-105-107", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=function_definition];
702 [label="105_ lockTime_intou1[msg.sender] += _secondsToIncrease;\n702-expression_statement-106-106", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=expression_statement];
710 [label="107_ function withdraw_ovrflow1() public {\n        require(now > lockTime_intou1[msg.sender]);    \n        uint transferValue_intou1 = 10;           \n        msg.sender.transfer(transferValue_intou1);\n    }\n710-function_definition-108-112", method="withdraw_ovrflow1()", type_label=function_definition];
714 [label="108_ require(now > lockTime_intou1[msg.sender]);\n714-expression_statement-109-109", method="withdraw_ovrflow1()", type_label=expression_statement];
725 [label="109_ uint transferValue_intou1 = 10;\n725-new_variable-110-110", method="withdraw_ovrflow1()", type_label=new_variable];
731 [label="110_ msg.sender.transfer(transferValue_intou1);\n731-expression_statement-111-111", method="withdraw_ovrflow1()", type_label=expression_statement];
754 [label="115_ mapping (address => uint256) balances;\n754-new_variable-116-116", method="", type_label=new_variable];
760 [label="116_ mapping(address => uint) balances_intou18;\n760-new_variable-117-117", method="", type_label=new_variable];
766 [label="117_ function transfer_intou18(address _to, uint _value) public returns (bool) {\n    require(balances_intou18[msg.sender] - _value >= 0);   \n    balances_intou18[msg.sender] -= _value;   \n    balances_intou18[_to] += _value;   \n    return true;\n  }\n766-function_definition-118-123", method="transfer_intou18(address _to,uint _value)", type_label=function_definition];
782 [label="118_ require(balances_intou18[msg.sender] - _value >= 0);\n782-expression_statement-119-119", method="transfer_intou18(address _to,uint _value)", type_label=expression_statement];
795 [label="119_ balances_intou18[msg.sender] -= _value;\n795-expression_statement-120-120", method="transfer_intou18(address _to,uint _value)", type_label=expression_statement];
803 [label="120_ balances_intou18[_to] += _value;\n803-expression_statement-121-121", method="transfer_intou18(address _to,uint _value)", type_label=expression_statement];
809 [label="121_ return true;\n809-return-122-122", method="transfer_intou18(address _to,uint _value)", type_label=return];
812 [label="123_ mapping (address => mapping (address => uint256)) allowed;\n812-new_variable-124-124", method="", type_label=new_variable];
820 [label="124_ mapping(address => uint) public lockTime_intou29;\n820-new_variable-125-125", method="", type_label=new_variable];
827 [label="125_ function increaseLockTime_intou29(uint _secondsToIncrease) public {\n        lockTime_intou29[msg.sender] += _secondsToIncrease;   \n    }\n827-function_definition-126-128", method="increaseLockTime_intou29(uint _secondsToIncrease)", type_label=function_definition];
835 [label="126_ lockTime_intou29[msg.sender] += _secondsToIncrease;\n835-expression_statement-127-127", method="increaseLockTime_intou29(uint _secondsToIncrease)", type_label=expression_statement];
843 [label="128_ function withdraw_intou29() public {\n        require(now > lockTime_intou29[msg.sender]);    \n        uint transferValue_intou29 = 10;           \n        msg.sender.transfer(transferValue_intou29);\n    }\n843-function_definition-129-133", method="withdraw_intou29()", type_label=function_definition];
847 [label="129_ require(now > lockTime_intou29[msg.sender]);\n847-expression_statement-130-130", method="withdraw_intou29()", type_label=expression_statement];
858 [label="130_ uint transferValue_intou29 = 10;\n858-new_variable-131-131", method="withdraw_intou29()", type_label=new_variable];
864 [label="131_ msg.sender.transfer(transferValue_intou29);\n864-expression_statement-132-132", method="withdraw_intou29()", type_label=expression_statement];
873 [label="133_ string public name = \"Exclusive Platform\";\n873-new_variable-134-134", method="", type_label=new_variable];
880 [label="134_ mapping(address => uint) balances_intou6;\n880-new_variable-135-135", method="", type_label=new_variable];
886 [label="135_ function transfer_intou62(address _to, uint _value) public returns (bool) {\n    require(balances_intou6[msg.sender] - _value >= 0);   \n    balances_intou6[msg.sender] -= _value;   \n    balances_intou6[_to] += _value;   \n    return true;\n  }\n886-function_definition-136-141", method="transfer_intou62(address _to,uint _value)", type_label=function_definition];
902 [label="136_ require(balances_intou6[msg.sender] - _value >= 0);\n902-expression_statement-137-137", method="transfer_intou62(address _to,uint _value)", type_label=expression_statement];
915 [label="137_ balances_intou6[msg.sender] -= _value;\n915-expression_statement-138-138", method="transfer_intou62(address _to,uint _value)", type_label=expression_statement];
923 [label="138_ balances_intou6[_to] += _value;\n923-expression_statement-139-139", method="transfer_intou62(address _to,uint _value)", type_label=expression_statement];
929 [label="139_ return true;\n929-return-140-140", method="transfer_intou62(address _to,uint _value)", type_label=return];
932 [label="141_ string public symbol = \"XPL\";\n932-new_variable-142-142", method="", type_label=new_variable];
939 [label="142_ function bug_intou16(uint8 p_intou16) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou16;    \n}\n939-function_definition-143-146", method="bug_intou16(uint8 p_intou16)", type_label=function_definition];
947 [label="143_ uint8 vundflw1=0;\n947-new_variable-144-144", method="bug_intou16(uint8 p_intou16)", type_label=new_variable];
953 [label="144_ vundflw1 = vundflw1 + p_intou16;\n953-expression_statement-145-145", method="bug_intou16(uint8 p_intou16)", type_label=expression_statement];
959 [label="146_ uint256 public decimals = 8;\n959-new_variable-147-147", method="", type_label=new_variable];
965 [label="147_ function bug_intou24(uint8 p_intou24) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou24;    \n}\n965-function_definition-148-151", method="bug_intou24(uint8 p_intou24)", type_label=function_definition];
973 [label="148_ uint8 vundflw1=0;\n973-new_variable-149-149", method="bug_intou24(uint8 p_intou24)", type_label=new_variable];
979 [label="149_ vundflw1 = vundflw1 + p_intou24;\n979-expression_statement-150-150", method="bug_intou24(uint8 p_intou24)", type_label=expression_statement];
985 [label="151_ uint256 public _totalSupply;\n985-new_variable-152-152", method="", type_label=new_variable];
990 [label="152_ mapping(address => uint) public lockTime_intou5;\n990-new_variable-153-153", method="", type_label=new_variable];
997 [label="153_ function increaseLockTime_intou5(uint _secondsToIncrease) public {\n        lockTime_intou5[msg.sender] += _secondsToIncrease;   \n    }\n997-function_definition-154-156", method="increaseLockTime_intou5(uint _secondsToIncrease)", type_label=function_definition];
1005 [label="154_ lockTime_intou5[msg.sender] += _secondsToIncrease;\n1005-expression_statement-155-155", method="increaseLockTime_intou5(uint _secondsToIncrease)", type_label=expression_statement];
1013 [label="156_ function withdraw_intou5() public {\n        require(now > lockTime_intou5[msg.sender]);    \n        uint transferValue_intou5 = 10;           \n        msg.sender.transfer(transferValue_intou5);\n    }\n1013-function_definition-157-161", method="withdraw_intou5()", type_label=function_definition];
1017 [label="157_ require(now > lockTime_intou5[msg.sender]);\n1017-expression_statement-158-158", method="withdraw_intou5()", type_label=expression_statement];
1028 [label="158_ uint transferValue_intou5 = 10;\n1028-new_variable-159-159", method="withdraw_intou5()", type_label=new_variable];
1034 [label="159_ msg.sender.transfer(transferValue_intou5);\n1034-expression_statement-160-160", method="withdraw_intou5()", type_label=expression_statement];
1043 [label="161_ uint256 public XPLPerEther = 8000000e8;\n1043-new_variable-162-162", method="", type_label=new_variable];
1049 [label="162_ uint256 public minimumBuy = 1 ether / 100;\n1049-new_variable-163-163", method="", type_label=new_variable];
1058 [label="163_ function bug_intou15() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1058-function_definition-164-167", method="bug_intou15()", type_label=function_definition];
1062 [label="164_ uint8 vundflw =0;\n1062-new_variable-165-165", method="bug_intou15()", type_label=new_variable];
1068 [label="165_ vundflw = vundflw -10;\n1068-expression_statement-166-166", method="bug_intou15()", type_label=expression_statement];
1074 [label="167_ bool public crowdsaleIsOn = true;\n1074-new_variable-168-168", method="", type_label=new_variable];
1081 [label="168_ modifier onlyPayloadSize(uint size) {\n        assert(msg.data.length >= size + 4);\n        _;\n    }\n1081-expression_statement-169-172", method="", type_label=expression_statement];
1088 [label="169_ assert(msg.data.length >= size + 4);\n1088-expression_statement-170-170", method="", type_label=expression_statement];
1101 [label="170_ _;\n1101-expression_statement-171-171", method="", type_label=expression_statement];
1105 [label="173_ _totalSupply = 10000000000e8;\n1105-expression_statement-174-174", method="", type_label=expression_statement];
1109 [label="174_ balances[owner] = _totalSupply;\n1109-expression_statement-175-175", method="", type_label=expression_statement];
1125 [label="177_ mapping(address => uint) balances_intou2;\n1125-new_variable-178-178", method="", type_label=new_variable];
1131 [label="178_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n1131-function_definition-179-184", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
1147 [label="179_ require(balances_intou2[msg.sender] - _value >= 0);\n1147-expression_statement-180-180", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
1160 [label="180_ balances_intou2[msg.sender] -= _value;\n1160-expression_statement-181-181", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
1168 [label="181_ balances_intou2[_to] += _value;\n1168-expression_statement-182-182", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
1174 [label="182_ return true;\n1174-return-183-183", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
1177 [label="184_ function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n1177-function_definition-185-187", method="totalSupply()", type_label=function_definition];
1186 [label="185_ return _totalSupply;\n1186-return-186-186", method="totalSupply()", type_label=return];
1188 [label="187_ mapping(address => uint) public lockTime_intou17;\n1188-new_variable-188-188", method="", type_label=new_variable];
1195 [label="188_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n1195-function_definition-189-191", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
1203 [label="189_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n1203-expression_statement-190-190", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
1211 [label="191_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n1211-function_definition-192-196", method="withdraw_intou17()", type_label=function_definition];
1215 [label="192_ require(now > lockTime_intou17[msg.sender]);\n1215-expression_statement-193-193", method="withdraw_intou17()", type_label=expression_statement];
1226 [label="193_ uint transferValue_intou17 = 10;\n1226-new_variable-194-194", method="withdraw_intou17()", type_label=new_variable];
1232 [label="194_ msg.sender.transfer(transferValue_intou17);\n1232-expression_statement-195-195", method="withdraw_intou17()", type_label=expression_statement];
1241 [label="196_ function updateXPLPerEther(uint _XPLPerEther) public onlyOwner {        \n        emit NewPrice(owner, XPLPerEther, _XPLPerEther);\n        XPLPerEther = _XPLPerEther;\n    }\n1241-function_definition-197-200", method="updateXPLPerEther(uint _XPLPerEther)", type_label=function_definition];
1248 [label="196_ onlyOwner\n1248-expression_statement-197-197", method="updateXPLPerEther(uint _XPLPerEther)", type_label=expression_statement];
1259 [label="198_ XPLPerEther = _XPLPerEther;\n1259-expression_statement-199-199", method="updateXPLPerEther(uint _XPLPerEther)", type_label=expression_statement];
1263 [label="200_ mapping(address => uint) public lockTime_intou37;\n1263-new_variable-201-201", method="", type_label=new_variable];
1270 [label="201_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n1270-function_definition-202-204", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
1278 [label="202_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n1278-expression_statement-203-203", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
1286 [label="204_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n1286-function_definition-205-209", method="withdraw_intou37()", type_label=function_definition];
1290 [label="205_ require(now > lockTime_intou37[msg.sender]);\n1290-expression_statement-206-206", method="withdraw_intou37()", type_label=expression_statement];
1301 [label="206_ uint transferValue_intou37 = 10;\n1301-new_variable-207-207", method="withdraw_intou37()", type_label=new_variable];
1307 [label="207_ msg.sender.transfer(transferValue_intou37);\n1307-expression_statement-208-208", method="withdraw_intou37()", type_label=expression_statement];
1316 [label="209_ function switchCrowdsale() public onlyOwner {\n        crowdsaleIsOn = !(crowdsaleIsOn);\n    }\n1316-function_definition-210-212", method="switchCrowdsale()", type_label=function_definition];
1319 [label="209_ onlyOwner\n1319-expression_statement-210-210", method="switchCrowdsale()", type_label=expression_statement];
1322 [label="210_ crowdsaleIsOn = !(crowdsaleIsOn);\n1322-expression_statement-211-211", method="switchCrowdsale()", type_label=expression_statement];
1328 [label="212_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1328-function_definition-213-216", method="bug_intou3()", type_label=function_definition];
1332 [label="213_ uint8 vundflw =0;\n1332-new_variable-214-214", method="bug_intou3()", type_label=new_variable];
1338 [label="214_ vundflw = vundflw -10;\n1338-expression_statement-215-215", method="bug_intou3()", type_label=expression_statement];
1344 [label="216_ function getBonus(uint256 _amount) internal view returns (uint256) {\n        if (_amount >= XPLPerEther.mul(5)) {\n            return ((20 * _amount).div(100)).add(_amount);  \n        } else if (_amount >= XPLPerEther) {\n            return ((5 * _amount).div(100)).add(_amount);  \n        }\n        return _amount;\n    }\n1344-function_definition-217-224", method="getBonus(uint256 _amount)", type_label=function_definition];
1357 [label="217_ if\n1357-if-218-222", method="getBonus(uint256 _amount)", type_label=if];
3988 [label="217_ end_if", method="getBonus(uint256 _amount)", type_label=end_if];
1367 [label="218_ return ((20 * _amount).div(100)).add(_amount);\n1367-return-219-219", method="getBonus(uint256 _amount)", type_label=return];
1383 [label="219_ if__amount >= XPLPerEther\n1383-if-220-222", method="getBonus(uint256 _amount)", type_label=if];
1388 [label="220_ return ((5 * _amount).div(100)).add(_amount);\n1388-return-221-221", method="getBonus(uint256 _amount)", type_label=return];
1404 [label="222_ return _amount;\n1404-return-223-223", method="getBonus(uint256 _amount)", type_label=return];
1406 [label="224_ mapping(address => uint) public lockTime_intou9;\n1406-new_variable-225-225", method="", type_label=new_variable];
1413 [label="225_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n1413-function_definition-226-228", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
1421 [label="226_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n1421-expression_statement-227-227", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
1429 [label="228_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n1429-function_definition-229-233", method="withdraw_intou9()", type_label=function_definition];
1433 [label="229_ require(now > lockTime_intou9[msg.sender]);\n1433-expression_statement-230-230", method="withdraw_intou9()", type_label=expression_statement];
1444 [label="230_ uint transferValue_intou9 = 10;\n1444-new_variable-231-231", method="withdraw_intou9()", type_label=new_variable];
1450 [label="231_ msg.sender.transfer(transferValue_intou9);\n1450-expression_statement-232-232", method="withdraw_intou9()", type_label=expression_statement];
1463 [label="234_ require(crowdsaleIsOn && msg.value >= minimumBuy);\n1463-expression_statement-235-235", method="", type_label=expression_statement];
1474 [label="235_ uint256 totalBuy =  (XPLPerEther.mul(msg.value)).div(1 ether);\n1474-new_variable-236-236", method="", type_label=new_variable];
1494 [label="236_ totalBuy = getBonus(totalBuy);\n1494-expression_statement-237-237", method="", type_label=expression_statement];
1501 [label="237_ doTransfer(owner, msg.sender, totalBuy);\n1501-expression_statement-238-238", method="", type_label=expression_statement];
1512 [label="239_ mapping(address => uint) public lockTime_intou25;\n1512-new_variable-240-240", method="", type_label=new_variable];
1519 [label="240_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n1519-function_definition-241-243", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
1527 [label="241_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n1527-expression_statement-242-242", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
1535 [label="243_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n1535-function_definition-244-248", method="withdraw_intou25()", type_label=function_definition];
1539 [label="244_ require(now > lockTime_intou25[msg.sender]);\n1539-expression_statement-245-245", method="withdraw_intou25()", type_label=expression_statement];
1550 [label="245_ uint transferValue_intou25 = 10;\n1550-new_variable-246-246", method="withdraw_intou25()", type_label=new_variable];
1556 [label="246_ msg.sender.transfer(transferValue_intou25);\n1556-expression_statement-247-247", method="withdraw_intou25()", type_label=expression_statement];
1565 [label="248_ function distribute(address[] calldata _addresses, uint256 _amount) external {        \n        for (uint i = 0; i < _addresses.length; i++) {transfer(_addresses[i], _amount);}\n    }\n1565-function_definition-249-251", method="distribute(address[] calldata _addresses,uint256 _amount)", type_label=function_definition];
1578 [label="249_ for(i < _addresses.length;;i++)\n1578-for-250-250", method="distribute(address[] calldata _addresses,uint256 _amount)", type_label=for];
4209 [label="249_ end_loop", method="distribute(address[] calldata _addresses,uint256 _amount)", type_label=end_loop];
1591 [label="249_ i++\n1591-expression_statement-250-250", method="distribute(address[] calldata _addresses,uint256 _amount)", type_label=expression_statement];
1594 [label="249_ transfer(_addresses[i], _amount);\n1594-expression_statement-250-250", method="distribute(address[] calldata _addresses,uint256 _amount)", type_label=expression_statement];
1603 [label="251_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1603-function_definition-252-255", method="bug_intou19()", type_label=function_definition];
1607 [label="252_ uint8 vundflw =0;\n1607-new_variable-253-253", method="bug_intou19()", type_label=new_variable];
1613 [label="253_ vundflw = vundflw -10;\n1613-expression_statement-254-254", method="bug_intou19()", type_label=expression_statement];
1619 [label="255_ function distributeWithAmount(address[] calldata _addresses, uint256[] calldata _amounts) external {\n        require(_addresses.length == _amounts.length);\n        for (uint i = 0; i < _addresses.length; i++) {transfer(_addresses[i], _amounts[i]);}\n    }\n1619-function_definition-256-259", method="distributeWithAmount(address[] calldata _addresses,uint256[] calldata _amounts)", type_label=function_definition];
1633 [label="256_ require(_addresses.length == _amounts.length);\n1633-expression_statement-257-257", method="distributeWithAmount(address[] calldata _addresses,uint256[] calldata _amounts)", type_label=expression_statement];
1644 [label="257_ for(i < _addresses.length;;i++)\n1644-for-258-258", method="distributeWithAmount(address[] calldata _addresses,uint256[] calldata _amounts)", type_label=for];
4275 [label="257_ end_loop", method="distributeWithAmount(address[] calldata _addresses,uint256[] calldata _amounts)", type_label=end_loop];
1657 [label="257_ i++\n1657-expression_statement-258-258", method="distributeWithAmount(address[] calldata _addresses,uint256[] calldata _amounts)", type_label=expression_statement];
1660 [label="257_ transfer(_addresses[i], _amounts[i]);\n1660-expression_statement-258-258", method="distributeWithAmount(address[] calldata _addresses,uint256[] calldata _amounts)", type_label=expression_statement];
1671 [label="259_ mapping(address => uint) balances_intou26;\n1671-new_variable-260-260", method="", type_label=new_variable];
1677 [label="260_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n1677-function_definition-261-266", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
1693 [label="261_ require(balances_intou26[msg.sender] - _value >= 0);\n1693-expression_statement-262-262", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1706 [label="262_ balances_intou26[msg.sender] -= _value;\n1706-expression_statement-263-263", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1714 [label="263_ balances_intou26[_to] += _value;\n1714-expression_statement-264-264", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1720 [label="264_ return true;\n1720-return-265-265", method="transfer_intou26(address _to,uint _value)", type_label=return];
1723 [label="266_ function doTransfer(address _from, address _to, uint _amount) internal {\n        require((_to != address(0)));\n        require(_amount <= balances[_from]);\n        balances[_from] = balances[_from].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Transfer(_from, _to, _amount);\n    }\n1723-function_definition-267-273", method="doTransfer(address _from,address _to,uint _amount)", type_label=function_definition];
1739 [label="267_ require((_to != address(0)));\n1739-expression_statement-268-268", method="doTransfer(address _from,address _to,uint _amount)", type_label=expression_statement];
1749 [label="268_ require(_amount <= balances[_from]);\n1749-expression_statement-269-269", method="doTransfer(address _from,address _to,uint _amount)", type_label=expression_statement];
1758 [label="269_ balances[_from] = balances[_from].sub(_amount);\n1758-expression_statement-270-270", method="doTransfer(address _from,address _to,uint _amount)", type_label=expression_statement];
1771 [label="270_ balances[_to] = balances[_to].add(_amount);\n1771-expression_statement-271-271", method="doTransfer(address _from,address _to,uint _amount)", type_label=expression_statement];
1792 [label="273_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n1792-function_definition-274-277", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
1800 [label="274_ uint8 vundflw1=0;\n1800-new_variable-275-275", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
1806 [label="275_ vundflw1 = vundflw1 + p_intou20;\n1806-expression_statement-276-276", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
1812 [label="277_ function balanceOf(address _owner) view public returns (uint256) {\n        return balances[_owner];\n    }\n1812-function_definition-278-280", method="balanceOf(address _owner)", type_label=function_definition];
1825 [label="278_ return balances[_owner];\n1825-return-279-279", method="balanceOf(address _owner)", type_label=return];
1829 [label="280_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n1829-function_definition-281-284", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
1837 [label="281_ uint8 vundflw1=0;\n1837-new_variable-282-282", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
1843 [label="282_ vundflw1 = vundflw1 + p_intou32;\n1843-expression_statement-283-283", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
1849 [label="284_ function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\n        doTransfer(msg.sender, _to, _amount);\n        return true;\n    }\n1849-function_definition-285-288", method="transfer(address _to,uint256 _amount)", type_label=function_definition];
1859 [label="284_ onlyPayloadSize(2 * 32)\n1859-expression_statement-285-285", method="transfer(address _to,uint256 _amount)", type_label=expression_statement];
1872 [label="285_ doTransfer(msg.sender, _to, _amount);\n1872-expression_statement-286-286", method="transfer(address _to,uint256 _amount)", type_label=expression_statement];
1883 [label="286_ return true;\n1883-return-287-287", method="transfer(address _to,uint256 _amount)", type_label=return];
1886 [label="288_ mapping(address => uint) balances_intou38;\n1886-new_variable-289-289", method="", type_label=new_variable];
1892 [label="289_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n1892-function_definition-290-295", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
1908 [label="290_ require(balances_intou38[msg.sender] - _value >= 0);\n1908-expression_statement-291-291", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1921 [label="291_ balances_intou38[msg.sender] -= _value;\n1921-expression_statement-292-292", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1929 [label="292_ balances_intou38[_to] += _value;\n1929-expression_statement-293-293", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1935 [label="293_ return true;\n1935-return-294-294", method="transfer_intou38(address _to,uint _value)", type_label=return];
1938 [label="295_ function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\n        require(allowed[_from][msg.sender] >= _amount);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n        doTransfer(_from, _to, _amount);\n        return true;\n    }\n1938-function_definition-296-301", method="transferFrom(address _from,address _to,uint256 _amount)", type_label=function_definition];
1952 [label="295_ onlyPayloadSize(3 * 32)\n1952-expression_statement-296-296", method="transferFrom(address _from,address _to,uint256 _amount)", type_label=expression_statement];
1965 [label="296_ require(allowed[_from][msg.sender] >= _amount);\n1965-expression_statement-297-297", method="transferFrom(address _from,address _to,uint256 _amount)", type_label=expression_statement];
1978 [label="297_ allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n1978-expression_statement-298-298", method="transferFrom(address _from,address _to,uint256 _amount)", type_label=expression_statement];
1999 [label="298_ doTransfer(_from, _to, _amount);\n1999-expression_statement-299-299", method="transferFrom(address _from,address _to,uint256 _amount)", type_label=expression_statement];
2008 [label="299_ return true;\n2008-return-300-300", method="transferFrom(address _from,address _to,uint256 _amount)", type_label=return];
2011 [label="301_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n2011-function_definition-302-305", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
2019 [label="302_ uint8 vundflw1=0;\n2019-new_variable-303-303", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
2025 [label="303_ vundflw1 = vundflw1 + p_intou4;\n2025-expression_statement-304-304", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
2031 [label="305_ function approve(address _spender, uint256 _amount) public returns (bool success) {\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n2031-function_definition-306-311", method="approve(address _spender,uint256 _amount)", type_label=function_definition];
2048 [label="306_ require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n2048-expression_statement-307-307", method="approve(address _spender,uint256 _amount)", type_label=expression_statement];
2067 [label="307_ allowed[msg.sender][_spender] = _amount;\n2067-expression_statement-308-308", method="approve(address _spender,uint256 _amount)", type_label=expression_statement];
2087 [label="309_ return true;\n2087-return-310-310", method="approve(address _spender,uint256 _amount)", type_label=return];
2090 [label="311_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2090-function_definition-312-315", method="bug_intou7()", type_label=function_definition];
2094 [label="312_ uint8 vundflw =0;\n2094-new_variable-313-313", method="bug_intou7()", type_label=new_variable];
2100 [label="313_ vundflw = vundflw -10;\n2100-expression_statement-314-314", method="bug_intou7()", type_label=expression_statement];
2106 [label="315_ function allowance(address _owner, address _spender) view public returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n2106-function_definition-316-318", method="allowance(address _owner,address _spender)", type_label=function_definition];
2123 [label="316_ return allowed[_owner][_spender];\n2123-return-317-317", method="allowance(address _owner,address _spender)", type_label=return];
2129 [label="318_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2129-function_definition-319-322", method="bug_intou23()", type_label=function_definition];
2133 [label="319_ uint8 vundflw =0;\n2133-new_variable-320-320", method="bug_intou23()", type_label=new_variable];
2139 [label="320_ vundflw = vundflw -10;\n2139-expression_statement-321-321", method="bug_intou23()", type_label=expression_statement];
2145 [label="322_ function transferEther(address payable _receiver, uint256 _amount) public onlyOwner {\n        require(_amount <= address(this).balance);\n        emit TransferEther(address(this), _receiver, _amount);\n        _receiver.transfer(_amount);\n    }\n2145-function_definition-323-327", method="transferEther(address payable _receiver,uint256 _amount)", type_label=function_definition];
2156 [label="322_ onlyOwner\n2156-expression_statement-323-323", method="transferEther(address payable _receiver,uint256 _amount)", type_label=expression_statement];
2159 [label="323_ require(_amount <= address(this).balance);\n2159-expression_statement-324-324", method="transferEther(address payable _receiver,uint256 _amount)", type_label=expression_statement];
2180 [label="325_ _receiver.transfer(_amount);\n2180-expression_statement-326-326", method="transferEther(address payable _receiver,uint256 _amount)", type_label=expression_statement];
2187 [label="327_ mapping(address => uint) balances_intou14;\n2187-new_variable-328-328", method="", type_label=new_variable];
2193 [label="328_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n2193-function_definition-329-334", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
2209 [label="329_ require(balances_intou14[msg.sender] - _value >= 0);\n2209-expression_statement-330-330", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
2222 [label="330_ balances_intou14[msg.sender] -= _value;\n2222-expression_statement-331-331", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
2230 [label="331_ balances_intou14[_to] += _value;\n2230-expression_statement-332-332", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
2236 [label="332_ return true;\n2236-return-333-333", method="transfer_intou14(address _to,uint _value)", type_label=return];
2239 [label="334_ function withdrawFund() onlyOwner public {\n        uint256 balance = address(this).balance;\n        owner.transfer(balance);\n    }\n2239-function_definition-335-338", method="withdrawFund()", type_label=function_definition];
2241 [label="334_ onlyOwner\n2241-expression_statement-335-335", method="withdrawFund()", type_label=expression_statement];
2245 [label="335_ uint256 balance = address(this).balance;\n2245-new_variable-336-336", method="withdrawFund()", type_label=new_variable];
2255 [label="336_ owner.transfer(balance);\n2255-expression_statement-337-337", method="withdrawFund()", type_label=expression_statement];
2262 [label="338_ mapping(address => uint) balances_intou30;\n2262-new_variable-339-339", method="", type_label=new_variable];
2268 [label="339_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n2268-function_definition-340-345", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
2284 [label="340_ require(balances_intou30[msg.sender] - _value >= 0);\n2284-expression_statement-341-341", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
2297 [label="341_ balances_intou30[msg.sender] -= _value;\n2297-expression_statement-342-342", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
2305 [label="342_ balances_intou30[_to] += _value;\n2305-expression_statement-343-343", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
2311 [label="343_ return true;\n2311-return-344-344", method="transfer_intou30(address _to,uint _value)", type_label=return];
2314 [label="345_ function burn(uint256 _value) onlyOwner public {\n        require(_value <= balances[msg.sender]);\n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        _totalSupply = _totalSupply.sub(_value);\n        emit Burn(burner, _value);\n    }\n2314-function_definition-346-352", method="burn(uint256 _value)", type_label=function_definition];
2320 [label="345_ onlyOwner\n2320-expression_statement-346-346", method="burn(uint256 _value)", type_label=expression_statement];
2324 [label="346_ require(_value <= balances[msg.sender]);\n2324-expression_statement-347-347", method="burn(uint256 _value)", type_label=expression_statement];
2335 [label="347_ address burner = msg.sender;\n2335-new_variable-348-348", method="burn(uint256 _value)", type_label=new_variable];
2343 [label="348_ balances[burner] = balances[burner].sub(_value);\n2343-expression_statement-349-349", method="burn(uint256 _value)", type_label=expression_statement];
2356 [label="349_ _totalSupply = _totalSupply.sub(_value);\n2356-expression_statement-350-350", method="burn(uint256 _value)", type_label=expression_statement];
2371 [label="352_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n2371-function_definition-353-356", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
2379 [label="353_ uint8 vundflw1=0;\n2379-new_variable-354-354", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
2385 [label="354_ vundflw1 = vundflw1 + p_intou8;\n2385-expression_statement-355-355", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
2391 [label="356_ function getForeignTokenBalance(address tokenAddress, address who) view public returns (uint){\n        ERC20Interface token = ERC20Interface(tokenAddress);\n        uint bal = token.balanceOf(who);\n        return bal;\n    }\n2391-function_definition-357-361", method="getForeignTokenBalance(address tokenAddress,address who)", type_label=function_definition];
2408 [label="357_ ERC20Interface token = ERC20Interface(tokenAddress);\n2408-new_variable-358-358", method="getForeignTokenBalance(address tokenAddress,address who)", type_label=new_variable];
2418 [label="358_ uint bal = token.balanceOf(who);\n2418-new_variable-359-359", method="getForeignTokenBalance(address tokenAddress,address who)", type_label=new_variable];
2429 [label="359_ return bal;\n2429-return-360-360", method="getForeignTokenBalance(address tokenAddress,address who)", type_label=return];
2431 [label="361_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2431-function_definition-362-365", method="bug_intou39()", type_label=function_definition];
2435 [label="362_ uint8 vundflw =0;\n2435-new_variable-363-363", method="bug_intou39()", type_label=new_variable];
2441 [label="363_ vundflw = vundflw -10;\n2441-expression_statement-364-364", method="bug_intou39()", type_label=expression_statement];
2447 [label="365_ function withdrawForeignTokens(address tokenAddress) onlyOwner public returns (bool) {\n        ERC20Interface token = ERC20Interface(tokenAddress);\n        uint256 amount = token.balanceOf(address(this));\n        return token.transfer(owner, amount);\n    }\n2447-function_definition-366-370", method="withdrawForeignTokens(address tokenAddress)", type_label=function_definition];
2453 [label="365_ onlyOwner\n2453-expression_statement-366-366", method="withdrawForeignTokens(address tokenAddress)", type_label=expression_statement];
2461 [label="366_ ERC20Interface token = ERC20Interface(tokenAddress);\n2461-new_variable-367-367", method="withdrawForeignTokens(address tokenAddress)", type_label=new_variable];
2471 [label="367_ uint256 amount = token.balanceOf(address(this));\n2471-new_variable-368-368", method="withdrawForeignTokens(address tokenAddress)", type_label=new_variable];
2484 [label="368_ return token.transfer(owner, amount);\n2484-return-369-369", method="withdrawForeignTokens(address tokenAddress)", type_label=return];
2493 [label="370_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n2493-function_definition-371-374", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
2501 [label="371_ uint8 vundflw1=0;\n2501-new_variable-372-372", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
2507 [label="372_ vundflw1 = vundflw1 + p_intou36;\n2507-expression_statement-373-373", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
2513 [label="374_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2513-function_definition-375-378", method="bug_intou27()", type_label=function_definition];
2517 [label="375_ uint8 vundflw =0;\n2517-new_variable-376-376", method="bug_intou27()", type_label=new_variable];
2523 [label="376_ vundflw = vundflw -10;\n2523-expression_statement-377-377", method="bug_intou27()", type_label=expression_statement];
2543 [label="379_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n2543-function_definition-380-383", method="bug_intou31()", type_label=function_definition];
2547 [label="380_ uint8 vundflw =0;\n2547-new_variable-381-381", method="bug_intou31()", type_label=new_variable];
2553 [label="381_ vundflw = vundflw -10;\n2553-expression_statement-382-382", method="bug_intou31()", type_label=expression_statement];
2573 [label="384_ mapping(address => uint) public lockTime_intou13;\n2573-new_variable-385-385", method="", type_label=new_variable];
2580 [label="385_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n2580-function_definition-386-388", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
2588 [label="386_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n2588-expression_statement-387-387", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
2596 [label="388_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n2596-function_definition-389-393", method="withdraw_intou13()", type_label=function_definition];
2600 [label="389_ require(now > lockTime_intou13[msg.sender]);\n2600-expression_statement-390-390", method="withdraw_intou13()", type_label=expression_statement];
2611 [label="390_ uint transferValue_intou13 = 10;\n2611-new_variable-391-391", method="withdraw_intou13()", type_label=new_variable];
2617 [label="391_ msg.sender.transfer(transferValue_intou13);\n2617-expression_statement-392-392", method="withdraw_intou13()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
50 -> 68  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
68 -> 75  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
81 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
99 -> 106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 136  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
154 -> 162  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
162 -> 168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
193 -> 209  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
209 -> 222  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
222 -> 230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
236 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
263 -> 271  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
279 -> 283  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
283 -> 294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
294 -> 300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
331 -> 347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
347 -> 360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
360 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
368 -> 374  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
374 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
399 -> 415  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
415 -> 428  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
428 -> 436  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
436 -> 442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
442 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
465 -> 473  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
473 -> 479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
485 -> 489  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
489 -> 495  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
523 -> 529  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
552 -> 557  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
564 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
580 -> 584  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
584 -> 595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
595 -> 601  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
628 -> 632  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
632 -> 638  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
647 -> 656  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
658 -> 668  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
694 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
710 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 725  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
725 -> 731  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
754 -> 760  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
766 -> 782  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
782 -> 795  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
795 -> 803  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
803 -> 809  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
809 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
812 -> 820  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
827 -> 835  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
843 -> 847  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
847 -> 858  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
858 -> 864  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
873 -> 880  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
886 -> 902  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
902 -> 915  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
915 -> 923  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
923 -> 929  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
929 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
939 -> 947  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
947 -> 953  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
965 -> 973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
973 -> 979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
985 -> 990  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
997 -> 1005  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1013 -> 1017  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1017 -> 1028  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1028 -> 1034  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1043 -> 1049  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1058 -> 1062  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1062 -> 1068  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1074 -> 1081  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1088 -> 1101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1105 -> 1109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1131 -> 1147  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1147 -> 1160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1160 -> 1168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1168 -> 1174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1174 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1177 -> 1186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1186 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1195 -> 1203  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1211 -> 1215  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1215 -> 1226  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1226 -> 1232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1241 -> 1259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1270 -> 1278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1286 -> 1290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1290 -> 1301  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1301 -> 1307  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1316 -> 1322  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1328 -> 1332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1332 -> 1338  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1344 -> 1357  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1357 -> 1367  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1357 -> 1383  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3988 -> 1404  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1367 -> 3988  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1367 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1383 -> 1388  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1383 -> 3988  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1388 -> 3988  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1388 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1404 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1413 -> 1421  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1429 -> 1433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1433 -> 1444  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1444 -> 1450  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1463 -> 1474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1474 -> 1494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1494 -> 1501  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1519 -> 1527  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1535 -> 1539  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1539 -> 1550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1550 -> 1556  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1565 -> 1578  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1578 -> 1594  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1578 -> 4209  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4209 -> 1603  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1591 -> 1578  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1594 -> 1591  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1603 -> 1607  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1607 -> 1613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1619 -> 1633  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1633 -> 1644  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1644 -> 1660  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1644 -> 4275  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4275 -> 1671  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1657 -> 1644  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1660 -> 1657  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1677 -> 1693  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1693 -> 1706  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1706 -> 1714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1714 -> 1720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1720 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1723 -> 1739  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1739 -> 1749  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1749 -> 1758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1758 -> 1771  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1792 -> 1800  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1800 -> 1806  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1812 -> 1825  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1825 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1829 -> 1837  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1837 -> 1843  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1849 -> 1872  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1872 -> 1883  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1883 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1892 -> 1908  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1908 -> 1921  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1921 -> 1929  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1929 -> 1935  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1935 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1938 -> 1965  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1965 -> 1978  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1978 -> 1999  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1999 -> 2008  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2008 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2011 -> 2019  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2019 -> 2025  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2031 -> 2048  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2048 -> 2067  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2087 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2090 -> 2094  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2094 -> 2100  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2106 -> 2123  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2123 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2129 -> 2133  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2133 -> 2139  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2145 -> 2159  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2193 -> 2209  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2209 -> 2222  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2222 -> 2230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2230 -> 2236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2236 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2239 -> 2245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2245 -> 2255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2268 -> 2284  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2284 -> 2297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2297 -> 2305  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2305 -> 2311  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2311 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2314 -> 2324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2324 -> 2335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2335 -> 2343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2343 -> 2356  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2371 -> 2379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2379 -> 2385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2391 -> 2408  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2408 -> 2418  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2418 -> 2429  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2429 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2431 -> 2435  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2435 -> 2441  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2447 -> 2461  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2461 -> 2471  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2471 -> 2484  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2484 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2493 -> 2501  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2501 -> 2507  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2513 -> 2517  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2517 -> 2523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2543 -> 2547  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2547 -> 2553  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2580 -> 2588  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2596 -> 2600  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2600 -> 2611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2611 -> 2617  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
