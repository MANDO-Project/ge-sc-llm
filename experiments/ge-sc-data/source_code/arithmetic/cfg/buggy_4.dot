digraph  {
15 [label="2_ function totalSupply() external view returns (uint256);\n15-function_definition-3-3", method="totalSupply()", type_label=function_definition];
23 [label="3_ function balanceOf(address who) external view returns (uint256);\n23-function_definition-4-4", method="balanceOf(address who)", type_label=function_definition];
35 [label="4_ function transfer(address to, uint256 value) external returns (bool);\n35-function_definition-5-5", method="transfer(address to,uint256 value)", type_label=function_definition];
70 [label="8_ mapping(address => uint) balances_intou26;\n70-new_variable-9-9", method="", type_label=new_variable];
76 [label="9_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n76-function_definition-10-15", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
92 [label="10_ require(balances_intou26[msg.sender] - _value >= 0);\n92-expression_statement-11-11", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
105 [label="11_ balances_intou26[msg.sender] -= _value;\n105-expression_statement-12-12", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
113 [label="12_ balances_intou26[_to] += _value;\n113-expression_statement-13-13", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
119 [label="13_ return true;\n119-return-14-14", method="transfer_intou26(address _to,uint _value)", type_label=return];
122 [label="15_ string public name = \"PHO\";\n122-new_variable-16-16", method="", type_label=new_variable];
129 [label="16_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n129-function_definition-17-20", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
137 [label="17_ uint8 vundflw1=0;\n137-new_variable-18-18", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
143 [label="18_ vundflw1 = vundflw1 + p_intou20;\n143-expression_statement-19-19", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
149 [label="20_ string public symbol = \"PHO\";\n149-new_variable-21-21", method="", type_label=new_variable];
156 [label="21_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n156-function_definition-22-25", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
164 [label="22_ uint8 vundflw1=0;\n164-new_variable-23-23", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
170 [label="23_ vundflw1 = vundflw1 + p_intou32;\n170-expression_statement-24-24", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
176 [label="25_ uint8 public decimals = 18;\n176-new_variable-26-26", method="", type_label=new_variable];
182 [label="26_ mapping(address => uint) balances_intou38;\n182-new_variable-27-27", method="", type_label=new_variable];
188 [label="27_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n188-function_definition-28-33", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
204 [label="28_ require(balances_intou38[msg.sender] - _value >= 0);\n204-expression_statement-29-29", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
217 [label="29_ balances_intou38[msg.sender] -= _value;\n217-expression_statement-30-30", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
225 [label="30_ balances_intou38[_to] += _value;\n225-expression_statement-31-31", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
231 [label="31_ return true;\n231-return-32-32", method="transfer_intou38(address _to,uint _value)", type_label=return];
234 [label="33_ uint256 saleAmount;\n234-new_variable-34-34", method="", type_label=new_variable];
238 [label="34_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n238-function_definition-35-38", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
246 [label="35_ uint8 vundflw1=0;\n246-new_variable-36-36", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
252 [label="36_ vundflw1 = vundflw1 + p_intou4;\n252-expression_statement-37-37", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
258 [label="38_ uint256 evtAmount;\n258-new_variable-39-39", method="", type_label=new_variable];
262 [label="39_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n262-function_definition-40-43", method="bug_intou7()", type_label=function_definition];
266 [label="40_ uint8 vundflw =0;\n266-new_variable-41-41", method="bug_intou7()", type_label=new_variable];
272 [label="41_ vundflw = vundflw -10;\n272-expression_statement-42-42", method="bug_intou7()", type_label=expression_statement];
278 [label="43_ uint256 teamAmount;\n278-new_variable-44-44", method="", type_label=new_variable];
282 [label="44_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n282-function_definition-45-48", method="bug_intou23()", type_label=function_definition];
286 [label="45_ uint8 vundflw =0;\n286-new_variable-46-46", method="bug_intou23()", type_label=new_variable];
292 [label="46_ vundflw = vundflw -10;\n292-expression_statement-47-47", method="bug_intou23()", type_label=expression_statement];
298 [label="48_ uint256 _totalSupply;\n298-new_variable-49-49", method="", type_label=new_variable];
302 [label="49_ mapping(address => uint) balances_intou14;\n302-new_variable-50-50", method="", type_label=new_variable];
308 [label="50_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n308-function_definition-51-56", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
324 [label="51_ require(balances_intou14[msg.sender] - _value >= 0);\n324-expression_statement-52-52", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
337 [label="52_ balances_intou14[msg.sender] -= _value;\n337-expression_statement-53-53", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
345 [label="53_ balances_intou14[_to] += _value;\n345-expression_statement-54-54", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
351 [label="54_ return true;\n351-return-55-55", method="transfer_intou14(address _to,uint _value)", type_label=return];
354 [label="56_ mapping(address => uint256) balances;\n354-new_variable-57-57", method="", type_label=new_variable];
360 [label="57_ mapping(address => uint) balances_intou30;\n360-new_variable-58-58", method="", type_label=new_variable];
366 [label="58_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n366-function_definition-59-64", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
382 [label="59_ require(balances_intou30[msg.sender] - _value >= 0);\n382-expression_statement-60-60", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
395 [label="60_ balances_intou30[msg.sender] -= _value;\n395-expression_statement-61-61", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
403 [label="61_ balances_intou30[_to] += _value;\n403-expression_statement-62-62", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
409 [label="62_ return true;\n409-return-63-63", method="transfer_intou30(address _to,uint _value)", type_label=return];
412 [label="64_ address public owner;\n412-new_variable-65-65", method="", type_label=new_variable];
417 [label="65_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n417-function_definition-66-69", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
425 [label="66_ uint8 vundflw1=0;\n425-new_variable-67-67", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
431 [label="67_ vundflw1 = vundflw1 + p_intou8;\n431-expression_statement-68-68", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
437 [label="69_ address public sale;\n437-new_variable-70-70", method="", type_label=new_variable];
442 [label="70_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n442-function_definition-71-74", method="bug_intou39()", type_label=function_definition];
446 [label="71_ uint8 vundflw =0;\n446-new_variable-72-72", method="bug_intou39()", type_label=new_variable];
452 [label="72_ vundflw = vundflw -10;\n452-expression_statement-73-73", method="bug_intou39()", type_label=expression_statement];
458 [label="74_ address public evt;\n458-new_variable-75-75", method="", type_label=new_variable];
463 [label="75_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n463-function_definition-76-79", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
471 [label="76_ uint8 vundflw1=0;\n471-new_variable-77-77", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
477 [label="77_ vundflw1 = vundflw1 + p_intou36;\n477-expression_statement-78-78", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
483 [label="79_ address public team;\n483-new_variable-80-80", method="", type_label=new_variable];
488 [label="80_ modifier isOwner {\n        require(owner == msg.sender);\n        _;\n    }\n488-expression_statement-81-84", method="", type_label=expression_statement];
491 [label="81_ require(owner == msg.sender);\n491-expression_statement-82-82", method="", type_label=expression_statement];
500 [label="82_ _;\n500-expression_statement-83-83", method="", type_label=expression_statement];
504 [label="85_ owner   = msg.sender;\n504-expression_statement-86-86", method="", type_label=expression_statement];
510 [label="86_ sale    = 0x071F73f4D0befd4406901AACE6D5FFD6D297c561;\n510-expression_statement-87-87", method="", type_label=expression_statement];
514 [label="87_ evt     = 0x76535ca5BF1d33434A302e5A464Df433BB1F80F6;\n514-expression_statement-88-88", method="", type_label=expression_statement];
518 [label="88_ team    = 0xD7EC5D8697e4c83Dc33D781d19dc2910fB165D5C;\n518-expression_statement-89-89", method="", type_label=expression_statement];
522 [label="89_ saleAmount    = toWei(1000000000);\n522-expression_statement-90-90", method="", type_label=expression_statement];
529 [label="90_ evtAmount     = toWei(200000000);\n529-expression_statement-91-91", method="", type_label=expression_statement];
536 [label="91_ teamAmount    = toWei(800000000);\n536-expression_statement-92-92", method="", type_label=expression_statement];
543 [label="92_ _totalSupply  = toWei(2000000000);\n543-expression_statement-93-93", method="", type_label=expression_statement];
550 [label="93_ require(_totalSupply == saleAmount + evtAmount + teamAmount );\n550-expression_statement-94-94", method="", type_label=expression_statement];
561 [label="94_ balances[owner] = _totalSupply;\n561-expression_statement-95-95", method="", type_label=expression_statement];
579 [label="96_ transfer(sale, saleAmount);\n579-expression_statement-97-97", method="", type_label=expression_statement];
586 [label="97_ transfer(evt, evtAmount);\n586-expression_statement-98-98", method="", type_label=expression_statement];
593 [label="98_ transfer(team, teamAmount);\n593-expression_statement-99-99", method="", type_label=expression_statement];
600 [label="99_ require(balances[owner] == 0);\n600-expression_statement-100-100", method="", type_label=expression_statement];
609 [label="101_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n609-function_definition-102-105", method="bug_intou35()", type_label=function_definition];
613 [label="102_ uint8 vundflw =0;\n613-new_variable-103-103", method="bug_intou35()", type_label=new_variable];
619 [label="103_ vundflw = vundflw -10;\n619-expression_statement-104-104", method="bug_intou35()", type_label=expression_statement];
625 [label="105_ function totalSupply() public view returns (uint) {\n        return _totalSupply;\n    }\n625-function_definition-106-108", method="totalSupply()", type_label=function_definition];
634 [label="106_ return _totalSupply;\n634-return-107-107", method="totalSupply()", type_label=return];
636 [label="108_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n636-function_definition-109-112", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
644 [label="109_ uint8 vundflw1=0;\n644-new_variable-110-110", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
650 [label="110_ vundflw1 = vundflw1 + p_intou40;\n650-expression_statement-111-111", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
656 [label="112_ function balanceOf(address who) public view returns (uint256) {\n        return balances[who];\n    }\n656-function_definition-113-115", method="balanceOf(address who)", type_label=function_definition];
669 [label="113_ return balances[who];\n669-return-114-114", method="balanceOf(address who)", type_label=return];
673 [label="115_ mapping(address => uint) public lockTime_intou33;\n673-new_variable-116-116", method="", type_label=new_variable];
680 [label="116_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n680-function_definition-117-119", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
688 [label="117_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n688-expression_statement-118-118", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
696 [label="119_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n696-function_definition-120-124", method="withdraw_intou33()", type_label=function_definition];
700 [label="120_ require(now > lockTime_intou33[msg.sender]);\n700-expression_statement-121-121", method="withdraw_intou33()", type_label=expression_statement];
711 [label="121_ uint transferValue_intou33 = 10;\n711-new_variable-122-122", method="withdraw_intou33()", type_label=new_variable];
717 [label="122_ msg.sender.transfer(transferValue_intou33);\n717-expression_statement-123-123", method="withdraw_intou33()", type_label=expression_statement];
726 [label="124_ function transfer(address to, uint256 value) public returns (bool success) {\n        require(msg.sender != to);\n        require(value > 0);\n        require( balances[msg.sender] >= value );\n        require( balances[to] + value >= balances[to] );\n        if(msg.sender == team) {\n            require(now >= 1589036400);      \n            if(balances[msg.sender] - value < toWei(600000000))\n                require(now >= 1620572400);      \n            if(balances[msg.sender] - value < toWei(400000000))\n                require(now >= 1652108400);      \n            if(balances[msg.sender] - value < toWei(200000000))\n                require(now >= 1683644400);      \n        }\n        balances[msg.sender] -= value;\n        balances[to] += value;\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n726-function_definition-125-143", method="transfer(address to,uint256 value)", type_label=function_definition];
743 [label="125_ require(msg.sender != to);\n743-expression_statement-126-126", method="transfer(address to,uint256 value)", type_label=expression_statement];
752 [label="126_ require(value > 0);\n752-expression_statement-127-127", method="transfer(address to,uint256 value)", type_label=expression_statement];
759 [label="127_ require( balances[msg.sender] >= value );\n759-expression_statement-128-128", method="transfer(address to,uint256 value)", type_label=expression_statement];
770 [label="128_ require( balances[to] + value >= balances[to] );\n770-expression_statement-129-129", method="transfer(address to,uint256 value)", type_label=expression_statement];
783 [label="129_ if_msg.sender == team\n783-if-130-138", method="transfer(address to,uint256 value)", type_label=if];
1819 [label="129_ end_if", method="transfer(address to,uint256 value)", type_label=end_if];
790 [label="130_ require(now >= 1589036400);\n790-expression_statement-131-131", method="transfer(address to,uint256 value)", type_label=expression_statement];
797 [label="131_ if\n797-if-132-133", method="transfer(address to,uint256 value)", type_label=if];
1833 [label="131_ end_if", method="transfer(address to,uint256 value)", type_label=end_if];
810 [label="132_ require(now >= 1620572400);\n810-expression_statement-133-133", method="transfer(address to,uint256 value)", type_label=expression_statement];
817 [label="133_ if\n817-if-134-135", method="transfer(address to,uint256 value)", type_label=if];
1853 [label="133_ end_if", method="transfer(address to,uint256 value)", type_label=end_if];
830 [label="134_ require(now >= 1652108400);\n830-expression_statement-135-135", method="transfer(address to,uint256 value)", type_label=expression_statement];
837 [label="135_ if\n837-if-136-137", method="transfer(address to,uint256 value)", type_label=if];
1873 [label="135_ end_if", method="transfer(address to,uint256 value)", type_label=end_if];
850 [label="136_ require(now >= 1683644400);\n850-expression_statement-137-137", method="transfer(address to,uint256 value)", type_label=expression_statement];
857 [label="138_ balances[msg.sender] -= value;\n857-expression_statement-139-139", method="transfer(address to,uint256 value)", type_label=expression_statement];
865 [label="139_ balances[to] += value;\n865-expression_statement-140-140", method="transfer(address to,uint256 value)", type_label=expression_statement];
881 [label="141_ return true;\n881-return-142-142", method="transfer(address to,uint256 value)", type_label=return];
884 [label="143_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n884-function_definition-144-147", method="bug_intou27()", type_label=function_definition];
888 [label="144_ uint8 vundflw =0;\n888-new_variable-145-145", method="bug_intou27()", type_label=new_variable];
894 [label="145_ vundflw = vundflw -10;\n894-expression_statement-146-146", method="bug_intou27()", type_label=expression_statement];
900 [label="147_ function burnCoins(uint256 value) public {\n        require(balances[msg.sender] >= value);\n        require(_totalSupply >= value);\n        balances[msg.sender] -= value;\n        _totalSupply -= value;\n        emit Transfer(msg.sender, address(0), value);\n    }\n900-function_definition-148-154", method="burnCoins(uint256 value)", type_label=function_definition];
908 [label="148_ require(balances[msg.sender] >= value);\n908-expression_statement-149-149", method="burnCoins(uint256 value)", type_label=expression_statement];
919 [label="149_ require(_totalSupply >= value);\n919-expression_statement-150-150", method="burnCoins(uint256 value)", type_label=expression_statement];
926 [label="150_ balances[msg.sender] -= value;\n926-expression_statement-151-151", method="burnCoins(uint256 value)", type_label=expression_statement];
934 [label="151_ _totalSupply -= value;\n934-expression_statement-152-152", method="burnCoins(uint256 value)", type_label=expression_statement];
950 [label="154_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n950-function_definition-155-158", method="bug_intou31()", type_label=function_definition];
954 [label="155_ uint8 vundflw =0;\n954-new_variable-156-156", method="bug_intou31()", type_label=new_variable];
960 [label="156_ vundflw = vundflw -10;\n960-expression_statement-157-157", method="bug_intou31()", type_label=expression_statement];
966 [label="158_ function toWei(uint256 value) private view returns (uint256) {\n        return value * (10 ** uint256(decimals));\n    }\n966-function_definition-159-161", method="toWei(uint256 value)", type_label=function_definition];
979 [label="159_ return value * (10 ** uint256(decimals));\n979-return-160-160", method="toWei(uint256 value)", type_label=return];
988 [label="161_ mapping(address => uint) public lockTime_intou13;\n988-new_variable-162-162", method="", type_label=new_variable];
995 [label="162_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n995-function_definition-163-165", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
1003 [label="163_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n1003-expression_statement-164-164", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
1011 [label="165_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n1011-function_definition-166-170", method="withdraw_intou13()", type_label=function_definition];
1015 [label="166_ require(now > lockTime_intou13[msg.sender]);\n1015-expression_statement-167-167", method="withdraw_intou13()", type_label=expression_statement];
1026 [label="167_ uint transferValue_intou13 = 10;\n1026-new_variable-168-168", method="withdraw_intou13()", type_label=new_variable];
1032 [label="168_ msg.sender.transfer(transferValue_intou13);\n1032-expression_statement-169-169", method="withdraw_intou13()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
76 -> 92  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
92 -> 105  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
105 -> 113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
113 -> 119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
119 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
129 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
137 -> 143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 164  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
164 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
176 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
188 -> 204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
204 -> 217  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
217 -> 225  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
225 -> 231  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
231 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
238 -> 246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
246 -> 252  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
262 -> 266  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
266 -> 272  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
282 -> 286  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
286 -> 292  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
298 -> 302  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
308 -> 324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
324 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
337 -> 345  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
345 -> 351  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
354 -> 360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
366 -> 382  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
382 -> 395  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
395 -> 403  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
403 -> 409  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
409 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
417 -> 425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
442 -> 446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
446 -> 452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
463 -> 471  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
471 -> 477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
483 -> 488  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
491 -> 500  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
504 -> 510  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
510 -> 514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
514 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
518 -> 522  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
522 -> 529  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
529 -> 536  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
536 -> 543  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
543 -> 550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
550 -> 561  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
579 -> 586  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
586 -> 593  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
593 -> 600  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
609 -> 613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
613 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
625 -> 634  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
634 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
636 -> 644  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
644 -> 650  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
656 -> 669  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
669 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
680 -> 688  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
696 -> 700  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
700 -> 711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
711 -> 717  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
726 -> 743  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
743 -> 752  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
752 -> 759  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
759 -> 770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
770 -> 783  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
783 -> 790  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
783 -> 1819  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
790 -> 797  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
797 -> 810  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
797 -> 1833  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1833 -> 817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
810 -> 1833  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
817 -> 830  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
817 -> 1853  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1853 -> 837  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
830 -> 1853  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
837 -> 850  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
837 -> 1873  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1873 -> 857  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
850 -> 1873  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
857 -> 865  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
881 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
884 -> 888  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
888 -> 894  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
900 -> 908  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
908 -> 919  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
919 -> 926  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
926 -> 934  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
950 -> 954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
954 -> 960  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
966 -> 979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
979 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
995 -> 1003  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1011 -> 1015  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1015 -> 1026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1026 -> 1032  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
