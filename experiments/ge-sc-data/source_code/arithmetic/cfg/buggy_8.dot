digraph  {
15 [label="2_ mapping(address => uint) public lockTime_intou21;\n15-new_variable-3-3", method="", type_label=new_variable];
22 [label="3_ function increaseLockTime_intou21(uint _secondsToIncrease) public {\n        lockTime_intou21[msg.sender] += _secondsToIncrease;   \n    }\n22-function_definition-4-6", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=function_definition];
30 [label="4_ lockTime_intou21[msg.sender] += _secondsToIncrease;\n30-expression_statement-5-5", method="increaseLockTime_intou21(uint _secondsToIncrease)", type_label=expression_statement];
38 [label="6_ function withdraw_intou21() public {\n        require(now > lockTime_intou21[msg.sender]);    \n        uint transferValue_intou21 = 10;           \n        msg.sender.transfer(transferValue_intou21);\n    }\n38-function_definition-7-11", method="withdraw_intou21()", type_label=function_definition];
42 [label="7_ require(now > lockTime_intou21[msg.sender]);\n42-expression_statement-8-8", method="withdraw_intou21()", type_label=expression_statement];
53 [label="8_ uint transferValue_intou21 = 10;\n53-new_variable-9-9", method="withdraw_intou21()", type_label=new_variable];
59 [label="9_ msg.sender.transfer(transferValue_intou21);\n59-expression_statement-10-10", method="withdraw_intou21()", type_label=expression_statement];
68 [label="11_ address public owner;\n68-new_variable-12-12", method="", type_label=new_variable];
73 [label="12_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n73-function_definition-13-16", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
81 [label="13_ uint8 vundflw1=0;\n81-new_variable-14-14", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
87 [label="14_ vundflw1 = vundflw1 + p_intou40;\n87-expression_statement-15-15", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
105 [label="18_ owner = msg.sender;\n105-expression_statement-19-19", method="", type_label=expression_statement];
111 [label="20_ mapping(address => uint) public lockTime_intou9;\n111-new_variable-21-21", method="", type_label=new_variable];
118 [label="21_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n118-function_definition-22-24", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
126 [label="22_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n126-expression_statement-23-23", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
134 [label="24_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n134-function_definition-25-29", method="withdraw_intou9()", type_label=function_definition];
138 [label="25_ require(now > lockTime_intou9[msg.sender]);\n138-expression_statement-26-26", method="withdraw_intou9()", type_label=expression_statement];
149 [label="26_ uint transferValue_intou9 = 10;\n149-new_variable-27-27", method="withdraw_intou9()", type_label=new_variable];
155 [label="27_ msg.sender.transfer(transferValue_intou9);\n155-expression_statement-28-28", method="withdraw_intou9()", type_label=expression_statement];
164 [label="29_ modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n164-expression_statement-30-33", method="", type_label=expression_statement];
167 [label="30_ require(msg.sender == owner);\n167-expression_statement-31-31", method="", type_label=expression_statement];
176 [label="31_ _;\n176-expression_statement-32-32", method="", type_label=expression_statement];
178 [label="33_ function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n178-function_definition-34-38", method="transferOwnership(address newOwner)", type_label=function_definition];
185 [label="33_ onlyOwner\n185-expression_statement-34-34", method="transferOwnership(address newOwner)", type_label=expression_statement];
188 [label="34_ require(newOwner != address(0));\n188-expression_statement-35-35", method="transferOwnership(address newOwner)", type_label=expression_statement];
203 [label="36_ owner = newOwner;\n203-expression_statement-37-37", method="transferOwnership(address newOwner)", type_label=expression_statement];
207 [label="38_ mapping(address => uint) public lockTime_intou25;\n207-new_variable-39-39", method="", type_label=new_variable];
214 [label="39_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n214-function_definition-40-42", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
222 [label="40_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n222-expression_statement-41-41", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
230 [label="42_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n230-function_definition-43-47", method="withdraw_intou25()", type_label=function_definition];
234 [label="43_ require(now > lockTime_intou25[msg.sender]);\n234-expression_statement-44-44", method="withdraw_intou25()", type_label=expression_statement];
245 [label="44_ uint transferValue_intou25 = 10;\n245-new_variable-45-45", method="withdraw_intou25()", type_label=new_variable];
251 [label="45_ msg.sender.transfer(transferValue_intou25);\n251-expression_statement-46-46", method="withdraw_intou25()", type_label=expression_statement];
263 [label="49_ mapping(address => uint) balances_intou10;\n263-new_variable-50-50", method="", type_label=new_variable];
269 [label="50_ function transfer_intou10(address _to, uint _value) public returns (bool) {\n    require(balances_intou10[msg.sender] - _value >= 0);   \n    balances_intou10[msg.sender] -= _value;   \n    balances_intou10[_to] += _value;   \n    return true;\n  }\n269-function_definition-51-56", method="transfer_intou10(address _to,uint _value)", type_label=function_definition];
285 [label="51_ require(balances_intou10[msg.sender] - _value >= 0);\n285-expression_statement-52-52", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
298 [label="52_ balances_intou10[msg.sender] -= _value;\n298-expression_statement-53-53", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
306 [label="53_ balances_intou10[_to] += _value;\n306-expression_statement-54-54", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
312 [label="54_ return true;\n312-return-55-55", method="transfer_intou10(address _to,uint _value)", type_label=return];
315 [label="56_ string public name;\n315-new_variable-57-57", method="", type_label=new_variable];
320 [label="57_ mapping(address => uint) balances_intou22;\n320-new_variable-58-58", method="", type_label=new_variable];
326 [label="58_ function transfer_intou22(address _to, uint _value) public returns (bool) {\n    require(balances_intou22[msg.sender] - _value >= 0);   \n    balances_intou22[msg.sender] -= _value;   \n    balances_intou22[_to] += _value;   \n    return true;\n  }\n326-function_definition-59-64", method="transfer_intou22(address _to,uint _value)", type_label=function_definition];
342 [label="59_ require(balances_intou22[msg.sender] - _value >= 0);\n342-expression_statement-60-60", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
355 [label="60_ balances_intou22[msg.sender] -= _value;\n355-expression_statement-61-61", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
363 [label="61_ balances_intou22[_to] += _value;\n363-expression_statement-62-62", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
369 [label="62_ return true;\n369-return-63-63", method="transfer_intou22(address _to,uint _value)", type_label=return];
372 [label="64_ string public symbol;\n372-new_variable-65-65", method="", type_label=new_variable];
377 [label="65_ function bug_intou12(uint8 p_intou12) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou12;    \n}\n377-function_definition-66-69", method="bug_intou12(uint8 p_intou12)", type_label=function_definition];
385 [label="66_ uint8 vundflw1=0;\n385-new_variable-67-67", method="bug_intou12(uint8 p_intou12)", type_label=new_variable];
391 [label="67_ vundflw1 = vundflw1 + p_intou12;\n391-expression_statement-68-68", method="bug_intou12(uint8 p_intou12)", type_label=expression_statement];
397 [label="69_ uint8 public decimals = 18;\n397-new_variable-70-70", method="", type_label=new_variable];
403 [label="70_ function bug_intou11() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n403-function_definition-71-74", method="bug_intou11()", type_label=function_definition];
407 [label="71_ uint8 vundflw =0;\n407-new_variable-72-72", method="bug_intou11()", type_label=new_variable];
413 [label="72_ vundflw = vundflw -10;\n413-expression_statement-73-73", method="bug_intou11()", type_label=expression_statement];
419 [label="74_ uint256 public totalSupply;\n419-new_variable-75-75", method="", type_label=new_variable];
424 [label="75_ mapping(address => uint) public lockTime_intou1;\n424-new_variable-76-76", method="", type_label=new_variable];
431 [label="76_ function increaseLockTime_intou1(uint _secondsToIncrease) public {\n        lockTime_intou1[msg.sender] += _secondsToIncrease;   \n    }\n431-function_definition-77-79", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=function_definition];
439 [label="77_ lockTime_intou1[msg.sender] += _secondsToIncrease;\n439-expression_statement-78-78", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=expression_statement];
447 [label="79_ function withdraw_ovrflow1() public {\n        require(now > lockTime_intou1[msg.sender]);    \n        uint transferValue_intou1 = 10;           \n        msg.sender.transfer(transferValue_intou1);\n    }\n447-function_definition-80-84", method="withdraw_ovrflow1()", type_label=function_definition];
451 [label="80_ require(now > lockTime_intou1[msg.sender]);\n451-expression_statement-81-81", method="withdraw_ovrflow1()", type_label=expression_statement];
462 [label="81_ uint transferValue_intou1 = 10;\n462-new_variable-82-82", method="withdraw_ovrflow1()", type_label=new_variable];
468 [label="82_ msg.sender.transfer(transferValue_intou1);\n468-expression_statement-83-83", method="withdraw_ovrflow1()", type_label=expression_statement];
477 [label="84_ mapping (address => uint256) public balanceOf;\n477-new_variable-85-85", method="", type_label=new_variable];
484 [label="85_ mapping(address => uint) balances_intou2;\n484-new_variable-86-86", method="", type_label=new_variable];
490 [label="86_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n490-function_definition-87-92", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
506 [label="87_ require(balances_intou2[msg.sender] - _value >= 0);\n506-expression_statement-88-88", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
519 [label="88_ balances_intou2[msg.sender] -= _value;\n519-expression_statement-89-89", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
527 [label="89_ balances_intou2[_to] += _value;\n527-expression_statement-90-90", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
533 [label="90_ return true;\n533-return-91-91", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
536 [label="92_ mapping (address => mapping (address => uint256)) public allowance;\n536-new_variable-93-93", method="", type_label=new_variable];
545 [label="93_ mapping(address => uint) public lockTime_intou33;\n545-new_variable-94-94", method="", type_label=new_variable];
552 [label="94_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n552-function_definition-95-97", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
560 [label="95_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n560-expression_statement-96-96", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
568 [label="97_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n568-function_definition-98-102", method="withdraw_intou33()", type_label=function_definition];
572 [label="98_ require(now > lockTime_intou33[msg.sender]);\n572-expression_statement-99-99", method="withdraw_intou33()", type_label=expression_statement];
583 [label="99_ uint transferValue_intou33 = 10;\n583-new_variable-100-100", method="withdraw_intou33()", type_label=new_variable];
589 [label="100_ msg.sender.transfer(transferValue_intou33);\n589-expression_statement-101-101", method="withdraw_intou33()", type_label=expression_statement];
612 [label="103_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n612-function_definition-104-107", method="bug_intou27()", type_label=function_definition];
616 [label="104_ uint8 vundflw =0;\n616-new_variable-105-105", method="bug_intou27()", type_label=new_variable];
622 [label="105_ vundflw = vundflw -10;\n622-expression_statement-106-106", method="bug_intou27()", type_label=expression_statement];
642 [label="108_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n642-function_definition-109-112", method="bug_intou31()", type_label=function_definition];
646 [label="109_ uint8 vundflw =0;\n646-new_variable-110-110", method="bug_intou31()", type_label=new_variable];
652 [label="110_ vundflw = vundflw -10;\n652-expression_statement-111-111", method="bug_intou31()", type_label=expression_statement];
682 [label="118_ totalSupply = initialSupply * 10 ** uint256(decimals);\n682-expression_statement-119-119", method="", type_label=expression_statement];
692 [label="119_ balanceOf[msg.sender] = totalSupply;\n692-expression_statement-120-120", method="", type_label=expression_statement];
700 [label="120_ name = tokenName;\n700-expression_statement-121-121", method="", type_label=expression_statement];
704 [label="121_ symbol = tokenSymbol;\n704-expression_statement-122-122", method="", type_label=expression_statement];
708 [label="123_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n708-function_definition-124-127", method="bug_intou19()", type_label=function_definition];
712 [label="124_ uint8 vundflw =0;\n712-new_variable-125-125", method="bug_intou19()", type_label=new_variable];
718 [label="125_ vundflw = vundflw -10;\n718-expression_statement-126-126", method="bug_intou19()", type_label=expression_statement];
724 [label="127_ function _transfer(address _from, address _to, uint _value) internal {\n        require(_to != address(0x0));\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        emit Transfer(_from, _to, _value);\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n724-function_definition-128-137", method="_transfer(address _from,address _to,uint _value)", type_label=function_definition];
740 [label="128_ require(_to != address(0x0));\n740-expression_statement-129-129", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
749 [label="129_ require(balanceOf[_from] >= _value);\n749-expression_statement-130-130", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
758 [label="130_ require(balanceOf[_to] + _value > balanceOf[_to]);\n758-expression_statement-131-131", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
771 [label="131_ uint previousBalances = balanceOf[_from] + balanceOf[_to];\n771-new_variable-132-132", method="_transfer(address _from,address _to,uint _value)", type_label=new_variable];
783 [label="132_ balanceOf[_from] -= _value;\n783-expression_statement-133-133", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
789 [label="133_ balanceOf[_to] += _value;\n789-expression_statement-134-134", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
803 [label="135_ assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n803-expression_statement-136-136", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
816 [label="137_ mapping(address => uint) balances_intou26;\n816-new_variable-138-138", method="", type_label=new_variable];
822 [label="138_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n822-function_definition-139-144", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
838 [label="139_ require(balances_intou26[msg.sender] - _value >= 0);\n838-expression_statement-140-140", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
851 [label="140_ balances_intou26[msg.sender] -= _value;\n851-expression_statement-141-141", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
859 [label="141_ balances_intou26[_to] += _value;\n859-expression_statement-142-142", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
865 [label="142_ return true;\n865-return-143-143", method="transfer_intou26(address _to,uint _value)", type_label=return];
868 [label="144_ function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n868-function_definition-145-148", method="transfer(address _to,uint256 _value)", type_label=function_definition];
885 [label="145_ _transfer(msg.sender, _to, _value);\n885-expression_statement-146-146", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
896 [label="146_ return true;\n896-return-147-147", method="transfer(address _to,uint256 _value)", type_label=return];
899 [label="148_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n899-function_definition-149-152", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
907 [label="149_ uint8 vundflw1=0;\n907-new_variable-150-150", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
913 [label="150_ vundflw1 = vundflw1 + p_intou20;\n913-expression_statement-151-151", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
919 [label="152_ function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);      \n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n919-function_definition-153-158", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
940 [label="153_ require(_value <= allowance[_from][msg.sender]);\n940-expression_statement-154-154", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
953 [label="154_ allowance[_from][msg.sender] -= _value;\n953-expression_statement-155-155", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
963 [label="155_ _transfer(_from, _to, _value);\n963-expression_statement-156-156", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
972 [label="156_ return true;\n972-return-157-157", method="transferFrom(address _from,address _to,uint256 _value)", type_label=return];
975 [label="158_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n975-function_definition-159-162", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
983 [label="159_ uint8 vundflw1=0;\n983-new_variable-160-160", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
989 [label="160_ vundflw1 = vundflw1 + p_intou32;\n989-expression_statement-161-161", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
995 [label="162_ function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n995-function_definition-163-168", method="approve(address _spender,uint256 _value)", type_label=function_definition];
1012 [label="164_ allowance[msg.sender][_spender] = _value;\n1012-expression_statement-165-165", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
1032 [label="166_ return true;\n1032-return-167-167", method="approve(address _spender,uint256 _value)", type_label=return];
1035 [label="168_ mapping(address => uint) balances_intou38;\n1035-new_variable-169-169", method="", type_label=new_variable];
1041 [label="169_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n1041-function_definition-170-175", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
1057 [label="170_ require(balances_intou38[msg.sender] - _value >= 0);\n1057-expression_statement-171-171", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1070 [label="171_ balances_intou38[msg.sender] -= _value;\n1070-expression_statement-172-172", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1078 [label="172_ balances_intou38[_to] += _value;\n1078-expression_statement-173-173", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
1084 [label="173_ return true;\n1084-return-174-174", method="transfer_intou38(address _to,uint _value)", type_label=return];
1087 [label="175_ function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);    \n        balanceOf[msg.sender] -= _value;             \n        totalSupply -= _value;                       \n        emit Burn(msg.sender, _value);\n        return true;\n    }\n1087-function_definition-176-182", method="burn(uint256 _value)", type_label=function_definition];
1100 [label="176_ require(balanceOf[msg.sender] >= _value);\n1100-expression_statement-177-177", method="burn(uint256 _value)", type_label=expression_statement];
1111 [label="177_ balanceOf[msg.sender] -= _value;\n1111-expression_statement-178-178", method="burn(uint256 _value)", type_label=expression_statement];
1119 [label="178_ totalSupply -= _value;\n1119-expression_statement-179-179", method="burn(uint256 _value)", type_label=expression_statement];
1131 [label="180_ return true;\n1131-return-181-181", method="burn(uint256 _value)", type_label=return];
1134 [label="182_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n1134-function_definition-183-186", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
1142 [label="183_ uint8 vundflw1=0;\n1142-new_variable-184-184", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
1148 [label="184_ vundflw1 = vundflw1 + p_intou4;\n1148-expression_statement-185-185", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
1154 [label="186_ function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);                 \n        require(_value <= allowance[_from][msg.sender]);     \n        balanceOf[_from] -= _value;                          \n        allowance[_from][msg.sender] -= _value;              \n        totalSupply -= _value;                               \n        emit Burn(_from, _value);\n        return true;\n    }\n1154-function_definition-187-195", method="burnFrom(address _from,uint256 _value)", type_label=function_definition];
1171 [label="187_ require(balanceOf[_from] >= _value);\n1171-expression_statement-188-188", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1180 [label="188_ require(_value <= allowance[_from][msg.sender]);\n1180-expression_statement-189-189", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1193 [label="189_ balanceOf[_from] -= _value;\n1193-expression_statement-190-190", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1199 [label="190_ allowance[_from][msg.sender] -= _value;\n1199-expression_statement-191-191", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1209 [label="191_ totalSupply -= _value;\n1209-expression_statement-192-192", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1219 [label="193_ return true;\n1219-return-194-194", method="burnFrom(address _from,uint256 _value)", type_label=return];
1222 [label="195_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1222-function_definition-196-199", method="bug_intou7()", type_label=function_definition];
1226 [label="196_ uint8 vundflw =0;\n1226-new_variable-197-197", method="bug_intou7()", type_label=new_variable];
1232 [label="197_ vundflw = vundflw -10;\n1232-expression_statement-198-198", method="bug_intou7()", type_label=expression_statement];
1247 [label="201_ mapping(address => uint) public lockTime_intou17;\n1247-new_variable-202-202", method="", type_label=new_variable];
1254 [label="202_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n1254-function_definition-203-205", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
1262 [label="203_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n1262-expression_statement-204-204", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
1270 [label="205_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n1270-function_definition-206-210", method="withdraw_intou17()", type_label=function_definition];
1274 [label="206_ require(now > lockTime_intou17[msg.sender]);\n1274-expression_statement-207-207", method="withdraw_intou17()", type_label=expression_statement];
1285 [label="207_ uint transferValue_intou17 = 10;\n1285-new_variable-208-208", method="withdraw_intou17()", type_label=new_variable];
1291 [label="208_ msg.sender.transfer(transferValue_intou17);\n1291-expression_statement-209-209", method="withdraw_intou17()", type_label=expression_statement];
1300 [label="210_ uint256 public sellPrice;\n1300-new_variable-211-211", method="", type_label=new_variable];
1305 [label="211_ mapping(address => uint) public lockTime_intou37;\n1305-new_variable-212-212", method="", type_label=new_variable];
1312 [label="212_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n1312-function_definition-213-215", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
1320 [label="213_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n1320-expression_statement-214-214", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
1328 [label="215_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n1328-function_definition-216-220", method="withdraw_intou37()", type_label=function_definition];
1332 [label="216_ require(now > lockTime_intou37[msg.sender]);\n1332-expression_statement-217-217", method="withdraw_intou37()", type_label=expression_statement];
1343 [label="217_ uint transferValue_intou37 = 10;\n1343-new_variable-218-218", method="withdraw_intou37()", type_label=new_variable];
1349 [label="218_ msg.sender.transfer(transferValue_intou37);\n1349-expression_statement-219-219", method="withdraw_intou37()", type_label=expression_statement];
1358 [label="220_ uint256 public buyPrice;\n1358-new_variable-221-221", method="", type_label=new_variable];
1363 [label="221_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1363-function_definition-222-225", method="bug_intou3()", type_label=function_definition];
1367 [label="222_ uint8 vundflw =0;\n1367-new_variable-223-223", method="bug_intou3()", type_label=new_variable];
1373 [label="223_ vundflw = vundflw -10;\n1373-expression_statement-224-224", method="bug_intou3()", type_label=expression_statement];
1379 [label="225_ mapping (address => bool) public frozenAccount;\n1379-new_variable-226-226", method="", type_label=new_variable];
1386 [label="226_ mapping(address => uint) public lockTime_intou13;\n1386-new_variable-227-227", method="", type_label=new_variable];
1393 [label="227_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n1393-function_definition-228-230", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
1401 [label="228_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n1401-expression_statement-229-229", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
1409 [label="230_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n1409-function_definition-231-235", method="withdraw_intou13()", type_label=function_definition];
1413 [label="231_ require(now > lockTime_intou13[msg.sender]);\n1413-expression_statement-232-232", method="withdraw_intou13()", type_label=expression_statement];
1424 [label="232_ uint transferValue_intou13 = 10;\n1424-new_variable-233-233", method="withdraw_intou13()", type_label=new_variable];
1430 [label="233_ msg.sender.transfer(transferValue_intou13);\n1430-expression_statement-234-234", method="withdraw_intou13()", type_label=expression_statement];
1462 [label="240_ TokenERC20(initialSupply, tokenName, tokenSymbol)\n1462-expression_statement-241-241", method="", type_label=expression_statement];
1471 [label="241_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1471-function_definition-242-245", method="bug_intou23()", type_label=function_definition];
1475 [label="242_ uint8 vundflw =0;\n1475-new_variable-243-243", method="bug_intou23()", type_label=new_variable];
1481 [label="243_ vundflw = vundflw -10;\n1481-expression_statement-244-244", method="bug_intou23()", type_label=expression_statement];
1487 [label="245_ function _transfer(address _from, address _to, uint _value) internal {\n        require (_to != address(0x0));                           \n        require (balanceOf[_from] >= _value);                    \n        require (balanceOf[_to] + _value >= balanceOf[_to]);     \n        require(!frozenAccount[_from]);                          \n        require(!frozenAccount[_to]);                            \n        balanceOf[_from] -= _value;                              \n        balanceOf[_to] += _value;                                \n        emit Transfer(_from, _to, _value);\n    }\n1487-function_definition-246-255", method="_transfer(address _from,address _to,uint _value)", type_label=function_definition];
1503 [label="246_ require (_to != address(0x0));\n1503-expression_statement-247-247", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1512 [label="247_ require (balanceOf[_from] >= _value);\n1512-expression_statement-248-248", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1521 [label="248_ require (balanceOf[_to] + _value >= balanceOf[_to]);\n1521-expression_statement-249-249", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1534 [label="249_ require(!frozenAccount[_from]);\n1534-expression_statement-250-250", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1542 [label="250_ require(!frozenAccount[_to]);\n1542-expression_statement-251-251", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1550 [label="251_ balanceOf[_from] -= _value;\n1550-expression_statement-252-252", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1556 [label="252_ balanceOf[_to] += _value;\n1556-expression_statement-253-253", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1570 [label="255_ mapping(address => uint) balances_intou14;\n1570-new_variable-256-256", method="", type_label=new_variable];
1576 [label="256_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n1576-function_definition-257-262", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
1592 [label="257_ require(balances_intou14[msg.sender] - _value >= 0);\n1592-expression_statement-258-258", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1605 [label="258_ balances_intou14[msg.sender] -= _value;\n1605-expression_statement-259-259", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1613 [label="259_ balances_intou14[_to] += _value;\n1613-expression_statement-260-260", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1619 [label="260_ return true;\n1619-return-261-261", method="transfer_intou14(address _to,uint _value)", type_label=return];
1622 [label="262_ function mintToken(address target, uint256 mintedAmount) onlyOwner public {\n        balanceOf[target] += mintedAmount;\n        totalSupply += mintedAmount;\n        emit Transfer(address(0), address(this), mintedAmount);\n        emit Transfer(address(this), target, mintedAmount);\n    }\n1622-function_definition-263-268", method="mintToken(address target,uint256 mintedAmount)", type_label=function_definition];
1632 [label="262_ onlyOwner\n1632-expression_statement-263-263", method="mintToken(address target,uint256 mintedAmount)", type_label=expression_statement];
1636 [label="263_ balanceOf[target] += mintedAmount;\n1636-expression_statement-264-264", method="mintToken(address target,uint256 mintedAmount)", type_label=expression_statement];
1642 [label="264_ totalSupply += mintedAmount;\n1642-expression_statement-265-265", method="mintToken(address target,uint256 mintedAmount)", type_label=expression_statement];
1668 [label="268_ mapping(address => uint) balances_intou30;\n1668-new_variable-269-269", method="", type_label=new_variable];
1674 [label="269_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n1674-function_definition-270-275", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
1690 [label="270_ require(balances_intou30[msg.sender] - _value >= 0);\n1690-expression_statement-271-271", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1703 [label="271_ balances_intou30[msg.sender] -= _value;\n1703-expression_statement-272-272", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1711 [label="272_ balances_intou30[_to] += _value;\n1711-expression_statement-273-273", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1717 [label="273_ return true;\n1717-return-274-274", method="transfer_intou30(address _to,uint _value)", type_label=return];
1720 [label="275_ function freezeAccount(address target, bool freeze) onlyOwner public {\n        frozenAccount[target] = freeze;\n        emit FrozenFunds(target, freeze);\n    }\n1720-function_definition-276-279", method="freezeAccount(address target,bool freeze)", type_label=function_definition];
1730 [label="275_ onlyOwner\n1730-expression_statement-276-276", method="freezeAccount(address target,bool freeze)", type_label=expression_statement];
1734 [label="276_ frozenAccount[target] = freeze;\n1734-expression_statement-277-277", method="freezeAccount(address target,bool freeze)", type_label=expression_statement];
1746 [label="279_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n1746-function_definition-280-283", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
1754 [label="280_ uint8 vundflw1=0;\n1754-new_variable-281-281", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
1760 [label="281_ vundflw1 = vundflw1 + p_intou8;\n1760-expression_statement-282-282", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
1766 [label="283_ function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner public {\n        sellPrice = newSellPrice;\n        buyPrice = newBuyPrice;\n    }\n1766-function_definition-284-287", method="setPrices(uint256 newSellPrice,uint256 newBuyPrice)", type_label=function_definition];
1776 [label="283_ onlyOwner\n1776-expression_statement-284-284", method="setPrices(uint256 newSellPrice,uint256 newBuyPrice)", type_label=expression_statement];
1780 [label="284_ sellPrice = newSellPrice;\n1780-expression_statement-285-285", method="setPrices(uint256 newSellPrice,uint256 newBuyPrice)", type_label=expression_statement];
1784 [label="285_ buyPrice = newBuyPrice;\n1784-expression_statement-286-286", method="setPrices(uint256 newSellPrice,uint256 newBuyPrice)", type_label=expression_statement];
1788 [label="287_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1788-function_definition-288-291", method="bug_intou39()", type_label=function_definition];
1792 [label="288_ uint8 vundflw =0;\n1792-new_variable-289-289", method="bug_intou39()", type_label=new_variable];
1798 [label="289_ vundflw = vundflw -10;\n1798-expression_statement-290-290", method="bug_intou39()", type_label=expression_statement];
1804 [label="291_ function buy() payable public {\n        uint amount = msg.value / buyPrice;                  \n        _transfer(address(this), msg.sender, amount);        \n    }\n1804-function_definition-292-295", method="buy()", type_label=function_definition];
1809 [label="292_ uint amount = msg.value / buyPrice;\n1809-new_variable-293-293", method="buy()", type_label=new_variable];
1819 [label="293_ _transfer(address(this), msg.sender, amount);\n1819-expression_statement-294-294", method="buy()", type_label=expression_statement];
1832 [label="295_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n1832-function_definition-296-299", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
1840 [label="296_ uint8 vundflw1=0;\n1840-new_variable-297-297", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
1846 [label="297_ vundflw1 = vundflw1 + p_intou36;\n1846-expression_statement-298-298", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
1852 [label="299_ function sell(uint256 amount) public {\n        address myAddress = address(this);\n        require(myAddress.balance >= amount * sellPrice);    \n        _transfer(msg.sender, address(this), amount);        \n        msg.sender.transfer(amount * sellPrice);             \n    }\n1852-function_definition-300-305", method="sell(uint256 amount)", type_label=function_definition];
1860 [label="300_ address myAddress = address(this);\n1860-new_variable-301-301", method="sell(uint256 amount)", type_label=new_variable];
1868 [label="301_ require(myAddress.balance >= amount * sellPrice);\n1868-expression_statement-302-302", method="sell(uint256 amount)", type_label=expression_statement];
1879 [label="302_ _transfer(msg.sender, address(this), amount);\n1879-expression_statement-303-303", method="sell(uint256 amount)", type_label=expression_statement];
1892 [label="303_ msg.sender.transfer(amount * sellPrice);\n1892-expression_statement-304-304", method="sell(uint256 amount)", type_label=expression_statement];
1903 [label="305_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1903-function_definition-306-309", method="bug_intou35()", type_label=function_definition];
1907 [label="306_ uint8 vundflw =0;\n1907-new_variable-307-307", method="bug_intou35()", type_label=new_variable];
1913 [label="307_ vundflw = vundflw -10;\n1913-expression_statement-308-308", method="bug_intou35()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
22 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 42  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
42 -> 53  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
53 -> 59  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 81  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
81 -> 87  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
118 -> 126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
134 -> 138  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
138 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 155  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
167 -> 176  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
178 -> 188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
214 -> 222  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
234 -> 245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
245 -> 251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
269 -> 285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
285 -> 298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
298 -> 306  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
306 -> 312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
312 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
315 -> 320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
326 -> 342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
342 -> 355  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
355 -> 363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
363 -> 369  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
369 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
377 -> 385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
385 -> 391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
403 -> 407  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
407 -> 413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
419 -> 424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
431 -> 439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
447 -> 451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
451 -> 462  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
462 -> 468  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
477 -> 484  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
490 -> 506  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
506 -> 519  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
519 -> 527  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
527 -> 533  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
533 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
536 -> 545  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
552 -> 560  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
568 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
572 -> 583  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
583 -> 589  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
612 -> 616  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
616 -> 622  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
642 -> 646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
646 -> 652  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
682 -> 692  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
692 -> 700  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
700 -> 704  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 712  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
712 -> 718  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
724 -> 740  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
740 -> 749  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
749 -> 758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
758 -> 771  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
771 -> 783  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
783 -> 789  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
822 -> 838  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
838 -> 851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
851 -> 859  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
859 -> 865  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
865 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
868 -> 885  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
885 -> 896  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
896 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
899 -> 907  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
907 -> 913  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
919 -> 940  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
940 -> 953  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
953 -> 963  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
963 -> 972  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
972 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
975 -> 983  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
983 -> 989  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
995 -> 1012  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1032 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1041 -> 1057  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1057 -> 1070  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1070 -> 1078  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1078 -> 1084  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1084 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1087 -> 1100  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1100 -> 1111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1111 -> 1119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1131 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1134 -> 1142  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1142 -> 1148  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1154 -> 1171  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1171 -> 1180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1180 -> 1193  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1193 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1199 -> 1209  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1219 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1222 -> 1226  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1226 -> 1232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1254 -> 1262  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1270 -> 1274  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1274 -> 1285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1285 -> 1291  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1300 -> 1305  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1312 -> 1320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1328 -> 1332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1332 -> 1343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1343 -> 1349  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1363 -> 1367  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1367 -> 1373  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1379 -> 1386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1393 -> 1401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1409 -> 1413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1413 -> 1424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1424 -> 1430  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1471 -> 1475  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1475 -> 1481  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1487 -> 1503  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1503 -> 1512  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1512 -> 1521  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1521 -> 1534  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1534 -> 1542  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1542 -> 1550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1550 -> 1556  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1576 -> 1592  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1592 -> 1605  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1605 -> 1613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1613 -> 1619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1619 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1622 -> 1636  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1636 -> 1642  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1674 -> 1690  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1690 -> 1703  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1703 -> 1711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1711 -> 1717  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1717 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1720 -> 1734  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1746 -> 1754  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1754 -> 1760  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1766 -> 1780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1780 -> 1784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1788 -> 1792  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1792 -> 1798  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1804 -> 1809  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1809 -> 1819  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1832 -> 1840  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1840 -> 1846  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1852 -> 1860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1860 -> 1868  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1868 -> 1879  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1879 -> 1892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1903 -> 1907  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1907 -> 1913  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
