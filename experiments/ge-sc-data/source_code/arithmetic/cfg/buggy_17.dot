digraph  {
13 [label="2_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    require(c / a == b);\n    return c;\n  }\n13-function_definition-3-10", method="mul(uint256 a,uint256 b)", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", method="mul(uint256 a,uint256 b)", type_label=if];
2127 [label="3_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", method="mul(uint256 a,uint256 b)", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", method="mul(uint256 a,uint256 b)", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", method="mul(uint256 a,uint256 b)", type_label=return];
56 [label="10_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b > 0);\n    uint256 c = a / b;\n    return c;\n  }\n56-function_definition-11-15", method="div(uint256 a,uint256 b)", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", method="div(uint256 a,uint256 b)", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", method="div(uint256 a,uint256 b)", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", method="div(uint256 a,uint256 b)", type_label=return];
90 [label="15_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a);\n    uint256 c = a - b;\n    return c;\n  }\n90-function_definition-16-20", method="sub(uint256 a,uint256 b)", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", method="sub(uint256 a,uint256 b)", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", method="sub(uint256 a,uint256 b)", type_label=return];
124 [label="20_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a && c >= b);\n    return c;\n  }\n124-function_definition-21-25", method="add(uint256 a,uint256 b)", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", method="add(uint256 a,uint256 b)", type_label=new_variable];
149 [label="22_ require(c >= a && c >= b);\n149-expression_statement-23-23", method="add(uint256 a,uint256 b)", type_label=expression_statement];
160 [label="23_ return c;\n160-return-24-24", method="add(uint256 a,uint256 b)", type_label=return];
162 [label="25_ function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0);\n    return a % b;\n  }\n162-function_definition-26-29", method="mod(uint256 a,uint256 b)", type_label=function_definition];
179 [label="26_ require(b != 0);\n179-expression_statement-27-27", method="mod(uint256 a,uint256 b)", type_label=expression_statement];
186 [label="27_ return a % b;\n186-return-28-28", method="mod(uint256 a,uint256 b)", type_label=return];
190 [label="29_ function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a >= b ? a : b;\n  }\n190-function_definition-30-32", method="max256(uint256 a,uint256 b)", type_label=function_definition];
207 [label="30_ return a >= b ? a : b;\n207-return-31-31", method="max256(uint256 a,uint256 b)", type_label=return];
214 [label="32_ function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a < b ? a : b;\n  }\n214-function_definition-33-35", method="min256(uint256 a,uint256 b)", type_label=function_definition];
231 [label="33_ return a < b ? a : b;\n231-return-34-34", method="min256(uint256 a,uint256 b)", type_label=return];
241 [label="37_ mapping(address => uint) balances_intou10;\n241-new_variable-38-38", method="", type_label=new_variable];
247 [label="38_ function transfer_intou10(address _to, uint _value) public returns (bool) {\n    require(balances_intou10[msg.sender] - _value >= 0);   \n    balances_intou10[msg.sender] -= _value;   \n    balances_intou10[_to] += _value;   \n    return true;\n  }\n247-function_definition-39-44", method="transfer_intou10(address _to,uint _value)", type_label=function_definition];
263 [label="39_ require(balances_intou10[msg.sender] - _value >= 0);\n263-expression_statement-40-40", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
276 [label="40_ balances_intou10[msg.sender] -= _value;\n276-expression_statement-41-41", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
284 [label="41_ balances_intou10[_to] += _value;\n284-expression_statement-42-42", method="transfer_intou10(address _to,uint _value)", type_label=expression_statement];
290 [label="42_ return true;\n290-return-43-43", method="transfer_intou10(address _to,uint _value)", type_label=return];
293 [label="44_ address public owner;\n293-new_variable-45-45", method="", type_label=new_variable];
300 [label="46_ owner = msg.sender;\n300-expression_statement-47-47", method="", type_label=expression_statement];
306 [label="48_ function bug_intou20(uint8 p_intou20) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou20;    \n}\n306-function_definition-49-52", method="bug_intou20(uint8 p_intou20)", type_label=function_definition];
314 [label="49_ uint8 vundflw1=0;\n314-new_variable-50-50", method="bug_intou20(uint8 p_intou20)", type_label=new_variable];
320 [label="50_ vundflw1 = vundflw1 + p_intou20;\n320-expression_statement-51-51", method="bug_intou20(uint8 p_intou20)", type_label=expression_statement];
326 [label="52_ modifier onlyOwner {\n    require(msg.sender == owner);\n    _;\n  }\n326-expression_statement-53-56", method="", type_label=expression_statement];
329 [label="53_ require(msg.sender == owner);\n329-expression_statement-54-54", method="", type_label=expression_statement];
338 [label="54_ _;\n338-expression_statement-55-55", method="", type_label=expression_statement];
340 [label="56_ function transferOwnership(address newOwner) onlyOwner public {\n    owner = newOwner;\n  }\n340-function_definition-57-59", method="transferOwnership(address newOwner)", type_label=function_definition];
346 [label="56_ onlyOwner\n346-expression_statement-57-57", method="transferOwnership(address newOwner)", type_label=expression_statement];
350 [label="57_ owner = newOwner;\n350-expression_statement-58-58", method="transferOwnership(address newOwner)", type_label=expression_statement];
354 [label="59_ function bug_intou32(uint8 p_intou32) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou32;    \n}\n354-function_definition-60-63", method="bug_intou32(uint8 p_intou32)", type_label=function_definition];
362 [label="60_ uint8 vundflw1=0;\n362-new_variable-61-61", method="bug_intou32(uint8 p_intou32)", type_label=new_variable];
368 [label="61_ vundflw1 = vundflw1 + p_intou32;\n368-expression_statement-62-62", method="bug_intou32(uint8 p_intou32)", type_label=expression_statement];
377 [label="65_ function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external;\n377-function_definition-66-66", method="receiveApproval(address _from,uint256 _value,address _token,bytes calldata _extraData)", type_label=function_definition];
404 [label="69_ mapping(address => uint) balances_intou22;\n404-new_variable-70-70", method="", type_label=new_variable];
410 [label="70_ function transfer_intou22(address _to, uint _value) public returns (bool) {\n    require(balances_intou22[msg.sender] - _value >= 0);   \n    balances_intou22[msg.sender] -= _value;   \n    balances_intou22[_to] += _value;   \n    return true;\n  }\n410-function_definition-71-76", method="transfer_intou22(address _to,uint _value)", type_label=function_definition];
426 [label="71_ require(balances_intou22[msg.sender] - _value >= 0);\n426-expression_statement-72-72", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
439 [label="72_ balances_intou22[msg.sender] -= _value;\n439-expression_statement-73-73", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
447 [label="73_ balances_intou22[_to] += _value;\n447-expression_statement-74-74", method="transfer_intou22(address _to,uint _value)", type_label=expression_statement];
453 [label="74_ return true;\n453-return-75-75", method="transfer_intou22(address _to,uint _value)", type_label=return];
456 [label="76_ string public name;\n456-new_variable-77-77", method="", type_label=new_variable];
461 [label="77_ function bug_intou12(uint8 p_intou12) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou12;    \n}\n461-function_definition-78-81", method="bug_intou12(uint8 p_intou12)", type_label=function_definition];
469 [label="78_ uint8 vundflw1=0;\n469-new_variable-79-79", method="bug_intou12(uint8 p_intou12)", type_label=new_variable];
475 [label="79_ vundflw1 = vundflw1 + p_intou12;\n475-expression_statement-80-80", method="bug_intou12(uint8 p_intou12)", type_label=expression_statement];
481 [label="81_ string public symbol;\n481-new_variable-82-82", method="", type_label=new_variable];
486 [label="82_ function bug_intou11() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n486-function_definition-83-86", method="bug_intou11()", type_label=function_definition];
490 [label="83_ uint8 vundflw =0;\n490-new_variable-84-84", method="bug_intou11()", type_label=new_variable];
496 [label="84_ vundflw = vundflw -10;\n496-expression_statement-85-85", method="bug_intou11()", type_label=expression_statement];
502 [label="86_ uint8 public decimals;\n502-new_variable-87-87", method="", type_label=new_variable];
507 [label="87_ mapping(address => uint) public lockTime_intou1;\n507-new_variable-88-88", method="", type_label=new_variable];
514 [label="88_ function increaseLockTime_intou1(uint _secondsToIncrease) public {\n        lockTime_intou1[msg.sender] += _secondsToIncrease;   \n    }\n514-function_definition-89-91", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=function_definition];
522 [label="89_ lockTime_intou1[msg.sender] += _secondsToIncrease;\n522-expression_statement-90-90", method="increaseLockTime_intou1(uint _secondsToIncrease)", type_label=expression_statement];
530 [label="91_ function withdraw_ovrflow1() public {\n        require(now > lockTime_intou1[msg.sender]);    \n        uint transferValue_intou1 = 10;           \n        msg.sender.transfer(transferValue_intou1);\n    }\n530-function_definition-92-96", method="withdraw_ovrflow1()", type_label=function_definition];
534 [label="92_ require(now > lockTime_intou1[msg.sender]);\n534-expression_statement-93-93", method="withdraw_ovrflow1()", type_label=expression_statement];
545 [label="93_ uint transferValue_intou1 = 10;\n545-new_variable-94-94", method="withdraw_ovrflow1()", type_label=new_variable];
551 [label="94_ msg.sender.transfer(transferValue_intou1);\n551-expression_statement-95-95", method="withdraw_ovrflow1()", type_label=expression_statement];
560 [label="96_ uint256 public totalSupply;\n560-new_variable-97-97", method="", type_label=new_variable];
565 [label="97_ mapping(address => uint) balances_intou2;\n565-new_variable-98-98", method="", type_label=new_variable];
571 [label="98_ function transfer_undrflow2(address _to, uint _value) public returns (bool) {\n    require(balances_intou2[msg.sender] - _value >= 0);   \n    balances_intou2[msg.sender] -= _value;   \n    balances_intou2[_to] += _value;   \n    return true;\n  }\n571-function_definition-99-104", method="transfer_undrflow2(address _to,uint _value)", type_label=function_definition];
587 [label="99_ require(balances_intou2[msg.sender] - _value >= 0);\n587-expression_statement-100-100", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
600 [label="100_ balances_intou2[msg.sender] -= _value;\n600-expression_statement-101-101", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
608 [label="101_ balances_intou2[_to] += _value;\n608-expression_statement-102-102", method="transfer_undrflow2(address _to,uint _value)", type_label=expression_statement];
614 [label="102_ return true;\n614-return-103-103", method="transfer_undrflow2(address _to,uint _value)", type_label=return];
617 [label="104_ mapping (address => uint256) public balanceOf;\n617-new_variable-105-105", method="", type_label=new_variable];
624 [label="105_ mapping(address => uint) public lockTime_intou17;\n624-new_variable-106-106", method="", type_label=new_variable];
631 [label="106_ function increaseLockTime_intou17(uint _secondsToIncrease) public {\n        lockTime_intou17[msg.sender] += _secondsToIncrease;   \n    }\n631-function_definition-107-109", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=function_definition];
639 [label="107_ lockTime_intou17[msg.sender] += _secondsToIncrease;\n639-expression_statement-108-108", method="increaseLockTime_intou17(uint _secondsToIncrease)", type_label=expression_statement];
647 [label="109_ function withdraw_intou17() public {\n        require(now > lockTime_intou17[msg.sender]);    \n        uint transferValue_intou17 = 10;           \n        msg.sender.transfer(transferValue_intou17);\n    }\n647-function_definition-110-114", method="withdraw_intou17()", type_label=function_definition];
651 [label="110_ require(now > lockTime_intou17[msg.sender]);\n651-expression_statement-111-111", method="withdraw_intou17()", type_label=expression_statement];
662 [label="111_ uint transferValue_intou17 = 10;\n662-new_variable-112-112", method="withdraw_intou17()", type_label=new_variable];
668 [label="112_ msg.sender.transfer(transferValue_intou17);\n668-expression_statement-113-113", method="withdraw_intou17()", type_label=expression_statement];
677 [label="114_ mapping (address => mapping (address => uint256)) public allowance;\n677-new_variable-115-115", method="", type_label=new_variable];
686 [label="115_ function bug_intou27() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n686-function_definition-116-119", method="bug_intou27()", type_label=function_definition];
690 [label="116_ uint8 vundflw =0;\n690-new_variable-117-117", method="bug_intou27()", type_label=new_variable];
696 [label="117_ vundflw = vundflw -10;\n696-expression_statement-118-118", method="bug_intou27()", type_label=expression_statement];
716 [label="120_ function bug_intou31() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n716-function_definition-121-124", method="bug_intou31()", type_label=function_definition];
720 [label="121_ uint8 vundflw =0;\n720-new_variable-122-122", method="bug_intou31()", type_label=new_variable];
726 [label="122_ vundflw = vundflw -10;\n726-expression_statement-123-123", method="bug_intou31()", type_label=expression_statement];
746 [label="125_ mapping(address => uint) public lockTime_intou13;\n746-new_variable-126-126", method="", type_label=new_variable];
753 [label="126_ function increaseLockTime_intou13(uint _secondsToIncrease) public {\n        lockTime_intou13[msg.sender] += _secondsToIncrease;   \n    }\n753-function_definition-127-129", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=function_definition];
761 [label="127_ lockTime_intou13[msg.sender] += _secondsToIncrease;\n761-expression_statement-128-128", method="increaseLockTime_intou13(uint _secondsToIncrease)", type_label=expression_statement];
769 [label="129_ function withdraw_intou13() public {\n        require(now > lockTime_intou13[msg.sender]);    \n        uint transferValue_intou13 = 10;           \n        msg.sender.transfer(transferValue_intou13);\n    }\n769-function_definition-130-134", method="withdraw_intou13()", type_label=function_definition];
773 [label="130_ require(now > lockTime_intou13[msg.sender]);\n773-expression_statement-131-131", method="withdraw_intou13()", type_label=expression_statement];
784 [label="131_ uint transferValue_intou13 = 10;\n784-new_variable-132-132", method="withdraw_intou13()", type_label=new_variable];
790 [label="132_ msg.sender.transfer(transferValue_intou13);\n790-expression_statement-133-133", method="withdraw_intou13()", type_label=expression_statement];
823 [label="136_ decimals = dec;\n823-expression_statement-137-137", method="", type_label=expression_statement];
827 [label="137_ name = tokenName;\n827-expression_statement-138-138", method="", type_label=expression_statement];
831 [label="138_ symbol = tokenSymbol;\n831-expression_statement-139-139", method="", type_label=expression_statement];
835 [label="140_ mapping(address => uint) balances_intou38;\n835-new_variable-141-141", method="", type_label=new_variable];
841 [label="141_ function transfer_intou38(address _to, uint _value) public returns (bool) {\n    require(balances_intou38[msg.sender] - _value >= 0);   \n    balances_intou38[msg.sender] -= _value;   \n    balances_intou38[_to] += _value;   \n    return true;\n  }\n841-function_definition-142-147", method="transfer_intou38(address _to,uint _value)", type_label=function_definition];
857 [label="142_ require(balances_intou38[msg.sender] - _value >= 0);\n857-expression_statement-143-143", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
870 [label="143_ balances_intou38[msg.sender] -= _value;\n870-expression_statement-144-144", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
878 [label="144_ balances_intou38[_to] += _value;\n878-expression_statement-145-145", method="transfer_intou38(address _to,uint _value)", type_label=expression_statement];
884 [label="145_ return true;\n884-return-146-146", method="transfer_intou38(address _to,uint _value)", type_label=return];
887 [label="147_ function _transfer(address _from, address _to, uint _value) internal {\n    require(_to != address(0x0));\n    balanceOf[_from] = balanceOf[_from].sub(_value);\n    balanceOf[_to] = balanceOf[_to].add(_value);\n    emit Transfer(_from, _to, _value);\n  }\n887-function_definition-148-153", method="_transfer(address _from,address _to,uint _value)", type_label=function_definition];
903 [label="148_ require(_to != address(0x0));\n903-expression_statement-149-149", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
912 [label="149_ balanceOf[_from] = balanceOf[_from].sub(_value);\n912-expression_statement-150-150", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
925 [label="150_ balanceOf[_to] = balanceOf[_to].add(_value);\n925-expression_statement-151-151", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
946 [label="153_ function bug_intou4(uint8 p_intou4) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou4;    \n}\n946-function_definition-154-157", method="bug_intou4(uint8 p_intou4)", type_label=function_definition];
954 [label="154_ uint8 vundflw1=0;\n954-new_variable-155-155", method="bug_intou4(uint8 p_intou4)", type_label=new_variable];
960 [label="155_ vundflw1 = vundflw1 + p_intou4;\n960-expression_statement-156-156", method="bug_intou4(uint8 p_intou4)", type_label=expression_statement];
966 [label="157_ function transfer(address _to, uint256 _value) public returns (bool success) {\n    _transfer(msg.sender, _to, _value);\n    return true;\n  }\n966-function_definition-158-161", method="transfer(address _to,uint256 _value)", type_label=function_definition];
983 [label="158_ _transfer(msg.sender, _to, _value);\n983-expression_statement-159-159", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
994 [label="159_ return true;\n994-return-160-160", method="transfer(address _to,uint256 _value)", type_label=return];
997 [label="161_ function bug_intou7() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n997-function_definition-162-165", method="bug_intou7()", type_label=function_definition];
1001 [label="162_ uint8 vundflw =0;\n1001-new_variable-163-163", method="bug_intou7()", type_label=new_variable];
1007 [label="163_ vundflw = vundflw -10;\n1007-expression_statement-164-164", method="bug_intou7()", type_label=expression_statement];
1013 [label="165_ function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n    allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\n		_transfer(_from, _to, _value);\n		return true;\n  }\n1013-function_definition-166-170", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
1034 [label="166_ allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\n1034-expression_statement-167-167", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
1055 [label="167_ _transfer(_from, _to, _value);\n1055-expression_statement-168-168", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
1064 [label="168_ return true;\n1064-return-169-169", method="transferFrom(address _from,address _to,uint256 _value)", type_label=return];
1067 [label="170_ function bug_intou23() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1067-function_definition-171-174", method="bug_intou23()", type_label=function_definition];
1071 [label="171_ uint8 vundflw =0;\n1071-new_variable-172-172", method="bug_intou23()", type_label=new_variable];
1077 [label="172_ vundflw = vundflw -10;\n1077-expression_statement-173-173", method="bug_intou23()", type_label=expression_statement];
1083 [label="174_ function approve(address _spender, uint256 _value) public returns (bool success) {\n    allowance[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n1083-function_definition-175-179", method="approve(address _spender,uint256 _value)", type_label=function_definition];
1100 [label="175_ allowance[msg.sender][_spender] = _value;\n1100-expression_statement-176-176", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
1120 [label="177_ return true;\n1120-return-178-178", method="approve(address _spender,uint256 _value)", type_label=return];
1123 [label="179_ mapping(address => uint) balances_intou14;\n1123-new_variable-180-180", method="", type_label=new_variable];
1129 [label="180_ function transfer_intou14(address _to, uint _value) public returns (bool) {\n    require(balances_intou14[msg.sender] - _value >= 0);   \n    balances_intou14[msg.sender] -= _value;   \n    balances_intou14[_to] += _value;   \n    return true;\n  }\n1129-function_definition-181-186", method="transfer_intou14(address _to,uint _value)", type_label=function_definition];
1145 [label="181_ require(balances_intou14[msg.sender] - _value >= 0);\n1145-expression_statement-182-182", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1158 [label="182_ balances_intou14[msg.sender] -= _value;\n1158-expression_statement-183-183", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1166 [label="183_ balances_intou14[_to] += _value;\n1166-expression_statement-184-184", method="transfer_intou14(address _to,uint _value)", type_label=expression_statement];
1172 [label="184_ return true;\n1172-return-185-185", method="transfer_intou14(address _to,uint _value)", type_label=return];
1175 [label="186_ function approveAndCall(address _spender, uint256 _value, bytes memory _extraData) public returns (bool success) {\n    tokenRecipient spender = tokenRecipient(_spender);\n    if (approve(_spender, _value)) {\n      spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n      return true;\n    }\n  }\n1175-function_definition-187-193", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=function_definition];
1196 [label="187_ tokenRecipient spender = tokenRecipient(_spender);\n1196-new_variable-188-188", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=new_variable];
1206 [label="188_ if\n1206-if-189-192", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=if];
3303 [label="188_ end_if", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=end_if];
1214 [label="189_ spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n1214-expression_statement-190-190", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=expression_statement];
1231 [label="190_ return true;\n1231-return-191-191", method="approveAndCall(address _spender,uint256 _value,bytes memory _extraData)", type_label=return];
1234 [label="193_ mapping(address => uint) balances_intou30;\n1234-new_variable-194-194", method="", type_label=new_variable];
1240 [label="194_ function transfer_intou30(address _to, uint _value) public returns (bool) {\n    require(balances_intou30[msg.sender] - _value >= 0);   \n    balances_intou30[msg.sender] -= _value;   \n    balances_intou30[_to] += _value;   \n    return true;\n  }\n1240-function_definition-195-200", method="transfer_intou30(address _to,uint _value)", type_label=function_definition];
1256 [label="195_ require(balances_intou30[msg.sender] - _value >= 0);\n1256-expression_statement-196-196", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1269 [label="196_ balances_intou30[msg.sender] -= _value;\n1269-expression_statement-197-197", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1277 [label="197_ balances_intou30[_to] += _value;\n1277-expression_statement-198-198", method="transfer_intou30(address _to,uint _value)", type_label=expression_statement];
1283 [label="198_ return true;\n1283-return-199-199", method="transfer_intou30(address _to,uint _value)", type_label=return];
1295 [label="202_ mapping(address => uint) public lockTime_intou37;\n1295-new_variable-203-203", method="", type_label=new_variable];
1302 [label="203_ function increaseLockTime_intou37(uint _secondsToIncrease) public {\n        lockTime_intou37[msg.sender] += _secondsToIncrease;   \n    }\n1302-function_definition-204-206", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=function_definition];
1310 [label="204_ lockTime_intou37[msg.sender] += _secondsToIncrease;\n1310-expression_statement-205-205", method="increaseLockTime_intou37(uint _secondsToIncrease)", type_label=expression_statement];
1318 [label="206_ function withdraw_intou37() public {\n        require(now > lockTime_intou37[msg.sender]);    \n        uint transferValue_intou37 = 10;           \n        msg.sender.transfer(transferValue_intou37);\n    }\n1318-function_definition-207-211", method="withdraw_intou37()", type_label=function_definition];
1322 [label="207_ require(now > lockTime_intou37[msg.sender]);\n1322-expression_statement-208-208", method="withdraw_intou37()", type_label=expression_statement];
1333 [label="208_ uint transferValue_intou37 = 10;\n1333-new_variable-209-209", method="withdraw_intou37()", type_label=new_variable];
1339 [label="209_ msg.sender.transfer(transferValue_intou37);\n1339-expression_statement-210-210", method="withdraw_intou37()", type_label=expression_statement];
1348 [label="211_ string _tokenName = \"AZ FundChain\";\n1348-new_variable-212-212", method="", type_label=new_variable];
1354 [label="211_ function bug_intou3() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1354-function_definition-212-215", method="bug_intou3()", type_label=function_definition];
1358 [label="212_ uint8 vundflw =0;\n1358-new_variable-213-213", method="bug_intou3()", type_label=new_variable];
1364 [label="213_ vundflw = vundflw -10;\n1364-expression_statement-214-214", method="bug_intou3()", type_label=expression_statement];
1370 [label="215_ string _tokenSymbol = \"AZT\";\n1370-new_variable-216-216", method="", type_label=new_variable];
1376 [label="216_ mapping(address => uint) public lockTime_intou9;\n1376-new_variable-217-217", method="", type_label=new_variable];
1383 [label="217_ function increaseLockTime_intou9(uint _secondsToIncrease) public {\n        lockTime_intou9[msg.sender] += _secondsToIncrease;   \n    }\n1383-function_definition-218-220", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=function_definition];
1391 [label="218_ lockTime_intou9[msg.sender] += _secondsToIncrease;\n1391-expression_statement-219-219", method="increaseLockTime_intou9(uint _secondsToIncrease)", type_label=expression_statement];
1399 [label="220_ function withdraw_intou9() public {\n        require(now > lockTime_intou9[msg.sender]);    \n        uint transferValue_intou9 = 10;           \n        msg.sender.transfer(transferValue_intou9);\n    }\n1399-function_definition-221-225", method="withdraw_intou9()", type_label=function_definition];
1403 [label="221_ require(now > lockTime_intou9[msg.sender]);\n1403-expression_statement-222-222", method="withdraw_intou9()", type_label=expression_statement];
1414 [label="222_ uint transferValue_intou9 = 10;\n1414-new_variable-223-223", method="withdraw_intou9()", type_label=new_variable];
1420 [label="223_ msg.sender.transfer(transferValue_intou9);\n1420-expression_statement-224-224", method="withdraw_intou9()", type_label=expression_statement];
1429 [label="225_ uint8 _decimals = 18;\n1429-new_variable-226-226", method="", type_label=new_variable];
1434 [label="226_ mapping(address => uint) public lockTime_intou25;\n1434-new_variable-227-227", method="", type_label=new_variable];
1441 [label="227_ function increaseLockTime_intou25(uint _secondsToIncrease) public {\n        lockTime_intou25[msg.sender] += _secondsToIncrease;   \n    }\n1441-function_definition-228-230", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=function_definition];
1449 [label="228_ lockTime_intou25[msg.sender] += _secondsToIncrease;\n1449-expression_statement-229-229", method="increaseLockTime_intou25(uint _secondsToIncrease)", type_label=expression_statement];
1457 [label="230_ function withdraw_intou25() public {\n        require(now > lockTime_intou25[msg.sender]);    \n        uint transferValue_intou25 = 10;           \n        msg.sender.transfer(transferValue_intou25);\n    }\n1457-function_definition-231-235", method="withdraw_intou25()", type_label=function_definition];
1461 [label="231_ require(now > lockTime_intou25[msg.sender]);\n1461-expression_statement-232-232", method="withdraw_intou25()", type_label=expression_statement];
1472 [label="232_ uint transferValue_intou25 = 10;\n1472-new_variable-233-233", method="withdraw_intou25()", type_label=new_variable];
1478 [label="233_ msg.sender.transfer(transferValue_intou25);\n1478-expression_statement-234-234", method="withdraw_intou25()", type_label=expression_statement];
1487 [label="235_ address[] public frozenAddresses;\n1487-new_variable-236-236", method="", type_label=new_variable];
1493 [label="236_ function bug_intou19() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1493-function_definition-237-240", method="bug_intou19()", type_label=function_definition];
1497 [label="237_ uint8 vundflw =0;\n1497-new_variable-238-238", method="bug_intou19()", type_label=new_variable];
1503 [label="238_ vundflw = vundflw -10;\n1503-expression_statement-239-239", method="bug_intou19()", type_label=expression_statement];
1509 [label="240_ bool public tokenFrozen;\n1509-new_variable-241-241", method="", type_label=new_variable];
1514 [label="241_ struct frozenWallet {\n    bool isFrozen;  \n    uint256 rewardedAmount;  \n    uint256 frozenAmount;  \n    uint256 frozenTime;  \n  }\n1514-expression_statement-242-247", method="frozenWallet()", type_label=expression_statement];
1532 [label="247_ mapping(address => uint) balances_intou26;\n1532-new_variable-248-248", method="", type_label=new_variable];
1538 [label="248_ function transfer_intou26(address _to, uint _value) public returns (bool) {\n    require(balances_intou26[msg.sender] - _value >= 0);   \n    balances_intou26[msg.sender] -= _value;   \n    balances_intou26[_to] += _value;   \n    return true;\n  }\n1538-function_definition-249-254", method="transfer_intou26(address _to,uint _value)", type_label=function_definition];
1554 [label="249_ require(balances_intou26[msg.sender] - _value >= 0);\n1554-expression_statement-250-250", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1567 [label="250_ balances_intou26[msg.sender] -= _value;\n1567-expression_statement-251-251", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1575 [label="251_ balances_intou26[_to] += _value;\n1575-expression_statement-252-252", method="transfer_intou26(address _to,uint _value)", type_label=expression_statement];
1581 [label="252_ return true;\n1581-return-253-253", method="transfer_intou26(address _to,uint _value)", type_label=return];
1584 [label="254_ mapping (address => frozenWallet) public frozenWallets;\n1584-new_variable-255-255", method="", type_label=new_variable];
1593 [label="255_ TokenERC20(_tokenName, _tokenSymbol, _decimals)\n1593-expression_statement-256-256", method="", type_label=expression_statement];
1602 [label="256_ frozenAddresses.push(address(0x9fd50776F133751E8Ae6abE1Be124638Bb917E05));\n1602-expression_statement-257-257", method="", type_label=expression_statement];
1611 [label="257_ frozenWallets[frozenAddresses[0]] = frozenWallet({\n      isFrozen: true,\n      rewardedAmount: 30000000 * 10 ** uint256(decimals),\n      frozenAmount: 0 * 10 ** uint256(decimals),\n      frozenTime: now + 1 * 1 hours  \n    });\n1611-expression_statement-258-263", method="", type_label=expression_statement];
1651 [label="263_ for(i < frozenAddresses.length;;i++)\n1651-for-264-267", method="", type_label=for];
3748 [label="263_ end_loop", method="", type_label=end_loop];
1664 [label="263_ i++\n1664-expression_statement-264-264", method="", type_label=expression_statement];
1667 [label="264_ balanceOf[frozenAddresses[i]] = frozenWallets[frozenAddresses[i]].rewardedAmount;\n1667-expression_statement-265-265", method="", type_label=expression_statement];
1681 [label="265_ totalSupply = totalSupply.add(frozenWallets[frozenAddresses[i]].rewardedAmount);\n1681-expression_statement-266-266", method="", type_label=expression_statement];
1696 [label="268_ function bug_intou8(uint8 p_intou8) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou8;    \n}\n1696-function_definition-269-272", method="bug_intou8(uint8 p_intou8)", type_label=function_definition];
1704 [label="269_ uint8 vundflw1=0;\n1704-new_variable-270-270", method="bug_intou8(uint8 p_intou8)", type_label=new_variable];
1710 [label="270_ vundflw1 = vundflw1 + p_intou8;\n1710-expression_statement-271-271", method="bug_intou8(uint8 p_intou8)", type_label=expression_statement];
1716 [label="272_ function _transfer(address _from, address _to, uint _value) internal {\n    require(_to != address(0x0));\n    require(checkFrozenWallet(_from, _value));\n    balanceOf[_from] = balanceOf[_from].sub(_value);      \n    balanceOf[_to] = balanceOf[_to].add(_value);     \n    emit Transfer(_from, _to, _value);\n  }\n1716-function_definition-273-279", method="_transfer(address _from,address _to,uint _value)", type_label=function_definition];
1732 [label="273_ require(_to != address(0x0));\n1732-expression_statement-274-274", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1741 [label="274_ require(checkFrozenWallet(_from, _value));\n1741-expression_statement-275-275", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1751 [label="275_ balanceOf[_from] = balanceOf[_from].sub(_value);\n1751-expression_statement-276-276", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1764 [label="276_ balanceOf[_to] = balanceOf[_to].add(_value);\n1764-expression_statement-277-277", method="_transfer(address _from,address _to,uint _value)", type_label=expression_statement];
1785 [label="279_ function bug_intou39() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1785-function_definition-280-283", method="bug_intou39()", type_label=function_definition];
1789 [label="280_ uint8 vundflw =0;\n1789-new_variable-281-281", method="bug_intou39()", type_label=new_variable];
1795 [label="281_ vundflw = vundflw -10;\n1795-expression_statement-282-282", method="bug_intou39()", type_label=expression_statement];
1801 [label="283_ function checkFrozenWallet(address _from, uint _value) public view returns (bool) {\n    return(\n      _from==owner || \n      (!tokenFrozen && \n      (!frozenWallets[_from].isFrozen || \n       now>=frozenWallets[_from].frozenTime || \n       balanceOf[_from].sub(_value)>=frozenWallets[_from].frozenAmount))\n    );\n  }\n1801-function_definition-284-292", method="checkFrozenWallet(address _from,uint _value)", type_label=function_definition];
1818 [label="284_ return(\n      _from==owner || \n      (!tokenFrozen && \n      (!frozenWallets[_from].isFrozen || \n       now>=frozenWallets[_from].frozenTime || \n       balanceOf[_from].sub(_value)>=frozenWallets[_from].frozenAmount))\n    );\n1818-return-285-291", method="checkFrozenWallet(address _from,uint _value)", type_label=return];
1858 [label="292_ function bug_intou36(uint8 p_intou36) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou36;    \n}\n1858-function_definition-293-296", method="bug_intou36(uint8 p_intou36)", type_label=function_definition];
1866 [label="293_ uint8 vundflw1=0;\n1866-new_variable-294-294", method="bug_intou36(uint8 p_intou36)", type_label=new_variable];
1872 [label="294_ vundflw1 = vundflw1 + p_intou36;\n1872-expression_statement-295-295", method="bug_intou36(uint8 p_intou36)", type_label=expression_statement];
1878 [label="296_ function burn(uint256 _value) onlyOwner public returns (bool success) {\n    balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);    \n    totalSupply = totalSupply.sub(_value);                       \n    emit Burn(msg.sender, _value);\n    return true;\n  }\n1878-function_definition-297-302", method="burn(uint256 _value)", type_label=function_definition];
1884 [label="296_ onlyOwner\n1884-expression_statement-297-297", method="burn(uint256 _value)", type_label=expression_statement];
1893 [label="297_ balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\n1893-expression_statement-298-298", method="burn(uint256 _value)", type_label=expression_statement];
1910 [label="298_ totalSupply = totalSupply.sub(_value);\n1910-expression_statement-299-299", method="burn(uint256 _value)", type_label=expression_statement];
1927 [label="300_ return true;\n1927-return-301-301", method="burn(uint256 _value)", type_label=return];
1930 [label="302_ function bug_intou35() public{\n    uint8 vundflw =0;\n    vundflw = vundflw -10;    \n}\n1930-function_definition-303-306", method="bug_intou35()", type_label=function_definition];
1934 [label="303_ uint8 vundflw =0;\n1934-new_variable-304-304", method="bug_intou35()", type_label=new_variable];
1940 [label="304_ vundflw = vundflw -10;\n1940-expression_statement-305-305", method="bug_intou35()", type_label=expression_statement];
1946 [label="306_ function burnFrom(address _from, uint256 _value) public returns (bool success) {\n    balanceOf[_from] = balanceOf[_from].sub(_value);                           \n    allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);    \n    totalSupply = totalSupply.sub(_value);                               \n    emit Burn(_from, _value);\n    return true;\n  }\n1946-function_definition-307-313", method="burnFrom(address _from,uint256 _value)", type_label=function_definition];
1963 [label="307_ balanceOf[_from] = balanceOf[_from].sub(_value);\n1963-expression_statement-308-308", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1976 [label="308_ allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\n1976-expression_statement-309-309", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
1997 [label="309_ totalSupply = totalSupply.sub(_value);\n1997-expression_statement-310-310", method="burnFrom(address _from,uint256 _value)", type_label=expression_statement];
2012 [label="311_ return true;\n2012-return-312-312", method="burnFrom(address _from,uint256 _value)", type_label=return];
2015 [label="313_ function bug_intou40(uint8 p_intou40) public{\n    uint8 vundflw1=0;\n    vundflw1 = vundflw1 + p_intou40;    \n}\n2015-function_definition-314-317", method="bug_intou40(uint8 p_intou40)", type_label=function_definition];
2023 [label="314_ uint8 vundflw1=0;\n2023-new_variable-315-315", method="bug_intou40(uint8 p_intou40)", type_label=new_variable];
2029 [label="315_ vundflw1 = vundflw1 + p_intou40;\n2029-expression_statement-316-316", method="bug_intou40(uint8 p_intou40)", type_label=expression_statement];
2035 [label="317_ function freezeToken(bool freeze) onlyOwner public {\n    tokenFrozen = freeze;\n  }\n2035-function_definition-318-320", method="freezeToken(bool freeze)", type_label=function_definition];
2041 [label="317_ onlyOwner\n2041-expression_statement-318-318", method="freezeToken(bool freeze)", type_label=expression_statement];
2045 [label="318_ tokenFrozen = freeze;\n2045-expression_statement-319-319", method="freezeToken(bool freeze)", type_label=expression_statement];
2049 [label="320_ mapping(address => uint) public lockTime_intou33;\n2049-new_variable-321-321", method="", type_label=new_variable];
2056 [label="321_ function increaseLockTime_intou33(uint _secondsToIncrease) public {\n        lockTime_intou33[msg.sender] += _secondsToIncrease;   \n    }\n2056-function_definition-322-324", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=function_definition];
2064 [label="322_ lockTime_intou33[msg.sender] += _secondsToIncrease;\n2064-expression_statement-323-323", method="increaseLockTime_intou33(uint _secondsToIncrease)", type_label=expression_statement];
2072 [label="324_ function withdraw_intou33() public {\n        require(now > lockTime_intou33[msg.sender]);    \n        uint transferValue_intou33 = 10;           \n        msg.sender.transfer(transferValue_intou33);\n    }\n2072-function_definition-325-329", method="withdraw_intou33()", type_label=function_definition];
2076 [label="325_ require(now > lockTime_intou33[msg.sender]);\n2076-expression_statement-326-326", method="withdraw_intou33()", type_label=expression_statement];
2087 [label="326_ uint transferValue_intou33 = 10;\n2087-new_variable-327-327", method="withdraw_intou33()", type_label=new_variable];
2093 [label="327_ msg.sender.transfer(transferValue_intou33);\n2093-expression_statement-328-328", method="withdraw_intou33()", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 2127  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2127 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 2127  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
162 -> 179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
179 -> 186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
186 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
190 -> 207  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
207 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
214 -> 231  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
231 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
247 -> 263  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
263 -> 276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
276 -> 284  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
284 -> 290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
290 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
306 -> 314  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
314 -> 320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
329 -> 338  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
340 -> 350  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
354 -> 362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
362 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
410 -> 426  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
426 -> 439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
439 -> 447  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
447 -> 453  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
453 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
461 -> 469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
469 -> 475  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
486 -> 490  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
490 -> 496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
502 -> 507  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
514 -> 522  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
530 -> 534  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
534 -> 545  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
545 -> 551  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
560 -> 565  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
571 -> 587  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
587 -> 600  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
600 -> 608  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
608 -> 614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
614 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
617 -> 624  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
631 -> 639  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
647 -> 651  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
651 -> 662  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
662 -> 668  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
686 -> 690  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
690 -> 696  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
716 -> 720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
720 -> 726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
753 -> 761  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
769 -> 773  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
773 -> 784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
784 -> 790  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
823 -> 827  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
827 -> 831  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
841 -> 857  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
857 -> 870  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
870 -> 878  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
878 -> 884  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
884 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
887 -> 903  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
903 -> 912  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
912 -> 925  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
946 -> 954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
954 -> 960  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
966 -> 983  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
983 -> 994  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
994 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
997 -> 1001  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1001 -> 1007  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1013 -> 1034  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1034 -> 1055  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1055 -> 1064  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1064 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1067 -> 1071  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1071 -> 1077  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1083 -> 1100  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1120 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1129 -> 1145  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1145 -> 1158  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1158 -> 1166  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1166 -> 1172  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1172 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1175 -> 1196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1196 -> 1206  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1206 -> 1214  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1206 -> 3303  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3303 -> 1234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1214 -> 1231  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1231 -> 3303  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1231 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1240 -> 1256  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1256 -> 1269  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1269 -> 1277  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1277 -> 1283  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1283 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1302 -> 1310  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1318 -> 1322  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1322 -> 1333  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1333 -> 1339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1354 -> 1358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1358 -> 1364  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1370 -> 1376  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1383 -> 1391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1399 -> 1403  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1403 -> 1414  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1414 -> 1420  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1429 -> 1434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1441 -> 1449  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1457 -> 1461  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1461 -> 1472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1472 -> 1478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1493 -> 1497  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1497 -> 1503  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1509 -> 1514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1514 -> 1532  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1538 -> 1554  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1554 -> 1567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1567 -> 1575  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1575 -> 1581  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1581 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1602 -> 1611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1611 -> 1651  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1651 -> 1667  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1651 -> 3748  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3748 -> 1696  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1664 -> 1651  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1667 -> 1681  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1681 -> 1664  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1696 -> 1704  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1704 -> 1710  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1716 -> 1732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1732 -> 1741  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1741 -> 1751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1751 -> 1764  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1785 -> 1789  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1789 -> 1795  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1801 -> 1818  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1818 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1858 -> 1866  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1866 -> 1872  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1878 -> 1893  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1893 -> 1910  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1927 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1930 -> 1934  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1934 -> 1940  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1946 -> 1963  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1963 -> 1976  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1976 -> 1997  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2012 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2015 -> 2023  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2023 -> 2029  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2035 -> 2045  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2056 -> 2064  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2072 -> 2076  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2076 -> 2087  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2087 -> 2093  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
