digraph "" {
	node [label="\N"];
	0	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[9, 10, 11, 12, 13, 14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	1	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a == 0

IRs:
TMP_0(bool) = a == 0
CONDITION TMP_0",
		node_expression="a == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(bool) = a == 0
CONDITION TMP_0",
		node_source_code_lines="[10]",
		node_type=IF,
		source_file="buggy_17.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
0

IRs:
RETURN 0",
		node_expression=0,
		node_info_vulnerabilities=None,
		node_irs="RETURN 0",
		node_source_code_lines="[11]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	1 -> 2	[key=0,
		edge_type=if_true,
		label=True];
	3	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[10, 11, 12]",
		node_type=END_IF,
		source_file="buggy_17.sol"];
	1 -> 3	[key=0,
		edge_type=if_false,
		label=False];
	4	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a * b

IRs:
TMP_1(uint256) = a * b
c(uint256) := TMP_1(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(uint256) = a * b
c(uint256) := TMP_1(uint256)",
		node_source_code_lines="[13]",
		node_type="NEW VARIABLE",
		source_file="buggy_17.sol"];
	3 -> 4	[key=0,
		edge_type=next,
		label=Next];
	5	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(c / a == b)

IRs:
TMP_2(uint256) = c / a
TMP_3(bool) = TMP_2 == b
TMP_4(None) = \
SOLIDITY_CALL require(bool)(TMP_3)",
		node_expression="require(bool)(c / a == b)",
		node_info_vulnerabilities=None,
		node_irs="TMP_2(uint256) = c / a
TMP_3(bool) = TMP_2 == b
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[14]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	4 -> 5	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[15]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_17.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[9, 10, 11, 12, 13, 14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	7 -> 0	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20, 21]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	9	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b > 0)

IRs:
TMP_5(bool) = b > 0
TMP_6(None) = SOLIDITY_CALL require(bool)(TMP_\
5)",
		node_expression="require(bool)(b > 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_5(bool) = b > 0
TMP_6(None) = SOLIDITY_CALL require(bool)(TMP_5)",
		node_source_code_lines="[18]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	8 -> 9	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a / b

IRs:
TMP_7(uint256) = a / b
c(uint256) := TMP_7(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_7(uint256) = a / b
c(uint256) := TMP_7(uint256)",
		node_source_code_lines="[19]",
		node_type="NEW VARIABLE",
		source_file="buggy_17.sol"];
	9 -> 10	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[20]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	10 -> 11	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_17.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20, 21]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	12 -> 8	[key=0,
		edge_type=next,
		label=Next];
	13	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22, 23, 24, 25, 26]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	14	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b <= a)

IRs:
TMP_8(bool) = b <= a
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_\
8)",
		node_expression="require(bool)(b <= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_8(bool) = b <= a
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)",
		node_source_code_lines="[23]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	13 -> 14	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a - b

IRs:
TMP_10(uint256) = a - b
c(uint256) := TMP_10(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_10(uint256) = a - b
c(uint256) := TMP_10(uint256)",
		node_source_code_lines="[24]",
		node_type="NEW VARIABLE",
		source_file="buggy_17.sol"];
	14 -> 15	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[25]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	15 -> 16	[key=0,
		edge_type=next,
		label=Next];
	17	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_17.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22, 23, 24, 25, 26]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	17 -> 13	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29, 30, 31]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	19	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a + b

IRs:
TMP_11(uint256) = a + b
c(uint256) := TMP_11(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_11(uint256) = a + b
c(uint256) := TMP_11(uint256)",
		node_source_code_lines="[28]",
		node_type="NEW VARIABLE",
		source_file="buggy_17.sol"];
	18 -> 19	[key=0,
		edge_type=next,
		label=Next];
	20	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(c >= a && c >= b)

IRs:
TMP_12(bool) = c >= a
TMP_13(bool) = c >= b
TMP_14(bool) = \
TMP_12 && TMP_13
TMP_15(None) = SOLIDITY_CALL require(bool)(TMP_14)",
		node_expression="require(bool)(c >= a && c >= b)",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(bool) = c >= a
TMP_13(bool) = c >= b
TMP_14(bool) = TMP_12 && TMP_13
TMP_15(None) = SOLIDITY_CALL require(bool)(TMP_14)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	19 -> 20	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[30]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	20 -> 21	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_17.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29, 30, 31]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	22 -> 18	[key=0,
		edge_type=next,
		label=Next];
	23	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	24	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b != 0)

IRs:
TMP_16(bool) = b != 0
TMP_17(None) = SOLIDITY_CALL require(bool)(\
TMP_16)",
		node_expression="require(bool)(b != 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_16(bool) = b != 0
TMP_17(None) = SOLIDITY_CALL require(bool)(TMP_16)",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a % b

IRs:
TMP_18(uint256) = a % b
RETURN TMP_18",
		node_expression="a % b",
		node_info_vulnerabilities=None,
		node_irs="TMP_18(uint256) = a % b
RETURN TMP_18",
		node_source_code_lines="[34]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	24 -> 25	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="buggy_17.sol_SafeMath_mod(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	26 -> 23	[key=0,
		edge_type=next,
		label=Next];
	27	[contract_name=SafeMath,
		function_fullname="max256(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[36, 37, 38]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	28	[contract_name=SafeMath,
		function_fullname="max256(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a >= b

IRs:
TMP_19(bool) = a >= b
CONDITION TMP_19",
		node_expression="a >= b",
		node_info_vulnerabilities=None,
		node_irs="TMP_19(bool) = a >= b
CONDITION TMP_19",
		node_source_code_lines="[37]",
		node_type=IF,
		source_file="buggy_17.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=SafeMath,
		function_fullname="max256(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a

IRs:
RETURN a",
		node_expression=a,
		node_info_vulnerabilities=None,
		node_irs="RETURN a",
		node_source_code_lines="[37]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	28 -> 29	[key=0,
		edge_type=if_true,
		label=True];
	30	[contract_name=SafeMath,
		function_fullname="max256(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
b

IRs:
RETURN b",
		node_expression=b,
		node_info_vulnerabilities=None,
		node_irs="RETURN b",
		node_source_code_lines="[37]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	28 -> 30	[key=0,
		edge_type=if_false,
		label=False];
	31	[contract_name=SafeMath,
		function_fullname="max256(uint256,uint256)",
		label="buggy_17.sol_SafeMath_max256(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[36, 37, 38]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	31 -> 27	[key=0,
		edge_type=next,
		label=Next];
	32	[contract_name=SafeMath,
		function_fullname="min256(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[39, 40, 41]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	33	[contract_name=SafeMath,
		function_fullname="min256(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a < b

IRs:
TMP_20(bool) = a < b
CONDITION TMP_20",
		node_expression="a < b",
		node_info_vulnerabilities=None,
		node_irs="TMP_20(bool) = a < b
CONDITION TMP_20",
		node_source_code_lines="[40]",
		node_type=IF,
		source_file="buggy_17.sol"];
	32 -> 33	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=SafeMath,
		function_fullname="min256(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a

IRs:
RETURN a",
		node_expression=a,
		node_info_vulnerabilities=None,
		node_irs="RETURN a",
		node_source_code_lines="[40]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	33 -> 34	[key=0,
		edge_type=if_true,
		label=True];
	35	[contract_name=SafeMath,
		function_fullname="min256(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
b

IRs:
RETURN b",
		node_expression=b,
		node_info_vulnerabilities=None,
		node_irs="RETURN b",
		node_source_code_lines="[40]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	33 -> 35	[key=0,
		edge_type=if_false,
		label=False];
	36	[contract_name=SafeMath,
		function_fullname="min256(uint256,uint256)",
		label="buggy_17.sol_SafeMath_min256(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[39, 40, 41]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	36 -> 32	[key=0,
		edge_type=next,
		label=Next];
	37	[contract_name=owned,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	38	[contract_name=owned,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_21(bool) = tx.origin == owner_txorigin10
\
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_21(bool) = tx.origin == owner_txorigin10
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	37 -> 38	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=owned,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_23 = CONVERT this to address
REF_1 -> BALANCE \
TMP_23
Transfer dest:_recipient value:REF_1",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_23 = CONVERT this to address
REF_1 -> BALANCE TMP_23
Transfer dest:_recipient value:REF_1",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	38 -> 39	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=owned,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_17.sol_owned_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	40 -> 37	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=owned,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[55, 56, 57]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	42	[contract_name=owned,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	41 -> 42	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=owned,
		function_fullname="constructor()",
		label="buggy_17.sol_owned_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	43 -> 41	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=owned,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[58, 59, 60]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	45	[contract_name=owned,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_25(bool) = tx.origin == owner_txorigin20
\
TMP_26(None) = SOLIDITY_CALL require(bool)(TMP_25)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_25(bool) = tx.origin == owner_txorigin20
TMP_26(None) = SOLIDITY_CALL require(bool)(TMP_25)",
		node_source_code_lines="[59]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	44 -> 45	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=owned,
		function_fullname="bug_txorigin20(address)",
		label="buggy_17.sol_owned_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[58, 59, 60]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	46 -> 44	[key=0,
		edge_type=next,
		label=Next];
	47	[contract_name=owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[67, 68, 69]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	49	[contract_name=owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, owned.onlyOwner()()",
		node_source_code_lines="[67]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	47 -> 49	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[68]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	49 -> 48	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=owned,
		function_fullname="transferOwnership(address)",
		label="buggy_17.sol_owned_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[67, 68, 69]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	50 -> 47	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=owned,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[70, 71, 72]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	52	[contract_name=owned,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_28(bool) = tx.origin == owner_txorigin32
\
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_28(bool) = tx.origin == owner_txorigin32
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_source_code_lines="[71]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=owned,
		function_fullname="bug_txorigin32(address)",
		label="buggy_17.sol_owned_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[70, 71, 72]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	53 -> 51	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=owned,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[62, 63, 64, 65]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	55	[contract_name=owned,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_30(bool) = msg.sender == owner
TMP_31(None) = SOLIDITY_\
CALL require(bool)(TMP_30)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_30(bool) = msg.sender == owner
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)",
		node_source_code_lines="[63]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	54 -> 55	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=owned,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[64]",
		node_type=_,
		source_file="buggy_17.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=owned,
		function_fullname="onlyOwner()",
		label="buggy_17.sol_owned_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[62, 63, 64, 65]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	57 -> 54	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=tokenRecipient,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="buggy_17.sol_tokenRecipient_receiveApproval(address,uint256,address,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[76]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	59	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[82, 83, 84, 85]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	60	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_32(bool) = tx.origin == owner_txorigin22
\
TMP_33(None) = SOLIDITY_CALL require(bool)(TMP_32)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_32(bool) = tx.origin == owner_txorigin22
TMP_33(None) = SOLIDITY_CALL require(bool)(TMP_32)",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	59 -> 60	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_34 = CONVERT this to address
REF_3 -> BALANCE \
TMP_34
Transfer dest:_recipient value:REF_3",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_34 = CONVERT this to address
REF_3 -> BALANCE TMP_34
Transfer dest:_recipient value:REF_3",
		node_source_code_lines="[84]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	60 -> 61	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_17.sol_TokenERC20_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[82, 83, 84, 85]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	62 -> 59	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=TokenERC20,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[87, 88, 89]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	64	[contract_name=TokenERC20,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_36(bool) = tx.origin == owner_txorigin12
\
TMP_37(None) = SOLIDITY_CALL require(bool)(TMP_36)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_36(bool) = tx.origin == owner_txorigin12
TMP_37(None) = SOLIDITY_CALL require(bool)(TMP_36)",
		node_source_code_lines="[88]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	63 -> 64	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=TokenERC20,
		function_fullname="bug_txorigin12(address)",
		label="buggy_17.sol_TokenERC20_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[87, 88, 89]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	65 -> 63	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	67	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_38(bool) = tx.origin == owner_txorigin11
\
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_38(bool) = tx.origin == owner_txorigin11
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	66 -> 67	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_4(None) -> to.call
REF_5(None) -> REF_4.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_4(None) -> to.call
REF_5(None) -> REF_4.value",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_17.sol_TokenERC20_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	69 -> 66	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[96, 97, 98, 99]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	71	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_41(bool) = tx.origin == owner_txorigin1
\
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_41(bool) = tx.origin == owner_txorigin1
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	70 -> 71	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[98]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	71 -> 72	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_17.sol_TokenERC20_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[96, 97, 98, 99]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	73 -> 70	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[102, 103, 104, 105]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	75	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_44(bool) = tx.origin == owner_txorigin2
\
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_44(bool) = tx.origin == owner_txorigin2
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_source_code_lines="[103]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	74 -> 75	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_46 = CONVERT this to address
REF_8 -> BALANCE \
TMP_46
Transfer dest:_recipient value:REF_8",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_46 = CONVERT this to address
REF_8 -> BALANCE TMP_46
Transfer dest:_recipient value:REF_8",
		node_source_code_lines="[104]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	75 -> 76	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_17.sol_TokenERC20_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[102, 103, 104, 105]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	77 -> 74	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	79	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_48(bool) = tx.origin == owner_txorigin17
\
TMP_49(None) = SOLIDITY_CALL require(bool)(TMP_48)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_48(bool) = tx.origin == owner_txorigin17
TMP_49(None) = SOLIDITY_CALL require(bool)(TMP_48)",
		node_source_code_lines="[108]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	78 -> 79	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[109]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	79 -> 80	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_17.sol_TokenERC20_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	81 -> 78	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	83	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_51(bool) = tx.origin == owner_txorigin27
\
TMP_52(None) = SOLIDITY_CALL require(bool)(TMP_51)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_51(bool) = tx.origin == owner_txorigin27
TMP_52(None) = SOLIDITY_CALL require(bool)(TMP_51)",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	82 -> 83	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	83 -> 84	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_17.sol_TokenERC20_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	85 -> 82	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[119, 120, 121, 122]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	87	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_54(bool) = tx.origin == owner_txorigin31
\
TMP_55(None) = SOLIDITY_CALL require(bool)(TMP_54)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_54(bool) = tx.origin == owner_txorigin31
TMP_55(None) = SOLIDITY_CALL require(bool)(TMP_54)",
		node_source_code_lines="[120]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	86 -> 87	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_12(None) -> to.call
REF_13(None) -> REF_12.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_12(None) -> to.call
REF_13(None) -> REF_12.value",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_17.sol_TokenERC20_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[119, 120, 121, 122]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	89 -> 86	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[125, 126, 127, 128]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	91	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_57(bool) = tx.origin == owner_txorigin13
\
TMP_58(None) = SOLIDITY_CALL require(bool)(TMP_57)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_57(bool) = tx.origin == owner_txorigin13
TMP_58(None) = SOLIDITY_CALL require(bool)(TMP_57)",
		node_source_code_lines="[126]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	90 -> 91	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	91 -> 92	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=TokenERC20,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_17.sol_TokenERC20_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[125, 126, 127, 128]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	93 -> 90	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=TokenERC20,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135, 136]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	95	[contract_name=TokenERC20,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
decimals = dec

IRs:
decimals(uint8) := dec(uint8)",
		node_expression="decimals = dec",
		node_info_vulnerabilities=None,
		node_irs="decimals(uint8) := dec(uint8)",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	94 -> 95	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=TokenERC20,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
name = tokenName

IRs:
name(string) := tokenName(string)",
		node_expression="name = tokenName",
		node_info_vulnerabilities=None,
		node_irs="name(string) := tokenName(string)",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	95 -> 96	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=TokenERC20,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
symbol = tokenSymbol

IRs:
symbol(string) := tokenSymbol(string)",
		node_expression="symbol = tokenSymbol",
		node_info_vulnerabilities=None,
		node_irs="symbol(string) := tokenSymbol(string)",
		node_source_code_lines="[135]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	96 -> 97	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=TokenERC20,
		function_fullname="constructor(string,string,uint8)",
		label="buggy_17.sol_TokenERC20_constructor(string,string,uint8)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135, 136]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	98 -> 94	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[137, 138, 139, 140]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	100	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_60(bool) = tx.origin == owner_txorigin38
\
TMP_61(None) = SOLIDITY_CALL require(bool)(TMP_60)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_60(bool) = tx.origin == owner_txorigin38
TMP_61(None) = SOLIDITY_CALL require(bool)(TMP_60)",
		node_source_code_lines="[138]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	99 -> 100	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_62 = CONVERT this to address
REF_16 -> BALANCE \
TMP_62
Transfer dest:_recipient value:REF_16",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_62 = CONVERT this to address
REF_16 -> BALANCE TMP_62
Transfer dest:_recipient value:REF_16",
		node_source_code_lines="[139]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	100 -> 101	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_17.sol_TokenERC20_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[137, 138, 139, 140]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	102 -> 99	[key=0,
		edge_type=next,
		label=Next];
	103	[contract_name=TokenERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[142, 143, 144, 145, 146, 147]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	104	[contract_name=TokenERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_to != address(0x0))

IRs:
TMP_64 = CONVERT 0 to address
TMP_65(bool) = _to != \
TMP_64
TMP_66(None) = SOLIDITY_CALL require(bool)(TMP_65)",
		node_expression="require(bool)(_to != address(0x0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_64 = CONVERT 0 to address
TMP_65(bool) = _to != TMP_64
TMP_66(None) = SOLIDITY_CALL require(bool)(TMP_65)",
		node_source_code_lines="[143]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=TokenERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balanceOf[_from] = balanceOf[_from].sub(_value)

IRs:
REF_17(uint256) -> balanceOf[_from]
REF_\
18(uint256) -> balanceOf[_from]
TMP_67(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_18', '_value'] 
REF_17 (->balanceOf) := TMP_67(uint256)",
		node_expression="balanceOf[_from] = balanceOf[_from].sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_17(uint256) -> balanceOf[_from]
REF_18(uint256) -> balanceOf[_from]
TMP_67(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_18', '_value'] 
REF_17 (->balanceOf) := TMP_67(uint256)",
		node_source_code_lines="[144]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	104 -> 105	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=TokenERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balanceOf[_to] = balanceOf[_to].add(_value)

IRs:
REF_20(uint256) -> balanceOf[_to]
REF_21(uint256) \
-> balanceOf[_to]
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_21', '_\
value'] 
REF_20 (->balanceOf) := TMP_68(uint256)",
		node_expression="balanceOf[_to] = balanceOf[_to].add(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_20(uint256) -> balanceOf[_to]
REF_21(uint256) -> balanceOf[_to]
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_21', '_value'] 
REF_20 (->balanceOf) := TMP_68(uint256)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	105 -> 106	[key=0,
		edge_type=next,
		label=Next];
	107	[contract_name=TokenERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(_from,_to,_value)

IRs:
Emit Transfer(_from._to._value)",
		node_expression="Transfer(_from,_to,_value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(_from._to._value)",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	106 -> 107	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=TokenERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="buggy_17.sol_TokenERC20__transfer(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[142, 143, 144, 145, 146, 147]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	108 -> 103	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=TokenERC20,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[148, 149, 150]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	110	[contract_name=TokenERC20,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_70(bool) = tx.origin == owner_txorigin4
\
TMP_71(None) = SOLIDITY_CALL require(bool)(TMP_70)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_70(bool) = tx.origin == owner_txorigin4
TMP_71(None) = SOLIDITY_CALL require(bool)(TMP_70)",
		node_source_code_lines="[149]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	109 -> 110	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=TokenERC20,
		function_fullname="bug_txorigin4(address)",
		label="buggy_17.sol_TokenERC20_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[148, 149, 150]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	111 -> 109	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=TokenERC20,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[152, 153, 154, 155]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	113	[contract_name=TokenERC20,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(msg.sender,_to,_value)

IRs:
INTERNAL_CALL, TokenERC20._transfer(address,address,uint256)(\
msg.sender,_to,_value)",
		node_expression="_transfer(msg.sender,_to,_value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, TokenERC20._transfer(address,address,uint256)(msg.sender,_to,_value)",
		node_source_code_lines="[153]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=TokenERC20,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[154]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=TokenERC20,
		function_fullname="transfer(address,uint256)",
		label="buggy_17.sol_TokenERC20_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[152, 153, 154, 155]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	115 -> 112	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[156, 157, 158, 159]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	117	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_73(bool) = tx.origin == owner_txorigin7
\
TMP_74(None) = SOLIDITY_CALL require(bool)(TMP_73)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_73(bool) = tx.origin == owner_txorigin7
TMP_74(None) = SOLIDITY_CALL require(bool)(TMP_73)",
		node_source_code_lines="[157]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	116 -> 117	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_23(None) -> to.call
REF_24(None) -> REF_23.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_23(None) -> to.call
REF_24(None) -> REF_23.value",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	117 -> 118	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_17.sol_TokenERC20_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[156, 157, 158, 159]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	119 -> 116	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=TokenERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164, 165, 166]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	121	[contract_name=TokenERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value)

IRs:
REF_25(mapping(\
address => uint256)) -> allowance[_from]
REF_26(uint256) -> REF_25[msg.sender]
REF_27(mapping(address => uint256)) -> allowance[_\
from]
REF_28(uint256) -> REF_27[msg.sender]
TMP_76(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['REF_28', '_value'] 
REF_26 (->allowance) := TMP_76(uint256)",
		node_expression="allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_25(mapping(address => uint256)) -> allowance[_from]
REF_26(uint256) -> REF_25[msg.sender]
REF_27(mapping(address => uint256)) \
-> allowance[_from]
REF_28(uint256) -> REF_27[msg.sender]
TMP_76(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,\
uint256), arguments:['REF_28', '_value'] 
REF_26 (->allowance) := TMP_76(uint256)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	120 -> 121	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=TokenERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(_from,_to,_value)

IRs:
INTERNAL_CALL, TokenERC20._transfer(address,address,uint256)(_\
from,_to,_value)",
		node_expression="_transfer(_from,_to,_value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, TokenERC20._transfer(address,address,uint256)(_from,_to,_value)",
		node_source_code_lines="[164]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	121 -> 122	[key=0,
		edge_type=next,
		label=Next];
	123	[contract_name=TokenERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[165]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	122 -> 123	[key=0,
		edge_type=next,
		label=Next];
	124	[contract_name=TokenERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_17.sol_TokenERC20_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164, 165, 166]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	124 -> 120	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[167, 168, 169, 170]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	126	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_78(bool) = tx.origin == owner_txorigin23
\
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_78(bool) = tx.origin == owner_txorigin23
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_source_code_lines="[168]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	125 -> 126	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_30(None) -> to.call
REF_31(None) -> REF_30.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_30(None) -> to.call
REF_31(None) -> REF_30.value",
		node_source_code_lines="[169]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=TokenERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_17.sol_TokenERC20_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[167, 168, 169, 170]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	128 -> 125	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=TokenERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[173, 174, 175, 176, 177]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	130	[contract_name=TokenERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowance[msg.sender][_spender] = _value

IRs:
REF_32(mapping(address => uint256)) -> allowance[\
msg.sender]
REF_33(uint256) -> REF_32[_spender]
REF_33 (->allowance) := _value(uint256)",
		node_expression="allowance[msg.sender][_spender] = _value",
		node_info_vulnerabilities=None,
		node_irs="REF_32(mapping(address => uint256)) -> allowance[msg.sender]
REF_33(uint256) -> REF_32[_spender]
REF_33 (->allowance) := _value(\
uint256)",
		node_source_code_lines="[174]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	129 -> 130	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=TokenERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,_spender,_value)

IRs:
Emit Approval(msg.sender._spender._value)",
		node_expression="Approval(msg.sender,_spender,_value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(msg.sender._spender._value)",
		node_source_code_lines="[175]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	130 -> 131	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=TokenERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[176]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	131 -> 132	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=TokenERC20,
		function_fullname="approve(address,uint256)",
		label="buggy_17.sol_TokenERC20_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[173, 174, 175, 176, 177]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	133 -> 129	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	135	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_82(bool) = tx.origin == owner_txorigin14
\
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_82(bool) = tx.origin == owner_txorigin14
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	134 -> 135	[key=0,
		edge_type=next,
		label=Next];
	136	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_84 = CONVERT this to address
REF_35 -> BALANCE \
TMP_84
Transfer dest:_recipient value:REF_35",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_84 = CONVERT this to address
REF_35 -> BALANCE TMP_84
Transfer dest:_recipient value:REF_35",
		node_source_code_lines="[180]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	135 -> 136	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_17.sol_TokenERC20_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	137 -> 134	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=TokenERC20,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[184, 185, 186, 187, 188, 189, 190]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	139	[contract_name=TokenERC20,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
spender = tokenRecipient(_spender)

IRs:
TMP_86 = CONVERT _spender to tokenRecipient
spender(\
tokenRecipient) := TMP_86(tokenRecipient)",
		node_expression="spender = tokenRecipient(_spender)",
		node_info_vulnerabilities=None,
		node_irs="TMP_86 = CONVERT _spender to tokenRecipient
spender(tokenRecipient) := TMP_86(tokenRecipient)",
		node_source_code_lines="[185]",
		node_type="NEW VARIABLE",
		source_file="buggy_17.sol"];
	138 -> 139	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=TokenERC20,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: IF

EXPRESSION:
approve(_spender,_value)

IRs:
TMP_87(bool) = INTERNAL_CALL, TokenERC20.approve(address,uint256)(_spender,_\
value)
CONDITION TMP_87",
		node_expression="approve(_spender,_value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_87(bool) = INTERNAL_CALL, TokenERC20.approve(address,uint256)(_spender,_value)
CONDITION TMP_87",
		node_source_code_lines="[186]",
		node_type=IF,
		source_file="buggy_17.sol"];
	139 -> 140	[key=0,
		edge_type=next,
		label=Next];
	141	[contract_name=TokenERC20,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
spender.receiveApproval(msg.sender,_value,address(this),_extraData)

IRs:
TMP_88 = CONVERT this \
to address
HIGH_LEVEL_CALL, dest:spender(tokenRecipient), function:receiveApproval, arguments:['msg.sender', '_value', 'TMP_88', '_\
extraData']  ",
		node_expression="spender.receiveApproval(msg.sender,_value,address(this),_extraData)",
		node_info_vulnerabilities=None,
		node_irs="TMP_88 = CONVERT this to address
HIGH_LEVEL_CALL, dest:spender(tokenRecipient), function:receiveApproval, arguments:['msg.sender', '_\
value', 'TMP_88', '_extraData']  ",
		node_source_code_lines="[187]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	140 -> 141	[key=0,
		edge_type=if_true,
		label=True];
	143	[contract_name=TokenERC20,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[186, 187, 188, 189]",
		node_type=END_IF,
		source_file="buggy_17.sol"];
	140 -> 143	[key=0,
		edge_type=if_false,
		label=False];
	142	[contract_name=TokenERC20,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[188]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	141 -> 142	[key=0,
		edge_type=next,
		label=Next];
	144	[contract_name=TokenERC20,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="buggy_17.sol_TokenERC20_approveAndCall(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[184, 185, 186, 187, 188, 189, 190]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	144 -> 138	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[191, 192, 193, 194]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	146	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_90(bool) = tx.origin == owner_txorigin30
\
TMP_91(None) = SOLIDITY_CALL require(bool)(TMP_90)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_90(bool) = tx.origin == owner_txorigin30
TMP_91(None) = SOLIDITY_CALL require(bool)(TMP_90)",
		node_source_code_lines="[192]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	145 -> 146	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_92 = CONVERT this to address
REF_38 -> BALANCE \
TMP_92
Transfer dest:_recipient value:REF_38",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_92 = CONVERT this to address
REF_38 -> BALANCE TMP_92
Transfer dest:_recipient value:REF_38",
		node_source_code_lines="[193]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	146 -> 147	[key=0,
		edge_type=next,
		label=Next];
	148	[contract_name=TokenERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_17.sol_TokenERC20_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[191, 192, 193, 194]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	148 -> 145	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[82, 83, 84, 85]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	150	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_94(bool) = tx.origin == owner_txorigin22
\
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_94(bool) = tx.origin == owner_txorigin22
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	149 -> 150	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_96 = CONVERT this to address
REF_40 -> BALANCE \
TMP_96
Transfer dest:_recipient value:REF_40",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_96 = CONVERT this to address
REF_40 -> BALANCE TMP_96
Transfer dest:_recipient value:REF_40",
		node_source_code_lines="[84]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	150 -> 151	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_17.sol_AZT_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[82, 83, 84, 85]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	152 -> 149	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=AZT,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[87, 88, 89]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	154	[contract_name=AZT,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_98(bool) = tx.origin == owner_txorigin12
\
TMP_99(None) = SOLIDITY_CALL require(bool)(TMP_98)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_98(bool) = tx.origin == owner_txorigin12
TMP_99(None) = SOLIDITY_CALL require(bool)(TMP_98)",
		node_source_code_lines="[88]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=AZT,
		function_fullname="bug_txorigin12(address)",
		label="buggy_17.sol_AZT_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[87, 88, 89]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	155 -> 153	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=AZT,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	157	[contract_name=AZT,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_100(bool) = tx.origin == owner_txorigin11
\
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_100(bool) = tx.origin == owner_txorigin11
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	156 -> 157	[key=0,
		edge_type=next,
		label=Next];
	158	[contract_name=AZT,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_41(None) -> to.call
REF_42(None) -> REF_41.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_41(None) -> to.call
REF_42(None) -> REF_41.value",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	157 -> 158	[key=0,
		edge_type=next,
		label=Next];
	159	[contract_name=AZT,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_17.sol_AZT_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	159 -> 156	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=AZT,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[96, 97, 98, 99]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	161	[contract_name=AZT,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_103(bool) = tx.origin == owner_txorigin1
\
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_103(bool) = tx.origin == owner_txorigin1
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	160 -> 161	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=AZT,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[98]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	161 -> 162	[key=0,
		edge_type=next,
		label=Next];
	163	[contract_name=AZT,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_17.sol_AZT_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[96, 97, 98, 99]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	163 -> 160	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[102, 103, 104, 105]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	165	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_106(bool) = tx.origin == owner_txorigin2
\
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_106(bool) = tx.origin == owner_txorigin2
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_source_code_lines="[103]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	164 -> 165	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_108 = CONVERT this to address
REF_45 -> \
BALANCE TMP_108
Transfer dest:_recipient value:REF_45",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_108 = CONVERT this to address
REF_45 -> BALANCE TMP_108
Transfer dest:_recipient value:REF_45",
		node_source_code_lines="[104]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	165 -> 166	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_17.sol_AZT_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[102, 103, 104, 105]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	167 -> 164	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=AZT,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	169	[contract_name=AZT,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_110(bool) = tx.origin == owner_txorigin17
\
TMP_111(None) = SOLIDITY_CALL require(bool)(TMP_110)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_110(bool) = tx.origin == owner_txorigin17
TMP_111(None) = SOLIDITY_CALL require(bool)(TMP_110)",
		node_source_code_lines="[108]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	168 -> 169	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=AZT,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[109]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	169 -> 170	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=AZT,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_17.sol_AZT_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	171 -> 168	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=AZT,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	173	[contract_name=AZT,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_113(bool) = tx.origin == owner_txorigin27
\
TMP_114(None) = SOLIDITY_CALL require(bool)(TMP_113)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_113(bool) = tx.origin == owner_txorigin27
TMP_114(None) = SOLIDITY_CALL require(bool)(TMP_113)",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	172 -> 173	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=AZT,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_47(None) -> to.call
REF_48(None) -> REF_47.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_47(None) -> to.call
REF_48(None) -> REF_47.value",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	173 -> 174	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=AZT,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_17.sol_AZT_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	175 -> 172	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=AZT,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[119, 120, 121, 122]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	177	[contract_name=AZT,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_116(bool) = tx.origin == owner_txorigin31
\
TMP_117(None) = SOLIDITY_CALL require(bool)(TMP_116)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_116(bool) = tx.origin == owner_txorigin31
TMP_117(None) = SOLIDITY_CALL require(bool)(TMP_116)",
		node_source_code_lines="[120]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	176 -> 177	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=AZT,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_49(None) -> to.call
REF_50(None) -> REF_49.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_49(None) -> to.call
REF_50(None) -> REF_49.value",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	177 -> 178	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=AZT,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_17.sol_AZT_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[119, 120, 121, 122]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	179 -> 176	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=AZT,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[125, 126, 127, 128]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	181	[contract_name=AZT,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_119(bool) = tx.origin == owner_txorigin13
\
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_119(bool) = tx.origin == owner_txorigin13
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_source_code_lines="[126]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	180 -> 181	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=AZT,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	181 -> 182	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=AZT,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_17.sol_AZT_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[125, 126, 127, 128]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	183 -> 180	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=AZT,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135, 136]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	185	[contract_name=AZT,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
decimals = dec

IRs:
decimals(uint8) := dec(uint8)",
		node_expression="decimals = dec",
		node_info_vulnerabilities=None,
		node_irs="decimals(uint8) := dec(uint8)",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	184 -> 185	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=AZT,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
name = tokenName

IRs:
name(string) := tokenName(string)",
		node_expression="name = tokenName",
		node_info_vulnerabilities=None,
		node_irs="name(string) := tokenName(string)",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	185 -> 186	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=AZT,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
symbol = tokenSymbol

IRs:
symbol(string) := tokenSymbol(string)",
		node_expression="symbol = tokenSymbol",
		node_info_vulnerabilities=None,
		node_irs="symbol(string) := tokenSymbol(string)",
		node_source_code_lines="[135]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	186 -> 187	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=AZT,
		function_fullname="constructor(string,string,uint8)",
		label="buggy_17.sol_AZT_constructor(string,string,uint8)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135, 136]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	188 -> 184	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[137, 138, 139, 140]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	190	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_122(bool) = tx.origin == owner_txorigin38
\
TMP_123(None) = SOLIDITY_CALL require(bool)(TMP_122)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_122(bool) = tx.origin == owner_txorigin38
TMP_123(None) = SOLIDITY_CALL require(bool)(TMP_122)",
		node_source_code_lines="[138]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	189 -> 190	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_124 = CONVERT this to address
REF_53 -> \
BALANCE TMP_124
Transfer dest:_recipient value:REF_53",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_124 = CONVERT this to address
REF_53 -> BALANCE TMP_124
Transfer dest:_recipient value:REF_53",
		node_source_code_lines="[139]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	190 -> 191	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_17.sol_AZT_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[137, 138, 139, 140]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	192 -> 189	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[142, 143, 144, 145, 146, 147]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	194	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_to != address(0x0))

IRs:
TMP_126 = CONVERT 0 to address
TMP_127(bool) = _to != \
TMP_126
TMP_128(None) = SOLIDITY_CALL require(bool)(TMP_127)",
		node_expression="require(bool)(_to != address(0x0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_126 = CONVERT 0 to address
TMP_127(bool) = _to != TMP_126
TMP_128(None) = SOLIDITY_CALL require(bool)(TMP_127)",
		node_source_code_lines="[143]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balanceOf[_from] = balanceOf[_from].sub(_value)

IRs:
REF_54(uint256) -> balanceOf[_from]
REF_\
55(uint256) -> balanceOf[_from]
TMP_129(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_55', '_value'] 
REF_54 (->balanceOf) := TMP_129(uint256)",
		node_expression="balanceOf[_from] = balanceOf[_from].sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_54(uint256) -> balanceOf[_from]
REF_55(uint256) -> balanceOf[_from]
TMP_129(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_55', '_value'] 
REF_54 (->balanceOf) := TMP_129(uint256)",
		node_source_code_lines="[144]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balanceOf[_to] = balanceOf[_to].add(_value)

IRs:
REF_57(uint256) -> balanceOf[_to]
REF_58(uint256) \
-> balanceOf[_to]
TMP_130(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_58', '_\
value'] 
REF_57 (->balanceOf) := TMP_130(uint256)",
		node_expression="balanceOf[_to] = balanceOf[_to].add(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_57(uint256) -> balanceOf[_to]
REF_58(uint256) -> balanceOf[_to]
TMP_130(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_58', '_value'] 
REF_57 (->balanceOf) := TMP_130(uint256)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	195 -> 196	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(_from,_to,_value)

IRs:
Emit Transfer(_from._to._value)",
		node_expression="Transfer(_from,_to,_value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(_from._to._value)",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	196 -> 197	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="buggy_17.sol_AZT__transfer(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[142, 143, 144, 145, 146, 147]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	198 -> 193	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=AZT,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[148, 149, 150]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	200	[contract_name=AZT,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_132(bool) = tx.origin == owner_txorigin4
\
TMP_133(None) = SOLIDITY_CALL require(bool)(TMP_132)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_132(bool) = tx.origin == owner_txorigin4
TMP_133(None) = SOLIDITY_CALL require(bool)(TMP_132)",
		node_source_code_lines="[149]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	199 -> 200	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=AZT,
		function_fullname="bug_txorigin4(address)",
		label="buggy_17.sol_AZT_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[148, 149, 150]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	201 -> 199	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=AZT,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[152, 153, 154, 155]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	203	[contract_name=AZT,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(msg.sender,_to,_value)

IRs:
INTERNAL_CALL, AZT._transfer(address,address,uint256)(\
msg.sender,_to,_value)",
		node_expression="_transfer(msg.sender,_to,_value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, AZT._transfer(address,address,uint256)(msg.sender,_to,_value)",
		node_source_code_lines="[153]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	202 -> 203	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=AZT,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[154]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	203 -> 204	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=AZT,
		function_fullname="transfer(address,uint256)",
		label="buggy_17.sol_AZT_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[152, 153, 154, 155]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	205 -> 202	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=AZT,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[156, 157, 158, 159]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	207	[contract_name=AZT,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_135(bool) = tx.origin == owner_txorigin7
\
TMP_136(None) = SOLIDITY_CALL require(bool)(TMP_135)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_135(bool) = tx.origin == owner_txorigin7
TMP_136(None) = SOLIDITY_CALL require(bool)(TMP_135)",
		node_source_code_lines="[157]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=AZT,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_60(None) -> to.call
REF_61(None) -> REF_60.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_60(None) -> to.call
REF_61(None) -> REF_60.value",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	207 -> 208	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=AZT,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_17.sol_AZT_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[156, 157, 158, 159]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	209 -> 206	[key=0,
		edge_type=next,
		label=Next];
	210	[contract_name=AZT,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164, 165, 166]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	211	[contract_name=AZT,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value)

IRs:
REF_62(mapping(\
address => uint256)) -> allowance[_from]
REF_63(uint256) -> REF_62[msg.sender]
REF_64(mapping(address => uint256)) -> allowance[_\
from]
REF_65(uint256) -> REF_64[msg.sender]
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['REF_65', '_value'] 
REF_63 (->allowance) := TMP_138(uint256)",
		node_expression="allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_62(mapping(address => uint256)) -> allowance[_from]
REF_63(uint256) -> REF_62[msg.sender]
REF_64(mapping(address => uint256)) \
-> allowance[_from]
REF_65(uint256) -> REF_64[msg.sender]
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_65', '_value'] 
REF_63 (->allowance) := TMP_138(uint256)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	210 -> 211	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=AZT,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(_from,_to,_value)

IRs:
INTERNAL_CALL, AZT._transfer(address,address,uint256)(_from,_\
to,_value)",
		node_expression="_transfer(_from,_to,_value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, AZT._transfer(address,address,uint256)(_from,_to,_value)",
		node_source_code_lines="[164]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	211 -> 212	[key=0,
		edge_type=next,
		label=Next];
	213	[contract_name=AZT,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[165]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	212 -> 213	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=AZT,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_17.sol_AZT_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164, 165, 166]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	214 -> 210	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=AZT,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[167, 168, 169, 170]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	216	[contract_name=AZT,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_140(bool) = tx.origin == owner_txorigin23
\
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_140(bool) = tx.origin == owner_txorigin23
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_source_code_lines="[168]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	215 -> 216	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=AZT,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_67(None) -> to.call
REF_68(None) -> REF_67.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_67(None) -> to.call
REF_68(None) -> REF_67.value",
		node_source_code_lines="[169]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	216 -> 217	[key=0,
		edge_type=next,
		label=Next];
	218	[contract_name=AZT,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_17.sol_AZT_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[167, 168, 169, 170]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	218 -> 215	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=AZT,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[173, 174, 175, 176, 177]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	220	[contract_name=AZT,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowance[msg.sender][_spender] = _value

IRs:
REF_69(mapping(address => uint256)) -> allowance[\
msg.sender]
REF_70(uint256) -> REF_69[_spender]
REF_70 (->allowance) := _value(uint256)",
		node_expression="allowance[msg.sender][_spender] = _value",
		node_info_vulnerabilities=None,
		node_irs="REF_69(mapping(address => uint256)) -> allowance[msg.sender]
REF_70(uint256) -> REF_69[_spender]
REF_70 (->allowance) := _value(\
uint256)",
		node_source_code_lines="[174]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	219 -> 220	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=AZT,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,_spender,_value)

IRs:
Emit Approval(msg.sender._spender._value)",
		node_expression="Approval(msg.sender,_spender,_value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(msg.sender._spender._value)",
		node_source_code_lines="[175]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=AZT,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[176]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=AZT,
		function_fullname="approve(address,uint256)",
		label="buggy_17.sol_AZT_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[173, 174, 175, 176, 177]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	223 -> 219	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	225	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_144(bool) = tx.origin == owner_txorigin14
\
TMP_145(None) = SOLIDITY_CALL require(bool)(TMP_144)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_144(bool) = tx.origin == owner_txorigin14
TMP_145(None) = SOLIDITY_CALL require(bool)(TMP_144)",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	224 -> 225	[key=0,
		edge_type=next,
		label=Next];
	226	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_146 = CONVERT this to address
REF_72 -> \
BALANCE TMP_146
Transfer dest:_recipient value:REF_72",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_146 = CONVERT this to address
REF_72 -> BALANCE TMP_146
Transfer dest:_recipient value:REF_72",
		node_source_code_lines="[180]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	225 -> 226	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_17.sol_AZT_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	227 -> 224	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=AZT,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[184, 185, 186, 187, 188, 189, 190]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	229	[contract_name=AZT,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
spender = tokenRecipient(_spender)

IRs:
TMP_148 = CONVERT _spender to tokenRecipient
spender(\
tokenRecipient) := TMP_148(tokenRecipient)",
		node_expression="spender = tokenRecipient(_spender)",
		node_info_vulnerabilities=None,
		node_irs="TMP_148 = CONVERT _spender to tokenRecipient
spender(tokenRecipient) := TMP_148(tokenRecipient)",
		node_source_code_lines="[185]",
		node_type="NEW VARIABLE",
		source_file="buggy_17.sol"];
	228 -> 229	[key=0,
		edge_type=next,
		label=Next];
	230	[contract_name=AZT,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: IF

EXPRESSION:
approve(_spender,_value)

IRs:
TMP_149(bool) = INTERNAL_CALL, TokenERC20.approve(address,uint256)(_spender,_\
value)
CONDITION TMP_149",
		node_expression="approve(_spender,_value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_149(bool) = INTERNAL_CALL, TokenERC20.approve(address,uint256)(_spender,_value)
CONDITION TMP_149",
		node_source_code_lines="[186]",
		node_type=IF,
		source_file="buggy_17.sol"];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=AZT,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
spender.receiveApproval(msg.sender,_value,address(this),_extraData)

IRs:
TMP_150 = CONVERT this \
to address
HIGH_LEVEL_CALL, dest:spender(tokenRecipient), function:receiveApproval, arguments:['msg.sender', '_value', 'TMP_150', '_\
extraData']  ",
		node_expression="spender.receiveApproval(msg.sender,_value,address(this),_extraData)",
		node_info_vulnerabilities=None,
		node_irs="TMP_150 = CONVERT this to address
HIGH_LEVEL_CALL, dest:spender(tokenRecipient), function:receiveApproval, arguments:['msg.sender', '_\
value', 'TMP_150', '_extraData']  ",
		node_source_code_lines="[187]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	230 -> 231	[key=0,
		edge_type=if_true,
		label=True];
	233	[contract_name=AZT,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[186, 187, 188, 189]",
		node_type=END_IF,
		source_file="buggy_17.sol"];
	230 -> 233	[key=0,
		edge_type=if_false,
		label=False];
	232	[contract_name=AZT,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[188]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=AZT,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="buggy_17.sol_AZT_approveAndCall(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[184, 185, 186, 187, 188, 189, 190]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	234 -> 228	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[191, 192, 193, 194]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	236	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_152(bool) = tx.origin == owner_txorigin30
\
TMP_153(None) = SOLIDITY_CALL require(bool)(TMP_152)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_152(bool) = tx.origin == owner_txorigin30
TMP_153(None) = SOLIDITY_CALL require(bool)(TMP_152)",
		node_source_code_lines="[192]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	235 -> 236	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_154 = CONVERT this to address
REF_75 -> \
BALANCE TMP_154
Transfer dest:_recipient value:REF_75",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_154 = CONVERT this to address
REF_75 -> BALANCE TMP_154
Transfer dest:_recipient value:REF_75",
		node_source_code_lines="[193]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	236 -> 237	[key=0,
		edge_type=next,
		label=Next];
	238	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_17.sol_AZT_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[191, 192, 193, 194]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	238 -> 235	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	240	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_156(bool) = tx.origin == owner_txorigin10
\
TMP_157(None) = SOLIDITY_CALL require(bool)(TMP_156)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_156(bool) = tx.origin == owner_txorigin10
TMP_157(None) = SOLIDITY_CALL require(bool)(TMP_156)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	239 -> 240	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_158 = CONVERT this to address
REF_77 -> \
BALANCE TMP_158
Transfer dest:_recipient value:REF_77",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_158 = CONVERT this to address
REF_77 -> BALANCE TMP_158
Transfer dest:_recipient value:REF_77",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	240 -> 241	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_17.sol_AZT_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	242 -> 239	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[55, 56, 57]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	244	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	243 -> 244	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=AZT,
		function_fullname="constructor()",
		label="buggy_17.sol_AZT_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	245 -> 243	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=AZT,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[58, 59, 60]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	247	[contract_name=AZT,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_160(bool) = tx.origin == owner_txorigin20
\
TMP_161(None) = SOLIDITY_CALL require(bool)(TMP_160)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_160(bool) = tx.origin == owner_txorigin20
TMP_161(None) = SOLIDITY_CALL require(bool)(TMP_160)",
		node_source_code_lines="[59]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	246 -> 247	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=AZT,
		function_fullname="bug_txorigin20(address)",
		label="buggy_17.sol_AZT_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[58, 59, 60]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	248 -> 246	[key=0,
		edge_type=next,
		label=Next];
	249	[contract_name=AZT,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[67, 68, 69]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	251	[contract_name=AZT,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, owned.onlyOwner()()",
		node_source_code_lines="[67]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	249 -> 251	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=AZT,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[68]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	251 -> 250	[key=0,
		edge_type=next,
		label=Next];
	252	[contract_name=AZT,
		function_fullname="transferOwnership(address)",
		label="buggy_17.sol_AZT_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[67, 68, 69]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	252 -> 249	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=AZT,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[70, 71, 72]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	254	[contract_name=AZT,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_163(bool) = tx.origin == owner_txorigin32
\
TMP_164(None) = SOLIDITY_CALL require(bool)(TMP_163)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_163(bool) = tx.origin == owner_txorigin32
TMP_164(None) = SOLIDITY_CALL require(bool)(TMP_163)",
		node_source_code_lines="[71]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	253 -> 254	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=AZT,
		function_fullname="bug_txorigin32(address)",
		label="buggy_17.sol_AZT_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[70, 71, 72]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	255 -> 253	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=AZT,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[204, 205, 206, 207]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	257	[contract_name=AZT,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_165(bool) = tx.origin == owner_txorigin37
\
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_165(bool) = tx.origin == owner_txorigin37
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_source_code_lines="[205]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=AZT,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[206]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	257 -> 258	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=AZT,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_17.sol_AZT_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[204, 205, 206, 207]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	259 -> 256	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=AZT,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[209, 210, 211, 212]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	261	[contract_name=AZT,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_168(bool) = tx.origin == owner_txorigin3
\
TMP_169(None) = SOLIDITY_CALL require(bool)(TMP_168)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_168(bool) = tx.origin == owner_txorigin3
TMP_169(None) = SOLIDITY_CALL require(bool)(TMP_168)",
		node_source_code_lines="[210]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=AZT,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_79(None) -> to.call
REF_80(None) -> REF_79.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_79(None) -> to.call
REF_80(None) -> REF_79.value",
		node_source_code_lines="[211]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=AZT,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_17.sol_AZT_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[209, 210, 211, 212]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	263 -> 260	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=AZT,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[215, 216, 217, 218]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	265	[contract_name=AZT,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_171(bool) = tx.origin == owner_txorigin9
\
TMP_172(None) = SOLIDITY_CALL require(bool)(TMP_171)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_171(bool) = tx.origin == owner_txorigin9
TMP_172(None) = SOLIDITY_CALL require(bool)(TMP_171)",
		node_source_code_lines="[216]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	264 -> 265	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=AZT,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[217]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	265 -> 266	[key=0,
		edge_type=next,
		label=Next];
	267	[contract_name=AZT,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_17.sol_AZT_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[215, 216, 217, 218]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	267 -> 264	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=AZT,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[221, 222, 223, 224]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	269	[contract_name=AZT,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_174(bool) = tx.origin == owner_txorigin25
\
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_174(bool) = tx.origin == owner_txorigin25
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_source_code_lines="[222]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	268 -> 269	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=AZT,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[223]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	269 -> 270	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=AZT,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_17.sol_AZT_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[221, 222, 223, 224]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	271 -> 268	[key=0,
		edge_type=next,
		label=Next];
	272	[contract_name=AZT,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[226, 227, 228, 229]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	273	[contract_name=AZT,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_177(bool) = tx.origin == owner_txorigin19
\
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_177(bool) = tx.origin == owner_txorigin19
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_source_code_lines="[227]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	272 -> 273	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=AZT,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_83(None) -> to.call
REF_84(None) -> REF_83.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_83(None) -> to.call
REF_84(None) -> REF_83.value",
		node_source_code_lines="[228]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	273 -> 274	[key=0,
		edge_type=next,
		label=Next];
	275	[contract_name=AZT,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_17.sol_AZT_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[226, 227, 228, 229]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	275 -> 272	[key=0,
		edge_type=next,
		label=Next];
	276	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[239, 240, 241, 242]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	277	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_180(bool) = tx.origin == owner_txorigin26
\
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_180(bool) = tx.origin == owner_txorigin26
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_source_code_lines="[240]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	276 -> 277	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_182 = CONVERT this to address
REF_86 -> \
BALANCE TMP_182
Transfer dest:_recipient value:REF_86",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_182 = CONVERT this to address
REF_86 -> BALANCE TMP_182
Transfer dest:_recipient value:REF_86",
		node_source_code_lines="[241]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	277 -> 278	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=AZT,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_17.sol_AZT_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[239, 240, 241, 242]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	279 -> 276	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	290	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
TokenERC20(_tokenName,_tokenSymbol,_decimals)

IRs:
INTERNAL_CALL, TokenERC20.constructor(string,\
string,uint8)(_tokenName,_tokenSymbol,_decimals)",
		node_expression="TokenERC20(_tokenName,_tokenSymbol,_decimals)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, TokenERC20.constructor(string,string,uint8)(_tokenName,_tokenSymbol,_decimals)",
		node_source_code_lines="[247]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	280 -> 290	[key=0,
		edge_type=next,
		label=Next];
	281	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
frozenAddresses.push(address(0x9fd50776F133751E8Ae6abE1Be124638Bb917E05))

IRs:
TMP_184 = CONVERT \
912480241548209455660388499842434547007005752837 to address
REF_88 -> LENGTH frozenAddresses
TMP_186(uint256) := REF_88(uint256)
\
TMP_187(uint256) = TMP_186 + 1
REF_88 (->frozenAddresses) := TMP_187(uint256)
REF_89(address) -> frozenAddresses[TMP_186]
REF_89 (\
->frozenAddresses) := TMP_184(address)",
		node_expression="frozenAddresses.push(address(0x9fd50776F133751E8Ae6abE1Be124638Bb917E05))",
		node_info_vulnerabilities=None,
		node_irs="TMP_184 = CONVERT 912480241548209455660388499842434547007005752837 to address
REF_88 -> LENGTH frozenAddresses
TMP_186(uint256) := \
REF_88(uint256)
TMP_187(uint256) = TMP_186 + 1
REF_88 (->frozenAddresses) := TMP_187(uint256)
REF_89(address) -> frozenAddresses[\
TMP_186]
REF_89 (->frozenAddresses) := TMP_184(address)",
		node_source_code_lines="[250]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	282	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
frozenWallets[frozenAddresses[0]] = frozenWallet(true,30000000 * 10 ** uint256(decimals),0 * \
10 ** uint256(decimals),now + 1 * 3600)

IRs:
REF_90(address) -> frozenAddresses[0]
REF_91(AZT.frozenWallet) -> frozenWallets[REF_\
90]
TMP_188 = CONVERT decimals to uint256
TMP_189(uint256) = 10 ** TMP_188
TMP_190(uint256) = 30000000 * TMP_189
TMP_191 = CONVERT \
decimals to uint256
TMP_192(uint256) = 10 ** TMP_191
TMP_193(uint256) = 0 * TMP_192
TMP_194(uint256) = 1 * 3600
TMP_195(uint256) = \
now + TMP_194
TMP_196 = new frozenWallet(True,TMP_190,TMP_193,TMP_195)
REF_91 (->frozenWallets) := TMP_196(AZT.frozenWallet)",
		node_expression="frozenWallets[frozenAddresses[0]] = frozenWallet(true,30000000 * 10 ** uint256(decimals),0 * 10 ** uint256(decimals),now + 1 * 3600)",
		node_info_vulnerabilities=None,
		node_irs="REF_90(address) -> frozenAddresses[0]
REF_91(AZT.frozenWallet) -> frozenWallets[REF_90]
TMP_188 = CONVERT decimals to uint256
TMP_\
189(uint256) = 10 ** TMP_188
TMP_190(uint256) = 30000000 * TMP_189
TMP_191 = CONVERT decimals to uint256
TMP_192(uint256) = 10 ** \
TMP_191
TMP_193(uint256) = 0 * TMP_192
TMP_194(uint256) = 1 * 3600
TMP_195(uint256) = now + TMP_194
TMP_196 = new frozenWallet(True,\
TMP_190,TMP_193,TMP_195)
REF_91 (->frozenWallets) := TMP_196(AZT.frozenWallet)",
		node_source_code_lines="[251, 252, 253, 254, 255, 256]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	281 -> 282	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 0(uint256)",
		node_source_code_lines="[258]",
		node_type="NEW VARIABLE",
		source_file="buggy_17.sol"];
	282 -> 285	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261]",
		node_type=BEGIN_LOOP,
		source_file="buggy_17.sol"];
	286	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: IF_LOOP

EXPRESSION:
i < frozenAddresses.length

IRs:
REF_92 -> LENGTH frozenAddresses
TMP_197(bool) = i < REF_92
CONDITION \
TMP_197",
		node_expression="i < frozenAddresses.length",
		node_info_vulnerabilities=None,
		node_irs="REF_92 -> LENGTH frozenAddresses
TMP_197(bool) = i < REF_92
CONDITION TMP_197",
		node_source_code_lines="[258]",
		node_type=IF_LOOP,
		source_file="buggy_17.sol"];
	283 -> 286	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261]",
		node_type=END_LOOP,
		source_file="buggy_17.sol"];
	285 -> 283	[key=0,
		edge_type=next,
		label=Next];
	286 -> 284	[key=0,
		edge_type=if_false,
		label=False];
	287	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
balanceOf[frozenAddresses[i]] = frozenWallets[frozenAddresses[i]].rewardedAmount

IRs:
REF_93(\
address) -> frozenAddresses[i]
REF_94(uint256) -> balanceOf[REF_93]
REF_95(address) -> frozenAddresses[i]
REF_96(AZT.frozenWallet) \
-> frozenWallets[REF_95]
REF_97(uint256) -> REF_96.rewardedAmount
REF_94 (->balanceOf) := REF_97(uint256)",
		node_expression="balanceOf[frozenAddresses[i]] = frozenWallets[frozenAddresses[i]].rewardedAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_93(address) -> frozenAddresses[i]
REF_94(uint256) -> balanceOf[REF_93]
REF_95(address) -> frozenAddresses[i]
REF_96(AZT.frozenWallet) \
-> frozenWallets[REF_95]
REF_97(uint256) -> REF_96.rewardedAmount
REF_94 (->balanceOf) := REF_97(uint256)",
		node_source_code_lines="[259]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	286 -> 287	[key=0,
		edge_type=if_true,
		label=True];
	288	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
totalSupply = totalSupply.add(frozenWallets[frozenAddresses[i]].rewardedAmount)

IRs:
REF_99(\
address) -> frozenAddresses[i]
REF_100(AZT.frozenWallet) -> frozenWallets[REF_99]
REF_101(uint256) -> REF_100.rewardedAmount
TMP_\
198(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalSupply', 'REF_101'] 
totalSupply(\
uint256) := TMP_198(uint256)",
		node_expression="totalSupply = totalSupply.add(frozenWallets[frozenAddresses[i]].rewardedAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_99(address) -> frozenAddresses[i]
REF_100(AZT.frozenWallet) -> frozenWallets[REF_99]
REF_101(uint256) -> REF_100.rewardedAmount
\
TMP_198(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalSupply', 'REF_101'] 
totalSupply(\
uint256) := TMP_198(uint256)",
		node_source_code_lines="[260]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	287 -> 288	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=AZT,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_199(uint256) := i(uint256)
i(uint256) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_199(uint256) := i(uint256)
i(uint256) = i + 1",
		node_source_code_lines="[258]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	288 -> 289	[key=0,
		edge_type=next,
		label=Next];
	289 -> 286	[key=0,
		edge_type=next,
		label=Next];
	290 -> 281	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=AZT,
		function_fullname="constructor()",
		label="buggy_17.sol_AZT_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	291 -> 280	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=AZT,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[263, 264, 265]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	293	[contract_name=AZT,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_201(bool) = tx.origin == owner_txorigin8
\
TMP_202(None) = SOLIDITY_CALL require(bool)(TMP_201)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_201(bool) = tx.origin == owner_txorigin8
TMP_202(None) = SOLIDITY_CALL require(bool)(TMP_201)",
		node_source_code_lines="[264]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	292 -> 293	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=AZT,
		function_fullname="bug_txorigin8(address)",
		label="buggy_17.sol_AZT_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[263, 264, 265]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	294 -> 292	[key=0,
		edge_type=next,
		label=Next];
	295	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	296	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_to != address(0x0))

IRs:
TMP_203 = CONVERT 0 to address
TMP_204(bool) = _to != \
TMP_203
TMP_205(None) = SOLIDITY_CALL require(bool)(TMP_204)",
		node_expression="require(bool)(_to != address(0x0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_203 = CONVERT 0 to address
TMP_204(bool) = _to != TMP_203
TMP_205(None) = SOLIDITY_CALL require(bool)(TMP_204)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	295 -> 296	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(checkFrozenWallet(_from,_value))

IRs:
TMP_206(bool) = INTERNAL_CALL, AZT.checkFrozenWallet(\
address,uint256)(_from,_value)
TMP_207(None) = SOLIDITY_CALL require(bool)(TMP_206)",
		node_expression="require(bool)(checkFrozenWallet(_from,_value))",
		node_info_vulnerabilities=None,
		node_irs="TMP_206(bool) = INTERNAL_CALL, AZT.checkFrozenWallet(address,uint256)(_from,_value)
TMP_207(None) = SOLIDITY_CALL require(bool)(\
TMP_206)",
		node_source_code_lines="[269]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	296 -> 297	[key=0,
		edge_type=next,
		label=Next];
	298	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balanceOf[_from] = balanceOf[_from].sub(_value)

IRs:
REF_102(uint256) -> balanceOf[_from]
REF_\
103(uint256) -> balanceOf[_from]
TMP_208(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_103', '_value'] 
REF_102 (->balanceOf) := TMP_208(uint256)",
		node_expression="balanceOf[_from] = balanceOf[_from].sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_102(uint256) -> balanceOf[_from]
REF_103(uint256) -> balanceOf[_from]
TMP_208(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_103', '_value'] 
REF_102 (->balanceOf) := TMP_208(uint256)",
		node_source_code_lines="[270]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	297 -> 298	[key=0,
		edge_type=next,
		label=Next];
	299	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balanceOf[_to] = balanceOf[_to].add(_value)

IRs:
REF_105(uint256) -> balanceOf[_to]
REF_106(\
uint256) -> balanceOf[_to]
TMP_209(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_\
106', '_value'] 
REF_105 (->balanceOf) := TMP_209(uint256)",
		node_expression="balanceOf[_to] = balanceOf[_to].add(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_105(uint256) -> balanceOf[_to]
REF_106(uint256) -> balanceOf[_to]
TMP_209(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_106', '_value'] 
REF_105 (->balanceOf) := TMP_209(uint256)",
		node_source_code_lines="[271]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	298 -> 299	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(_from,_to,_value)

IRs:
Emit Transfer(_from._to._value)",
		node_expression="Transfer(_from,_to,_value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(_from._to._value)",
		node_source_code_lines="[272]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	299 -> 300	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=AZT,
		function_fullname="_transfer(address,address,uint256)",
		label="buggy_17.sol_AZT__transfer(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	301 -> 295	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=AZT,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	303	[contract_name=AZT,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_211(bool) = tx.origin == owner_txorigin39
\
TMP_212(None) = SOLIDITY_CALL require(bool)(TMP_211)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_211(bool) = tx.origin == owner_txorigin39
TMP_212(None) = SOLIDITY_CALL require(bool)(TMP_211)",
		node_source_code_lines="[275]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	302 -> 303	[key=0,
		edge_type=next,
		label=Next];
	304	[contract_name=AZT,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_108(None) -> to.call
REF_109(None) -> REF_108.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_108(None) -> to.call
REF_109(None) -> REF_108.value",
		node_source_code_lines="[276]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	303 -> 304	[key=0,
		edge_type=next,
		label=Next];
	305	[contract_name=AZT,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_17.sol_AZT_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	305 -> 302	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=AZT,
		function_fullname="checkFrozenWallet(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[279, 280, 281, 282, 283, 284, 285, 286, 287]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	307	[contract_name=AZT,
		function_fullname="checkFrozenWallet(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
(_from == owner || (! tokenFrozen && (! frozenWallets[_from].isFrozen || now >= frozenWallets[_from]\
.frozenTime || balanceOf[_from].sub(_value) >= frozenWallets[_from].frozenAmount)))

IRs:
TMP_214(bool) = _from == owner
TMP_215 = ! \
tokenFrozen 
REF_110(AZT.frozenWallet) -> frozenWallets[_from]
REF_111(bool) -> REF_110.isFrozen
TMP_216 = ! REF_111 
REF_112(AZT.frozenWallet) \
-> frozenWallets[_from]
REF_113(uint256) -> REF_112.frozenTime
TMP_217(bool) = now >= REF_113
TMP_218(bool) = TMP_216 || TMP_217
\
REF_114(uint256) -> balanceOf[_from]
TMP_219(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_114', '_value'] 
REF_116(AZT.frozenWallet) -> frozenWallets[_from]
REF_117(uint256) -> REF_116.frozenAmount
TMP_220(bool) = \
TMP_219 >= REF_117
TMP_221(bool) = TMP_218 || TMP_220
TMP_222(bool) = TMP_215 && TMP_221
TMP_223(bool) = TMP_214 || TMP_222
RETURN \
TMP_223",
		node_expression="(_from == owner || (! tokenFrozen && (! frozenWallets[_from].isFrozen || now >= frozenWallets[_from].frozenTime || balanceOf[_from]\
.sub(_value) >= frozenWallets[_from].frozenAmount)))",
		node_info_vulnerabilities=None,
		node_irs="TMP_214(bool) = _from == owner
TMP_215 = ! tokenFrozen 
REF_110(AZT.frozenWallet) -> frozenWallets[_from]
REF_111(bool) -> REF_110.isFrozen
\
TMP_216 = ! REF_111 
REF_112(AZT.frozenWallet) -> frozenWallets[_from]
REF_113(uint256) -> REF_112.frozenTime
TMP_217(bool) = now >= \
REF_113
TMP_218(bool) = TMP_216 || TMP_217
REF_114(uint256) -> balanceOf[_from]
TMP_219(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_114', '_value'] 
REF_116(AZT.frozenWallet) -> frozenWallets[_from]
REF_117(\
uint256) -> REF_116.frozenAmount
TMP_220(bool) = TMP_219 >= REF_117
TMP_221(bool) = TMP_218 || TMP_220
TMP_222(bool) = TMP_215 && \
TMP_221
TMP_223(bool) = TMP_214 || TMP_222
RETURN TMP_223",
		node_source_code_lines="[280, 281, 282, 283, 284, 285, 286]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	306 -> 307	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=AZT,
		function_fullname="checkFrozenWallet(address,uint256)",
		label="buggy_17.sol_AZT_checkFrozenWallet(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[279, 280, 281, 282, 283, 284, 285, 286, 287]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	308 -> 306	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=AZT,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[288, 289, 290]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	310	[contract_name=AZT,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_224(bool) = tx.origin == owner_txorigin36
\
TMP_225(None) = SOLIDITY_CALL require(bool)(TMP_224)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_224(bool) = tx.origin == owner_txorigin36
TMP_225(None) = SOLIDITY_CALL require(bool)(TMP_224)",
		node_source_code_lines="[289]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	309 -> 310	[key=0,
		edge_type=next,
		label=Next];
	311	[contract_name=AZT,
		function_fullname="bug_txorigin36(address)",
		label="buggy_17.sol_AZT_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[288, 289, 290]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	311 -> 309	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=AZT,
		function_fullname="burn(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296, 297, 298]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	317	[contract_name=AZT,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, owned.onlyOwner()()",
		node_source_code_lines="[293]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	312 -> 317	[key=0,
		edge_type=next,
		label=Next];
	313	[contract_name=AZT,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value)

IRs:
REF_118(uint256) -> balanceOf[\
msg.sender]
REF_119(uint256) -> balanceOf[msg.sender]
TMP_226(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,\
uint256), arguments:['REF_119', '_value'] 
REF_118 (->balanceOf) := TMP_226(uint256)",
		node_expression="balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_118(uint256) -> balanceOf[msg.sender]
REF_119(uint256) -> balanceOf[msg.sender]
TMP_226(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_119', '_value'] 
REF_118 (->balanceOf) := TMP_226(uint256)",
		node_source_code_lines="[294]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	314	[contract_name=AZT,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
totalSupply = totalSupply.sub(_value)

IRs:
TMP_227(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['totalSupply', '_value'] 
totalSupply(uint256) := TMP_227(uint256)",
		node_expression="totalSupply = totalSupply.sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_227(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['totalSupply', '_value'] 
totalSupply(\
uint256) := TMP_227(uint256)",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	313 -> 314	[key=0,
		edge_type=next,
		label=Next];
	315	[contract_name=AZT,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Burn(msg.sender,_value)

IRs:
Emit Burn(msg.sender._value)",
		node_expression="Burn(msg.sender,_value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Burn(msg.sender._value)",
		node_source_code_lines="[296]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=AZT,
		function_fullname="burn(uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[297]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	315 -> 316	[key=0,
		edge_type=next,
		label=Next];
	317 -> 313	[key=0,
		edge_type=next,
		label=Next];
	318	[contract_name=AZT,
		function_fullname="burn(uint256)",
		label="buggy_17.sol_AZT_burn(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296, 297, 298]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	318 -> 312	[key=0,
		edge_type=next,
		label=Next];
	319	[contract_name=AZT,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[299, 300, 301, 302]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	320	[contract_name=AZT,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_230(bool) = tx.origin == owner_txorigin35
\
TMP_231(None) = SOLIDITY_CALL require(bool)(TMP_230)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_230(bool) = tx.origin == owner_txorigin35
TMP_231(None) = SOLIDITY_CALL require(bool)(TMP_230)",
		node_source_code_lines="[300]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	319 -> 320	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=AZT,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_122(None) -> to.call
REF_123(None) -> REF_122.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="REF_122(None) -> to.call
REF_123(None) -> REF_122.value",
		node_source_code_lines="[301]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	320 -> 321	[key=0,
		edge_type=next,
		label=Next];
	322	[contract_name=AZT,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_17.sol_AZT_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[299, 300, 301, 302]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	322 -> 319	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=AZT,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	324	[contract_name=AZT,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balanceOf[_from] = balanceOf[_from].sub(_value)

IRs:
REF_124(uint256) -> balanceOf[_from]
REF_\
125(uint256) -> balanceOf[_from]
TMP_233(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_125', '_value'] 
REF_124 (->balanceOf) := TMP_233(uint256)",
		node_expression="balanceOf[_from] = balanceOf[_from].sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_124(uint256) -> balanceOf[_from]
REF_125(uint256) -> balanceOf[_from]
TMP_233(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_125', '_value'] 
REF_124 (->balanceOf) := TMP_233(uint256)",
		node_source_code_lines="[305]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	323 -> 324	[key=0,
		edge_type=next,
		label=Next];
	325	[contract_name=AZT,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value)

IRs:
REF_127(mapping(\
address => uint256)) -> allowance[_from]
REF_128(uint256) -> REF_127[msg.sender]
REF_129(mapping(address => uint256)) -> allowance[_\
from]
REF_130(uint256) -> REF_129[msg.sender]
TMP_234(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['REF_130', '_value'] 
REF_128 (->allowance) := TMP_234(uint256)",
		node_expression="allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_127(mapping(address => uint256)) -> allowance[_from]
REF_128(uint256) -> REF_127[msg.sender]
REF_129(mapping(address => uint256)) \
-> allowance[_from]
REF_130(uint256) -> REF_129[msg.sender]
TMP_234(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_130', '_value'] 
REF_128 (->allowance) := TMP_234(uint256)",
		node_source_code_lines="[306]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	324 -> 325	[key=0,
		edge_type=next,
		label=Next];
	326	[contract_name=AZT,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
totalSupply = totalSupply.sub(_value)

IRs:
TMP_235(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['totalSupply', '_value'] 
totalSupply(uint256) := TMP_235(uint256)",
		node_expression="totalSupply = totalSupply.sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_235(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['totalSupply', '_value'] 
totalSupply(\
uint256) := TMP_235(uint256)",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	325 -> 326	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=AZT,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Burn(_from,_value)

IRs:
Emit Burn(_from._value)",
		node_expression="Burn(_from,_value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Burn(_from._value)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	326 -> 327	[key=0,
		edge_type=next,
		label=Next];
	328	[contract_name=AZT,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[309]",
		node_type=RETURN,
		source_file="buggy_17.sol"];
	327 -> 328	[key=0,
		edge_type=next,
		label=Next];
	329	[contract_name=AZT,
		function_fullname="burnFrom(address,uint256)",
		label="buggy_17.sol_AZT_burnFrom(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	329 -> 323	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=AZT,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[311, 312, 313]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	331	[contract_name=AZT,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_237(bool) = tx.origin == owner_txorigin40
\
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_237(bool) = tx.origin == owner_txorigin40
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_source_code_lines="[312]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	330 -> 331	[key=0,
		edge_type=next,
		label=Next];
	332	[contract_name=AZT,
		function_fullname="bug_txorigin40(address)",
		label="buggy_17.sol_AZT_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[311, 312, 313]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	332 -> 330	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=AZT,
		function_fullname="freezeToken(bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[315, 316, 317]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	335	[contract_name=AZT,
		function_fullname="freezeToken(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, owned.onlyOwner()()",
		node_source_code_lines="[315]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	333 -> 335	[key=0,
		edge_type=next,
		label=Next];
	334	[contract_name=AZT,
		function_fullname="freezeToken(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
tokenFrozen = freeze

IRs:
tokenFrozen(bool) := freeze(bool)",
		node_expression="tokenFrozen = freeze",
		node_info_vulnerabilities=None,
		node_irs="tokenFrozen(bool) := freeze(bool)",
		node_source_code_lines="[316]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	335 -> 334	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=AZT,
		function_fullname="freezeToken(bool)",
		label="buggy_17.sol_AZT_freezeToken(bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[315, 316, 317]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	336 -> 333	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=AZT,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[318, 319, 320, 321]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	338	[contract_name=AZT,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_240(bool) = tx.origin == owner_txorigin33
\
TMP_241(None) = SOLIDITY_CALL require(bool)(TMP_240)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="TMP_240(bool) = tx.origin == owner_txorigin33
TMP_241(None) = SOLIDITY_CALL require(bool)(TMP_240)",
		node_source_code_lines="[319]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	337 -> 338	[key=0,
		edge_type=next,
		label=Next];
	339	[contract_name=AZT,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[320]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	338 -> 339	[key=0,
		edge_type=next,
		label=Next];
	340	[contract_name=AZT,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_17.sol_AZT_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[318, 319, 320, 321]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	340 -> 337	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=AZT,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
_tokenName = AZ FundChain

IRs:
_tokenName(string) := AZ FundChain(string)",
		node_expression="_tokenName = AZ FundChain",
		node_info_vulnerabilities=None,
		node_irs="_tokenName(string) := AZ FundChain(string)",
		node_source_code_lines="[209]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_17.sol"];
	342	[contract_name=AZT,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
_tokenSymbol = AZT

IRs:
_tokenSymbol(string) := AZT(string)",
		node_expression="_tokenSymbol = AZT",
		node_info_vulnerabilities=None,
		node_irs="_tokenSymbol(string) := AZT(string)",
		node_source_code_lines="[214]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_17.sol"];
	341 -> 342	[key=0,
		edge_type=next,
		label=Next];
	343	[contract_name=AZT,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
_decimals = 18

IRs:
_decimals(uint8) := 18(uint256)",
		node_expression="_decimals = 18",
		node_info_vulnerabilities=None,
		node_irs="_decimals(uint8) := 18(uint256)",
		node_source_code_lines="[219]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_17.sol"];
	342 -> 343	[key=0,
		edge_type=next,
		label=Next];
	344	[contract_name=AZT,
		function_fullname="slitherConstructorVariables()",
		label="buggy_17.sol_AZT_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [49, 50, 51, 52, 58, 59, 60, 70, 71, 72, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, \
107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 137, 138, 139, 140, 148, 149, 150, 156, 157, 158, \
159, 167, 168, 169, 170, 178, 179, 180, 181, 191, 192, 193, 194, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, \
222, 223, 224, 226, 227, 228, 229, 239, 240, 241, 242, 263, 264, 265, 274, 275, 276, 277, 288, 289, 290, 299, 300, 301, 302, 311, \
312, 313, 318, 319, 320, 321], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, \
229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, \
255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, \
281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, \
307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	344 -> 341	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=AZT,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[62, 63, 64, 65]",
		node_type=ENTRY_POINT,
		source_file="buggy_17.sol"];
	346	[contract_name=AZT,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_243(bool) = msg.sender == owner
TMP_244(None) = \
SOLIDITY_CALL require(bool)(TMP_243)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_243(bool) = msg.sender == owner
TMP_244(None) = SOLIDITY_CALL require(bool)(TMP_243)",
		node_source_code_lines="[63]",
		node_type=EXPRESSION,
		source_file="buggy_17.sol"];
	345 -> 346	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=AZT,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[64]",
		node_type=_,
		source_file="buggy_17.sol"];
	346 -> 347	[key=0,
		edge_type=next,
		label=Next];
	348	[contract_name=AZT,
		function_fullname="onlyOwner()",
		label="buggy_17.sol_AZT_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[62, 63, 64, 65]",
		node_type=FUNCTION_NAME,
		source_file="buggy_17.sol"];
	348 -> 345	[key=0,
		edge_type=next,
		label=Next];
}
