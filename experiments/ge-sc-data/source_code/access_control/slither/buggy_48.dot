digraph "" {
	node [label="\N"];
	0	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	1	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a + b

IRs:
TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_source_code_lines="[24]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(c >= a)

IRs:
TMP_1(bool) = c >= a
TMP_2(None) = SOLIDITY_CALL require(bool)(TMP_\
1)",
		node_expression="require(bool)(c >= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(bool) = c >= a
TMP_2(None) = SOLIDITY_CALL require(bool)(TMP_1)",
		node_source_code_lines="[25]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_48.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	3 -> 0	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29, 30]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	5	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b <= a)

IRs:
TMP_3(bool) = b <= a
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_\
3)",
		node_expression="require(bool)(b <= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_3(bool) = b <= a
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[28]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	4 -> 5	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a - b

IRs:
TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_48.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29, 30]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	7 -> 4	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[31, 32, 33, 34]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	9	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a * b

IRs:
TMP_6(uint256) = a * b
c(uint256) := TMP_6(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(uint256) = a * b
c(uint256) := TMP_6(uint256)",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	8 -> 9	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(a == 0 || c / a == b)

IRs:
TMP_7(bool) = a == 0
TMP_8(uint256) = c / a
TMP_9(bool) = \
TMP_8 == b
TMP_10(bool) = TMP_7 || TMP_9
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_expression="require(bool)(a == 0 || c / a == b)",
		node_info_vulnerabilities=None,
		node_irs="TMP_7(bool) = a == 0
TMP_8(uint256) = c / a
TMP_9(bool) = TMP_8 == b
TMP_10(bool) = TMP_7 || TMP_9
TMP_11(None) = SOLIDITY_CALL \
require(bool)(TMP_10)",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	9 -> 10	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_48.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[31, 32, 33, 34]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	11 -> 8	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	13	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b > 0)

IRs:
TMP_12(bool) = b > 0
TMP_13(None) = SOLIDITY_CALL require(bool)(TMP_\
12)",
		node_expression="require(bool)(b > 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(bool) = b > 0
TMP_13(None) = SOLIDITY_CALL require(bool)(TMP_12)",
		node_source_code_lines="[36]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	12 -> 13	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a / b

IRs:
TMP_14(uint256) = a / b
c(uint256) := TMP_14(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_14(uint256) = a / b
c(uint256) := TMP_14(uint256)",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	13 -> 14	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_48.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	15 -> 12	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=ERC20Interface,
		function_fullname="totalSupply()",
		label="buggy_48.sol_ERC20Interface_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[47]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	17	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	18	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_15(bool) = tx.origin == owner_txorigin17
\
TMP_16(None) = SOLIDITY_CALL require(bool)(TMP_15)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_15(bool) = tx.origin == owner_txorigin17
TMP_16(None) = SOLIDITY_CALL require(bool)(TMP_15)",
		node_source_code_lines="[49]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	17 -> 18	[key=0,
		edge_type=next,
		label=Next];
	19	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	18 -> 19	[key=0,
		edge_type=next,
		label=Next];
	20	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_48.sol_ERC20Interface_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	20 -> 17	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=ERC20Interface,
		function_fullname="balanceOf(address)",
		label="buggy_48.sol_ERC20Interface_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[52]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	22	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[53, 54, 55, 56]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	23	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_18(bool) = tx.origin == owner_txorigin37
\
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_18(bool) = tx.origin == owner_txorigin37
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)",
		node_source_code_lines="[54]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	22 -> 23	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_48.sol_ERC20Interface_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[53, 54, 55, 56]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	25 -> 22	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=ERC20Interface,
		function_fullname="allowance(address,address)",
		label="buggy_48.sol_ERC20Interface_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	27	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[58, 59, 60, 61]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	28	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_21(bool) = tx.origin == owner_txorigin3
\
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_21(bool) = tx.origin == owner_txorigin3
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_source_code_lines="[59]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_2(None) -> to.call
REF_3(None) -> REF_2.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_2(None) -> to.call
REF_3(None) -> REF_2.value",
		node_source_code_lines="[60]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	28 -> 29	[key=0,
		edge_type=next,
		label=Next];
	30	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_48.sol_ERC20Interface_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[58, 59, 60, 61]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	30 -> 27	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=ERC20Interface,
		function_fullname="transfer(address,uint256)",
		label="buggy_48.sol_ERC20Interface_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[62]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	32	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[63, 64, 65, 66]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	33	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_24(bool) = tx.origin == owner_txorigin9
\
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_24(bool) = tx.origin == owner_txorigin9
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_source_code_lines="[64]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	32 -> 33	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	33 -> 34	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_48.sol_ERC20Interface_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[63, 64, 65, 66]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	35 -> 32	[key=0,
		edge_type=next,
		label=Next];
	36	[contract_name=ERC20Interface,
		function_fullname="approve(address,uint256)",
		label="buggy_48.sol_ERC20Interface_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[67]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	37	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[68, 69, 70, 71]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	38	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_27(bool) = tx.origin == owner_txorigin25
\
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_27(bool) = tx.origin == owner_txorigin25
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)",
		node_source_code_lines="[69]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	37 -> 38	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[70]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	38 -> 39	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_48.sol_ERC20Interface_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[68, 69, 70, 71]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	40 -> 37	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=ERC20Interface,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_48.sol_ERC20Interface_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[72]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	42	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	43	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_30(bool) = tx.origin == owner_txorigin19
\
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_30(bool) = tx.origin == owner_txorigin19
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)",
		node_source_code_lines="[74]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	42 -> 43	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_6(None) -> to.call
REF_7(None) -> REF_6.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_6(None) -> to.call
REF_7(None) -> REF_6.value",
		node_source_code_lines="[75]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	43 -> 44	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_48.sol_ERC20Interface_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	45 -> 42	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[78, 79, 80, 81]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	47	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_33(bool) = tx.origin == owner_txorigin27
\
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_33(bool) = tx.origin == owner_txorigin27
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_source_code_lines="[79]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	46 -> 47	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_8(None) -> to.call
REF_9(None) -> REF_8.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_8(None) -> to.call
REF_9(None) -> REF_8.value",
		node_source_code_lines="[80]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	47 -> 48	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_48.sol_ERC20Interface_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[78, 79, 80, 81]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	49 -> 46	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[83, 84, 85, 86]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	51	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_36(bool) = tx.origin == owner_txorigin31
\
TMP_37(None) = SOLIDITY_CALL require(bool)(TMP_36)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_36(bool) = tx.origin == owner_txorigin31
TMP_37(None) = SOLIDITY_CALL require(bool)(TMP_36)",
		node_source_code_lines="[84]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	50 -> 51	[key=0,
		edge_type=next,
		label=Next];
	52	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_source_code_lines="[85]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_48.sol_ERC20Interface_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[83, 84, 85, 86]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	53 -> 50	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=ApproveAndCallFallBack,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="buggy_48.sol_ApproveAndCallFallBack_receiveApproval(address,uint256,address,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[97]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	55	[contract_name=ApproveAndCallFallBack,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[98, 99, 100, 101]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	56	[contract_name=ApproveAndCallFallBack,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_39(bool) = tx.origin == owner_txorigin26
\
TMP_40(None) = SOLIDITY_CALL require(bool)(TMP_39)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_39(bool) = tx.origin == owner_txorigin26
TMP_40(None) = SOLIDITY_CALL require(bool)(TMP_39)",
		node_source_code_lines="[99]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=ApproveAndCallFallBack,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_41 = CONVERT this to address
REF_13 -> BALANCE \
TMP_41
Transfer dest:_recipient value:REF_13",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_41 = CONVERT this to address
REF_13 -> BALANCE TMP_41
Transfer dest:_recipient value:REF_13",
		node_source_code_lines="[100]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	56 -> 57	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=ApproveAndCallFallBack,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_48.sol_ApproveAndCallFallBack_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[98, 99, 100, 101]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	58 -> 55	[key=0,
		edge_type=next,
		label=Next];
	59	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[109, 110, 111, 112]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	60	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_43(bool) = tx.origin == owner_txorigin34
\
TMP_44(None) = SOLIDITY_CALL require(bool)(TMP_43)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_43(bool) = tx.origin == owner_txorigin34
TMP_44(None) = SOLIDITY_CALL require(bool)(TMP_43)",
		node_source_code_lines="[110]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	59 -> 60	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_45 = CONVERT this to address
REF_15 -> BALANCE \
TMP_45
Transfer dest:_recipient value:REF_15",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_45 = CONVERT this to address
REF_15 -> BALANCE TMP_45
Transfer dest:_recipient value:REF_15",
		node_source_code_lines="[111]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	60 -> 61	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_48.sol_Owned_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[109, 110, 111, 112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	62 -> 59	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=Owned,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[114, 115, 116, 117]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	64	[contract_name=Owned,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_47(bool) = tx.origin == owner_txorigin21
\
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_47(bool) = tx.origin == owner_txorigin21
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	63 -> 64	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Owned,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[116]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	64 -> 65	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=Owned,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_48.sol_Owned_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[114, 115, 116, 117]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	66 -> 63	[key=0,
		edge_type=next,
		label=Next];
	67	[contract_name=Owned,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	68	[contract_name=Owned,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_50(bool) = tx.origin == owner_txorigin13
\
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_50(bool) = tx.origin == owner_txorigin13
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=Owned,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	68 -> 69	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=Owned,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_48.sol_Owned_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	70 -> 67	[key=0,
		edge_type=next,
		label=Next];
	71	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	72	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	71 -> 72	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=Owned,
		function_fullname="constructor()",
		label="buggy_48.sol_Owned_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	73 -> 71	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=Owned,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	75	[contract_name=Owned,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_53(bool) = tx.origin == owner_txorigin20
\
TMP_54(None) = SOLIDITY_CALL require(bool)(TMP_53)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_53(bool) = tx.origin == owner_txorigin20
TMP_54(None) = SOLIDITY_CALL require(bool)(TMP_53)",
		node_source_code_lines="[130]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	74 -> 75	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=Owned,
		function_fullname="bug_txorigin20(address)",
		label="buggy_48.sol_Owned_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	76 -> 74	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[138, 139, 140]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	79	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[138]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	77 -> 79	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = _newOwner

IRs:
newOwner(address) := _newOwner(address)",
		node_expression="newOwner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="newOwner(address) := _newOwner(address)",
		node_source_code_lines="[139]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	79 -> 78	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="buggy_48.sol_Owned_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[138, 139, 140]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	80 -> 77	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=Owned,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	82	[contract_name=Owned,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_56(bool) = tx.origin == owner_txorigin32
\
TMP_57(None) = SOLIDITY_CALL require(bool)(TMP_56)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_56(bool) = tx.origin == owner_txorigin32
TMP_57(None) = SOLIDITY_CALL require(bool)(TMP_56)",
		node_source_code_lines="[142]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	81 -> 82	[key=0,
		edge_type=next,
		label=Next];
	83	[contract_name=Owned,
		function_fullname="bug_txorigin32(address)",
		label="buggy_48.sol_Owned_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	83 -> 81	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147, 148, 149]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	85	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == newOwner)

IRs:
TMP_58(bool) = msg.sender == newOwner
TMP_59(None) = \
SOLIDITY_CALL require(bool)(TMP_58)",
		node_expression="require(bool)(msg.sender == newOwner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_58(bool) = msg.sender == newOwner
TMP_59(None) = SOLIDITY_CALL require(bool)(TMP_58)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	84 -> 85	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnershipTransferred(owner,newOwner)

IRs:
Emit OwnershipTransferred(owner.newOwner)",
		node_expression="OwnershipTransferred(owner,newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnershipTransferred(owner.newOwner)",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	85 -> 86	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[147]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	86 -> 87	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = address(0)

IRs:
TMP_61 = CONVERT 0 to address
newOwner(address) := TMP_61(address)",
		node_expression="newOwner = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_61 = CONVERT 0 to address
newOwner(address) := TMP_61(address)",
		node_source_code_lines="[148]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="buggy_48.sol_Owned_acceptOwnership()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147, 148, 149]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	89 -> 84	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[150, 151, 152, 153]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	91	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_62(bool) = tx.origin == owner_txorigin38
\
TMP_63(None) = SOLIDITY_CALL require(bool)(TMP_62)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_62(bool) = tx.origin == owner_txorigin38
TMP_63(None) = SOLIDITY_CALL require(bool)(TMP_62)",
		node_source_code_lines="[151]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	90 -> 91	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_64 = CONVERT this to address
REF_19 -> BALANCE \
TMP_64
Transfer dest:_recipient value:REF_19",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_64 = CONVERT this to address
REF_19 -> BALANCE TMP_64
Transfer dest:_recipient value:REF_19",
		node_source_code_lines="[152]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	91 -> 92	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_48.sol_Owned_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[150, 151, 152, 153]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	93 -> 90	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[133, 134, 135, 136]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	95	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_66(bool) = msg.sender == owner
TMP_67(None) = SOLIDITY_\
CALL require(bool)(TMP_66)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_66(bool) = msg.sender == owner
TMP_67(None) = SOLIDITY_CALL require(bool)(TMP_66)",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	94 -> 95	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[135]",
		node_type=_,
		source_file="buggy_48.sol"];
	95 -> 96	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="buggy_48.sol_Owned_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[133, 134, 135, 136]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	97 -> 94	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[109, 110, 111, 112]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	99	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_68(bool) = tx.origin == owner_txorigin34
\
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_68(bool) = tx.origin == owner_txorigin34
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_source_code_lines="[110]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	98 -> 99	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_70 = CONVERT this to address
REF_21 -> BALANCE \
TMP_70
Transfer dest:_recipient value:REF_21",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_70 = CONVERT this to address
REF_21 -> BALANCE TMP_70
Transfer dest:_recipient value:REF_21",
		node_source_code_lines="[111]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	99 -> 100	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_48.sol_QurasToken_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[109, 110, 111, 112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	101 -> 98	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=QurasToken,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[114, 115, 116, 117]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	103	[contract_name=QurasToken,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_72(bool) = tx.origin == owner_txorigin21
\
TMP_73(None) = SOLIDITY_CALL require(bool)(TMP_72)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_72(bool) = tx.origin == owner_txorigin21
TMP_73(None) = SOLIDITY_CALL require(bool)(TMP_72)",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=QurasToken,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[116]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=QurasToken,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_48.sol_QurasToken_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[114, 115, 116, 117]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	105 -> 102	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=QurasToken,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	107	[contract_name=QurasToken,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_75(bool) = tx.origin == owner_txorigin13
\
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_75(bool) = tx.origin == owner_txorigin13
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	106 -> 107	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=QurasToken,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	107 -> 108	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=QurasToken,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_48.sol_QurasToken_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	109 -> 106	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	111	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	110 -> 111	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="buggy_48.sol_QurasToken_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	112 -> 110	[key=0,
		edge_type=next,
		label=Next];
	113	[contract_name=QurasToken,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	114	[contract_name=QurasToken,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_78(bool) = tx.origin == owner_txorigin20
\
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_78(bool) = tx.origin == owner_txorigin20
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_source_code_lines="[130]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=QurasToken,
		function_fullname="bug_txorigin20(address)",
		label="buggy_48.sol_QurasToken_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	115 -> 113	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=QurasToken,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[138, 139, 140]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	118	[contract_name=QurasToken,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[138]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	116 -> 118	[key=0,
		edge_type=next,
		label=Next];
	117	[contract_name=QurasToken,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = _newOwner

IRs:
newOwner(address) := _newOwner(address)",
		node_expression="newOwner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="newOwner(address) := _newOwner(address)",
		node_source_code_lines="[139]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	118 -> 117	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=QurasToken,
		function_fullname="transferOwnership(address)",
		label="buggy_48.sol_QurasToken_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[138, 139, 140]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	119 -> 116	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=QurasToken,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	121	[contract_name=QurasToken,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_81(bool) = tx.origin == owner_txorigin32
\
TMP_82(None) = SOLIDITY_CALL require(bool)(TMP_81)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_81(bool) = tx.origin == owner_txorigin32
TMP_82(None) = SOLIDITY_CALL require(bool)(TMP_81)",
		node_source_code_lines="[142]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	120 -> 121	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=QurasToken,
		function_fullname="bug_txorigin32(address)",
		label="buggy_48.sol_QurasToken_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	122 -> 120	[key=0,
		edge_type=next,
		label=Next];
	123	[contract_name=QurasToken,
		function_fullname="acceptOwnership()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147, 148, 149]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	124	[contract_name=QurasToken,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == newOwner)

IRs:
TMP_83(bool) = msg.sender == newOwner
TMP_84(None) = \
SOLIDITY_CALL require(bool)(TMP_83)",
		node_expression="require(bool)(msg.sender == newOwner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_83(bool) = msg.sender == newOwner
TMP_84(None) = SOLIDITY_CALL require(bool)(TMP_83)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	123 -> 124	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=QurasToken,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnershipTransferred(owner,newOwner)

IRs:
Emit OwnershipTransferred(owner.newOwner)",
		node_expression="OwnershipTransferred(owner,newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnershipTransferred(owner.newOwner)",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	124 -> 125	[key=0,
		edge_type=next,
		label=Next];
	126	[contract_name=QurasToken,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[147]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	125 -> 126	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=QurasToken,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = address(0)

IRs:
TMP_86 = CONVERT 0 to address
newOwner(address) := TMP_86(address)",
		node_expression="newOwner = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_86 = CONVERT 0 to address
newOwner(address) := TMP_86(address)",
		node_source_code_lines="[148]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=QurasToken,
		function_fullname="acceptOwnership()",
		label="buggy_48.sol_QurasToken_acceptOwnership()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147, 148, 149]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	128 -> 123	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[150, 151, 152, 153]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	130	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_87(bool) = tx.origin == owner_txorigin38
\
TMP_88(None) = SOLIDITY_CALL require(bool)(TMP_87)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_87(bool) = tx.origin == owner_txorigin38
TMP_88(None) = SOLIDITY_CALL require(bool)(TMP_87)",
		node_source_code_lines="[151]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	129 -> 130	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_89 = CONVERT this to address
REF_25 -> BALANCE \
TMP_89
Transfer dest:_recipient value:REF_25",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_89 = CONVERT this to address
REF_25 -> BALANCE TMP_89
Transfer dest:_recipient value:REF_25",
		node_source_code_lines="[152]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	130 -> 131	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_48.sol_QurasToken_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[150, 151, 152, 153]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	132 -> 129	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=QurasToken,
		function_fullname="totalSupply()",
		label="buggy_48.sol_QurasToken_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[47]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	134	[contract_name=QurasToken,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	135	[contract_name=QurasToken,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_91(bool) = tx.origin == owner_txorigin17
\
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_91(bool) = tx.origin == owner_txorigin17
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_source_code_lines="[49]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	134 -> 135	[key=0,
		edge_type=next,
		label=Next];
	136	[contract_name=QurasToken,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	135 -> 136	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=QurasToken,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_48.sol_QurasToken_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	137 -> 134	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=QurasToken,
		function_fullname="balanceOf(address)",
		label="buggy_48.sol_QurasToken_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[52]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	139	[contract_name=QurasToken,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[53, 54, 55, 56]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	140	[contract_name=QurasToken,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_94(bool) = tx.origin == owner_txorigin37
\
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_94(bool) = tx.origin == owner_txorigin37
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_source_code_lines="[54]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	139 -> 140	[key=0,
		edge_type=next,
		label=Next];
	141	[contract_name=QurasToken,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=QurasToken,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_48.sol_QurasToken_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[53, 54, 55, 56]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	142 -> 139	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=QurasToken,
		function_fullname="allowance(address,address)",
		label="buggy_48.sol_QurasToken_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	144	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[58, 59, 60, 61]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	145	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_97(bool) = tx.origin == owner_txorigin3
\
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_97(bool) = tx.origin == owner_txorigin3
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)",
		node_source_code_lines="[59]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	144 -> 145	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_28(None) -> to.call
REF_29(None) -> REF_28.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_28(None) -> to.call
REF_29(None) -> REF_28.value",
		node_source_code_lines="[60]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	145 -> 146	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_48.sol_QurasToken_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[58, 59, 60, 61]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	147 -> 144	[key=0,
		edge_type=next,
		label=Next];
	148	[contract_name=QurasToken,
		function_fullname="transfer(address,uint256)",
		label="buggy_48.sol_QurasToken_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[62]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	149	[contract_name=QurasToken,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[63, 64, 65, 66]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	150	[contract_name=QurasToken,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_100(bool) = tx.origin == owner_txorigin9
\
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_100(bool) = tx.origin == owner_txorigin9
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)",
		node_source_code_lines="[64]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	149 -> 150	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=QurasToken,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	150 -> 151	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=QurasToken,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_48.sol_QurasToken_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[63, 64, 65, 66]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	152 -> 149	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=QurasToken,
		function_fullname="approve(address,uint256)",
		label="buggy_48.sol_QurasToken_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[67]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	154	[contract_name=QurasToken,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[68, 69, 70, 71]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	155	[contract_name=QurasToken,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_103(bool) = tx.origin == owner_txorigin25
\
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_103(bool) = tx.origin == owner_txorigin25
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)",
		node_source_code_lines="[69]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=QurasToken,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[70]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	155 -> 156	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=QurasToken,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_48.sol_QurasToken_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[68, 69, 70, 71]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	157 -> 154	[key=0,
		edge_type=next,
		label=Next];
	158	[contract_name=QurasToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_48.sol_QurasToken_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[72]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	159	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	160	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_106(bool) = tx.origin == owner_txorigin19
\
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_106(bool) = tx.origin == owner_txorigin19
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_source_code_lines="[74]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_32(None) -> to.call
REF_33(None) -> REF_32.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_32(None) -> to.call
REF_33(None) -> REF_32.value",
		node_source_code_lines="[75]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	160 -> 161	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_48.sol_QurasToken_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	162 -> 159	[key=0,
		edge_type=next,
		label=Next];
	163	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[78, 79, 80, 81]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	164	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_109(bool) = tx.origin == owner_txorigin27
\
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_109(bool) = tx.origin == owner_txorigin27
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)",
		node_source_code_lines="[79]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_34(None) -> to.call
REF_35(None) -> REF_34.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_34(None) -> to.call
REF_35(None) -> REF_34.value",
		node_source_code_lines="[80]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	164 -> 165	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_48.sol_QurasToken_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[78, 79, 80, 81]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	166 -> 163	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[83, 84, 85, 86]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	168	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_112(bool) = tx.origin == owner_txorigin31
\
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_112(bool) = tx.origin == owner_txorigin31
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_source_code_lines="[84]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	167 -> 168	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_36(None) -> to.call
REF_37(None) -> REF_36.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_36(None) -> to.call
REF_37(None) -> REF_36.value",
		node_source_code_lines="[85]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	168 -> 169	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_48.sol_QurasToken_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[83, 84, 85, 86]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	170 -> 167	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[164, 165, 166, 167]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	172	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_115(bool) = tx.origin == owner_txorigin10
\
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_115(bool) = tx.origin == owner_txorigin10
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)",
		node_source_code_lines="[165]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	171 -> 172	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_117 = CONVERT this to address
REF_39 -> \
BALANCE TMP_117
Transfer dest:_recipient value:REF_39",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_117 = CONVERT this to address
REF_39 -> BALANCE TMP_117
Transfer dest:_recipient value:REF_39",
		node_source_code_lines="[166]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	172 -> 173	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_48.sol_QurasToken_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[164, 165, 166, 167]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	174 -> 171	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[169, 170, 171, 172]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	176	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_119(bool) = tx.origin == owner_txorigin22
\
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_119(bool) = tx.origin == owner_txorigin22
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_source_code_lines="[170]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	175 -> 176	[key=0,
		edge_type=next,
		label=Next];
	177	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_121 = CONVERT this to address
REF_41 -> \
BALANCE TMP_121
Transfer dest:_recipient value:REF_41",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_121 = CONVERT this to address
REF_41 -> BALANCE TMP_121
Transfer dest:_recipient value:REF_41",
		node_source_code_lines="[171]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	176 -> 177	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_48.sol_QurasToken_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[169, 170, 171, 172]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	178 -> 175	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=QurasToken,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[174, 175, 176]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	180	[contract_name=QurasToken,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_123(bool) = tx.origin == owner_txorigin12
\
TMP_124(None) = SOLIDITY_CALL require(bool)(TMP_123)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_123(bool) = tx.origin == owner_txorigin12
TMP_124(None) = SOLIDITY_CALL require(bool)(TMP_123)",
		node_source_code_lines="[175]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	179 -> 180	[key=0,
		edge_type=next,
		label=Next];
	181	[contract_name=QurasToken,
		function_fullname="bug_txorigin12(address)",
		label="buggy_48.sol_QurasToken_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[174, 175, 176]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	181 -> 179	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	183	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_125(bool) = tx.origin == owner_txorigin11
\
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_125(bool) = tx.origin == owner_txorigin11
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	182 -> 183	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_42(None) -> to.call
REF_43(None) -> REF_42.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_42(None) -> to.call
REF_43(None) -> REF_42.value",
		node_source_code_lines="[180]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	183 -> 184	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_48.sol_QurasToken_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	185 -> 182	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=QurasToken,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[184, 185, 186, 187]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	187	[contract_name=QurasToken,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_128(bool) = tx.origin == owner_txorigin1
\
TMP_129(None) = SOLIDITY_CALL require(bool)(TMP_128)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_128(bool) = tx.origin == owner_txorigin1
TMP_129(None) = SOLIDITY_CALL require(bool)(TMP_128)",
		node_source_code_lines="[185]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	186 -> 187	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=QurasToken,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[186]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	187 -> 188	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=QurasToken,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_48.sol_QurasToken_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[184, 185, 186, 187]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	189 -> 186	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[189, 190, 191, 192]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	191	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_131(bool) = tx.origin == owner_txorigin2
\
TMP_132(None) = SOLIDITY_CALL require(bool)(TMP_131)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_131(bool) = tx.origin == owner_txorigin2
TMP_132(None) = SOLIDITY_CALL require(bool)(TMP_131)",
		node_source_code_lines="[190]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	190 -> 191	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_133 = CONVERT this to address
REF_46 -> \
BALANCE TMP_133
Transfer dest:_recipient value:REF_46",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_133 = CONVERT this to address
REF_46 -> BALANCE TMP_133
Transfer dest:_recipient value:REF_46",
		node_source_code_lines="[191]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	191 -> 192	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_48.sol_QurasToken_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[189, 190, 191, 192]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	193 -> 190	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[199, 200, 201, 202, 203, 204, 205, 206]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	195	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
symbol = XQC

IRs:
symbol(string) := XQC(string)",
		node_expression="symbol = XQC",
		node_info_vulnerabilities=None,
		node_irs="symbol(string) := XQC(string)",
		node_source_code_lines="[200]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
name = Quras Token

IRs:
name(string) := Quras Token(string)",
		node_expression="name = Quras Token",
		node_info_vulnerabilities=None,
		node_irs="name(string) := Quras Token(string)",
		node_source_code_lines="[201]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	195 -> 196	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
decimals = 8

IRs:
decimals(uint8) := 8(uint256)",
		node_expression="decimals = 8",
		node_info_vulnerabilities=None,
		node_irs="decimals(uint8) := 8(uint256)",
		node_source_code_lines="[202]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	196 -> 197	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = 88888888800000000

IRs:
_totalSupply(uint256) := 88888888800000000(uint256)",
		node_expression="_totalSupply = 88888888800000000",
		node_info_vulnerabilities=None,
		node_irs="_totalSupply(uint256) := 88888888800000000(uint256)",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[owner] = _totalSupply

IRs:
REF_47(uint256) -> balances[owner]
REF_47 (->balances) := _\
totalSupply(uint256)",
		node_expression="balances[owner] = _totalSupply",
		node_info_vulnerabilities=None,
		node_irs="REF_47(uint256) -> balances[owner]
REF_47 (->balances) := _totalSupply(uint256)",
		node_source_code_lines="[204]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	198 -> 199	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),owner,_totalSupply)

IRs:
TMP_135 = CONVERT 0 to address
Emit Transfer(TMP_\
135.owner._totalSupply)",
		node_expression="Transfer(address(0),owner,_totalSupply)",
		node_info_vulnerabilities=None,
		node_irs="TMP_135 = CONVERT 0 to address
Emit Transfer(TMP_135.owner._totalSupply)",
		node_source_code_lines="[205]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	199 -> 200	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=QurasToken,
		function_fullname="constructor()",
		label="buggy_48.sol_QurasToken_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[199, 200, 201, 202, 203, 204, 205, 206]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	201 -> 194	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=QurasToken,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[207, 208, 209]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	203	[contract_name=QurasToken,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_137(bool) = tx.origin == owner_txorigin4
\
TMP_138(None) = SOLIDITY_CALL require(bool)(TMP_137)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_137(bool) = tx.origin == owner_txorigin4
TMP_138(None) = SOLIDITY_CALL require(bool)(TMP_137)",
		node_source_code_lines="[208]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	202 -> 203	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=QurasToken,
		function_fullname="bug_txorigin4(address)",
		label="buggy_48.sol_QurasToken_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[207, 208, 209]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	204 -> 202	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=QurasToken,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[215, 216, 217]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	206	[contract_name=QurasToken,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply.sub(balances[address(0)])

IRs:
TMP_139 = CONVERT 0 to address
REF_49(uint256) -> balances[\
TMP_139]
TMP_140(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'REF_\
49'] 
RETURN TMP_140",
		node_expression="_totalSupply.sub(balances[address(0)])",
		node_info_vulnerabilities=None,
		node_irs="TMP_139 = CONVERT 0 to address
REF_49(uint256) -> balances[TMP_139]
TMP_140(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['_totalSupply', 'REF_49'] 
RETURN TMP_140",
		node_source_code_lines="[216]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	205 -> 206	[key=0,
		edge_type=next,
		label=Next];
	207	[contract_name=QurasToken,
		function_fullname="totalSupply()",
		label="buggy_48.sol_QurasToken_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[215, 216, 217]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	207 -> 205	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[218, 219, 220, 221]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	209	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_141(bool) = tx.origin == owner_txorigin7
\
TMP_142(None) = SOLIDITY_CALL require(bool)(TMP_141)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_141(bool) = tx.origin == owner_txorigin7
TMP_142(None) = SOLIDITY_CALL require(bool)(TMP_141)",
		node_source_code_lines="[219]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	210	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_50(None) -> to.call
REF_51(None) -> REF_50.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_50(None) -> to.call
REF_51(None) -> REF_50.value",
		node_source_code_lines="[220]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	209 -> 210	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_48.sol_QurasToken_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[218, 219, 220, 221]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	211 -> 208	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=QurasToken,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[227, 228, 229]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	213	[contract_name=QurasToken,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
balances[tokenOwner]

IRs:
REF_52(uint256) -> balances[tokenOwner]
RETURN REF_52",
		node_expression="balances[tokenOwner]",
		node_info_vulnerabilities=None,
		node_irs="REF_52(uint256) -> balances[tokenOwner]
RETURN REF_52",
		node_source_code_lines="[228]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	212 -> 213	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=QurasToken,
		function_fullname="balanceOf(address)",
		label="buggy_48.sol_QurasToken_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[227, 228, 229]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	214 -> 212	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[230, 231, 232, 233]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	216	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_144(bool) = tx.origin == owner_txorigin23
\
TMP_145(None) = SOLIDITY_CALL require(bool)(TMP_144)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_144(bool) = tx.origin == owner_txorigin23
TMP_145(None) = SOLIDITY_CALL require(bool)(TMP_144)",
		node_source_code_lines="[231]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	215 -> 216	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_53(None) -> to.call
REF_54(None) -> REF_53.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_53(None) -> to.call
REF_54(None) -> REF_53.value",
		node_source_code_lines="[232]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	216 -> 217	[key=0,
		edge_type=next,
		label=Next];
	218	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_48.sol_QurasToken_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[230, 231, 232, 233]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	218 -> 215	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=QurasToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[241, 242, 243, 244, 245, 246]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	220	[contract_name=QurasToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] = balances[msg.sender].sub(tokens)

IRs:
REF_55(uint256) -> balances[msg.sender]
\
REF_56(uint256) -> balances[msg.sender]
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['REF_56', 'tokens'] 
REF_55 (->balances) := TMP_147(uint256)",
		node_expression="balances[msg.sender] = balances[msg.sender].sub(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_55(uint256) -> balances[msg.sender]
REF_56(uint256) -> balances[msg.sender]
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_56', 'tokens'] 
REF_55 (->balances) := TMP_147(uint256)",
		node_source_code_lines="[242]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	219 -> 220	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=QurasToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[to] = balances[to].add(tokens)

IRs:
REF_58(uint256) -> balances[to]
REF_59(uint256) \
-> balances[to]
TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_59', 'tokens'] 
\
REF_58 (->balances) := TMP_148(uint256)",
		node_expression="balances[to] = balances[to].add(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_58(uint256) -> balances[to]
REF_59(uint256) -> balances[to]
TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_59', 'tokens'] 
REF_58 (->balances) := TMP_148(uint256)",
		node_source_code_lines="[243]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=QurasToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(msg.sender,to,tokens)

IRs:
Emit Transfer(msg.sender.to.tokens)",
		node_expression="Transfer(msg.sender,to,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(msg.sender.to.tokens)",
		node_source_code_lines="[244]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=QurasToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[245]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	222 -> 223	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=QurasToken,
		function_fullname="transfer(address,uint256)",
		label="buggy_48.sol_QurasToken_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[241, 242, 243, 244, 245, 246]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	224 -> 219	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	226	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_150(bool) = tx.origin == owner_txorigin14
\
TMP_151(None) = SOLIDITY_CALL require(bool)(TMP_150)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_150(bool) = tx.origin == owner_txorigin14
TMP_151(None) = SOLIDITY_CALL require(bool)(TMP_150)",
		node_source_code_lines="[248]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	225 -> 226	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_152 = CONVERT this to address
REF_62 -> \
BALANCE TMP_152
Transfer dest:_recipient value:REF_62",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_152 = CONVERT this to address
REF_62 -> BALANCE TMP_152
Transfer dest:_recipient value:REF_62",
		node_source_code_lines="[249]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	226 -> 227	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_48.sol_QurasToken_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	228 -> 225	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=QurasToken,
		function_fullname="increaseApproval(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[253, 254, 255, 256, 257]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	230	[contract_name=QurasToken,
		function_fullname="increaseApproval(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue)

IRs:
REF_63(mapping(\
address => uint256)) -> allowed[msg.sender]
REF_64(uint256) -> REF_63[_spender]
REF_65(mapping(address => uint256)) -> allowed[msg.sender]
\
REF_66(uint256) -> REF_65[_spender]
TMP_154(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_66', '_addedValue'] 
REF_64 (->allowed) := TMP_154(uint256)",
		node_expression="allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue)",
		node_info_vulnerabilities=None,
		node_irs="REF_63(mapping(address => uint256)) -> allowed[msg.sender]
REF_64(uint256) -> REF_63[_spender]
REF_65(mapping(address => uint256)) \
-> allowed[msg.sender]
REF_66(uint256) -> REF_65[_spender]
TMP_154(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_66', '_addedValue'] 
REF_64 (->allowed) := TMP_154(uint256)",
		node_source_code_lines="[254]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=QurasToken,
		function_fullname="increaseApproval(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,_spender,allowed[msg.sender][_spender])

IRs:
REF_68(mapping(address => uint256)) \
-> allowed[msg.sender]
REF_69(uint256) -> REF_68[_spender]
Emit Approval(msg.sender._spender.REF_69)",
		node_expression="Approval(msg.sender,_spender,allowed[msg.sender][_spender])",
		node_info_vulnerabilities=None,
		node_irs="REF_68(mapping(address => uint256)) -> allowed[msg.sender]
REF_69(uint256) -> REF_68[_spender]
Emit Approval(msg.sender._spender.REF_\
69)",
		node_source_code_lines="[255]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	230 -> 231	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=QurasToken,
		function_fullname="increaseApproval(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[256]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=QurasToken,
		function_fullname="increaseApproval(address,uint256)",
		label="buggy_48.sol_QurasToken_increaseApproval(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[253, 254, 255, 256, 257]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	233 -> 229	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	235	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_156(bool) = tx.origin == owner_txorigin30
\
TMP_157(None) = SOLIDITY_CALL require(bool)(TMP_156)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_156(bool) = tx.origin == owner_txorigin30
TMP_157(None) = SOLIDITY_CALL require(bool)(TMP_156)",
		node_source_code_lines="[259]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	234 -> 235	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_158 = CONVERT this to address
REF_71 -> \
BALANCE TMP_158
Transfer dest:_recipient value:REF_71",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_158 = CONVERT this to address
REF_71 -> BALANCE TMP_158
Transfer dest:_recipient value:REF_71",
		node_source_code_lines="[260]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	235 -> 236	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=QurasToken,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_48.sol_QurasToken_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	237 -> 234	[key=0,
		edge_type=next,
		label=Next];
	238	[contract_name=QurasToken,
		function_fullname="decreaseApproval(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[263, 264, 265, 266, 267, 268, 269, 270, 271, 272]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	239	[contract_name=QurasToken,
		function_fullname="decreaseApproval(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
oldValue = allowed[msg.sender][_spender]

IRs:
REF_72(mapping(address => uint256)) -> allowed[\
msg.sender]
REF_73(uint256) -> REF_72[_spender]
oldValue(uint256) := REF_73(uint256)",
		node_expression="oldValue = allowed[msg.sender][_spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_72(mapping(address => uint256)) -> allowed[msg.sender]
REF_73(uint256) -> REF_72[_spender]
oldValue(uint256) := REF_73(uint256)",
		node_source_code_lines="[264]",
		node_type="NEW VARIABLE",
		source_file="buggy_48.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=QurasToken,
		function_fullname="decreaseApproval(address,uint256)",
		label="Node Type: IF

EXPRESSION:
_subtractedValue > oldValue

IRs:
TMP_160(bool) = _subtractedValue > oldValue
CONDITION TMP_160",
		node_expression="_subtractedValue > oldValue",
		node_info_vulnerabilities=None,
		node_irs="TMP_160(bool) = _subtractedValue > oldValue
CONDITION TMP_160",
		node_source_code_lines="[265]",
		node_type=IF,
		source_file="buggy_48.sol"];
	239 -> 240	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=QurasToken,
		function_fullname="decreaseApproval(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][_spender] = 0

IRs:
REF_74(mapping(address => uint256)) -> allowed[msg.sender]
\
REF_75(uint256) -> REF_74[_spender]
REF_75 (->allowed) := 0(uint256)",
		node_expression="allowed[msg.sender][_spender] = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_74(mapping(address => uint256)) -> allowed[msg.sender]
REF_75(uint256) -> REF_74[_spender]
REF_75 (->allowed) := 0(uint256)",
		node_source_code_lines="[266]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	240 -> 241	[key=0,
		edge_type=if_true,
		label=True];
	242	[contract_name=QurasToken,
		function_fullname="decreaseApproval(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue)

IRs:
REF_76(mapping(address => \
uint256)) -> allowed[msg.sender]
REF_77(uint256) -> REF_76[_spender]
TMP_161(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['oldValue', '_subtractedValue'] 
REF_77 (->allowed) := TMP_161(uint256)",
		node_expression="allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue)",
		node_info_vulnerabilities=None,
		node_irs="REF_76(mapping(address => uint256)) -> allowed[msg.sender]
REF_77(uint256) -> REF_76[_spender]
TMP_161(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['oldValue', '_subtractedValue'] 
REF_77 (->allowed) := TMP_161(\
uint256)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	240 -> 242	[key=0,
		edge_type=if_false,
		label=False];
	243	[contract_name=QurasToken,
		function_fullname="decreaseApproval(address,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[265, 266, 267, 268, 269]",
		node_type=END_IF,
		source_file="buggy_48.sol"];
	241 -> 243	[key=0,
		edge_type=next,
		label=Next];
	242 -> 243	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=QurasToken,
		function_fullname="decreaseApproval(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,_spender,allowed[msg.sender][_spender])

IRs:
REF_79(mapping(address => uint256)) \
-> allowed[msg.sender]
REF_80(uint256) -> REF_79[_spender]
Emit Approval(msg.sender._spender.REF_80)",
		node_expression="Approval(msg.sender,_spender,allowed[msg.sender][_spender])",
		node_info_vulnerabilities=None,
		node_irs="REF_79(mapping(address => uint256)) -> allowed[msg.sender]
REF_80(uint256) -> REF_79[_spender]
Emit Approval(msg.sender._spender.REF_\
80)",
		node_source_code_lines="[270]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	243 -> 244	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=QurasToken,
		function_fullname="decreaseApproval(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[271]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	244 -> 245	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=QurasToken,
		function_fullname="decreaseApproval(address,uint256)",
		label="buggy_48.sol_QurasToken_decreaseApproval(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[263, 264, 265, 266, 267, 268, 269, 270, 271, 272]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	246 -> 238	[key=0,
		edge_type=next,
		label=Next];
	247	[contract_name=QurasToken,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[273, 274, 275]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	248	[contract_name=QurasToken,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_163(bool) = tx.origin == owner_txorigin8
\
TMP_164(None) = SOLIDITY_CALL require(bool)(TMP_163)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_163(bool) = tx.origin == owner_txorigin8
TMP_164(None) = SOLIDITY_CALL require(bool)(TMP_163)",
		node_source_code_lines="[274]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	247 -> 248	[key=0,
		edge_type=next,
		label=Next];
	249	[contract_name=QurasToken,
		function_fullname="bug_txorigin8(address)",
		label="buggy_48.sol_QurasToken_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[273, 274, 275]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	249 -> 247	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=QurasToken,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288, 289, 290]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	251	[contract_name=QurasToken,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][spender] = tokens

IRs:
REF_81(mapping(address => uint256)) -> allowed[msg.sender]
\
REF_82(uint256) -> REF_81[spender]
REF_82 (->allowed) := tokens(uint256)",
		node_expression="allowed[msg.sender][spender] = tokens",
		node_info_vulnerabilities=None,
		node_irs="REF_81(mapping(address => uint256)) -> allowed[msg.sender]
REF_82(uint256) -> REF_81[spender]
REF_82 (->allowed) := tokens(uint256)",
		node_source_code_lines="[287]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	250 -> 251	[key=0,
		edge_type=next,
		label=Next];
	252	[contract_name=QurasToken,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,spender,tokens)

IRs:
Emit Approval(msg.sender.spender.tokens)",
		node_expression="Approval(msg.sender,spender,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(msg.sender.spender.tokens)",
		node_source_code_lines="[288]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	251 -> 252	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=QurasToken,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[289]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=QurasToken,
		function_fullname="approve(address,uint256)",
		label="buggy_48.sol_QurasToken_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288, 289, 290]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	254 -> 250	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[291, 292, 293, 294]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	256	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_166(bool) = tx.origin == owner_txorigin39
\
TMP_167(None) = SOLIDITY_CALL require(bool)(TMP_166)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_166(bool) = tx.origin == owner_txorigin39
TMP_167(None) = SOLIDITY_CALL require(bool)(TMP_166)",
		node_source_code_lines="[292]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	255 -> 256	[key=0,
		edge_type=next,
		label=Next];
	257	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_83(None) -> to.call
REF_84(None) -> REF_83.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_83(None) -> to.call
REF_84(None) -> REF_83.value",
		node_source_code_lines="[293]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_48.sol_QurasToken_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[291, 292, 293, 294]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	258 -> 255	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=QurasToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[306, 307, 308, 309, 310, 311, 312]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	260	[contract_name=QurasToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[from] = balances[from].sub(tokens)

IRs:
REF_85(uint256) -> balances[from]
REF_86(uint256) \
-> balances[from]
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_86', '\
tokens'] 
REF_85 (->balances) := TMP_169(uint256)",
		node_expression="balances[from] = balances[from].sub(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_85(uint256) -> balances[from]
REF_86(uint256) -> balances[from]
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_86', 'tokens'] 
REF_85 (->balances) := TMP_169(uint256)",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	259 -> 260	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=QurasToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens)

IRs:
REF_88(mapping(address => \
uint256)) -> allowed[from]
REF_89(uint256) -> REF_88[msg.sender]
REF_90(mapping(address => uint256)) -> allowed[from]
REF_91(uint256) \
-> REF_90[msg.sender]
TMP_170(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_91', '\
tokens'] 
REF_89 (->allowed) := TMP_170(uint256)",
		node_expression="allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_88(mapping(address => uint256)) -> allowed[from]
REF_89(uint256) -> REF_88[msg.sender]
REF_90(mapping(address => uint256)) -> \
allowed[from]
REF_91(uint256) -> REF_90[msg.sender]
TMP_170(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,\
uint256), arguments:['REF_91', 'tokens'] 
REF_89 (->allowed) := TMP_170(uint256)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=QurasToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[to] = balances[to].add(tokens)

IRs:
REF_93(uint256) -> balances[to]
REF_94(uint256) \
-> balances[to]
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_94', 'tokens'] 
\
REF_93 (->balances) := TMP_171(uint256)",
		node_expression="balances[to] = balances[to].add(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_93(uint256) -> balances[to]
REF_94(uint256) -> balances[to]
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_94', 'tokens'] 
REF_93 (->balances) := TMP_171(uint256)",
		node_source_code_lines="[309]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=QurasToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,to,tokens)

IRs:
Emit Transfer(from.to.tokens)",
		node_expression="Transfer(from,to,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(from.to.tokens)",
		node_source_code_lines="[310]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	262 -> 263	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=QurasToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[311]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	263 -> 264	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=QurasToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_48.sol_QurasToken_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[306, 307, 308, 309, 310, 311, 312]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	265 -> 259	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=QurasToken,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	267	[contract_name=QurasToken,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_173(bool) = tx.origin == owner_txorigin36
\
TMP_174(None) = SOLIDITY_CALL require(bool)(TMP_173)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_173(bool) = tx.origin == owner_txorigin36
TMP_174(None) = SOLIDITY_CALL require(bool)(TMP_173)",
		node_source_code_lines="[314]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=QurasToken,
		function_fullname="bug_txorigin36(address)",
		label="buggy_48.sol_QurasToken_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	268 -> 266	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=QurasToken,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	270	[contract_name=QurasToken,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
allowed[tokenOwner][spender]

IRs:
REF_96(mapping(address => uint256)) -> allowed[tokenOwner]
REF_\
97(uint256) -> REF_96[spender]
RETURN REF_97",
		node_expression="allowed[tokenOwner][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_96(mapping(address => uint256)) -> allowed[tokenOwner]
REF_97(uint256) -> REF_96[spender]
RETURN REF_97",
		node_source_code_lines="[323]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	269 -> 270	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=QurasToken,
		function_fullname="allowance(address,address)",
		label="buggy_48.sol_QurasToken_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	271 -> 269	[key=0,
		edge_type=next,
		label=Next];
	272	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[325, 326, 327, 328]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	273	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_175(bool) = tx.origin == owner_txorigin35
\
TMP_176(None) = SOLIDITY_CALL require(bool)(TMP_175)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_175(bool) = tx.origin == owner_txorigin35
TMP_176(None) = SOLIDITY_CALL require(bool)(TMP_175)",
		node_source_code_lines="[326]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	272 -> 273	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_98(None) -> to.call
REF_99(None) -> REF_98.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="REF_98(None) -> to.call
REF_99(None) -> REF_98.value",
		node_source_code_lines="[327]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	273 -> 274	[key=0,
		edge_type=next,
		label=Next];
	275	[contract_name=QurasToken,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_48.sol_QurasToken_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[325, 326, 327, 328]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	275 -> 272	[key=0,
		edge_type=next,
		label=Next];
	276	[contract_name=QurasToken,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[336, 337, 338, 339, 340, 341]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	277	[contract_name=QurasToken,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][spender] = tokens

IRs:
REF_100(mapping(address => uint256)) -> allowed[msg.sender]
\
REF_101(uint256) -> REF_100[spender]
REF_101 (->allowed) := tokens(uint256)",
		node_expression="allowed[msg.sender][spender] = tokens",
		node_info_vulnerabilities=None,
		node_irs="REF_100(mapping(address => uint256)) -> allowed[msg.sender]
REF_101(uint256) -> REF_100[spender]
REF_101 (->allowed) := tokens(uint256)",
		node_source_code_lines="[337]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	276 -> 277	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=QurasToken,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,spender,tokens)

IRs:
Emit Approval(msg.sender.spender.tokens)",
		node_expression="Approval(msg.sender,spender,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(msg.sender.spender.tokens)",
		node_source_code_lines="[338]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	277 -> 278	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=QurasToken,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ApproveAndCallFallBack(spender).receiveApproval(msg.sender,tokens,address(this),data)

IRs:
TMP_\
179 = CONVERT spender to ApproveAndCallFallBack
TMP_180 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_179(ApproveAndCallFallBack), \
function:receiveApproval, arguments:['msg.sender', 'tokens', 'TMP_180', 'data']  ",
		node_expression="ApproveAndCallFallBack(spender).receiveApproval(msg.sender,tokens,address(this),data)",
		node_info_vulnerabilities=None,
		node_irs="TMP_179 = CONVERT spender to ApproveAndCallFallBack
TMP_180 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_179(ApproveAndCallFallBack), \
function:receiveApproval, arguments:['msg.sender', 'tokens', 'TMP_180', 'data']  ",
		node_source_code_lines="[339]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	278 -> 279	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=QurasToken,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[340]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	279 -> 280	[key=0,
		edge_type=next,
		label=Next];
	281	[contract_name=QurasToken,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="buggy_48.sol_QurasToken_approveAndCall(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[336, 337, 338, 339, 340, 341]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	281 -> 276	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=QurasToken,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[342, 343, 344]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	283	[contract_name=QurasToken,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_182(bool) = tx.origin == owner_txorigin40
\
TMP_183(None) = SOLIDITY_CALL require(bool)(TMP_182)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_182(bool) = tx.origin == owner_txorigin40
TMP_183(None) = SOLIDITY_CALL require(bool)(TMP_182)",
		node_source_code_lines="[343]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	282 -> 283	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=QurasToken,
		function_fullname="bug_txorigin40(address)",
		label="buggy_48.sol_QurasToken_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[342, 343, 344]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	284 -> 282	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=QurasToken,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[350, 351, 352]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	287	[contract_name=QurasToken,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[350]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	285 -> 287	[key=0,
		edge_type=next,
		label=Next];
	286	[contract_name=QurasToken,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
ERC20Interface(tokenAddress).transfer(owner,tokens)

IRs:
TMP_184 = CONVERT tokenAddress to ERC20Interface
\
TMP_185(bool) = HIGH_LEVEL_CALL, dest:TMP_184(ERC20Interface), function:transfer, arguments:['owner', 'tokens']  
RETURN TMP_185",
		node_expression="ERC20Interface(tokenAddress).transfer(owner,tokens)",
		node_info_vulnerabilities=None,
		node_irs="TMP_184 = CONVERT tokenAddress to ERC20Interface
TMP_185(bool) = HIGH_LEVEL_CALL, dest:TMP_184(ERC20Interface), function:transfer, \
arguments:['owner', 'tokens']  
RETURN TMP_185",
		node_source_code_lines="[351]",
		node_type=RETURN,
		source_file="buggy_48.sol"];
	287 -> 286	[key=0,
		edge_type=next,
		label=Next];
	288	[contract_name=QurasToken,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="buggy_48.sol_QurasToken_transferAnyERC20Token(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[350, 351, 352]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	288 -> 285	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=QurasToken,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[353, 354, 355, 356]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	290	[contract_name=QurasToken,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_187(bool) = tx.origin == owner_txorigin33
\
TMP_188(None) = SOLIDITY_CALL require(bool)(TMP_187)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="TMP_187(bool) = tx.origin == owner_txorigin33
TMP_188(None) = SOLIDITY_CALL require(bool)(TMP_187)",
		node_source_code_lines="[354]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	289 -> 290	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=QurasToken,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	290 -> 291	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=QurasToken,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_48.sol_QurasToken_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, \
84, 85, 86, 98, 99, 100, 101, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131, 141, 142, 143, 150, 151, \
152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 207, \
208, 209, 218, 219, 220, 221, 230, 231, 232, 233, 247, 248, 249, 250, 258, 259, 260, 261, 273, 274, 275, 291, 292, 293, 294, 313, \
314, 315, 325, 326, 327, 328, 342, 343, 344, 353, 354, 355, 356], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[353, 354, 355, 356]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	292 -> 289	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=QurasToken,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[133, 134, 135, 136]",
		node_type=ENTRY_POINT,
		source_file="buggy_48.sol"];
	294	[contract_name=QurasToken,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_190(bool) = msg.sender == owner
TMP_191(None) = \
SOLIDITY_CALL require(bool)(TMP_190)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_190(bool) = msg.sender == owner
TMP_191(None) = SOLIDITY_CALL require(bool)(TMP_190)",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_48.sol"];
	293 -> 294	[key=0,
		edge_type=next,
		label=Next];
	295	[contract_name=QurasToken,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[135]",
		node_type=_,
		source_file="buggy_48.sol"];
	294 -> 295	[key=0,
		edge_type=next,
		label=Next];
	296	[contract_name=QurasToken,
		function_fullname="onlyOwner()",
		label="buggy_48.sol_QurasToken_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[133, 134, 135, 136]",
		node_type=FUNCTION_NAME,
		source_file="buggy_48.sol"];
	296 -> 293	[key=0,
		edge_type=next,
		label=Next];
}
