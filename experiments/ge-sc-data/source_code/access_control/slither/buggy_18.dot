digraph "" {
	node [label="\N"];
	0	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	1	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a + b

IRs:
TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_source_code_lines="[24]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(c >= a)

IRs:
TMP_1(bool) = c >= a
TMP_2(None) = SOLIDITY_CALL require(bool)(TMP_\
1)",
		node_expression="require(bool)(c >= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(bool) = c >= a
TMP_2(None) = SOLIDITY_CALL require(bool)(TMP_1)",
		node_source_code_lines="[25]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_18.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	3 -> 0	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	5	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b <= a)

IRs:
TMP_3(bool) = b <= a
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_\
3)",
		node_expression="require(bool)(b <= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_3(bool) = b <= a
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	4 -> 5	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a - b

IRs:
TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_source_code_lines="[30]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_18.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	7 -> 4	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[33, 34, 35, 36]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	9	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a * b

IRs:
TMP_6(uint256) = a * b
c(uint256) := TMP_6(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(uint256) = a * b
c(uint256) := TMP_6(uint256)",
		node_source_code_lines="[34]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	8 -> 9	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(a == 0 || c / a == b)

IRs:
TMP_7(bool) = a == 0
TMP_8(uint256) = c / a
TMP_9(bool) = \
TMP_8 == b
TMP_10(bool) = TMP_7 || TMP_9
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_expression="require(bool)(a == 0 || c / a == b)",
		node_info_vulnerabilities=None,
		node_irs="TMP_7(bool) = a == 0
TMP_8(uint256) = c / a
TMP_9(bool) = TMP_8 == b
TMP_10(bool) = TMP_7 || TMP_9
TMP_11(None) = SOLIDITY_CALL \
require(bool)(TMP_10)",
		node_source_code_lines="[35]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	9 -> 10	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_18.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[33, 34, 35, 36]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	11 -> 8	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	13	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b > 0)

IRs:
TMP_12(bool) = b > 0
TMP_13(None) = SOLIDITY_CALL require(bool)(TMP_\
12)",
		node_expression="require(bool)(b > 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(bool) = b > 0
TMP_13(None) = SOLIDITY_CALL require(bool)(TMP_12)",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	12 -> 13	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a / b

IRs:
TMP_14(uint256) = a / b
c(uint256) := TMP_14(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_14(uint256) = a / b
c(uint256) := TMP_14(uint256)",
		node_source_code_lines="[40]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	13 -> 14	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_18.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	15 -> 12	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=ExtendedMath,
		function_fullname="limitLessThan(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	17	[contract_name=ExtendedMath,
		function_fullname="limitLessThan(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a > b

IRs:
TMP_15(bool) = a > b
CONDITION TMP_15",
		node_expression="a > b",
		node_info_vulnerabilities=None,
		node_irs="TMP_15(bool) = a > b
CONDITION TMP_15",
		node_source_code_lines="[49]",
		node_type=IF,
		source_file="buggy_18.sol"];
	16 -> 17	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=ExtendedMath,
		function_fullname="limitLessThan(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
b

IRs:
RETURN b",
		node_expression=b,
		node_info_vulnerabilities=None,
		node_irs="RETURN b",
		node_source_code_lines="[49]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	17 -> 18	[key=0,
		edge_type=if_true,
		label=True];
	19	[contract_name=ExtendedMath,
		function_fullname="limitLessThan(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[49]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	17 -> 19	[key=0,
		edge_type=if_false,
		label=False];
	20	[contract_name=ExtendedMath,
		function_fullname="limitLessThan(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a

IRs:
RETURN a",
		node_expression=a,
		node_info_vulnerabilities=None,
		node_irs="RETURN a",
		node_source_code_lines="[50]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	19 -> 20	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=ExtendedMath,
		function_fullname="limitLessThan(uint256,uint256)",
		label="buggy_18.sol_ExtendedMath_limitLessThan(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	21 -> 16	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=ERC20Interface,
		function_fullname="totalSupply()",
		label="buggy_18.sol_ERC20Interface_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[61]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	23	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[62, 63, 64]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	24	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin28)

IRs:
TMP_16(bool) = tx.origin == owner_txorigin28
\
TMP_17(None) = SOLIDITY_CALL require(bool)(TMP_16)",
		node_expression="require(bool)(tx.origin == owner_txorigin28)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_16(bool) = tx.origin == owner_txorigin28
TMP_17(None) = SOLIDITY_CALL require(bool)(TMP_16)",
		node_source_code_lines="[63]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin28(address)",
		label="buggy_18.sol_ERC20Interface_bug_txorigin28(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[62, 63, 64]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	25 -> 23	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=ERC20Interface,
		function_fullname="balanceOf(address)",
		label="buggy_18.sol_ERC20Interface_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[65]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	27	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	28	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_18(bool) = tx.origin == owner_txorigin34
\
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_18(bool) = tx.origin == owner_txorigin34
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)",
		node_source_code_lines="[67]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_20 = CONVERT this to address
REF_1 -> BALANCE \
TMP_20
Transfer dest:_recipient value:REF_1",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_20 = CONVERT this to address
REF_1 -> BALANCE TMP_20
Transfer dest:_recipient value:REF_1",
		node_source_code_lines="[68]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	28 -> 29	[key=0,
		edge_type=next,
		label=Next];
	30	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_18.sol_ERC20Interface_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	30 -> 27	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=ERC20Interface,
		function_fullname="allowance(address,address)",
		label="buggy_18.sol_ERC20Interface_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[70]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	32	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[71, 72, 73, 74]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	33	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_22(bool) = tx.origin == owner_txorigin21
\
TMP_23(None) = SOLIDITY_CALL require(bool)(TMP_22)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_22(bool) = tx.origin == owner_txorigin21
TMP_23(None) = SOLIDITY_CALL require(bool)(TMP_22)",
		node_source_code_lines="[72]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	32 -> 33	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[73]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	33 -> 34	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_18.sol_ERC20Interface_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[71, 72, 73, 74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	35 -> 32	[key=0,
		edge_type=next,
		label=Next];
	36	[contract_name=ERC20Interface,
		function_fullname="transfer(address,uint256)",
		label="buggy_18.sol_ERC20Interface_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[75]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	37	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[76, 77, 78, 79]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	38	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_25(bool) = tx.origin == owner_txorigin10
\
TMP_26(None) = SOLIDITY_CALL require(bool)(TMP_25)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_25(bool) = tx.origin == owner_txorigin10
TMP_26(None) = SOLIDITY_CALL require(bool)(TMP_25)",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	37 -> 38	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_27 = CONVERT this to address
REF_4 -> BALANCE \
TMP_27
Transfer dest:_recipient value:REF_4",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_27 = CONVERT this to address
REF_4 -> BALANCE TMP_27
Transfer dest:_recipient value:REF_4",
		node_source_code_lines="[78]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	38 -> 39	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_18.sol_ERC20Interface_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[76, 77, 78, 79]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	40 -> 37	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=ERC20Interface,
		function_fullname="approve(address,uint256)",
		label="buggy_18.sol_ERC20Interface_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	42	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	43	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_29(bool) = tx.origin == owner_txorigin22
\
TMP_30(None) = SOLIDITY_CALL require(bool)(TMP_29)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_29(bool) = tx.origin == owner_txorigin22
TMP_30(None) = SOLIDITY_CALL require(bool)(TMP_29)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	42 -> 43	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_31 = CONVERT this to address
REF_6 -> BALANCE \
TMP_31
Transfer dest:_recipient value:REF_6",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_31 = CONVERT this to address
REF_6 -> BALANCE TMP_31
Transfer dest:_recipient value:REF_6",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	43 -> 44	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_18.sol_ERC20Interface_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	45 -> 42	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=ERC20Interface,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_18.sol_ERC20Interface_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[85]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	47	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	48	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_33(bool) = tx.origin == owner_txorigin12
\
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_33(bool) = tx.origin == owner_txorigin12
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	47 -> 48	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin12(address)",
		label="buggy_18.sol_ERC20Interface_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	49 -> 47	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[89, 90, 91, 92]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	51	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_35(bool) = tx.origin == owner_txorigin33
\
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_35(bool) = tx.origin == owner_txorigin33
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_source_code_lines="[90]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	50 -> 51	[key=0,
		edge_type=next,
		label=Next];
	52	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[91]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_18.sol_ERC20Interface_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[89, 90, 91, 92]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	53 -> 50	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[94, 95, 96, 97]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	55	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_38(bool) = tx.origin == owner_txorigin27
\
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_38(bool) = tx.origin == owner_txorigin27
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_source_code_lines="[95]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	54 -> 55	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_8(None) -> to.call
REF_9(None) -> REF_8.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_8(None) -> to.call
REF_9(None) -> REF_8.value",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_18.sol_ERC20Interface_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[94, 95, 96, 97]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	57 -> 54	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=ApproveAndCallFallBack,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="buggy_18.sol_ApproveAndCallFallBack_receiveApproval(address,uint256,address,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	59	[contract_name=ApproveAndCallFallBack,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[111, 112, 113, 114]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	60	[contract_name=ApproveAndCallFallBack,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_41(bool) = tx.origin == owner_txorigin11
\
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_41(bool) = tx.origin == owner_txorigin11
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_source_code_lines="[112]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	59 -> 60	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=ApproveAndCallFallBack,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_source_code_lines="[113]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	60 -> 61	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=ApproveAndCallFallBack,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_18.sol_ApproveAndCallFallBack_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[111, 112, 113, 114]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	62 -> 59	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=Owned,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[127, 128, 129, 130]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	64	[contract_name=Owned,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_44(bool) = tx.origin == owner_txorigin31
\
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_44(bool) = tx.origin == owner_txorigin31
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_source_code_lines="[128]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	63 -> 64	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Owned,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_12(None) -> to.call
REF_13(None) -> REF_12.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_12(None) -> to.call
REF_13(None) -> REF_12.value",
		node_source_code_lines="[129]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	64 -> 65	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=Owned,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_18.sol_Owned_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[127, 128, 129, 130]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	66 -> 63	[key=0,
		edge_type=next,
		label=Next];
	67	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[133, 134, 135]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	68	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=Owned,
		function_fullname="constructor()",
		label="buggy_18.sol_Owned_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[133, 134, 135]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	69 -> 67	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=Owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[136, 137, 138, 139]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	71	[contract_name=Owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_47(bool) = tx.origin == owner_txorigin1
\
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_47(bool) = tx.origin == owner_txorigin1
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_source_code_lines="[137]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	70 -> 71	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=Owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[138]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	71 -> 72	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=Owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_18.sol_Owned_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[136, 137, 138, 139]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	73 -> 70	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[146, 147, 148]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	76	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	74 -> 76	[key=0,
		edge_type=next,
		label=Next];
	75	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = _newOwner

IRs:
newOwner(address) := _newOwner(address)",
		node_expression="newOwner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="newOwner(address) := _newOwner(address)",
		node_source_code_lines="[147]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	76 -> 75	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="buggy_18.sol_Owned_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[146, 147, 148]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	77 -> 74	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[149, 150, 151, 152]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	79	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_51(bool) = tx.origin == owner_txorigin2
\
TMP_52(None) = SOLIDITY_CALL require(bool)(TMP_51)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_51(bool) = tx.origin == owner_txorigin2
TMP_52(None) = SOLIDITY_CALL require(bool)(TMP_51)",
		node_source_code_lines="[150]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	78 -> 79	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_53 = CONVERT this to address
REF_16 -> BALANCE \
TMP_53
Transfer dest:_recipient value:REF_16",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_53 = CONVERT this to address
REF_16 -> BALANCE TMP_53
Transfer dest:_recipient value:REF_16",
		node_source_code_lines="[151]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	79 -> 80	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_18.sol_Owned_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[149, 150, 151, 152]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	81 -> 78	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156, 157, 158, 159]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	83	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == newOwner)

IRs:
TMP_55(bool) = msg.sender == newOwner
TMP_56(None) = \
SOLIDITY_CALL require(bool)(TMP_55)",
		node_expression="require(bool)(msg.sender == newOwner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_55(bool) = msg.sender == newOwner
TMP_56(None) = SOLIDITY_CALL require(bool)(TMP_55)",
		node_source_code_lines="[155]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	82 -> 83	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnershipTransferred(owner,newOwner)

IRs:
Emit OwnershipTransferred(owner.newOwner)",
		node_expression="OwnershipTransferred(owner,newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnershipTransferred(owner.newOwner)",
		node_source_code_lines="[156]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	83 -> 84	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[157]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	84 -> 85	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = address(0)

IRs:
TMP_58 = CONVERT 0 to address
newOwner(address) := TMP_58(address)",
		node_expression="newOwner = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_58 = CONVERT 0 to address
newOwner(address) := TMP_58(address)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	85 -> 86	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="buggy_18.sol_Owned_acceptOwnership()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156, 157, 158, 159]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	87 -> 82	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=Owned,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[160, 161, 162, 163]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	89	[contract_name=Owned,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_59(bool) = tx.origin == owner_txorigin17
\
TMP_60(None) = SOLIDITY_CALL require(bool)(TMP_59)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_59(bool) = tx.origin == owner_txorigin17
TMP_60(None) = SOLIDITY_CALL require(bool)(TMP_59)",
		node_source_code_lines="[161]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	88 -> 89	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=Owned,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	89 -> 90	[key=0,
		edge_type=next,
		label=Next];
	91	[contract_name=Owned,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_18.sol_Owned_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[160, 161, 162, 163]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	91 -> 88	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143, 144]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	93	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_62(bool) = msg.sender == owner
TMP_63(None) = SOLIDITY_\
CALL require(bool)(TMP_62)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_62(bool) = msg.sender == owner
TMP_63(None) = SOLIDITY_CALL require(bool)(TMP_62)",
		node_source_code_lines="[142]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	92 -> 93	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[143]",
		node_type=_,
		source_file="buggy_18.sol"];
	93 -> 94	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="buggy_18.sol_Owned_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143, 144]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	95 -> 92	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[127, 128, 129, 130]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	97	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_64(bool) = tx.origin == owner_txorigin31
\
TMP_65(None) = SOLIDITY_CALL require(bool)(TMP_64)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_64(bool) = tx.origin == owner_txorigin31
TMP_65(None) = SOLIDITY_CALL require(bool)(TMP_64)",
		node_source_code_lines="[128]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	96 -> 97	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_18(None) -> to.call
REF_19(None) -> REF_18.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_18(None) -> to.call
REF_19(None) -> REF_18.value",
		node_source_code_lines="[129]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	97 -> 98	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[127, 128, 129, 130]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	99 -> 96	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[133, 134, 135]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	101	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	100 -> 101	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="buggy_18.sol__Yesbuzz_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[133, 134, 135]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	102 -> 100	[key=0,
		edge_type=next,
		label=Next];
	103	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[136, 137, 138, 139]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	104	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_67(bool) = tx.origin == owner_txorigin1
\
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_67(bool) = tx.origin == owner_txorigin1
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_source_code_lines="[137]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[138]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	104 -> 105	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[136, 137, 138, 139]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	106 -> 103	[key=0,
		edge_type=next,
		label=Next];
	107	[contract_name=_Yesbuzz,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[146, 147, 148]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	109	[contract_name=_Yesbuzz,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	107 -> 109	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=_Yesbuzz,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = _newOwner

IRs:
newOwner(address) := _newOwner(address)",
		node_expression="newOwner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="newOwner(address) := _newOwner(address)",
		node_source_code_lines="[147]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	109 -> 108	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=_Yesbuzz,
		function_fullname="transferOwnership(address)",
		label="buggy_18.sol__Yesbuzz_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[146, 147, 148]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	110 -> 107	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[149, 150, 151, 152]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	112	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_71(bool) = tx.origin == owner_txorigin2
\
TMP_72(None) = SOLIDITY_CALL require(bool)(TMP_71)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_71(bool) = tx.origin == owner_txorigin2
TMP_72(None) = SOLIDITY_CALL require(bool)(TMP_71)",
		node_source_code_lines="[150]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	111 -> 112	[key=0,
		edge_type=next,
		label=Next];
	113	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_73 = CONVERT this to address
REF_22 -> BALANCE \
TMP_73
Transfer dest:_recipient value:REF_22",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_73 = CONVERT this to address
REF_22 -> BALANCE TMP_73
Transfer dest:_recipient value:REF_22",
		node_source_code_lines="[151]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[149, 150, 151, 152]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	114 -> 111	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=_Yesbuzz,
		function_fullname="acceptOwnership()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156, 157, 158, 159]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	116	[contract_name=_Yesbuzz,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == newOwner)

IRs:
TMP_75(bool) = msg.sender == newOwner
TMP_76(None) = \
SOLIDITY_CALL require(bool)(TMP_75)",
		node_expression="require(bool)(msg.sender == newOwner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_75(bool) = msg.sender == newOwner
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_source_code_lines="[155]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	115 -> 116	[key=0,
		edge_type=next,
		label=Next];
	117	[contract_name=_Yesbuzz,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnershipTransferred(owner,newOwner)

IRs:
Emit OwnershipTransferred(owner.newOwner)",
		node_expression="OwnershipTransferred(owner,newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnershipTransferred(owner.newOwner)",
		node_source_code_lines="[156]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	116 -> 117	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=_Yesbuzz,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[157]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	117 -> 118	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=_Yesbuzz,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = address(0)

IRs:
TMP_78 = CONVERT 0 to address
newOwner(address) := TMP_78(address)",
		node_expression="newOwner = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_78 = CONVERT 0 to address
newOwner(address) := TMP_78(address)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	118 -> 119	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=_Yesbuzz,
		function_fullname="acceptOwnership()",
		label="buggy_18.sol__Yesbuzz_acceptOwnership()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156, 157, 158, 159]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	120 -> 115	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[160, 161, 162, 163]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	122	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_79(bool) = tx.origin == owner_txorigin17
\
TMP_80(None) = SOLIDITY_CALL require(bool)(TMP_79)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_79(bool) = tx.origin == owner_txorigin17
TMP_80(None) = SOLIDITY_CALL require(bool)(TMP_79)",
		node_source_code_lines="[161]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	121 -> 122	[key=0,
		edge_type=next,
		label=Next];
	123	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	122 -> 123	[key=0,
		edge_type=next,
		label=Next];
	124	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[160, 161, 162, 163]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	124 -> 121	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=_Yesbuzz,
		function_fullname="totalSupply()",
		label="buggy_18.sol__Yesbuzz_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[61]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	126	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[62, 63, 64]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	127	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin28)

IRs:
TMP_82(bool) = tx.origin == owner_txorigin28
\
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_expression="require(bool)(tx.origin == owner_txorigin28)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_82(bool) = tx.origin == owner_txorigin28
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_source_code_lines="[63]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin28(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin28(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[62, 63, 64]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	128 -> 126	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=_Yesbuzz,
		function_fullname="balanceOf(address)",
		label="buggy_18.sol__Yesbuzz_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[65]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	130	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	131	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_84(bool) = tx.origin == owner_txorigin34
\
TMP_85(None) = SOLIDITY_CALL require(bool)(TMP_84)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_84(bool) = tx.origin == owner_txorigin34
TMP_85(None) = SOLIDITY_CALL require(bool)(TMP_84)",
		node_source_code_lines="[67]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	130 -> 131	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_86 = CONVERT this to address
REF_25 -> BALANCE \
TMP_86
Transfer dest:_recipient value:REF_25",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_86 = CONVERT this to address
REF_25 -> BALANCE TMP_86
Transfer dest:_recipient value:REF_25",
		node_source_code_lines="[68]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	131 -> 132	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	133 -> 130	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=_Yesbuzz,
		function_fullname="allowance(address,address)",
		label="buggy_18.sol__Yesbuzz_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[70]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	135	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[71, 72, 73, 74]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	136	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_88(bool) = tx.origin == owner_txorigin21
\
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_88(bool) = tx.origin == owner_txorigin21
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_source_code_lines="[72]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	135 -> 136	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[73]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[71, 72, 73, 74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	138 -> 135	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="buggy_18.sol__Yesbuzz_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[75]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	140	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[76, 77, 78, 79]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	141	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_91(bool) = tx.origin == owner_txorigin10
\
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_91(bool) = tx.origin == owner_txorigin10
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_93 = CONVERT this to address
REF_28 -> BALANCE \
TMP_93
Transfer dest:_recipient value:REF_28",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_93 = CONVERT this to address
REF_28 -> BALANCE TMP_93
Transfer dest:_recipient value:REF_28",
		node_source_code_lines="[78]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	141 -> 142	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[76, 77, 78, 79]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	143 -> 140	[key=0,
		edge_type=next,
		label=Next];
	144	[contract_name=_Yesbuzz,
		function_fullname="approve(address,uint256)",
		label="buggy_18.sol__Yesbuzz_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	145	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	146	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_95(bool) = tx.origin == owner_txorigin22
\
TMP_96(None) = SOLIDITY_CALL require(bool)(TMP_95)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_95(bool) = tx.origin == owner_txorigin22
TMP_96(None) = SOLIDITY_CALL require(bool)(TMP_95)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	145 -> 146	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_97 = CONVERT this to address
REF_30 -> BALANCE \
TMP_97
Transfer dest:_recipient value:REF_30",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_97 = CONVERT this to address
REF_30 -> BALANCE TMP_97
Transfer dest:_recipient value:REF_30",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	146 -> 147	[key=0,
		edge_type=next,
		label=Next];
	148	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	148 -> 145	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_18.sol__Yesbuzz_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[85]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	150	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	151	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_99(bool) = tx.origin == owner_txorigin12
\
TMP_100(None) = SOLIDITY_CALL require(bool)(TMP_99)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_99(bool) = tx.origin == owner_txorigin12
TMP_100(None) = SOLIDITY_CALL require(bool)(TMP_99)",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	150 -> 151	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin12(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	152 -> 150	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[89, 90, 91, 92]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	154	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_101(bool) = tx.origin == owner_txorigin33
\
TMP_102(None) = SOLIDITY_CALL require(bool)(TMP_101)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_101(bool) = tx.origin == owner_txorigin33
TMP_102(None) = SOLIDITY_CALL require(bool)(TMP_101)",
		node_source_code_lines="[90]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[91]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[89, 90, 91, 92]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	156 -> 153	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[94, 95, 96, 97]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	158	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_104(bool) = tx.origin == owner_txorigin27
\
TMP_105(None) = SOLIDITY_CALL require(bool)(TMP_104)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_104(bool) = tx.origin == owner_txorigin27
TMP_105(None) = SOLIDITY_CALL require(bool)(TMP_104)",
		node_source_code_lines="[95]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	157 -> 158	[key=0,
		edge_type=next,
		label=Next];
	159	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_32(None) -> to.call
REF_33(None) -> REF_32.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_32(None) -> to.call
REF_33(None) -> REF_32.value",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	158 -> 159	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[94, 95, 96, 97]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	160 -> 157	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[197, 198, 199, 200]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	162	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin18)

IRs:
TMP_107(bool) = tx.origin == owner_txorigin18
\
TMP_108(None) = SOLIDITY_CALL require(bool)(TMP_107)",
		node_expression="require(bool)(tx.origin == owner_txorigin18)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_107(bool) = tx.origin == owner_txorigin18
TMP_108(None) = SOLIDITY_CALL require(bool)(TMP_107)",
		node_source_code_lines="[198]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	161 -> 162	[key=0,
		edge_type=next,
		label=Next];
	163	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_109 = CONVERT this to address
REF_35 -> \
BALANCE TMP_109
Transfer dest:_recipient value:REF_35",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_109 = CONVERT this to address
REF_35 -> BALANCE TMP_109
Transfer dest:_recipient value:REF_35",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	162 -> 163	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin18(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[197, 198, 199, 200]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	164 -> 161	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[202, 203, 204, 205]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	166	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin29)

IRs:
TMP_111(bool) = tx.origin == owner_txorigin29
\
TMP_112(None) = SOLIDITY_CALL require(bool)(TMP_111)",
		node_expression="require(bool)(tx.origin == owner_txorigin29)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_111(bool) = tx.origin == owner_txorigin29
TMP_112(None) = SOLIDITY_CALL require(bool)(TMP_111)",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	165 -> 166	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[204]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin29(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[202, 203, 204, 205]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	168 -> 165	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[207, 208, 209, 210]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	170	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin6)

IRs:
TMP_114(bool) = tx.origin == owner_txorigin6
\
TMP_115(None) = SOLIDITY_CALL require(bool)(TMP_114)",
		node_expression="require(bool)(tx.origin == owner_txorigin6)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_114(bool) = tx.origin == owner_txorigin6
TMP_115(None) = SOLIDITY_CALL require(bool)(TMP_114)",
		node_source_code_lines="[208]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	169 -> 170	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_116 = CONVERT this to address
REF_38 -> \
BALANCE TMP_116
Transfer dest:_recipient value:REF_38",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_116 = CONVERT this to address
REF_38 -> BALANCE TMP_116
Transfer dest:_recipient value:REF_38",
		node_source_code_lines="[209]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	170 -> 171	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin6(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[207, 208, 209, 210]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	172 -> 169	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[212, 213, 214]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	174	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin16)

IRs:
TMP_118(bool) = tx.origin == owner_txorigin16
\
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)",
		node_expression="require(bool)(tx.origin == owner_txorigin16)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_118(bool) = tx.origin == owner_txorigin16
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)",
		node_source_code_lines="[213]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	173 -> 174	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin16(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin16(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[212, 213, 214]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	175 -> 173	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[216, 217, 218]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	177	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin24)

IRs:
TMP_120(bool) = tx.origin == owner_txorigin24
\
TMP_121(None) = SOLIDITY_CALL require(bool)(TMP_120)",
		node_expression="require(bool)(tx.origin == owner_txorigin24)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_120(bool) = tx.origin == owner_txorigin24
TMP_121(None) = SOLIDITY_CALL require(bool)(TMP_120)",
		node_source_code_lines="[217]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	176 -> 177	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin24(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin24(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[216, 217, 218]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	178 -> 176	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[220, 221, 222, 223]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	180	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin5)

IRs:
TMP_122(bool) = tx.origin == owner_txorigin5
\
TMP_123(None) = SOLIDITY_CALL require(bool)(TMP_122)",
		node_expression="require(bool)(tx.origin == owner_txorigin5)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_122(bool) = tx.origin == owner_txorigin5
TMP_123(None) = SOLIDITY_CALL require(bool)(TMP_122)",
		node_source_code_lines="[221]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	179 -> 180	[key=0,
		edge_type=next,
		label=Next];
	181	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[222]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	180 -> 181	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin5(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[220, 221, 222, 223]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	182 -> 179	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[225, 226, 227, 228]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	184	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin15)

IRs:
TMP_125(bool) = tx.origin == owner_txorigin15
\
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_expression="require(bool)(tx.origin == owner_txorigin15)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_125(bool) = tx.origin == owner_txorigin15
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_source_code_lines="[226]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	183 -> 184	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_40(None) -> to.call
REF_41(None) -> REF_40.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_40(None) -> to.call
REF_41(None) -> REF_40.value",
		node_source_code_lines="[227]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	184 -> 185	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_transferTo_txorigin15(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[225, 226, 227, 228]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	186 -> 183	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[231, 232, 233, 234]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	188	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_128(bool) = tx.origin == owner_txorigin13
\
TMP_129(None) = SOLIDITY_CALL require(bool)(TMP_128)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_128(bool) = tx.origin == owner_txorigin13
TMP_129(None) = SOLIDITY_CALL require(bool)(TMP_128)",
		node_source_code_lines="[232]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	187 -> 188	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[233]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	188 -> 189	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[231, 232, 233, 234]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	190 -> 187	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	207	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[241]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	191 -> 207	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
symbol = YESBUZ

IRs:
symbol(string) := YESBUZ(string)",
		node_expression="symbol = YESBUZ",
		node_info_vulnerabilities=None,
		node_irs="symbol(string) := YESBUZ(string)",
		node_source_code_lines="[243]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	193	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
name = Yesbuzz

IRs:
name(string) := Yesbuzz(string)",
		node_expression="name = Yesbuzz",
		node_info_vulnerabilities=None,
		node_irs="name(string) := Yesbuzz(string)",
		node_source_code_lines="[244]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	192 -> 193	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
decimals = 8

IRs:
decimals(uint8) := 8(uint256)",
		node_expression="decimals = 8",
		node_info_vulnerabilities=None,
		node_irs="decimals(uint8) := 8(uint256)",
		node_source_code_lines="[245]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = 21000000 * 10 ** uint256(decimals)

IRs:
TMP_131 = CONVERT decimals to uint256
\
TMP_132(uint256) = 10 ** TMP_131
TMP_133(uint256) = 21000000 * TMP_132
_totalSupply(uint256) := TMP_133(uint256)",
		node_expression="_totalSupply = 21000000 * 10 ** uint256(decimals)",
		node_info_vulnerabilities=None,
		node_irs="TMP_131 = CONVERT decimals to uint256
TMP_132(uint256) = 10 ** TMP_131
TMP_133(uint256) = 21000000 * TMP_132
_totalSupply(uint256) := \
TMP_133(uint256)",
		node_source_code_lines="[246]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: IF

EXPRESSION:
locked

IRs:
CONDITION locked",
		node_expression=locked,
		node_info_vulnerabilities=None,
		node_irs="CONDITION locked",
		node_source_code_lines="[247]",
		node_type=IF,
		source_file="buggy_18.sol"];
	195 -> 196	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
revert()()

IRs:
TMP_134(None) = SOLIDITY_CALL revert()()",
		node_expression="revert()()",
		node_info_vulnerabilities=None,
		node_irs="TMP_134(None) = SOLIDITY_CALL revert()()",
		node_source_code_lines="[247]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	196 -> 197	[key=0,
		edge_type=if_true,
		label=True];
	198	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[247]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	196 -> 198	[key=0,
		edge_type=if_false,
		label=False];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
locked = true

IRs:
locked(bool) := True(bool)",
		node_expression="locked = true",
		node_info_vulnerabilities=None,
		node_irs="locked(bool) := True(bool)",
		node_source_code_lines="[248]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	198 -> 199	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
tokensMinted = 0

IRs:
tokensMinted(uint256) := 0(uint256)",
		node_expression="tokensMinted = 0",
		node_info_vulnerabilities=None,
		node_irs="tokensMinted(uint256) := 0(uint256)",
		node_source_code_lines="[249]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	199 -> 200	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
rewardEra = 0

IRs:
rewardEra(uint256) := 0(uint256)",
		node_expression="rewardEra = 0",
		node_info_vulnerabilities=None,
		node_irs="rewardEra(uint256) := 0(uint256)",
		node_source_code_lines="[250]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	200 -> 201	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
maxSupplyForEra = _totalSupply.div(2)

IRs:
TMP_135(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.div(uint256,uint256), arguments:['_totalSupply', '2'] 
maxSupplyForEra(uint256) := TMP_135(uint256)",
		node_expression="maxSupplyForEra = _totalSupply.div(2)",
		node_info_vulnerabilities=None,
		node_irs="TMP_135(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['_totalSupply', '2'] 
maxSupplyForEra(\
uint256) := TMP_135(uint256)",
		node_source_code_lines="[251]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	201 -> 202	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
miningTarget = _MAXIMUM_TARGET

IRs:
miningTarget(uint256) := _MAXIMUM_TARGET(uint256)",
		node_expression="miningTarget = _MAXIMUM_TARGET",
		node_info_vulnerabilities=None,
		node_irs="miningTarget(uint256) := _MAXIMUM_TARGET(uint256)",
		node_source_code_lines="[252]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	202 -> 203	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
latestDifficultyPeriodStarted = block.number

IRs:
latestDifficultyPeriodStarted(uint256) := \
block.number(uint256)",
		node_expression="latestDifficultyPeriodStarted = block.number",
		node_info_vulnerabilities=None,
		node_irs="latestDifficultyPeriodStarted(uint256) := block.number(uint256)",
		node_source_code_lines="[253]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	203 -> 204	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
burnPercent = 10

IRs:
burnPercent(uint256) := 10(uint256)",
		node_expression="burnPercent = 10",
		node_info_vulnerabilities=None,
		node_irs="burnPercent(uint256) := 10(uint256)",
		node_source_code_lines="[254]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	204 -> 205	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_startNewMiningEpoch()

IRs:
INTERNAL_CALL, _Yesbuzz._startNewMiningEpoch()()",
		node_expression="_startNewMiningEpoch()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, _Yesbuzz._startNewMiningEpoch()()",
		node_source_code_lines="[255]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	205 -> 206	[key=0,
		edge_type=next,
		label=Next];
	207 -> 192	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=_Yesbuzz,
		function_fullname="constructor()",
		label="buggy_18.sol__Yesbuzz_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	208 -> 191	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[262, 263, 264, 265]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	210	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_138(bool) = tx.origin == owner_txorigin37
\
TMP_139(None) = SOLIDITY_CALL require(bool)(TMP_138)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_138(bool) = tx.origin == owner_txorigin37
TMP_139(None) = SOLIDITY_CALL require(bool)(TMP_138)",
		node_source_code_lines="[263]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	209 -> 210	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[264]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	210 -> 211	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[262, 263, 264, 265]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	212 -> 209	[key=0,
		edge_type=next,
		label=Next];
	213	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	214	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
digest = keccak256(bytes)(abi.encodePacked(challengeNumber,msg.sender,nonce))

IRs:
TMP_141(\
bytes) = SOLIDITY_CALL abi.encodePacked()(challengeNumber,msg.sender,nonce)
TMP_142(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_\
141)
digest(bytes32) := TMP_142(bytes32)",
		node_expression="digest = keccak256(bytes)(abi.encodePacked(challengeNumber,msg.sender,nonce))",
		node_info_vulnerabilities=None,
		node_irs="TMP_141(bytes) = SOLIDITY_CALL abi.encodePacked()(challengeNumber,msg.sender,nonce)
TMP_142(bytes32) = SOLIDITY_CALL keccak256(bytes)(\
TMP_141)
digest(bytes32) := TMP_142(bytes32)",
		node_source_code_lines="[269]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	213 -> 214	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: IF

EXPRESSION:
digest != challenge_digest

IRs:
TMP_143(bool) = digest != challenge_digest
CONDITION TMP_143",
		node_expression="digest != challenge_digest",
		node_info_vulnerabilities=None,
		node_irs="TMP_143(bool) = digest != challenge_digest
CONDITION TMP_143",
		node_source_code_lines="[271]",
		node_type=IF,
		source_file="buggy_18.sol"];
	214 -> 215	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
revert()()

IRs:
TMP_144(None) = SOLIDITY_CALL revert()()",
		node_expression="revert()()",
		node_info_vulnerabilities=None,
		node_irs="TMP_144(None) = SOLIDITY_CALL revert()()",
		node_source_code_lines="[271]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	215 -> 216	[key=0,
		edge_type=if_true,
		label=True];
	217	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[271]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	215 -> 217	[key=0,
		edge_type=if_false,
		label=False];
	216 -> 217	[key=0,
		edge_type=next,
		label=Next];
	218	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: IF

EXPRESSION:
uint256(digest) > miningTarget

IRs:
TMP_145 = CONVERT digest to uint256
TMP_146(bool) = TMP_145 > miningTarget
\
CONDITION TMP_146",
		node_expression="uint256(digest) > miningTarget",
		node_info_vulnerabilities=None,
		node_irs="TMP_145 = CONVERT digest to uint256
TMP_146(bool) = TMP_145 > miningTarget
CONDITION TMP_146",
		node_source_code_lines="[273]",
		node_type=IF,
		source_file="buggy_18.sol"];
	217 -> 218	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
revert()()

IRs:
TMP_147(None) = SOLIDITY_CALL revert()()",
		node_expression="revert()()",
		node_info_vulnerabilities=None,
		node_irs="TMP_147(None) = SOLIDITY_CALL revert()()",
		node_source_code_lines="[273]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	218 -> 219	[key=0,
		edge_type=if_true,
		label=True];
	220	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[273]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	218 -> 220	[key=0,
		edge_type=if_false,
		label=False];
	219 -> 220	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
solution = solutionForChallenge[challengeNumber]

IRs:
REF_46(bytes32) -> solutionForChallenge[\
challengeNumber]
solution(bytes32) := REF_46(bytes32)",
		node_expression="solution = solutionForChallenge[challengeNumber]",
		node_info_vulnerabilities=None,
		node_irs="REF_46(bytes32) -> solutionForChallenge[challengeNumber]
solution(bytes32) := REF_46(bytes32)",
		node_source_code_lines="[275]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
solutionForChallenge[challengeNumber] = digest

IRs:
REF_47(bytes32) -> solutionForChallenge[\
challengeNumber]
REF_47 (->solutionForChallenge) := digest(bytes32)",
		node_expression="solutionForChallenge[challengeNumber] = digest",
		node_info_vulnerabilities=None,
		node_irs="REF_47(bytes32) -> solutionForChallenge[challengeNumber]
REF_47 (->solutionForChallenge) := digest(bytes32)",
		node_source_code_lines="[276]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: IF

EXPRESSION:
solution != 0x0

IRs:
TMP_148(bool) = solution != 0
CONDITION TMP_148",
		node_expression="solution != 0x0",
		node_info_vulnerabilities=None,
		node_irs="TMP_148(bool) = solution != 0
CONDITION TMP_148",
		node_source_code_lines="[277]",
		node_type=IF,
		source_file="buggy_18.sol"];
	222 -> 223	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
revert()()

IRs:
TMP_149(None) = SOLIDITY_CALL revert()()",
		node_expression="revert()()",
		node_info_vulnerabilities=None,
		node_irs="TMP_149(None) = SOLIDITY_CALL revert()()",
		node_source_code_lines="[277]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	223 -> 224	[key=0,
		edge_type=if_true,
		label=True];
	225	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	223 -> 225	[key=0,
		edge_type=if_false,
		label=False];
	224 -> 225	[key=0,
		edge_type=next,
		label=Next];
	226	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
reward_amount = getMiningReward()

IRs:
TMP_150(uint256) = INTERNAL_CALL, _Yesbuzz.getMiningReward()()
\
reward_amount(uint256) := TMP_150(uint256)",
		node_expression="reward_amount = getMiningReward()",
		node_info_vulnerabilities=None,
		node_irs="TMP_150(uint256) = INTERNAL_CALL, _Yesbuzz.getMiningReward()()
reward_amount(uint256) := TMP_150(uint256)",
		node_source_code_lines="[278]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	225 -> 226	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] = balances[msg.sender].add(reward_amount)

IRs:
REF_48(uint256) -> balances[\
msg.sender]
REF_49(uint256) -> balances[msg.sender]
TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,\
uint256), arguments:['REF_49', 'reward_amount'] 
REF_48 (->balances) := TMP_151(uint256)",
		node_expression="balances[msg.sender] = balances[msg.sender].add(reward_amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_48(uint256) -> balances[msg.sender]
REF_49(uint256) -> balances[msg.sender]
TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_49', 'reward_amount'] 
REF_48 (->balances) := TMP_151(uint256)",
		node_source_code_lines="[279]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	226 -> 227	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
tokensMinted = tokensMinted.add(reward_amount)

IRs:
TMP_152(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['tokensMinted', 'reward_amount'] 
tokensMinted(uint256) := TMP_152(uint256)",
		node_expression="tokensMinted = tokensMinted.add(reward_amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_152(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['tokensMinted', 'reward_amount'] 
\
tokensMinted(uint256) := TMP_152(uint256)",
		node_source_code_lines="[280]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	227 -> 228	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(tokensMinted <= maxSupplyForEra)

IRs:
TMP_153(bool) = tokensMinted <= maxSupplyForEra
\
TMP_154(None) = SOLIDITY_CALL assert(bool)(TMP_153)",
		node_expression="assert(bool)(tokensMinted <= maxSupplyForEra)",
		node_info_vulnerabilities=None,
		node_irs="TMP_153(bool) = tokensMinted <= maxSupplyForEra
TMP_154(None) = SOLIDITY_CALL assert(bool)(TMP_153)",
		node_source_code_lines="[282]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	228 -> 229	[key=0,
		edge_type=next,
		label=Next];
	230	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
lastRewardTo = msg.sender

IRs:
lastRewardTo(address) := msg.sender(address)",
		node_expression="lastRewardTo = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="lastRewardTo(address) := msg.sender(address)",
		node_source_code_lines="[284]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
lastRewardAmount = reward_amount

IRs:
lastRewardAmount(uint256) := reward_amount(uint256)",
		node_expression="lastRewardAmount = reward_amount",
		node_info_vulnerabilities=None,
		node_irs="lastRewardAmount(uint256) := reward_amount(uint256)",
		node_source_code_lines="[285]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	230 -> 231	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
lastRewardEthBlockNumber = block.number

IRs:
lastRewardEthBlockNumber(uint256) := block.number(\
uint256)",
		node_expression="lastRewardEthBlockNumber = block.number",
		node_info_vulnerabilities=None,
		node_irs="lastRewardEthBlockNumber(uint256) := block.number(uint256)",
		node_source_code_lines="[286]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
_startNewMiningEpoch()

IRs:
INTERNAL_CALL, _Yesbuzz._startNewMiningEpoch()()",
		node_expression="_startNewMiningEpoch()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, _Yesbuzz._startNewMiningEpoch()()",
		node_source_code_lines="[287]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	232 -> 233	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Mint(msg.sender,reward_amount,epochCount,challengeNumber)

IRs:
Emit Mint(msg.sender.reward_amount.epochCount.challengeNumber)",
		node_expression="Mint(msg.sender,reward_amount,epochCount,challengeNumber)",
		node_info_vulnerabilities=None,
		node_irs="Emit Mint(msg.sender.reward_amount.epochCount.challengeNumber)",
		node_source_code_lines="[288]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	233 -> 234	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[289]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	234 -> 235	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=_Yesbuzz,
		function_fullname="mint(uint256,bytes32)",
		label="buggy_18.sol__Yesbuzz_mint(uint256,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	236 -> 213	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[291, 292, 293, 294]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	238	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_157(bool) = tx.origin == owner_txorigin3
\
TMP_158(None) = SOLIDITY_CALL require(bool)(TMP_157)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_157(bool) = tx.origin == owner_txorigin3
TMP_158(None) = SOLIDITY_CALL require(bool)(TMP_157)",
		node_source_code_lines="[292]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	237 -> 238	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_52(None) -> to.call
REF_53(None) -> REF_52.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_52(None) -> to.call
REF_53(None) -> REF_52.value",
		node_source_code_lines="[293]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[291, 292, 293, 294]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	240 -> 237	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	242	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: IF

EXPRESSION:
tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39

IRs:
TMP_160(uint256) = INTERNAL_\
CALL, _Yesbuzz.getMiningReward()()
TMP_161(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
tokensMinted', 'TMP_160'] 
TMP_162(bool) = TMP_161 > maxSupplyForEra
TMP_163(bool) = rewardEra < 39
TMP_164(bool) = TMP_162 && TMP_\
163
CONDITION TMP_164",
		node_expression="tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39",
		node_info_vulnerabilities=None,
		node_irs="TMP_160(uint256) = INTERNAL_CALL, _Yesbuzz.getMiningReward()()
TMP_161(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['tokensMinted', 'TMP_160'] 
TMP_162(bool) = TMP_161 > maxSupplyForEra
TMP_163(bool) = rewardEra < 39
\
TMP_164(bool) = TMP_162 && TMP_163
CONDITION TMP_164",
		node_source_code_lines="[301]",
		node_type=IF,
		source_file="buggy_18.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: EXPRESSION

EXPRESSION:
rewardEra = rewardEra + 1

IRs:
TMP_165(uint256) = rewardEra + 1
rewardEra(uint256) := TMP_165(\
uint256)",
		node_expression="rewardEra = rewardEra + 1",
		node_info_vulnerabilities=None,
		node_irs="TMP_165(uint256) = rewardEra + 1
rewardEra(uint256) := TMP_165(uint256)",
		node_source_code_lines="[302]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	242 -> 243	[key=0,
		edge_type=if_true,
		label=True];
	244	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[301, 302, 303]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	242 -> 244	[key=0,
		edge_type=if_false,
		label=False];
	243 -> 244	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: EXPRESSION

EXPRESSION:
maxSupplyForEra = _totalSupply - _totalSupply.div(2 ** (rewardEra + 1))

IRs:
TMP_166(uint256) = \
rewardEra + 1
TMP_167(uint256) = 2 ** TMP_166
TMP_168(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), \
arguments:['_totalSupply', 'TMP_167'] 
TMP_169(uint256) = _totalSupply - TMP_168
maxSupplyForEra(uint256) := TMP_169(uint256)",
		node_expression="maxSupplyForEra = _totalSupply - _totalSupply.div(2 ** (rewardEra + 1))",
		node_info_vulnerabilities=None,
		node_irs="TMP_166(uint256) = rewardEra + 1
TMP_167(uint256) = 2 ** TMP_166
TMP_168(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(\
uint256,uint256), arguments:['_totalSupply', 'TMP_167'] 
TMP_169(uint256) = _totalSupply - TMP_168
maxSupplyForEra(uint256) := TMP_\
169(uint256)",
		node_source_code_lines="[306]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	244 -> 245	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: EXPRESSION

EXPRESSION:
epochCount = epochCount.add(1)

IRs:
TMP_170(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['epochCount', '1'] 
epochCount(uint256) := TMP_170(uint256)",
		node_expression="epochCount = epochCount.add(1)",
		node_info_vulnerabilities=None,
		node_irs="TMP_170(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['epochCount', '1'] 
epochCount(\
uint256) := TMP_170(uint256)",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	245 -> 246	[key=0,
		edge_type=next,
		label=Next];
	247	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: IF

EXPRESSION:
epochCount % _BLOCKS_PER_READJUSTMENT == 0

IRs:
TMP_171(uint256) = epochCount % _BLOCKS_PER_READJUSTMENT
\
TMP_172(bool) = TMP_171 == 0
CONDITION TMP_172",
		node_expression="epochCount % _BLOCKS_PER_READJUSTMENT == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_171(uint256) = epochCount % _BLOCKS_PER_READJUSTMENT
TMP_172(bool) = TMP_171 == 0
CONDITION TMP_172",
		node_source_code_lines="[309]",
		node_type=IF,
		source_file="buggy_18.sol"];
	246 -> 247	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: EXPRESSION

EXPRESSION:
_reAdjustDifficulty()

IRs:
INTERNAL_CALL, _Yesbuzz._reAdjustDifficulty()()",
		node_expression="_reAdjustDifficulty()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, _Yesbuzz._reAdjustDifficulty()()",
		node_source_code_lines="[310]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	247 -> 248	[key=0,
		edge_type=if_true,
		label=True];
	249	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[309, 310, 311]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	247 -> 249	[key=0,
		edge_type=if_false,
		label=False];
	248 -> 249	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="Node Type: EXPRESSION

EXPRESSION:
challengeNumber = blockhash(uint256)(block.number - 1)

IRs:
TMP_174(uint256) = block.number \
- 1
TMP_175(uint256) = SOLIDITY_CALL blockhash(uint256)(TMP_174)
challengeNumber(bytes32) := TMP_175(uint256)",
		node_expression="challengeNumber = blockhash(uint256)(block.number - 1)",
		node_info_vulnerabilities=None,
		node_irs="TMP_174(uint256) = block.number - 1
TMP_175(uint256) = SOLIDITY_CALL blockhash(uint256)(TMP_174)
challengeNumber(bytes32) := TMP_\
175(uint256)",
		node_source_code_lines="[314]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	249 -> 250	[key=0,
		edge_type=next,
		label=Next];
	251	[contract_name=_Yesbuzz,
		function_fullname="_startNewMiningEpoch()",
		label="buggy_18.sol__Yesbuzz__startNewMiningEpoch()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	251 -> 241	[key=0,
		edge_type=next,
		label=Next];
	252	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[316, 317, 318, 319]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	253	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_176(bool) = tx.origin == owner_txorigin9
\
TMP_177(None) = SOLIDITY_CALL require(bool)(TMP_176)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_176(bool) = tx.origin == owner_txorigin9
TMP_177(None) = SOLIDITY_CALL require(bool)(TMP_176)",
		node_source_code_lines="[317]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[318]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	253 -> 254	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[316, 317, 318, 319]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	255 -> 252	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, \
349, 350, 351]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	257	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted

IRs:
TMP_\
179(uint256) = block.number - latestDifficultyPeriodStarted
ethBlocksSinceLastDifficultyPeriod(uint256) := TMP_179(uint256)",
		node_expression="ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted",
		node_info_vulnerabilities=None,
		node_irs="TMP_179(uint256) = block.number - latestDifficultyPeriodStarted
ethBlocksSinceLastDifficultyPeriod(uint256) := TMP_179(uint256)",
		node_source_code_lines="[324]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
epochsMined = _BLOCKS_PER_READJUSTMENT

IRs:
epochsMined(uint256) := _BLOCKS_PER_READJUSTMENT(\
uint256)",
		node_expression="epochsMined = _BLOCKS_PER_READJUSTMENT",
		node_info_vulnerabilities=None,
		node_irs="epochsMined(uint256) := _BLOCKS_PER_READJUSTMENT(uint256)",
		node_source_code_lines="[327]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	257 -> 258	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
targetEthBlocksPerDiffPeriod = epochsMined * 60

IRs:
TMP_180(uint256) = epochsMined * 60
targetEthBlocksPerDiffPeriod(\
uint256) := TMP_180(uint256)",
		node_expression="targetEthBlocksPerDiffPeriod = epochsMined * 60",
		node_info_vulnerabilities=None,
		node_irs="TMP_180(uint256) = epochsMined * 60
targetEthBlocksPerDiffPeriod(uint256) := TMP_180(uint256)",
		node_source_code_lines="[328]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	258 -> 259	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: IF

EXPRESSION:
ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod

IRs:
TMP_181(bool) = ethBlocksSinceLastDifficultyPeriod < \
targetEthBlocksPerDiffPeriod
CONDITION TMP_181",
		node_expression="ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod",
		node_info_vulnerabilities=None,
		node_irs="TMP_181(bool) = ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod
CONDITION TMP_181",
		node_source_code_lines="[330]",
		node_type=IF,
		source_file="buggy_18.sol"];
	259 -> 260	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div(ethBlocksSinceLastDifficultyPeriod)

\
IRs:
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['targetEthBlocksPerDiffPeriod', '\
100'] 
TMP_183(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_182', 'ethBlocksSinceLastDifficultyPeriod'] 
\
excess_block_pct(uint256) := TMP_183(uint256)",
		node_expression="excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div(ethBlocksSinceLastDifficultyPeriod)",
		node_info_vulnerabilities=None,
		node_irs="TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['targetEthBlocksPerDiffPeriod', '\
100'] 
TMP_183(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_182', 'ethBlocksSinceLastDifficultyPeriod'] 
\
excess_block_pct(uint256) := TMP_183(uint256)",
		node_source_code_lines="[331]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	260 -> 261	[key=0,
		edge_type=if_true,
		label=True];
	264	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div(targetEthBlocksPerDiffPeriod)

\
IRs:
TMP_189(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['ethBlocksSinceLastDifficultyPeriod', '\
100'] 
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_189', 'targetEthBlocksPerDiffPeriod'] 
\
shortage_block_pct(uint256) := TMP_190(uint256)",
		node_expression="shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div(targetEthBlocksPerDiffPeriod)",
		node_info_vulnerabilities=None,
		node_irs="TMP_189(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['ethBlocksSinceLastDifficultyPeriod', '\
100'] 
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_189', 'targetEthBlocksPerDiffPeriod'] 
\
shortage_block_pct(uint256) := TMP_190(uint256)",
		node_source_code_lines="[337]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	260 -> 264	[key=0,
		edge_type=if_false,
		label=False];
	262	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000)

IRs:
TMP_184(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['excess_block_pct', '100'] 
TMP_185(uint256) = LIBRARY_\
CALL, dest:ExtendedMath, function:ExtendedMath.limitLessThan(uint256,uint256), arguments:['TMP_184', '1000'] 
excess_block_pct_extra(\
uint256) := TMP_185(uint256)",
		node_expression="excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000)",
		node_info_vulnerabilities=None,
		node_irs="TMP_184(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['excess_block_pct', '100'] 
TMP_\
185(uint256) = LIBRARY_CALL, dest:ExtendedMath, function:ExtendedMath.limitLessThan(uint256,uint256), arguments:['TMP_184', '1000'] 
\
excess_block_pct_extra(uint256) := TMP_185(uint256)",
		node_source_code_lines="[332]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: EXPRESSION

EXPRESSION:
miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra))

IRs:
TMP_\
186(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['miningTarget', '2000'] 
TMP_187(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_186', 'excess_block_pct_extra'] 
\
TMP_188(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['miningTarget', 'TMP_187'] 
miningTarget(\
uint256) := TMP_188(uint256)",
		node_expression="miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra))",
		node_info_vulnerabilities=None,
		node_irs="TMP_186(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['miningTarget', '2000'] 
TMP_\
187(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_186', 'excess_block_pct_extra'] 
\
TMP_188(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['miningTarget', 'TMP_187'] 
miningTarget(\
uint256) := TMP_188(uint256)",
		node_source_code_lines="[335]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	262 -> 263	[key=0,
		edge_type=next,
		label=Next];
	267	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	263 -> 267	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000)

IRs:
TMP_191(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['shortage_block_pct', '100'] 
TMP_192(uint256) = \
LIBRARY_CALL, dest:ExtendedMath, function:ExtendedMath.limitLessThan(uint256,uint256), arguments:['TMP_191', '1000'] 
shortage_block_\
pct_extra(uint256) := TMP_192(uint256)",
		node_expression="shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000)",
		node_info_vulnerabilities=None,
		node_irs="TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['shortage_block_pct', '100'] 
\
TMP_192(uint256) = LIBRARY_CALL, dest:ExtendedMath, function:ExtendedMath.limitLessThan(uint256,uint256), arguments:['TMP_191', '\
1000'] 
shortage_block_pct_extra(uint256) := TMP_192(uint256)",
		node_source_code_lines="[338]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	264 -> 265	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: EXPRESSION

EXPRESSION:
miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra))

IRs:
TMP_\
193(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['miningTarget', '2000'] 
TMP_194(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_193', 'shortage_block_pct_extra'] 
\
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['miningTarget', 'TMP_194'] 
miningTarget(\
uint256) := TMP_195(uint256)",
		node_expression="miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra))",
		node_info_vulnerabilities=None,
		node_irs="TMP_193(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['miningTarget', '2000'] 
TMP_\
194(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_193', 'shortage_block_pct_extra'] 
\
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['miningTarget', 'TMP_194'] 
miningTarget(\
uint256) := TMP_195(uint256)",
		node_source_code_lines="[340]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	265 -> 266	[key=0,
		edge_type=next,
		label=Next];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: EXPRESSION

EXPRESSION:
latestDifficultyPeriodStarted = block.number

IRs:
latestDifficultyPeriodStarted(uint256) := \
block.number(uint256)",
		node_expression="latestDifficultyPeriodStarted = block.number",
		node_info_vulnerabilities=None,
		node_irs="latestDifficultyPeriodStarted(uint256) := block.number(uint256)",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: IF

EXPRESSION:
miningTarget < _MINIMUM_TARGET

IRs:
TMP_196(bool) = miningTarget < _MINIMUM_TARGET
CONDITION TMP_196",
		node_expression="miningTarget < _MINIMUM_TARGET",
		node_info_vulnerabilities=None,
		node_irs="TMP_196(bool) = miningTarget < _MINIMUM_TARGET
CONDITION TMP_196",
		node_source_code_lines="[343]",
		node_type=IF,
		source_file="buggy_18.sol"];
	268 -> 269	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: EXPRESSION

EXPRESSION:
miningTarget = _MINIMUM_TARGET

IRs:
miningTarget(uint256) := _MINIMUM_TARGET(uint256)",
		node_expression="miningTarget = _MINIMUM_TARGET",
		node_info_vulnerabilities=None,
		node_irs="miningTarget(uint256) := _MINIMUM_TARGET(uint256)",
		node_source_code_lines="[345]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	269 -> 270	[key=0,
		edge_type=if_true,
		label=True];
	271	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[343, 344, 345, 346]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	269 -> 271	[key=0,
		edge_type=if_false,
		label=False];
	270 -> 271	[key=0,
		edge_type=next,
		label=Next];
	272	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: IF

EXPRESSION:
miningTarget > _MAXIMUM_TARGET

IRs:
TMP_197(bool) = miningTarget > _MAXIMUM_TARGET
CONDITION TMP_197",
		node_expression="miningTarget > _MAXIMUM_TARGET",
		node_info_vulnerabilities=None,
		node_irs="TMP_197(bool) = miningTarget > _MAXIMUM_TARGET
CONDITION TMP_197",
		node_source_code_lines="[347]",
		node_type=IF,
		source_file="buggy_18.sol"];
	271 -> 272	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: EXPRESSION

EXPRESSION:
miningTarget = _MAXIMUM_TARGET

IRs:
miningTarget(uint256) := _MAXIMUM_TARGET(uint256)",
		node_expression="miningTarget = _MAXIMUM_TARGET",
		node_info_vulnerabilities=None,
		node_irs="miningTarget(uint256) := _MAXIMUM_TARGET(uint256)",
		node_source_code_lines="[349]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	272 -> 273	[key=0,
		edge_type=if_true,
		label=True];
	274	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[347, 348, 349, 350]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	272 -> 274	[key=0,
		edge_type=if_false,
		label=False];
	273 -> 274	[key=0,
		edge_type=next,
		label=Next];
	275	[contract_name=_Yesbuzz,
		function_fullname="_reAdjustDifficulty()",
		label="buggy_18.sol__Yesbuzz__reAdjustDifficulty()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, \
349, 350, 351]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	275 -> 256	[key=0,
		edge_type=next,
		label=Next];
	276	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[352, 353, 354, 355]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	277	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_198(bool) = tx.origin == owner_txorigin25
\
TMP_199(None) = SOLIDITY_CALL require(bool)(TMP_198)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_198(bool) = tx.origin == owner_txorigin25
TMP_199(None) = SOLIDITY_CALL require(bool)(TMP_198)",
		node_source_code_lines="[353]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	276 -> 277	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[354]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	277 -> 278	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=_Yesbuzz,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[352, 353, 354, 355]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	279 -> 276	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=_Yesbuzz,
		function_fullname="getChallengeNumber()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[358, 359, 360]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	281	[contract_name=_Yesbuzz,
		function_fullname="getChallengeNumber()",
		label="Node Type: RETURN

EXPRESSION:
challengeNumber

IRs:
RETURN challengeNumber",
		node_expression=challengeNumber,
		node_info_vulnerabilities=None,
		node_irs="RETURN challengeNumber",
		node_source_code_lines="[359]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	280 -> 281	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=_Yesbuzz,
		function_fullname="getChallengeNumber()",
		label="buggy_18.sol__Yesbuzz_getChallengeNumber()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[358, 359, 360]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	282 -> 280	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[361, 362, 363, 364]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	284	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_201(bool) = tx.origin == owner_txorigin19
\
TMP_202(None) = SOLIDITY_CALL require(bool)(TMP_201)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_201(bool) = tx.origin == owner_txorigin19
TMP_202(None) = SOLIDITY_CALL require(bool)(TMP_201)",
		node_source_code_lines="[362]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	283 -> 284	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_73(None) -> to.call
REF_74(None) -> REF_73.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_73(None) -> to.call
REF_74(None) -> REF_73.value",
		node_source_code_lines="[363]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	284 -> 285	[key=0,
		edge_type=next,
		label=Next];
	286	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[361, 362, 363, 364]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	286 -> 283	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=_Yesbuzz,
		function_fullname="getMiningDifficulty()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[367, 368, 369]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	288	[contract_name=_Yesbuzz,
		function_fullname="getMiningDifficulty()",
		label="Node Type: RETURN

EXPRESSION:
_MAXIMUM_TARGET.div(miningTarget)

IRs:
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.div(uint256,uint256), arguments:['_MAXIMUM_TARGET', 'miningTarget'] 
RETURN TMP_204",
		node_expression="_MAXIMUM_TARGET.div(miningTarget)",
		node_info_vulnerabilities=None,
		node_irs="TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['_MAXIMUM_TARGET', 'miningTarget'] 
\
RETURN TMP_204",
		node_source_code_lines="[368]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	287 -> 288	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=_Yesbuzz,
		function_fullname="getMiningDifficulty()",
		label="buggy_18.sol__Yesbuzz_getMiningDifficulty()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[367, 368, 369]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	289 -> 287	[key=0,
		edge_type=next,
		label=Next];
	290	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[370, 371, 372, 373]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	291	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_205(bool) = tx.origin == owner_txorigin26
\
TMP_206(None) = SOLIDITY_CALL require(bool)(TMP_205)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_205(bool) = tx.origin == owner_txorigin26
TMP_206(None) = SOLIDITY_CALL require(bool)(TMP_205)",
		node_source_code_lines="[371]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	290 -> 291	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_207 = CONVERT this to address
REF_77 -> \
BALANCE TMP_207
Transfer dest:_recipient value:REF_77",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_207 = CONVERT this to address
REF_77 -> BALANCE TMP_207
Transfer dest:_recipient value:REF_77",
		node_source_code_lines="[372]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	291 -> 292	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[370, 371, 372, 373]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	293 -> 290	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=_Yesbuzz,
		function_fullname="getMiningTarget()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[375, 376, 377]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	295	[contract_name=_Yesbuzz,
		function_fullname="getMiningTarget()",
		label="Node Type: RETURN

EXPRESSION:
miningTarget

IRs:
RETURN miningTarget",
		node_expression=miningTarget,
		node_info_vulnerabilities=None,
		node_irs="RETURN miningTarget",
		node_source_code_lines="[376]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	294 -> 295	[key=0,
		edge_type=next,
		label=Next];
	296	[contract_name=_Yesbuzz,
		function_fullname="getMiningTarget()",
		label="buggy_18.sol__Yesbuzz_getMiningTarget()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[375, 376, 377]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	296 -> 294	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[378, 379, 380]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	298	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_209(bool) = tx.origin == owner_txorigin20
\
TMP_210(None) = SOLIDITY_CALL require(bool)(TMP_209)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_209(bool) = tx.origin == owner_txorigin20
TMP_210(None) = SOLIDITY_CALL require(bool)(TMP_209)",
		node_source_code_lines="[379]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	297 -> 298	[key=0,
		edge_type=next,
		label=Next];
	299	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin20(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[378, 379, 380]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	299 -> 297	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=_Yesbuzz,
		function_fullname="getMiningReward()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[384, 385, 386, 387, 388]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	301	[contract_name=_Yesbuzz,
		function_fullname="getMiningReward()",
		label="Node Type: RETURN

EXPRESSION:
(50 * 10 ** uint256(decimals)).div(2 ** rewardEra)

IRs:
TMP_211 = CONVERT decimals to uint256
TMP_\
212(uint256) = 10 ** TMP_211
TMP_213(uint256) = 50 * TMP_212
TMP_214(uint256) = 2 ** rewardEra
TMP_215(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_213', 'TMP_214'] 
RETURN TMP_215",
		node_expression="(50 * 10 ** uint256(decimals)).div(2 ** rewardEra)",
		node_info_vulnerabilities=None,
		node_irs="TMP_211 = CONVERT decimals to uint256
TMP_212(uint256) = 10 ** TMP_211
TMP_213(uint256) = 50 * TMP_212
TMP_214(uint256) = 2 ** rewardEra
\
TMP_215(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_213', 'TMP_214'] 
RETURN \
TMP_215",
		node_source_code_lines="[387]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	300 -> 301	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=_Yesbuzz,
		function_fullname="getMiningReward()",
		label="buggy_18.sol__Yesbuzz_getMiningReward()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[384, 385, 386, 387, 388]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	302 -> 300	[key=0,
		edge_type=next,
		label=Next];
	303	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[389, 390, 391]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	304	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_216(bool) = tx.origin == owner_txorigin32
\
TMP_217(None) = SOLIDITY_CALL require(bool)(TMP_216)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_216(bool) = tx.origin == owner_txorigin32
TMP_217(None) = SOLIDITY_CALL require(bool)(TMP_216)",
		node_source_code_lines="[390]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	303 -> 304	[key=0,
		edge_type=next,
		label=Next];
	305	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin32(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[389, 390, 391]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	305 -> 303	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=_Yesbuzz,
		function_fullname="getMintDigest(uint256,bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[394, 395, 396, 397]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	307	[contract_name=_Yesbuzz,
		function_fullname="getMintDigest(uint256,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
digest = keccak256(bytes)(abi.encodePacked(challenge_number,msg.sender,nonce))

IRs:
TMP_218(\
bytes) = SOLIDITY_CALL abi.encodePacked()(challenge_number,msg.sender,nonce)
TMP_219(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_\
218)
digest(bytes32) := TMP_219(bytes32)",
		node_expression="digest = keccak256(bytes)(abi.encodePacked(challenge_number,msg.sender,nonce))",
		node_info_vulnerabilities=None,
		node_irs="TMP_218(bytes) = SOLIDITY_CALL abi.encodePacked()(challenge_number,msg.sender,nonce)
TMP_219(bytes32) = SOLIDITY_CALL keccak256(\
bytes)(TMP_218)
digest(bytes32) := TMP_219(bytes32)",
		node_source_code_lines="[395]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	306 -> 307	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=_Yesbuzz,
		function_fullname="getMintDigest(uint256,bytes32)",
		label="Node Type: RETURN

EXPRESSION:
digest

IRs:
RETURN digest",
		node_expression=digest,
		node_info_vulnerabilities=None,
		node_irs="RETURN digest",
		node_source_code_lines="[396]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=_Yesbuzz,
		function_fullname="getMintDigest(uint256,bytes32)",
		label="buggy_18.sol__Yesbuzz_getMintDigest(uint256,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[394, 395, 396, 397]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	309 -> 306	[key=0,
		edge_type=next,
		label=Next];
	310	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[398, 399, 400, 401]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	311	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_220(bool) = tx.origin == owner_txorigin38
\
TMP_221(None) = SOLIDITY_CALL require(bool)(TMP_220)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_220(bool) = tx.origin == owner_txorigin38
TMP_221(None) = SOLIDITY_CALL require(bool)(TMP_220)",
		node_source_code_lines="[399]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	310 -> 311	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_222 = CONVERT this to address
REF_81 -> \
BALANCE TMP_222
Transfer dest:_recipient value:REF_81",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_222 = CONVERT this to address
REF_81 -> BALANCE TMP_222
Transfer dest:_recipient value:REF_81",
		node_source_code_lines="[400]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	311 -> 312	[key=0,
		edge_type=next,
		label=Next];
	313	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[398, 399, 400, 401]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	313 -> 310	[key=0,
		edge_type=next,
		label=Next];
	314	[contract_name=_Yesbuzz,
		function_fullname="checkMintSolution(uint256,bytes32,bytes32,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[404, 405, 406, 407, 408]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	315	[contract_name=_Yesbuzz,
		function_fullname="checkMintSolution(uint256,bytes32,bytes32,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
digest = keccak256(bytes)(abi.encodePacked(challenge_number,msg.sender,nonce))

IRs:
TMP_224(\
bytes) = SOLIDITY_CALL abi.encodePacked()(challenge_number,msg.sender,nonce)
TMP_225(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_\
224)
digest(bytes32) := TMP_225(bytes32)",
		node_expression="digest = keccak256(bytes)(abi.encodePacked(challenge_number,msg.sender,nonce))",
		node_info_vulnerabilities=None,
		node_irs="TMP_224(bytes) = SOLIDITY_CALL abi.encodePacked()(challenge_number,msg.sender,nonce)
TMP_225(bytes32) = SOLIDITY_CALL keccak256(\
bytes)(TMP_224)
digest(bytes32) := TMP_225(bytes32)",
		node_source_code_lines="[405]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=_Yesbuzz,
		function_fullname="checkMintSolution(uint256,bytes32,bytes32,uint256)",
		label="Node Type: IF

EXPRESSION:
uint256(digest) > testTarget

IRs:
TMP_226 = CONVERT digest to uint256
TMP_227(bool) = TMP_226 > testTarget
\
CONDITION TMP_227",
		node_expression="uint256(digest) > testTarget",
		node_info_vulnerabilities=None,
		node_irs="TMP_226 = CONVERT digest to uint256
TMP_227(bool) = TMP_226 > testTarget
CONDITION TMP_227",
		node_source_code_lines="[406]",
		node_type=IF,
		source_file="buggy_18.sol"];
	315 -> 316	[key=0,
		edge_type=next,
		label=Next];
	317	[contract_name=_Yesbuzz,
		function_fullname="checkMintSolution(uint256,bytes32,bytes32,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
revert()()

IRs:
TMP_228(None) = SOLIDITY_CALL revert()()",
		node_expression="revert()()",
		node_info_vulnerabilities=None,
		node_irs="TMP_228(None) = SOLIDITY_CALL revert()()",
		node_source_code_lines="[406]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	316 -> 317	[key=0,
		edge_type=if_true,
		label=True];
	318	[contract_name=_Yesbuzz,
		function_fullname="checkMintSolution(uint256,bytes32,bytes32,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[406]",
		node_type=END_IF,
		source_file="buggy_18.sol"];
	316 -> 318	[key=0,
		edge_type=if_false,
		label=False];
	317 -> 318	[key=0,
		edge_type=next,
		label=Next];
	319	[contract_name=_Yesbuzz,
		function_fullname="checkMintSolution(uint256,bytes32,bytes32,uint256)",
		label="Node Type: RETURN

EXPRESSION:
(digest == challenge_digest)

IRs:
TMP_229(bool) = digest == challenge_digest
RETURN TMP_229",
		node_expression="(digest == challenge_digest)",
		node_info_vulnerabilities=None,
		node_irs="TMP_229(bool) = digest == challenge_digest
RETURN TMP_229",
		node_source_code_lines="[407]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	318 -> 319	[key=0,
		edge_type=next,
		label=Next];
	320	[contract_name=_Yesbuzz,
		function_fullname="checkMintSolution(uint256,bytes32,bytes32,uint256)",
		label="buggy_18.sol__Yesbuzz_checkMintSolution(uint256,bytes32,bytes32,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[404, 405, 406, 407, 408]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	320 -> 314	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[409, 410, 411]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	322	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_230(bool) = tx.origin == owner_txorigin4
\
TMP_231(None) = SOLIDITY_CALL require(bool)(TMP_230)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_230(bool) = tx.origin == owner_txorigin4
TMP_231(None) = SOLIDITY_CALL require(bool)(TMP_230)",
		node_source_code_lines="[410]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	321 -> 322	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin4(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[409, 410, 411]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	323 -> 321	[key=0,
		edge_type=next,
		label=Next];
	324	[contract_name=_Yesbuzz,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[417, 418, 419]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	325	[contract_name=_Yesbuzz,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply - balances[address(0)]

IRs:
TMP_232 = CONVERT 0 to address
REF_83(uint256) -> balances[\
TMP_232]
TMP_233(uint256) = _totalSupply - REF_83
RETURN TMP_233",
		node_expression="_totalSupply - balances[address(0)]",
		node_info_vulnerabilities=None,
		node_irs="TMP_232 = CONVERT 0 to address
REF_83(uint256) -> balances[TMP_232]
TMP_233(uint256) = _totalSupply - REF_83
RETURN TMP_233",
		node_source_code_lines="[418]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	324 -> 325	[key=0,
		edge_type=next,
		label=Next];
	326	[contract_name=_Yesbuzz,
		function_fullname="totalSupply()",
		label="buggy_18.sol__Yesbuzz_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[417, 418, 419]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	326 -> 324	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[420, 421, 422, 423]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	328	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_234(bool) = tx.origin == owner_txorigin7
\
TMP_235(None) = SOLIDITY_CALL require(bool)(TMP_234)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_234(bool) = tx.origin == owner_txorigin7
TMP_235(None) = SOLIDITY_CALL require(bool)(TMP_234)",
		node_source_code_lines="[421]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	327 -> 328	[key=0,
		edge_type=next,
		label=Next];
	329	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_source_code_lines="[422]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	328 -> 329	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[420, 421, 422, 423]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	330 -> 327	[key=0,
		edge_type=next,
		label=Next];
	331	[contract_name=_Yesbuzz,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[429, 430, 431]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	332	[contract_name=_Yesbuzz,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
balances[tokenOwner]

IRs:
REF_86(uint256) -> balances[tokenOwner]
RETURN REF_86",
		node_expression="balances[tokenOwner]",
		node_info_vulnerabilities=None,
		node_irs="REF_86(uint256) -> balances[tokenOwner]
RETURN REF_86",
		node_source_code_lines="[430]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	331 -> 332	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=_Yesbuzz,
		function_fullname="balanceOf(address)",
		label="buggy_18.sol__Yesbuzz_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[429, 430, 431]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	333 -> 331	[key=0,
		edge_type=next,
		label=Next];
	334	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[432, 433, 434, 435]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	335	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_237(bool) = tx.origin == owner_txorigin23
\
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_237(bool) = tx.origin == owner_txorigin23
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_source_code_lines="[433]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	334 -> 335	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_87(None) -> to.call
REF_88(None) -> REF_87.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_87(None) -> to.call
REF_88(None) -> REF_87.value",
		node_source_code_lines="[434]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	335 -> 336	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[432, 433, 434, 435]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	337 -> 334	[key=0,
		edge_type=next,
		label=Next];
	338	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	339	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
toBurn = tokens.mul(burnPercent).div(1000)

IRs:
TMP_240(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.mul(uint256,uint256), arguments:['tokens', 'burnPercent'] 
TMP_241(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.div(uint256,uint256), arguments:['TMP_240', '1000'] 
toBurn(uint256) := TMP_241(uint256)",
		node_expression="toBurn = tokens.mul(burnPercent).div(1000)",
		node_info_vulnerabilities=None,
		node_irs="TMP_240(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['tokens', 'burnPercent'] 
TMP_\
241(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_240', '1000'] 
toBurn(uint256) := \
TMP_241(uint256)",
		node_source_code_lines="[445]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	338 -> 339	[key=0,
		edge_type=next,
		label=Next];
	340	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
toSend = tokens.sub(toBurn)

IRs:
TMP_242(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['tokens', 'toBurn'] 
toSend(uint256) := TMP_242(uint256)",
		node_expression="toSend = tokens.sub(toBurn)",
		node_info_vulnerabilities=None,
		node_irs="TMP_242(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['tokens', 'toBurn'] 
toSend(uint256) := \
TMP_242(uint256)",
		node_source_code_lines="[446]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	339 -> 340	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] = balances[msg.sender].sub(tokens)

IRs:
REF_92(uint256) -> balances[msg.sender]
\
REF_93(uint256) -> balances[msg.sender]
TMP_243(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['REF_93', 'tokens'] 
REF_92 (->balances) := TMP_243(uint256)",
		node_expression="balances[msg.sender] = balances[msg.sender].sub(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_92(uint256) -> balances[msg.sender]
REF_93(uint256) -> balances[msg.sender]
TMP_243(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_93', 'tokens'] 
REF_92 (->balances) := TMP_243(uint256)",
		node_source_code_lines="[448]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	340 -> 341	[key=0,
		edge_type=next,
		label=Next];
	342	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[to] = balances[to].add(toSend)

IRs:
REF_95(uint256) -> balances[to]
REF_96(uint256) \
-> balances[to]
TMP_244(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_96', 'toSend'] 
\
REF_95 (->balances) := TMP_244(uint256)",
		node_expression="balances[to] = balances[to].add(toSend)",
		node_info_vulnerabilities=None,
		node_irs="REF_95(uint256) -> balances[to]
REF_96(uint256) -> balances[to]
TMP_244(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_96', 'toSend'] 
REF_95 (->balances) := TMP_244(uint256)",
		node_source_code_lines="[450]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	341 -> 342	[key=0,
		edge_type=next,
		label=Next];
	343	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(msg.sender,to,toSend)

IRs:
Emit Transfer(msg.sender.to.toSend)",
		node_expression="Transfer(msg.sender,to,toSend)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(msg.sender.to.toSend)",
		node_source_code_lines="[451]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	342 -> 343	[key=0,
		edge_type=next,
		label=Next];
	344	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[address(0)] = balances[address(0)].add(toBurn)

IRs:
TMP_246 = CONVERT 0 to address
\
REF_98(uint256) -> balances[TMP_246]
TMP_247 = CONVERT 0 to address
REF_99(uint256) -> balances[TMP_247]
TMP_248(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_99', 'toBurn'] 
REF_98 (->balances) := TMP_248(uint256)",
		node_expression="balances[address(0)] = balances[address(0)].add(toBurn)",
		node_info_vulnerabilities=None,
		node_irs="TMP_246 = CONVERT 0 to address
REF_98(uint256) -> balances[TMP_246]
TMP_247 = CONVERT 0 to address
REF_99(uint256) -> balances[TMP_\
247]
TMP_248(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_99', 'toBurn'] 
REF_\
98 (->balances) := TMP_248(uint256)",
		node_source_code_lines="[453]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	343 -> 344	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(msg.sender,address(0),toBurn)

IRs:
TMP_249 = CONVERT 0 to address
Emit Transfer(msg.sender.TMP_\
249.toBurn)",
		node_expression="Transfer(msg.sender,address(0),toBurn)",
		node_info_vulnerabilities=None,
		node_irs="TMP_249 = CONVERT 0 to address
Emit Transfer(msg.sender.TMP_249.toBurn)",
		node_source_code_lines="[454]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	344 -> 345	[key=0,
		edge_type=next,
		label=Next];
	346	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[456]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	345 -> 346	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=_Yesbuzz,
		function_fullname="transfer(address,uint256)",
		label="buggy_18.sol__Yesbuzz_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	347 -> 338	[key=0,
		edge_type=next,
		label=Next];
	348	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[459, 460, 461, 462]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	349	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_251(bool) = tx.origin == owner_txorigin14
\
TMP_252(None) = SOLIDITY_CALL require(bool)(TMP_251)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_251(bool) = tx.origin == owner_txorigin14
TMP_252(None) = SOLIDITY_CALL require(bool)(TMP_251)",
		node_source_code_lines="[460]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	348 -> 349	[key=0,
		edge_type=next,
		label=Next];
	350	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_253 = CONVERT this to address
REF_102 -> \
BALANCE TMP_253
Transfer dest:_recipient value:REF_102",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_253 = CONVERT this to address
REF_102 -> BALANCE TMP_253
Transfer dest:_recipient value:REF_102",
		node_source_code_lines="[461]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	349 -> 350	[key=0,
		edge_type=next,
		label=Next];
	351	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[459, 460, 461, 462]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	351 -> 348	[key=0,
		edge_type=next,
		label=Next];
	352	[contract_name=_Yesbuzz,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[473, 474, 475, 476, 477]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	353	[contract_name=_Yesbuzz,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][spender] = tokens

IRs:
REF_103(mapping(address => uint256)) -> allowed[msg.sender]
\
REF_104(uint256) -> REF_103[spender]
REF_104 (->allowed) := tokens(uint256)",
		node_expression="allowed[msg.sender][spender] = tokens",
		node_info_vulnerabilities=None,
		node_irs="REF_103(mapping(address => uint256)) -> allowed[msg.sender]
REF_104(uint256) -> REF_103[spender]
REF_104 (->allowed) := tokens(uint256)",
		node_source_code_lines="[474]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	352 -> 353	[key=0,
		edge_type=next,
		label=Next];
	354	[contract_name=_Yesbuzz,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,spender,tokens)

IRs:
Emit Approval(msg.sender.spender.tokens)",
		node_expression="Approval(msg.sender,spender,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(msg.sender.spender.tokens)",
		node_source_code_lines="[475]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	353 -> 354	[key=0,
		edge_type=next,
		label=Next];
	355	[contract_name=_Yesbuzz,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[476]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	354 -> 355	[key=0,
		edge_type=next,
		label=Next];
	356	[contract_name=_Yesbuzz,
		function_fullname="approve(address,uint256)",
		label="buggy_18.sol__Yesbuzz_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[473, 474, 475, 476, 477]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	356 -> 352	[key=0,
		edge_type=next,
		label=Next];
	357	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[478, 479, 480, 481]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	358	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_256(bool) = tx.origin == owner_txorigin30
\
TMP_257(None) = SOLIDITY_CALL require(bool)(TMP_256)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_256(bool) = tx.origin == owner_txorigin30
TMP_257(None) = SOLIDITY_CALL require(bool)(TMP_256)",
		node_source_code_lines="[479]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	357 -> 358	[key=0,
		edge_type=next,
		label=Next];
	359	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_258 = CONVERT this to address
REF_106 -> \
BALANCE TMP_258
Transfer dest:_recipient value:REF_106",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_258 = CONVERT this to address
REF_106 -> BALANCE TMP_258
Transfer dest:_recipient value:REF_106",
		node_source_code_lines="[480]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	358 -> 359	[key=0,
		edge_type=next,
		label=Next];
	360	[contract_name=_Yesbuzz,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_18.sol__Yesbuzz_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[478, 479, 480, 481]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	360 -> 357	[key=0,
		edge_type=next,
		label=Next];
	361	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	362	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
toBurn = tokens.mul(burnPercent).div(1000)

IRs:
TMP_260(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.mul(uint256,uint256), arguments:['tokens', 'burnPercent'] 
TMP_261(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.div(uint256,uint256), arguments:['TMP_260', '1000'] 
toBurn(uint256) := TMP_261(uint256)",
		node_expression="toBurn = tokens.mul(burnPercent).div(1000)",
		node_info_vulnerabilities=None,
		node_irs="TMP_260(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['tokens', 'burnPercent'] 
TMP_\
261(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_260', '1000'] 
toBurn(uint256) := \
TMP_261(uint256)",
		node_source_code_lines="[494]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	361 -> 362	[key=0,
		edge_type=next,
		label=Next];
	363	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
toSend = tokens.sub(toBurn)

IRs:
TMP_262(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['tokens', 'toBurn'] 
toSend(uint256) := TMP_262(uint256)",
		node_expression="toSend = tokens.sub(toBurn)",
		node_info_vulnerabilities=None,
		node_irs="TMP_262(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['tokens', 'toBurn'] 
toSend(uint256) := \
TMP_262(uint256)",
		node_source_code_lines="[495]",
		node_type="NEW VARIABLE",
		source_file="buggy_18.sol"];
	362 -> 363	[key=0,
		edge_type=next,
		label=Next];
	364	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[from] = balances[from].sub(tokens)

IRs:
REF_110(uint256) -> balances[from]
REF_111(\
uint256) -> balances[from]
TMP_263(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_\
111', 'tokens'] 
REF_110 (->balances) := TMP_263(uint256)",
		node_expression="balances[from] = balances[from].sub(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_110(uint256) -> balances[from]
REF_111(uint256) -> balances[from]
TMP_263(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_111', 'tokens'] 
REF_110 (->balances) := TMP_263(uint256)",
		node_source_code_lines="[496]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	363 -> 364	[key=0,
		edge_type=next,
		label=Next];
	365	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens)

IRs:
REF_113(mapping(address => \
uint256)) -> allowed[from]
REF_114(uint256) -> REF_113[msg.sender]
REF_115(mapping(address => uint256)) -> allowed[from]
REF_116(\
uint256) -> REF_115[msg.sender]
TMP_264(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_116', 'tokens'] 
REF_114 (->allowed) := TMP_264(uint256)",
		node_expression="allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_113(mapping(address => uint256)) -> allowed[from]
REF_114(uint256) -> REF_113[msg.sender]
REF_115(mapping(address => uint256)) \
-> allowed[from]
REF_116(uint256) -> REF_115[msg.sender]
TMP_264(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,\
uint256), arguments:['REF_116', 'tokens'] 
REF_114 (->allowed) := TMP_264(uint256)",
		node_source_code_lines="[497]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	364 -> 365	[key=0,
		edge_type=next,
		label=Next];
	366	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[to] = balances[to].add(toSend)

IRs:
REF_118(uint256) -> balances[to]
REF_119(uint256) \
-> balances[to]
TMP_265(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_119', 'toSend'] 
\
REF_118 (->balances) := TMP_265(uint256)",
		node_expression="balances[to] = balances[to].add(toSend)",
		node_info_vulnerabilities=None,
		node_irs="REF_118(uint256) -> balances[to]
REF_119(uint256) -> balances[to]
TMP_265(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_119', 'toSend'] 
REF_118 (->balances) := TMP_265(uint256)",
		node_source_code_lines="[498]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	365 -> 366	[key=0,
		edge_type=next,
		label=Next];
	367	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,to,toSend)

IRs:
Emit Transfer(from.to.toSend)",
		node_expression="Transfer(from,to,toSend)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(from.to.toSend)",
		node_source_code_lines="[499]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	366 -> 367	[key=0,
		edge_type=next,
		label=Next];
	368	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[address(0)] = balances[address(0)].add(toBurn)

IRs:
TMP_267 = CONVERT 0 to address
\
REF_121(uint256) -> balances[TMP_267]
TMP_268 = CONVERT 0 to address
REF_122(uint256) -> balances[TMP_268]
TMP_269(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_122', 'toBurn'] 
REF_121 (->balances) := TMP_269(uint256)",
		node_expression="balances[address(0)] = balances[address(0)].add(toBurn)",
		node_info_vulnerabilities=None,
		node_irs="TMP_267 = CONVERT 0 to address
REF_121(uint256) -> balances[TMP_267]
TMP_268 = CONVERT 0 to address
REF_122(uint256) -> balances[\
TMP_268]
TMP_269(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_122', 'toBurn'] 
\
REF_121 (->balances) := TMP_269(uint256)",
		node_source_code_lines="[500]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	367 -> 368	[key=0,
		edge_type=next,
		label=Next];
	369	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,address(0),toBurn)

IRs:
TMP_270 = CONVERT 0 to address
Emit Transfer(from.TMP_\
270.toBurn)",
		node_expression="Transfer(from,address(0),toBurn)",
		node_info_vulnerabilities=None,
		node_irs="TMP_270 = CONVERT 0 to address
Emit Transfer(from.TMP_270.toBurn)",
		node_source_code_lines="[501]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	368 -> 369	[key=0,
		edge_type=next,
		label=Next];
	370	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[502]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	369 -> 370	[key=0,
		edge_type=next,
		label=Next];
	371	[contract_name=_Yesbuzz,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_18.sol__Yesbuzz_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	371 -> 361	[key=0,
		edge_type=next,
		label=Next];
	372	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[504, 505, 506]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	373	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_272(bool) = tx.origin == owner_txorigin8
\
TMP_273(None) = SOLIDITY_CALL require(bool)(TMP_272)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_272(bool) = tx.origin == owner_txorigin8
TMP_273(None) = SOLIDITY_CALL require(bool)(TMP_272)",
		node_source_code_lines="[505]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	372 -> 373	[key=0,
		edge_type=next,
		label=Next];
	374	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin8(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[504, 505, 506]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	374 -> 372	[key=0,
		edge_type=next,
		label=Next];
	375	[contract_name=_Yesbuzz,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[513, 514, 515]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	376	[contract_name=_Yesbuzz,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
allowed[tokenOwner][spender]

IRs:
REF_124(mapping(address => uint256)) -> allowed[tokenOwner]
REF_\
125(uint256) -> REF_124[spender]
RETURN REF_125",
		node_expression="allowed[tokenOwner][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_124(mapping(address => uint256)) -> allowed[tokenOwner]
REF_125(uint256) -> REF_124[spender]
RETURN REF_125",
		node_source_code_lines="[514]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	375 -> 376	[key=0,
		edge_type=next,
		label=Next];
	377	[contract_name=_Yesbuzz,
		function_fullname="allowance(address,address)",
		label="buggy_18.sol__Yesbuzz_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[513, 514, 515]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	377 -> 375	[key=0,
		edge_type=next,
		label=Next];
	378	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[516, 517, 518, 519]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	379	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_274(bool) = tx.origin == owner_txorigin39
\
TMP_275(None) = SOLIDITY_CALL require(bool)(TMP_274)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_274(bool) = tx.origin == owner_txorigin39
TMP_275(None) = SOLIDITY_CALL require(bool)(TMP_274)",
		node_source_code_lines="[517]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	378 -> 379	[key=0,
		edge_type=next,
		label=Next];
	380	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_126(None) -> to.call
REF_127(None) -> REF_126.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_126(None) -> to.call
REF_127(None) -> REF_126.value",
		node_source_code_lines="[518]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	379 -> 380	[key=0,
		edge_type=next,
		label=Next];
	381	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[516, 517, 518, 519]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	381 -> 378	[key=0,
		edge_type=next,
		label=Next];
	382	[contract_name=_Yesbuzz,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[527, 528, 529, 530, 531, 532]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	383	[contract_name=_Yesbuzz,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][spender] = tokens

IRs:
REF_128(mapping(address => uint256)) -> allowed[msg.sender]
\
REF_129(uint256) -> REF_128[spender]
REF_129 (->allowed) := tokens(uint256)",
		node_expression="allowed[msg.sender][spender] = tokens",
		node_info_vulnerabilities=None,
		node_irs="REF_128(mapping(address => uint256)) -> allowed[msg.sender]
REF_129(uint256) -> REF_128[spender]
REF_129 (->allowed) := tokens(uint256)",
		node_source_code_lines="[528]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	382 -> 383	[key=0,
		edge_type=next,
		label=Next];
	384	[contract_name=_Yesbuzz,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,spender,tokens)

IRs:
Emit Approval(msg.sender.spender.tokens)",
		node_expression="Approval(msg.sender,spender,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(msg.sender.spender.tokens)",
		node_source_code_lines="[529]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	383 -> 384	[key=0,
		edge_type=next,
		label=Next];
	385	[contract_name=_Yesbuzz,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ApproveAndCallFallBack(spender).receiveApproval(msg.sender,tokens,address(this),data)

IRs:
TMP_\
278 = CONVERT spender to ApproveAndCallFallBack
TMP_279 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_278(ApproveAndCallFallBack), \
function:receiveApproval, arguments:['msg.sender', 'tokens', 'TMP_279', 'data']  ",
		node_expression="ApproveAndCallFallBack(spender).receiveApproval(msg.sender,tokens,address(this),data)",
		node_info_vulnerabilities=None,
		node_irs="TMP_278 = CONVERT spender to ApproveAndCallFallBack
TMP_279 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_278(ApproveAndCallFallBack), \
function:receiveApproval, arguments:['msg.sender', 'tokens', 'TMP_279', 'data']  ",
		node_source_code_lines="[530]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	384 -> 385	[key=0,
		edge_type=next,
		label=Next];
	386	[contract_name=_Yesbuzz,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[531]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	385 -> 386	[key=0,
		edge_type=next,
		label=Next];
	387	[contract_name=_Yesbuzz,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="buggy_18.sol__Yesbuzz_approveAndCall(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[527, 528, 529, 530, 531, 532]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	387 -> 382	[key=0,
		edge_type=next,
		label=Next];
	388	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[533, 534, 535]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	389	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_281(bool) = tx.origin == owner_txorigin36
\
TMP_282(None) = SOLIDITY_CALL require(bool)(TMP_281)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_281(bool) = tx.origin == owner_txorigin36
TMP_282(None) = SOLIDITY_CALL require(bool)(TMP_281)",
		node_source_code_lines="[534]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	388 -> 389	[key=0,
		edge_type=next,
		label=Next];
	390	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin36(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[533, 534, 535]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	390 -> 388	[key=0,
		edge_type=next,
		label=Next];
	391	[contract_name=_Yesbuzz,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[541, 542, 543]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	392	[contract_name=_Yesbuzz,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
revert()()

IRs:
TMP_283(None) = SOLIDITY_CALL revert()()",
		node_expression="revert()()",
		node_info_vulnerabilities=None,
		node_irs="TMP_283(None) = SOLIDITY_CALL revert()()",
		node_source_code_lines="[542]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	391 -> 392	[key=0,
		edge_type=next,
		label=Next];
	393	[contract_name=_Yesbuzz,
		function_fullname="fallback()",
		label="buggy_18.sol__Yesbuzz_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[541, 542, 543]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	393 -> 391	[key=0,
		edge_type=next,
		label=Next];
	394	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[544, 545, 546, 547]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	395	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_284(bool) = tx.origin == owner_txorigin35
\
TMP_285(None) = SOLIDITY_CALL require(bool)(TMP_284)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_284(bool) = tx.origin == owner_txorigin35
TMP_285(None) = SOLIDITY_CALL require(bool)(TMP_284)",
		node_source_code_lines="[545]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	394 -> 395	[key=0,
		edge_type=next,
		label=Next];
	396	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_131(None) -> to.call
REF_132(None) -> REF_131.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="REF_131(None) -> to.call
REF_132(None) -> REF_131.value",
		node_source_code_lines="[546]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	395 -> 396	[key=0,
		edge_type=next,
		label=Next];
	397	[contract_name=_Yesbuzz,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_18.sol__Yesbuzz_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[544, 545, 546, 547]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	397 -> 394	[key=0,
		edge_type=next,
		label=Next];
	398	[contract_name=_Yesbuzz,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[553, 554, 555]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	400	[contract_name=_Yesbuzz,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[553]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	398 -> 400	[key=0,
		edge_type=next,
		label=Next];
	399	[contract_name=_Yesbuzz,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
ERC20Interface(tokenAddress).transfer(owner,tokens)

IRs:
TMP_287 = CONVERT tokenAddress to ERC20Interface
\
TMP_288(bool) = HIGH_LEVEL_CALL, dest:TMP_287(ERC20Interface), function:transfer, arguments:['owner', 'tokens']  
RETURN TMP_288",
		node_expression="ERC20Interface(tokenAddress).transfer(owner,tokens)",
		node_info_vulnerabilities=None,
		node_irs="TMP_287 = CONVERT tokenAddress to ERC20Interface
TMP_288(bool) = HIGH_LEVEL_CALL, dest:TMP_287(ERC20Interface), function:transfer, \
arguments:['owner', 'tokens']  
RETURN TMP_288",
		node_source_code_lines="[554]",
		node_type=RETURN,
		source_file="buggy_18.sol"];
	400 -> 399	[key=0,
		edge_type=next,
		label=Next];
	401	[contract_name=_Yesbuzz,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="buggy_18.sol__Yesbuzz_transferAnyERC20Token(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[553, 554, 555]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	401 -> 398	[key=0,
		edge_type=next,
		label=Next];
	402	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[556, 557, 558]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	403	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_290(bool) = tx.origin == owner_txorigin40
\
TMP_291(None) = SOLIDITY_CALL require(bool)(TMP_290)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs="TMP_290(bool) = tx.origin == owner_txorigin40
TMP_291(None) = SOLIDITY_CALL require(bool)(TMP_290)",
		node_source_code_lines="[557]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	402 -> 403	[key=0,
		edge_type=next,
		label=Next];
	404	[contract_name=_Yesbuzz,
		function_fullname="bug_txorigin40(address)",
		label="buggy_18.sol__Yesbuzz_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[556, 557, 558]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	404 -> 402	[key=0,
		edge_type=next,
		label=Next];
	405	[contract_name=_Yesbuzz,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
_BLOCKS_PER_READJUSTMENT = 1024

IRs:
_BLOCKS_PER_READJUSTMENT(uint256) := 1024(uint256)",
		node_expression="_BLOCKS_PER_READJUSTMENT = 1024",
		node_info_vulnerabilities=None,
		node_irs="_BLOCKS_PER_READJUSTMENT(uint256) := 1024(uint256)",
		node_source_code_lines="[183]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_18.sol"];
	406	[contract_name=_Yesbuzz,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
_MINIMUM_TARGET = 2 ** 16

IRs:
TMP_292(uint256) = 2 ** 16
_MINIMUM_TARGET(uint256) := \
TMP_292(uint256)",
		node_expression="_MINIMUM_TARGET = 2 ** 16",
		node_info_vulnerabilities=None,
		node_irs="TMP_292(uint256) = 2 ** 16
_MINIMUM_TARGET(uint256) := TMP_292(uint256)",
		node_source_code_lines="[186]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_18.sol"];
	405 -> 406	[key=0,
		edge_type=next,
		label=Next];
	407	[contract_name=_Yesbuzz,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
_MAXIMUM_TARGET = 2 ** 234

IRs:
TMP_293(uint256) = 2 ** 234
_MAXIMUM_TARGET(uint256) := \
TMP_293(uint256)",
		node_expression="_MAXIMUM_TARGET = 2 ** 234",
		node_info_vulnerabilities=None,
		node_irs="TMP_293(uint256) = 2 ** 234
_MAXIMUM_TARGET(uint256) := TMP_293(uint256)",
		node_source_code_lines="[190]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_18.sol"];
	406 -> 407	[key=0,
		edge_type=next,
		label=Next];
	408	[contract_name=_Yesbuzz,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
locked = false

IRs:
locked(bool) := False(bool)",
		node_expression="locked = false",
		node_info_vulnerabilities=None,
		node_irs="locked(bool) := False(bool)",
		node_source_code_lines="[206]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_18.sol"];
	407 -> 408	[key=0,
		edge_type=next,
		label=Next];
	409	[contract_name=_Yesbuzz,
		function_fullname="slitherConstructorVariables()",
		label="buggy_18.sol__Yesbuzz_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 89, 90, 91, 94, 95, 96, \
97, 111, 112, 113, 114, 127, 128, 129, 130, 136, 137, 138, 139, 149, 150, 151, 152, 160, 161, 162, 163, 197, 198, 199, 200, 202, \
203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 223, 224, 225, 226, 231, 232, 233, 234, 262, \
263, 264, 265, 291, 292, 293, 294, 316, 317, 318, 319, 352, 353, 354, 355, 361, 362, 363, 364, 370, 371, 372, 373, 378, 379, 380, \
389, 390, 391, 398, 399, 400, 401, 409, 410, 411, 420, 421, 422, 423, 432, 433, 434, 435, 459, 460, 461, 462, 478, 479, 480, 481, \
504, 505, 506, 516, 517, 518, 519, 533, 534, 535, 544, 545, 546, 547, 556, 557, 558], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, \
198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, \
224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, \
250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, \
276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, \
302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, \
328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, \
354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, \
380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, \
406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, \
432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, \
458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, \
484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, \
510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, \
536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	409 -> 405	[key=0,
		edge_type=next,
		label=Next];
	410	[contract_name=_Yesbuzz,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143, 144]",
		node_type=ENTRY_POINT,
		source_file="buggy_18.sol"];
	411	[contract_name=_Yesbuzz,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_294(bool) = msg.sender == owner
TMP_295(None) = \
SOLIDITY_CALL require(bool)(TMP_294)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_294(bool) = msg.sender == owner
TMP_295(None) = SOLIDITY_CALL require(bool)(TMP_294)",
		node_source_code_lines="[142]",
		node_type=EXPRESSION,
		source_file="buggy_18.sol"];
	410 -> 411	[key=0,
		edge_type=next,
		label=Next];
	412	[contract_name=_Yesbuzz,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[143]",
		node_type=_,
		source_file="buggy_18.sol"];
	411 -> 412	[key=0,
		edge_type=next,
		label=Next];
	413	[contract_name=_Yesbuzz,
		function_fullname="onlyOwner()",
		label="buggy_18.sol__Yesbuzz_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143, 144]",
		node_type=FUNCTION_NAME,
		source_file="buggy_18.sol"];
	413 -> 410	[key=0,
		edge_type=next,
		label=Next];
}
