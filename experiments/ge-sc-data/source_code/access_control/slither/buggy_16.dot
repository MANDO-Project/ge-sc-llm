digraph "" {
	node [label="\N"];
	0	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19, 20, 21, 22]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	1	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a * b

IRs:
TMP_0(uint256) = a * b
c(uint256) := TMP_0(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(uint256) = a * b
c(uint256) := TMP_0(uint256)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(a == 0 || c / a == b)

IRs:
TMP_1(bool) = a == 0
TMP_2(uint256) = c / a
TMP_3(bool) = \
TMP_2 == b
TMP_4(bool) = TMP_1 || TMP_3
TMP_5(None) = SOLIDITY_CALL require(bool)(TMP_4)",
		node_expression="require(bool)(a == 0 || c / a == b)",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(bool) = a == 0
TMP_2(uint256) = c / a
TMP_3(bool) = TMP_2 == b
TMP_4(bool) = TMP_1 || TMP_3
TMP_5(None) = SOLIDITY_CALL require(\
bool)(TMP_4)",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_16.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19, 20, 21, 22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	3 -> 0	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29, 30]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	5	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b > 0)

IRs:
TMP_6(bool) = b > 0
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_\
6)",
		node_expression="require(bool)(b > 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(bool) = b > 0
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_6)",
		node_source_code_lines="[28]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	4 -> 5	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a / b

IRs:
TMP_8(uint256) = a / b
c(uint256) := TMP_8(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_8(uint256) = a / b
c(uint256) := TMP_8(uint256)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_16.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29, 30]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	7 -> 4	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	9	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b <= a)

IRs:
TMP_9(bool) = b <= a
TMP_10(None) = SOLIDITY_CALL require(bool)(TMP_\
9)",
		node_expression="require(bool)(b <= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_9(bool) = b <= a
TMP_10(None) = SOLIDITY_CALL require(bool)(TMP_9)",
		node_source_code_lines="[36]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	8 -> 9	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a - b

IRs:
TMP_11(uint256) = a - b
c(uint256) := TMP_11(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_11(uint256) = a - b
c(uint256) := TMP_11(uint256)",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	9 -> 10	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_16.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	11 -> 8	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45, 46]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	13	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a + b

IRs:
TMP_12(uint256) = a + b
c(uint256) := TMP_12(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(uint256) = a + b
c(uint256) := TMP_12(uint256)",
		node_source_code_lines="[44]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	12 -> 13	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(c >= a)

IRs:
TMP_13(bool) = c >= a
TMP_14(None) = SOLIDITY_CALL require(bool)(\
TMP_13)",
		node_expression="require(bool)(c >= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_13(bool) = c >= a
TMP_14(None) = SOLIDITY_CALL require(bool)(TMP_13)",
		node_source_code_lines="[45]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	13 -> 14	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_16.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45, 46]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	15 -> 12	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=ERC20Interface,
		function_fullname="totalSupply()",
		label="buggy_16.sol_ERC20Interface_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	17	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[52, 53, 54]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	18	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin28)

IRs:
TMP_15(bool) = tx.origin == owner_txorigin28
\
TMP_16(None) = SOLIDITY_CALL require(bool)(TMP_15)",
		node_expression="require(bool)(tx.origin == owner_txorigin28)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_15(bool) = tx.origin == owner_txorigin28
TMP_16(None) = SOLIDITY_CALL require(bool)(TMP_15)",
		node_source_code_lines="[53]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	17 -> 18	[key=0,
		edge_type=next,
		label=Next];
	19	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin28(address)",
		label="buggy_16.sol_ERC20Interface_bug_txorigin28(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[52, 53, 54]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	19 -> 17	[key=0,
		edge_type=next,
		label=Next];
	20	[contract_name=ERC20Interface,
		function_fullname="balanceOf(address)",
		label="buggy_16.sol_ERC20Interface_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[55]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	21	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	22	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_17(bool) = tx.origin == owner_txorigin34
\
TMP_18(None) = SOLIDITY_CALL require(bool)(TMP_17)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_17(bool) = tx.origin == owner_txorigin34
TMP_18(None) = SOLIDITY_CALL require(bool)(TMP_17)",
		node_source_code_lines="[57]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	21 -> 22	[key=0,
		edge_type=next,
		label=Next];
	23	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_19 = CONVERT this to address
REF_1 -> BALANCE \
TMP_19
Transfer dest:_recipient value:REF_1",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_19 = CONVERT this to address
REF_1 -> BALANCE TMP_19
Transfer dest:_recipient value:REF_1",
		node_source_code_lines="[58]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	22 -> 23	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_16.sol_ERC20Interface_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	24 -> 21	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=ERC20Interface,
		function_fullname="allowance(address,address)",
		label="buggy_16.sol_ERC20Interface_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[60]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	26	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	27	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_21(bool) = tx.origin == owner_txorigin21
\
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_21(bool) = tx.origin == owner_txorigin21
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	26 -> 27	[key=0,
		edge_type=next,
		label=Next];
	28	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[63]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_16.sol_ERC20Interface_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	29 -> 26	[key=0,
		edge_type=next,
		label=Next];
	30	[contract_name=ERC20Interface,
		function_fullname="transfer(address,uint256)",
		label="buggy_16.sol_ERC20Interface_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[65]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	31	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	32	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_24(bool) = tx.origin == owner_txorigin10
\
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_24(bool) = tx.origin == owner_txorigin10
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_source_code_lines="[67]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	31 -> 32	[key=0,
		edge_type=next,
		label=Next];
	33	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_26 = CONVERT this to address
REF_4 -> BALANCE \
TMP_26
Transfer dest:_recipient value:REF_4",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_26 = CONVERT this to address
REF_4 -> BALANCE TMP_26
Transfer dest:_recipient value:REF_4",
		node_source_code_lines="[68]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	32 -> 33	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_16.sol_ERC20Interface_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	34 -> 31	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=ERC20Interface,
		function_fullname="approve(address,uint256)",
		label="buggy_16.sol_ERC20Interface_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[70]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	36	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[71, 72, 73, 74]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	37	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_28(bool) = tx.origin == owner_txorigin22
\
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_28(bool) = tx.origin == owner_txorigin22
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_source_code_lines="[72]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	36 -> 37	[key=0,
		edge_type=next,
		label=Next];
	38	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_30 = CONVERT this to address
REF_6 -> BALANCE \
TMP_30
Transfer dest:_recipient value:REF_6",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_30 = CONVERT this to address
REF_6 -> BALANCE TMP_30
Transfer dest:_recipient value:REF_6",
		node_source_code_lines="[73]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	37 -> 38	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_16.sol_ERC20Interface_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[71, 72, 73, 74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	39 -> 36	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=ERC20Interface,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_16.sol_ERC20Interface_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[75]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	41	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[76, 77, 78]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	42	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_32(bool) = tx.origin == owner_txorigin12
\
TMP_33(None) = SOLIDITY_CALL require(bool)(TMP_32)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_32(bool) = tx.origin == owner_txorigin12
TMP_33(None) = SOLIDITY_CALL require(bool)(TMP_32)",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	41 -> 42	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin12(address)",
		label="buggy_16.sol_ERC20Interface_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[76, 77, 78]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	43 -> 41	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	45	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_34(bool) = tx.origin == owner_txorigin35
\
TMP_35(None) = SOLIDITY_CALL require(bool)(TMP_34)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_34(bool) = tx.origin == owner_txorigin35
TMP_35(None) = SOLIDITY_CALL require(bool)(TMP_34)",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	44 -> 45	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_7(None) -> to.call
REF_8(None) -> REF_7.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_7(None) -> to.call
REF_8(None) -> REF_7.value",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	45 -> 46	[key=0,
		edge_type=next,
		label=Next];
	47	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_16.sol_ERC20Interface_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	47 -> 44	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	49	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_37(bool) = tx.origin == owner_txorigin40
\
TMP_38(None) = SOLIDITY_CALL require(bool)(TMP_37)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_37(bool) = tx.origin == owner_txorigin40
TMP_38(None) = SOLIDITY_CALL require(bool)(TMP_37)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	48 -> 49	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=ERC20Interface,
		function_fullname="bug_txorigin40(address)",
		label="buggy_16.sol_ERC20Interface_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	50 -> 48	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=Owned,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[94, 95, 96, 97]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	52	[contract_name=Owned,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_39(bool) = tx.origin == owner_txorigin33
\
TMP_40(None) = SOLIDITY_CALL require(bool)(TMP_39)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_39(bool) = tx.origin == owner_txorigin33
TMP_40(None) = SOLIDITY_CALL require(bool)(TMP_39)",
		node_source_code_lines="[95]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=Owned,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	52 -> 53	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=Owned,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_16.sol_Owned_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[94, 95, 96, 97]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	54 -> 51	[key=0,
		edge_type=next,
		label=Next];
	55	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[104, 105, 106]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	56	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[105]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=Owned,
		function_fullname="constructor()",
		label="buggy_16.sol_Owned_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[104, 105, 106]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	57 -> 55	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=Owned,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	59	[contract_name=Owned,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_42(bool) = tx.origin == owner_txorigin11
\
TMP_43(None) = SOLIDITY_CALL require(bool)(TMP_42)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_42(bool) = tx.origin == owner_txorigin11
TMP_43(None) = SOLIDITY_CALL require(bool)(TMP_42)",
		node_source_code_lines="[108]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	58 -> 59	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=Owned,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_source_code_lines="[109]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	59 -> 60	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=Owned,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_16.sol_Owned_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	61 -> 58	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[124, 125, 126, 127, 128]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	66	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[124]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	62 -> 66	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(newOwner != address(0))

IRs:
TMP_45 = CONVERT 0 to address
TMP_46(bool) = newOwner != \
TMP_45
TMP_47(None) = SOLIDITY_CALL require(bool)(TMP_46)",
		node_expression="require(bool)(newOwner != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_45 = CONVERT 0 to address
TMP_46(bool) = newOwner != TMP_45
TMP_47(None) = SOLIDITY_CALL require(bool)(TMP_46)",
		node_source_code_lines="[125]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	64	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnershipTransferred(owner,newOwner)

IRs:
Emit OwnershipTransferred(owner.newOwner)",
		node_expression="OwnershipTransferred(owner,newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnershipTransferred(owner.newOwner)",
		node_source_code_lines="[126]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	63 -> 64	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	64 -> 65	[key=0,
		edge_type=next,
		label=Next];
	66 -> 63	[key=0,
		edge_type=next,
		label=Next];
	67	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="buggy_16.sol_Owned_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[124, 125, 126, 127, 128]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	67 -> 62	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=Owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	69	[contract_name=Owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_50(bool) = tx.origin == owner_txorigin1
\
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_50(bool) = tx.origin == owner_txorigin1
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_source_code_lines="[130]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	68 -> 69	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=Owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[131]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	69 -> 70	[key=0,
		edge_type=next,
		label=Next];
	71	[contract_name=Owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_16.sol_Owned_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	71 -> 68	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[115, 116, 117, 118]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	73	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_53(bool) = msg.sender == owner
TMP_54(None) = SOLIDITY_\
CALL require(bool)(TMP_53)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_53(bool) = msg.sender == owner
TMP_54(None) = SOLIDITY_CALL require(bool)(TMP_53)",
		node_source_code_lines="[116]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	72 -> 73	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[117]",
		node_type=_,
		source_file="buggy_16.sol"];
	73 -> 74	[key=0,
		edge_type=next,
		label=Next];
	75	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="buggy_16.sol_Owned_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[115, 116, 117, 118]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	75 -> 72	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[94, 95, 96, 97]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	77	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_55(bool) = tx.origin == owner_txorigin33
\
TMP_56(None) = SOLIDITY_CALL require(bool)(TMP_55)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_55(bool) = tx.origin == owner_txorigin33
TMP_56(None) = SOLIDITY_CALL require(bool)(TMP_55)",
		node_source_code_lines="[95]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	76 -> 77	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	77 -> 78	[key=0,
		edge_type=next,
		label=Next];
	79	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[94, 95, 96, 97]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	79 -> 76	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=ExclusivePlatform,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[104, 105, 106]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	81	[contract_name=ExclusivePlatform,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[105]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	80 -> 81	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=ExclusivePlatform,
		function_fullname="constructor()",
		label="buggy_16.sol_ExclusivePlatform_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[104, 105, 106]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	82 -> 80	[key=0,
		edge_type=next,
		label=Next];
	83	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	84	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_58(bool) = tx.origin == owner_txorigin11
\
TMP_59(None) = SOLIDITY_CALL require(bool)(TMP_58)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_58(bool) = tx.origin == owner_txorigin11
TMP_59(None) = SOLIDITY_CALL require(bool)(TMP_58)",
		node_source_code_lines="[108]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	83 -> 84	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_14(None) -> to.call
REF_15(None) -> REF_14.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_14(None) -> to.call
REF_15(None) -> REF_14.value",
		node_source_code_lines="[109]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	84 -> 85	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	86 -> 83	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=ExclusivePlatform,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[124, 125, 126, 127, 128]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	91	[contract_name=ExclusivePlatform,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[124]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	87 -> 91	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=ExclusivePlatform,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(newOwner != address(0))

IRs:
TMP_61 = CONVERT 0 to address
TMP_62(bool) = newOwner != \
TMP_61
TMP_63(None) = SOLIDITY_CALL require(bool)(TMP_62)",
		node_expression="require(bool)(newOwner != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_61 = CONVERT 0 to address
TMP_62(bool) = newOwner != TMP_61
TMP_63(None) = SOLIDITY_CALL require(bool)(TMP_62)",
		node_source_code_lines="[125]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	89	[contract_name=ExclusivePlatform,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnershipTransferred(owner,newOwner)

IRs:
Emit OwnershipTransferred(owner.newOwner)",
		node_expression="OwnershipTransferred(owner,newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnershipTransferred(owner.newOwner)",
		node_source_code_lines="[126]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	88 -> 89	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=ExclusivePlatform,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	89 -> 90	[key=0,
		edge_type=next,
		label=Next];
	91 -> 88	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=ExclusivePlatform,
		function_fullname="transferOwnership(address)",
		label="buggy_16.sol_ExclusivePlatform_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[124, 125, 126, 127, 128]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	92 -> 87	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	94	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_66(bool) = tx.origin == owner_txorigin1
\
TMP_67(None) = SOLIDITY_CALL require(bool)(TMP_66)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_66(bool) = tx.origin == owner_txorigin1
TMP_67(None) = SOLIDITY_CALL require(bool)(TMP_66)",
		node_source_code_lines="[130]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	93 -> 94	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[131]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	94 -> 95	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	96 -> 93	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=ExclusivePlatform,
		function_fullname="totalSupply()",
		label="buggy_16.sol_ExclusivePlatform_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	98	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[52, 53, 54]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	99	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin28)

IRs:
TMP_69(bool) = tx.origin == owner_txorigin28
\
TMP_70(None) = SOLIDITY_CALL require(bool)(TMP_69)",
		node_expression="require(bool)(tx.origin == owner_txorigin28)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_69(bool) = tx.origin == owner_txorigin28
TMP_70(None) = SOLIDITY_CALL require(bool)(TMP_69)",
		node_source_code_lines="[53]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	98 -> 99	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin28(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin28(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[52, 53, 54]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	100 -> 98	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=ExclusivePlatform,
		function_fullname="balanceOf(address)",
		label="buggy_16.sol_ExclusivePlatform_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[55]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	102	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	103	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_71(bool) = tx.origin == owner_txorigin34
\
TMP_72(None) = SOLIDITY_CALL require(bool)(TMP_71)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_71(bool) = tx.origin == owner_txorigin34
TMP_72(None) = SOLIDITY_CALL require(bool)(TMP_71)",
		node_source_code_lines="[57]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_73 = CONVERT this to address
REF_18 -> BALANCE \
TMP_73
Transfer dest:_recipient value:REF_18",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_73 = CONVERT this to address
REF_18 -> BALANCE TMP_73
Transfer dest:_recipient value:REF_18",
		node_source_code_lines="[58]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	105 -> 102	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=ExclusivePlatform,
		function_fullname="allowance(address,address)",
		label="buggy_16.sol_ExclusivePlatform_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[60]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	107	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	108	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_75(bool) = tx.origin == owner_txorigin21
\
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_75(bool) = tx.origin == owner_txorigin21
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	107 -> 108	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[63]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	108 -> 109	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	110 -> 107	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=ExclusivePlatform,
		function_fullname="transfer(address,uint256)",
		label="buggy_16.sol_ExclusivePlatform_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[65]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	112	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	113	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_78(bool) = tx.origin == owner_txorigin10
\
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_78(bool) = tx.origin == owner_txorigin10
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_source_code_lines="[67]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_80 = CONVERT this to address
REF_21 -> BALANCE \
TMP_80
Transfer dest:_recipient value:REF_21",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_80 = CONVERT this to address
REF_21 -> BALANCE TMP_80
Transfer dest:_recipient value:REF_21",
		node_source_code_lines="[68]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	115 -> 112	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=ExclusivePlatform,
		function_fullname="approve(address,uint256)",
		label="buggy_16.sol_ExclusivePlatform_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[70]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	117	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[71, 72, 73, 74]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	118	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_82(bool) = tx.origin == owner_txorigin22
\
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_82(bool) = tx.origin == owner_txorigin22
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_source_code_lines="[72]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	117 -> 118	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_84 = CONVERT this to address
REF_23 -> BALANCE \
TMP_84
Transfer dest:_recipient value:REF_23",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_84 = CONVERT this to address
REF_23 -> BALANCE TMP_84
Transfer dest:_recipient value:REF_23",
		node_source_code_lines="[73]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	118 -> 119	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[71, 72, 73, 74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	120 -> 117	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=ExclusivePlatform,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_16.sol_ExclusivePlatform_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[75]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	122	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[76, 77, 78]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	123	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_86(bool) = tx.origin == owner_txorigin12
\
TMP_87(None) = SOLIDITY_CALL require(bool)(TMP_86)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_86(bool) = tx.origin == owner_txorigin12
TMP_87(None) = SOLIDITY_CALL require(bool)(TMP_86)",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	122 -> 123	[key=0,
		edge_type=next,
		label=Next];
	124	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin12(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[76, 77, 78]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	124 -> 122	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	126	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_88(bool) = tx.origin == owner_txorigin35
\
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_88(bool) = tx.origin == owner_txorigin35
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	125 -> 126	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_24(None) -> to.call
REF_25(None) -> REF_24.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_24(None) -> to.call
REF_25(None) -> REF_24.value",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	128 -> 125	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	130	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_91(bool) = tx.origin == owner_txorigin40
\
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_91(bool) = tx.origin == owner_txorigin40
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	129 -> 130	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin40(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	131 -> 129	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[141, 142, 143, 144]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	133	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin18)

IRs:
TMP_93(bool) = tx.origin == owner_txorigin18
\
TMP_94(None) = SOLIDITY_CALL require(bool)(TMP_93)",
		node_expression="require(bool)(tx.origin == owner_txorigin18)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_93(bool) = tx.origin == owner_txorigin18
TMP_94(None) = SOLIDITY_CALL require(bool)(TMP_93)",
		node_source_code_lines="[142]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	132 -> 133	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_95 = CONVERT this to address
REF_27 -> BALANCE \
TMP_95
Transfer dest:_recipient value:REF_27",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_95 = CONVERT this to address
REF_27 -> BALANCE TMP_95
Transfer dest:_recipient value:REF_27",
		node_source_code_lines="[143]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	133 -> 134	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin18(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[141, 142, 143, 144]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	135 -> 132	[key=0,
		edge_type=next,
		label=Next];
	136	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[147, 148, 149, 150]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	137	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin29)

IRs:
TMP_97(bool) = tx.origin == owner_txorigin29
\
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)",
		node_expression="require(bool)(tx.origin == owner_txorigin29)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_97(bool) = tx.origin == owner_txorigin29
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)",
		node_source_code_lines="[148]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[149]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin29(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[147, 148, 149, 150]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	139 -> 136	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[152, 153, 154, 155]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	141	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin6)

IRs:
TMP_100(bool) = tx.origin == owner_txorigin6
\
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)",
		node_expression="require(bool)(tx.origin == owner_txorigin6)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_100(bool) = tx.origin == owner_txorigin6
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)",
		node_source_code_lines="[153]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_102 = CONVERT this to address
REF_30 -> \
BALANCE TMP_102
Transfer dest:_recipient value:REF_30",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_102 = CONVERT this to address
REF_30 -> BALANCE TMP_102
Transfer dest:_recipient value:REF_30",
		node_source_code_lines="[154]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	141 -> 142	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin6(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[152, 153, 154, 155]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	143 -> 140	[key=0,
		edge_type=next,
		label=Next];
	144	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	145	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin16)

IRs:
TMP_104(bool) = tx.origin == owner_txorigin16
\
TMP_105(None) = SOLIDITY_CALL require(bool)(TMP_104)",
		node_expression="require(bool)(tx.origin == owner_txorigin16)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_104(bool) = tx.origin == owner_txorigin16
TMP_105(None) = SOLIDITY_CALL require(bool)(TMP_104)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	144 -> 145	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin16(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin16(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	146 -> 144	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[161, 162, 163]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	148	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin24)

IRs:
TMP_106(bool) = tx.origin == owner_txorigin24
\
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_expression="require(bool)(tx.origin == owner_txorigin24)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_106(bool) = tx.origin == owner_txorigin24
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	147 -> 148	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin24(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin24(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[161, 162, 163]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	149 -> 147	[key=0,
		edge_type=next,
		label=Next];
	150	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[166, 167, 168, 169]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	151	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin5)

IRs:
TMP_108(bool) = tx.origin == owner_txorigin5
\
TMP_109(None) = SOLIDITY_CALL require(bool)(TMP_108)",
		node_expression="require(bool)(tx.origin == owner_txorigin5)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_108(bool) = tx.origin == owner_txorigin5
TMP_109(None) = SOLIDITY_CALL require(bool)(TMP_108)",
		node_source_code_lines="[167]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	150 -> 151	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[168]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	151 -> 152	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin5(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[166, 167, 168, 169]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	153 -> 150	[key=0,
		edge_type=next,
		label=Next];
	154	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[172, 173, 174, 175]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	155	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin15)

IRs:
TMP_111(bool) = tx.origin == owner_txorigin15
\
TMP_112(None) = SOLIDITY_CALL require(bool)(TMP_111)",
		node_expression="require(bool)(tx.origin == owner_txorigin15)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_111(bool) = tx.origin == owner_txorigin15
TMP_112(None) = SOLIDITY_CALL require(bool)(TMP_111)",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_32(None) -> to.call
REF_33(None) -> REF_32.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_32(None) -> to.call
REF_33(None) -> REF_32.value",
		node_source_code_lines="[174]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	155 -> 156	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin15(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[172, 173, 174, 175]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	157 -> 154	[key=0,
		edge_type=next,
		label=Next];
	158	[contract_name=ExclusivePlatform,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[185, 186, 187, 188, 189]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	159	[contract_name=ExclusivePlatform,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = 10000000000e8

IRs:
_totalSupply(uint256) := 1000000000000000000(uint256)",
		node_expression="_totalSupply = 10000000000e8",
		node_info_vulnerabilities=None,
		node_irs="_totalSupply(uint256) := 1000000000000000000(uint256)",
		node_source_code_lines="[186]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	158 -> 159	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=ExclusivePlatform,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[owner] = _totalSupply

IRs:
REF_34(uint256) -> balances[owner]
REF_34 (->balances) := _\
totalSupply(uint256)",
		node_expression="balances[owner] = _totalSupply",
		node_info_vulnerabilities=None,
		node_irs="REF_34(uint256) -> balances[owner]
REF_34 (->balances) := _totalSupply(uint256)",
		node_source_code_lines="[187]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=ExclusivePlatform,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),owner,_totalSupply)

IRs:
TMP_114 = CONVERT 0 to address
Emit Transfer(TMP_\
114.owner._totalSupply)",
		node_expression="Transfer(address(0),owner,_totalSupply)",
		node_info_vulnerabilities=None,
		node_irs="TMP_114 = CONVERT 0 to address
Emit Transfer(TMP_114.owner._totalSupply)",
		node_source_code_lines="[188]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	160 -> 161	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=ExclusivePlatform,
		function_fullname="constructor()",
		label="buggy_16.sol_ExclusivePlatform_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[185, 186, 187, 188, 189]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	162 -> 158	[key=0,
		edge_type=next,
		label=Next];
	163	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[190, 191, 192, 193]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	164	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_116(bool) = tx.origin == owner_txorigin2
\
TMP_117(None) = SOLIDITY_CALL require(bool)(TMP_116)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_116(bool) = tx.origin == owner_txorigin2
TMP_117(None) = SOLIDITY_CALL require(bool)(TMP_116)",
		node_source_code_lines="[191]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_118 = CONVERT this to address
REF_36 -> \
BALANCE TMP_118
Transfer dest:_recipient value:REF_36",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_118 = CONVERT this to address
REF_36 -> BALANCE TMP_118
Transfer dest:_recipient value:REF_36",
		node_source_code_lines="[192]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	164 -> 165	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[190, 191, 192, 193]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	166 -> 163	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=ExclusivePlatform,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[195, 196, 197]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	168	[contract_name=ExclusivePlatform,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply

IRs:
RETURN _totalSupply",
		node_expression=_totalSupply,
		node_info_vulnerabilities=None,
		node_irs="RETURN _totalSupply",
		node_source_code_lines="[196]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	167 -> 168	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=ExclusivePlatform,
		function_fullname="totalSupply()",
		label="buggy_16.sol_ExclusivePlatform_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[195, 196, 197]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	169 -> 167	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[198, 199, 200, 201]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	171	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_120(bool) = tx.origin == owner_txorigin17
\
TMP_121(None) = SOLIDITY_CALL require(bool)(TMP_120)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_120(bool) = tx.origin == owner_txorigin17
TMP_121(None) = SOLIDITY_CALL require(bool)(TMP_120)",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	170 -> 171	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[200]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	171 -> 172	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[198, 199, 200, 201]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	173 -> 170	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=ExclusivePlatform,
		function_fullname="updateXPLPerEther(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[203, 204, 205, 206]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	177	[contract_name=ExclusivePlatform,
		function_fullname="updateXPLPerEther(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	174 -> 177	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=ExclusivePlatform,
		function_fullname="updateXPLPerEther(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
NewPrice(owner,XPLPerEther,_XPLPerEther)

IRs:
Emit NewPrice(owner.XPLPerEther._XPLPerEther)",
		node_expression="NewPrice(owner,XPLPerEther,_XPLPerEther)",
		node_info_vulnerabilities=None,
		node_irs="Emit NewPrice(owner.XPLPerEther._XPLPerEther)",
		node_source_code_lines="[204]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	176	[contract_name=ExclusivePlatform,
		function_fullname="updateXPLPerEther(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
XPLPerEther = _XPLPerEther

IRs:
XPLPerEther(uint256) := _XPLPerEther(uint256)",
		node_expression="XPLPerEther = _XPLPerEther",
		node_info_vulnerabilities=None,
		node_irs="XPLPerEther(uint256) := _XPLPerEther(uint256)",
		node_source_code_lines="[205]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	175 -> 176	[key=0,
		edge_type=next,
		label=Next];
	177 -> 175	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=ExclusivePlatform,
		function_fullname="updateXPLPerEther(uint256)",
		label="buggy_16.sol_ExclusivePlatform_updateXPLPerEther(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[203, 204, 205, 206]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	178 -> 174	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[207, 208, 209, 210]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	180	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_125(bool) = tx.origin == owner_txorigin37
\
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_125(bool) = tx.origin == owner_txorigin37
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_source_code_lines="[208]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	179 -> 180	[key=0,
		edge_type=next,
		label=Next];
	181	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[209]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	180 -> 181	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[207, 208, 209, 210]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	182 -> 179	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=ExclusivePlatform,
		function_fullname="switchCrowdsale()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[212, 213, 214]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	185	[contract_name=ExclusivePlatform,
		function_fullname="switchCrowdsale()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[212]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	183 -> 185	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=ExclusivePlatform,
		function_fullname="switchCrowdsale()",
		label="Node Type: EXPRESSION

EXPRESSION:
crowdsaleIsOn = ! (crowdsaleIsOn)

IRs:
TMP_128 = ! crowdsaleIsOn 
crowdsaleIsOn(bool) := TMP_\
128(bool)",
		node_expression="crowdsaleIsOn = ! (crowdsaleIsOn)",
		node_info_vulnerabilities=None,
		node_irs="TMP_128 = ! crowdsaleIsOn 
crowdsaleIsOn(bool) := TMP_128(bool)",
		node_source_code_lines="[213]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	185 -> 184	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=ExclusivePlatform,
		function_fullname="switchCrowdsale()",
		label="buggy_16.sol_ExclusivePlatform_switchCrowdsale()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[212, 213, 214]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	186 -> 183	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[215, 216, 217, 218]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	188	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_130(bool) = tx.origin == owner_txorigin3
\
TMP_131(None) = SOLIDITY_CALL require(bool)(TMP_130)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_130(bool) = tx.origin == owner_txorigin3
TMP_131(None) = SOLIDITY_CALL require(bool)(TMP_130)",
		node_source_code_lines="[216]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	187 -> 188	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_39(None) -> to.call
REF_40(None) -> REF_39.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_39(None) -> to.call
REF_40(None) -> REF_39.value",
		node_source_code_lines="[217]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	188 -> 189	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[215, 216, 217, 218]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	190 -> 187	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=ExclusivePlatform,
		function_fullname="getBonus(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	192	[contract_name=ExclusivePlatform,
		function_fullname="getBonus(uint256)",
		label="Node Type: IF

EXPRESSION:
_amount >= XPLPerEther.mul(5)

IRs:
TMP_133(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(\
uint256,uint256), arguments:['XPLPerEther', '5'] 
TMP_134(bool) = _amount >= TMP_133
CONDITION TMP_134",
		node_expression="_amount >= XPLPerEther.mul(5)",
		node_info_vulnerabilities=None,
		node_irs="TMP_133(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['XPLPerEther', '5'] 
TMP_134(\
bool) = _amount >= TMP_133
CONDITION TMP_134",
		node_source_code_lines="[221]",
		node_type=IF,
		source_file="buggy_16.sol"];
	191 -> 192	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=ExclusivePlatform,
		function_fullname="getBonus(uint256)",
		label="Node Type: RETURN

EXPRESSION:
((20 * _amount).div(100)).add(_amount)

IRs:
TMP_135(uint256) = 20 * _amount
TMP_136(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_135', '100'] 
TMP_137(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_136', '_amount'] 
RETURN TMP_137",
		node_expression="((20 * _amount).div(100)).add(_amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_135(uint256) = 20 * _amount
TMP_136(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['\
TMP_135', '100'] 
TMP_137(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_136', '_\
amount'] 
RETURN TMP_137",
		node_source_code_lines="[225]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	192 -> 193	[key=0,
		edge_type=if_true,
		label=True];
	194	[contract_name=ExclusivePlatform,
		function_fullname="getBonus(uint256)",
		label="Node Type: IF

EXPRESSION:
_amount >= XPLPerEther

IRs:
TMP_138(bool) = _amount >= XPLPerEther
CONDITION TMP_138",
		node_expression="_amount >= XPLPerEther",
		node_info_vulnerabilities=None,
		node_irs="TMP_138(bool) = _amount >= XPLPerEther
CONDITION TMP_138",
		node_source_code_lines="[226]",
		node_type=IF,
		source_file="buggy_16.sol"];
	192 -> 194	[key=0,
		edge_type=if_false,
		label=False];
	195	[contract_name=ExclusivePlatform,
		function_fullname="getBonus(uint256)",
		label="Node Type: RETURN

EXPRESSION:
((5 * _amount).div(100)).add(_amount)

IRs:
TMP_139(uint256) = 5 * _amount
TMP_140(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_139', '100'] 
TMP_141(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_140', '_amount'] 
RETURN TMP_141",
		node_expression="((5 * _amount).div(100)).add(_amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_139(uint256) = 5 * _amount
TMP_140(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['\
TMP_139', '100'] 
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_140', '_\
amount'] 
RETURN TMP_141",
		node_source_code_lines="[230]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	194 -> 195	[key=0,
		edge_type=if_true,
		label=True];
	196	[contract_name=ExclusivePlatform,
		function_fullname="getBonus(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[226, 227, 228, 229, 230, 231]",
		node_type=END_IF,
		source_file="buggy_16.sol"];
	194 -> 196	[key=0,
		edge_type=if_false,
		label=False];
	197	[contract_name=ExclusivePlatform,
		function_fullname="getBonus(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231]",
		node_type=END_IF,
		source_file="buggy_16.sol"];
	196 -> 197	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=ExclusivePlatform,
		function_fullname="getBonus(uint256)",
		label="Node Type: RETURN

EXPRESSION:
_amount

IRs:
RETURN _amount",
		node_expression=_amount,
		node_info_vulnerabilities=None,
		node_irs="RETURN _amount",
		node_source_code_lines="[232]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=ExclusivePlatform,
		function_fullname="getBonus(uint256)",
		label="buggy_16.sol_ExclusivePlatform_getBonus(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	199 -> 191	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	201	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_142(bool) = tx.origin == owner_txorigin9
\
TMP_143(None) = SOLIDITY_CALL require(bool)(TMP_142)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_142(bool) = tx.origin == owner_txorigin9
TMP_143(None) = SOLIDITY_CALL require(bool)(TMP_142)",
		node_source_code_lines="[235]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	200 -> 201	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[236]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	201 -> 202	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	203 -> 200	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=ExclusivePlatform,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[239, 240, 241, 242, 243, 244, 245, 246]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	205	[contract_name=ExclusivePlatform,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(crowdsaleIsOn && msg.value >= minimumBuy)

IRs:
TMP_145(bool) = msg.value >= minimumBuy
\
TMP_146(bool) = crowdsaleIsOn && TMP_145
TMP_147(None) = SOLIDITY_CALL require(bool)(TMP_146)",
		node_expression="require(bool)(crowdsaleIsOn && msg.value >= minimumBuy)",
		node_info_vulnerabilities=None,
		node_irs="TMP_145(bool) = msg.value >= minimumBuy
TMP_146(bool) = crowdsaleIsOn && TMP_145
TMP_147(None) = SOLIDITY_CALL require(bool)(TMP_\
146)",
		node_source_code_lines="[240]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	204 -> 205	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=ExclusivePlatform,
		function_fullname="fallback()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
totalBuy = (XPLPerEther.mul(msg.value)).div(1000000000000000000)

IRs:
TMP_148(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['XPLPerEther', 'msg.value'] 
TMP_149(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_148', '1000000000000000000'] 
totalBuy(uint256) := \
TMP_149(uint256)",
		node_expression="totalBuy = (XPLPerEther.mul(msg.value)).div(1000000000000000000)",
		node_info_vulnerabilities=None,
		node_irs="TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['XPLPerEther', 'msg.value'] 
\
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_148', '1000000000000000000'] 
\
totalBuy(uint256) := TMP_149(uint256)",
		node_source_code_lines="[242]",
		node_type="NEW VARIABLE",
		source_file="buggy_16.sol"];
	205 -> 206	[key=0,
		edge_type=next,
		label=Next];
	207	[contract_name=ExclusivePlatform,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
totalBuy = getBonus(totalBuy)

IRs:
TMP_150(uint256) = INTERNAL_CALL, ExclusivePlatform.getBonus(\
uint256)(totalBuy)
totalBuy(uint256) := TMP_150(uint256)",
		node_expression="totalBuy = getBonus(totalBuy)",
		node_info_vulnerabilities=None,
		node_irs="TMP_150(uint256) = INTERNAL_CALL, ExclusivePlatform.getBonus(uint256)(totalBuy)
totalBuy(uint256) := TMP_150(uint256)",
		node_source_code_lines="[243]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=ExclusivePlatform,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
doTransfer(owner,msg.sender,totalBuy)

IRs:
INTERNAL_CALL, ExclusivePlatform.doTransfer(address,\
address,uint256)(owner,msg.sender,totalBuy)",
		node_expression="doTransfer(owner,msg.sender,totalBuy)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ExclusivePlatform.doTransfer(address,address,uint256)(owner,msg.sender,totalBuy)",
		node_source_code_lines="[245]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	207 -> 208	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=ExclusivePlatform,
		function_fullname="fallback()",
		label="buggy_16.sol_ExclusivePlatform_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[239, 240, 241, 242, 243, 244, 245, 246]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	209 -> 204	[key=0,
		edge_type=next,
		label=Next];
	210	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	211	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_152(bool) = tx.origin == owner_txorigin25
\
TMP_153(None) = SOLIDITY_CALL require(bool)(TMP_152)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_152(bool) = tx.origin == owner_txorigin25
TMP_153(None) = SOLIDITY_CALL require(bool)(TMP_152)",
		node_source_code_lines="[248]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	210 -> 211	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[249]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	211 -> 212	[key=0,
		edge_type=next,
		label=Next];
	213	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	213 -> 210	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=ExclusivePlatform,
		function_fullname="distribute(address[],uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[252, 253, 254]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	217	[contract_name=ExclusivePlatform,
		function_fullname="distribute(address[],uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 0(uint256)",
		node_source_code_lines="[253]",
		node_type="NEW VARIABLE",
		source_file="buggy_16.sol"];
	214 -> 217	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=ExclusivePlatform,
		function_fullname="distribute(address[],uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[253]",
		node_type=BEGIN_LOOP,
		source_file="buggy_16.sol"];
	218	[contract_name=ExclusivePlatform,
		function_fullname="distribute(address[],uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < _addresses.length

IRs:
REF_50 -> LENGTH _addresses
TMP_155(bool) = i < REF_50
CONDITION TMP_\
155",
		node_expression="i < _addresses.length",
		node_info_vulnerabilities=None,
		node_irs="REF_50 -> LENGTH _addresses
TMP_155(bool) = i < REF_50
CONDITION TMP_155",
		node_source_code_lines="[253]",
		node_type=IF_LOOP,
		source_file="buggy_16.sol"];
	215 -> 218	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=ExclusivePlatform,
		function_fullname="distribute(address[],uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[253]",
		node_type=END_LOOP,
		source_file="buggy_16.sol"];
	217 -> 215	[key=0,
		edge_type=next,
		label=Next];
	218 -> 216	[key=0,
		edge_type=if_false,
		label=False];
	219	[contract_name=ExclusivePlatform,
		function_fullname="distribute(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
transfer(_addresses[i],_amount)

IRs:
REF_51(address) -> _addresses[i]
TMP_156(bool) = INTERNAL_\
CALL, ExclusivePlatform.transfer(address,uint256)(REF_51,_amount)",
		node_expression="transfer(_addresses[i],_amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_51(address) -> _addresses[i]
TMP_156(bool) = INTERNAL_CALL, ExclusivePlatform.transfer(address,uint256)(REF_51,_amount)",
		node_source_code_lines="[253]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	218 -> 219	[key=0,
		edge_type=if_true,
		label=True];
	220	[contract_name=ExclusivePlatform,
		function_fullname="distribute(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_157(uint256) := i(uint256)
i(uint256) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_157(uint256) := i(uint256)
i(uint256) = i + 1",
		node_source_code_lines="[253]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	219 -> 220	[key=0,
		edge_type=next,
		label=Next];
	220 -> 218	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=ExclusivePlatform,
		function_fullname="distribute(address[],uint256)",
		label="buggy_16.sol_ExclusivePlatform_distribute(address[],uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[252, 253, 254]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	221 -> 214	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[255, 256, 257, 258]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	223	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_158(bool) = tx.origin == owner_txorigin19
\
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_158(bool) = tx.origin == owner_txorigin19
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_source_code_lines="[256]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	222 -> 223	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_52(None) -> to.call
REF_53(None) -> REF_52.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_52(None) -> to.call
REF_53(None) -> REF_52.value",
		node_source_code_lines="[257]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	223 -> 224	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[255, 256, 257, 258]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	225 -> 222	[key=0,
		edge_type=next,
		label=Next];
	226	[contract_name=ExclusivePlatform,
		function_fullname="distributeWithAmount(address[],uint256[])",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[260, 261, 262, 263]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	227	[contract_name=ExclusivePlatform,
		function_fullname="distributeWithAmount(address[],uint256[])",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_addresses.length == _amounts.length)

IRs:
REF_54 -> LENGTH _addresses
REF_55 \
-> LENGTH _amounts
TMP_161(bool) = REF_54 == REF_55
TMP_162(None) = SOLIDITY_CALL require(bool)(TMP_161)",
		node_expression="require(bool)(_addresses.length == _amounts.length)",
		node_info_vulnerabilities=None,
		node_irs="REF_54 -> LENGTH _addresses
REF_55 -> LENGTH _amounts
TMP_161(bool) = REF_54 == REF_55
TMP_162(None) = SOLIDITY_CALL require(bool)(\
TMP_161)",
		node_source_code_lines="[261]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	226 -> 227	[key=0,
		edge_type=next,
		label=Next];
	230	[contract_name=ExclusivePlatform,
		function_fullname="distributeWithAmount(address[],uint256[])",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 0(uint256)",
		node_source_code_lines="[262]",
		node_type="NEW VARIABLE",
		source_file="buggy_16.sol"];
	227 -> 230	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=ExclusivePlatform,
		function_fullname="distributeWithAmount(address[],uint256[])",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[262]",
		node_type=BEGIN_LOOP,
		source_file="buggy_16.sol"];
	231	[contract_name=ExclusivePlatform,
		function_fullname="distributeWithAmount(address[],uint256[])",
		label="Node Type: IF_LOOP

EXPRESSION:
i < _addresses.length

IRs:
REF_56 -> LENGTH _addresses
TMP_163(bool) = i < REF_56
CONDITION TMP_\
163",
		node_expression="i < _addresses.length",
		node_info_vulnerabilities=None,
		node_irs="REF_56 -> LENGTH _addresses
TMP_163(bool) = i < REF_56
CONDITION TMP_163",
		node_source_code_lines="[262]",
		node_type=IF_LOOP,
		source_file="buggy_16.sol"];
	228 -> 231	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=ExclusivePlatform,
		function_fullname="distributeWithAmount(address[],uint256[])",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[262]",
		node_type=END_LOOP,
		source_file="buggy_16.sol"];
	230 -> 228	[key=0,
		edge_type=next,
		label=Next];
	231 -> 229	[key=0,
		edge_type=if_false,
		label=False];
	232	[contract_name=ExclusivePlatform,
		function_fullname="distributeWithAmount(address[],uint256[])",
		label="Node Type: EXPRESSION

EXPRESSION:
transfer(_addresses[i],_amounts[i])

IRs:
REF_57(address) -> _addresses[i]
REF_58(uint256) -> _\
amounts[i]
TMP_164(bool) = INTERNAL_CALL, ExclusivePlatform.transfer(address,uint256)(REF_57,REF_58)",
		node_expression="transfer(_addresses[i],_amounts[i])",
		node_info_vulnerabilities=None,
		node_irs="REF_57(address) -> _addresses[i]
REF_58(uint256) -> _amounts[i]
TMP_164(bool) = INTERNAL_CALL, ExclusivePlatform.transfer(address,\
uint256)(REF_57,REF_58)",
		node_source_code_lines="[262]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	231 -> 232	[key=0,
		edge_type=if_true,
		label=True];
	233	[contract_name=ExclusivePlatform,
		function_fullname="distributeWithAmount(address[],uint256[])",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_165(uint256) := i(uint256)
i(uint256) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_165(uint256) := i(uint256)
i(uint256) = i + 1",
		node_source_code_lines="[262]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	232 -> 233	[key=0,
		edge_type=next,
		label=Next];
	233 -> 231	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=ExclusivePlatform,
		function_fullname="distributeWithAmount(address[],uint256[])",
		label="buggy_16.sol_ExclusivePlatform_distributeWithAmount(address[],uint256[])",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[260, 261, 262, 263]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	234 -> 226	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[264, 265, 266, 267]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	236	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_166(bool) = tx.origin == owner_txorigin26
\
TMP_167(None) = SOLIDITY_CALL require(bool)(TMP_166)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_166(bool) = tx.origin == owner_txorigin26
TMP_167(None) = SOLIDITY_CALL require(bool)(TMP_166)",
		node_source_code_lines="[265]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	235 -> 236	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_168 = CONVERT this to address
REF_60 -> \
BALANCE TMP_168
Transfer dest:_recipient value:REF_60",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_168 = CONVERT this to address
REF_60 -> BALANCE TMP_168
Transfer dest:_recipient value:REF_60",
		node_source_code_lines="[266]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	236 -> 237	[key=0,
		edge_type=next,
		label=Next];
	238	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[264, 265, 266, 267]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	238 -> 235	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=ExclusivePlatform,
		function_fullname="doTransfer(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277, 278, 279, 280, 281]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	240	[contract_name=ExclusivePlatform,
		function_fullname="doTransfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)((_to != address(0)))

IRs:
TMP_170 = CONVERT 0 to address
TMP_171(bool) = _to != \
TMP_170
TMP_172(None) = SOLIDITY_CALL require(bool)(TMP_171)",
		node_expression="require(bool)((_to != address(0)))",
		node_info_vulnerabilities=None,
		node_irs="TMP_170 = CONVERT 0 to address
TMP_171(bool) = _to != TMP_170
TMP_172(None) = SOLIDITY_CALL require(bool)(TMP_171)",
		node_source_code_lines="[276]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	239 -> 240	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=ExclusivePlatform,
		function_fullname="doTransfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_amount <= balances[_from])

IRs:
REF_61(uint256) -> balances[_from]
TMP_173(bool) = _\
amount <= REF_61
TMP_174(None) = SOLIDITY_CALL require(bool)(TMP_173)",
		node_expression="require(bool)(_amount <= balances[_from])",
		node_info_vulnerabilities=None,
		node_irs="REF_61(uint256) -> balances[_from]
TMP_173(bool) = _amount <= REF_61
TMP_174(None) = SOLIDITY_CALL require(bool)(TMP_173)",
		node_source_code_lines="[277]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	240 -> 241	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=ExclusivePlatform,
		function_fullname="doTransfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[_from] = balances[_from].sub(_amount)

IRs:
REF_62(uint256) -> balances[_from]
REF_63(\
uint256) -> balances[_from]
TMP_175(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_63', '_amount'] 
REF_62 (->balances) := TMP_175(uint256)",
		node_expression="balances[_from] = balances[_from].sub(_amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_62(uint256) -> balances[_from]
REF_63(uint256) -> balances[_from]
TMP_175(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_63', '_amount'] 
REF_62 (->balances) := TMP_175(uint256)",
		node_source_code_lines="[278]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=ExclusivePlatform,
		function_fullname="doTransfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[_to] = balances[_to].add(_amount)

IRs:
REF_65(uint256) -> balances[_to]
REF_66(uint256) \
-> balances[_to]
TMP_176(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_66', '_\
amount'] 
REF_65 (->balances) := TMP_176(uint256)",
		node_expression="balances[_to] = balances[_to].add(_amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_65(uint256) -> balances[_to]
REF_66(uint256) -> balances[_to]
TMP_176(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_66', '_amount'] 
REF_65 (->balances) := TMP_176(uint256)",
		node_source_code_lines="[279]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	242 -> 243	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=ExclusivePlatform,
		function_fullname="doTransfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(_from,_to,_amount)

IRs:
Emit Transfer(_from._to._amount)",
		node_expression="Transfer(_from,_to,_amount)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(_from._to._amount)",
		node_source_code_lines="[280]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	243 -> 244	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=ExclusivePlatform,
		function_fullname="doTransfer(address,address,uint256)",
		label="buggy_16.sol_ExclusivePlatform_doTransfer(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277, 278, 279, 280, 281]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	245 -> 239	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[282, 283, 284]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	247	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_178(bool) = tx.origin == owner_txorigin20
\
TMP_179(None) = SOLIDITY_CALL require(bool)(TMP_178)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_178(bool) = tx.origin == owner_txorigin20
TMP_179(None) = SOLIDITY_CALL require(bool)(TMP_178)",
		node_source_code_lines="[283]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	246 -> 247	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin20(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[282, 283, 284]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	248 -> 246	[key=0,
		edge_type=next,
		label=Next];
	249	[contract_name=ExclusivePlatform,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	250	[contract_name=ExclusivePlatform,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
balances[_owner]

IRs:
REF_68(uint256) -> balances[_owner]
RETURN REF_68",
		node_expression="balances[_owner]",
		node_info_vulnerabilities=None,
		node_irs="REF_68(uint256) -> balances[_owner]
RETURN REF_68",
		node_source_code_lines="[287]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	249 -> 250	[key=0,
		edge_type=next,
		label=Next];
	251	[contract_name=ExclusivePlatform,
		function_fullname="balanceOf(address)",
		label="buggy_16.sol_ExclusivePlatform_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	251 -> 249	[key=0,
		edge_type=next,
		label=Next];
	252	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[289, 290, 291]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	253	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_180(bool) = tx.origin == owner_txorigin32
\
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_180(bool) = tx.origin == owner_txorigin32
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_source_code_lines="[290]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin32(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[289, 290, 291]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	254 -> 252	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=ExclusivePlatform,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	258	[contract_name=ExclusivePlatform,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyPayloadSize(2 * 32)

IRs:
TMP_183(uint256) = 2 * 32
MODIFIER_CALL, ExclusivePlatform.onlyPayloadSize(\
uint256)(TMP_183)",
		node_expression="onlyPayloadSize(2 * 32)",
		node_info_vulnerabilities=None,
		node_irs="TMP_183(uint256) = 2 * 32
MODIFIER_CALL, ExclusivePlatform.onlyPayloadSize(uint256)(TMP_183)",
		node_source_code_lines="[293]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	255 -> 258	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=ExclusivePlatform,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
doTransfer(msg.sender,_to,_amount)

IRs:
INTERNAL_CALL, ExclusivePlatform.doTransfer(address,\
address,uint256)(msg.sender,_to,_amount)",
		node_expression="doTransfer(msg.sender,_to,_amount)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ExclusivePlatform.doTransfer(address,address,uint256)(msg.sender,_to,_amount)",
		node_source_code_lines="[294]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	257	[contract_name=ExclusivePlatform,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[295]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258 -> 256	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=ExclusivePlatform,
		function_fullname="transfer(address,uint256)",
		label="buggy_16.sol_ExclusivePlatform_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	259 -> 255	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	261	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_185(bool) = tx.origin == owner_txorigin38
\
TMP_186(None) = SOLIDITY_CALL require(bool)(TMP_185)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_185(bool) = tx.origin == owner_txorigin38
TMP_186(None) = SOLIDITY_CALL require(bool)(TMP_185)",
		node_source_code_lines="[298]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_187 = CONVERT this to address
REF_70 -> \
BALANCE TMP_187
Transfer dest:_recipient value:REF_70",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_187 = CONVERT this to address
REF_70 -> BALANCE TMP_187
Transfer dest:_recipient value:REF_70",
		node_source_code_lines="[299]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	263 -> 260	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=ExclusivePlatform,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304, 305, 306, 307]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	269	[contract_name=ExclusivePlatform,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyPayloadSize(3 * 32)

IRs:
TMP_193(uint256) = 3 * 32
MODIFIER_CALL, ExclusivePlatform.onlyPayloadSize(\
uint256)(TMP_193)",
		node_expression="onlyPayloadSize(3 * 32)",
		node_info_vulnerabilities=None,
		node_irs="TMP_193(uint256) = 3 * 32
MODIFIER_CALL, ExclusivePlatform.onlyPayloadSize(uint256)(TMP_193)",
		node_source_code_lines="[302]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	264 -> 269	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=ExclusivePlatform,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(allowed[_from][msg.sender] >= _amount)

IRs:
REF_71(mapping(address => uint256)) \
-> allowed[_from]
REF_72(uint256) -> REF_71[msg.sender]
TMP_189(bool) = REF_72 >= _amount
TMP_190(None) = SOLIDITY_CALL require(\
bool)(TMP_189)",
		node_expression="require(bool)(allowed[_from][msg.sender] >= _amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_71(mapping(address => uint256)) -> allowed[_from]
REF_72(uint256) -> REF_71[msg.sender]
TMP_189(bool) = REF_72 >= _amount
TMP_\
190(None) = SOLIDITY_CALL require(bool)(TMP_189)",
		node_source_code_lines="[303]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	266	[contract_name=ExclusivePlatform,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount)

IRs:
REF_73(mapping(address => \
uint256)) -> allowed[_from]
REF_74(uint256) -> REF_73[msg.sender]
REF_75(mapping(address => uint256)) -> allowed[_from]
REF_76(uint256) \
-> REF_75[msg.sender]
TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_76', '_\
amount'] 
REF_74 (->allowed) := TMP_191(uint256)",
		node_expression="allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_73(mapping(address => uint256)) -> allowed[_from]
REF_74(uint256) -> REF_73[msg.sender]
REF_75(mapping(address => uint256)) \
-> allowed[_from]
REF_76(uint256) -> REF_75[msg.sender]
TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,\
uint256), arguments:['REF_76', '_amount'] 
REF_74 (->allowed) := TMP_191(uint256)",
		node_source_code_lines="[304]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	265 -> 266	[key=0,
		edge_type=next,
		label=Next];
	267	[contract_name=ExclusivePlatform,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
doTransfer(_from,_to,_amount)

IRs:
INTERNAL_CALL, ExclusivePlatform.doTransfer(address,address,\
uint256)(_from,_to,_amount)",
		node_expression="doTransfer(_from,_to,_amount)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ExclusivePlatform.doTransfer(address,address,uint256)(_from,_to,_amount)",
		node_source_code_lines="[305]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=ExclusivePlatform,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[306]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269 -> 265	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=ExclusivePlatform,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_16.sol_ExclusivePlatform_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304, 305, 306, 307]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	270 -> 264	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[308, 309, 310]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	272	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_195(bool) = tx.origin == owner_txorigin4
\
TMP_196(None) = SOLIDITY_CALL require(bool)(TMP_195)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_195(bool) = tx.origin == owner_txorigin4
TMP_196(None) = SOLIDITY_CALL require(bool)(TMP_195)",
		node_source_code_lines="[309]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	271 -> 272	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin4(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[308, 309, 310]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	273 -> 271	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=ExclusivePlatform,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[317, 318, 319, 320, 321, 322, 323, 324, 325, 326]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	275	[contract_name=ExclusivePlatform,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)((_amount == 0) || (allowed[msg.sender][_spender] == 0))

IRs:
TMP_197(bool) = _\
amount == 0
REF_78(mapping(address => uint256)) -> allowed[msg.sender]
REF_79(uint256) -> REF_78[_spender]
TMP_198(bool) = REF_79 == \
0
TMP_199(bool) = TMP_197 || TMP_198
TMP_200(None) = SOLIDITY_CALL require(bool)(TMP_199)",
		node_expression="require(bool)((_amount == 0) || (allowed[msg.sender][_spender] == 0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_197(bool) = _amount == 0
REF_78(mapping(address => uint256)) -> allowed[msg.sender]
REF_79(uint256) -> REF_78[_spender]
TMP_\
198(bool) = REF_79 == 0
TMP_199(bool) = TMP_197 || TMP_198
TMP_200(None) = SOLIDITY_CALL require(bool)(TMP_199)",
		node_source_code_lines="[322]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	274 -> 275	[key=0,
		edge_type=next,
		label=Next];
	276	[contract_name=ExclusivePlatform,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][_spender] = _amount

IRs:
REF_80(mapping(address => uint256)) -> allowed[\
msg.sender]
REF_81(uint256) -> REF_80[_spender]
REF_81 (->allowed) := _amount(uint256)",
		node_expression="allowed[msg.sender][_spender] = _amount",
		node_info_vulnerabilities=None,
		node_irs="REF_80(mapping(address => uint256)) -> allowed[msg.sender]
REF_81(uint256) -> REF_80[_spender]
REF_81 (->allowed) := _amount(uint256)",
		node_source_code_lines="[323]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	275 -> 276	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=ExclusivePlatform,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,_spender,_amount)

IRs:
Emit Approval(msg.sender._spender._amount)",
		node_expression="Approval(msg.sender,_spender,_amount)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(msg.sender._spender._amount)",
		node_source_code_lines="[324]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	276 -> 277	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=ExclusivePlatform,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[325]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	277 -> 278	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=ExclusivePlatform,
		function_fullname="approve(address,uint256)",
		label="buggy_16.sol_ExclusivePlatform_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[317, 318, 319, 320, 321, 322, 323, 324, 325, 326]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	279 -> 274	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[327, 328, 329, 330]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	281	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_202(bool) = tx.origin == owner_txorigin7
\
TMP_203(None) = SOLIDITY_CALL require(bool)(TMP_202)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_202(bool) = tx.origin == owner_txorigin7
TMP_203(None) = SOLIDITY_CALL require(bool)(TMP_202)",
		node_source_code_lines="[328]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	280 -> 281	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_82(None) -> to.call
REF_83(None) -> REF_82.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_82(None) -> to.call
REF_83(None) -> REF_82.value",
		node_source_code_lines="[329]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	281 -> 282	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[327, 328, 329, 330]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	283 -> 280	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=ExclusivePlatform,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[332, 333, 334]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	285	[contract_name=ExclusivePlatform,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
allowed[_owner][_spender]

IRs:
REF_84(mapping(address => uint256)) -> allowed[_owner]
REF_85(uint256) \
-> REF_84[_spender]
RETURN REF_85",
		node_expression="allowed[_owner][_spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_84(mapping(address => uint256)) -> allowed[_owner]
REF_85(uint256) -> REF_84[_spender]
RETURN REF_85",
		node_source_code_lines="[333]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	284 -> 285	[key=0,
		edge_type=next,
		label=Next];
	286	[contract_name=ExclusivePlatform,
		function_fullname="allowance(address,address)",
		label="buggy_16.sol_ExclusivePlatform_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[332, 333, 334]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	286 -> 284	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	288	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_205(bool) = tx.origin == owner_txorigin23
\
TMP_206(None) = SOLIDITY_CALL require(bool)(TMP_205)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_205(bool) = tx.origin == owner_txorigin23
TMP_206(None) = SOLIDITY_CALL require(bool)(TMP_205)",
		node_source_code_lines="[336]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	287 -> 288	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_86(None) -> to.call
REF_87(None) -> REF_86.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_86(None) -> to.call
REF_87(None) -> REF_86.value",
		node_source_code_lines="[337]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	288 -> 289	[key=0,
		edge_type=next,
		label=Next];
	290	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	290 -> 287	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=ExclusivePlatform,
		function_fullname="transferEther(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343, 344]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	295	[contract_name=ExclusivePlatform,
		function_fullname="transferEther(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[340]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	291 -> 295	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=ExclusivePlatform,
		function_fullname="transferEther(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_amount <= address(this).balance)

IRs:
TMP_208 = CONVERT this to address
REF_88 \
-> BALANCE TMP_208
TMP_209(bool) = _amount <= REF_88
TMP_210(None) = SOLIDITY_CALL require(bool)(TMP_209)",
		node_expression="require(bool)(_amount <= address(this).balance)",
		node_info_vulnerabilities=None,
		node_irs="TMP_208 = CONVERT this to address
REF_88 -> BALANCE TMP_208
TMP_209(bool) = _amount <= REF_88
TMP_210(None) = SOLIDITY_CALL require(\
bool)(TMP_209)",
		node_source_code_lines="[341]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	293	[contract_name=ExclusivePlatform,
		function_fullname="transferEther(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
TransferEther(address(this),_receiver,_amount)

IRs:
TMP_211 = CONVERT this to address
Emit TransferEther(\
TMP_211._receiver._amount)",
		node_expression="TransferEther(address(this),_receiver,_amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_211 = CONVERT this to address
Emit TransferEther(TMP_211._receiver._amount)",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	292 -> 293	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=ExclusivePlatform,
		function_fullname="transferEther(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_receiver.transfer(_amount)

IRs:
Transfer dest:_receiver value:_amount",
		node_expression="_receiver.transfer(_amount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:_receiver value:_amount",
		node_source_code_lines="[343]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	293 -> 294	[key=0,
		edge_type=next,
		label=Next];
	295 -> 292	[key=0,
		edge_type=next,
		label=Next];
	296	[contract_name=ExclusivePlatform,
		function_fullname="transferEther(address,uint256)",
		label="buggy_16.sol_ExclusivePlatform_transferEther(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343, 344]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	296 -> 291	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[345, 346, 347, 348]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	298	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_215(bool) = tx.origin == owner_txorigin14
\
TMP_216(None) = SOLIDITY_CALL require(bool)(TMP_215)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_215(bool) = tx.origin == owner_txorigin14
TMP_216(None) = SOLIDITY_CALL require(bool)(TMP_215)",
		node_source_code_lines="[346]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	297 -> 298	[key=0,
		edge_type=next,
		label=Next];
	299	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_217 = CONVERT this to address
REF_91 -> \
BALANCE TMP_217
Transfer dest:_recipient value:REF_91",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_217 = CONVERT this to address
REF_91 -> BALANCE TMP_217
Transfer dest:_recipient value:REF_91",
		node_source_code_lines="[347]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	298 -> 299	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[345, 346, 347, 348]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	300 -> 297	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=ExclusivePlatform,
		function_fullname="withdrawFund()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[350, 351, 352, 353]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	304	[contract_name=ExclusivePlatform,
		function_fullname="withdrawFund()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[350]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	301 -> 304	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=ExclusivePlatform,
		function_fullname="withdrawFund()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
balance = address(this).balance

IRs:
TMP_219 = CONVERT this to address
REF_92 -> BALANCE TMP_\
219
balance(uint256) := REF_92(uint256)",
		node_expression="balance = address(this).balance",
		node_info_vulnerabilities=None,
		node_irs="TMP_219 = CONVERT this to address
REF_92 -> BALANCE TMP_219
balance(uint256) := REF_92(uint256)",
		node_source_code_lines="[351]",
		node_type="NEW VARIABLE",
		source_file="buggy_16.sol"];
	303	[contract_name=ExclusivePlatform,
		function_fullname="withdrawFund()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner.transfer(balance)

IRs:
Transfer dest:owner value:balance",
		node_expression="owner.transfer(balance)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:owner value:balance",
		node_source_code_lines="[352]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	302 -> 303	[key=0,
		edge_type=next,
		label=Next];
	304 -> 302	[key=0,
		edge_type=next,
		label=Next];
	305	[contract_name=ExclusivePlatform,
		function_fullname="withdrawFund()",
		label="buggy_16.sol_ExclusivePlatform_withdrawFund()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[350, 351, 352, 353]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	305 -> 301	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[354, 355, 356, 357]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	307	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_222(bool) = tx.origin == owner_txorigin30
\
TMP_223(None) = SOLIDITY_CALL require(bool)(TMP_222)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_222(bool) = tx.origin == owner_txorigin30
TMP_223(None) = SOLIDITY_CALL require(bool)(TMP_222)",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	306 -> 307	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_224 = CONVERT this to address
REF_95 -> \
BALANCE TMP_224
Transfer dest:_recipient value:REF_95",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_224 = CONVERT this to address
REF_95 -> BALANCE TMP_224
Transfer dest:_recipient value:REF_95",
		node_source_code_lines="[356]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=ExclusivePlatform,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[354, 355, 356, 357]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	309 -> 306	[key=0,
		edge_type=next,
		label=Next];
	310	[contract_name=ExclusivePlatform,
		function_fullname="burn(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[359, 360, 361, 362, 363, 364, 365]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	316	[contract_name=ExclusivePlatform,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[359]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	310 -> 316	[key=0,
		edge_type=next,
		label=Next];
	311	[contract_name=ExclusivePlatform,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_value <= balances[msg.sender])

IRs:
REF_96(uint256) -> balances[msg.sender]
TMP_\
226(bool) = _value <= REF_96
TMP_227(None) = SOLIDITY_CALL require(bool)(TMP_226)",
		node_expression="require(bool)(_value <= balances[msg.sender])",
		node_info_vulnerabilities=None,
		node_irs="REF_96(uint256) -> balances[msg.sender]
TMP_226(bool) = _value <= REF_96
TMP_227(None) = SOLIDITY_CALL require(bool)(TMP_226)",
		node_source_code_lines="[360]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	312	[contract_name=ExclusivePlatform,
		function_fullname="burn(uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
burner = msg.sender

IRs:
burner(address) := msg.sender(address)",
		node_expression="burner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="burner(address) := msg.sender(address)",
		node_source_code_lines="[361]",
		node_type="NEW VARIABLE",
		source_file="buggy_16.sol"];
	311 -> 312	[key=0,
		edge_type=next,
		label=Next];
	313	[contract_name=ExclusivePlatform,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[burner] = balances[burner].sub(_value)

IRs:
REF_97(uint256) -> balances[burner]
REF_\
98(uint256) -> balances[burner]
TMP_228(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_98', '_value'] 
REF_97 (->balances) := TMP_228(uint256)",
		node_expression="balances[burner] = balances[burner].sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="REF_97(uint256) -> balances[burner]
REF_98(uint256) -> balances[burner]
TMP_228(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_98', '_value'] 
REF_97 (->balances) := TMP_228(uint256)",
		node_source_code_lines="[362]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	312 -> 313	[key=0,
		edge_type=next,
		label=Next];
	314	[contract_name=ExclusivePlatform,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.sub(_value)

IRs:
TMP_229(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', '_value'] 
_totalSupply(uint256) := TMP_229(uint256)",
		node_expression="_totalSupply = _totalSupply.sub(_value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_229(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', '_value'] 
_totalSupply(\
uint256) := TMP_229(uint256)",
		node_source_code_lines="[363]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	313 -> 314	[key=0,
		edge_type=next,
		label=Next];
	315	[contract_name=ExclusivePlatform,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Burn(burner,_value)

IRs:
Emit Burn(burner._value)",
		node_expression="Burn(burner,_value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Burn(burner._value)",
		node_source_code_lines="[364]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316 -> 311	[key=0,
		edge_type=next,
		label=Next];
	317	[contract_name=ExclusivePlatform,
		function_fullname="burn(uint256)",
		label="buggy_16.sol_ExclusivePlatform_burn(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[359, 360, 361, 362, 363, 364, 365]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	317 -> 310	[key=0,
		edge_type=next,
		label=Next];
	318	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[366, 367, 368]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	319	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_232(bool) = tx.origin == owner_txorigin8
\
TMP_233(None) = SOLIDITY_CALL require(bool)(TMP_232)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_232(bool) = tx.origin == owner_txorigin8
TMP_233(None) = SOLIDITY_CALL require(bool)(TMP_232)",
		node_source_code_lines="[367]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	318 -> 319	[key=0,
		edge_type=next,
		label=Next];
	320	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin8(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[366, 367, 368]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	320 -> 318	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=ExclusivePlatform,
		function_fullname="getForeignTokenBalance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[371, 372, 373, 374, 375]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	322	[contract_name=ExclusivePlatform,
		function_fullname="getForeignTokenBalance(address,address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
token = ERC20Interface(tokenAddress)

IRs:
TMP_234 = CONVERT tokenAddress to ERC20Interface
\
token(ERC20Interface) := TMP_234(ERC20Interface)",
		node_expression="token = ERC20Interface(tokenAddress)",
		node_info_vulnerabilities=None,
		node_irs="TMP_234 = CONVERT tokenAddress to ERC20Interface
token(ERC20Interface) := TMP_234(ERC20Interface)",
		node_source_code_lines="[372]",
		node_type="NEW VARIABLE",
		source_file="buggy_16.sol"];
	321 -> 322	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=ExclusivePlatform,
		function_fullname="getForeignTokenBalance(address,address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
bal = token.balanceOf(who)

IRs:
TMP_235(uint256) = HIGH_LEVEL_CALL, dest:token(ERC20Interface), \
function:balanceOf, arguments:['who']  
bal(uint256) := TMP_235(uint256)",
		node_expression="bal = token.balanceOf(who)",
		node_info_vulnerabilities=None,
		node_irs="TMP_235(uint256) = HIGH_LEVEL_CALL, dest:token(ERC20Interface), function:balanceOf, arguments:['who']  
bal(uint256) := TMP_235(\
uint256)",
		node_source_code_lines="[373]",
		node_type="NEW VARIABLE",
		source_file="buggy_16.sol"];
	322 -> 323	[key=0,
		edge_type=next,
		label=Next];
	324	[contract_name=ExclusivePlatform,
		function_fullname="getForeignTokenBalance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
bal

IRs:
RETURN bal",
		node_expression=bal,
		node_info_vulnerabilities=None,
		node_irs="RETURN bal",
		node_source_code_lines="[374]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	323 -> 324	[key=0,
		edge_type=next,
		label=Next];
	325	[contract_name=ExclusivePlatform,
		function_fullname="getForeignTokenBalance(address,address)",
		label="buggy_16.sol_ExclusivePlatform_getForeignTokenBalance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[371, 372, 373, 374, 375]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	325 -> 321	[key=0,
		edge_type=next,
		label=Next];
	326	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[376, 377, 378, 379]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	327	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_236(bool) = tx.origin == owner_txorigin39
\
TMP_237(None) = SOLIDITY_CALL require(bool)(TMP_236)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_236(bool) = tx.origin == owner_txorigin39
TMP_237(None) = SOLIDITY_CALL require(bool)(TMP_236)",
		node_source_code_lines="[377]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	326 -> 327	[key=0,
		edge_type=next,
		label=Next];
	328	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_102(None) -> to.call
REF_103(None) -> REF_102.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_102(None) -> to.call
REF_103(None) -> REF_102.value",
		node_source_code_lines="[378]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	327 -> 328	[key=0,
		edge_type=next,
		label=Next];
	329	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[376, 377, 378, 379]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	329 -> 326	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=ExclusivePlatform,
		function_fullname="withdrawForeignTokens(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[381, 382, 383, 384, 385]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	334	[contract_name=ExclusivePlatform,
		function_fullname="withdrawForeignTokens(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[381]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	330 -> 334	[key=0,
		edge_type=next,
		label=Next];
	331	[contract_name=ExclusivePlatform,
		function_fullname="withdrawForeignTokens(address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
token = ERC20Interface(tokenAddress)

IRs:
TMP_239 = CONVERT tokenAddress to ERC20Interface
\
token(ERC20Interface) := TMP_239(ERC20Interface)",
		node_expression="token = ERC20Interface(tokenAddress)",
		node_info_vulnerabilities=None,
		node_irs="TMP_239 = CONVERT tokenAddress to ERC20Interface
token(ERC20Interface) := TMP_239(ERC20Interface)",
		node_source_code_lines="[382]",
		node_type="NEW VARIABLE",
		source_file="buggy_16.sol"];
	332	[contract_name=ExclusivePlatform,
		function_fullname="withdrawForeignTokens(address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
amount = token.balanceOf(address(this))

IRs:
TMP_240 = CONVERT this to address
TMP_241(uint256) = \
HIGH_LEVEL_CALL, dest:token(ERC20Interface), function:balanceOf, arguments:['TMP_240']  
amount(uint256) := TMP_241(uint256)",
		node_expression="amount = token.balanceOf(address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_240 = CONVERT this to address
TMP_241(uint256) = HIGH_LEVEL_CALL, dest:token(ERC20Interface), function:balanceOf, arguments:['\
TMP_240']  
amount(uint256) := TMP_241(uint256)",
		node_source_code_lines="[383]",
		node_type="NEW VARIABLE",
		source_file="buggy_16.sol"];
	331 -> 332	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=ExclusivePlatform,
		function_fullname="withdrawForeignTokens(address)",
		label="Node Type: RETURN

EXPRESSION:
token.transfer(owner,amount)

IRs:
TMP_242(bool) = HIGH_LEVEL_CALL, dest:token(ERC20Interface), function:\
transfer, arguments:['owner', 'amount']  
RETURN TMP_242",
		node_expression="token.transfer(owner,amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_242(bool) = HIGH_LEVEL_CALL, dest:token(ERC20Interface), function:transfer, arguments:['owner', 'amount']  
RETURN TMP_242",
		node_source_code_lines="[384]",
		node_type=RETURN,
		source_file="buggy_16.sol"];
	332 -> 333	[key=0,
		edge_type=next,
		label=Next];
	334 -> 331	[key=0,
		edge_type=next,
		label=Next];
	335	[contract_name=ExclusivePlatform,
		function_fullname="withdrawForeignTokens(address)",
		label="buggy_16.sol_ExclusivePlatform_withdrawForeignTokens(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[381, 382, 383, 384, 385]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	335 -> 330	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[386, 387, 388]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	337	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_244(bool) = tx.origin == owner_txorigin36
\
TMP_245(None) = SOLIDITY_CALL require(bool)(TMP_244)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_244(bool) = tx.origin == owner_txorigin36
TMP_245(None) = SOLIDITY_CALL require(bool)(TMP_244)",
		node_source_code_lines="[387]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	336 -> 337	[key=0,
		edge_type=next,
		label=Next];
	338	[contract_name=ExclusivePlatform,
		function_fullname="bug_txorigin36(address)",
		label="buggy_16.sol_ExclusivePlatform_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[386, 387, 388]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	338 -> 336	[key=0,
		edge_type=next,
		label=Next];
	339	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[390, 391, 392, 393]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	340	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_246(bool) = tx.origin == owner_txorigin27
\
TMP_247(None) = SOLIDITY_CALL require(bool)(TMP_246)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_246(bool) = tx.origin == owner_txorigin27
TMP_247(None) = SOLIDITY_CALL require(bool)(TMP_246)",
		node_source_code_lines="[391]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	339 -> 340	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_106(None) -> to.call
REF_107(None) -> REF_106.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_106(None) -> to.call
REF_107(None) -> REF_106.value",
		node_source_code_lines="[392]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	340 -> 341	[key=0,
		edge_type=next,
		label=Next];
	342	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[390, 391, 392, 393]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	342 -> 339	[key=0,
		edge_type=next,
		label=Next];
	343	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[395, 396, 397, 398]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	344	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_249(bool) = tx.origin == owner_txorigin31
\
TMP_250(None) = SOLIDITY_CALL require(bool)(TMP_249)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_249(bool) = tx.origin == owner_txorigin31
TMP_250(None) = SOLIDITY_CALL require(bool)(TMP_249)",
		node_source_code_lines="[396]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	343 -> 344	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_108(None) -> to.call
REF_109(None) -> REF_108.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="REF_108(None) -> to.call
REF_109(None) -> REF_108.value",
		node_source_code_lines="[397]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	344 -> 345	[key=0,
		edge_type=next,
		label=Next];
	346	[contract_name=ExclusivePlatform,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[395, 396, 397, 398]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	346 -> 343	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402, 403]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	348	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_252(bool) = tx.origin == owner_txorigin13
\
TMP_253(None) = SOLIDITY_CALL require(bool)(TMP_252)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="TMP_252(bool) = tx.origin == owner_txorigin13
TMP_253(None) = SOLIDITY_CALL require(bool)(TMP_252)",
		node_source_code_lines="[401]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	347 -> 348	[key=0,
		edge_type=next,
		label=Next];
	349	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[402]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	348 -> 349	[key=0,
		edge_type=next,
		label=Next];
	350	[contract_name=ExclusivePlatform,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_16.sol_ExclusivePlatform_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402, 403]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	350 -> 347	[key=0,
		edge_type=next,
		label=Next];
	351	[contract_name=ExclusivePlatform,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
name = Exclusive Platform

IRs:
name(string) := Exclusive Platform(string)",
		node_expression="name = Exclusive Platform",
		node_info_vulnerabilities=None,
		node_irs="name(string) := Exclusive Platform(string)",
		node_source_code_lines="[151]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_16.sol"];
	352	[contract_name=ExclusivePlatform,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
symbol = XPL

IRs:
symbol(string) := XPL(string)",
		node_expression="symbol = XPL",
		node_info_vulnerabilities=None,
		node_irs="symbol(string) := XPL(string)",
		node_source_code_lines="[156]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_16.sol"];
	351 -> 352	[key=0,
		edge_type=next,
		label=Next];
	353	[contract_name=ExclusivePlatform,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
decimals = 8

IRs:
decimals(uint256) := 8(uint256)",
		node_expression="decimals = 8",
		node_info_vulnerabilities=None,
		node_irs="decimals(uint256) := 8(uint256)",
		node_source_code_lines="[160]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_16.sol"];
	352 -> 353	[key=0,
		edge_type=next,
		label=Next];
	354	[contract_name=ExclusivePlatform,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
XPLPerEther = 8000000e8

IRs:
XPLPerEther(uint256) := 800000000000000(uint256)",
		node_expression="XPLPerEther = 8000000e8",
		node_info_vulnerabilities=None,
		node_irs="XPLPerEther(uint256) := 800000000000000(uint256)",
		node_source_code_lines="[170]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_16.sol"];
	353 -> 354	[key=0,
		edge_type=next,
		label=Next];
	355	[contract_name=ExclusivePlatform,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
minimumBuy = 1000000000000000000 / 100

IRs:
TMP_255(uint256) = 1000000000000000000 / 100
\
minimumBuy(uint256) := TMP_255(uint256)",
		node_expression="minimumBuy = 1000000000000000000 / 100",
		node_info_vulnerabilities=None,
		node_irs="TMP_255(uint256) = 1000000000000000000 / 100
minimumBuy(uint256) := TMP_255(uint256)",
		node_source_code_lines="[171]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_16.sol"];
	354 -> 355	[key=0,
		edge_type=next,
		label=Next];
	356	[contract_name=ExclusivePlatform,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
crowdsaleIsOn = true

IRs:
crowdsaleIsOn(bool) := True(bool)",
		node_expression="crowdsaleIsOn = true",
		node_info_vulnerabilities=None,
		node_irs="crowdsaleIsOn(bool) := True(bool)",
		node_source_code_lines="[176]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_16.sol"];
	355 -> 356	[key=0,
		edge_type=next,
		label=Next];
	357	[contract_name=ExclusivePlatform,
		function_fullname="slitherConstructorVariables()",
		label="buggy_16.sol_ExclusivePlatform_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, \
94, 95, 96, 97, 107, 108, 109, 110, 129, 130, 131, 132, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, \
161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 190, 191, 192, 193, 198, 199, 200, 201, 207, 208, 209, 210, 215, 216, 217, \
218, 234, 235, 236, 237, 247, 248, 249, 250, 255, 256, 257, 258, 264, 265, 266, 267, 282, 283, 284, 289, 290, 291, 297, 298, 299, \
300, 308, 309, 310, 327, 328, 329, 330, 335, 336, 337, 338, 345, 346, 347, 348, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, \
379, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, \
162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, \
188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, \
214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, \
240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, \
266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, \
292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, \
318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, \
344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, \
370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, \
396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	357 -> 351	[key=0,
		edge_type=next,
		label=Next];
	358	[contract_name=ExclusivePlatform,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[115, 116, 117, 118]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	359	[contract_name=ExclusivePlatform,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_256(bool) = msg.sender == owner
TMP_257(None) = \
SOLIDITY_CALL require(bool)(TMP_256)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_256(bool) = msg.sender == owner
TMP_257(None) = SOLIDITY_CALL require(bool)(TMP_256)",
		node_source_code_lines="[116]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	358 -> 359	[key=0,
		edge_type=next,
		label=Next];
	360	[contract_name=ExclusivePlatform,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[117]",
		node_type=_,
		source_file="buggy_16.sol"];
	359 -> 360	[key=0,
		edge_type=next,
		label=Next];
	361	[contract_name=ExclusivePlatform,
		function_fullname="onlyOwner()",
		label="buggy_16.sol_ExclusivePlatform_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[115, 116, 117, 118]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	361 -> 358	[key=0,
		edge_type=next,
		label=Next];
	362	[contract_name=ExclusivePlatform,
		function_fullname="onlyPayloadSize(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[180, 181, 182, 183]",
		node_type=ENTRY_POINT,
		source_file="buggy_16.sol"];
	363	[contract_name=ExclusivePlatform,
		function_fullname="onlyPayloadSize(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(msg.data.length >= size + 4)

IRs:
REF_111 -> LENGTH msg.data
TMP_258(uint256) = \
size + 4
TMP_259(bool) = REF_111 >= TMP_258
TMP_260(None) = SOLIDITY_CALL assert(bool)(TMP_259)",
		node_expression="assert(bool)(msg.data.length >= size + 4)",
		node_info_vulnerabilities=None,
		node_irs="REF_111 -> LENGTH msg.data
TMP_258(uint256) = size + 4
TMP_259(bool) = REF_111 >= TMP_258
TMP_260(None) = SOLIDITY_CALL assert(bool)(\
TMP_259)",
		node_source_code_lines="[181]",
		node_type=EXPRESSION,
		source_file="buggy_16.sol"];
	362 -> 363	[key=0,
		edge_type=next,
		label=Next];
	364	[contract_name=ExclusivePlatform,
		function_fullname="onlyPayloadSize(uint256)",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[182]",
		node_type=_,
		source_file="buggy_16.sol"];
	363 -> 364	[key=0,
		edge_type=next,
		label=Next];
	365	[contract_name=ExclusivePlatform,
		function_fullname="onlyPayloadSize(uint256)",
		label="buggy_16.sol_ExclusivePlatform_onlyPayloadSize(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[180, 181, 182, 183]",
		node_type=FUNCTION_NAME,
		source_file="buggy_16.sol"];
	365 -> 362	[key=0,
		edge_type=next,
		label=Next];
}
