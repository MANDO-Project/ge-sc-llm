digraph "" {
	node [label="\N"];
	0	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[8, 9, 10, 11]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	1	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_0(bool) = tx.origin == owner_txorigin2
\
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_0(bool) = tx.origin == owner_txorigin2
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[9]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_2 = CONVERT this to address
REF_1 -> BALANCE \
TMP_2
Transfer dest:_recipient value:REF_1",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_2 = CONVERT this to address
REF_1 -> BALANCE TMP_2
Transfer dest:_recipient value:REF_1",
		node_source_code_lines="[10]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_42.sol_Owned_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[8, 9, 10, 11]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	3 -> 0	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=Owned,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	5	[contract_name=Owned,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_4(bool) = tx.origin == owner_txorigin17
\
TMP_5(None) = SOLIDITY_CALL require(bool)(TMP_4)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_4(bool) = tx.origin == owner_txorigin17
TMP_5(None) = SOLIDITY_CALL require(bool)(TMP_4)",
		node_source_code_lines="[14]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	4 -> 5	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=Owned,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[15]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=Owned,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_42.sol_Owned_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	7 -> 4	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=Owned,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[19, 20, 21, 22]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	9	[contract_name=Owned,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_7(bool) = tx.origin == owner_txorigin27
\
TMP_8(None) = SOLIDITY_CALL require(bool)(TMP_7)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_7(bool) = tx.origin == owner_txorigin27
TMP_8(None) = SOLIDITY_CALL require(bool)(TMP_7)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	8 -> 9	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=Owned,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_3(None) -> to.call
REF_4(None) -> REF_3.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="REF_3(None) -> to.call
REF_4(None) -> REF_3.value",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	9 -> 10	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=Owned,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_42.sol_Owned_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[19, 20, 21, 22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	11 -> 8	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[25, 26, 27]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	13	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[26]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	12 -> 13	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=Owned,
		function_fullname="constructor()",
		label="buggy_42.sol_Owned_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[25, 26, 27]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	14 -> 12	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=Owned,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[28, 29, 30]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	16	[contract_name=Owned,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_10(bool) = tx.origin == owner_txorigin32
\
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_10(bool) = tx.origin == owner_txorigin32
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	15 -> 16	[key=0,
		edge_type=next,
		label=Next];
	17	[contract_name=Owned,
		function_fullname="bug_txorigin32(address)",
		label="buggy_42.sol_Owned_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[28, 29, 30]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	17 -> 15	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[37, 38, 39]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	20	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	18 -> 20	[key=0,
		edge_type=next,
		label=Next];
	19	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = _newOwner

IRs:
newOwner(address) := _newOwner(address)",
		node_expression="newOwner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="newOwner(address) := _newOwner(address)",
		node_source_code_lines="[38]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	20 -> 19	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="buggy_42.sol_Owned_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[37, 38, 39]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	21 -> 18	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[40, 41, 42, 43]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	23	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_13(bool) = tx.origin == owner_txorigin38
\
TMP_14(None) = SOLIDITY_CALL require(bool)(TMP_13)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_13(bool) = tx.origin == owner_txorigin38
TMP_14(None) = SOLIDITY_CALL require(bool)(TMP_13)",
		node_source_code_lines="[41]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	22 -> 23	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_15 = CONVERT this to address
REF_6 -> BALANCE \
TMP_15
Transfer dest:_recipient value:REF_6",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_15 = CONVERT this to address
REF_6 -> BALANCE TMP_15
Transfer dest:_recipient value:REF_6",
		node_source_code_lines="[42]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_42.sol_Owned_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[40, 41, 42, 43]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	25 -> 22	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	27	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner || msg.sender == address(this))

IRs:
TMP_17(bool) = msg.sender == \
owner
TMP_18 = CONVERT this to address
TMP_19(bool) = msg.sender == TMP_18
TMP_20(bool) = TMP_17 || TMP_19
TMP_21(None) = SOLIDITY_\
CALL require(bool)(TMP_20)",
		node_expression="require(bool)(msg.sender == owner || msg.sender == address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_17(bool) = msg.sender == owner
TMP_18 = CONVERT this to address
TMP_19(bool) = msg.sender == TMP_18
TMP_20(bool) = TMP_17 || \
TMP_19
TMP_21(None) = SOLIDITY_CALL require(bool)(TMP_20)",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	26 -> 27	[key=0,
		edge_type=next,
		label=Next];
	28	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[34]",
		node_type=_,
		source_file="buggy_42.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="buggy_42.sol_Owned_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	29 -> 26	[key=0,
		edge_type=next,
		label=Next];
	30	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[47, 48, 49, 50, 51, 52, 53, 54]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	31	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a == 0

IRs:
TMP_22(bool) = a == 0
CONDITION TMP_22",
		node_expression="a == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_22(bool) = a == 0
CONDITION TMP_22",
		node_source_code_lines="[48]",
		node_type=IF,
		source_file="buggy_42.sol"];
	30 -> 31	[key=0,
		edge_type=next,
		label=Next];
	32	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
0

IRs:
RETURN 0",
		node_expression=0,
		node_info_vulnerabilities=None,
		node_irs="RETURN 0",
		node_source_code_lines="[49]",
		node_type=RETURN,
		source_file="buggy_42.sol"];
	31 -> 32	[key=0,
		edge_type=if_true,
		label=True];
	33	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48, 49, 50]",
		node_type=END_IF,
		source_file="buggy_42.sol"];
	31 -> 33	[key=0,
		edge_type=if_false,
		label=False];
	34	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a * b

IRs:
TMP_23(uint256) = a * b
c(uint256) := TMP_23(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_23(uint256) = a * b
c(uint256) := TMP_23(uint256)",
		node_source_code_lines="[51]",
		node_type="NEW VARIABLE",
		source_file="buggy_42.sol"];
	33 -> 34	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(c / a == b)

IRs:
TMP_24(uint256) = c / a
TMP_25(bool) = TMP_24 == b
TMP_26(None) = \
SOLIDITY_CALL assert(bool)(TMP_25)",
		node_expression="assert(bool)(c / a == b)",
		node_info_vulnerabilities=None,
		node_irs="TMP_24(uint256) = c / a
TMP_25(bool) = TMP_24 == b
TMP_26(None) = SOLIDITY_CALL assert(bool)(TMP_25)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	34 -> 35	[key=0,
		edge_type=next,
		label=Next];
	36	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[53]",
		node_type=RETURN,
		source_file="buggy_42.sol"];
	35 -> 36	[key=0,
		edge_type=next,
		label=Next];
	37	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_42.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[47, 48, 49, 50, 51, 52, 53, 54]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	37 -> 30	[key=0,
		edge_type=next,
		label=Next];
	38	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	39	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a / b

IRs:
TMP_27(uint256) = a / b
c(uint256) := TMP_27(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_27(uint256) = a / b
c(uint256) := TMP_27(uint256)",
		node_source_code_lines="[57]",
		node_type="NEW VARIABLE",
		source_file="buggy_42.sol"];
	38 -> 39	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[58]",
		node_type=RETURN,
		source_file="buggy_42.sol"];
	39 -> 40	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_42.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	41 -> 38	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	43	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(b <= a)

IRs:
TMP_28(bool) = b <= a
TMP_29(None) = SOLIDITY_CALL assert(bool)(TMP_\
28)",
		node_expression="assert(bool)(b <= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_28(bool) = b <= a
TMP_29(None) = SOLIDITY_CALL assert(bool)(TMP_28)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	42 -> 43	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a - b

IRs:
TMP_30(uint256) = a - b
RETURN TMP_30",
		node_expression="a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_30(uint256) = a - b
RETURN TMP_30",
		node_source_code_lines="[63]",
		node_type=RETURN,
		source_file="buggy_42.sol"];
	43 -> 44	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_42.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	45 -> 42	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69, 70]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	47	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a + b

IRs:
TMP_31(uint256) = a + b
c(uint256) := TMP_31(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_31(uint256) = a + b
c(uint256) := TMP_31(uint256)",
		node_source_code_lines="[67]",
		node_type="NEW VARIABLE",
		source_file="buggy_42.sol"];
	46 -> 47	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(c >= a)

IRs:
TMP_32(bool) = c >= a
TMP_33(None) = SOLIDITY_CALL assert(bool)(TMP_\
32)",
		node_expression="assert(bool)(c >= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_32(bool) = c >= a
TMP_33(None) = SOLIDITY_CALL assert(bool)(TMP_32)",
		node_source_code_lines="[68]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	47 -> 48	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[69]",
		node_type=RETURN,
		source_file="buggy_42.sol"];
	48 -> 49	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_42.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[66, 67, 68, 69, 70]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	50 -> 46	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=SafeMath,
		function_fullname="ceil(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[72, 73, 74, 75, 76]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	52	[contract_name=SafeMath,
		function_fullname="ceil(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = add(a,m)

IRs:
TMP_34(uint256) = INTERNAL_CALL, SafeMath.add(uint256,uint256)(a,m)
c(uint256) := \
TMP_34(uint256)",
		node_expression="c = add(a,m)",
		node_info_vulnerabilities=None,
		node_irs="TMP_34(uint256) = INTERNAL_CALL, SafeMath.add(uint256,uint256)(a,m)
c(uint256) := TMP_34(uint256)",
		node_source_code_lines="[73]",
		node_type="NEW VARIABLE",
		source_file="buggy_42.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=SafeMath,
		function_fullname="ceil(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
d = sub(c,1)

IRs:
TMP_35(uint256) = INTERNAL_CALL, SafeMath.sub(uint256,uint256)(c,1)
d(uint256) := \
TMP_35(uint256)",
		node_expression="d = sub(c,1)",
		node_info_vulnerabilities=None,
		node_irs="TMP_35(uint256) = INTERNAL_CALL, SafeMath.sub(uint256,uint256)(c,1)
d(uint256) := TMP_35(uint256)",
		node_source_code_lines="[74]",
		node_type="NEW VARIABLE",
		source_file="buggy_42.sol"];
	52 -> 53	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=SafeMath,
		function_fullname="ceil(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
mul(div(d,m),m)

IRs:
TMP_36(uint256) = INTERNAL_CALL, SafeMath.div(uint256,uint256)(d,m)
TMP_37(\
uint256) = INTERNAL_CALL, SafeMath.mul(uint256,uint256)(TMP_36,m)
RETURN TMP_37",
		node_expression="mul(div(d,m),m)",
		node_info_vulnerabilities=None,
		node_irs="TMP_36(uint256) = INTERNAL_CALL, SafeMath.div(uint256,uint256)(d,m)
TMP_37(uint256) = INTERNAL_CALL, SafeMath.mul(uint256,uint256)(\
TMP_36,m)
RETURN TMP_37",
		node_source_code_lines="[75]",
		node_type=RETURN,
		source_file="buggy_42.sol"];
	53 -> 54	[key=0,
		edge_type=next,
		label=Next];
	55	[contract_name=SafeMath,
		function_fullname="ceil(uint256,uint256)",
		label="buggy_42.sol_SafeMath_ceil(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[72, 73, 74, 75, 76]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	55 -> 51	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=Token,
		function_fullname="balanceOf(address)",
		label="buggy_42.sol_Token_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	57	[contract_name=Token,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	58	[contract_name=Token,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_38(bool) = tx.origin == owner_txorigin4
\
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_38(bool) = tx.origin == owner_txorigin4
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	57 -> 58	[key=0,
		edge_type=next,
		label=Next];
	59	[contract_name=Token,
		function_fullname="bug_txorigin4(address)",
		label="buggy_42.sol_Token_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	59 -> 57	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=Token,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_42.sol_Token_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	61	[contract_name=Token,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	62	[contract_name=Token,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_40(bool) = tx.origin == owner_txorigin7
\
TMP_41(None) = SOLIDITY_CALL require(bool)(TMP_40)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_40(bool) = tx.origin == owner_txorigin7
TMP_41(None) = SOLIDITY_CALL require(bool)(TMP_40)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	61 -> 62	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=Token,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_7(None) -> to.call
REF_8(None) -> REF_7.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="REF_7(None) -> to.call
REF_8(None) -> REF_7.value",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	62 -> 63	[key=0,
		edge_type=next,
		label=Next];
	64	[contract_name=Token,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_42.sol_Token_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	64 -> 61	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Token,
		function_fullname="transfer(address,uint256)",
		label="buggy_42.sol_Token_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[89]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	66	[contract_name=Token,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	67	[contract_name=Token,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_43(bool) = tx.origin == owner_txorigin23
\
TMP_44(None) = SOLIDITY_CALL require(bool)(TMP_43)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_43(bool) = tx.origin == owner_txorigin23
TMP_44(None) = SOLIDITY_CALL require(bool)(TMP_43)",
		node_source_code_lines="[91]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	66 -> 67	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=Token,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=Token,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_42.sol_Token_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	69 -> 66	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[8, 9, 10, 11]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	71	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_46(bool) = tx.origin == owner_txorigin2
\
TMP_47(None) = SOLIDITY_CALL require(bool)(TMP_46)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_46(bool) = tx.origin == owner_txorigin2
TMP_47(None) = SOLIDITY_CALL require(bool)(TMP_46)",
		node_source_code_lines="[9]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	70 -> 71	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_48 = CONVERT this to address
REF_12 -> BALANCE \
TMP_48
Transfer dest:_recipient value:REF_12",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_48 = CONVERT this to address
REF_12 -> BALANCE TMP_48
Transfer dest:_recipient value:REF_12",
		node_source_code_lines="[10]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	71 -> 72	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_42.sol_Staking_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[8, 9, 10, 11]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	73 -> 70	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=Staking,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	75	[contract_name=Staking,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_50(bool) = tx.origin == owner_txorigin17
\
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_50(bool) = tx.origin == owner_txorigin17
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_source_code_lines="[14]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	74 -> 75	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=Staking,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[15]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	75 -> 76	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=Staking,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_42.sol_Staking_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	77 -> 74	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=Staking,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[19, 20, 21, 22]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	79	[contract_name=Staking,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_53(bool) = tx.origin == owner_txorigin27
\
TMP_54(None) = SOLIDITY_CALL require(bool)(TMP_53)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_53(bool) = tx.origin == owner_txorigin27
TMP_54(None) = SOLIDITY_CALL require(bool)(TMP_53)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	78 -> 79	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=Staking,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_14(None) -> to.call
REF_15(None) -> REF_14.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="REF_14(None) -> to.call
REF_15(None) -> REF_14.value",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	79 -> 80	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=Staking,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_42.sol_Staking_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[19, 20, 21, 22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	81 -> 78	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=Staking,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[25, 26, 27]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	83	[contract_name=Staking,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[26]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	82 -> 83	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=Staking,
		function_fullname="constructor()",
		label="buggy_42.sol_Staking_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[25, 26, 27]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	84 -> 82	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=Staking,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[28, 29, 30]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	86	[contract_name=Staking,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_56(bool) = tx.origin == owner_txorigin32
\
TMP_57(None) = SOLIDITY_CALL require(bool)(TMP_56)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_56(bool) = tx.origin == owner_txorigin32
TMP_57(None) = SOLIDITY_CALL require(bool)(TMP_56)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	85 -> 86	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=Staking,
		function_fullname="bug_txorigin32(address)",
		label="buggy_42.sol_Staking_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[28, 29, 30]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	87 -> 85	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=Staking,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[37, 38, 39]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	90	[contract_name=Staking,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	88 -> 90	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=Staking,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = _newOwner

IRs:
newOwner(address) := _newOwner(address)",
		node_expression="newOwner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="newOwner(address) := _newOwner(address)",
		node_source_code_lines="[38]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	90 -> 89	[key=0,
		edge_type=next,
		label=Next];
	91	[contract_name=Staking,
		function_fullname="transferOwnership(address)",
		label="buggy_42.sol_Staking_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[37, 38, 39]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	91 -> 88	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[40, 41, 42, 43]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	93	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_59(bool) = tx.origin == owner_txorigin38
\
TMP_60(None) = SOLIDITY_CALL require(bool)(TMP_59)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_59(bool) = tx.origin == owner_txorigin38
TMP_60(None) = SOLIDITY_CALL require(bool)(TMP_59)",
		node_source_code_lines="[41]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	92 -> 93	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_61 = CONVERT this to address
REF_17 -> BALANCE \
TMP_61
Transfer dest:_recipient value:REF_17",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_61 = CONVERT this to address
REF_17 -> BALANCE TMP_61
Transfer dest:_recipient value:REF_17",
		node_source_code_lines="[42]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	93 -> 94	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_42.sol_Staking_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[40, 41, 42, 43]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	95 -> 92	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=Staking,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[97, 98, 99, 100]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	97	[contract_name=Staking,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_63(bool) = tx.origin == owner_txorigin37
\
TMP_64(None) = SOLIDITY_CALL require(bool)(TMP_63)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_63(bool) = tx.origin == owner_txorigin37
TMP_64(None) = SOLIDITY_CALL require(bool)(TMP_63)",
		node_source_code_lines="[98]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	96 -> 97	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=Staking,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[99]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	97 -> 98	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=Staking,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_42.sol_Staking_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[97, 98, 99, 100]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	99 -> 96	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=Staking,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[102, 103, 104, 105]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	101	[contract_name=Staking,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_66(bool) = tx.origin == owner_txorigin3
\
TMP_67(None) = SOLIDITY_CALL require(bool)(TMP_66)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_66(bool) = tx.origin == owner_txorigin3
TMP_67(None) = SOLIDITY_CALL require(bool)(TMP_66)",
		node_source_code_lines="[103]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	100 -> 101	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=Staking,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_19(None) -> to.call
REF_20(None) -> REF_19.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="REF_19(None) -> to.call
REF_20(None) -> REF_19.value",
		node_source_code_lines="[104]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	101 -> 102	[key=0,
		edge_type=next,
		label=Next];
	103	[contract_name=Staking,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_42.sol_Staking_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[102, 103, 104, 105]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	103 -> 100	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=Staking,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	105	[contract_name=Staking,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_69(bool) = tx.origin == owner_txorigin9
\
TMP_70(None) = SOLIDITY_CALL require(bool)(TMP_69)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_69(bool) = tx.origin == owner_txorigin9
TMP_70(None) = SOLIDITY_CALL require(bool)(TMP_69)",
		node_source_code_lines="[108]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	104 -> 105	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=Staking,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[109]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	105 -> 106	[key=0,
		edge_type=next,
		label=Next];
	107	[contract_name=Staking,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_42.sol_Staking_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	107 -> 104	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=Staking,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[112, 113, 114, 115]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	109	[contract_name=Staking,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_72(bool) = tx.origin == owner_txorigin25
\
TMP_73(None) = SOLIDITY_CALL require(bool)(TMP_72)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_72(bool) = tx.origin == owner_txorigin25
TMP_73(None) = SOLIDITY_CALL require(bool)(TMP_72)",
		node_source_code_lines="[113]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	108 -> 109	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=Staking,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	109 -> 110	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=Staking,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_42.sol_Staking_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[112, 113, 114, 115]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	111 -> 108	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=Staking,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[118, 119, 120, 121]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	113	[contract_name=Staking,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_75(bool) = tx.origin == owner_txorigin19
\
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_75(bool) = tx.origin == owner_txorigin19
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_source_code_lines="[119]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=Staking,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_23(None) -> to.call
REF_24(None) -> REF_23.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="REF_23(None) -> to.call
REF_24(None) -> REF_23.value",
		node_source_code_lines="[120]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=Staking,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_42.sol_Staking_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[118, 119, 120, 121]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	115 -> 112	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[123, 124, 125, 126]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	117	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_78(bool) = tx.origin == owner_txorigin26
\
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_78(bool) = tx.origin == owner_txorigin26
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_source_code_lines="[124]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	116 -> 117	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_80 = CONVERT this to address
REF_26 -> BALANCE \
TMP_80
Transfer dest:_recipient value:REF_26",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_80 = CONVERT this to address
REF_26 -> BALANCE TMP_80
Transfer dest:_recipient value:REF_26",
		node_source_code_lines="[125]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	117 -> 118	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_42.sol_Staking_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[123, 124, 125, 126]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	119 -> 116	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=Staking,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[128, 129, 130, 131]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	121	[contract_name=Staking,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_82(bool) = tx.origin == owner_txorigin31
\
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_82(bool) = tx.origin == owner_txorigin31
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_source_code_lines="[129]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	120 -> 121	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=Staking,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_27(None) -> to.call
REF_28(None) -> REF_27.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="REF_27(None) -> to.call
REF_28(None) -> REF_27.value",
		node_source_code_lines="[130]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	121 -> 122	[key=0,
		edge_type=next,
		label=Next];
	123	[contract_name=Staking,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_42.sol_Staking_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[128, 129, 130, 131]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	123 -> 120	[key=0,
		edge_type=next,
		label=Next];
	124	[contract_name=Staking,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[133, 134, 135, 136]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	125	[contract_name=Staking,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_85(bool) = tx.origin == owner_txorigin13
\
TMP_86(None) = SOLIDITY_CALL require(bool)(TMP_85)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_85(bool) = tx.origin == owner_txorigin13
TMP_86(None) = SOLIDITY_CALL require(bool)(TMP_85)",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	124 -> 125	[key=0,
		edge_type=next,
		label=Next];
	126	[contract_name=Staking,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[135]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	125 -> 126	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=Staking,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_42.sol_Staking_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[133, 134, 135, 136]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	127 -> 124	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=Staking,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	129	[contract_name=Staking,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_88(bool) = tx.origin == owner_txorigin20
\
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_88(bool) = tx.origin == owner_txorigin20
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	128 -> 129	[key=0,
		edge_type=next,
		label=Next];
	130	[contract_name=Staking,
		function_fullname="bug_txorigin20(address)",
		label="buggy_42.sol_Staking_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	130 -> 128	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=Staking,
		function_fullname="constructor(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[150, 151, 152, 153, 154]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	132	[contract_name=Staking,
		function_fullname="constructor(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
token = Token(tokenContractAddress)

IRs:
TMP_90 = CONVERT tokenContractAddress to Token
token(\
Token) := TMP_90(Token)",
		node_expression="token = Token(tokenContractAddress)",
		node_info_vulnerabilities=None,
		node_irs="TMP_90 = CONVERT tokenContractAddress to Token
token(Token) := TMP_90(Token)",
		node_source_code_lines="[151]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	131 -> 132	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=Staking,
		function_fullname="constructor(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[152]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	132 -> 133	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=Staking,
		function_fullname="constructor(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
stakeTokens = 500 * 10 ** uint256(10)

IRs:
TMP_91 = CONVERT 10 to uint256
TMP_92(uint256) = \
10 ** TMP_91
TMP_93(uint256) = 500 * TMP_92
stakeTokens(uint256) := TMP_93(uint256)",
		node_expression="stakeTokens = 500 * 10 ** uint256(10)",
		node_info_vulnerabilities=None,
		node_irs="TMP_91 = CONVERT 10 to uint256
TMP_92(uint256) = 10 ** TMP_91
TMP_93(uint256) = 500 * TMP_92
stakeTokens(uint256) := TMP_93(uint256)",
		node_source_code_lines="[153]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	133 -> 134	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=Staking,
		function_fullname="constructor(address)",
		label="buggy_42.sol_Staking_constructor(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[150, 151, 152, 153, 154]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	135 -> 131	[key=0,
		edge_type=next,
		label=Next];
	136	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[155, 156, 157, 158]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	137	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_94(bool) = tx.origin == owner_txorigin14
\
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_94(bool) = tx.origin == owner_txorigin14
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_source_code_lines="[156]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_96 = CONVERT this to address
REF_31 -> BALANCE \
TMP_96
Transfer dest:_recipient value:REF_31",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_96 = CONVERT this to address
REF_31 -> BALANCE TMP_96
Transfer dest:_recipient value:REF_31",
		node_source_code_lines="[157]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_42.sol_Staking_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[155, 156, 157, 158]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	139 -> 136	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=Staking,
		function_fullname="startStaking()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[160, 161, 162, 163, 164, 165, 166]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	141	[contract_name=Staking,
		function_fullname="startStaking()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(token.balanceOf(msg.sender) >= stakeTokens + findOnePercent(stakeTokens))

IRs:
\
TMP_98(uint256) = HIGH_LEVEL_CALL, dest:token(Token), function:balanceOf, arguments:['msg.sender']  
TMP_99(uint256) = INTERNAL_\
CALL, Staking.findOnePercent(uint256)(stakeTokens)
TMP_100(uint256) = stakeTokens + TMP_99
TMP_101(bool) = TMP_98 >= TMP_100
TMP_\
102(None) = SOLIDITY_CALL require(bool)(TMP_101)",
		node_expression="require(bool)(token.balanceOf(msg.sender) >= stakeTokens + findOnePercent(stakeTokens))",
		node_info_vulnerabilities=None,
		node_irs="TMP_98(uint256) = HIGH_LEVEL_CALL, dest:token(Token), function:balanceOf, arguments:['msg.sender']  
TMP_99(uint256) = INTERNAL_\
CALL, Staking.findOnePercent(uint256)(stakeTokens)
TMP_100(uint256) = stakeTokens + TMP_99
TMP_101(bool) = TMP_98 >= TMP_100
TMP_\
102(None) = SOLIDITY_CALL require(bool)(TMP_101)",
		node_source_code_lines="[161]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=Staking,
		function_fullname="startStaking()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(token.transferFrom(msg.sender,address(this),stakeTokens + findOnePercent(stakeTokens)))

\
IRs:
TMP_103 = CONVERT this to address
TMP_104(uint256) = INTERNAL_CALL, Staking.findOnePercent(uint256)(stakeTokens)
TMP_105(uint256) = \
stakeTokens + TMP_104
TMP_106(bool) = HIGH_LEVEL_CALL, dest:token(Token), function:transferFrom, arguments:['msg.sender', 'TMP_103', '\
TMP_105']  
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_expression="require(bool)(token.transferFrom(msg.sender,address(this),stakeTokens + findOnePercent(stakeTokens)))",
		node_info_vulnerabilities=None,
		node_irs="TMP_103 = CONVERT this to address
TMP_104(uint256) = INTERNAL_CALL, Staking.findOnePercent(uint256)(stakeTokens)
TMP_105(uint256) = \
stakeTokens + TMP_104
TMP_106(bool) = HIGH_LEVEL_CALL, dest:token(Token), function:transferFrom, arguments:['msg.sender', 'TMP_103', '\
TMP_105']  
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	141 -> 142	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=Staking,
		function_fullname="startStaking()",
		label="Node Type: EXPRESSION

EXPRESSION:
staker[msg.sender].time = now

IRs:
REF_34(Staking.stake) -> staker[msg.sender]
REF_35(uint256) \
-> REF_34.time
REF_35 (->staker) := now(uint256)",
		node_expression="staker[msg.sender].time = now",
		node_info_vulnerabilities=None,
		node_irs="REF_34(Staking.stake) -> staker[msg.sender]
REF_35(uint256) -> REF_34.time
REF_35 (->staker) := now(uint256)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	142 -> 143	[key=0,
		edge_type=next,
		label=Next];
	144	[contract_name=Staking,
		function_fullname="startStaking()",
		label="Node Type: EXPRESSION

EXPRESSION:
staker[msg.sender].tokens = staker[msg.sender].tokens + stakeTokens

IRs:
REF_36(Staking.stake) \
-> staker[msg.sender]
REF_37(uint256) -> REF_36.tokens
REF_38(Staking.stake) -> staker[msg.sender]
REF_39(uint256) -> REF_38.tokens
\
TMP_108(uint256) = REF_39 + stakeTokens
REF_37 (->staker) := TMP_108(uint256)",
		node_expression="staker[msg.sender].tokens = staker[msg.sender].tokens + stakeTokens",
		node_info_vulnerabilities=None,
		node_irs="REF_36(Staking.stake) -> staker[msg.sender]
REF_37(uint256) -> REF_36.tokens
REF_38(Staking.stake) -> staker[msg.sender]
REF_39(\
uint256) -> REF_38.tokens
TMP_108(uint256) = REF_39 + stakeTokens
REF_37 (->staker) := TMP_108(uint256)",
		node_source_code_lines="[164]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=Staking,
		function_fullname="startStaking()",
		label="Node Type: EXPRESSION

EXPRESSION:
stakingstarted(msg.sender,staker[msg.sender].tokens,staker[msg.sender].time)

IRs:
REF_40(Staking.stake) \
-> staker[msg.sender]
REF_41(uint256) -> REF_40.tokens
REF_42(Staking.stake) -> staker[msg.sender]
REF_43(uint256) -> REF_42.time
\
Emit stakingstarted(msg.sender.REF_41.REF_43)",
		node_expression="stakingstarted(msg.sender,staker[msg.sender].tokens,staker[msg.sender].time)",
		node_info_vulnerabilities=None,
		node_irs="REF_40(Staking.stake) -> staker[msg.sender]
REF_41(uint256) -> REF_40.tokens
REF_42(Staking.stake) -> staker[msg.sender]
REF_43(\
uint256) -> REF_42.time
Emit stakingstarted(msg.sender.REF_41.REF_43)",
		node_source_code_lines="[165]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	144 -> 145	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=Staking,
		function_fullname="startStaking()",
		label="buggy_42.sol_Staking_startStaking()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[160, 161, 162, 163, 164, 165, 166]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	146 -> 140	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[167, 168, 169, 170]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	148	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_110(bool) = tx.origin == owner_txorigin30
\
TMP_111(None) = SOLIDITY_CALL require(bool)(TMP_110)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_110(bool) = tx.origin == owner_txorigin30
TMP_111(None) = SOLIDITY_CALL require(bool)(TMP_110)",
		node_source_code_lines="[168]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	147 -> 148	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_112 = CONVERT this to address
REF_45 -> \
BALANCE TMP_112
Transfer dest:_recipient value:REF_45",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_112 = CONVERT this to address
REF_45 -> BALANCE TMP_112
Transfer dest:_recipient value:REF_45",
		node_source_code_lines="[169]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	148 -> 149	[key=0,
		edge_type=next,
		label=Next];
	150	[contract_name=Staking,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_42.sol_Staking_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[167, 168, 169, 170]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	150 -> 147	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=Staking,
		function_fullname="redeem()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[172, 173, 174, 175, 176, 177, 178, 179, 180, 181]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	152	[contract_name=Staking,
		function_fullname="redeem()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(! lock)

IRs:
TMP_114 = ! lock 
TMP_115(None) = SOLIDITY_CALL require(bool)(TMP_\
114)",
		node_expression="require(bool)(! lock)",
		node_info_vulnerabilities=None,
		node_irs="TMP_114 = ! lock 
TMP_115(None) = SOLIDITY_CALL require(bool)(TMP_114)",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	151 -> 152	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=Staking,
		function_fullname="redeem()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(! staker[msg.sender].redeem)

IRs:
REF_46(Staking.stake) -> staker[msg.sender]
\
REF_47(bool) -> REF_46.redeem
TMP_116 = ! REF_47 
TMP_117(None) = SOLIDITY_CALL require(bool)(TMP_116)",
		node_expression="require(bool)(! staker[msg.sender].redeem)",
		node_info_vulnerabilities=None,
		node_irs="REF_46(Staking.stake) -> staker[msg.sender]
REF_47(bool) -> REF_46.redeem
TMP_116 = ! REF_47 
TMP_117(None) = SOLIDITY_CALL require(\
bool)(TMP_116)",
		node_source_code_lines="[174]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	152 -> 153	[key=0,
		edge_type=next,
		label=Next];
	154	[contract_name=Staking,
		function_fullname="redeem()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(staker[msg.sender].time + stakeTime <= now)

IRs:
REF_48(Staking.stake) -> staker[\
msg.sender]
REF_49(uint256) -> REF_48.time
TMP_118(uint256) = REF_49 + stakeTime
TMP_119(bool) = TMP_118 <= now
TMP_120(None) = \
SOLIDITY_CALL require(bool)(TMP_119)",
		node_expression="require(bool)(staker[msg.sender].time + stakeTime <= now)",
		node_info_vulnerabilities=None,
		node_irs="REF_48(Staking.stake) -> staker[msg.sender]
REF_49(uint256) -> REF_48.time
TMP_118(uint256) = REF_49 + stakeTime
TMP_119(bool) = \
TMP_118 <= now
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_source_code_lines="[175]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=Staking,
		function_fullname="redeem()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(token.transfer(msg.sender,staker[msg.sender].tokens))

IRs:
REF_51(Staking.stake) \
-> staker[msg.sender]
REF_52(uint256) -> REF_51.tokens
TMP_121(bool) = HIGH_LEVEL_CALL, dest:token(Token), function:transfer, arguments:['\
msg.sender', 'REF_52']  
TMP_122(None) = SOLIDITY_CALL require(bool)(TMP_121)",
		node_expression="require(bool)(token.transfer(msg.sender,staker[msg.sender].tokens))",
		node_info_vulnerabilities=None,
		node_irs="REF_51(Staking.stake) -> staker[msg.sender]
REF_52(uint256) -> REF_51.tokens
TMP_121(bool) = HIGH_LEVEL_CALL, dest:token(Token), \
function:transfer, arguments:['msg.sender', 'REF_52']  
TMP_122(None) = SOLIDITY_CALL require(bool)(TMP_121)",
		node_source_code_lines="[176]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=Staking,
		function_fullname="redeem()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(token.transferFrom(owner,msg.sender,staker[msg.sender].tokens * stakePercentage * \
100 / 10000))

IRs:
REF_54(Staking.stake) -> staker[msg.sender]
REF_55(uint256) -> REF_54.tokens
TMP_123(uint256) = REF_55 * stakePercentage
\
TMP_124(uint256) = TMP_123 * 100
TMP_125(uint256) = TMP_124 / 10000
TMP_126(bool) = HIGH_LEVEL_CALL, dest:token(Token), function:\
transferFrom, arguments:['owner', 'msg.sender', 'TMP_125']  
TMP_127(None) = SOLIDITY_CALL require(bool)(TMP_126)",
		node_expression="require(bool)(token.transferFrom(owner,msg.sender,staker[msg.sender].tokens * stakePercentage * 100 / 10000))",
		node_info_vulnerabilities=None,
		node_irs="REF_54(Staking.stake) -> staker[msg.sender]
REF_55(uint256) -> REF_54.tokens
TMP_123(uint256) = REF_55 * stakePercentage
TMP_124(\
uint256) = TMP_123 * 100
TMP_125(uint256) = TMP_124 / 10000
TMP_126(bool) = HIGH_LEVEL_CALL, dest:token(Token), function:transferFrom, \
arguments:['owner', 'msg.sender', 'TMP_125']  
TMP_127(None) = SOLIDITY_CALL require(bool)(TMP_126)",
		node_source_code_lines="[177]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	155 -> 156	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=Staking,
		function_fullname="redeem()",
		label="Node Type: EXPRESSION

EXPRESSION:
tokensRedeemed(msg.sender,staker[msg.sender].tokens,staker[msg.sender].tokens * stakePercentage * \
100 / 10000)

IRs:
REF_56(Staking.stake) -> staker[msg.sender]
REF_57(uint256) -> REF_56.tokens
REF_58(Staking.stake) -> staker[\
msg.sender]
REF_59(uint256) -> REF_58.tokens
TMP_128(uint256) = REF_59 * stakePercentage
TMP_129(uint256) = TMP_128 * 100
TMP_130(\
uint256) = TMP_129 / 10000
Emit tokensRedeemed(msg.sender.REF_57.TMP_130)",
		node_expression="tokensRedeemed(msg.sender,staker[msg.sender].tokens,staker[msg.sender].tokens * stakePercentage * 100 / 10000)",
		node_info_vulnerabilities=None,
		node_irs="REF_56(Staking.stake) -> staker[msg.sender]
REF_57(uint256) -> REF_56.tokens
REF_58(Staking.stake) -> staker[msg.sender]
REF_59(\
uint256) -> REF_58.tokens
TMP_128(uint256) = REF_59 * stakePercentage
TMP_129(uint256) = TMP_128 * 100
TMP_130(uint256) = TMP_129 / \
10000
Emit tokensRedeemed(msg.sender.REF_57.TMP_130)",
		node_source_code_lines="[178]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	156 -> 157	[key=0,
		edge_type=next,
		label=Next];
	158	[contract_name=Staking,
		function_fullname="redeem()",
		label="Node Type: EXPRESSION

EXPRESSION:
staker[msg.sender].redeem = true

IRs:
REF_60(Staking.stake) -> staker[msg.sender]
REF_61(bool) \
-> REF_60.redeem
REF_61 (->staker) := True(bool)",
		node_expression="staker[msg.sender].redeem = true",
		node_info_vulnerabilities=None,
		node_irs="REF_60(Staking.stake) -> staker[msg.sender]
REF_61(bool) -> REF_60.redeem
REF_61 (->staker) := True(bool)",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	157 -> 158	[key=0,
		edge_type=next,
		label=Next];
	159	[contract_name=Staking,
		function_fullname="redeem()",
		label="Node Type: EXPRESSION

EXPRESSION:
staker[msg.sender].tokens = 0

IRs:
REF_62(Staking.stake) -> staker[msg.sender]
REF_63(uint256) \
-> REF_62.tokens
REF_63 (->staker) := 0(uint256)",
		node_expression="staker[msg.sender].tokens = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_62(Staking.stake) -> staker[msg.sender]
REF_63(uint256) -> REF_62.tokens
REF_63 (->staker) := 0(uint256)",
		node_source_code_lines="[180]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	158 -> 159	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=Staking,
		function_fullname="redeem()",
		label="buggy_42.sol_Staking_redeem()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[172, 173, 174, 175, 176, 177, 178, 179, 180, 181]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	160 -> 151	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=Staking,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[182, 183, 184]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	162	[contract_name=Staking,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_132(bool) = tx.origin == owner_txorigin8
\
TMP_133(None) = SOLIDITY_CALL require(bool)(TMP_132)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_132(bool) = tx.origin == owner_txorigin8
TMP_133(None) = SOLIDITY_CALL require(bool)(TMP_132)",
		node_source_code_lines="[183]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	161 -> 162	[key=0,
		edge_type=next,
		label=Next];
	163	[contract_name=Staking,
		function_fullname="bug_txorigin8(address)",
		label="buggy_42.sol_Staking_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[182, 183, 184]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	163 -> 161	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=Staking,
		function_fullname="changeStakeTokens(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[186, 187, 188]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	166	[contract_name=Staking,
		function_fullname="changeStakeTokens(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[186]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	164 -> 166	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=Staking,
		function_fullname="changeStakeTokens(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
stakeTokens = _NewTokensThreshold * 10 ** uint256(10)

IRs:
TMP_134 = CONVERT 10 to uint256
TMP_\
135(uint256) = 10 ** TMP_134
TMP_136(uint256) = _NewTokensThreshold * TMP_135
stakeTokens(uint256) := TMP_136(uint256)",
		node_expression="stakeTokens = _NewTokensThreshold * 10 ** uint256(10)",
		node_info_vulnerabilities=None,
		node_irs="TMP_134 = CONVERT 10 to uint256
TMP_135(uint256) = 10 ** TMP_134
TMP_136(uint256) = _NewTokensThreshold * TMP_135
stakeTokens(uint256) := \
TMP_136(uint256)",
		node_source_code_lines="[187]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	166 -> 165	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=Staking,
		function_fullname="changeStakeTokens(uint256)",
		label="buggy_42.sol_Staking_changeStakeTokens(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[186, 187, 188]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	167 -> 164	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=Staking,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[189, 190, 191, 192]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	169	[contract_name=Staking,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_138(bool) = tx.origin == owner_txorigin39
\
TMP_139(None) = SOLIDITY_CALL require(bool)(TMP_138)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_138(bool) = tx.origin == owner_txorigin39
TMP_139(None) = SOLIDITY_CALL require(bool)(TMP_138)",
		node_source_code_lines="[190]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	168 -> 169	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=Staking,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_64(None) -> to.call
REF_65(None) -> REF_64.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="REF_64(None) -> to.call
REF_65(None) -> REF_64.value",
		node_source_code_lines="[191]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	169 -> 170	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=Staking,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_42.sol_Staking_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[189, 190, 191, 192]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	171 -> 168	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=Staking,
		function_fullname="changeStakeTime(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[194, 195, 196]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	174	[contract_name=Staking,
		function_fullname="changeStakeTime(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[194]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	172 -> 174	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=Staking,
		function_fullname="changeStakeTime(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
stakeTime = _newStakeTime

IRs:
stakeTime(uint256) := _newStakeTime(uint256)",
		node_expression="stakeTime = _newStakeTime",
		node_info_vulnerabilities=None,
		node_irs="stakeTime(uint256) := _newStakeTime(uint256)",
		node_source_code_lines="[195]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	174 -> 173	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=Staking,
		function_fullname="changeStakeTime(uint256)",
		label="buggy_42.sol_Staking_changeStakeTime(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[194, 195, 196]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	175 -> 172	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=Staking,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[197, 198, 199]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	177	[contract_name=Staking,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_142(bool) = tx.origin == owner_txorigin36
\
TMP_143(None) = SOLIDITY_CALL require(bool)(TMP_142)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_142(bool) = tx.origin == owner_txorigin36
TMP_143(None) = SOLIDITY_CALL require(bool)(TMP_142)",
		node_source_code_lines="[198]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	176 -> 177	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=Staking,
		function_fullname="bug_txorigin36(address)",
		label="buggy_42.sol_Staking_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[197, 198, 199]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	178 -> 176	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=Staking,
		function_fullname="changeStakingPercentage(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	181	[contract_name=Staking,
		function_fullname="changeStakingPercentage(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[201]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	179 -> 181	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=Staking,
		function_fullname="changeStakingPercentage(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
stakePercentage = _newStakePercentage

IRs:
stakePercentage(uint256) := _newStakePercentage(uint256)",
		node_expression="stakePercentage = _newStakePercentage",
		node_info_vulnerabilities=None,
		node_irs="stakePercentage(uint256) := _newStakePercentage(uint256)",
		node_source_code_lines="[202]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	181 -> 180	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=Staking,
		function_fullname="changeStakingPercentage(uint256)",
		label="buggy_42.sol_Staking_changeStakingPercentage(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	182 -> 179	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=Staking,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[205, 206, 207, 208]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	184	[contract_name=Staking,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_145(bool) = tx.origin == owner_txorigin35
\
TMP_146(None) = SOLIDITY_CALL require(bool)(TMP_145)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_145(bool) = tx.origin == owner_txorigin35
TMP_146(None) = SOLIDITY_CALL require(bool)(TMP_145)",
		node_source_code_lines="[206]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	183 -> 184	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=Staking,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_66(None) -> to.call
REF_67(None) -> REF_66.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="REF_66(None) -> to.call
REF_67(None) -> REF_66.value",
		node_source_code_lines="[207]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	184 -> 185	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=Staking,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_42.sol_Staking_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[205, 206, 207, 208]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	186 -> 183	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=Staking,
		function_fullname="lockWithdrawals()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[210, 211, 212]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	189	[contract_name=Staking,
		function_fullname="lockWithdrawals()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[210]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	187 -> 189	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=Staking,
		function_fullname="lockWithdrawals()",
		label="Node Type: EXPRESSION

EXPRESSION:
lock = true

IRs:
lock(bool) := True(bool)",
		node_expression="lock = true",
		node_info_vulnerabilities=None,
		node_irs="lock(bool) := True(bool)",
		node_source_code_lines="[211]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	189 -> 188	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=Staking,
		function_fullname="lockWithdrawals()",
		label="buggy_42.sol_Staking_lockWithdrawals()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[210, 211, 212]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	190 -> 187	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=Staking,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[213, 214, 215]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	192	[contract_name=Staking,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_149(bool) = tx.origin == owner_txorigin40
\
TMP_150(None) = SOLIDITY_CALL require(bool)(TMP_149)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_149(bool) = tx.origin == owner_txorigin40
TMP_150(None) = SOLIDITY_CALL require(bool)(TMP_149)",
		node_source_code_lines="[214]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	191 -> 192	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=Staking,
		function_fullname="bug_txorigin40(address)",
		label="buggy_42.sol_Staking_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[213, 214, 215]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	193 -> 191	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=Staking,
		function_fullname="findOnePercent(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[217, 218, 219, 220, 221]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	195	[contract_name=Staking,
		function_fullname="findOnePercent(uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
roundValue = value.ceil(basePercent)

IRs:
TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.ceil(uint256,uint256), arguments:['value', 'basePercent'] 
roundValue(uint256) := TMP_151(uint256)",
		node_expression="roundValue = value.ceil(basePercent)",
		node_info_vulnerabilities=None,
		node_irs="TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.ceil(uint256,uint256), arguments:['value', 'basePercent'] 
roundValue(\
uint256) := TMP_151(uint256)",
		node_source_code_lines="[218]",
		node_type="NEW VARIABLE",
		source_file="buggy_42.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=Staking,
		function_fullname="findOnePercent(uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
onePercent = roundValue.mul(basePercent).div(10000)

IRs:
TMP_152(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['roundValue', 'basePercent'] 
TMP_153(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_152', '10000'] 
onePercent(uint256) := TMP_153(uint256)",
		node_expression="onePercent = roundValue.mul(basePercent).div(10000)",
		node_info_vulnerabilities=None,
		node_irs="TMP_152(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['roundValue', 'basePercent'] 
\
TMP_153(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_152', '10000'] 
onePercent(\
uint256) := TMP_153(uint256)",
		node_source_code_lines="[219]",
		node_type="NEW VARIABLE",
		source_file="buggy_42.sol"];
	195 -> 196	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=Staking,
		function_fullname="findOnePercent(uint256)",
		label="Node Type: RETURN

EXPRESSION:
onePercent

IRs:
RETURN onePercent",
		node_expression=onePercent,
		node_info_vulnerabilities=None,
		node_irs="RETURN onePercent",
		node_source_code_lines="[220]",
		node_type=RETURN,
		source_file="buggy_42.sol"];
	196 -> 197	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=Staking,
		function_fullname="findOnePercent(uint256)",
		label="buggy_42.sol_Staking_findOnePercent(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[217, 218, 219, 220, 221]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	198 -> 194	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=Staking,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	200	[contract_name=Staking,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_154(bool) = tx.origin == owner_txorigin33
\
TMP_155(None) = SOLIDITY_CALL require(bool)(TMP_154)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="TMP_154(bool) = tx.origin == owner_txorigin33
TMP_155(None) = SOLIDITY_CALL require(bool)(TMP_154)",
		node_source_code_lines="[223]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	199 -> 200	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=Staking,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[224]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	200 -> 201	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=Staking,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_42.sol_Staking_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	202 -> 199	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=Staking,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
basePercent = 200

IRs:
basePercent(uint256) := 200(uint256)",
		node_expression="basePercent = 200",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="basePercent(uint256) := 200(uint256)",
		node_source_code_lines="[116]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_42.sol"];
	204	[contract_name=Staking,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
stakeTime = 1814400

IRs:
stakeTime(uint256) := 1814400(uint256)",
		node_expression="stakeTime = 1814400",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="stakeTime(uint256) := 1814400(uint256)",
		node_source_code_lines="[122]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_42.sol"];
	203 -> 204	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=Staking,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
stakePercentage = 30

IRs:
stakePercentage(uint256) := 30(uint256)",
		node_expression="stakePercentage = 30",
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs="stakePercentage(uint256) := 30(uint256)",
		node_source_code_lines="[127]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_42.sol"];
	204 -> 205	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=Staking,
		function_fullname="slitherConstructorVariables()",
		label="buggy_42.sol_Staking_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [134, 135, 136, 137, 129, 130, 131, 132, 20, 21, 22, 23, 223, 224, 225, 226, 214, 215, 216, 206, 207, 208, 209, 198, \
199, 200, 190, 191, 192, 193, 183, 184, 185, 168, 169, 170, 171, 156, 157, 158, 159, 91, 92, 93, 94, 86, 87, 88, 89, 82, 83, 84, \
41, 42, 43, 44, 29, 30, 31, 145, 146, 147, 124, 125, 126, 127, 119, 120, 121, 122, 113, 114, 115, 116, 108, 109, 110, 111, 103, \
104, 105, 106, 98, 99, 100, 101, 14, 15, 16, 17, 8, 9, 10, 11, 12], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, \
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, \
149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, \
175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, \
201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	206 -> 203	[key=0,
		edge_type=next,
		label=Next];
	207	[contract_name=Staking,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=ENTRY_POINT,
		source_file="buggy_42.sol"];
	208	[contract_name=Staking,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner || msg.sender == address(this))

IRs:
TMP_157(bool) = msg.sender == \
owner
TMP_158 = CONVERT this to address
TMP_159(bool) = msg.sender == TMP_158
TMP_160(bool) = TMP_157 || TMP_159
TMP_161(None) = \
SOLIDITY_CALL require(bool)(TMP_160)",
		node_expression="require(bool)(msg.sender == owner || msg.sender == address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_157(bool) = msg.sender == owner
TMP_158 = CONVERT this to address
TMP_159(bool) = msg.sender == TMP_158
TMP_160(bool) = TMP_\
157 || TMP_159
TMP_161(None) = SOLIDITY_CALL require(bool)(TMP_160)",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_42.sol"];
	207 -> 208	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=Staking,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[34]",
		node_type=_,
		source_file="buggy_42.sol"];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	210	[contract_name=Staking,
		function_fullname="onlyOwner()",
		label="buggy_42.sol_Staking_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=FUNCTION_NAME,
		source_file="buggy_42.sol"];
	210 -> 207	[key=0,
		edge_type=next,
		label=Next];
}
