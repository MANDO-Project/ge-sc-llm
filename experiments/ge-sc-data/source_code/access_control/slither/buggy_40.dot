digraph "" {
	node [label="\N"];
	0	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33, 34, 35]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	1	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a + b

IRs:
TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_source_code_lines="[31]",
		node_type="NEW VARIABLE",
		source_file="buggy_40.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(c >= a,SafeMath: addition overflow)

IRs:
TMP_1(bool) = c >= a
TMP_2(None) = \
SOLIDITY_CALL require(bool,string)(TMP_1,SafeMath: addition overflow)",
		node_expression="require(bool,string)(c >= a,SafeMath: addition overflow)",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(bool) = c >= a
TMP_2(None) = SOLIDITY_CALL require(bool,string)(TMP_1,SafeMath: addition overflow)",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[34]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	2 -> 3	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_40.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33, 34, 35]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	4 -> 0	[key=0,
		edge_type=next,
		label=Next];
	5	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49, 50, 51]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	6	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b <= a,SafeMath: subtraction overflow)

IRs:
TMP_3(bool) = b <= a
TMP_4(\
None) = SOLIDITY_CALL require(bool,string)(TMP_3,SafeMath: subtraction overflow)",
		node_expression="require(bool,string)(b <= a,SafeMath: subtraction overflow)",
		node_info_vulnerabilities=None,
		node_irs="TMP_3(bool) = b <= a
TMP_4(None) = SOLIDITY_CALL require(bool,string)(TMP_3,SafeMath: subtraction overflow)",
		node_source_code_lines="[47]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a - b

IRs:
TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_source_code_lines="[48]",
		node_type="NEW VARIABLE",
		source_file="buggy_40.sol"];
	6 -> 7	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[50]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	7 -> 8	[key=0,
		edge_type=next,
		label=Next];
	9	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_40.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49, 50, 51]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	9 -> 5	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	11	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a == 0

IRs:
TMP_6(bool) = a == 0
CONDITION TMP_6",
		node_expression="a == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(bool) = a == 0
CONDITION TMP_6",
		node_source_code_lines="[66]",
		node_type=IF,
		source_file="buggy_40.sol"];
	10 -> 11	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
0

IRs:
RETURN 0",
		node_expression=0,
		node_info_vulnerabilities=None,
		node_irs="RETURN 0",
		node_source_code_lines="[67]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	11 -> 12	[key=0,
		edge_type=if_true,
		label=True];
	13	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[66, 67, 68]",
		node_type=END_IF,
		source_file="buggy_40.sol"];
	11 -> 13	[key=0,
		edge_type=if_false,
		label=False];
	14	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a * b

IRs:
TMP_7(uint256) = a * b
c(uint256) := TMP_7(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_7(uint256) = a * b
c(uint256) := TMP_7(uint256)",
		node_source_code_lines="[70]",
		node_type="NEW VARIABLE",
		source_file="buggy_40.sol"];
	13 -> 14	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(c / a == b,SafeMath: multiplication overflow)

IRs:
TMP_8(uint256) = c / \
a
TMP_9(bool) = TMP_8 == b
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,SafeMath: multiplication overflow)",
		node_expression="require(bool,string)(c / a == b,SafeMath: multiplication overflow)",
		node_info_vulnerabilities=None,
		node_irs="TMP_8(uint256) = c / a
TMP_9(bool) = TMP_8 == b
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,SafeMath: multiplication \
overflow)",
		node_source_code_lines="[71]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	14 -> 15	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[73]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	15 -> 16	[key=0,
		edge_type=next,
		label=Next];
	17	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_40.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	17 -> 10	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[87, 88, 89, 90, 91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	19	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b > 0,SafeMath: division by zero)

IRs:
TMP_11(bool) = b > 0
TMP_12(None) = \
SOLIDITY_CALL require(bool,string)(TMP_11,SafeMath: division by zero)",
		node_expression="require(bool,string)(b > 0,SafeMath: division by zero)",
		node_info_vulnerabilities=None,
		node_irs="TMP_11(bool) = b > 0
TMP_12(None) = SOLIDITY_CALL require(bool,string)(TMP_11,SafeMath: division by zero)",
		node_source_code_lines="[89]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	18 -> 19	[key=0,
		edge_type=next,
		label=Next];
	20	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a / b

IRs:
TMP_13(uint256) = a / b
c(uint256) := TMP_13(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_13(uint256) = a / b
c(uint256) := TMP_13(uint256)",
		node_source_code_lines="[90]",
		node_type="NEW VARIABLE",
		source_file="buggy_40.sol"];
	19 -> 20	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[93]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	20 -> 21	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_40.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[87, 88, 89, 90, 91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	22 -> 18	[key=0,
		edge_type=next,
		label=Next];
	23	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	24	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b != 0,SafeMath: modulo by zero)

IRs:
TMP_14(bool) = b != 0
TMP_15(None) = \
SOLIDITY_CALL require(bool,string)(TMP_14,SafeMath: modulo by zero)",
		node_expression="require(bool,string)(b != 0,SafeMath: modulo by zero)",
		node_info_vulnerabilities=None,
		node_irs="TMP_14(bool) = b != 0
TMP_15(None) = SOLIDITY_CALL require(bool,string)(TMP_14,SafeMath: modulo by zero)",
		node_source_code_lines="[108]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a % b

IRs:
TMP_16(uint256) = a % b
RETURN TMP_16",
		node_expression="a % b",
		node_info_vulnerabilities=None,
		node_irs="TMP_16(uint256) = a % b
RETURN TMP_16",
		node_source_code_lines="[109]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	24 -> 25	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="buggy_40.sol_SafeMath_mod(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[107, 108, 109, 110]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	26 -> 23	[key=0,
		edge_type=next,
		label=Next];
	27	[contract_name=IERC20,
		function_fullname="totalSupply()",
		label="buggy_40.sol_IERC20_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[122]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	28	[contract_name=IERC20,
		function_fullname="balanceOf(address)",
		label="buggy_40.sol_IERC20_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[127]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	29	[contract_name=IERC20,
		function_fullname="transfer(address,uint256)",
		label="buggy_40.sol_IERC20_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[136]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	30	[contract_name=IERC20,
		function_fullname="allowance(address,address)",
		label="buggy_40.sol_IERC20_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[145]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	31	[contract_name=IERC20,
		function_fullname="approve(address,uint256)",
		label="buggy_40.sol_IERC20_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	32	[contract_name=IERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_40.sol_IERC20_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[172]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	33	[contract_name=ERC20,
		function_fullname="totalSupply()",
		label="buggy_40.sol_ERC20_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[122]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	34	[contract_name=ERC20,
		function_fullname="balanceOf(address)",
		label="buggy_40.sol_ERC20_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[127]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	35	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="buggy_40.sol_ERC20_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[136]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	36	[contract_name=ERC20,
		function_fullname="allowance(address,address)",
		label="buggy_40.sol_ERC20_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[145]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	37	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="buggy_40.sol_ERC20_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	38	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_40.sol_ERC20_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[172]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	39	[contract_name=ERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[216, 217, 218, 219]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	40	[contract_name=ERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_17(bool) = tx.origin == owner_txorigin17
\
TMP_18(None) = SOLIDITY_CALL require(bool)(TMP_17)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_17(bool) = tx.origin == owner_txorigin17
TMP_18(None) = SOLIDITY_CALL require(bool)(TMP_17)",
		node_source_code_lines="[217]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	39 -> 40	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=ERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[218]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	40 -> 41	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=ERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_40.sol_ERC20_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[216, 217, 218, 219]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	42 -> 39	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=ERC20,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	44	[contract_name=ERC20,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_20(bool) = tx.origin == owner_txorigin37
\
TMP_21(None) = SOLIDITY_CALL require(bool)(TMP_20)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_20(bool) = tx.origin == owner_txorigin37
TMP_21(None) = SOLIDITY_CALL require(bool)(TMP_20)",
		node_source_code_lines="[223]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	43 -> 44	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=ERC20,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[224]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	44 -> 45	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=ERC20,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_40.sol_ERC20_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	46 -> 43	[key=0,
		edge_type=next,
		label=Next];
	47	[contract_name=ERC20,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[228, 229, 230, 231]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	48	[contract_name=ERC20,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_23(bool) = tx.origin == owner_txorigin3
\
TMP_24(None) = SOLIDITY_CALL require(bool)(TMP_23)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_23(bool) = tx.origin == owner_txorigin3
TMP_24(None) = SOLIDITY_CALL require(bool)(TMP_23)",
		node_source_code_lines="[229]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	47 -> 48	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=ERC20,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_2(None) -> to.call
REF_3(None) -> REF_2.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_2(None) -> to.call
REF_3(None) -> REF_2.value",
		node_source_code_lines="[230]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	48 -> 49	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=ERC20,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_40.sol_ERC20_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[228, 229, 230, 231]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	50 -> 47	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=ERC20,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[237, 238, 239]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	52	[contract_name=ERC20,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply

IRs:
RETURN _totalSupply",
		node_expression=_totalSupply,
		node_info_vulnerabilities=None,
		node_irs="RETURN _totalSupply",
		node_source_code_lines="[238]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=ERC20,
		function_fullname="totalSupply()",
		label="buggy_40.sol_ERC20_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[237, 238, 239]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	53 -> 51	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[240, 241, 242, 243]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	55	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_26(bool) = tx.origin == owner_txorigin26
\
TMP_27(None) = SOLIDITY_CALL require(bool)(TMP_26)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_26(bool) = tx.origin == owner_txorigin26
TMP_27(None) = SOLIDITY_CALL require(bool)(TMP_26)",
		node_source_code_lines="[241]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	54 -> 55	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_28 = CONVERT this to address
REF_5 -> BALANCE \
TMP_28
Transfer dest:_recipient value:REF_5",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_28 = CONVERT this to address
REF_5 -> BALANCE TMP_28
Transfer dest:_recipient value:REF_5",
		node_source_code_lines="[242]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_40.sol_ERC20_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[240, 241, 242, 243]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	57 -> 54	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=ERC20,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[248, 249, 250]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	59	[contract_name=ERC20,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
_balances[account]

IRs:
REF_6(uint256) -> _balances[account]
RETURN REF_6",
		node_expression="_balances[account]",
		node_info_vulnerabilities=None,
		node_irs="REF_6(uint256) -> _balances[account]
RETURN REF_6",
		node_source_code_lines="[249]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	58 -> 59	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=ERC20,
		function_fullname="balanceOf(address)",
		label="buggy_40.sol_ERC20_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[248, 249, 250]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	60 -> 58	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=ERC20,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	62	[contract_name=ERC20,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_30(bool) = tx.origin == owner_txorigin20
\
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_30(bool) = tx.origin == owner_txorigin20
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)",
		node_source_code_lines="[252]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	61 -> 62	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=ERC20,
		function_fullname="bug_txorigin20(address)",
		label="buggy_40.sol_ERC20_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	63 -> 61	[key=0,
		edge_type=next,
		label=Next];
	64	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[263, 264, 265, 266]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	65	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(msg.sender,recipient,amount)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(\
msg.sender,recipient,amount)",
		node_expression="_transfer(msg.sender,recipient,amount)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(msg.sender,recipient,amount)",
		node_source_code_lines="[264]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	64 -> 65	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[265]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	65 -> 66	[key=0,
		edge_type=next,
		label=Next];
	67	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="buggy_40.sol_ERC20_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[263, 264, 265, 266]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	67 -> 64	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=ERC20,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[267, 268, 269]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	69	[contract_name=ERC20,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_33(bool) = tx.origin == owner_txorigin32
\
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_33(bool) = tx.origin == owner_txorigin32
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	68 -> 69	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=ERC20,
		function_fullname="bug_txorigin32(address)",
		label="buggy_40.sol_ERC20_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[267, 268, 269]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	70 -> 68	[key=0,
		edge_type=next,
		label=Next];
	71	[contract_name=ERC20,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[274, 275, 276]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	72	[contract_name=ERC20,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
_allowances[owner][spender]

IRs:
REF_7(mapping(address => uint256)) -> _allowances[owner]
REF_8(\
uint256) -> REF_7[spender]
RETURN REF_8",
		node_expression="_allowances[owner][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_7(mapping(address => uint256)) -> _allowances[owner]
REF_8(uint256) -> REF_7[spender]
RETURN REF_8",
		node_source_code_lines="[275]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	71 -> 72	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=ERC20,
		function_fullname="allowance(address,address)",
		label="buggy_40.sol_ERC20_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[274, 275, 276]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	73 -> 71	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[277, 278, 279, 280]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	75	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_35(bool) = tx.origin == owner_txorigin38
\
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_35(bool) = tx.origin == owner_txorigin38
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_source_code_lines="[278]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	74 -> 75	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_37 = CONVERT this to address
REF_10 -> BALANCE \
TMP_37
Transfer dest:_recipient value:REF_10",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_37 = CONVERT this to address
REF_10 -> BALANCE TMP_37
Transfer dest:_recipient value:REF_10",
		node_source_code_lines="[279]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	75 -> 76	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_40.sol_ERC20_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[277, 278, 279, 280]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	77 -> 74	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[289, 290, 291, 292]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	79	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,value)

IRs:
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,value)",
		node_expression="_approve(msg.sender,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._approve(address,address,uint256)(msg.sender,spender,value)",
		node_source_code_lines="[290]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	78 -> 79	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[291]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	79 -> 80	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="buggy_40.sol_ERC20_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[289, 290, 291, 292]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	81 -> 78	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=ERC20,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	83	[contract_name=ERC20,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_40(bool) = tx.origin == owner_txorigin4
\
TMP_41(None) = SOLIDITY_CALL require(bool)(TMP_40)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_40(bool) = tx.origin == owner_txorigin4
TMP_41(None) = SOLIDITY_CALL require(bool)(TMP_40)",
		node_source_code_lines="[294]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	82 -> 83	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=ERC20,
		function_fullname="bug_txorigin4(address)",
		label="buggy_40.sol_ERC20_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	84 -> 82	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[309, 310, 311, 312, 313]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	86	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(sender,recipient,amount)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(\
sender,recipient,amount)",
		node_expression="_transfer(sender,recipient,amount)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(sender,recipient,amount)",
		node_source_code_lines="[310]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	85 -> 86	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(sender,msg.sender,_allowances[sender][msg.sender].sub(amount))

IRs:
REF_11(mapping(\
address => uint256)) -> _allowances[sender]
REF_12(uint256) -> REF_11[msg.sender]
TMP_43(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_12', 'amount'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(sender,\
msg.sender,TMP_43)",
		node_expression="_approve(sender,msg.sender,_allowances[sender][msg.sender].sub(amount))",
		node_info_vulnerabilities=None,
		node_irs="REF_11(mapping(address => uint256)) -> _allowances[sender]
REF_12(uint256) -> REF_11[msg.sender]
TMP_43(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_12', 'amount'] 
INTERNAL_CALL, ERC20._approve(address,address,\
uint256)(sender,msg.sender,TMP_43)",
		node_source_code_lines="[311]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	86 -> 87	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[312]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_40.sol_ERC20_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[309, 310, 311, 312, 313]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	89 -> 85	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=ERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[314, 315, 316, 317]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	91	[contract_name=ERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_45(bool) = tx.origin == owner_txorigin7
\
TMP_46(None) = SOLIDITY_CALL require(bool)(TMP_45)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_45(bool) = tx.origin == owner_txorigin7
TMP_46(None) = SOLIDITY_CALL require(bool)(TMP_45)",
		node_source_code_lines="[315]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	90 -> 91	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=ERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_14(None) -> to.call
REF_15(None) -> REF_14.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_14(None) -> to.call
REF_15(None) -> REF_14.value",
		node_source_code_lines="[316]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	91 -> 92	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=ERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_40.sol_ERC20_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[314, 315, 316, 317]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	93 -> 90	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=ERC20,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[331, 332, 333, 334]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	95	[contract_name=ERC20,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowances[msg.sender][spender].add(addedValue))

IRs:
REF_16(mapping(\
address => uint256)) -> _allowances[msg.sender]
REF_17(uint256) -> REF_16[spender]
TMP_48(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_17', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,TMP_48)",
		node_expression="_approve(msg.sender,spender,_allowances[msg.sender][spender].add(addedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_16(mapping(address => uint256)) -> _allowances[msg.sender]
REF_17(uint256) -> REF_16[spender]
TMP_48(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_17', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_48)",
		node_source_code_lines="[332]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	94 -> 95	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=ERC20,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[333]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	95 -> 96	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=ERC20,
		function_fullname="increaseAllowance(address,uint256)",
		label="buggy_40.sol_ERC20_increaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[331, 332, 333, 334]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	97 -> 94	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=ERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	99	[contract_name=ERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_50(bool) = tx.origin == owner_txorigin23
\
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_50(bool) = tx.origin == owner_txorigin23
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_source_code_lines="[336]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	98 -> 99	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=ERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_19(None) -> to.call
REF_20(None) -> REF_19.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_19(None) -> to.call
REF_20(None) -> REF_19.value",
		node_source_code_lines="[337]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	99 -> 100	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=ERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_40.sol_ERC20_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	101 -> 98	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=ERC20,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[354, 355, 356, 357]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	103	[contract_name=ERC20,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowances[msg.sender][spender].sub(subtractedValue))

IRs:
REF_\
21(mapping(address => uint256)) -> _allowances[msg.sender]
REF_22(uint256) -> REF_21[spender]
TMP_53(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_22', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_53)",
		node_expression="_approve(msg.sender,spender,_allowances[msg.sender][spender].sub(subtractedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_21(mapping(address => uint256)) -> _allowances[msg.sender]
REF_22(uint256) -> REF_21[spender]
TMP_53(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_22', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_53)",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=ERC20,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[356]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=ERC20,
		function_fullname="decreaseAllowance(address,uint256)",
		label="buggy_40.sol_ERC20_decreaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[354, 355, 356, 357]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	105 -> 102	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[358, 359, 360, 361]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	107	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_55(bool) = tx.origin == owner_txorigin14
\
TMP_56(None) = SOLIDITY_CALL require(bool)(TMP_55)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_55(bool) = tx.origin == owner_txorigin14
TMP_56(None) = SOLIDITY_CALL require(bool)(TMP_55)",
		node_source_code_lines="[359]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	106 -> 107	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_57 = CONVERT this to address
REF_25 -> BALANCE \
TMP_57
Transfer dest:_recipient value:REF_25",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_57 = CONVERT this to address
REF_25 -> BALANCE TMP_57
Transfer dest:_recipient value:REF_25",
		node_source_code_lines="[360]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	107 -> 108	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_40.sol_ERC20_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[358, 359, 360, 361]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	109 -> 106	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[377, 378, 379, 380, 381, 382, 383, 384]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	111	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(sender != address(0),ERC20: transfer from the zero address)

IRs:
TMP_59 = \
CONVERT 0 to address
TMP_60(bool) = sender != TMP_59
TMP_61(None) = SOLIDITY_CALL require(bool,string)(TMP_60,ERC20: transfer from \
the zero address)",
		node_expression="require(bool,string)(sender != address(0),ERC20: transfer from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_59 = CONVERT 0 to address
TMP_60(bool) = sender != TMP_59
TMP_61(None) = SOLIDITY_CALL require(bool,string)(TMP_60,ERC20: transfer \
from the zero address)",
		node_source_code_lines="[378]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	110 -> 111	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(recipient != address(0),ERC20: transfer to the zero address)

IRs:
TMP_62 = \
CONVERT 0 to address
TMP_63(bool) = recipient != TMP_62
TMP_64(None) = SOLIDITY_CALL require(bool,string)(TMP_63,ERC20: transfer \
to the zero address)",
		node_expression="require(bool,string)(recipient != address(0),ERC20: transfer to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_62 = CONVERT 0 to address
TMP_63(bool) = recipient != TMP_62
TMP_64(None) = SOLIDITY_CALL require(bool,string)(TMP_63,ERC20: \
transfer to the zero address)",
		node_source_code_lines="[379]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	111 -> 112	[key=0,
		edge_type=next,
		label=Next];
	113	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[sender] = _balances[sender].sub(amount)

IRs:
REF_26(uint256) -> _balances[sender]
\
REF_27(uint256) -> _balances[sender]
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_27', 'amount'] 
REF_26 (->_balances) := TMP_65(uint256)",
		node_expression="_balances[sender] = _balances[sender].sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_26(uint256) -> _balances[sender]
REF_27(uint256) -> _balances[sender]
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_27', 'amount'] 
REF_26 (->_balances) := TMP_65(uint256)",
		node_source_code_lines="[381]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[recipient] = _balances[recipient].add(amount)

IRs:
REF_29(uint256) -> _balances[recipient]
\
REF_30(uint256) -> _balances[recipient]
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_30', 'amount'] 
REF_29 (->_balances) := TMP_66(uint256)",
		node_expression="_balances[recipient] = _balances[recipient].add(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_29(uint256) -> _balances[recipient]
REF_30(uint256) -> _balances[recipient]
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_30', 'amount'] 
REF_29 (->_balances) := TMP_66(uint256)",
		node_source_code_lines="[382]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(sender,recipient,amount)

IRs:
Emit Transfer(sender.recipient.amount)",
		node_expression="Transfer(sender,recipient,amount)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(sender.recipient.amount)",
		node_source_code_lines="[383]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	114 -> 115	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="buggy_40.sol_ERC20__transfer(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[377, 378, 379, 380, 381, 382, 383, 384]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	116 -> 110	[key=0,
		edge_type=next,
		label=Next];
	117	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[385, 386, 387, 388]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	118	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_68(bool) = tx.origin == owner_txorigin30
\
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_68(bool) = tx.origin == owner_txorigin30
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_source_code_lines="[386]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	117 -> 118	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_70 = CONVERT this to address
REF_33 -> BALANCE \
TMP_70
Transfer dest:_recipient value:REF_33",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_70 = CONVERT this to address
REF_33 -> BALANCE TMP_70
Transfer dest:_recipient value:REF_33",
		node_source_code_lines="[387]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	118 -> 119	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_40.sol_ERC20_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[385, 386, 387, 388]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	120 -> 117	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[399, 400, 401, 402, 403, 404, 405]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	122	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(account != address(0),ERC20: mint to the zero address)

IRs:
TMP_72 = CONVERT \
0 to address
TMP_73(bool) = account != TMP_72
TMP_74(None) = SOLIDITY_CALL require(bool,string)(TMP_73,ERC20: mint to the zero address)",
		node_expression="require(bool,string)(account != address(0),ERC20: mint to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_72 = CONVERT 0 to address
TMP_73(bool) = account != TMP_72
TMP_74(None) = SOLIDITY_CALL require(bool,string)(TMP_73,ERC20: mint \
to the zero address)",
		node_source_code_lines="[400]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	121 -> 122	[key=0,
		edge_type=next,
		label=Next];
	123	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.add(amount)

IRs:
TMP_75(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(uint256) := TMP_75(uint256)",
		node_expression="_totalSupply = _totalSupply.add(amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_75(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(\
uint256) := TMP_75(uint256)",
		node_source_code_lines="[402]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	122 -> 123	[key=0,
		edge_type=next,
		label=Next];
	124	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].add(amount)

IRs:
REF_35(uint256) -> _balances[account]
\
REF_36(uint256) -> _balances[account]
TMP_76(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_36', 'amount'] 
REF_35 (->_balances) := TMP_76(uint256)",
		node_expression="_balances[account] = _balances[account].add(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_35(uint256) -> _balances[account]
REF_36(uint256) -> _balances[account]
TMP_76(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_36', 'amount'] 
REF_35 (->_balances) := TMP_76(uint256)",
		node_source_code_lines="[403]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	123 -> 124	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),account,amount)

IRs:
TMP_77 = CONVERT 0 to address
Emit Transfer(TMP_77.account.amount)",
		node_expression="Transfer(address(0),account,amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_77 = CONVERT 0 to address
Emit Transfer(TMP_77.account.amount)",
		node_source_code_lines="[404]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	124 -> 125	[key=0,
		edge_type=next,
		label=Next];
	126	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="buggy_40.sol_ERC20__mint(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[399, 400, 401, 402, 403, 404, 405]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	126 -> 121	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=ERC20,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[406, 407, 408]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	128	[contract_name=ERC20,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_79(bool) = tx.origin == owner_txorigin8
\
TMP_80(None) = SOLIDITY_CALL require(bool)(TMP_79)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_79(bool) = tx.origin == owner_txorigin8
TMP_80(None) = SOLIDITY_CALL require(bool)(TMP_79)",
		node_source_code_lines="[407]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	127 -> 128	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=ERC20,
		function_fullname="bug_txorigin8(address)",
		label="buggy_40.sol_ERC20_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[406, 407, 408]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	129 -> 127	[key=0,
		edge_type=next,
		label=Next];
	130	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[421, 422, 423, 424, 425, 426, 427]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	131	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(account != address(0),ERC20: burn from the zero address)

IRs:
TMP_81 = \
CONVERT 0 to address
TMP_82(bool) = account != TMP_81
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,ERC20: burn from \
the zero address)",
		node_expression="require(bool,string)(account != address(0),ERC20: burn from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_81 = CONVERT 0 to address
TMP_82(bool) = account != TMP_81
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,ERC20: burn \
from the zero address)",
		node_source_code_lines="[422]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	130 -> 131	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.sub(value)

IRs:
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(uint256) := TMP_84(uint256)",
		node_expression="_totalSupply = _totalSupply.sub(value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(\
uint256) := TMP_84(uint256)",
		node_source_code_lines="[424]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	131 -> 132	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].sub(value)

IRs:
REF_39(uint256) -> _balances[account]
\
REF_40(uint256) -> _balances[account]
TMP_85(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_40', 'value'] 
REF_39 (->_balances) := TMP_85(uint256)",
		node_expression="_balances[account] = _balances[account].sub(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_39(uint256) -> _balances[account]
REF_40(uint256) -> _balances[account]
TMP_85(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_40', 'value'] 
REF_39 (->_balances) := TMP_85(uint256)",
		node_source_code_lines="[425]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	132 -> 133	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(account,address(0),value)

IRs:
TMP_86 = CONVERT 0 to address
Emit Transfer(account.TMP_\
86.value)",
		node_expression="Transfer(account,address(0),value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_86 = CONVERT 0 to address
Emit Transfer(account.TMP_86.value)",
		node_source_code_lines="[426]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	133 -> 134	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="buggy_40.sol_ERC20__burn(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[421, 422, 423, 424, 425, 426, 427]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	135 -> 130	[key=0,
		edge_type=next,
		label=Next];
	136	[contract_name=ERC20,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[428, 429, 430, 431]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	137	[contract_name=ERC20,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_88(bool) = tx.origin == owner_txorigin39
\
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_88(bool) = tx.origin == owner_txorigin39
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_source_code_lines="[429]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=ERC20,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_42(None) -> to.call
REF_43(None) -> REF_42.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_42(None) -> to.call
REF_43(None) -> REF_42.value",
		node_source_code_lines="[430]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=ERC20,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_40.sol_ERC20_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[428, 429, 430, 431]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	139 -> 136	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[446, 447, 448, 449, 450, 451, 452]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	141	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(owner != address(0),ERC20: approve from the zero address)

IRs:
TMP_91 = \
CONVERT 0 to address
TMP_92(bool) = owner != TMP_91
TMP_93(None) = SOLIDITY_CALL require(bool,string)(TMP_92,ERC20: approve from \
the zero address)",
		node_expression="require(bool,string)(owner != address(0),ERC20: approve from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_91 = CONVERT 0 to address
TMP_92(bool) = owner != TMP_91
TMP_93(None) = SOLIDITY_CALL require(bool,string)(TMP_92,ERC20: approve \
from the zero address)",
		node_source_code_lines="[447]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(spender != address(0),ERC20: approve to the zero address)

IRs:
TMP_94 = \
CONVERT 0 to address
TMP_95(bool) = spender != TMP_94
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,ERC20: approve to \
the zero address)",
		node_expression="require(bool,string)(spender != address(0),ERC20: approve to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_94 = CONVERT 0 to address
TMP_95(bool) = spender != TMP_94
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,ERC20: approve \
to the zero address)",
		node_source_code_lines="[448]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	141 -> 142	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_allowances[owner][spender] = value

IRs:
REF_44(mapping(address => uint256)) -> _allowances[\
owner]
REF_45(uint256) -> REF_44[spender]
REF_45 (->_allowances) := value(uint256)",
		node_expression="_allowances[owner][spender] = value",
		node_info_vulnerabilities=None,
		node_irs="REF_44(mapping(address => uint256)) -> _allowances[owner]
REF_45(uint256) -> REF_44[spender]
REF_45 (->_allowances) := value(uint256)",
		node_source_code_lines="[450]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	142 -> 143	[key=0,
		edge_type=next,
		label=Next];
	144	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(owner,spender,value)

IRs:
Emit Approval(owner.spender.value)",
		node_expression="Approval(owner,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(owner.spender.value)",
		node_source_code_lines="[451]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="buggy_40.sol_ERC20__approve(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[446, 447, 448, 449, 450, 451, 452]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	145 -> 140	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=ERC20,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[453, 454, 455]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	147	[contract_name=ERC20,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_98(bool) = tx.origin == owner_txorigin36
\
TMP_99(None) = SOLIDITY_CALL require(bool)(TMP_98)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_98(bool) = tx.origin == owner_txorigin36
TMP_99(None) = SOLIDITY_CALL require(bool)(TMP_98)",
		node_source_code_lines="[454]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	146 -> 147	[key=0,
		edge_type=next,
		label=Next];
	148	[contract_name=ERC20,
		function_fullname="bug_txorigin36(address)",
		label="buggy_40.sol_ERC20_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[453, 454, 455]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	148 -> 146	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=ERC20,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[463, 464, 465, 466]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	150	[contract_name=ERC20,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(account,amount)

IRs:
INTERNAL_CALL, ERC20._burn(address,uint256)(account,amount)",
		node_expression="_burn(account,amount)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._burn(address,uint256)(account,amount)",
		node_source_code_lines="[464]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	149 -> 150	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=ERC20,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(account,msg.sender,_allowances[account][msg.sender].sub(amount))

IRs:
REF_46(mapping(\
address => uint256)) -> _allowances[account]
REF_47(uint256) -> REF_46[msg.sender]
TMP_101(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_47', 'amount'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(account,\
msg.sender,TMP_101)",
		node_expression="_approve(account,msg.sender,_allowances[account][msg.sender].sub(amount))",
		node_info_vulnerabilities=None,
		node_irs="REF_46(mapping(address => uint256)) -> _allowances[account]
REF_47(uint256) -> REF_46[msg.sender]
TMP_101(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_47', 'amount'] 
INTERNAL_CALL, ERC20._approve(address,address,\
uint256)(account,msg.sender,TMP_101)",
		node_source_code_lines="[465]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	150 -> 151	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=ERC20,
		function_fullname="_burnFrom(address,uint256)",
		label="buggy_40.sol_ERC20__burnFrom(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[463, 464, 465, 466]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	152 -> 149	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=ERC20,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[467, 468, 469, 470]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	154	[contract_name=ERC20,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_103(bool) = tx.origin == owner_txorigin35
\
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_103(bool) = tx.origin == owner_txorigin35
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)",
		node_source_code_lines="[468]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=ERC20,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_49(None) -> to.call
REF_50(None) -> REF_49.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_49(None) -> to.call
REF_50(None) -> REF_49.value",
		node_source_code_lines="[469]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=ERC20,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_40.sol_ERC20_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[467, 468, 469, 470]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	156 -> 153	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=ERC20Detailed,
		function_fullname="totalSupply()",
		label="buggy_40.sol_ERC20Detailed_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[122]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	158	[contract_name=ERC20Detailed,
		function_fullname="balanceOf(address)",
		label="buggy_40.sol_ERC20Detailed_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[127]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	159	[contract_name=ERC20Detailed,
		function_fullname="transfer(address,uint256)",
		label="buggy_40.sol_ERC20Detailed_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[136]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	160	[contract_name=ERC20Detailed,
		function_fullname="allowance(address,address)",
		label="buggy_40.sol_ERC20Detailed_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[145]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	161	[contract_name=ERC20Detailed,
		function_fullname="approve(address,uint256)",
		label="buggy_40.sol_ERC20Detailed_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	162	[contract_name=ERC20Detailed,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_40.sol_ERC20Detailed_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[172]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	163	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[477, 478, 479, 480]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	164	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_106(bool) = tx.origin == owner_txorigin9
\
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_106(bool) = tx.origin == owner_txorigin9
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_source_code_lines="[478]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[479]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	164 -> 165	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_40.sol_ERC20Detailed_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[477, 478, 479, 480]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	166 -> 163	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[482, 483, 484, 485]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	168	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_109(bool) = tx.origin == owner_txorigin25
\
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_109(bool) = tx.origin == owner_txorigin25
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)",
		node_source_code_lines="[483]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	167 -> 168	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[484]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	168 -> 169	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_40.sol_ERC20Detailed_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[482, 483, 484, 485]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	170 -> 167	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[487, 488, 489, 490]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	172	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_112(bool) = tx.origin == owner_txorigin19
\
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_112(bool) = tx.origin == owner_txorigin19
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_source_code_lines="[488]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	171 -> 172	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_53(None) -> to.call
REF_54(None) -> REF_53.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_53(None) -> to.call
REF_54(None) -> REF_53.value",
		node_source_code_lines="[489]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	172 -> 173	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_40.sol_ERC20Detailed_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[487, 488, 489, 490]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	174 -> 171	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[498, 499, 500, 501, 502]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	176	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_name = name

IRs:
_name(string) := name(string)",
		node_expression="_name = name",
		node_info_vulnerabilities=None,
		node_irs="_name(string) := name(string)",
		node_source_code_lines="[499]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	175 -> 176	[key=0,
		edge_type=next,
		label=Next];
	177	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_symbol = symbol

IRs:
_symbol(string) := symbol(string)",
		node_expression="_symbol = symbol",
		node_info_vulnerabilities=None,
		node_irs="_symbol(string) := symbol(string)",
		node_source_code_lines="[500]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	176 -> 177	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_decimals = decimals

IRs:
_decimals(uint8) := decimals(uint8)",
		node_expression="_decimals = decimals",
		node_info_vulnerabilities=None,
		node_irs="_decimals(uint8) := decimals(uint8)",
		node_source_code_lines="[501]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	177 -> 178	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="buggy_40.sol_ERC20Detailed_constructor(string,string,uint8)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[498, 499, 500, 501, 502]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	179 -> 175	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=ERC20Detailed,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[503, 504, 505]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	181	[contract_name=ERC20Detailed,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_115(bool) = tx.origin == owner_txorigin40
\
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_115(bool) = tx.origin == owner_txorigin40
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)",
		node_source_code_lines="[504]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	180 -> 181	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=ERC20Detailed,
		function_fullname="bug_txorigin40(address)",
		label="buggy_40.sol_ERC20Detailed_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[503, 504, 505]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	182 -> 180	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=ERC20Detailed,
		function_fullname="name()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[510, 511, 512]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	184	[contract_name=ERC20Detailed,
		function_fullname="name()",
		label="Node Type: RETURN

EXPRESSION:
_name

IRs:
RETURN _name",
		node_expression=_name,
		node_info_vulnerabilities=None,
		node_irs="RETURN _name",
		node_source_code_lines="[511]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	183 -> 184	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=ERC20Detailed,
		function_fullname="name()",
		label="buggy_40.sol_ERC20Detailed_name()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[510, 511, 512]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	185 -> 183	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[513, 514, 515, 516]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	187	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_117(bool) = tx.origin == owner_txorigin33
\
TMP_118(None) = SOLIDITY_CALL require(bool)(TMP_117)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_117(bool) = tx.origin == owner_txorigin33
TMP_118(None) = SOLIDITY_CALL require(bool)(TMP_117)",
		node_source_code_lines="[514]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	186 -> 187	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[515]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	187 -> 188	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_40.sol_ERC20Detailed_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[513, 514, 515, 516]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	189 -> 186	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=ERC20Detailed,
		function_fullname="symbol()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[522, 523, 524]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	191	[contract_name=ERC20Detailed,
		function_fullname="symbol()",
		label="Node Type: RETURN

EXPRESSION:
_symbol

IRs:
RETURN _symbol",
		node_expression=_symbol,
		node_info_vulnerabilities=None,
		node_irs="RETURN _symbol",
		node_source_code_lines="[523]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	190 -> 191	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=ERC20Detailed,
		function_fullname="symbol()",
		label="buggy_40.sol_ERC20Detailed_symbol()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[522, 523, 524]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	192 -> 190	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[525, 526, 527, 528]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	194	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_120(bool) = tx.origin == owner_txorigin27
\
TMP_121(None) = SOLIDITY_CALL require(bool)(TMP_120)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_120(bool) = tx.origin == owner_txorigin27
TMP_121(None) = SOLIDITY_CALL require(bool)(TMP_120)",
		node_source_code_lines="[526]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_56(None) -> to.call
REF_57(None) -> REF_56.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_56(None) -> to.call
REF_57(None) -> REF_56.value",
		node_source_code_lines="[527]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_40.sol_ERC20Detailed_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[525, 526, 527, 528]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	196 -> 193	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=ERC20Detailed,
		function_fullname="decimals()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[542, 543, 544]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	198	[contract_name=ERC20Detailed,
		function_fullname="decimals()",
		label="Node Type: RETURN

EXPRESSION:
_decimals

IRs:
RETURN _decimals",
		node_expression=_decimals,
		node_info_vulnerabilities=None,
		node_irs="RETURN _decimals",
		node_source_code_lines="[543]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=ERC20Detailed,
		function_fullname="decimals()",
		label="buggy_40.sol_ERC20Detailed_decimals()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[542, 543, 544]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	199 -> 197	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[545, 546, 547, 548]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	201	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_123(bool) = tx.origin == owner_txorigin31
\
TMP_124(None) = SOLIDITY_CALL require(bool)(TMP_123)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_123(bool) = tx.origin == owner_txorigin31
TMP_124(None) = SOLIDITY_CALL require(bool)(TMP_123)",
		node_source_code_lines="[546]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	200 -> 201	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_58(None) -> to.call
REF_59(None) -> REF_58.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_58(None) -> to.call
REF_59(None) -> REF_58.value",
		node_source_code_lines="[547]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	201 -> 202	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_40.sol_ERC20Detailed_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[545, 546, 547, 548]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	203 -> 200	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[477, 478, 479, 480]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	205	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_126(bool) = tx.origin == owner_txorigin9
\
TMP_127(None) = SOLIDITY_CALL require(bool)(TMP_126)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_126(bool) = tx.origin == owner_txorigin9
TMP_127(None) = SOLIDITY_CALL require(bool)(TMP_126)",
		node_source_code_lines="[478]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	204 -> 205	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[479]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	205 -> 206	[key=0,
		edge_type=next,
		label=Next];
	207	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[477, 478, 479, 480]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	207 -> 204	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[482, 483, 484, 485]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	209	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_129(bool) = tx.origin == owner_txorigin25
\
TMP_130(None) = SOLIDITY_CALL require(bool)(TMP_129)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_129(bool) = tx.origin == owner_txorigin25
TMP_130(None) = SOLIDITY_CALL require(bool)(TMP_129)",
		node_source_code_lines="[483]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	210	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[484]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	209 -> 210	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[482, 483, 484, 485]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	211 -> 208	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[487, 488, 489, 490]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	213	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_132(bool) = tx.origin == owner_txorigin19
\
TMP_133(None) = SOLIDITY_CALL require(bool)(TMP_132)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_132(bool) = tx.origin == owner_txorigin19
TMP_133(None) = SOLIDITY_CALL require(bool)(TMP_132)",
		node_source_code_lines="[488]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	212 -> 213	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_62(None) -> to.call
REF_63(None) -> REF_62.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_62(None) -> to.call
REF_63(None) -> REF_62.value",
		node_source_code_lines="[489]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	213 -> 214	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[487, 488, 489, 490]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	215 -> 212	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=SimpleSwapCoin,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[498, 499, 500, 501, 502]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	217	[contract_name=SimpleSwapCoin,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_name = name

IRs:
_name(string) := name(string)",
		node_expression="_name = name",
		node_info_vulnerabilities=None,
		node_irs="_name(string) := name(string)",
		node_source_code_lines="[499]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	216 -> 217	[key=0,
		edge_type=next,
		label=Next];
	218	[contract_name=SimpleSwapCoin,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_symbol = symbol

IRs:
_symbol(string) := symbol(string)",
		node_expression="_symbol = symbol",
		node_info_vulnerabilities=None,
		node_irs="_symbol(string) := symbol(string)",
		node_source_code_lines="[500]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	217 -> 218	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=SimpleSwapCoin,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_decimals = decimals

IRs:
_decimals(uint8) := decimals(uint8)",
		node_expression="_decimals = decimals",
		node_info_vulnerabilities=None,
		node_irs="_decimals(uint8) := decimals(uint8)",
		node_source_code_lines="[501]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	218 -> 219	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=SimpleSwapCoin,
		function_fullname="constructor(string,string,uint8)",
		label="buggy_40.sol_SimpleSwapCoin_constructor(string,string,uint8)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[498, 499, 500, 501, 502]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	220 -> 216	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[503, 504, 505]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	222	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_135(bool) = tx.origin == owner_txorigin40
\
TMP_136(None) = SOLIDITY_CALL require(bool)(TMP_135)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_135(bool) = tx.origin == owner_txorigin40
TMP_136(None) = SOLIDITY_CALL require(bool)(TMP_135)",
		node_source_code_lines="[504]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin40(address)",
		label="buggy_40.sol_SimpleSwapCoin_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[503, 504, 505]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	223 -> 221	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=SimpleSwapCoin,
		function_fullname="name()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[510, 511, 512]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	225	[contract_name=SimpleSwapCoin,
		function_fullname="name()",
		label="Node Type: RETURN

EXPRESSION:
_name

IRs:
RETURN _name",
		node_expression=_name,
		node_info_vulnerabilities=None,
		node_irs="RETURN _name",
		node_source_code_lines="[511]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	224 -> 225	[key=0,
		edge_type=next,
		label=Next];
	226	[contract_name=SimpleSwapCoin,
		function_fullname="name()",
		label="buggy_40.sol_SimpleSwapCoin_name()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[510, 511, 512]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	226 -> 224	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[513, 514, 515, 516]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	228	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_137(bool) = tx.origin == owner_txorigin33
\
TMP_138(None) = SOLIDITY_CALL require(bool)(TMP_137)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_137(bool) = tx.origin == owner_txorigin33
TMP_138(None) = SOLIDITY_CALL require(bool)(TMP_137)",
		node_source_code_lines="[514]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	227 -> 228	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[515]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	228 -> 229	[key=0,
		edge_type=next,
		label=Next];
	230	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[513, 514, 515, 516]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	230 -> 227	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=SimpleSwapCoin,
		function_fullname="symbol()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[522, 523, 524]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	232	[contract_name=SimpleSwapCoin,
		function_fullname="symbol()",
		label="Node Type: RETURN

EXPRESSION:
_symbol

IRs:
RETURN _symbol",
		node_expression=_symbol,
		node_info_vulnerabilities=None,
		node_irs="RETURN _symbol",
		node_source_code_lines="[523]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=SimpleSwapCoin,
		function_fullname="symbol()",
		label="buggy_40.sol_SimpleSwapCoin_symbol()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[522, 523, 524]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	233 -> 231	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[525, 526, 527, 528]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	235	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_140(bool) = tx.origin == owner_txorigin27
\
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_140(bool) = tx.origin == owner_txorigin27
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_source_code_lines="[526]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	234 -> 235	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_65(None) -> to.call
REF_66(None) -> REF_65.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_65(None) -> to.call
REF_66(None) -> REF_65.value",
		node_source_code_lines="[527]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	235 -> 236	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[525, 526, 527, 528]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	237 -> 234	[key=0,
		edge_type=next,
		label=Next];
	238	[contract_name=SimpleSwapCoin,
		function_fullname="decimals()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[542, 543, 544]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	239	[contract_name=SimpleSwapCoin,
		function_fullname="decimals()",
		label="Node Type: RETURN

EXPRESSION:
_decimals

IRs:
RETURN _decimals",
		node_expression=_decimals,
		node_info_vulnerabilities=None,
		node_irs="RETURN _decimals",
		node_source_code_lines="[543]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=SimpleSwapCoin,
		function_fullname="decimals()",
		label="buggy_40.sol_SimpleSwapCoin_decimals()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[542, 543, 544]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	240 -> 238	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[545, 546, 547, 548]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	242	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_143(bool) = tx.origin == owner_txorigin31
\
TMP_144(None) = SOLIDITY_CALL require(bool)(TMP_143)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_143(bool) = tx.origin == owner_txorigin31
TMP_144(None) = SOLIDITY_CALL require(bool)(TMP_143)",
		node_source_code_lines="[546]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_67(None) -> to.call
REF_68(None) -> REF_67.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_67(None) -> to.call
REF_68(None) -> REF_67.value",
		node_source_code_lines="[547]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	242 -> 243	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[545, 546, 547, 548]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	244 -> 241	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=SimpleSwapCoin,
		function_fullname="totalSupply()",
		label="buggy_40.sol_SimpleSwapCoin_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[122]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	246	[contract_name=SimpleSwapCoin,
		function_fullname="balanceOf(address)",
		label="buggy_40.sol_SimpleSwapCoin_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[127]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	247	[contract_name=SimpleSwapCoin,
		function_fullname="transfer(address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[136]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	248	[contract_name=SimpleSwapCoin,
		function_fullname="allowance(address,address)",
		label="buggy_40.sol_SimpleSwapCoin_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[145]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	249	[contract_name=SimpleSwapCoin,
		function_fullname="approve(address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	250	[contract_name=SimpleSwapCoin,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[172]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	251	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[216, 217, 218, 219]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	252	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_146(bool) = tx.origin == owner_txorigin17
\
TMP_147(None) = SOLIDITY_CALL require(bool)(TMP_146)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_146(bool) = tx.origin == owner_txorigin17
TMP_147(None) = SOLIDITY_CALL require(bool)(TMP_146)",
		node_source_code_lines="[217]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	251 -> 252	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[218]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[216, 217, 218, 219]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	254 -> 251	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	256	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_149(bool) = tx.origin == owner_txorigin37
\
TMP_150(None) = SOLIDITY_CALL require(bool)(TMP_149)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_149(bool) = tx.origin == owner_txorigin37
TMP_150(None) = SOLIDITY_CALL require(bool)(TMP_149)",
		node_source_code_lines="[223]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	255 -> 256	[key=0,
		edge_type=next,
		label=Next];
	257	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[224]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	258 -> 255	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[228, 229, 230, 231]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	260	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_152(bool) = tx.origin == owner_txorigin3
\
TMP_153(None) = SOLIDITY_CALL require(bool)(TMP_152)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_152(bool) = tx.origin == owner_txorigin3
TMP_153(None) = SOLIDITY_CALL require(bool)(TMP_152)",
		node_source_code_lines="[229]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	259 -> 260	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_71(None) -> to.call
REF_72(None) -> REF_71.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_71(None) -> to.call
REF_72(None) -> REF_71.value",
		node_source_code_lines="[230]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[228, 229, 230, 231]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	262 -> 259	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=SimpleSwapCoin,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[237, 238, 239]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	264	[contract_name=SimpleSwapCoin,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply

IRs:
RETURN _totalSupply",
		node_expression=_totalSupply,
		node_info_vulnerabilities=None,
		node_irs="RETURN _totalSupply",
		node_source_code_lines="[238]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	263 -> 264	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=SimpleSwapCoin,
		function_fullname="totalSupply()",
		label="buggy_40.sol_SimpleSwapCoin_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[237, 238, 239]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	265 -> 263	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[240, 241, 242, 243]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	267	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_155(bool) = tx.origin == owner_txorigin26
\
TMP_156(None) = SOLIDITY_CALL require(bool)(TMP_155)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_155(bool) = tx.origin == owner_txorigin26
TMP_156(None) = SOLIDITY_CALL require(bool)(TMP_155)",
		node_source_code_lines="[241]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_157 = CONVERT this to address
REF_74 -> \
BALANCE TMP_157
Transfer dest:_recipient value:REF_74",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_157 = CONVERT this to address
REF_74 -> BALANCE TMP_157
Transfer dest:_recipient value:REF_74",
		node_source_code_lines="[242]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_40.sol_SimpleSwapCoin_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[240, 241, 242, 243]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	269 -> 266	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=SimpleSwapCoin,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[248, 249, 250]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	271	[contract_name=SimpleSwapCoin,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
_balances[account]

IRs:
REF_75(uint256) -> _balances[account]
RETURN REF_75",
		node_expression="_balances[account]",
		node_info_vulnerabilities=None,
		node_irs="REF_75(uint256) -> _balances[account]
RETURN REF_75",
		node_source_code_lines="[249]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	270 -> 271	[key=0,
		edge_type=next,
		label=Next];
	272	[contract_name=SimpleSwapCoin,
		function_fullname="balanceOf(address)",
		label="buggy_40.sol_SimpleSwapCoin_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[248, 249, 250]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	272 -> 270	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	274	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_159(bool) = tx.origin == owner_txorigin20
\
TMP_160(None) = SOLIDITY_CALL require(bool)(TMP_159)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_159(bool) = tx.origin == owner_txorigin20
TMP_160(None) = SOLIDITY_CALL require(bool)(TMP_159)",
		node_source_code_lines="[252]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	273 -> 274	[key=0,
		edge_type=next,
		label=Next];
	275	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin20(address)",
		label="buggy_40.sol_SimpleSwapCoin_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	275 -> 273	[key=0,
		edge_type=next,
		label=Next];
	276	[contract_name=SimpleSwapCoin,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[263, 264, 265, 266]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	277	[contract_name=SimpleSwapCoin,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(msg.sender,recipient,amount)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(\
msg.sender,recipient,amount)",
		node_expression="_transfer(msg.sender,recipient,amount)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(msg.sender,recipient,amount)",
		node_source_code_lines="[264]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	276 -> 277	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=SimpleSwapCoin,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[265]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	277 -> 278	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=SimpleSwapCoin,
		function_fullname="transfer(address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[263, 264, 265, 266]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	279 -> 276	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[267, 268, 269]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	281	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_162(bool) = tx.origin == owner_txorigin32
\
TMP_163(None) = SOLIDITY_CALL require(bool)(TMP_162)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_162(bool) = tx.origin == owner_txorigin32
TMP_163(None) = SOLIDITY_CALL require(bool)(TMP_162)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	280 -> 281	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin32(address)",
		label="buggy_40.sol_SimpleSwapCoin_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[267, 268, 269]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	282 -> 280	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=SimpleSwapCoin,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[274, 275, 276]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	284	[contract_name=SimpleSwapCoin,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
_allowances[owner][spender]

IRs:
REF_76(mapping(address => uint256)) -> _allowances[owner]
REF_77(\
uint256) -> REF_76[spender]
RETURN REF_77",
		node_expression="_allowances[owner][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_76(mapping(address => uint256)) -> _allowances[owner]
REF_77(uint256) -> REF_76[spender]
RETURN REF_77",
		node_source_code_lines="[275]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	283 -> 284	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=SimpleSwapCoin,
		function_fullname="allowance(address,address)",
		label="buggy_40.sol_SimpleSwapCoin_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[274, 275, 276]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	285 -> 283	[key=0,
		edge_type=next,
		label=Next];
	286	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[277, 278, 279, 280]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	287	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_164(bool) = tx.origin == owner_txorigin38
\
TMP_165(None) = SOLIDITY_CALL require(bool)(TMP_164)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_164(bool) = tx.origin == owner_txorigin38
TMP_165(None) = SOLIDITY_CALL require(bool)(TMP_164)",
		node_source_code_lines="[278]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	286 -> 287	[key=0,
		edge_type=next,
		label=Next];
	288	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_166 = CONVERT this to address
REF_79 -> \
BALANCE TMP_166
Transfer dest:_recipient value:REF_79",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_166 = CONVERT this to address
REF_79 -> BALANCE TMP_166
Transfer dest:_recipient value:REF_79",
		node_source_code_lines="[279]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	287 -> 288	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_40.sol_SimpleSwapCoin_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[277, 278, 279, 280]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	289 -> 286	[key=0,
		edge_type=next,
		label=Next];
	290	[contract_name=SimpleSwapCoin,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[289, 290, 291, 292]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	291	[contract_name=SimpleSwapCoin,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,value)

IRs:
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,value)",
		node_expression="_approve(msg.sender,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._approve(address,address,uint256)(msg.sender,spender,value)",
		node_source_code_lines="[290]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	290 -> 291	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=SimpleSwapCoin,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[291]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	291 -> 292	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=SimpleSwapCoin,
		function_fullname="approve(address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[289, 290, 291, 292]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	293 -> 290	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	295	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_169(bool) = tx.origin == owner_txorigin4
\
TMP_170(None) = SOLIDITY_CALL require(bool)(TMP_169)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_169(bool) = tx.origin == owner_txorigin4
TMP_170(None) = SOLIDITY_CALL require(bool)(TMP_169)",
		node_source_code_lines="[294]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	294 -> 295	[key=0,
		edge_type=next,
		label=Next];
	296	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin4(address)",
		label="buggy_40.sol_SimpleSwapCoin_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	296 -> 294	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=SimpleSwapCoin,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[309, 310, 311, 312, 313]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	298	[contract_name=SimpleSwapCoin,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(sender,recipient,amount)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(\
sender,recipient,amount)",
		node_expression="_transfer(sender,recipient,amount)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(sender,recipient,amount)",
		node_source_code_lines="[310]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	297 -> 298	[key=0,
		edge_type=next,
		label=Next];
	299	[contract_name=SimpleSwapCoin,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(sender,msg.sender,_allowances[sender][msg.sender].sub(amount))

IRs:
REF_80(mapping(\
address => uint256)) -> _allowances[sender]
REF_81(uint256) -> REF_80[msg.sender]
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_81', 'amount'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(sender,\
msg.sender,TMP_172)",
		node_expression="_approve(sender,msg.sender,_allowances[sender][msg.sender].sub(amount))",
		node_info_vulnerabilities=None,
		node_irs="REF_80(mapping(address => uint256)) -> _allowances[sender]
REF_81(uint256) -> REF_80[msg.sender]
TMP_172(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_81', 'amount'] 
INTERNAL_CALL, ERC20._approve(address,address,\
uint256)(sender,msg.sender,TMP_172)",
		node_source_code_lines="[311]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	298 -> 299	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=SimpleSwapCoin,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[312]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	299 -> 300	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=SimpleSwapCoin,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[309, 310, 311, 312, 313]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	301 -> 297	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[314, 315, 316, 317]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	303	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_174(bool) = tx.origin == owner_txorigin7
\
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_174(bool) = tx.origin == owner_txorigin7
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_source_code_lines="[315]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	302 -> 303	[key=0,
		edge_type=next,
		label=Next];
	304	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_83(None) -> to.call
REF_84(None) -> REF_83.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_83(None) -> to.call
REF_84(None) -> REF_83.value",
		node_source_code_lines="[316]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	303 -> 304	[key=0,
		edge_type=next,
		label=Next];
	305	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[314, 315, 316, 317]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	305 -> 302	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=SimpleSwapCoin,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[331, 332, 333, 334]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	307	[contract_name=SimpleSwapCoin,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowances[msg.sender][spender].add(addedValue))

IRs:
REF_85(mapping(\
address => uint256)) -> _allowances[msg.sender]
REF_86(uint256) -> REF_85[spender]
TMP_177(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_86', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,TMP_177)",
		node_expression="_approve(msg.sender,spender,_allowances[msg.sender][spender].add(addedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_85(mapping(address => uint256)) -> _allowances[msg.sender]
REF_86(uint256) -> REF_85[spender]
TMP_177(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_86', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_177)",
		node_source_code_lines="[332]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	306 -> 307	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=SimpleSwapCoin,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[333]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=SimpleSwapCoin,
		function_fullname="increaseAllowance(address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin_increaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[331, 332, 333, 334]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	309 -> 306	[key=0,
		edge_type=next,
		label=Next];
	310	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	311	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_179(bool) = tx.origin == owner_txorigin23
\
TMP_180(None) = SOLIDITY_CALL require(bool)(TMP_179)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_179(bool) = tx.origin == owner_txorigin23
TMP_180(None) = SOLIDITY_CALL require(bool)(TMP_179)",
		node_source_code_lines="[336]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	310 -> 311	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_88(None) -> to.call
REF_89(None) -> REF_88.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_88(None) -> to.call
REF_89(None) -> REF_88.value",
		node_source_code_lines="[337]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	311 -> 312	[key=0,
		edge_type=next,
		label=Next];
	313	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	313 -> 310	[key=0,
		edge_type=next,
		label=Next];
	314	[contract_name=SimpleSwapCoin,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[354, 355, 356, 357]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	315	[contract_name=SimpleSwapCoin,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowances[msg.sender][spender].sub(subtractedValue))

IRs:
REF_\
90(mapping(address => uint256)) -> _allowances[msg.sender]
REF_91(uint256) -> REF_90[spender]
TMP_182(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_91', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_182)",
		node_expression="_approve(msg.sender,spender,_allowances[msg.sender][spender].sub(subtractedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_90(mapping(address => uint256)) -> _allowances[msg.sender]
REF_91(uint256) -> REF_90[spender]
TMP_182(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_91', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_182)",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=SimpleSwapCoin,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[356]",
		node_type=RETURN,
		source_file="buggy_40.sol"];
	315 -> 316	[key=0,
		edge_type=next,
		label=Next];
	317	[contract_name=SimpleSwapCoin,
		function_fullname="decreaseAllowance(address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin_decreaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[354, 355, 356, 357]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	317 -> 314	[key=0,
		edge_type=next,
		label=Next];
	318	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[358, 359, 360, 361]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	319	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_184(bool) = tx.origin == owner_txorigin14
\
TMP_185(None) = SOLIDITY_CALL require(bool)(TMP_184)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_184(bool) = tx.origin == owner_txorigin14
TMP_185(None) = SOLIDITY_CALL require(bool)(TMP_184)",
		node_source_code_lines="[359]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	318 -> 319	[key=0,
		edge_type=next,
		label=Next];
	320	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_186 = CONVERT this to address
REF_94 -> \
BALANCE TMP_186
Transfer dest:_recipient value:REF_94",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_186 = CONVERT this to address
REF_94 -> BALANCE TMP_186
Transfer dest:_recipient value:REF_94",
		node_source_code_lines="[360]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	319 -> 320	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_40.sol_SimpleSwapCoin_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[358, 359, 360, 361]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	321 -> 318	[key=0,
		edge_type=next,
		label=Next];
	322	[contract_name=SimpleSwapCoin,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[377, 378, 379, 380, 381, 382, 383, 384]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	323	[contract_name=SimpleSwapCoin,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(sender != address(0),ERC20: transfer from the zero address)

IRs:
TMP_188 = \
CONVERT 0 to address
TMP_189(bool) = sender != TMP_188
TMP_190(None) = SOLIDITY_CALL require(bool,string)(TMP_189,ERC20: transfer \
from the zero address)",
		node_expression="require(bool,string)(sender != address(0),ERC20: transfer from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_188 = CONVERT 0 to address
TMP_189(bool) = sender != TMP_188
TMP_190(None) = SOLIDITY_CALL require(bool,string)(TMP_189,ERC20: \
transfer from the zero address)",
		node_source_code_lines="[378]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	322 -> 323	[key=0,
		edge_type=next,
		label=Next];
	324	[contract_name=SimpleSwapCoin,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(recipient != address(0),ERC20: transfer to the zero address)

IRs:
TMP_191 = \
CONVERT 0 to address
TMP_192(bool) = recipient != TMP_191
TMP_193(None) = SOLIDITY_CALL require(bool,string)(TMP_192,ERC20: transfer \
to the zero address)",
		node_expression="require(bool,string)(recipient != address(0),ERC20: transfer to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_191 = CONVERT 0 to address
TMP_192(bool) = recipient != TMP_191
TMP_193(None) = SOLIDITY_CALL require(bool,string)(TMP_192,ERC20: \
transfer to the zero address)",
		node_source_code_lines="[379]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	323 -> 324	[key=0,
		edge_type=next,
		label=Next];
	325	[contract_name=SimpleSwapCoin,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[sender] = _balances[sender].sub(amount)

IRs:
REF_95(uint256) -> _balances[sender]
\
REF_96(uint256) -> _balances[sender]
TMP_194(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_96', 'amount'] 
REF_95 (->_balances) := TMP_194(uint256)",
		node_expression="_balances[sender] = _balances[sender].sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_95(uint256) -> _balances[sender]
REF_96(uint256) -> _balances[sender]
TMP_194(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_96', 'amount'] 
REF_95 (->_balances) := TMP_194(uint256)",
		node_source_code_lines="[381]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	324 -> 325	[key=0,
		edge_type=next,
		label=Next];
	326	[contract_name=SimpleSwapCoin,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[recipient] = _balances[recipient].add(amount)

IRs:
REF_98(uint256) -> _balances[recipient]
\
REF_99(uint256) -> _balances[recipient]
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_99', 'amount'] 
REF_98 (->_balances) := TMP_195(uint256)",
		node_expression="_balances[recipient] = _balances[recipient].add(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_98(uint256) -> _balances[recipient]
REF_99(uint256) -> _balances[recipient]
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_99', 'amount'] 
REF_98 (->_balances) := TMP_195(uint256)",
		node_source_code_lines="[382]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	325 -> 326	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=SimpleSwapCoin,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(sender,recipient,amount)

IRs:
Emit Transfer(sender.recipient.amount)",
		node_expression="Transfer(sender,recipient,amount)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(sender.recipient.amount)",
		node_source_code_lines="[383]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	326 -> 327	[key=0,
		edge_type=next,
		label=Next];
	328	[contract_name=SimpleSwapCoin,
		function_fullname="_transfer(address,address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin__transfer(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[377, 378, 379, 380, 381, 382, 383, 384]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	328 -> 322	[key=0,
		edge_type=next,
		label=Next];
	329	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[385, 386, 387, 388]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	330	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_197(bool) = tx.origin == owner_txorigin30
\
TMP_198(None) = SOLIDITY_CALL require(bool)(TMP_197)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_197(bool) = tx.origin == owner_txorigin30
TMP_198(None) = SOLIDITY_CALL require(bool)(TMP_197)",
		node_source_code_lines="[386]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	329 -> 330	[key=0,
		edge_type=next,
		label=Next];
	331	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_199 = CONVERT this to address
REF_102 -> \
BALANCE TMP_199
Transfer dest:_recipient value:REF_102",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_199 = CONVERT this to address
REF_102 -> BALANCE TMP_199
Transfer dest:_recipient value:REF_102",
		node_source_code_lines="[387]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	330 -> 331	[key=0,
		edge_type=next,
		label=Next];
	332	[contract_name=SimpleSwapCoin,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_40.sol_SimpleSwapCoin_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[385, 386, 387, 388]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	332 -> 329	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=SimpleSwapCoin,
		function_fullname="_mint(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[399, 400, 401, 402, 403, 404, 405]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	334	[contract_name=SimpleSwapCoin,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(account != address(0),ERC20: mint to the zero address)

IRs:
TMP_201 = CONVERT \
0 to address
TMP_202(bool) = account != TMP_201
TMP_203(None) = SOLIDITY_CALL require(bool,string)(TMP_202,ERC20: mint to the zero \
address)",
		node_expression="require(bool,string)(account != address(0),ERC20: mint to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_201 = CONVERT 0 to address
TMP_202(bool) = account != TMP_201
TMP_203(None) = SOLIDITY_CALL require(bool,string)(TMP_202,ERC20: \
mint to the zero address)",
		node_source_code_lines="[400]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	333 -> 334	[key=0,
		edge_type=next,
		label=Next];
	335	[contract_name=SimpleSwapCoin,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.add(amount)

IRs:
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(uint256) := TMP_204(uint256)",
		node_expression="_totalSupply = _totalSupply.add(amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(\
uint256) := TMP_204(uint256)",
		node_source_code_lines="[402]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	334 -> 335	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=SimpleSwapCoin,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].add(amount)

IRs:
REF_104(uint256) -> _balances[account]
\
REF_105(uint256) -> _balances[account]
TMP_205(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_105', 'amount'] 
REF_104 (->_balances) := TMP_205(uint256)",
		node_expression="_balances[account] = _balances[account].add(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_104(uint256) -> _balances[account]
REF_105(uint256) -> _balances[account]
TMP_205(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_105', 'amount'] 
REF_104 (->_balances) := TMP_205(uint256)",
		node_source_code_lines="[403]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	335 -> 336	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=SimpleSwapCoin,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),account,amount)

IRs:
TMP_206 = CONVERT 0 to address
Emit Transfer(TMP_206.account.amount)",
		node_expression="Transfer(address(0),account,amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_206 = CONVERT 0 to address
Emit Transfer(TMP_206.account.amount)",
		node_source_code_lines="[404]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	336 -> 337	[key=0,
		edge_type=next,
		label=Next];
	338	[contract_name=SimpleSwapCoin,
		function_fullname="_mint(address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin__mint(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[399, 400, 401, 402, 403, 404, 405]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	338 -> 333	[key=0,
		edge_type=next,
		label=Next];
	339	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[406, 407, 408]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	340	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_208(bool) = tx.origin == owner_txorigin8
\
TMP_209(None) = SOLIDITY_CALL require(bool)(TMP_208)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_208(bool) = tx.origin == owner_txorigin8
TMP_209(None) = SOLIDITY_CALL require(bool)(TMP_208)",
		node_source_code_lines="[407]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	339 -> 340	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin8(address)",
		label="buggy_40.sol_SimpleSwapCoin_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[406, 407, 408]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	341 -> 339	[key=0,
		edge_type=next,
		label=Next];
	342	[contract_name=SimpleSwapCoin,
		function_fullname="_burn(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[421, 422, 423, 424, 425, 426, 427]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	343	[contract_name=SimpleSwapCoin,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(account != address(0),ERC20: burn from the zero address)

IRs:
TMP_210 = \
CONVERT 0 to address
TMP_211(bool) = account != TMP_210
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,ERC20: burn from \
the zero address)",
		node_expression="require(bool,string)(account != address(0),ERC20: burn from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_210 = CONVERT 0 to address
TMP_211(bool) = account != TMP_210
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,ERC20: \
burn from the zero address)",
		node_source_code_lines="[422]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	342 -> 343	[key=0,
		edge_type=next,
		label=Next];
	344	[contract_name=SimpleSwapCoin,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.sub(value)

IRs:
TMP_213(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(uint256) := TMP_213(uint256)",
		node_expression="_totalSupply = _totalSupply.sub(value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_213(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(\
uint256) := TMP_213(uint256)",
		node_source_code_lines="[424]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	343 -> 344	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=SimpleSwapCoin,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].sub(value)

IRs:
REF_108(uint256) -> _balances[account]
\
REF_109(uint256) -> _balances[account]
TMP_214(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_109', 'value'] 
REF_108 (->_balances) := TMP_214(uint256)",
		node_expression="_balances[account] = _balances[account].sub(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_108(uint256) -> _balances[account]
REF_109(uint256) -> _balances[account]
TMP_214(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_109', 'value'] 
REF_108 (->_balances) := TMP_214(uint256)",
		node_source_code_lines="[425]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	344 -> 345	[key=0,
		edge_type=next,
		label=Next];
	346	[contract_name=SimpleSwapCoin,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(account,address(0),value)

IRs:
TMP_215 = CONVERT 0 to address
Emit Transfer(account.TMP_\
215.value)",
		node_expression="Transfer(account,address(0),value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_215 = CONVERT 0 to address
Emit Transfer(account.TMP_215.value)",
		node_source_code_lines="[426]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	345 -> 346	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=SimpleSwapCoin,
		function_fullname="_burn(address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin__burn(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[421, 422, 423, 424, 425, 426, 427]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	347 -> 342	[key=0,
		edge_type=next,
		label=Next];
	348	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[428, 429, 430, 431]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	349	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_217(bool) = tx.origin == owner_txorigin39
\
TMP_218(None) = SOLIDITY_CALL require(bool)(TMP_217)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_217(bool) = tx.origin == owner_txorigin39
TMP_218(None) = SOLIDITY_CALL require(bool)(TMP_217)",
		node_source_code_lines="[429]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	348 -> 349	[key=0,
		edge_type=next,
		label=Next];
	350	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_111(None) -> to.call
REF_112(None) -> REF_111.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_111(None) -> to.call
REF_112(None) -> REF_111.value",
		node_source_code_lines="[430]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	349 -> 350	[key=0,
		edge_type=next,
		label=Next];
	351	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[428, 429, 430, 431]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	351 -> 348	[key=0,
		edge_type=next,
		label=Next];
	352	[contract_name=SimpleSwapCoin,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[446, 447, 448, 449, 450, 451, 452]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	353	[contract_name=SimpleSwapCoin,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(owner != address(0),ERC20: approve from the zero address)

IRs:
TMP_220 = \
CONVERT 0 to address
TMP_221(bool) = owner != TMP_220
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,ERC20: approve \
from the zero address)",
		node_expression="require(bool,string)(owner != address(0),ERC20: approve from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_220 = CONVERT 0 to address
TMP_221(bool) = owner != TMP_220
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,ERC20: \
approve from the zero address)",
		node_source_code_lines="[447]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	352 -> 353	[key=0,
		edge_type=next,
		label=Next];
	354	[contract_name=SimpleSwapCoin,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(spender != address(0),ERC20: approve to the zero address)

IRs:
TMP_223 = \
CONVERT 0 to address
TMP_224(bool) = spender != TMP_223
TMP_225(None) = SOLIDITY_CALL require(bool,string)(TMP_224,ERC20: approve \
to the zero address)",
		node_expression="require(bool,string)(spender != address(0),ERC20: approve to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_223 = CONVERT 0 to address
TMP_224(bool) = spender != TMP_223
TMP_225(None) = SOLIDITY_CALL require(bool,string)(TMP_224,ERC20: \
approve to the zero address)",
		node_source_code_lines="[448]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	353 -> 354	[key=0,
		edge_type=next,
		label=Next];
	355	[contract_name=SimpleSwapCoin,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_allowances[owner][spender] = value

IRs:
REF_113(mapping(address => uint256)) -> _allowances[\
owner]
REF_114(uint256) -> REF_113[spender]
REF_114 (->_allowances) := value(uint256)",
		node_expression="_allowances[owner][spender] = value",
		node_info_vulnerabilities=None,
		node_irs="REF_113(mapping(address => uint256)) -> _allowances[owner]
REF_114(uint256) -> REF_113[spender]
REF_114 (->_allowances) := value(\
uint256)",
		node_source_code_lines="[450]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	354 -> 355	[key=0,
		edge_type=next,
		label=Next];
	356	[contract_name=SimpleSwapCoin,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(owner,spender,value)

IRs:
Emit Approval(owner.spender.value)",
		node_expression="Approval(owner,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(owner.spender.value)",
		node_source_code_lines="[451]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	355 -> 356	[key=0,
		edge_type=next,
		label=Next];
	357	[contract_name=SimpleSwapCoin,
		function_fullname="_approve(address,address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin__approve(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[446, 447, 448, 449, 450, 451, 452]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	357 -> 352	[key=0,
		edge_type=next,
		label=Next];
	358	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[453, 454, 455]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	359	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_227(bool) = tx.origin == owner_txorigin36
\
TMP_228(None) = SOLIDITY_CALL require(bool)(TMP_227)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_227(bool) = tx.origin == owner_txorigin36
TMP_228(None) = SOLIDITY_CALL require(bool)(TMP_227)",
		node_source_code_lines="[454]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	358 -> 359	[key=0,
		edge_type=next,
		label=Next];
	360	[contract_name=SimpleSwapCoin,
		function_fullname="bug_txorigin36(address)",
		label="buggy_40.sol_SimpleSwapCoin_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[453, 454, 455]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	360 -> 358	[key=0,
		edge_type=next,
		label=Next];
	361	[contract_name=SimpleSwapCoin,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[463, 464, 465, 466]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	362	[contract_name=SimpleSwapCoin,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(account,amount)

IRs:
INTERNAL_CALL, ERC20._burn(address,uint256)(account,amount)",
		node_expression="_burn(account,amount)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._burn(address,uint256)(account,amount)",
		node_source_code_lines="[464]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	361 -> 362	[key=0,
		edge_type=next,
		label=Next];
	363	[contract_name=SimpleSwapCoin,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(account,msg.sender,_allowances[account][msg.sender].sub(amount))

IRs:
REF_115(mapping(\
address => uint256)) -> _allowances[account]
REF_116(uint256) -> REF_115[msg.sender]
TMP_230(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_116', 'amount'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
account,msg.sender,TMP_230)",
		node_expression="_approve(account,msg.sender,_allowances[account][msg.sender].sub(amount))",
		node_info_vulnerabilities=None,
		node_irs="REF_115(mapping(address => uint256)) -> _allowances[account]
REF_116(uint256) -> REF_115[msg.sender]
TMP_230(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_116', 'amount'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(account,msg.sender,TMP_230)",
		node_source_code_lines="[465]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	362 -> 363	[key=0,
		edge_type=next,
		label=Next];
	364	[contract_name=SimpleSwapCoin,
		function_fullname="_burnFrom(address,uint256)",
		label="buggy_40.sol_SimpleSwapCoin__burnFrom(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[463, 464, 465, 466]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	364 -> 361	[key=0,
		edge_type=next,
		label=Next];
	365	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[467, 468, 469, 470]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	366	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_232(bool) = tx.origin == owner_txorigin35
\
TMP_233(None) = SOLIDITY_CALL require(bool)(TMP_232)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_232(bool) = tx.origin == owner_txorigin35
TMP_233(None) = SOLIDITY_CALL require(bool)(TMP_232)",
		node_source_code_lines="[468]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	365 -> 366	[key=0,
		edge_type=next,
		label=Next];
	367	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_118(None) -> to.call
REF_119(None) -> REF_118.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="REF_118(None) -> to.call
REF_119(None) -> REF_118.value",
		node_source_code_lines="[469]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	366 -> 367	[key=0,
		edge_type=next,
		label=Next];
	368	[contract_name=SimpleSwapCoin,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[467, 468, 469, 470]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	368 -> 365	[key=0,
		edge_type=next,
		label=Next];
	369	[contract_name=SimpleSwapCoin,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[552, 553, 554]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	371	[contract_name=SimpleSwapCoin,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
ERC20Detailed(SimpleSwap Coin,SWAP,8)

IRs:
INTERNAL_CALL, ERC20Detailed.constructor(string,string,\
uint8)(SimpleSwap Coin,SWAP,8)",
		node_expression="ERC20Detailed(SimpleSwap Coin,SWAP,8)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20Detailed.constructor(string,string,uint8)(SimpleSwap Coin,SWAP,8)",
		node_source_code_lines="[552]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	369 -> 371	[key=0,
		edge_type=next,
		label=Next];
	370	[contract_name=SimpleSwapCoin,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_mint(msg.sender,100000000 * (10 ** 8))

IRs:
TMP_235(uint256) = 10 ** 8
TMP_236(uint256) = 100000000 * \
TMP_235
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,TMP_236)",
		node_expression="_mint(msg.sender,100000000 * (10 ** 8))",
		node_info_vulnerabilities=None,
		node_irs="TMP_235(uint256) = 10 ** 8
TMP_236(uint256) = 100000000 * TMP_235
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,TMP_236)",
		node_source_code_lines="[553]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	371 -> 370	[key=0,
		edge_type=next,
		label=Next];
	372	[contract_name=SimpleSwapCoin,
		function_fullname="constructor()",
		label="buggy_40.sol_SimpleSwapCoin_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[552, 553, 554]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	372 -> 369	[key=0,
		edge_type=next,
		label=Next];
	373	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[555, 556, 557, 558]",
		node_type=ENTRY_POINT,
		source_file="buggy_40.sol"];
	374	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_239(bool) = tx.origin == owner_txorigin13
\
TMP_240(None) = SOLIDITY_CALL require(bool)(TMP_239)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="TMP_239(bool) = tx.origin == owner_txorigin13
TMP_240(None) = SOLIDITY_CALL require(bool)(TMP_239)",
		node_source_code_lines="[556]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	373 -> 374	[key=0,
		edge_type=next,
		label=Next];
	375	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[557]",
		node_type=EXPRESSION,
		source_file="buggy_40.sol"];
	374 -> 375	[key=0,
		edge_type=next,
		label=Next];
	376	[contract_name=SimpleSwapCoin,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_40.sol_SimpleSwapCoin_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [555, 556, 557, 558, 545, 546, 547, 548, 525, 526, 527, 528, 513, 514, 515, 516, 503, 504, 505, 467, 468, 469, 470, 453, \
454, 455, 428, 429, 430, 431, 406, 407, 408, 385, 386, 387, 388, 358, 359, 360, 361, 335, 336, 337, 338, 314, 315, 316, 317, 293, \
294, 295, 277, 278, 279, 280, 267, 268, 269, 251, 252, 253, 240, 241, 242, 243, 487, 488, 489, 490, 482, 483, 484, 485, 477, 478, \
479, 480, 228, 229, 230, 231, 222, 223, 224, 225, 216, 217, 218, 219], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[555, 556, 557, 558]",
		node_type=FUNCTION_NAME,
		source_file="buggy_40.sol"];
	376 -> 373	[key=0,
		edge_type=next,
		label=Next];
}
