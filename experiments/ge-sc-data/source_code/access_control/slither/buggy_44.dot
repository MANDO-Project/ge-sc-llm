digraph "" {
	node [label="\N"];
	0	[contract_name=EventMetadata,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[10, 11, 12]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	1	[contract_name=EventMetadata,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_0(bool) = tx.origin == owner_txorigin40
\
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_0(bool) = tx.origin == owner_txorigin40
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[11]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=EventMetadata,
		function_fullname="bug_txorigin40(address)",
		label="buggy_44.sol_EventMetadata_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[10, 11, 12]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	2 -> 0	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=EventMetadata,
		function_fullname="_setMetadata(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17, 18, 19]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	4	[contract_name=EventMetadata,
		function_fullname="_setMetadata(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
MetadataSet(metadata)

IRs:
Emit MetadataSet(metadata)",
		node_expression="MetadataSet(metadata)",
		node_info_vulnerabilities=None,
		node_irs="Emit MetadataSet(metadata)",
		node_source_code_lines="[18]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	3 -> 4	[key=0,
		edge_type=next,
		label=Next];
	5	[contract_name=EventMetadata,
		function_fullname="_setMetadata(bytes)",
		label="buggy_44.sol_EventMetadata__setMetadata(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17, 18, 19]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	5 -> 3	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=EventMetadata,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[20, 21, 22, 23]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	7	[contract_name=EventMetadata,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_3(bool) = tx.origin == owner_txorigin11
\
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_3(bool) = tx.origin == owner_txorigin11
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	6 -> 7	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=EventMetadata,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_0(None) -> to.call
REF_1(None) -> REF_0.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_0(None) -> to.call
REF_1(None) -> REF_0.value",
		node_source_code_lines="[22]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	7 -> 8	[key=0,
		edge_type=next,
		label=Next];
	9	[contract_name=EventMetadata,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_44.sol_EventMetadata_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[20, 21, 22, 23]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	9 -> 6	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	11	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_6(bool) = tx.origin == owner_txorigin10
\
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_6)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_6(bool) = tx.origin == owner_txorigin10
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_6)",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	10 -> 11	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_8 = CONVERT this to address
REF_3 -> BALANCE \
TMP_8
Transfer dest:_recipient value:REF_3",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_8 = CONVERT this to address
REF_3 -> BALANCE TMP_8
Transfer dest:_recipient value:REF_3",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	11 -> 12	[key=0,
		edge_type=next,
		label=Next];
	13	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_44.sol_Operated_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	13 -> 10	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	15	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_10(bool) = tx.origin == owner_txorigin22
\
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_10(bool) = tx.origin == owner_txorigin22
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_source_code_lines="[36]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	14 -> 15	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_12 = CONVERT this to address
REF_5 -> BALANCE \
TMP_12
Transfer dest:_recipient value:REF_5",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_12 = CONVERT this to address
REF_5 -> BALANCE TMP_12
Transfer dest:_recipient value:REF_5",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	15 -> 16	[key=0,
		edge_type=next,
		label=Next];
	17	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_44.sol_Operated_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	17 -> 14	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=Operated,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	19	[contract_name=Operated,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_14(bool) = tx.origin == owner_txorigin33
\
TMP_15(None) = SOLIDITY_CALL require(bool)(TMP_14)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_14(bool) = tx.origin == owner_txorigin33
TMP_15(None) = SOLIDITY_CALL require(bool)(TMP_14)",
		node_source_code_lines="[42]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	18 -> 19	[key=0,
		edge_type=next,
		label=Next];
	20	[contract_name=Operated,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[43]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	19 -> 20	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=Operated,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_44.sol_Operated_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	21 -> 18	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52, 53]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	23	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_operator != operator,cannot set same operator)

IRs:
TMP_17(bool) = _operator != \
operator
TMP_18(None) = SOLIDITY_CALL require(bool,string)(TMP_17,cannot set same operator)",
		node_expression="require(bool,string)(_operator != operator,cannot set same operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_17(bool) = _operator != operator
TMP_18(None) = SOLIDITY_CALL require(bool,string)(TMP_17,cannot set same operator)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	22 -> 23	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_operator = operator

IRs:
_operator(address) := operator(address)",
		node_expression="_operator = operator",
		node_info_vulnerabilities=None,
		node_irs="_operator(address) := operator(address)",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(operator,hasActiveOperator())

IRs:
TMP_19(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
\
Emit OperatorUpdated(operator.TMP_19)",
		node_expression="OperatorUpdated(operator,hasActiveOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_19(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
Emit OperatorUpdated(operator.TMP_19)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	24 -> 25	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="buggy_44.sol_Operated__setOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52, 53]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	26 -> 22	[key=0,
		edge_type=next,
		label=Next];
	27	[contract_name=Operated,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	28	[contract_name=Operated,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_21(bool) = tx.origin == owner_txorigin1
\
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_21(bool) = tx.origin == owner_txorigin1
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=Operated,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	28 -> 29	[key=0,
		edge_type=next,
		label=Next];
	30	[contract_name=Operated,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_44.sol_Operated_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	30 -> 27	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=Operated,
		function_fullname="_transferOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	32	[contract_name=Operated,
		function_fullname="_transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_operator != address(0),operator not set)

IRs:
TMP_24 = CONVERT 0 to address
\
TMP_25(bool) = _operator != TMP_24
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,operator not set)",
		node_expression="require(bool,string)(_operator != address(0),operator not set)",
		node_info_vulnerabilities=None,
		node_irs="TMP_24 = CONVERT 0 to address
TMP_25(bool) = _operator != TMP_24
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,operator \
not set)",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	31 -> 32	[key=0,
		edge_type=next,
		label=Next];
	33	[contract_name=Operated,
		function_fullname="_transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_setOperator(operator)

IRs:
INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_expression="_setOperator(operator)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	32 -> 33	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=Operated,
		function_fullname="_transferOperator(address)",
		label="buggy_44.sol_Operated__transferOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	34 -> 31	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	36	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_28(bool) = tx.origin == owner_txorigin2
\
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_28(bool) = tx.origin == owner_txorigin2
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	35 -> 36	[key=0,
		edge_type=next,
		label=Next];
	37	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_30 = CONVERT this to address
REF_9 -> BALANCE \
TMP_30
Transfer dest:_recipient value:REF_9",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_30 = CONVERT this to address
REF_9 -> BALANCE TMP_30
Transfer dest:_recipient value:REF_9",
		node_source_code_lines="[66]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	36 -> 37	[key=0,
		edge_type=next,
		label=Next];
	38	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_44.sol_Operated_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	38 -> 35	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72, 73, 74]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	40	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(hasActiveOperator(),only when operator active)

IRs:
TMP_32(bool) = INTERNAL_\
CALL, Operated.hasActiveOperator()()
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,only when operator active)",
		node_expression="require(bool,string)(hasActiveOperator(),only when operator active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_32(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,only when \
operator active)",
		node_source_code_lines="[70]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	39 -> 40	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_operator = address(0)

IRs:
TMP_34 = CONVERT 0 to address
_operator(address) := TMP_34(address)",
		node_expression="_operator = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_34 = CONVERT 0 to address
_operator(address) := TMP_34(address)",
		node_source_code_lines="[71]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	40 -> 41	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = false

IRs:
_status(bool) := False(bool)",
		node_expression="_status = false",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := False(bool)",
		node_source_code_lines="[72]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	41 -> 42	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(address(0),false)

IRs:
TMP_35 = CONVERT 0 to address
Emit OperatorUpdated(TMP_\
35.False)",
		node_expression="OperatorUpdated(address(0),false)",
		node_info_vulnerabilities=None,
		node_irs="TMP_35 = CONVERT 0 to address
Emit OperatorUpdated(TMP_35.False)",
		node_source_code_lines="[73]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	42 -> 43	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="buggy_44.sol_Operated__renounceOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72, 73, 74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	44 -> 39	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=Operated,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	46	[contract_name=Operated,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_37(bool) = tx.origin == owner_txorigin17
\
TMP_38(None) = SOLIDITY_CALL require(bool)(TMP_37)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_37(bool) = tx.origin == owner_txorigin17
TMP_38(None) = SOLIDITY_CALL require(bool)(TMP_37)",
		node_source_code_lines="[76]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	45 -> 46	[key=0,
		edge_type=next,
		label=Next];
	47	[contract_name=Operated,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	46 -> 47	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=Operated,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_44.sol_Operated_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	48 -> 45	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	50	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! hasActiveOperator(),only when operator not active)

IRs:
TMP_40(bool) = \
INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_41 = ! TMP_40 
TMP_42(None) = SOLIDITY_CALL require(bool,string)(TMP_41,only when \
operator not active)",
		node_expression="require(bool,string)(! hasActiveOperator(),only when operator not active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_40(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_41 = ! TMP_40 
TMP_42(None) = SOLIDITY_CALL require(bool,string)(\
TMP_41,only when operator not active)",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	49 -> 50	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = true

IRs:
_status(bool) := True(bool)",
		node_expression="_status = true",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := True(bool)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	50 -> 51	[key=0,
		edge_type=next,
		label=Next];
	52	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(_operator,true)

IRs:
Emit OperatorUpdated(_operator.True)",
		node_expression="OperatorUpdated(_operator,true)",
		node_info_vulnerabilities=None,
		node_irs="Emit OperatorUpdated(_operator.True)",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="buggy_44.sol_Operated__activateOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	53 -> 49	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=Operated,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	55	[contract_name=Operated,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_44(bool) = tx.origin == owner_txorigin37
\
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_44(bool) = tx.origin == owner_txorigin37
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	54 -> 55	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=Operated,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=Operated,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_44.sol_Operated_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	57 -> 54	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	59	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(hasActiveOperator(),only when operator active)

IRs:
TMP_47(bool) = INTERNAL_\
CALL, Operated.hasActiveOperator()()
TMP_48(None) = SOLIDITY_CALL require(bool,string)(TMP_47,only when operator active)",
		node_expression="require(bool,string)(hasActiveOperator(),only when operator active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_47(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_48(None) = SOLIDITY_CALL require(bool,string)(TMP_47,only when \
operator active)",
		node_source_code_lines="[91]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	58 -> 59	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = false

IRs:
_status(bool) := False(bool)",
		node_expression="_status = false",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := False(bool)",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	59 -> 60	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(_operator,false)

IRs:
Emit OperatorUpdated(_operator.False)",
		node_expression="OperatorUpdated(_operator,false)",
		node_info_vulnerabilities=None,
		node_irs="Emit OperatorUpdated(_operator.False)",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	60 -> 61	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="buggy_44.sol_Operated__deactivateOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	62 -> 58	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=Operated,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	64	[contract_name=Operated,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_50(bool) = tx.origin == owner_txorigin3
\
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_50(bool) = tx.origin == owner_txorigin3
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	63 -> 64	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Operated,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_12(None) -> to.call
REF_13(None) -> REF_12.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_12(None) -> to.call
REF_13(None) -> REF_12.value",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	64 -> 65	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=Operated,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_44.sol_Operated_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	66 -> 63	[key=0,
		edge_type=next,
		label=Next];
	67	[contract_name=Operated,
		function_fullname="getOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[102, 103, 104]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	68	[contract_name=Operated,
		function_fullname="getOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
operator = _operator

IRs:
operator(address) := _operator(address)",
		node_expression="operator = _operator",
		node_info_vulnerabilities=None,
		node_irs="operator(address) := _operator(address)",
		node_source_code_lines="[103]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=Operated,
		function_fullname="getOperator()",
		label="buggy_44.sol_Operated_getOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[102, 103, 104]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	69 -> 67	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=Operated,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	71	[contract_name=Operated,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_53(bool) = tx.origin == owner_txorigin9
\
TMP_54(None) = SOLIDITY_CALL require(bool)(TMP_53)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_53(bool) = tx.origin == owner_txorigin9
TMP_54(None) = SOLIDITY_CALL require(bool)(TMP_53)",
		node_source_code_lines="[106]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	70 -> 71	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=Operated,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[107]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	71 -> 72	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=Operated,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_44.sol_Operated_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	73 -> 70	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=Operated,
		function_fullname="isOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	75	[contract_name=Operated,
		function_fullname="isOperator(address)",
		label="Node Type: RETURN

EXPRESSION:
(caller == getOperator())

IRs:
TMP_56(address) = INTERNAL_CALL, Operated.getOperator()()
TMP_57(\
bool) = caller == TMP_56
RETURN TMP_57",
		node_expression="(caller == getOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_56(address) = INTERNAL_CALL, Operated.getOperator()()
TMP_57(bool) = caller == TMP_56
RETURN TMP_57",
		node_source_code_lines="[111]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	74 -> 75	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=Operated,
		function_fullname="isOperator(address)",
		label="buggy_44.sol_Operated_isOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	76 -> 74	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=Operated,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	78	[contract_name=Operated,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_58(bool) = tx.origin == owner_txorigin25
\
TMP_59(None) = SOLIDITY_CALL require(bool)(TMP_58)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_58(bool) = tx.origin == owner_txorigin25
TMP_59(None) = SOLIDITY_CALL require(bool)(TMP_58)",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	77 -> 78	[key=0,
		edge_type=next,
		label=Next];
	79	[contract_name=Operated,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	78 -> 79	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=Operated,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_44.sol_Operated_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	80 -> 77	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=Operated,
		function_fullname="hasActiveOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	82	[contract_name=Operated,
		function_fullname="hasActiveOperator()",
		label="Node Type: RETURN

EXPRESSION:
_status

IRs:
RETURN _status",
		node_expression=_status,
		node_info_vulnerabilities=None,
		node_irs="RETURN _status",
		node_source_code_lines="[119]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	81 -> 82	[key=0,
		edge_type=next,
		label=Next];
	83	[contract_name=Operated,
		function_fullname="hasActiveOperator()",
		label="buggy_44.sol_Operated_hasActiveOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	83 -> 81	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=Operated,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[121, 122, 123, 124]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	85	[contract_name=Operated,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_61(bool) = tx.origin == owner_txorigin19
\
TMP_62(None) = SOLIDITY_CALL require(bool)(TMP_61)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_61(bool) = tx.origin == owner_txorigin19
TMP_62(None) = SOLIDITY_CALL require(bool)(TMP_61)",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	84 -> 85	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=Operated,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_16(None) -> to.call
REF_17(None) -> REF_16.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_16(None) -> to.call
REF_17(None) -> REF_16.value",
		node_source_code_lines="[123]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	85 -> 86	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=Operated,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_44.sol_Operated_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[121, 122, 123, 124]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	87 -> 84	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=Operated,
		function_fullname="isActiveOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	89	[contract_name=Operated,
		function_fullname="isActiveOperator(address)",
		label="Node Type: RETURN

EXPRESSION:
(isOperator(caller) && hasActiveOperator())

IRs:
TMP_64(bool) = INTERNAL_CALL, Operated.isOperator(\
address)(caller)
TMP_65(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_66(bool) = TMP_64 && TMP_65
RETURN TMP_66",
		node_expression="(isOperator(caller) && hasActiveOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_64(bool) = INTERNAL_CALL, Operated.isOperator(address)(caller)
TMP_65(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
\
TMP_66(bool) = TMP_64 && TMP_65
RETURN TMP_66",
		node_source_code_lines="[127]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	88 -> 89	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=Operated,
		function_fullname="isActiveOperator(address)",
		label="buggy_44.sol_Operated_isActiveOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	90 -> 88	[key=0,
		edge_type=next,
		label=Next];
	91	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	92	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_67(bool) = tx.origin == owner_txorigin26
\
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_67(bool) = tx.origin == owner_txorigin26
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_source_code_lines="[130]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	91 -> 92	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_69 = CONVERT this to address
REF_19 -> BALANCE \
TMP_69
Transfer dest:_recipient value:REF_19",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_69 = CONVERT this to address
REF_19 -> BALANCE TMP_69
Transfer dest:_recipient value:REF_19",
		node_source_code_lines="[131]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	92 -> 93	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_44.sol_Operated_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	94 -> 91	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=ProofHashes,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[140, 141, 142, 143]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	96	[contract_name=ProofHashes,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_71(bool) = tx.origin == owner_txorigin27
\
TMP_72(None) = SOLIDITY_CALL require(bool)(TMP_71)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_71(bool) = tx.origin == owner_txorigin27
TMP_72(None) = SOLIDITY_CALL require(bool)(TMP_71)",
		node_source_code_lines="[141]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	95 -> 96	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=ProofHashes,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_20(None) -> to.call
REF_21(None) -> REF_20.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_20(None) -> to.call
REF_21(None) -> REF_20.value",
		node_source_code_lines="[142]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	96 -> 97	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=ProofHashes,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_44.sol_ProofHashes_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[140, 141, 142, 143]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	98 -> 95	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=ProofHashes,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[145, 146, 147, 148]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	100	[contract_name=ProofHashes,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_74(bool) = tx.origin == owner_txorigin31
\
TMP_75(None) = SOLIDITY_CALL require(bool)(TMP_74)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_74(bool) = tx.origin == owner_txorigin31
TMP_75(None) = SOLIDITY_CALL require(bool)(TMP_74)",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	99 -> 100	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=ProofHashes,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_22(None) -> to.call
REF_23(None) -> REF_22.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_22(None) -> to.call
REF_23(None) -> REF_22.value",
		node_source_code_lines="[147]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	100 -> 101	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=ProofHashes,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_44.sol_ProofHashes_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[145, 146, 147, 148]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	102 -> 99	[key=0,
		edge_type=next,
		label=Next];
	103	[contract_name=ProofHashes,
		function_fullname="_setMultiHashFormat(uint8,uint8)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[153, 154, 155, 156]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	104	[contract_name=ProofHashes,
		function_fullname="_setMultiHashFormat(uint8,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
HashFormatSet(hashFunction,digestSize)

IRs:
Emit HashFormatSet(hashFunction.digestSize)",
		node_expression="HashFormatSet(hashFunction,digestSize)",
		node_info_vulnerabilities=None,
		node_irs="Emit HashFormatSet(hashFunction.digestSize)",
		node_source_code_lines="[155]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=ProofHashes,
		function_fullname="_setMultiHashFormat(uint8,uint8)",
		label="buggy_44.sol_ProofHashes__setMultiHashFormat(uint8,uint8)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[153, 154, 155, 156]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	105 -> 103	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=ProofHashes,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	107	[contract_name=ProofHashes,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_78(bool) = tx.origin == owner_txorigin20
\
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_78(bool) = tx.origin == owner_txorigin20
TMP_79(None) = SOLIDITY_CALL require(bool)(TMP_78)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	106 -> 107	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=ProofHashes,
		function_fullname="bug_txorigin20(address)",
		label="buggy_44.sol_ProofHashes_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	108 -> 106	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=ProofHashes,
		function_fullname="_submitHash(bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161, 162, 163, 164]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	110	[contract_name=ProofHashes,
		function_fullname="_submitHash(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
HashSubmitted(hash)

IRs:
Emit HashSubmitted(hash)",
		node_expression="HashSubmitted(hash)",
		node_info_vulnerabilities=None,
		node_irs="Emit HashSubmitted(hash)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	109 -> 110	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=ProofHashes,
		function_fullname="_submitHash(bytes32)",
		label="buggy_44.sol_ProofHashes__submitHash(bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161, 162, 163, 164]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	111 -> 109	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=ProofHashes,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[165, 166, 167]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	113	[contract_name=ProofHashes,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_81(bool) = tx.origin == owner_txorigin32
\
TMP_82(None) = SOLIDITY_CALL require(bool)(TMP_81)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_81(bool) = tx.origin == owner_txorigin32
TMP_82(None) = SOLIDITY_CALL require(bool)(TMP_81)",
		node_source_code_lines="[166]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=ProofHashes,
		function_fullname="bug_txorigin32(address)",
		label="buggy_44.sol_ProofHashes_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[165, 166, 167]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	114 -> 112	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	116	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
out = new bytes(34)

IRs:
TMP_84 = new bytes(34)
out(bytes) := TMP_84(bytes)",
		node_expression="out = new bytes(34)",
		node_info_vulnerabilities=None,
		node_irs="TMP_84 = new bytes(34)
out(bytes) := TMP_84(bytes)",
		node_source_code_lines="[193]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	115 -> 116	[key=0,
		edge_type=next,
		label=Next];
	117	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[0] = bytes1(multihash.hashFunction)

IRs:
REF_24(bytes1) -> out[0]
REF_25(uint8) -> multihash.hashFunction
\
TMP_85 = CONVERT REF_25 to bytes1
REF_24 (->out) := TMP_85(bytes1)",
		node_expression="out[0] = bytes1(multihash.hashFunction)",
		node_info_vulnerabilities=None,
		node_irs="REF_24(bytes1) -> out[0]
REF_25(uint8) -> multihash.hashFunction
TMP_85 = CONVERT REF_25 to bytes1
REF_24 (->out) := TMP_85(bytes1)",
		node_source_code_lines="[195]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	116 -> 117	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[1] = bytes1(multihash.digestSize)

IRs:
REF_26(bytes1) -> out[1]
REF_27(uint8) -> multihash.digestSize
\
TMP_86 = CONVERT REF_27 to bytes1
REF_26 (->out) := TMP_86(bytes1)",
		node_expression="out[1] = bytes1(multihash.digestSize)",
		node_info_vulnerabilities=None,
		node_irs="REF_26(bytes1) -> out[1]
REF_27(uint8) -> multihash.digestSize
TMP_86 = CONVERT REF_27 to bytes1
REF_26 (->out) := TMP_86(bytes1)",
		node_source_code_lines="[196]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	117 -> 118	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	118 -> 119	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i = 0

IRs:
i(uint8) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint8) := 0(uint256)",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	119 -> 122	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[199, 200, 201]",
		node_type=BEGIN_LOOP,
		source_file="buggy_44.sol"];
	123	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < 32

IRs:
TMP_87(bool) = i < 32
CONDITION TMP_87",
		node_expression="i < 32",
		node_info_vulnerabilities=None,
		node_irs="TMP_87(bool) = i < 32
CONDITION TMP_87",
		node_source_code_lines="[199]",
		node_type=IF_LOOP,
		source_file="buggy_44.sol"];
	120 -> 123	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[199, 200, 201]",
		node_type=END_LOOP,
		source_file="buggy_44.sol"];
	126	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: RETURN

EXPRESSION:
out

IRs:
RETURN out",
		node_expression=out,
		node_info_vulnerabilities=None,
		node_irs="RETURN out",
		node_source_code_lines="[203]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	121 -> 126	[key=0,
		edge_type=next,
		label=Next];
	122 -> 120	[key=0,
		edge_type=next,
		label=Next];
	123 -> 121	[key=0,
		edge_type=if_false,
		label=False];
	124	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[i + 2] = multihash.hash[i]

IRs:
TMP_88(uint8) = i + 2
REF_28(None) -> out[TMP_88]
REF_29(\
bytes32) -> multihash.hash
REF_30(None) -> REF_29[i]
REF_28 (->out) := REF_30(None)",
		node_expression="out[i + 2] = multihash.hash[i]",
		node_info_vulnerabilities=None,
		node_irs="TMP_88(uint8) = i + 2
REF_28(None) -> out[TMP_88]
REF_29(bytes32) -> multihash.hash
REF_30(None) -> REF_29[i]
REF_28 (->out) := \
REF_30(None)",
		node_source_code_lines="[200]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	123 -> 124	[key=0,
		edge_type=if_true,
		label=True];
	125	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_89(uint8) := i(uint8)
i(uint8) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_89(uint8) := i(uint8)
i(uint8) = i + 1",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	124 -> 125	[key=0,
		edge_type=next,
		label=Next];
	125 -> 123	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="buggy_44.sol_MultiHashWrapper__combineMultiHash(MultiHashWrapper.MultiHash)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	127 -> 115	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=MultiHashWrapper,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[205, 206, 207, 208]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	129	[contract_name=MultiHashWrapper,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_90(bool) = tx.origin == owner_txorigin38
\
TMP_91(None) = SOLIDITY_CALL require(bool)(TMP_90)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_90(bool) = tx.origin == owner_txorigin38
TMP_91(None) = SOLIDITY_CALL require(bool)(TMP_90)",
		node_source_code_lines="[206]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	128 -> 129	[key=0,
		edge_type=next,
		label=Next];
	130	[contract_name=MultiHashWrapper,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_92 = CONVERT this to address
REF_32 -> BALANCE \
TMP_92
Transfer dest:_recipient value:REF_32",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_92 = CONVERT this to address
REF_32 -> BALANCE TMP_92
Transfer dest:_recipient value:REF_32",
		node_source_code_lines="[207]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	129 -> 130	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=MultiHashWrapper,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_44.sol_MultiHashWrapper_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[205, 206, 207, 208]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	131 -> 128	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	133	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(source.length == 34,length of source must be 34)

IRs:
REF_33 -> LENGTH \
source
TMP_94(bool) = REF_33 == 34
TMP_95(None) = SOLIDITY_CALL require(bool,string)(TMP_94,length of source must be 34)",
		node_expression="require(bool,string)(source.length == 34,length of source must be 34)",
		node_info_vulnerabilities=None,
		node_irs="REF_33 -> LENGTH source
TMP_94(bool) = REF_33 == 34
TMP_95(None) = SOLIDITY_CALL require(bool,string)(TMP_94,length of source must \
be 34)",
		node_source_code_lines="[216]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	132 -> 133	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
hashFunction = uint8(source[0])

IRs:
REF_34(None) -> source[0]
TMP_96 = CONVERT REF_34 to \
uint8
hashFunction(uint8) := TMP_96(uint8)",
		node_expression="hashFunction = uint8(source[0])",
		node_info_vulnerabilities=None,
		node_irs="REF_34(None) -> source[0]
TMP_96 = CONVERT REF_34 to uint8
hashFunction(uint8) := TMP_96(uint8)",
		node_source_code_lines="[218]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	133 -> 134	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
digestSize = uint8(source[1])

IRs:
REF_35(None) -> source[1]
TMP_97 = CONVERT REF_35 to uint8
\
digestSize(uint8) := TMP_97(uint8)",
		node_expression="digestSize = uint8(source[1])",
		node_info_vulnerabilities=None,
		node_irs="REF_35(None) -> source[1]
TMP_97 = CONVERT REF_35 to uint8
digestSize(uint8) := TMP_97(uint8)",
		node_source_code_lines="[219]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	134 -> 135	[key=0,
		edge_type=next,
		label=Next];
	136	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[220]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	135 -> 136	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225, 226]",
		node_type="INLINE ASM",
		source_file="buggy_44.sol"];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: RETURN

EXPRESSION:
(MultiHash(hashFunction,digestSize,hash))

IRs:
TMP_98 = new MultiHash(hashFunction,digestSize,hash)
\
RETURN TMP_98",
		node_expression="(MultiHash(hashFunction,digestSize,hash))",
		node_info_vulnerabilities=None,
		node_irs="TMP_98 = new MultiHash(hashFunction,digestSize,hash)
RETURN TMP_98",
		node_source_code_lines="[226, 227, 228, 229, 230]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="buggy_44.sol_MultiHashWrapper__splitMultiHash(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	139 -> 132	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=MultiHashWrapper,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[232, 233, 234]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	141	[contract_name=MultiHashWrapper,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_99(bool) = tx.origin == owner_txorigin4
\
TMP_100(None) = SOLIDITY_CALL require(bool)(TMP_99)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_99(bool) = tx.origin == owner_txorigin4
TMP_100(None) = SOLIDITY_CALL require(bool)(TMP_99)",
		node_source_code_lines="[233]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=MultiHashWrapper,
		function_fullname="bug_txorigin4(address)",
		label="buggy_44.sol_MultiHashWrapper_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[232, 233, 234]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	142 -> 140	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=iFactory,
		function_fullname="create(bytes)",
		label="buggy_44.sol_iFactory_create(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[250]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	144	[contract_name=iFactory,
		function_fullname="createSalty(bytes,bytes32)",
		label="buggy_44.sol_iFactory_createSalty(bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[251]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	145	[contract_name=iFactory,
		function_fullname="getInitSelector()",
		label="buggy_44.sol_iFactory_getInitSelector()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[252]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	146	[contract_name=iFactory,
		function_fullname="getInstanceRegistry()",
		label="buggy_44.sol_iFactory_getInstanceRegistry()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[253]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	147	[contract_name=iFactory,
		function_fullname="getTemplate()",
		label="buggy_44.sol_iFactory_getTemplate()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[254]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	148	[contract_name=iFactory,
		function_fullname="getSaltyInstance(bytes,bytes32)",
		label="buggy_44.sol_iFactory_getSaltyInstance(bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[255]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	149	[contract_name=iFactory,
		function_fullname="getNextInstance(bytes)",
		label="buggy_44.sol_iFactory_getNextInstance(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[256]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	150	[contract_name=iFactory,
		function_fullname="getInstanceCreator(address)",
		label="buggy_44.sol_iFactory_getInstanceCreator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[258]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	151	[contract_name=iFactory,
		function_fullname="getInstanceType()",
		label="buggy_44.sol_iFactory_getInstanceType()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[259]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	152	[contract_name=iFactory,
		function_fullname="getInstanceCount()",
		label="buggy_44.sol_iFactory_getInstanceCount()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[260]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	153	[contract_name=iFactory,
		function_fullname="getInstance(uint256)",
		label="buggy_44.sol_iFactory_getInstance(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[261]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	154	[contract_name=iFactory,
		function_fullname="getInstances()",
		label="buggy_44.sol_iFactory_getInstances()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[262]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	155	[contract_name=iFactory,
		function_fullname="getPaginatedInstances(uint256,uint256)",
		label="buggy_44.sol_iFactory_getPaginatedInstances(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[263]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	156	[contract_name=Template,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[270, 271, 272]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	157	[contract_name=Template,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_101(bool) = tx.origin == owner_txorigin12
\
TMP_102(None) = SOLIDITY_CALL require(bool)(TMP_101)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_101(bool) = tx.origin == owner_txorigin12
TMP_102(None) = SOLIDITY_CALL require(bool)(TMP_101)",
		node_source_code_lines="[271]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	156 -> 157	[key=0,
		edge_type=next,
		label=Next];
	158	[contract_name=Template,
		function_fullname="bug_txorigin12(address)",
		label="buggy_44.sol_Template_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[270, 271, 272]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	158 -> 156	[key=0,
		edge_type=next,
		label=Next];
	159	[contract_name=Template,
		function_fullname="getCreator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[290, 291, 292, 293]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	160	[contract_name=Template,
		function_fullname="getCreator()",
		label="Node Type: EXPRESSION

EXPRESSION:
creator = iFactory(_factory).getInstanceCreator(address(this))

IRs:
TMP_103 = CONVERT _factory \
to iFactory
TMP_104 = CONVERT this to address
TMP_105(address) = HIGH_LEVEL_CALL, dest:TMP_103(iFactory), function:getInstanceCreator, \
arguments:['TMP_104']  
creator(address) := TMP_105(address)",
		node_expression="creator = iFactory(_factory).getInstanceCreator(address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_103 = CONVERT _factory to iFactory
TMP_104 = CONVERT this to address
TMP_105(address) = HIGH_LEVEL_CALL, dest:TMP_103(iFactory), \
function:getInstanceCreator, arguments:['TMP_104']  
creator(address) := TMP_105(address)",
		node_source_code_lines="[292]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=Template,
		function_fullname="getCreator()",
		label="buggy_44.sol_Template_getCreator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[290, 291, 292, 293]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	161 -> 159	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=Template,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[294, 295, 296, 297]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	163	[contract_name=Template,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_106(bool) = tx.origin == owner_txorigin7
\
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_106(bool) = tx.origin == owner_txorigin7
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	162 -> 163	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=Template,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_37(None) -> to.call
REF_38(None) -> REF_37.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_37(None) -> to.call
REF_38(None) -> REF_37.value",
		node_source_code_lines="[296]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=Template,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_44.sol_Template_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[294, 295, 296, 297]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	165 -> 162	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=Template,
		function_fullname="isCreator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[299, 300, 301]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	167	[contract_name=Template,
		function_fullname="isCreator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
ok = (caller == getCreator())

IRs:
TMP_109(address) = INTERNAL_CALL, Template.getCreator()()
\
TMP_110(bool) = caller == TMP_109
ok(bool) := TMP_110(bool)",
		node_expression="ok = (caller == getCreator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_109(address) = INTERNAL_CALL, Template.getCreator()()
TMP_110(bool) = caller == TMP_109
ok(bool) := TMP_110(bool)",
		node_source_code_lines="[300]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=Template,
		function_fullname="isCreator(address)",
		label="buggy_44.sol_Template_isCreator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[299, 300, 301]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	168 -> 166	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=Template,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[302, 303, 304, 305]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	170	[contract_name=Template,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_111(bool) = tx.origin == owner_txorigin23
\
TMP_112(None) = SOLIDITY_CALL require(bool)(TMP_111)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_111(bool) = tx.origin == owner_txorigin23
TMP_112(None) = SOLIDITY_CALL require(bool)(TMP_111)",
		node_source_code_lines="[303]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	169 -> 170	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=Template,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_39(None) -> to.call
REF_40(None) -> REF_39.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_39(None) -> to.call
REF_40(None) -> REF_39.value",
		node_source_code_lines="[304]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	170 -> 171	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=Template,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_44.sol_Template_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[302, 303, 304, 305]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	172 -> 169	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=Template,
		function_fullname="getFactory()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	174	[contract_name=Template,
		function_fullname="getFactory()",
		label="Node Type: EXPRESSION

EXPRESSION:
factory = _factory

IRs:
factory(address) := _factory(address)",
		node_expression="factory = _factory",
		node_info_vulnerabilities=None,
		node_irs="factory(address) := _factory(address)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	173 -> 174	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=Template,
		function_fullname="getFactory()",
		label="buggy_44.sol_Template_getFactory()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	175 -> 173	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=Template,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[310, 311, 312, 313]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	177	[contract_name=Template,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_114(bool) = tx.origin == owner_txorigin14
\
TMP_115(None) = SOLIDITY_CALL require(bool)(TMP_114)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_114(bool) = tx.origin == owner_txorigin14
TMP_115(None) = SOLIDITY_CALL require(bool)(TMP_114)",
		node_source_code_lines="[311]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	176 -> 177	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=Template,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_116 = CONVERT this to address
REF_42 -> \
BALANCE TMP_116
Transfer dest:_recipient value:REF_42",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_116 = CONVERT this to address
REF_42 -> BALANCE TMP_116
Transfer dest:_recipient value:REF_42",
		node_source_code_lines="[312]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	177 -> 178	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=Template,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_44.sol_Template_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[310, 311, 312, 313]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	179 -> 176	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278, 279, 280, 281, 282, 283, 284, 285, 286]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	181	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: EXPRESSION

EXPRESSION:
_factory = msg.sender

IRs:
_factory(address) := msg.sender(address)",
		node_expression="_factory = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="_factory(address) := msg.sender(address)",
		node_source_code_lines="[279]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	180 -> 181	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[282]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	181 -> 182	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[283, 284]",
		node_type="INLINE ASM",
		source_file="buggy_44.sol"];
	182 -> 183	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(codeSize == 0,must be called within contract constructor)

IRs:
TMP_118(\
bool) = codeSize == 0
TMP_119(None) = SOLIDITY_CALL require(bool,string)(TMP_118,must be called within contract constructor)",
		node_expression="require(bool,string)(codeSize == 0,must be called within contract constructor)",
		node_info_vulnerabilities=None,
		node_irs="TMP_118(bool) = codeSize == 0
TMP_119(None) = SOLIDITY_CALL require(bool,string)(TMP_118,must be called within contract constructor)",
		node_source_code_lines="[284]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	183 -> 184	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[285]",
		node_type=_,
		source_file="buggy_44.sol"];
	184 -> 185	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="buggy_44.sol_Template_initializeTemplate()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278, 279, 280, 281, 282, 283, 284, 285, 286]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	186 -> 180	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=Feed,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[270, 271, 272]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	188	[contract_name=Feed,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_120(bool) = tx.origin == owner_txorigin12
\
TMP_121(None) = SOLIDITY_CALL require(bool)(TMP_120)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_120(bool) = tx.origin == owner_txorigin12
TMP_121(None) = SOLIDITY_CALL require(bool)(TMP_120)",
		node_source_code_lines="[271]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	187 -> 188	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=Feed,
		function_fullname="bug_txorigin12(address)",
		label="buggy_44.sol_Feed_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[270, 271, 272]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	189 -> 187	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=Feed,
		function_fullname="getCreator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[290, 291, 292, 293]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	191	[contract_name=Feed,
		function_fullname="getCreator()",
		label="Node Type: EXPRESSION

EXPRESSION:
creator = iFactory(_factory).getInstanceCreator(address(this))

IRs:
TMP_122 = CONVERT _factory \
to iFactory
TMP_123 = CONVERT this to address
TMP_124(address) = HIGH_LEVEL_CALL, dest:TMP_122(iFactory), function:getInstanceCreator, \
arguments:['TMP_123']  
creator(address) := TMP_124(address)",
		node_expression="creator = iFactory(_factory).getInstanceCreator(address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_122 = CONVERT _factory to iFactory
TMP_123 = CONVERT this to address
TMP_124(address) = HIGH_LEVEL_CALL, dest:TMP_122(iFactory), \
function:getInstanceCreator, arguments:['TMP_123']  
creator(address) := TMP_124(address)",
		node_source_code_lines="[292]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	190 -> 191	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=Feed,
		function_fullname="getCreator()",
		label="buggy_44.sol_Feed_getCreator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[290, 291, 292, 293]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	192 -> 190	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=Feed,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[294, 295, 296, 297]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	194	[contract_name=Feed,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_125(bool) = tx.origin == owner_txorigin7
\
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_125(bool) = tx.origin == owner_txorigin7
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=Feed,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_44(None) -> to.call
REF_45(None) -> REF_44.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_44(None) -> to.call
REF_45(None) -> REF_44.value",
		node_source_code_lines="[296]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=Feed,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_44.sol_Feed_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[294, 295, 296, 297]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	196 -> 193	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=Feed,
		function_fullname="isCreator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[299, 300, 301]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	198	[contract_name=Feed,
		function_fullname="isCreator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
ok = (caller == getCreator())

IRs:
TMP_128(address) = INTERNAL_CALL, Template.getCreator()()
\
TMP_129(bool) = caller == TMP_128
ok(bool) := TMP_129(bool)",
		node_expression="ok = (caller == getCreator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_128(address) = INTERNAL_CALL, Template.getCreator()()
TMP_129(bool) = caller == TMP_128
ok(bool) := TMP_129(bool)",
		node_source_code_lines="[300]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=Feed,
		function_fullname="isCreator(address)",
		label="buggy_44.sol_Feed_isCreator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[299, 300, 301]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	199 -> 197	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=Feed,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[302, 303, 304, 305]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	201	[contract_name=Feed,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_130(bool) = tx.origin == owner_txorigin23
\
TMP_131(None) = SOLIDITY_CALL require(bool)(TMP_130)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_130(bool) = tx.origin == owner_txorigin23
TMP_131(None) = SOLIDITY_CALL require(bool)(TMP_130)",
		node_source_code_lines="[303]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	200 -> 201	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=Feed,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_46(None) -> to.call
REF_47(None) -> REF_46.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_46(None) -> to.call
REF_47(None) -> REF_46.value",
		node_source_code_lines="[304]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	201 -> 202	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=Feed,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_44.sol_Feed_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[302, 303, 304, 305]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	203 -> 200	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=Feed,
		function_fullname="getFactory()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	205	[contract_name=Feed,
		function_fullname="getFactory()",
		label="Node Type: EXPRESSION

EXPRESSION:
factory = _factory

IRs:
factory(address) := _factory(address)",
		node_expression="factory = _factory",
		node_info_vulnerabilities=None,
		node_irs="factory(address) := _factory(address)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	204 -> 205	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=Feed,
		function_fullname="getFactory()",
		label="buggy_44.sol_Feed_getFactory()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	206 -> 204	[key=0,
		edge_type=next,
		label=Next];
	207	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[310, 311, 312, 313]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	208	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_133(bool) = tx.origin == owner_txorigin14
\
TMP_134(None) = SOLIDITY_CALL require(bool)(TMP_133)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_133(bool) = tx.origin == owner_txorigin14
TMP_134(None) = SOLIDITY_CALL require(bool)(TMP_133)",
		node_source_code_lines="[311]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	207 -> 208	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_135 = CONVERT this to address
REF_49 -> \
BALANCE TMP_135
Transfer dest:_recipient value:REF_49",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_135 = CONVERT this to address
REF_49 -> BALANCE TMP_135
Transfer dest:_recipient value:REF_49",
		node_source_code_lines="[312]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	210	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_44.sol_Feed_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[310, 311, 312, 313]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	210 -> 207	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=Feed,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[10, 11, 12]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	212	[contract_name=Feed,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_137(bool) = tx.origin == owner_txorigin40
\
TMP_138(None) = SOLIDITY_CALL require(bool)(TMP_137)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_137(bool) = tx.origin == owner_txorigin40
TMP_138(None) = SOLIDITY_CALL require(bool)(TMP_137)",
		node_source_code_lines="[11]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	211 -> 212	[key=0,
		edge_type=next,
		label=Next];
	213	[contract_name=Feed,
		function_fullname="bug_txorigin40(address)",
		label="buggy_44.sol_Feed_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[10, 11, 12]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	213 -> 211	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=Feed,
		function_fullname="_setMetadata(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17, 18, 19]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	215	[contract_name=Feed,
		function_fullname="_setMetadata(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
MetadataSet(metadata)

IRs:
Emit MetadataSet(metadata)",
		node_expression="MetadataSet(metadata)",
		node_info_vulnerabilities=None,
		node_irs="Emit MetadataSet(metadata)",
		node_source_code_lines="[18]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	214 -> 215	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=Feed,
		function_fullname="_setMetadata(bytes)",
		label="buggy_44.sol_Feed__setMetadata(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17, 18, 19]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	216 -> 214	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=Feed,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[20, 21, 22, 23]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	218	[contract_name=Feed,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_140(bool) = tx.origin == owner_txorigin11
\
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_140(bool) = tx.origin == owner_txorigin11
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	217 -> 218	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=Feed,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_50(None) -> to.call
REF_51(None) -> REF_50.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_50(None) -> to.call
REF_51(None) -> REF_50.value",
		node_source_code_lines="[22]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	218 -> 219	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=Feed,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_44.sol_Feed_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[20, 21, 22, 23]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	220 -> 217	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	222	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_143(bool) = tx.origin == owner_txorigin10
\
TMP_144(None) = SOLIDITY_CALL require(bool)(TMP_143)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_143(bool) = tx.origin == owner_txorigin10
TMP_144(None) = SOLIDITY_CALL require(bool)(TMP_143)",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_145 = CONVERT this to address
REF_53 -> \
BALANCE TMP_145
Transfer dest:_recipient value:REF_53",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_145 = CONVERT this to address
REF_53 -> BALANCE TMP_145
Transfer dest:_recipient value:REF_53",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	222 -> 223	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_44.sol_Feed_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	224 -> 221	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	226	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_147(bool) = tx.origin == owner_txorigin22
\
TMP_148(None) = SOLIDITY_CALL require(bool)(TMP_147)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_147(bool) = tx.origin == owner_txorigin22
TMP_148(None) = SOLIDITY_CALL require(bool)(TMP_147)",
		node_source_code_lines="[36]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	225 -> 226	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_149 = CONVERT this to address
REF_55 -> \
BALANCE TMP_149
Transfer dest:_recipient value:REF_55",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_149 = CONVERT this to address
REF_55 -> BALANCE TMP_149
Transfer dest:_recipient value:REF_55",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	226 -> 227	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_44.sol_Feed_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	228 -> 225	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=Feed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	230	[contract_name=Feed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_151(bool) = tx.origin == owner_txorigin33
\
TMP_152(None) = SOLIDITY_CALL require(bool)(TMP_151)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_151(bool) = tx.origin == owner_txorigin33
TMP_152(None) = SOLIDITY_CALL require(bool)(TMP_151)",
		node_source_code_lines="[42]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=Feed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[43]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	230 -> 231	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=Feed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_44.sol_Feed_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	232 -> 229	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=Feed,
		function_fullname="_setOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52, 53]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	234	[contract_name=Feed,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_operator != operator,cannot set same operator)

IRs:
TMP_154(bool) = _operator != \
operator
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,cannot set same operator)",
		node_expression="require(bool,string)(_operator != operator,cannot set same operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_154(bool) = _operator != operator
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,cannot set same operator)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	233 -> 234	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=Feed,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_operator = operator

IRs:
_operator(address) := operator(address)",
		node_expression="_operator = operator",
		node_info_vulnerabilities=None,
		node_irs="_operator(address) := operator(address)",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	234 -> 235	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=Feed,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(operator,hasActiveOperator())

IRs:
TMP_156(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
\
Emit OperatorUpdated(operator.TMP_156)",
		node_expression="OperatorUpdated(operator,hasActiveOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_156(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
Emit OperatorUpdated(operator.TMP_156)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	235 -> 236	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=Feed,
		function_fullname="_setOperator(address)",
		label="buggy_44.sol_Feed__setOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52, 53]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	237 -> 233	[key=0,
		edge_type=next,
		label=Next];
	238	[contract_name=Feed,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	239	[contract_name=Feed,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_158(bool) = tx.origin == owner_txorigin1
\
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_158(bool) = tx.origin == owner_txorigin1
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=Feed,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	239 -> 240	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=Feed,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_44.sol_Feed_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	241 -> 238	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=Feed,
		function_fullname="_transferOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	243	[contract_name=Feed,
		function_fullname="_transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_operator != address(0),operator not set)

IRs:
TMP_161 = CONVERT 0 to address
\
TMP_162(bool) = _operator != TMP_161
TMP_163(None) = SOLIDITY_CALL require(bool,string)(TMP_162,operator not set)",
		node_expression="require(bool,string)(_operator != address(0),operator not set)",
		node_info_vulnerabilities=None,
		node_irs="TMP_161 = CONVERT 0 to address
TMP_162(bool) = _operator != TMP_161
TMP_163(None) = SOLIDITY_CALL require(bool,string)(TMP_162,operator \
not set)",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	242 -> 243	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=Feed,
		function_fullname="_transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_setOperator(operator)

IRs:
INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_expression="_setOperator(operator)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	243 -> 244	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=Feed,
		function_fullname="_transferOperator(address)",
		label="buggy_44.sol_Feed__transferOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	245 -> 242	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	247	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_165(bool) = tx.origin == owner_txorigin2
\
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_165(bool) = tx.origin == owner_txorigin2
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	246 -> 247	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_167 = CONVERT this to address
REF_59 -> \
BALANCE TMP_167
Transfer dest:_recipient value:REF_59",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_167 = CONVERT this to address
REF_59 -> BALANCE TMP_167
Transfer dest:_recipient value:REF_59",
		node_source_code_lines="[66]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	247 -> 248	[key=0,
		edge_type=next,
		label=Next];
	249	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_44.sol_Feed_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	249 -> 246	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=Feed,
		function_fullname="_renounceOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72, 73, 74]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	251	[contract_name=Feed,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(hasActiveOperator(),only when operator active)

IRs:
TMP_169(bool) = INTERNAL_\
CALL, Operated.hasActiveOperator()()
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,only when operator active)",
		node_expression="require(bool,string)(hasActiveOperator(),only when operator active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_169(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,only when \
operator active)",
		node_source_code_lines="[70]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	250 -> 251	[key=0,
		edge_type=next,
		label=Next];
	252	[contract_name=Feed,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_operator = address(0)

IRs:
TMP_171 = CONVERT 0 to address
_operator(address) := TMP_171(address)",
		node_expression="_operator = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_171 = CONVERT 0 to address
_operator(address) := TMP_171(address)",
		node_source_code_lines="[71]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	251 -> 252	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=Feed,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = false

IRs:
_status(bool) := False(bool)",
		node_expression="_status = false",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := False(bool)",
		node_source_code_lines="[72]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=Feed,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(address(0),false)

IRs:
TMP_172 = CONVERT 0 to address
Emit OperatorUpdated(TMP_\
172.False)",
		node_expression="OperatorUpdated(address(0),false)",
		node_info_vulnerabilities=None,
		node_irs="TMP_172 = CONVERT 0 to address
Emit OperatorUpdated(TMP_172.False)",
		node_source_code_lines="[73]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	253 -> 254	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=Feed,
		function_fullname="_renounceOperator()",
		label="buggy_44.sol_Feed__renounceOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72, 73, 74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	255 -> 250	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=Feed,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	257	[contract_name=Feed,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_174(bool) = tx.origin == owner_txorigin17
\
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_174(bool) = tx.origin == owner_txorigin17
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_source_code_lines="[76]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=Feed,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	257 -> 258	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=Feed,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_44.sol_Feed_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	259 -> 256	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=Feed,
		function_fullname="_activateOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	261	[contract_name=Feed,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! hasActiveOperator(),only when operator not active)

IRs:
TMP_177(bool) = \
INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_178 = ! TMP_177 
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,only \
when operator not active)",
		node_expression="require(bool,string)(! hasActiveOperator(),only when operator not active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_177(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_178 = ! TMP_177 
TMP_179(None) = SOLIDITY_CALL require(bool,string)(\
TMP_178,only when operator not active)",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=Feed,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = true

IRs:
_status(bool) := True(bool)",
		node_expression="_status = true",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := True(bool)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=Feed,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(_operator,true)

IRs:
Emit OperatorUpdated(_operator.True)",
		node_expression="OperatorUpdated(_operator,true)",
		node_info_vulnerabilities=None,
		node_irs="Emit OperatorUpdated(_operator.True)",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	262 -> 263	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=Feed,
		function_fullname="_activateOperator()",
		label="buggy_44.sol_Feed__activateOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	264 -> 260	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=Feed,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	266	[contract_name=Feed,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_181(bool) = tx.origin == owner_txorigin37
\
TMP_182(None) = SOLIDITY_CALL require(bool)(TMP_181)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_181(bool) = tx.origin == owner_txorigin37
TMP_182(None) = SOLIDITY_CALL require(bool)(TMP_181)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	265 -> 266	[key=0,
		edge_type=next,
		label=Next];
	267	[contract_name=Feed,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=Feed,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_44.sol_Feed_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	268 -> 265	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=Feed,
		function_fullname="_deactivateOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	270	[contract_name=Feed,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(hasActiveOperator(),only when operator active)

IRs:
TMP_184(bool) = INTERNAL_\
CALL, Operated.hasActiveOperator()()
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,only when operator active)",
		node_expression="require(bool,string)(hasActiveOperator(),only when operator active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_184(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,only when \
operator active)",
		node_source_code_lines="[91]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	269 -> 270	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=Feed,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = false

IRs:
_status(bool) := False(bool)",
		node_expression="_status = false",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := False(bool)",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	270 -> 271	[key=0,
		edge_type=next,
		label=Next];
	272	[contract_name=Feed,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(_operator,false)

IRs:
Emit OperatorUpdated(_operator.False)",
		node_expression="OperatorUpdated(_operator,false)",
		node_info_vulnerabilities=None,
		node_irs="Emit OperatorUpdated(_operator.False)",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	271 -> 272	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=Feed,
		function_fullname="_deactivateOperator()",
		label="buggy_44.sol_Feed__deactivateOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	273 -> 269	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=Feed,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	275	[contract_name=Feed,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_187(bool) = tx.origin == owner_txorigin3
\
TMP_188(None) = SOLIDITY_CALL require(bool)(TMP_187)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_187(bool) = tx.origin == owner_txorigin3
TMP_188(None) = SOLIDITY_CALL require(bool)(TMP_187)",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	274 -> 275	[key=0,
		edge_type=next,
		label=Next];
	276	[contract_name=Feed,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_62(None) -> to.call
REF_63(None) -> REF_62.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_62(None) -> to.call
REF_63(None) -> REF_62.value",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	275 -> 276	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=Feed,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_44.sol_Feed_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	277 -> 274	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=Feed,
		function_fullname="getOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[102, 103, 104]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	279	[contract_name=Feed,
		function_fullname="getOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
operator = _operator

IRs:
operator(address) := _operator(address)",
		node_expression="operator = _operator",
		node_info_vulnerabilities=None,
		node_irs="operator(address) := _operator(address)",
		node_source_code_lines="[103]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	278 -> 279	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=Feed,
		function_fullname="getOperator()",
		label="buggy_44.sol_Feed_getOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[102, 103, 104]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	280 -> 278	[key=0,
		edge_type=next,
		label=Next];
	281	[contract_name=Feed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	282	[contract_name=Feed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_190(bool) = tx.origin == owner_txorigin9
\
TMP_191(None) = SOLIDITY_CALL require(bool)(TMP_190)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_190(bool) = tx.origin == owner_txorigin9
TMP_191(None) = SOLIDITY_CALL require(bool)(TMP_190)",
		node_source_code_lines="[106]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	281 -> 282	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=Feed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[107]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	282 -> 283	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=Feed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_44.sol_Feed_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	284 -> 281	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=Feed,
		function_fullname="isOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	286	[contract_name=Feed,
		function_fullname="isOperator(address)",
		label="Node Type: RETURN

EXPRESSION:
(caller == getOperator())

IRs:
TMP_193(address) = INTERNAL_CALL, Operated.getOperator()()
TMP_194(\
bool) = caller == TMP_193
RETURN TMP_194",
		node_expression="(caller == getOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_193(address) = INTERNAL_CALL, Operated.getOperator()()
TMP_194(bool) = caller == TMP_193
RETURN TMP_194",
		node_source_code_lines="[111]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	285 -> 286	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=Feed,
		function_fullname="isOperator(address)",
		label="buggy_44.sol_Feed_isOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	287 -> 285	[key=0,
		edge_type=next,
		label=Next];
	288	[contract_name=Feed,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	289	[contract_name=Feed,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_195(bool) = tx.origin == owner_txorigin25
\
TMP_196(None) = SOLIDITY_CALL require(bool)(TMP_195)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_195(bool) = tx.origin == owner_txorigin25
TMP_196(None) = SOLIDITY_CALL require(bool)(TMP_195)",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	288 -> 289	[key=0,
		edge_type=next,
		label=Next];
	290	[contract_name=Feed,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	289 -> 290	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=Feed,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_44.sol_Feed_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	291 -> 288	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=Feed,
		function_fullname="hasActiveOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	293	[contract_name=Feed,
		function_fullname="hasActiveOperator()",
		label="Node Type: RETURN

EXPRESSION:
_status

IRs:
RETURN _status",
		node_expression=_status,
		node_info_vulnerabilities=None,
		node_irs="RETURN _status",
		node_source_code_lines="[119]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	292 -> 293	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=Feed,
		function_fullname="hasActiveOperator()",
		label="buggy_44.sol_Feed_hasActiveOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	294 -> 292	[key=0,
		edge_type=next,
		label=Next];
	295	[contract_name=Feed,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[121, 122, 123, 124]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	296	[contract_name=Feed,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_198(bool) = tx.origin == owner_txorigin19
\
TMP_199(None) = SOLIDITY_CALL require(bool)(TMP_198)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_198(bool) = tx.origin == owner_txorigin19
TMP_199(None) = SOLIDITY_CALL require(bool)(TMP_198)",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	295 -> 296	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=Feed,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_66(None) -> to.call
REF_67(None) -> REF_66.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_66(None) -> to.call
REF_67(None) -> REF_66.value",
		node_source_code_lines="[123]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	296 -> 297	[key=0,
		edge_type=next,
		label=Next];
	298	[contract_name=Feed,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_44.sol_Feed_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[121, 122, 123, 124]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	298 -> 295	[key=0,
		edge_type=next,
		label=Next];
	299	[contract_name=Feed,
		function_fullname="isActiveOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	300	[contract_name=Feed,
		function_fullname="isActiveOperator(address)",
		label="Node Type: RETURN

EXPRESSION:
(isOperator(caller) && hasActiveOperator())

IRs:
TMP_201(bool) = INTERNAL_CALL, Operated.isOperator(\
address)(caller)
TMP_202(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_203(bool) = TMP_201 && TMP_202
RETURN TMP_203",
		node_expression="(isOperator(caller) && hasActiveOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_201(bool) = INTERNAL_CALL, Operated.isOperator(address)(caller)
TMP_202(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
\
TMP_203(bool) = TMP_201 && TMP_202
RETURN TMP_203",
		node_source_code_lines="[127]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	299 -> 300	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=Feed,
		function_fullname="isActiveOperator(address)",
		label="buggy_44.sol_Feed_isActiveOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	301 -> 299	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	303	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_204(bool) = tx.origin == owner_txorigin26
\
TMP_205(None) = SOLIDITY_CALL require(bool)(TMP_204)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_204(bool) = tx.origin == owner_txorigin26
TMP_205(None) = SOLIDITY_CALL require(bool)(TMP_204)",
		node_source_code_lines="[130]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	302 -> 303	[key=0,
		edge_type=next,
		label=Next];
	304	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_206 = CONVERT this to address
REF_69 -> \
BALANCE TMP_206
Transfer dest:_recipient value:REF_69",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_206 = CONVERT this to address
REF_69 -> BALANCE TMP_206
Transfer dest:_recipient value:REF_69",
		node_source_code_lines="[131]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	303 -> 304	[key=0,
		edge_type=next,
		label=Next];
	305	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_44.sol_Feed_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	305 -> 302	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	307	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
out = new bytes(34)

IRs:
TMP_209 = new bytes(34)
out(bytes) := TMP_209(bytes)",
		node_expression="out = new bytes(34)",
		node_info_vulnerabilities=None,
		node_irs="TMP_209 = new bytes(34)
out(bytes) := TMP_209(bytes)",
		node_source_code_lines="[193]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	306 -> 307	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[0] = bytes1(multihash.hashFunction)

IRs:
REF_70(bytes1) -> out[0]
REF_71(uint8) -> multihash.hashFunction
\
TMP_210 = CONVERT REF_71 to bytes1
REF_70 (->out) := TMP_210(bytes1)",
		node_expression="out[0] = bytes1(multihash.hashFunction)",
		node_info_vulnerabilities=None,
		node_irs="REF_70(bytes1) -> out[0]
REF_71(uint8) -> multihash.hashFunction
TMP_210 = CONVERT REF_71 to bytes1
REF_70 (->out) := TMP_210(bytes1)",
		node_source_code_lines="[195]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[1] = bytes1(multihash.digestSize)

IRs:
REF_72(bytes1) -> out[1]
REF_73(uint8) -> multihash.digestSize
\
TMP_211 = CONVERT REF_73 to bytes1
REF_72 (->out) := TMP_211(bytes1)",
		node_expression="out[1] = bytes1(multihash.digestSize)",
		node_info_vulnerabilities=None,
		node_irs="REF_72(bytes1) -> out[1]
REF_73(uint8) -> multihash.digestSize
TMP_211 = CONVERT REF_73 to bytes1
REF_72 (->out) := TMP_211(bytes1)",
		node_source_code_lines="[196]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	308 -> 309	[key=0,
		edge_type=next,
		label=Next];
	310	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	309 -> 310	[key=0,
		edge_type=next,
		label=Next];
	313	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i = 0

IRs:
i(uint8) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint8) := 0(uint256)",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	310 -> 313	[key=0,
		edge_type=next,
		label=Next];
	311	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[199, 200, 201]",
		node_type=BEGIN_LOOP,
		source_file="buggy_44.sol"];
	314	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < 32

IRs:
TMP_212(bool) = i < 32
CONDITION TMP_212",
		node_expression="i < 32",
		node_info_vulnerabilities=None,
		node_irs="TMP_212(bool) = i < 32
CONDITION TMP_212",
		node_source_code_lines="[199]",
		node_type=IF_LOOP,
		source_file="buggy_44.sol"];
	311 -> 314	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[199, 200, 201]",
		node_type=END_LOOP,
		source_file="buggy_44.sol"];
	317	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: RETURN

EXPRESSION:
out

IRs:
RETURN out",
		node_expression=out,
		node_info_vulnerabilities=None,
		node_irs="RETURN out",
		node_source_code_lines="[203]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	312 -> 317	[key=0,
		edge_type=next,
		label=Next];
	313 -> 311	[key=0,
		edge_type=next,
		label=Next];
	314 -> 312	[key=0,
		edge_type=if_false,
		label=False];
	315	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[i + 2] = multihash.hash[i]

IRs:
TMP_213(uint8) = i + 2
REF_74(None) -> out[TMP_213]
REF_\
75(bytes32) -> multihash.hash
REF_76(None) -> REF_75[i]
REF_74 (->out) := REF_76(None)",
		node_expression="out[i + 2] = multihash.hash[i]",
		node_info_vulnerabilities=None,
		node_irs="TMP_213(uint8) = i + 2
REF_74(None) -> out[TMP_213]
REF_75(bytes32) -> multihash.hash
REF_76(None) -> REF_75[i]
REF_74 (->out) := \
REF_76(None)",
		node_source_code_lines="[200]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	314 -> 315	[key=0,
		edge_type=if_true,
		label=True];
	316	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_214(uint8) := i(uint8)
i(uint8) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_214(uint8) := i(uint8)
i(uint8) = i + 1",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	315 -> 316	[key=0,
		edge_type=next,
		label=Next];
	316 -> 314	[key=0,
		edge_type=next,
		label=Next];
	318	[contract_name=Feed,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="buggy_44.sol_Feed__combineMultiHash(MultiHashWrapper.MultiHash)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	318 -> 306	[key=0,
		edge_type=next,
		label=Next];
	319	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[205, 206, 207, 208]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	320	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_215(bool) = tx.origin == owner_txorigin38
\
TMP_216(None) = SOLIDITY_CALL require(bool)(TMP_215)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_215(bool) = tx.origin == owner_txorigin38
TMP_216(None) = SOLIDITY_CALL require(bool)(TMP_215)",
		node_source_code_lines="[206]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	319 -> 320	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_217 = CONVERT this to address
REF_78 -> \
BALANCE TMP_217
Transfer dest:_recipient value:REF_78",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_217 = CONVERT this to address
REF_78 -> BALANCE TMP_217
Transfer dest:_recipient value:REF_78",
		node_source_code_lines="[207]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	320 -> 321	[key=0,
		edge_type=next,
		label=Next];
	322	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_44.sol_Feed_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[205, 206, 207, 208]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	322 -> 319	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=Feed,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	324	[contract_name=Feed,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(source.length == 34,length of source must be 34)

IRs:
REF_79 -> LENGTH \
source
TMP_219(bool) = REF_79 == 34
TMP_220(None) = SOLIDITY_CALL require(bool,string)(TMP_219,length of source must be 34)",
		node_expression="require(bool,string)(source.length == 34,length of source must be 34)",
		node_info_vulnerabilities=None,
		node_irs="REF_79 -> LENGTH source
TMP_219(bool) = REF_79 == 34
TMP_220(None) = SOLIDITY_CALL require(bool,string)(TMP_219,length of source \
must be 34)",
		node_source_code_lines="[216]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	323 -> 324	[key=0,
		edge_type=next,
		label=Next];
	325	[contract_name=Feed,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
hashFunction = uint8(source[0])

IRs:
REF_80(None) -> source[0]
TMP_221 = CONVERT REF_80 to \
uint8
hashFunction(uint8) := TMP_221(uint8)",
		node_expression="hashFunction = uint8(source[0])",
		node_info_vulnerabilities=None,
		node_irs="REF_80(None) -> source[0]
TMP_221 = CONVERT REF_80 to uint8
hashFunction(uint8) := TMP_221(uint8)",
		node_source_code_lines="[218]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	324 -> 325	[key=0,
		edge_type=next,
		label=Next];
	326	[contract_name=Feed,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
digestSize = uint8(source[1])

IRs:
REF_81(None) -> source[1]
TMP_222 = CONVERT REF_81 to uint8
\
digestSize(uint8) := TMP_222(uint8)",
		node_expression="digestSize = uint8(source[1])",
		node_info_vulnerabilities=None,
		node_irs="REF_81(None) -> source[1]
TMP_222 = CONVERT REF_81 to uint8
digestSize(uint8) := TMP_222(uint8)",
		node_source_code_lines="[219]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	325 -> 326	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=Feed,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[220]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	326 -> 327	[key=0,
		edge_type=next,
		label=Next];
	328	[contract_name=Feed,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225, 226]",
		node_type="INLINE ASM",
		source_file="buggy_44.sol"];
	327 -> 328	[key=0,
		edge_type=next,
		label=Next];
	329	[contract_name=Feed,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: RETURN

EXPRESSION:
(MultiHash(hashFunction,digestSize,hash))

IRs:
TMP_223 = new MultiHash(hashFunction,digestSize,hash)
\
RETURN TMP_223",
		node_expression="(MultiHash(hashFunction,digestSize,hash))",
		node_info_vulnerabilities=None,
		node_irs="TMP_223 = new MultiHash(hashFunction,digestSize,hash)
RETURN TMP_223",
		node_source_code_lines="[226, 227, 228, 229, 230]",
		node_type=RETURN,
		source_file="buggy_44.sol"];
	328 -> 329	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=Feed,
		function_fullname="_splitMultiHash(bytes)",
		label="buggy_44.sol_Feed__splitMultiHash(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	330 -> 323	[key=0,
		edge_type=next,
		label=Next];
	331	[contract_name=Feed,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[232, 233, 234]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	332	[contract_name=Feed,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_224(bool) = tx.origin == owner_txorigin4
\
TMP_225(None) = SOLIDITY_CALL require(bool)(TMP_224)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_224(bool) = tx.origin == owner_txorigin4
TMP_225(None) = SOLIDITY_CALL require(bool)(TMP_224)",
		node_source_code_lines="[233]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	331 -> 332	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=Feed,
		function_fullname="bug_txorigin4(address)",
		label="buggy_44.sol_Feed_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[232, 233, 234]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	333 -> 331	[key=0,
		edge_type=next,
		label=Next];
	334	[contract_name=Feed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[140, 141, 142, 143]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	335	[contract_name=Feed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_226(bool) = tx.origin == owner_txorigin27
\
TMP_227(None) = SOLIDITY_CALL require(bool)(TMP_226)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_226(bool) = tx.origin == owner_txorigin27
TMP_227(None) = SOLIDITY_CALL require(bool)(TMP_226)",
		node_source_code_lines="[141]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	334 -> 335	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=Feed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_82(None) -> to.call
REF_83(None) -> REF_82.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_82(None) -> to.call
REF_83(None) -> REF_82.value",
		node_source_code_lines="[142]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	335 -> 336	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=Feed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_44.sol_Feed_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[140, 141, 142, 143]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	337 -> 334	[key=0,
		edge_type=next,
		label=Next];
	338	[contract_name=Feed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[145, 146, 147, 148]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	339	[contract_name=Feed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_229(bool) = tx.origin == owner_txorigin31
\
TMP_230(None) = SOLIDITY_CALL require(bool)(TMP_229)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_229(bool) = tx.origin == owner_txorigin31
TMP_230(None) = SOLIDITY_CALL require(bool)(TMP_229)",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	338 -> 339	[key=0,
		edge_type=next,
		label=Next];
	340	[contract_name=Feed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_source_code_lines="[147]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	339 -> 340	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=Feed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_44.sol_Feed_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[145, 146, 147, 148]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	341 -> 338	[key=0,
		edge_type=next,
		label=Next];
	342	[contract_name=Feed,
		function_fullname="_setMultiHashFormat(uint8,uint8)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[153, 154, 155, 156]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	343	[contract_name=Feed,
		function_fullname="_setMultiHashFormat(uint8,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
HashFormatSet(hashFunction,digestSize)

IRs:
Emit HashFormatSet(hashFunction.digestSize)",
		node_expression="HashFormatSet(hashFunction,digestSize)",
		node_info_vulnerabilities=None,
		node_irs="Emit HashFormatSet(hashFunction.digestSize)",
		node_source_code_lines="[155]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	342 -> 343	[key=0,
		edge_type=next,
		label=Next];
	344	[contract_name=Feed,
		function_fullname="_setMultiHashFormat(uint8,uint8)",
		label="buggy_44.sol_Feed__setMultiHashFormat(uint8,uint8)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[153, 154, 155, 156]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	344 -> 342	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=Feed,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	346	[contract_name=Feed,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_233(bool) = tx.origin == owner_txorigin20
\
TMP_234(None) = SOLIDITY_CALL require(bool)(TMP_233)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_233(bool) = tx.origin == owner_txorigin20
TMP_234(None) = SOLIDITY_CALL require(bool)(TMP_233)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	345 -> 346	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=Feed,
		function_fullname="bug_txorigin20(address)",
		label="buggy_44.sol_Feed_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	347 -> 345	[key=0,
		edge_type=next,
		label=Next];
	348	[contract_name=Feed,
		function_fullname="_submitHash(bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161, 162, 163, 164]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	349	[contract_name=Feed,
		function_fullname="_submitHash(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
HashSubmitted(hash)

IRs:
Emit HashSubmitted(hash)",
		node_expression="HashSubmitted(hash)",
		node_info_vulnerabilities=None,
		node_irs="Emit HashSubmitted(hash)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	348 -> 349	[key=0,
		edge_type=next,
		label=Next];
	350	[contract_name=Feed,
		function_fullname="_submitHash(bytes32)",
		label="buggy_44.sol_Feed__submitHash(bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161, 162, 163, 164]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	350 -> 348	[key=0,
		edge_type=next,
		label=Next];
	351	[contract_name=Feed,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[165, 166, 167]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	352	[contract_name=Feed,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_236(bool) = tx.origin == owner_txorigin32
\
TMP_237(None) = SOLIDITY_CALL require(bool)(TMP_236)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_236(bool) = tx.origin == owner_txorigin32
TMP_237(None) = SOLIDITY_CALL require(bool)(TMP_236)",
		node_source_code_lines="[166]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	351 -> 352	[key=0,
		edge_type=next,
		label=Next];
	353	[contract_name=Feed,
		function_fullname="bug_txorigin32(address)",
		label="buggy_44.sol_Feed_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[165, 166, 167]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	353 -> 351	[key=0,
		edge_type=next,
		label=Next];
	354	[contract_name=Feed,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[325, 326, 327, 328]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	355	[contract_name=Feed,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_238(bool) = tx.origin == owner_txorigin13
\
TMP_239(None) = SOLIDITY_CALL require(bool)(TMP_238)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_238(bool) = tx.origin == owner_txorigin13
TMP_239(None) = SOLIDITY_CALL require(bool)(TMP_238)",
		node_source_code_lines="[326]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	354 -> 355	[key=0,
		edge_type=next,
		label=Next];
	356	[contract_name=Feed,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[327]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	355 -> 356	[key=0,
		edge_type=next,
		label=Next];
	357	[contract_name=Feed,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_44.sol_Feed_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[325, 326, 327, 328]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	357 -> 354	[key=0,
		edge_type=next,
		label=Next];
	358	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, \
361]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	372	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
initializeTemplate()

IRs:
MODIFIER_CALL, Template.initializeTemplate()()",
		node_expression="initializeTemplate()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Template.initializeTemplate()()",
		node_source_code_lines="[335]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	358 -> 372	[key=0,
		edge_type=next,
		label=Next];
	359	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: IF

EXPRESSION:
operator != address(0)

IRs:
TMP_241 = CONVERT 0 to address
TMP_242(bool) = operator != TMP_241
CONDITION \
TMP_242",
		node_expression="operator != address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_241 = CONVERT 0 to address
TMP_242(bool) = operator != TMP_241
CONDITION TMP_242",
		node_source_code_lines="[337]",
		node_type=IF,
		source_file="buggy_44.sol"];
	360	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Operated._setOperator(operator)

IRs:
INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_expression="Operated._setOperator(operator)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_source_code_lines="[338]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	359 -> 360	[key=0,
		edge_type=if_true,
		label=True];
	362	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[337, 338, 339, 340]",
		node_type=END_IF,
		source_file="buggy_44.sol"];
	359 -> 362	[key=0,
		edge_type=if_false,
		label=False];
	361	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Operated._activateOperator()

IRs:
INTERNAL_CALL, Operated._activateOperator()()",
		node_expression="Operated._activateOperator()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._activateOperator()()",
		node_source_code_lines="[339]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	360 -> 361	[key=0,
		edge_type=next,
		label=Next];
	361 -> 362	[key=0,
		edge_type=next,
		label=Next];
	363	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: IF

EXPRESSION:
multihash.length != 0

IRs:
REF_89 -> LENGTH multihash
TMP_245(bool) = REF_89 != 0
CONDITION TMP_245",
		node_expression="multihash.length != 0",
		node_info_vulnerabilities=None,
		node_irs="REF_89 -> LENGTH multihash
TMP_245(bool) = REF_89 != 0
CONDITION TMP_245",
		node_source_code_lines="[343]",
		node_type=IF,
		source_file="buggy_44.sol"];
	362 -> 363	[key=0,
		edge_type=next,
		label=Next];
	364	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
multihashObj = MultiHashWrapper._splitMultiHash(multihash)

IRs:
TMP_246(MultiHashWrapper.MultiHash) = \
INTERNAL_CALL, MultiHashWrapper._splitMultiHash(bytes)(multihash)
multihashObj(MultiHashWrapper.MultiHash) := TMP_246(MultiHashWrapper.MultiHash)",
		node_expression="multihashObj = MultiHashWrapper._splitMultiHash(multihash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_246(MultiHashWrapper.MultiHash) = INTERNAL_CALL, MultiHashWrapper._splitMultiHash(bytes)(multihash)
multihashObj(MultiHashWrapper.MultiHash) := \
TMP_246(MultiHashWrapper.MultiHash)",
		node_source_code_lines="[345]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	363 -> 364	[key=0,
		edge_type=if_true,
		label=True];
	367	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[343, 344, 345, 346, 347, 348, 349, 350, 351, 352]",
		node_type=END_IF,
		source_file="buggy_44.sol"];
	363 -> 367	[key=0,
		edge_type=if_false,
		label=False];
	365	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ProofHashes._setMultiHashFormat(multihashObj.hashFunction,multihashObj.digestSize)

IRs:
REF_\
92(uint8) -> multihashObj.hashFunction
REF_93(uint8) -> multihashObj.digestSize
INTERNAL_CALL, ProofHashes._setMultiHashFormat(uint8,\
uint8)(REF_92,REF_93)",
		node_expression="ProofHashes._setMultiHashFormat(multihashObj.hashFunction,multihashObj.digestSize)",
		node_info_vulnerabilities=None,
		node_irs="REF_92(uint8) -> multihashObj.hashFunction
REF_93(uint8) -> multihashObj.digestSize
INTERNAL_CALL, ProofHashes._setMultiHashFormat(\
uint8,uint8)(REF_92,REF_93)",
		node_source_code_lines="[348]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	364 -> 365	[key=0,
		edge_type=next,
		label=Next];
	366	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ProofHashes._submitHash(multihashObj.hash)

IRs:
REF_95(bytes32) -> multihashObj.hash
INTERNAL_\
CALL, ProofHashes._submitHash(bytes32)(REF_95)",
		node_expression="ProofHashes._submitHash(multihashObj.hash)",
		node_info_vulnerabilities=None,
		node_irs="REF_95(bytes32) -> multihashObj.hash
INTERNAL_CALL, ProofHashes._submitHash(bytes32)(REF_95)",
		node_source_code_lines="[351]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	365 -> 366	[key=0,
		edge_type=next,
		label=Next];
	366 -> 367	[key=0,
		edge_type=next,
		label=Next];
	368	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: IF

EXPRESSION:
metadata.length != 0

IRs:
REF_96 -> LENGTH metadata
TMP_249(bool) = REF_96 != 0
CONDITION TMP_249",
		node_expression="metadata.length != 0",
		node_info_vulnerabilities=None,
		node_irs="REF_96 -> LENGTH metadata
TMP_249(bool) = REF_96 != 0
CONDITION TMP_249",
		node_source_code_lines="[355]",
		node_type=IF,
		source_file="buggy_44.sol"];
	367 -> 368	[key=0,
		edge_type=next,
		label=Next];
	369	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
EventMetadata._setMetadata(metadata)

IRs:
INTERNAL_CALL, EventMetadata._setMetadata(bytes)(metadata)",
		node_expression="EventMetadata._setMetadata(metadata)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, EventMetadata._setMetadata(bytes)(metadata)",
		node_source_code_lines="[356]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	368 -> 369	[key=0,
		edge_type=if_true,
		label=True];
	370	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[355, 356, 357]",
		node_type=END_IF,
		source_file="buggy_44.sol"];
	368 -> 370	[key=0,
		edge_type=if_false,
		label=False];
	369 -> 370	[key=0,
		edge_type=next,
		label=Next];
	371	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Initialized(operator,multihash,metadata)

IRs:
Emit Initialized(operator.multihash.metadata)",
		node_expression="Initialized(operator,multihash,metadata)",
		node_info_vulnerabilities=None,
		node_irs="Emit Initialized(operator.multihash.metadata)",
		node_source_code_lines="[360]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	370 -> 371	[key=0,
		edge_type=next,
		label=Next];
	372 -> 359	[key=0,
		edge_type=next,
		label=Next];
	373	[contract_name=Feed,
		function_fullname="initialize(address,bytes,bytes)",
		label="buggy_44.sol_Feed_initialize(address,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, \
357, 358, 359, 360, 361]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	373 -> 358	[key=0,
		edge_type=next,
		label=Next];
	374	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[362, 363, 364, 365]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	375	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_253(bool) = tx.origin == owner_txorigin30
\
TMP_254(None) = SOLIDITY_CALL require(bool)(TMP_253)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_253(bool) = tx.origin == owner_txorigin30
TMP_254(None) = SOLIDITY_CALL require(bool)(TMP_253)",
		node_source_code_lines="[363]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	374 -> 375	[key=0,
		edge_type=next,
		label=Next];
	376	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_255 = CONVERT this to address
REF_99 -> \
BALANCE TMP_255
Transfer dest:_recipient value:REF_99",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_255 = CONVERT this to address
REF_99 -> BALANCE TMP_255
Transfer dest:_recipient value:REF_99",
		node_source_code_lines="[364]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	375 -> 376	[key=0,
		edge_type=next,
		label=Next];
	377	[contract_name=Feed,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_44.sol_Feed_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[362, 363, 364, 365]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	377 -> 374	[key=0,
		edge_type=next,
		label=Next];
	378	[contract_name=Feed,
		function_fullname="submitHash(bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[369, 370, 371, 372, 373, 374, 375]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	379	[contract_name=Feed,
		function_fullname="submitHash(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender),\
only active operator or creator)

IRs:
TMP_257(bool) = INTERNAL_CALL, Template.isCreator(address)(msg.sender)
TMP_258(bool) = INTERNAL_\
CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_259(bool) = TMP_257 || TMP_258
TMP_260(None) = SOLIDITY_CALL require(bool,\
string)(TMP_259,only active operator or creator)",
		node_expression="require(bool,string)(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender),only active operator or creator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_257(bool) = INTERNAL_CALL, Template.isCreator(address)(msg.sender)
TMP_258(bool) = INTERNAL_CALL, Operated.isActiveOperator(\
address)(msg.sender)
TMP_259(bool) = TMP_257 || TMP_258
TMP_260(None) = SOLIDITY_CALL require(bool,string)(TMP_259,only active operator \
or creator)",
		node_source_code_lines="[371]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	378 -> 379	[key=0,
		edge_type=next,
		label=Next];
	380	[contract_name=Feed,
		function_fullname="submitHash(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
ProofHashes._submitHash(multihash)

IRs:
INTERNAL_CALL, ProofHashes._submitHash(bytes32)(multihash)",
		node_expression="ProofHashes._submitHash(multihash)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ProofHashes._submitHash(bytes32)(multihash)",
		node_source_code_lines="[374]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	379 -> 380	[key=0,
		edge_type=next,
		label=Next];
	381	[contract_name=Feed,
		function_fullname="submitHash(bytes32)",
		label="buggy_44.sol_Feed_submitHash(bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[369, 370, 371, 372, 373, 374, 375]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	381 -> 378	[key=0,
		edge_type=next,
		label=Next];
	382	[contract_name=Feed,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[376, 377, 378]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	383	[contract_name=Feed,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_262(bool) = tx.origin == owner_txorigin8
\
TMP_263(None) = SOLIDITY_CALL require(bool)(TMP_262)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_262(bool) = tx.origin == owner_txorigin8
TMP_263(None) = SOLIDITY_CALL require(bool)(TMP_262)",
		node_source_code_lines="[377]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	382 -> 383	[key=0,
		edge_type=next,
		label=Next];
	384	[contract_name=Feed,
		function_fullname="bug_txorigin8(address)",
		label="buggy_44.sol_Feed_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[376, 377, 378]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	384 -> 382	[key=0,
		edge_type=next,
		label=Next];
	385	[contract_name=Feed,
		function_fullname="setMetadata(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[380, 381, 382, 383, 384, 385, 386]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	386	[contract_name=Feed,
		function_fullname="setMetadata(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender),\
only active operator or creator)

IRs:
TMP_264(bool) = INTERNAL_CALL, Template.isCreator(address)(msg.sender)
TMP_265(bool) = INTERNAL_\
CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_266(bool) = TMP_264 || TMP_265
TMP_267(None) = SOLIDITY_CALL require(bool,\
string)(TMP_266,only active operator or creator)",
		node_expression="require(bool,string)(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender),only active operator or creator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_264(bool) = INTERNAL_CALL, Template.isCreator(address)(msg.sender)
TMP_265(bool) = INTERNAL_CALL, Operated.isActiveOperator(\
address)(msg.sender)
TMP_266(bool) = TMP_264 || TMP_265
TMP_267(None) = SOLIDITY_CALL require(bool,string)(TMP_266,only active operator \
or creator)",
		node_source_code_lines="[382]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	385 -> 386	[key=0,
		edge_type=next,
		label=Next];
	387	[contract_name=Feed,
		function_fullname="setMetadata(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
EventMetadata._setMetadata(metadata)

IRs:
INTERNAL_CALL, EventMetadata._setMetadata(bytes)(metadata)",
		node_expression="EventMetadata._setMetadata(metadata)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, EventMetadata._setMetadata(bytes)(metadata)",
		node_source_code_lines="[385]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	386 -> 387	[key=0,
		edge_type=next,
		label=Next];
	388	[contract_name=Feed,
		function_fullname="setMetadata(bytes)",
		label="buggy_44.sol_Feed_setMetadata(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[380, 381, 382, 383, 384, 385, 386]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	388 -> 385	[key=0,
		edge_type=next,
		label=Next];
	389	[contract_name=Feed,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[387, 388, 389, 390]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	390	[contract_name=Feed,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_269(bool) = tx.origin == owner_txorigin39
\
TMP_270(None) = SOLIDITY_CALL require(bool)(TMP_269)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_269(bool) = tx.origin == owner_txorigin39
TMP_270(None) = SOLIDITY_CALL require(bool)(TMP_269)",
		node_source_code_lines="[388]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	389 -> 390	[key=0,
		edge_type=next,
		label=Next];
	391	[contract_name=Feed,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_106(None) -> to.call
REF_107(None) -> REF_106.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_106(None) -> to.call
REF_107(None) -> REF_106.value",
		node_source_code_lines="[389]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	390 -> 391	[key=0,
		edge_type=next,
		label=Next];
	392	[contract_name=Feed,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_44.sol_Feed_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[387, 388, 389, 390]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	392 -> 389	[key=0,
		edge_type=next,
		label=Next];
	393	[contract_name=Feed,
		function_fullname="transferOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[392, 393, 394, 395, 396, 397, 398]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	394	[contract_name=Feed,
		function_fullname="transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(Operated.isActiveOperator(msg.sender),only active operator)

IRs:
TMP_272(\
bool) = INTERNAL_CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_273(None) = SOLIDITY_CALL require(bool,string)(TMP_272,\
only active operator)",
		node_expression="require(bool,string)(Operated.isActiveOperator(msg.sender),only active operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_272(bool) = INTERNAL_CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_273(None) = SOLIDITY_CALL require(bool,string)(\
TMP_272,only active operator)",
		node_source_code_lines="[394]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	393 -> 394	[key=0,
		edge_type=next,
		label=Next];
	395	[contract_name=Feed,
		function_fullname="transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
Operated._transferOperator(operator)

IRs:
INTERNAL_CALL, Operated._transferOperator(address)(\
operator)",
		node_expression="Operated._transferOperator(operator)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._transferOperator(address)(operator)",
		node_source_code_lines="[397]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	394 -> 395	[key=0,
		edge_type=next,
		label=Next];
	396	[contract_name=Feed,
		function_fullname="transferOperator(address)",
		label="buggy_44.sol_Feed_transferOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[392, 393, 394, 395, 396, 397, 398]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	396 -> 393	[key=0,
		edge_type=next,
		label=Next];
	397	[contract_name=Feed,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[399, 400, 401]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	398	[contract_name=Feed,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_275(bool) = tx.origin == owner_txorigin36
\
TMP_276(None) = SOLIDITY_CALL require(bool)(TMP_275)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_275(bool) = tx.origin == owner_txorigin36
TMP_276(None) = SOLIDITY_CALL require(bool)(TMP_275)",
		node_source_code_lines="[400]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	397 -> 398	[key=0,
		edge_type=next,
		label=Next];
	399	[contract_name=Feed,
		function_fullname="bug_txorigin36(address)",
		label="buggy_44.sol_Feed_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[399, 400, 401]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	399 -> 397	[key=0,
		edge_type=next,
		label=Next];
	400	[contract_name=Feed,
		function_fullname="renounceOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[403, 404, 405, 406, 407, 408, 409]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	401	[contract_name=Feed,
		function_fullname="renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(Operated.isActiveOperator(msg.sender),only active operator)

IRs:
TMP_277(\
bool) = INTERNAL_CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,\
only active operator)",
		node_expression="require(bool,string)(Operated.isActiveOperator(msg.sender),only active operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_277(bool) = INTERNAL_CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_278(None) = SOLIDITY_CALL require(bool,string)(\
TMP_277,only active operator)",
		node_source_code_lines="[405]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	400 -> 401	[key=0,
		edge_type=next,
		label=Next];
	402	[contract_name=Feed,
		function_fullname="renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
Operated._renounceOperator()

IRs:
INTERNAL_CALL, Operated._renounceOperator()()",
		node_expression="Operated._renounceOperator()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._renounceOperator()()",
		node_source_code_lines="[408]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	401 -> 402	[key=0,
		edge_type=next,
		label=Next];
	403	[contract_name=Feed,
		function_fullname="renounceOperator()",
		label="buggy_44.sol_Feed_renounceOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[403, 404, 405, 406, 407, 408, 409]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	403 -> 400	[key=0,
		edge_type=next,
		label=Next];
	404	[contract_name=Feed,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[410, 411, 412, 413]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	405	[contract_name=Feed,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_280(bool) = tx.origin == owner_txorigin35
\
TMP_281(None) = SOLIDITY_CALL require(bool)(TMP_280)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="TMP_280(bool) = tx.origin == owner_txorigin35
TMP_281(None) = SOLIDITY_CALL require(bool)(TMP_280)",
		node_source_code_lines="[411]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	404 -> 405	[key=0,
		edge_type=next,
		label=Next];
	406	[contract_name=Feed,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_112(None) -> to.call
REF_113(None) -> REF_112.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs="REF_112(None) -> to.call
REF_113(None) -> REF_112.value",
		node_source_code_lines="[412]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	405 -> 406	[key=0,
		edge_type=next,
		label=Next];
	407	[contract_name=Feed,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_44.sol_Feed_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 54, 55, 56, 57, 64, 65, 66, 67, 75, 76, \
77, 78, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 129, 130, 131, 132, 140, 141, \
142, 143, 145, 146, 147, 148, 157, 158, 159, 165, 166, 167, 205, 206, 207, 208, 232, 233, 234, 270, 271, 272, 294, 295, 296, 297, \
302, 303, 304, 305, 310, 311, 312, 313, 325, 326, 327, 328, 362, 363, 364, 365, 376, 377, 378, 387, 388, 389, 390, 399, 400, 401, \
410, 411, 412, 413], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[410, 411, 412, 413]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	407 -> 404	[key=0,
		edge_type=next,
		label=Next];
	408	[contract_name=Feed,
		function_fullname="initializeTemplate()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278, 279, 280, 281, 282, 283, 284, 285, 286]",
		node_type=ENTRY_POINT,
		source_file="buggy_44.sol"];
	409	[contract_name=Feed,
		function_fullname="initializeTemplate()",
		label="Node Type: EXPRESSION

EXPRESSION:
_factory = msg.sender

IRs:
_factory(address) := msg.sender(address)",
		node_expression="_factory = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="_factory(address) := msg.sender(address)",
		node_source_code_lines="[279]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	408 -> 409	[key=0,
		edge_type=next,
		label=Next];
	410	[contract_name=Feed,
		function_fullname="initializeTemplate()",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[282]",
		node_type="NEW VARIABLE",
		source_file="buggy_44.sol"];
	409 -> 410	[key=0,
		edge_type=next,
		label=Next];
	411	[contract_name=Feed,
		function_fullname="initializeTemplate()",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[283, 284]",
		node_type="INLINE ASM",
		source_file="buggy_44.sol"];
	410 -> 411	[key=0,
		edge_type=next,
		label=Next];
	412	[contract_name=Feed,
		function_fullname="initializeTemplate()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(codeSize == 0,must be called within contract constructor)

IRs:
TMP_283(\
bool) = codeSize == 0
TMP_284(None) = SOLIDITY_CALL require(bool,string)(TMP_283,must be called within contract constructor)",
		node_expression="require(bool,string)(codeSize == 0,must be called within contract constructor)",
		node_info_vulnerabilities=None,
		node_irs="TMP_283(bool) = codeSize == 0
TMP_284(None) = SOLIDITY_CALL require(bool,string)(TMP_283,must be called within contract constructor)",
		node_source_code_lines="[284]",
		node_type=EXPRESSION,
		source_file="buggy_44.sol"];
	411 -> 412	[key=0,
		edge_type=next,
		label=Next];
	413	[contract_name=Feed,
		function_fullname="initializeTemplate()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[285]",
		node_type=_,
		source_file="buggy_44.sol"];
	412 -> 413	[key=0,
		edge_type=next,
		label=Next];
	414	[contract_name=Feed,
		function_fullname="initializeTemplate()",
		label="buggy_44.sol_Feed_initializeTemplate()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278, 279, 280, 281, 282, 283, 284, 285, 286]",
		node_type=FUNCTION_NAME,
		source_file="buggy_44.sol"];
	414 -> 408	[key=0,
		edge_type=next,
		label=Next];
}
