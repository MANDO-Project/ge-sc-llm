digraph "" {
	node [label="\N"];
	0	[contract_name=owned,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[9, 10, 11]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	1	[contract_name=owned,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin24)

IRs:
TMP_0(bool) = tx.origin == owner_txorigin24
\
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_expression="require(bool)(tx.origin == owner_txorigin24)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_0(bool) = tx.origin == owner_txorigin24
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[10]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=owned,
		function_fullname="bug_txorigin24(address)",
		label="buggy_36.sol_owned_bug_txorigin24(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[9, 10, 11]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	2 -> 0	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=owned,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	4	[contract_name=owned,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[15]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	3 -> 4	[key=0,
		edge_type=next,
		label=Next];
	5	[contract_name=owned,
		function_fullname="constructor()",
		label="buggy_36.sol_owned_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	5 -> 3	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=owned,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	7	[contract_name=owned,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_2(bool) = tx.origin == owner_txorigin11
\
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_2(bool) = tx.origin == owner_txorigin11
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)",
		node_source_code_lines="[18]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	6 -> 7	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=owned,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_0(None) -> to.call
REF_1(None) -> REF_0.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_0(None) -> to.call
REF_1(None) -> REF_0.value",
		node_source_code_lines="[19]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	7 -> 8	[key=0,
		edge_type=next,
		label=Next];
	9	[contract_name=owned,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_36.sol_owned_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	9 -> 6	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	12	[contract_name=owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, owned.onlyOwner()()",
		node_source_code_lines="[27]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	10 -> 12	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[28]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	12 -> 11	[key=0,
		edge_type=next,
		label=Next];
	13	[contract_name=owned,
		function_fullname="transferOwnership(address)",
		label="buggy_36.sol_owned_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	13 -> 10	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	15	[contract_name=owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_6(bool) = tx.origin == owner_txorigin1
\
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_6)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_6(bool) = tx.origin == owner_txorigin1
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_6)",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	14 -> 15	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	15 -> 16	[key=0,
		edge_type=next,
		label=Next];
	17	[contract_name=owned,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_36.sol_owned_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	17 -> 14	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=owned,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22, 23, 24, 25]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	19	[contract_name=owned,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_9(bool) = msg.sender == owner
TMP_10(None) = SOLIDITY_\
CALL require(bool)(TMP_9)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_9(bool) = msg.sender == owner
TMP_10(None) = SOLIDITY_CALL require(bool)(TMP_9)",
		node_source_code_lines="[23]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	18 -> 19	[key=0,
		edge_type=next,
		label=Next];
	20	[contract_name=owned,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24]",
		node_type=_,
		source_file="buggy_36.sol"];
	19 -> 20	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=owned,
		function_fullname="onlyOwner()",
		label="buggy_36.sol_owned_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22, 23, 24, 25]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	21 -> 18	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=tokenRecipient,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	23	[contract_name=tokenRecipient,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_11(bool) = tx.origin == owner_txorigin39
\
TMP_12(None) = SOLIDITY_CALL require(bool)(TMP_11)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_11(bool) = tx.origin == owner_txorigin39
TMP_12(None) = SOLIDITY_CALL require(bool)(TMP_11)",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	22 -> 23	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=tokenRecipient,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_3(None) -> to.call
REF_4(None) -> REF_3.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_3(None) -> to.call
REF_4(None) -> REF_3.value",
		node_source_code_lines="[40]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=tokenRecipient,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_36.sol_tokenRecipient_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	25 -> 22	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=tokenRecipient,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	27	[contract_name=tokenRecipient,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_14(bool) = tx.origin == owner_txorigin36
\
TMP_15(None) = SOLIDITY_CALL require(bool)(TMP_14)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_14(bool) = tx.origin == owner_txorigin36
TMP_15(None) = SOLIDITY_CALL require(bool)(TMP_14)",
		node_source_code_lines="[44]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	26 -> 27	[key=0,
		edge_type=next,
		label=Next];
	28	[contract_name=tokenRecipient,
		function_fullname="bug_txorigin36(address)",
		label="buggy_36.sol_tokenRecipient_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	28 -> 26	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=tokenRecipient,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51, 52]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	30	[contract_name=tokenRecipient,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
t = Token(_token)

IRs:
TMP_16 = CONVERT _token to Token
t(Token) := TMP_16(Token)",
		node_expression="t = Token(_token)",
		node_info_vulnerabilities=None,
		node_irs="TMP_16 = CONVERT _token to Token
t(Token) := TMP_16(Token)",
		node_source_code_lines="[49]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	29 -> 30	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=tokenRecipient,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(t.transferFrom(_from,address(this),_value))

IRs:
TMP_17 = CONVERT this to address
\
TMP_18(bool) = HIGH_LEVEL_CALL, dest:t(Token), function:transferFrom, arguments:['_from', 'TMP_17', '_value']  
TMP_19(None) = SOLIDITY_\
CALL require(bool)(TMP_18)",
		node_expression="require(bool)(t.transferFrom(_from,address(this),_value))",
		node_info_vulnerabilities=None,
		node_irs="TMP_17 = CONVERT this to address
TMP_18(bool) = HIGH_LEVEL_CALL, dest:t(Token), function:transferFrom, arguments:['_from', 'TMP_\
17', '_value']  
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	30 -> 31	[key=0,
		edge_type=next,
		label=Next];
	32	[contract_name=tokenRecipient,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
receivedTokens(_from,_value,_token,_extraData)

IRs:
Emit receivedTokens(_from._value._token._\
extraData)",
		node_expression="receivedTokens(_from,_value,_token,_extraData)",
		node_info_vulnerabilities=None,
		node_irs="Emit receivedTokens(_from._value._token._extraData)",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	31 -> 32	[key=0,
		edge_type=next,
		label=Next];
	33	[contract_name=tokenRecipient,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="buggy_36.sol_tokenRecipient_receiveApproval(address,uint256,address,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51, 52]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	33 -> 29	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=tokenRecipient,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[53, 54, 55, 56]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	35	[contract_name=tokenRecipient,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_21(bool) = tx.origin == owner_txorigin2
\
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_21(bool) = tx.origin == owner_txorigin2
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_source_code_lines="[54]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	34 -> 35	[key=0,
		edge_type=next,
		label=Next];
	36	[contract_name=tokenRecipient,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_23 = CONVERT this to address
REF_7 -> BALANCE \
TMP_23
Transfer dest:_recipient value:REF_7",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_23 = CONVERT this to address
REF_7 -> BALANCE TMP_23
Transfer dest:_recipient value:REF_7",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	35 -> 36	[key=0,
		edge_type=next,
		label=Next];
	37	[contract_name=tokenRecipient,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_36.sol_tokenRecipient_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[53, 54, 55, 56]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	37 -> 34	[key=0,
		edge_type=next,
		label=Next];
	38	[contract_name=tokenRecipient,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[58, 59, 60]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	39	[contract_name=tokenRecipient,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
receivedEther(msg.sender,msg.value)

IRs:
Emit receivedEther(msg.sender.msg.value)",
		node_expression="receivedEther(msg.sender,msg.value)",
		node_info_vulnerabilities=None,
		node_irs="Emit receivedEther(msg.sender.msg.value)",
		node_source_code_lines="[59]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	38 -> 39	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=tokenRecipient,
		function_fullname="fallback()",
		label="buggy_36.sol_tokenRecipient_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[58, 59, 60]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	40 -> 38	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=tokenRecipient,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	42	[contract_name=tokenRecipient,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_26(bool) = tx.origin == owner_txorigin17
\
TMP_27(None) = SOLIDITY_CALL require(bool)(TMP_26)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_26(bool) = tx.origin == owner_txorigin17
TMP_27(None) = SOLIDITY_CALL require(bool)(TMP_26)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	41 -> 42	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=tokenRecipient,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[63]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	42 -> 43	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=tokenRecipient,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_36.sol_tokenRecipient_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	44 -> 41	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=Token,
		function_fullname="totalSupply()",
		label="buggy_36.sol_Token_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[69]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	46	[contract_name=Token,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[70, 71, 72, 73]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	47	[contract_name=Token,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_29(bool) = tx.origin == owner_txorigin37
\
TMP_30(None) = SOLIDITY_CALL require(bool)(TMP_29)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_29(bool) = tx.origin == owner_txorigin37
TMP_30(None) = SOLIDITY_CALL require(bool)(TMP_29)",
		node_source_code_lines="[71]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	46 -> 47	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=Token,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[72]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	47 -> 48	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=Token,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_36.sol_Token_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[70, 71, 72, 73]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	49 -> 46	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=Token,
		function_fullname="actualBalanceOf(address)",
		label="buggy_36.sol_Token_actualBalanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	51	[contract_name=Token,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	52	[contract_name=Token,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_32(bool) = tx.origin == owner_txorigin3
\
TMP_33(None) = SOLIDITY_CALL require(bool)(TMP_32)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_32(bool) = tx.origin == owner_txorigin3
TMP_33(None) = SOLIDITY_CALL require(bool)(TMP_32)",
		node_source_code_lines="[76]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=Token,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_10(None) -> to.call
REF_11(None) -> REF_10.value",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	52 -> 53	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=Token,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_36.sol_Token_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	54 -> 51	[key=0,
		edge_type=next,
		label=Next];
	55	[contract_name=Token,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_36.sol_Token_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[79]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	56	[contract_name=Token,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	57	[contract_name=Token,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_35(bool) = tx.origin == owner_txorigin9
\
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_35(bool) = tx.origin == owner_txorigin9
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	56 -> 57	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=Token,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	57 -> 58	[key=0,
		edge_type=next,
		label=Next];
	59	[contract_name=Token,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_36.sol_Token_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	59 -> 56	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=Token,
		function_fullname="renounceOwnership()",
		label="buggy_36.sol_Token_renounceOwnership()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	61	[contract_name=Token,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	62	[contract_name=Token,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_38(bool) = tx.origin == owner_txorigin25
\
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_38(bool) = tx.origin == owner_txorigin25
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	61 -> 62	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=Token,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	62 -> 63	[key=0,
		edge_type=next,
		label=Next];
	64	[contract_name=Token,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_36.sol_Token_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	64 -> 61	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Token,
		function_fullname="transferOwnership(address)",
		label="buggy_36.sol_Token_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[89]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	66	[contract_name=Token,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	67	[contract_name=Token,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_41(bool) = tx.origin == owner_txorigin19
\
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_41(bool) = tx.origin == owner_txorigin19
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_source_code_lines="[91]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	66 -> 67	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=Token,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_14(None) -> to.call
REF_15(None) -> REF_14.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_14(None) -> to.call
REF_15(None) -> REF_14.value",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=Token,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_36.sol_Token_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	69 -> 66	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=Token,
		function_fullname="pause()",
		label="buggy_36.sol_Token_pause()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	71	[contract_name=Token,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	72	[contract_name=Token,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_44(bool) = tx.origin == owner_txorigin26
\
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_44(bool) = tx.origin == owner_txorigin26
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	71 -> 72	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=Token,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_46 = CONVERT this to address
REF_17 -> BALANCE \
TMP_46
Transfer dest:_recipient value:REF_17",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_46 = CONVERT this to address
REF_17 -> BALANCE TMP_46
Transfer dest:_recipient value:REF_17",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	72 -> 73	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=Token,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_36.sol_Token_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	74 -> 71	[key=0,
		edge_type=next,
		label=Next];
	75	[contract_name=Token,
		function_fullname="unpause()",
		label="buggy_36.sol_Token_unpause()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[99]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	76	[contract_name=Token,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[100, 101, 102]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	77	[contract_name=Token,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_48(bool) = tx.origin == owner_txorigin20
\
TMP_49(None) = SOLIDITY_CALL require(bool)(TMP_48)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_48(bool) = tx.origin == owner_txorigin20
TMP_49(None) = SOLIDITY_CALL require(bool)(TMP_48)",
		node_source_code_lines="[101]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	76 -> 77	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=Token,
		function_fullname="bug_txorigin20(address)",
		label="buggy_36.sol_Token_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[100, 101, 102]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	78 -> 76	[key=0,
		edge_type=next,
		label=Next];
	79	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	80	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a == 0

IRs:
TMP_50(bool) = a == 0
CONDITION TMP_50",
		node_expression="a == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_50(bool) = a == 0
CONDITION TMP_50",
		node_source_code_lines="[118]",
		node_type=IF,
		source_file="buggy_36.sol"];
	79 -> 80	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
0

IRs:
RETURN 0",
		node_expression=0,
		node_info_vulnerabilities=None,
		node_irs="RETURN 0",
		node_source_code_lines="[119]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	80 -> 81	[key=0,
		edge_type=if_true,
		label=True];
	82	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120]",
		node_type=END_IF,
		source_file="buggy_36.sol"];
	80 -> 82	[key=0,
		edge_type=if_false,
		label=False];
	83	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a * b

IRs:
TMP_51(uint256) = a * b
c(uint256) := TMP_51(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_51(uint256) = a * b
c(uint256) := TMP_51(uint256)",
		node_source_code_lines="[122]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	82 -> 83	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(c / a == b,Safe mul error)

IRs:
TMP_52(uint256) = c / a
TMP_53(bool) = \
TMP_52 == b
TMP_54(None) = SOLIDITY_CALL require(bool,string)(TMP_53,Safe mul error)",
		node_expression="require(bool,string)(c / a == b,Safe mul error)",
		node_info_vulnerabilities=None,
		node_irs="TMP_52(uint256) = c / a
TMP_53(bool) = TMP_52 == b
TMP_54(None) = SOLIDITY_CALL require(bool,string)(TMP_53,Safe mul error)",
		node_source_code_lines="[123]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	83 -> 84	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[125]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	84 -> 85	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_36.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	86 -> 79	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[131, 132, 133, 134, 135, 136, 137, 138]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	88	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b > 0,Safe div error)

IRs:
TMP_55(bool) = b > 0
TMP_56(None) = SOLIDITY_\
CALL require(bool,string)(TMP_55,Safe div error)",
		node_expression="require(bool,string)(b > 0,Safe div error)",
		node_info_vulnerabilities=None,
		node_irs="TMP_55(bool) = b > 0
TMP_56(None) = SOLIDITY_CALL require(bool,string)(TMP_55,Safe div error)",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a / b

IRs:
TMP_57(uint256) = a / b
c(uint256) := TMP_57(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_57(uint256) = a / b
c(uint256) := TMP_57(uint256)",
		node_source_code_lines="[134]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	88 -> 89	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[137]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	89 -> 90	[key=0,
		edge_type=next,
		label=Next];
	91	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_36.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[131, 132, 133, 134, 135, 136, 137, 138]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	91 -> 87	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[143, 144, 145, 146, 147, 148]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	93	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b <= a,Safe sub error)

IRs:
TMP_58(bool) = b <= a
TMP_59(None) = SOLIDITY_\
CALL require(bool,string)(TMP_58,Safe sub error)",
		node_expression="require(bool,string)(b <= a,Safe sub error)",
		node_info_vulnerabilities=None,
		node_irs="TMP_58(bool) = b <= a
TMP_59(None) = SOLIDITY_CALL require(bool,string)(TMP_58,Safe sub error)",
		node_source_code_lines="[144]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	92 -> 93	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a - b

IRs:
TMP_60(uint256) = a - b
c(uint256) := TMP_60(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_60(uint256) = a - b
c(uint256) := TMP_60(uint256)",
		node_source_code_lines="[145]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	93 -> 94	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[147]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	94 -> 95	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_36.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[143, 144, 145, 146, 147, 148]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	96 -> 92	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[153, 154, 155, 156, 157, 158]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	98	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a + b

IRs:
TMP_61(uint256) = a + b
c(uint256) := TMP_61(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_61(uint256) = a + b
c(uint256) := TMP_61(uint256)",
		node_source_code_lines="[154]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	97 -> 98	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(c >= a,Safe add error)

IRs:
TMP_62(bool) = c >= a
TMP_63(None) = SOLIDITY_\
CALL require(bool,string)(TMP_62,Safe add error)",
		node_expression="require(bool,string)(c >= a,Safe add error)",
		node_info_vulnerabilities=None,
		node_irs="TMP_62(bool) = c >= a
TMP_63(None) = SOLIDITY_CALL require(bool,string)(TMP_62,Safe add error)",
		node_source_code_lines="[155]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	98 -> 99	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[157]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	99 -> 100	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_36.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[153, 154, 155, 156, 157, 158]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	101 -> 97	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[164, 165, 166, 167]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	103	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b != 0,Safe mod error)

IRs:
TMP_64(bool) = b != 0
TMP_65(None) = SOLIDITY_\
CALL require(bool,string)(TMP_64,Safe mod error)",
		node_expression="require(bool,string)(b != 0,Safe mod error)",
		node_info_vulnerabilities=None,
		node_irs="TMP_64(bool) = b != 0
TMP_65(None) = SOLIDITY_CALL require(bool,string)(TMP_64,Safe mod error)",
		node_source_code_lines="[165]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a % b

IRs:
TMP_66(uint256) = a % b
RETURN TMP_66",
		node_expression="a % b",
		node_info_vulnerabilities=None,
		node_irs="TMP_66(uint256) = a % b
RETURN TMP_66",
		node_source_code_lines="[166]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="buggy_36.sol_SafeMath_mod(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[164, 165, 166, 167]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	105 -> 102	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	107	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_67(bool) = tx.origin == owner_txorigin39
\
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_67(bool) = tx.origin == owner_txorigin39
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	106 -> 107	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_18(None) -> to.call
REF_19(None) -> REF_18.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_18(None) -> to.call
REF_19(None) -> REF_18.value",
		node_source_code_lines="[40]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	107 -> 108	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	109 -> 106	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	111	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_70(bool) = tx.origin == owner_txorigin36
\
TMP_71(None) = SOLIDITY_CALL require(bool)(TMP_70)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_70(bool) = tx.origin == owner_txorigin36
TMP_71(None) = SOLIDITY_CALL require(bool)(TMP_70)",
		node_source_code_lines="[44]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	110 -> 111	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin36(address)",
		label="buggy_36.sol_MindsyncPlatform_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	112 -> 110	[key=0,
		edge_type=next,
		label=Next];
	113	[contract_name=MindsyncPlatform,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51, 52]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	114	[contract_name=MindsyncPlatform,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
t = Token(_token)

IRs:
TMP_72 = CONVERT _token to Token
t(Token) := TMP_72(Token)",
		node_expression="t = Token(_token)",
		node_info_vulnerabilities=None,
		node_irs="TMP_72 = CONVERT _token to Token
t(Token) := TMP_72(Token)",
		node_source_code_lines="[49]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=MindsyncPlatform,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(t.transferFrom(_from,address(this),_value))

IRs:
TMP_73 = CONVERT this to address
\
TMP_74(bool) = HIGH_LEVEL_CALL, dest:t(Token), function:transferFrom, arguments:['_from', 'TMP_73', '_value']  
TMP_75(None) = SOLIDITY_\
CALL require(bool)(TMP_74)",
		node_expression="require(bool)(t.transferFrom(_from,address(this),_value))",
		node_info_vulnerabilities=None,
		node_irs="TMP_73 = CONVERT this to address
TMP_74(bool) = HIGH_LEVEL_CALL, dest:t(Token), function:transferFrom, arguments:['_from', 'TMP_\
73', '_value']  
TMP_75(None) = SOLIDITY_CALL require(bool)(TMP_74)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	114 -> 115	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=MindsyncPlatform,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
receivedTokens(_from,_value,_token,_extraData)

IRs:
Emit receivedTokens(_from._value._token._\
extraData)",
		node_expression="receivedTokens(_from,_value,_token,_extraData)",
		node_info_vulnerabilities=None,
		node_irs="Emit receivedTokens(_from._value._token._extraData)",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	115 -> 116	[key=0,
		edge_type=next,
		label=Next];
	117	[contract_name=MindsyncPlatform,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="buggy_36.sol_MindsyncPlatform_receiveApproval(address,uint256,address,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48, 49, 50, 51, 52]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	117 -> 113	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[53, 54, 55, 56]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	119	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_77(bool) = tx.origin == owner_txorigin2
\
TMP_78(None) = SOLIDITY_CALL require(bool)(TMP_77)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_77(bool) = tx.origin == owner_txorigin2
TMP_78(None) = SOLIDITY_CALL require(bool)(TMP_77)",
		node_source_code_lines="[54]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	118 -> 119	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_79 = CONVERT this to address
REF_22 -> BALANCE \
TMP_79
Transfer dest:_recipient value:REF_22",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_79 = CONVERT this to address
REF_22 -> BALANCE TMP_79
Transfer dest:_recipient value:REF_22",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	119 -> 120	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_36.sol_MindsyncPlatform_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[53, 54, 55, 56]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	121 -> 118	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=MindsyncPlatform,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[58, 59, 60]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	123	[contract_name=MindsyncPlatform,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
receivedEther(msg.sender,msg.value)

IRs:
Emit receivedEther(msg.sender.msg.value)",
		node_expression="receivedEther(msg.sender,msg.value)",
		node_info_vulnerabilities=None,
		node_irs="Emit receivedEther(msg.sender.msg.value)",
		node_source_code_lines="[59]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	122 -> 123	[key=0,
		edge_type=next,
		label=Next];
	124	[contract_name=MindsyncPlatform,
		function_fullname="fallback()",
		label="buggy_36.sol_MindsyncPlatform_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[58, 59, 60]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	124 -> 122	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	126	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_82(bool) = tx.origin == owner_txorigin17
\
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_82(bool) = tx.origin == owner_txorigin17
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	125 -> 126	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[63]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[61, 62, 63, 64]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	128 -> 125	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[9, 10, 11]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	130	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin24)

IRs:
TMP_85(bool) = tx.origin == owner_txorigin24
\
TMP_86(None) = SOLIDITY_CALL require(bool)(TMP_85)",
		node_expression="require(bool)(tx.origin == owner_txorigin24)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_85(bool) = tx.origin == owner_txorigin24
TMP_86(None) = SOLIDITY_CALL require(bool)(TMP_85)",
		node_source_code_lines="[10]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	129 -> 130	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin24(address)",
		label="buggy_36.sol_MindsyncPlatform_bug_txorigin24(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[9, 10, 11]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	131 -> 129	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=MindsyncPlatform,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	133	[contract_name=MindsyncPlatform,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[15]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	132 -> 133	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=MindsyncPlatform,
		function_fullname="constructor()",
		label="buggy_36.sol_MindsyncPlatform_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	134 -> 132	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	136	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_87(bool) = tx.origin == owner_txorigin11
\
TMP_88(None) = SOLIDITY_CALL require(bool)(TMP_87)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_87(bool) = tx.origin == owner_txorigin11
TMP_88(None) = SOLIDITY_CALL require(bool)(TMP_87)",
		node_source_code_lines="[18]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	135 -> 136	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_24(None) -> to.call
REF_25(None) -> REF_24.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_24(None) -> to.call
REF_25(None) -> REF_24.value",
		node_source_code_lines="[19]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	138 -> 135	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=MindsyncPlatform,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	141	[contract_name=MindsyncPlatform,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, owned.onlyOwner()()",
		node_source_code_lines="[27]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	139 -> 141	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=MindsyncPlatform,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[28]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	141 -> 140	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=MindsyncPlatform,
		function_fullname="transferOwnership(address)",
		label="buggy_36.sol_MindsyncPlatform_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	142 -> 139	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	144	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_91(bool) = tx.origin == owner_txorigin1
\
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_91(bool) = tx.origin == owner_txorigin1
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	144 -> 145	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	146 -> 143	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[177, 178, 179, 180]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	148	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin5)

IRs:
TMP_94(bool) = tx.origin == owner_txorigin5
\
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_expression="require(bool)(tx.origin == owner_txorigin5)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_94(bool) = tx.origin == owner_txorigin5
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_source_code_lines="[178]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	147 -> 148	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	148 -> 149	[key=0,
		edge_type=next,
		label=Next];
	150	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_sendto_txorigin5(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[177, 178, 179, 180]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	150 -> 147	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[182, 183, 184, 185]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	152	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin15)

IRs:
TMP_97(bool) = tx.origin == owner_txorigin15
\
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)",
		node_expression="require(bool)(tx.origin == owner_txorigin15)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_97(bool) = tx.origin == owner_txorigin15
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)",
		node_source_code_lines="[183]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	151 -> 152	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_28(None) -> to.call
REF_29(None) -> REF_28.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_28(None) -> to.call
REF_29(None) -> REF_28.value",
		node_source_code_lines="[184]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	152 -> 153	[key=0,
		edge_type=next,
		label=Next];
	154	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_transferTo_txorigin15(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[182, 183, 184, 185]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	154 -> 151	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[187, 188, 189]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	156	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin28)

IRs:
TMP_100(bool) = tx.origin == owner_txorigin28
\
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)",
		node_expression="require(bool)(tx.origin == owner_txorigin28)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_100(bool) = tx.origin == owner_txorigin28
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)",
		node_source_code_lines="[188]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	155 -> 156	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin28(address)",
		label="buggy_36.sol_MindsyncPlatform_bug_txorigin28(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[187, 188, 189]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	157 -> 155	[key=0,
		edge_type=next,
		label=Next];
	158	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[191, 192, 193, 194]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	159	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_102(bool) = tx.origin == owner_txorigin34
\
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_102(bool) = tx.origin == owner_txorigin34
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_source_code_lines="[192]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	158 -> 159	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_104 = CONVERT this to address
REF_31 -> \
BALANCE TMP_104
Transfer dest:_recipient value:REF_31",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_104 = CONVERT this to address
REF_31 -> BALANCE TMP_104
Transfer dest:_recipient value:REF_31",
		node_source_code_lines="[193]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_36.sol_MindsyncPlatform_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[191, 192, 193, 194]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	161 -> 158	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[196, 197, 198, 199]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	163	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_106(bool) = tx.origin == owner_txorigin21
\
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_106(bool) = tx.origin == owner_txorigin21
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_source_code_lines="[197]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	162 -> 163	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[198]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[196, 197, 198, 199]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	165 -> 162	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	167	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_109(bool) = tx.origin == owner_txorigin10
\
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_109(bool) = tx.origin == owner_txorigin10
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)",
		node_source_code_lines="[202]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_111 = CONVERT this to address
REF_34 -> \
BALANCE TMP_111
Transfer dest:_recipient value:REF_34",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_111 = CONVERT this to address
REF_34 -> BALANCE TMP_111
Transfer dest:_recipient value:REF_34",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	167 -> 168	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_36.sol_MindsyncPlatform_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	169 -> 166	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[206, 207, 208, 209]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	171	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_113(bool) = tx.origin == owner_txorigin22
\
TMP_114(None) = SOLIDITY_CALL require(bool)(TMP_113)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_113(bool) = tx.origin == owner_txorigin22
TMP_114(None) = SOLIDITY_CALL require(bool)(TMP_113)",
		node_source_code_lines="[207]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	170 -> 171	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_115 = CONVERT this to address
REF_36 -> \
BALANCE TMP_115
Transfer dest:_recipient value:REF_36",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_115 = CONVERT this to address
REF_36 -> BALANCE TMP_115
Transfer dest:_recipient value:REF_36",
		node_source_code_lines="[208]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	171 -> 172	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_36.sol_MindsyncPlatform_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[206, 207, 208, 209]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	173 -> 170	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[212, 213, 214]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	175	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_117(bool) = tx.origin == owner_txorigin12
\
TMP_118(None) = SOLIDITY_CALL require(bool)(TMP_117)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_117(bool) = tx.origin == owner_txorigin12
TMP_118(None) = SOLIDITY_CALL require(bool)(TMP_117)",
		node_source_code_lines="[213]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	174 -> 175	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin12(address)",
		label="buggy_36.sol_MindsyncPlatform_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[212, 213, 214]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	176 -> 174	[key=0,
		edge_type=next,
		label=Next];
	177	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[217, 218, 219, 220]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	178	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_119(bool) = tx.origin == owner_txorigin35
\
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_119(bool) = tx.origin == owner_txorigin35
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_source_code_lines="[218]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	177 -> 178	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_37(None) -> to.call
REF_38(None) -> REF_37.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_37(None) -> to.call
REF_38(None) -> REF_37.value",
		node_source_code_lines="[219]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	178 -> 179	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[217, 218, 219, 220]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	180 -> 177	[key=0,
		edge_type=next,
		label=Next];
	181	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[222, 223, 224]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	182	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_122(bool) = tx.origin == owner_txorigin40
\
TMP_123(None) = SOLIDITY_CALL require(bool)(TMP_122)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_122(bool) = tx.origin == owner_txorigin40
TMP_123(None) = SOLIDITY_CALL require(bool)(TMP_122)",
		node_source_code_lines="[223]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	181 -> 182	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin40(address)",
		label="buggy_36.sol_MindsyncPlatform_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[222, 223, 224]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	183 -> 181	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[226, 227, 228, 229]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	185	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_124(bool) = tx.origin == owner_txorigin33
\
TMP_125(None) = SOLIDITY_CALL require(bool)(TMP_124)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_124(bool) = tx.origin == owner_txorigin33
TMP_125(None) = SOLIDITY_CALL require(bool)(TMP_124)",
		node_source_code_lines="[227]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	184 -> 185	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[228]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	185 -> 186	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[226, 227, 228, 229]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	187 -> 184	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[231, 232, 233, 234]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	189	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_127(bool) = tx.origin == owner_txorigin27
\
TMP_128(None) = SOLIDITY_CALL require(bool)(TMP_127)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_127(bool) = tx.origin == owner_txorigin27
TMP_128(None) = SOLIDITY_CALL require(bool)(TMP_127)",
		node_source_code_lines="[232]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	188 -> 189	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_40(None) -> to.call
REF_41(None) -> REF_40.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_40(None) -> to.call
REF_41(None) -> REF_40.value",
		node_source_code_lines="[233]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	189 -> 190	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[231, 232, 233, 234]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	191 -> 188	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[236, 237, 238, 239]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	193	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_130(bool) = tx.origin == owner_txorigin31
\
TMP_131(None) = SOLIDITY_CALL require(bool)(TMP_130)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_130(bool) = tx.origin == owner_txorigin31
TMP_131(None) = SOLIDITY_CALL require(bool)(TMP_130)",
		node_source_code_lines="[237]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	192 -> 193	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_42(None) -> to.call
REF_43(None) -> REF_42.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_42(None) -> to.call
REF_43(None) -> REF_42.value",
		node_source_code_lines="[238]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[236, 237, 238, 239]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	195 -> 192	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[241, 242, 243, 244]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	197	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_133(bool) = tx.origin == owner_txorigin13
\
TMP_134(None) = SOLIDITY_CALL require(bool)(TMP_133)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_133(bool) = tx.origin == owner_txorigin13
TMP_134(None) = SOLIDITY_CALL require(bool)(TMP_133)",
		node_source_code_lines="[242]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	196 -> 197	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[243]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=MindsyncPlatform,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[241, 242, 243, 244]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	199 -> 196	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=MindsyncPlatform,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[284, 285]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	201	[contract_name=MindsyncPlatform,
		function_fullname="constructor()",
		label="buggy_36.sol_MindsyncPlatform_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[284, 285]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	201 -> 200	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[286, 287, 288]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	203	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_136(bool) = tx.origin == owner_txorigin32
\
TMP_137(None) = SOLIDITY_CALL require(bool)(TMP_136)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_136(bool) = tx.origin == owner_txorigin32
TMP_137(None) = SOLIDITY_CALL require(bool)(TMP_136)",
		node_source_code_lines="[287]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	202 -> 203	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin32(address)",
		label="buggy_36.sol_MindsyncPlatform_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[286, 287, 288]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	204 -> 202	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=MindsyncPlatform,
		function_fullname="init(Token,address,uint256,uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[299, 300, 301, 302, 303, 304]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	210	[contract_name=MindsyncPlatform,
		function_fullname="init(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, owned.onlyOwner()()",
		node_source_code_lines="[299]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	205 -> 210	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=MindsyncPlatform,
		function_fullname="init(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(! initialized)

IRs:
TMP_138 = ! initialized 
TMP_139(None) = SOLIDITY_CALL require(\
bool)(TMP_138)",
		node_expression="require(bool)(! initialized)",
		node_info_vulnerabilities=None,
		node_irs="TMP_138 = ! initialized 
TMP_139(None) = SOLIDITY_CALL require(bool)(TMP_138)",
		node_source_code_lines="[300]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	207	[contract_name=MindsyncPlatform,
		function_fullname="init(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
initialized = true

IRs:
initialized(bool) := True(bool)",
		node_expression="initialized = true",
		node_info_vulnerabilities=None,
		node_irs="initialized(bool) := True(bool)",
		node_source_code_lines="[301]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=MindsyncPlatform,
		function_fullname="init(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
changeVotingRules(_tokenAddress,_chairmanAddress,_minimumTokensToVote,_minimumPercentToPassAVote,_\
minutesForDebate)

IRs:
INTERNAL_CALL, MindsyncPlatform.changeVotingRules(Token,address,uint256,uint256,uint256)(_tokenAddress,_\
chairmanAddress,_minimumTokensToVote,_minimumPercentToPassAVote,_minutesForDebate)",
		node_expression="changeVotingRules(_tokenAddress,_chairmanAddress,_minimumTokensToVote,_minimumPercentToPassAVote,_minutesForDebate)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, MindsyncPlatform.changeVotingRules(Token,address,uint256,uint256,uint256)(_tokenAddress,_chairmanAddress,_minimumTokensToVote,_\
minimumPercentToPassAVote,_minutesForDebate)",
		node_source_code_lines="[302]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	207 -> 208	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=MindsyncPlatform,
		function_fullname="init(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Initialized()

IRs:
Emit Initialized()",
		node_expression="Initialized()",
		node_info_vulnerabilities=None,
		node_irs="Emit Initialized()",
		node_source_code_lines="[303]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	210 -> 206	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=MindsyncPlatform,
		function_fullname="init(Token,address,uint256,uint256,uint256)",
		label="buggy_36.sol_MindsyncPlatform_init(Token,address,uint256,uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[299, 300, 301, 302, 303, 304]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	211 -> 205	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[305, 306, 307, 308]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	213	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_143(bool) = tx.origin == owner_txorigin38
\
TMP_144(None) = SOLIDITY_CALL require(bool)(TMP_143)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_143(bool) = tx.origin == owner_txorigin38
TMP_144(None) = SOLIDITY_CALL require(bool)(TMP_143)",
		node_source_code_lines="[306]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	212 -> 213	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_145 = CONVERT this to address
REF_46 -> \
BALANCE TMP_145
Transfer dest:_recipient value:REF_46",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_145 = CONVERT this to address
REF_46 -> BALANCE TMP_145
Transfer dest:_recipient value:REF_46",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	213 -> 214	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_36.sol_MindsyncPlatform_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[305, 306, 307, 308]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	215 -> 212	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	231	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, owned.onlyOwner()()",
		node_source_code_lines="[322]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	216 -> 231	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_chairmanAddress != address(0))

IRs:
TMP_147 = CONVERT 0 to address
TMP_148(bool) = _\
chairmanAddress != TMP_147
TMP_149(None) = SOLIDITY_CALL require(bool)(TMP_148)",
		node_expression="require(bool)(_chairmanAddress != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_147 = CONVERT 0 to address
TMP_148(bool) = _chairmanAddress != TMP_147
TMP_149(None) = SOLIDITY_CALL require(bool)(TMP_148)",
		node_source_code_lines="[323]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	218	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_minimumPercentToPassAVote <= 51)

IRs:
TMP_150(bool) = _minimumPercentToPassAVote <= \
51
TMP_151(None) = SOLIDITY_CALL require(bool)(TMP_150)",
		node_expression="require(bool)(_minimumPercentToPassAVote <= 51)",
		node_info_vulnerabilities=None,
		node_irs="TMP_150(bool) = _minimumPercentToPassAVote <= 51
TMP_151(None) = SOLIDITY_CALL require(bool)(TMP_150)",
		node_source_code_lines="[324]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	217 -> 218	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
tokenAddress = Token(_tokenAddress)

IRs:
TMP_152 = CONVERT _tokenAddress to Token
tokenAddress(\
Token) := TMP_152(Token)",
		node_expression="tokenAddress = Token(_tokenAddress)",
		node_info_vulnerabilities=None,
		node_irs="TMP_152 = CONVERT _tokenAddress to Token
tokenAddress(Token) := TMP_152(Token)",
		node_source_code_lines="[325]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	218 -> 219	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
chairmanAddress = _chairmanAddress

IRs:
chairmanAddress(address) := _chairmanAddress(address)",
		node_expression="chairmanAddress = _chairmanAddress",
		node_info_vulnerabilities=None,
		node_irs="chairmanAddress(address) := _chairmanAddress(address)",
		node_source_code_lines="[326]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	219 -> 220	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
_minimumTokensToVote == 0

IRs:
TMP_153(bool) = _minimumTokensToVote == 0
CONDITION TMP_153",
		node_expression="_minimumTokensToVote == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_153(bool) = _minimumTokensToVote == 0
CONDITION TMP_153",
		node_source_code_lines="[327]",
		node_type=IF,
		source_file="buggy_36.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_minimumTokensToVote = 1

IRs:
_minimumTokensToVote(uint256) := 1(uint256)",
		node_expression="_minimumTokensToVote = 1",
		node_info_vulnerabilities=None,
		node_irs="_minimumTokensToVote(uint256) := 1(uint256)",
		node_source_code_lines="[327]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	221 -> 222	[key=0,
		edge_type=if_true,
		label=True];
	223	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[327]",
		node_type=END_IF,
		source_file="buggy_36.sol"];
	221 -> 223	[key=0,
		edge_type=if_false,
		label=False];
	222 -> 223	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
minimumTokensToVote = _minimumTokensToVote

IRs:
minimumTokensToVote(uint256) := _minimumTokensToVote(\
uint256)",
		node_expression="minimumTokensToVote = _minimumTokensToVote",
		node_info_vulnerabilities=None,
		node_irs="minimumTokensToVote(uint256) := _minimumTokensToVote(uint256)",
		node_source_code_lines="[328]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	223 -> 224	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
_minimumPercentToPassAVote == 0

IRs:
TMP_154(bool) = _minimumPercentToPassAVote == 0
CONDITION TMP_154",
		node_expression="_minimumPercentToPassAVote == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_154(bool) = _minimumPercentToPassAVote == 0
CONDITION TMP_154",
		node_source_code_lines="[329]",
		node_type=IF,
		source_file="buggy_36.sol"];
	224 -> 225	[key=0,
		edge_type=next,
		label=Next];
	226	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_minimumPercentToPassAVote = 51

IRs:
_minimumPercentToPassAVote(uint256) := 51(uint256)",
		node_expression="_minimumPercentToPassAVote = 51",
		node_info_vulnerabilities=None,
		node_irs="_minimumPercentToPassAVote(uint256) := 51(uint256)",
		node_source_code_lines="[329]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	225 -> 226	[key=0,
		edge_type=if_true,
		label=True];
	227	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[329]",
		node_type=END_IF,
		source_file="buggy_36.sol"];
	225 -> 227	[key=0,
		edge_type=if_false,
		label=False];
	226 -> 227	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
minimumQuorum = _minimumPercentToPassAVote

IRs:
minimumQuorum(uint256) := _minimumPercentToPassAVote(\
uint256)",
		node_expression="minimumQuorum = _minimumPercentToPassAVote",
		node_info_vulnerabilities=None,
		node_irs="minimumQuorum(uint256) := _minimumPercentToPassAVote(uint256)",
		node_source_code_lines="[330]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	227 -> 228	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
debatingPeriodInMinutes = _minutesForDebate

IRs:
debatingPeriodInMinutes(uint256) := _minutesForDebate(\
uint256)",
		node_expression="debatingPeriodInMinutes = _minutesForDebate",
		node_info_vulnerabilities=None,
		node_irs="debatingPeriodInMinutes(uint256) := _minutesForDebate(uint256)",
		node_source_code_lines="[331]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	228 -> 229	[key=0,
		edge_type=next,
		label=Next];
	230	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ChangeOfRules(_minimumTokensToVote,minimumQuorum,debatingPeriodInMinutes,address(tokenAddress),\
chairmanAddress)

IRs:
TMP_155 = CONVERT tokenAddress to address
Emit ChangeOfRules(_minimumTokensToVote.minimumQuorum.debatingPeriodInMinutes.TMP_\
155.chairmanAddress)",
		node_expression="ChangeOfRules(_minimumTokensToVote,minimumQuorum,debatingPeriodInMinutes,address(tokenAddress),chairmanAddress)",
		node_info_vulnerabilities=None,
		node_irs="TMP_155 = CONVERT tokenAddress to address
Emit ChangeOfRules(_minimumTokensToVote.minimumQuorum.debatingPeriodInMinutes.TMP_155.chairmanAddress)",
		node_source_code_lines="[332]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231 -> 217	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=MindsyncPlatform,
		function_fullname="changeVotingRules(Token,address,uint256,uint256,uint256)",
		label="buggy_36.sol_MindsyncPlatform_changeVotingRules(Token,address,uint256,uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	232 -> 216	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[334, 335, 336]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	234	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_158(bool) = tx.origin == owner_txorigin4
\
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_158(bool) = tx.origin == owner_txorigin4
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_source_code_lines="[335]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	233 -> 234	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin4(address)",
		label="buggy_36.sol_MindsyncPlatform_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[334, 335, 336]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	235 -> 233	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	251	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyTokenholders()

IRs:
MODIFIER_CALL, MindsyncPlatform.onlyTokenholders()()",
		node_expression="onlyTokenholders()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, MindsyncPlatform.onlyTokenholders()()",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	236 -> 251	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
proposalID = proposals.length ++

IRs:
REF_47 -> LENGTH proposals
TMP_160(uint256) := REF_47(\
uint256)
REF_47(-> proposals) = REF_47 + 1
proposalID(uint256) := TMP_160(uint256)",
		node_expression="proposalID = proposals.length ++",
		node_info_vulnerabilities=None,
		node_irs="REF_47 -> LENGTH proposals
TMP_160(uint256) := REF_47(uint256)
REF_47(-> proposals) = REF_47 + 1
proposalID(uint256) := TMP_160(\
uint256)",
		node_source_code_lines="[358]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	238	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
p = proposals[proposalID]

IRs:
REF_48(MindsyncPlatform.Proposal) -> proposals[proposalID]
\
p(MindsyncPlatform.Proposal) := REF_48(MindsyncPlatform.Proposal)",
		node_expression="p = proposals[proposalID]",
		node_info_vulnerabilities=None,
		node_irs="REF_48(MindsyncPlatform.Proposal) -> proposals[proposalID]
p(MindsyncPlatform.Proposal) := REF_48(MindsyncPlatform.Proposal)",
		node_source_code_lines="[359]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	237 -> 238	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.recipient = destination

IRs:
REF_49(address) -> p.recipient
REF_49 (->p) := destination(address)",
		node_expression="p.recipient = destination",
		node_info_vulnerabilities=None,
		node_irs="REF_49(address) -> p.recipient
REF_49 (->p) := destination(address)",
		node_source_code_lines="[360]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.signedByChairman = false

IRs:
REF_50(bool) -> p.signedByChairman
REF_50 (->p) := False(bool)",
		node_expression="p.signedByChairman = false",
		node_info_vulnerabilities=None,
		node_irs="REF_50(bool) -> p.signedByChairman
REF_50 (->p) := False(bool)",
		node_source_code_lines="[361]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	239 -> 240	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.amount = weiAmount

IRs:
REF_51(uint256) -> p.amount
REF_51 (->p) := weiAmount(uint256)",
		node_expression="p.amount = weiAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_51(uint256) -> p.amount
REF_51 (->p) := weiAmount(uint256)",
		node_source_code_lines="[362]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	240 -> 241	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.description = transactionDescription

IRs:
REF_52(string) -> p.description
REF_52 (->p) := \
transactionDescription(string)",
		node_expression="p.description = transactionDescription",
		node_info_vulnerabilities=None,
		node_irs="REF_52(string) -> p.description
REF_52 (->p) := transactionDescription(string)",
		node_source_code_lines="[363]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.proposalHash = keccak256(bytes)(abi.encodePacked(destination,weiAmount,transactionBytecode))

\
IRs:
REF_53(bytes32) -> p.proposalHash
TMP_161(bytes) = SOLIDITY_CALL abi.encodePacked()(destination,weiAmount,transactionBytecode)
\
TMP_162(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_161)
REF_53 (->p) := TMP_162(bytes32)",
		node_expression="p.proposalHash = keccak256(bytes)(abi.encodePacked(destination,weiAmount,transactionBytecode))",
		node_info_vulnerabilities=None,
		node_irs="REF_53(bytes32) -> p.proposalHash
TMP_161(bytes) = SOLIDITY_CALL abi.encodePacked()(destination,weiAmount,transactionBytecode)
TMP_\
162(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_161)
REF_53 (->p) := TMP_162(bytes32)",
		node_source_code_lines="[364]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	242 -> 243	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.minExecutionDate = now + debatingPeriodInMinutes * 60

IRs:
REF_55(uint256) -> p.minExecutionDate
\
TMP_163(uint256) = debatingPeriodInMinutes * 60
TMP_164(uint256) = now + TMP_163
REF_55 (->p) := TMP_164(uint256)",
		node_expression="p.minExecutionDate = now + debatingPeriodInMinutes * 60",
		node_info_vulnerabilities=None,
		node_irs="REF_55(uint256) -> p.minExecutionDate
TMP_163(uint256) = debatingPeriodInMinutes * 60
TMP_164(uint256) = now + TMP_163
REF_55 (->\
p) := TMP_164(uint256)",
		node_source_code_lines="[365]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	243 -> 244	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.executed = false

IRs:
REF_56(bool) -> p.executed
REF_56 (->p) := False(bool)",
		node_expression="p.executed = false",
		node_info_vulnerabilities=None,
		node_irs="REF_56(bool) -> p.executed
REF_56 (->p) := False(bool)",
		node_source_code_lines="[366]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	244 -> 245	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.proposalPassed = false

IRs:
REF_57(bool) -> p.proposalPassed
REF_57 (->p) := False(bool)",
		node_expression="p.proposalPassed = false",
		node_info_vulnerabilities=None,
		node_irs="REF_57(bool) -> p.proposalPassed
REF_57 (->p) := False(bool)",
		node_source_code_lines="[367]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	245 -> 246	[key=0,
		edge_type=next,
		label=Next];
	247	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.numberOfVotes = 0

IRs:
REF_58(uint256) -> p.numberOfVotes
REF_58 (->p) := 0(uint256)",
		node_expression="p.numberOfVotes = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_58(uint256) -> p.numberOfVotes
REF_58 (->p) := 0(uint256)",
		node_source_code_lines="[368]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	246 -> 247	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ProposalAdded(proposalID,destination,weiAmount,transactionDescription)

IRs:
Emit ProposalAdded(\
proposalID.destination.weiAmount.transactionDescription)",
		node_expression="ProposalAdded(proposalID,destination,weiAmount,transactionDescription)",
		node_info_vulnerabilities=None,
		node_irs="Emit ProposalAdded(proposalID.destination.weiAmount.transactionDescription)",
		node_source_code_lines="[369]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	247 -> 248	[key=0,
		edge_type=next,
		label=Next];
	249	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
numProposals = proposalID + 1

IRs:
TMP_166(uint256) = proposalID + 1
numProposals(uint256) := \
TMP_166(uint256)",
		node_expression="numProposals = proposalID + 1",
		node_info_vulnerabilities=None,
		node_irs="TMP_166(uint256) = proposalID + 1
numProposals(uint256) := TMP_166(uint256)",
		node_source_code_lines="[370]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	248 -> 249	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="Node Type: RETURN

EXPRESSION:
proposalID

IRs:
RETURN proposalID",
		node_expression=proposalID,
		node_info_vulnerabilities=None,
		node_irs="RETURN proposalID",
		node_source_code_lines="[372]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	249 -> 250	[key=0,
		edge_type=next,
		label=Next];
	251 -> 237	[key=0,
		edge_type=next,
		label=Next];
	252	[contract_name=MindsyncPlatform,
		function_fullname="newProposal(address,uint256,string,bytes)",
		label="buggy_36.sol_MindsyncPlatform_newProposal(address,uint256,string,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	252 -> 236	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[374, 375, 376, 377]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	254	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_168(bool) = tx.origin == owner_txorigin7
\
TMP_169(None) = SOLIDITY_CALL require(bool)(TMP_168)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_168(bool) = tx.origin == owner_txorigin7
TMP_169(None) = SOLIDITY_CALL require(bool)(TMP_168)",
		node_source_code_lines="[375]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	253 -> 254	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_59(None) -> to.call
REF_60(None) -> REF_59.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_59(None) -> to.call
REF_60(None) -> REF_59.value",
		node_source_code_lines="[376]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	254 -> 255	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[374, 375, 376, 377]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	256 -> 253	[key=0,
		edge_type=next,
		label=Next];
	257	[contract_name=MindsyncPlatform,
		function_fullname="checkProposalCode(uint256,address,uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[396, 397, 398, 399]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	258	[contract_name=MindsyncPlatform,
		function_fullname="checkProposalCode(uint256,address,uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
p = proposals[proposalNumber]

IRs:
REF_61(MindsyncPlatform.Proposal) -> proposals[proposalNumber]
\
p(MindsyncPlatform.Proposal) := REF_61(MindsyncPlatform.Proposal)",
		node_expression="p = proposals[proposalNumber]",
		node_info_vulnerabilities=None,
		node_irs="REF_61(MindsyncPlatform.Proposal) -> proposals[proposalNumber]
p(MindsyncPlatform.Proposal) := REF_61(MindsyncPlatform.Proposal)",
		node_source_code_lines="[397]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	257 -> 258	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=MindsyncPlatform,
		function_fullname="checkProposalCode(uint256,address,uint256,bytes)",
		label="Node Type: RETURN

EXPRESSION:
p.proposalHash == keccak256(bytes)(abi.encodePacked(destination,weiAmount,transactionBytecode))

\
IRs:
REF_62(bytes32) -> p.proposalHash
TMP_171(bytes) = SOLIDITY_CALL abi.encodePacked()(destination,weiAmount,transactionBytecode)
\
TMP_172(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_171)
TMP_173(bool) = REF_62 == TMP_172
RETURN TMP_173",
		node_expression="p.proposalHash == keccak256(bytes)(abi.encodePacked(destination,weiAmount,transactionBytecode))",
		node_info_vulnerabilities=None,
		node_irs="REF_62(bytes32) -> p.proposalHash
TMP_171(bytes) = SOLIDITY_CALL abi.encodePacked()(destination,weiAmount,transactionBytecode)
TMP_\
172(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_171)
TMP_173(bool) = REF_62 == TMP_172
RETURN TMP_173",
		node_source_code_lines="[398]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	258 -> 259	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=MindsyncPlatform,
		function_fullname="checkProposalCode(uint256,address,uint256,bytes)",
		label="buggy_36.sol_MindsyncPlatform_checkProposalCode(uint256,address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	260 -> 257	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402, 403]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	262	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_174(bool) = tx.origin == owner_txorigin23
\
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_174(bool) = tx.origin == owner_txorigin23
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_source_code_lines="[401]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_64(None) -> to.call
REF_65(None) -> REF_64.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="REF_64(None) -> to.call
REF_65(None) -> REF_64.value",
		node_source_code_lines="[402]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	262 -> 263	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=MindsyncPlatform,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_36.sol_MindsyncPlatform_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402, 403]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	264 -> 261	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[420, 421, 422, 423, 424, 425, 426, 427, 428, 429]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	273	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyTokenholders()

IRs:
MODIFIER_CALL, MindsyncPlatform.onlyTokenholders()()",
		node_expression="onlyTokenholders()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, MindsyncPlatform.onlyTokenholders()()",
		node_source_code_lines="[418]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	265 -> 273	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(initialized)

IRs:
TMP_177(None) = SOLIDITY_CALL require(bool)(initialized)",
		node_expression="require(bool)(initialized)",
		node_info_vulnerabilities=None,
		node_irs="TMP_177(None) = SOLIDITY_CALL require(bool)(initialized)",
		node_source_code_lines="[421]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	267	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
p = proposals[proposalNumber]

IRs:
REF_66(MindsyncPlatform.Proposal) -> proposals[proposalNumber]
\
p(MindsyncPlatform.Proposal) := REF_66(MindsyncPlatform.Proposal)",
		node_expression="p = proposals[proposalNumber]",
		node_info_vulnerabilities=None,
		node_irs="REF_66(MindsyncPlatform.Proposal) -> proposals[proposalNumber]
p(MindsyncPlatform.Proposal) := REF_66(MindsyncPlatform.Proposal)",
		node_source_code_lines="[422]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == chairmanAddress)

IRs:
TMP_178(bool) = msg.sender == chairmanAddress
\
TMP_179(None) = SOLIDITY_CALL require(bool)(TMP_178)",
		node_expression="require(bool)(msg.sender == chairmanAddress)",
		node_info_vulnerabilities=None,
		node_irs="TMP_178(bool) = msg.sender == chairmanAddress
TMP_179(None) = SOLIDITY_CALL require(bool)(TMP_178)",
		node_source_code_lines="[423]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(signProposal == true)

IRs:
TMP_180(bool) = signProposal == True
TMP_181(None) = \
SOLIDITY_CALL require(bool)(TMP_180)",
		node_expression="require(bool)(signProposal == true)",
		node_info_vulnerabilities=None,
		node_irs="TMP_180(bool) = signProposal == True
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_source_code_lines="[424]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	268 -> 269	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.signedByChairman = signProposal

IRs:
REF_67(bool) -> p.signedByChairman
REF_67 (->p) := signProposal(\
bool)",
		node_expression="p.signedByChairman = signProposal",
		node_info_vulnerabilities=None,
		node_irs="REF_67(bool) -> p.signedByChairman
REF_67 (->p) := signProposal(bool)",
		node_source_code_lines="[426]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	269 -> 270	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
ProposalSignedByChairman(proposalNumber,signProposal,msg.sender)

IRs:
Emit ProposalSignedByChairman(\
proposalNumber.signProposal.msg.sender)",
		node_expression="ProposalSignedByChairman(proposalNumber,signProposal,msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit ProposalSignedByChairman(proposalNumber.signProposal.msg.sender)",
		node_source_code_lines="[427]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	270 -> 271	[key=0,
		edge_type=next,
		label=Next];
	272	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="Node Type: RETURN

EXPRESSION:
proposalNumber

IRs:
RETURN proposalNumber",
		node_expression=proposalNumber,
		node_info_vulnerabilities=None,
		node_irs="RETURN proposalNumber",
		node_source_code_lines="[428]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	271 -> 272	[key=0,
		edge_type=next,
		label=Next];
	273 -> 266	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=MindsyncPlatform,
		function_fullname="sign(uint256,bool)",
		label="buggy_36.sol_MindsyncPlatform_sign(uint256,bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	274 -> 265	[key=0,
		edge_type=next,
		label=Next];
	275	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[430, 431, 432, 433]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	276	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_184(bool) = tx.origin == owner_txorigin14
\
TMP_185(None) = SOLIDITY_CALL require(bool)(TMP_184)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_184(bool) = tx.origin == owner_txorigin14
TMP_185(None) = SOLIDITY_CALL require(bool)(TMP_184)",
		node_source_code_lines="[431]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	275 -> 276	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_186 = CONVERT this to address
REF_69 -> \
BALANCE TMP_186
Transfer dest:_recipient value:REF_69",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_186 = CONVERT this to address
REF_69 -> BALANCE TMP_186
Transfer dest:_recipient value:REF_69",
		node_source_code_lines="[432]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	276 -> 277	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_36.sol_MindsyncPlatform_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[430, 431, 432, 433]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	278 -> 275	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	288	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyTokenholders()

IRs:
MODIFIER_CALL, MindsyncPlatform.onlyTokenholders()()",
		node_expression="onlyTokenholders()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, MindsyncPlatform.onlyTokenholders()()",
		node_source_code_lines="[448]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	279 -> 288	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
p = proposals[proposalNumber]

IRs:
REF_70(MindsyncPlatform.Proposal) -> proposals[proposalNumber]
\
p(MindsyncPlatform.Proposal) := REF_70(MindsyncPlatform.Proposal)",
		node_expression="p = proposals[proposalNumber]",
		node_info_vulnerabilities=None,
		node_irs="REF_70(MindsyncPlatform.Proposal) -> proposals[proposalNumber]
p(MindsyncPlatform.Proposal) := REF_70(MindsyncPlatform.Proposal)",
		node_source_code_lines="[451]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	281	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(p.voted[msg.sender] != true)

IRs:
REF_71(mapping(address => bool)) -> p.voted
\
REF_72(bool) -> REF_71[msg.sender]
TMP_188(bool) = REF_72 != True
TMP_189(None) = SOLIDITY_CALL require(bool)(TMP_188)",
		node_expression="require(bool)(p.voted[msg.sender] != true)",
		node_info_vulnerabilities=None,
		node_irs="REF_71(mapping(address => bool)) -> p.voted
REF_72(bool) -> REF_71[msg.sender]
TMP_188(bool) = REF_72 != True
TMP_189(None) = SOLIDITY_\
CALL require(bool)(TMP_188)",
		node_source_code_lines="[452]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	280 -> 281	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
voteID = p.votes.length ++

IRs:
REF_73(MindsyncPlatform.Vote[]) -> p.votes
REF_74 -> LENGTH \
REF_73
TMP_190(uint256) := REF_74(uint256)
REF_74(-> p) = REF_74 + 1
voteID(uint256) := TMP_190(uint256)",
		node_expression="voteID = p.votes.length ++",
		node_info_vulnerabilities=None,
		node_irs="REF_73(MindsyncPlatform.Vote[]) -> p.votes
REF_74 -> LENGTH REF_73
TMP_190(uint256) := REF_74(uint256)
REF_74(-> p) = REF_74 + 1
\
voteID(uint256) := TMP_190(uint256)",
		node_source_code_lines="[454]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	281 -> 282	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.votes[voteID] = Vote(supportsProposal,msg.sender)

IRs:
REF_75(MindsyncPlatform.Vote[]) -> \
p.votes
REF_76(MindsyncPlatform.Vote) -> REF_75[voteID]
TMP_191 = new Vote(supportsProposal,msg.sender)
REF_76 (->p) := TMP_191(\
MindsyncPlatform.Vote)",
		node_expression="p.votes[voteID] = Vote(supportsProposal,msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="REF_75(MindsyncPlatform.Vote[]) -> p.votes
REF_76(MindsyncPlatform.Vote) -> REF_75[voteID]
TMP_191 = new Vote(supportsProposal,msg.sender)
\
REF_76 (->p) := TMP_191(MindsyncPlatform.Vote)",
		node_source_code_lines="[455]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	282 -> 283	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.voted[msg.sender] = true

IRs:
REF_77(mapping(address => bool)) -> p.voted
REF_78(bool) -> \
REF_77[msg.sender]
REF_78 (->p) := True(bool)",
		node_expression="p.voted[msg.sender] = true",
		node_info_vulnerabilities=None,
		node_irs="REF_77(mapping(address => bool)) -> p.voted
REF_78(bool) -> REF_77[msg.sender]
REF_78 (->p) := True(bool)",
		node_source_code_lines="[456]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	283 -> 284	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.numberOfVotes = voteID + 1

IRs:
REF_79(uint256) -> p.numberOfVotes
TMP_192(uint256) = voteID + \
1
REF_79 (->p) := TMP_192(uint256)",
		node_expression="p.numberOfVotes = voteID + 1",
		node_info_vulnerabilities=None,
		node_irs="REF_79(uint256) -> p.numberOfVotes
TMP_192(uint256) = voteID + 1
REF_79 (->p) := TMP_192(uint256)",
		node_source_code_lines="[457]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	284 -> 285	[key=0,
		edge_type=next,
		label=Next];
	286	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
Voted(proposalNumber,supportsProposal,msg.sender)

IRs:
Emit Voted(proposalNumber.supportsProposal.msg.sender)",
		node_expression="Voted(proposalNumber,supportsProposal,msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit Voted(proposalNumber.supportsProposal.msg.sender)",
		node_source_code_lines="[458]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	285 -> 286	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="Node Type: RETURN

EXPRESSION:
voteID

IRs:
RETURN voteID",
		node_expression=voteID,
		node_info_vulnerabilities=None,
		node_irs="RETURN voteID",
		node_source_code_lines="[459]",
		node_type=RETURN,
		source_file="buggy_36.sol"];
	286 -> 287	[key=0,
		edge_type=next,
		label=Next];
	288 -> 280	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=MindsyncPlatform,
		function_fullname="vote(uint256,bool)",
		label="buggy_36.sol_MindsyncPlatform_vote(uint256,bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	289 -> 279	[key=0,
		edge_type=next,
		label=Next];
	290	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[461, 462, 463, 464]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	291	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_195(bool) = tx.origin == owner_txorigin30
\
TMP_196(None) = SOLIDITY_CALL require(bool)(TMP_195)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_195(bool) = tx.origin == owner_txorigin30
TMP_196(None) = SOLIDITY_CALL require(bool)(TMP_195)",
		node_source_code_lines="[462]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	290 -> 291	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_197 = CONVERT this to address
REF_81 -> \
BALANCE TMP_197
Transfer dest:_recipient value:REF_81",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_197 = CONVERT this to address
REF_81 -> BALANCE TMP_197
Transfer dest:_recipient value:REF_81",
		node_source_code_lines="[463]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	291 -> 292	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=MindsyncPlatform,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_36.sol_MindsyncPlatform_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[461, 462, 463, 464]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	293 -> 290	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, \
500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	295	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
p = proposals[proposalNumber]

IRs:
REF_82(MindsyncPlatform.Proposal) -> proposals[proposalNumber]
\
p(MindsyncPlatform.Proposal) := REF_82(MindsyncPlatform.Proposal)",
		node_expression="p = proposals[proposalNumber]",
		node_info_vulnerabilities=None,
		node_irs="REF_82(MindsyncPlatform.Proposal) -> proposals[proposalNumber]
p(MindsyncPlatform.Proposal) := REF_82(MindsyncPlatform.Proposal)",
		node_source_code_lines="[475]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	294 -> 295	[key=0,
		edge_type=next,
		label=Next];
	296	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(initialized)

IRs:
TMP_199(None) = SOLIDITY_CALL require(bool)(initialized)",
		node_expression="require(bool)(initialized)",
		node_info_vulnerabilities=None,
		node_irs="TMP_199(None) = SOLIDITY_CALL require(bool)(initialized)",
		node_source_code_lines="[477]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	295 -> 296	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(now > p.minExecutionDate && ! p.executed && p.proposalHash == keccak256(bytes)(\
abi.encodePacked(p.recipient,p.amount,transactionBytecode)))

IRs:
REF_83(uint256) -> p.minExecutionDate
TMP_200(bool) = now > REF_\
83
REF_84(bool) -> p.executed
TMP_201 = ! REF_84 
TMP_202(bool) = TMP_200 && TMP_201
REF_85(bytes32) -> p.proposalHash
REF_87(address) \
-> p.recipient
REF_88(uint256) -> p.amount
TMP_203(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_87,REF_88,transactionBytecode)
\
TMP_204(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_203)
TMP_205(bool) = REF_85 == TMP_204
TMP_206(bool) = TMP_202 && TMP_205
\
TMP_207(None) = SOLIDITY_CALL require(bool)(TMP_206)",
		node_expression="require(bool)(now > p.minExecutionDate && ! p.executed && p.proposalHash == keccak256(bytes)(abi.encodePacked(p.recipient,p.amount,\
transactionBytecode)))",
		node_info_vulnerabilities=None,
		node_irs="REF_83(uint256) -> p.minExecutionDate
TMP_200(bool) = now > REF_83
REF_84(bool) -> p.executed
TMP_201 = ! REF_84 
TMP_202(bool) = \
TMP_200 && TMP_201
REF_85(bytes32) -> p.proposalHash
REF_87(address) -> p.recipient
REF_88(uint256) -> p.amount
TMP_203(bytes) = \
SOLIDITY_CALL abi.encodePacked()(REF_87,REF_88,transactionBytecode)
TMP_204(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_203)
TMP_\
205(bool) = REF_85 == TMP_204
TMP_206(bool) = TMP_202 && TMP_205
TMP_207(None) = SOLIDITY_CALL require(bool)(TMP_206)",
		node_source_code_lines="[478, 479, 480]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	296 -> 297	[key=0,
		edge_type=next,
		label=Next];
	298	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
quorum = 0

IRs:
quorum(uint256) := 0(uint256)",
		node_expression="quorum = 0",
		node_info_vulnerabilities=None,
		node_irs="quorum(uint256) := 0(uint256)",
		node_source_code_lines="[484]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	297 -> 298	[key=0,
		edge_type=next,
		label=Next];
	299	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
yea = 0

IRs:
yea(uint256) := 0(uint256)",
		node_expression="yea = 0",
		node_info_vulnerabilities=None,
		node_irs="yea(uint256) := 0(uint256)",
		node_source_code_lines="[485]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	298 -> 299	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
nay = 0

IRs:
nay(uint256) := 0(uint256)",
		node_expression="nay = 0",
		node_info_vulnerabilities=None,
		node_irs="nay(uint256) := 0(uint256)",
		node_source_code_lines="[486]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	299 -> 300	[key=0,
		edge_type=next,
		label=Next];
	303	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 0(uint256)",
		node_source_code_lines="[488]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	300 -> 303	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[488, 489, 490, 491, 492, 493, 494, 495, 496, 497]",
		node_type=BEGIN_LOOP,
		source_file="buggy_36.sol"];
	304	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < p.votes.length

IRs:
REF_89(MindsyncPlatform.Vote[]) -> p.votes
REF_90 -> LENGTH REF_89
TMP_\
208(bool) = i < REF_90
CONDITION TMP_208",
		node_expression="i < p.votes.length",
		node_info_vulnerabilities=None,
		node_irs="REF_89(MindsyncPlatform.Vote[]) -> p.votes
REF_90 -> LENGTH REF_89
TMP_208(bool) = i < REF_90
CONDITION TMP_208",
		node_source_code_lines="[488]",
		node_type=IF_LOOP,
		source_file="buggy_36.sol"];
	301 -> 304	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[488, 489, 490, 491, 492, 493, 494, 495, 496, 497]",
		node_type=END_LOOP,
		source_file="buggy_36.sol"];
	313	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
t = Token(tokenAddress)

IRs:
TMP_210 = CONVERT tokenAddress to Token
t(Token) := TMP_210(Token)",
		node_expression="t = Token(tokenAddress)",
		node_info_vulnerabilities=None,
		node_irs="TMP_210 = CONVERT tokenAddress to Token
t(Token) := TMP_210(Token)",
		node_source_code_lines="[499]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	302 -> 313	[key=0,
		edge_type=next,
		label=Next];
	303 -> 301	[key=0,
		edge_type=next,
		label=Next];
	304 -> 302	[key=0,
		edge_type=if_false,
		label=False];
	305	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
v = p.votes[i]

IRs:
REF_91(MindsyncPlatform.Vote[]) -> p.votes
REF_92(MindsyncPlatform.Vote) \
-> REF_91[i]
v(MindsyncPlatform.Vote) := REF_92(MindsyncPlatform.Vote)",
		node_expression="v = p.votes[i]",
		node_info_vulnerabilities=None,
		node_irs="REF_91(MindsyncPlatform.Vote[]) -> p.votes
REF_92(MindsyncPlatform.Vote) -> REF_91[i]
v(MindsyncPlatform.Vote) := REF_92(MindsyncPlatform.Vote)",
		node_source_code_lines="[489]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	304 -> 305	[key=0,
		edge_type=if_true,
		label=True];
	306	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
voteWeight = tokenAddress.actualBalanceOf(v.voter)

IRs:
REF_94(address) -> v.voter
TMP_209(\
uint256) = HIGH_LEVEL_CALL, dest:tokenAddress(Token), function:actualBalanceOf, arguments:['REF_94']  
voteWeight(uint256) := TMP_\
209(uint256)",
		node_expression="voteWeight = tokenAddress.actualBalanceOf(v.voter)",
		node_info_vulnerabilities=None,
		node_irs="REF_94(address) -> v.voter
TMP_209(uint256) = HIGH_LEVEL_CALL, dest:tokenAddress(Token), function:actualBalanceOf, arguments:['REF_\
94']  
voteWeight(uint256) := TMP_209(uint256)",
		node_source_code_lines="[490]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	305 -> 306	[key=0,
		edge_type=next,
		label=Next];
	307	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
quorum += voteWeight

IRs:
quorum(uint256) = quorum + voteWeight",
		node_expression="quorum += voteWeight",
		node_info_vulnerabilities=None,
		node_irs="quorum(uint256) = quorum + voteWeight",
		node_source_code_lines="[491]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	306 -> 307	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: IF

EXPRESSION:
v.inSupport

IRs:
REF_95(bool) -> v.inSupport
CONDITION REF_95",
		node_expression="v.inSupport",
		node_info_vulnerabilities=None,
		node_irs="REF_95(bool) -> v.inSupport
CONDITION REF_95",
		node_source_code_lines="[492]",
		node_type=IF,
		source_file="buggy_36.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
yea += voteWeight

IRs:
yea(uint256) = yea + voteWeight",
		node_expression="yea += voteWeight",
		node_info_vulnerabilities=None,
		node_irs="yea(uint256) = yea + voteWeight",
		node_source_code_lines="[493]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	308 -> 309	[key=0,
		edge_type=if_true,
		label=True];
	310	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
nay += voteWeight

IRs:
nay(uint256) = nay + voteWeight",
		node_expression="nay += voteWeight",
		node_info_vulnerabilities=None,
		node_irs="nay(uint256) = nay + voteWeight",
		node_source_code_lines="[495]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	308 -> 310	[key=0,
		edge_type=if_false,
		label=False];
	311	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[492, 493, 494, 495, 496]",
		node_type=END_IF,
		source_file="buggy_36.sol"];
	309 -> 311	[key=0,
		edge_type=next,
		label=Next];
	310 -> 311	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1",
		node_expression="++ i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i + 1",
		node_source_code_lines="[488]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	311 -> 312	[key=0,
		edge_type=next,
		label=Next];
	312 -> 304	[key=0,
		edge_type=next,
		label=Next];
	314	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(quorum >= t.totalSupply().mul(minimumQuorum).div(100))

IRs:
TMP_211(uint256) = \
HIGH_LEVEL_CALL, dest:t(Token), function:totalSupply, arguments:[]  
TMP_212(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(\
uint256,uint256), arguments:['TMP_211', 'minimumQuorum'] 
TMP_213(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(\
uint256,uint256), arguments:['TMP_212', '100'] 
TMP_214(bool) = quorum >= TMP_213
TMP_215(None) = SOLIDITY_CALL require(bool)(TMP_\
214)",
		node_expression="require(bool)(quorum >= t.totalSupply().mul(minimumQuorum).div(100))",
		node_info_vulnerabilities=None,
		node_irs="TMP_211(uint256) = HIGH_LEVEL_CALL, dest:t(Token), function:totalSupply, arguments:[]  
TMP_212(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.mul(uint256,uint256), arguments:['TMP_211', 'minimumQuorum'] 
TMP_213(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.div(uint256,uint256), arguments:['TMP_212', '100'] 
TMP_214(bool) = quorum >= TMP_213
TMP_215(None) = SOLIDITY_\
CALL require(bool)(TMP_214)",
		node_source_code_lines="[500]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	313 -> 314	[key=0,
		edge_type=next,
		label=Next];
	315	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: IF

EXPRESSION:
yea > nay

IRs:
TMP_216(bool) = yea > nay
CONDITION TMP_216",
		node_expression="yea > nay",
		node_info_vulnerabilities=None,
		node_irs="TMP_216(bool) = yea > nay
CONDITION TMP_216",
		node_source_code_lines="[502]",
		node_type=IF,
		source_file="buggy_36.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.executed = true

IRs:
REF_99(bool) -> p.executed
REF_99 (->p) := True(bool)",
		node_expression="p.executed = true",
		node_info_vulnerabilities=None,
		node_irs="REF_99(bool) -> p.executed
REF_99 (->p) := True(bool)",
		node_source_code_lines="[505]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	315 -> 316	[key=0,
		edge_type=if_true,
		label=True];
	321	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.proposalPassed = false

IRs:
REF_105(bool) -> p.proposalPassed
REF_105 (->p) := False(bool)",
		node_expression="p.proposalPassed = false",
		node_info_vulnerabilities=None,
		node_irs="REF_105(bool) -> p.proposalPassed
REF_105 (->p) := False(bool)",
		node_source_code_lines="[513]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	315 -> 321	[key=0,
		edge_type=if_false,
		label=False];
	317	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[507]",
		node_type="NEW VARIABLE",
		source_file="buggy_36.sol"];
	316 -> 317	[key=0,
		edge_type=next,
		label=Next];
	318	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
(success) = p.recipient.call.value(p.amount)(transactionBytecode)

IRs:
REF_100(address) -> p.recipient
\
REF_103(uint256) -> p.amount
TUPLE_0(bool,bytes) = LOW_LEVEL_CALL, dest:REF_100, function:call, arguments:['transactionBytecode'] \
value:REF_103 
success(bool)= UNPACK TUPLE_0 index: 0 ",
		node_expression="(success) = p.recipient.call.value(p.amount)(transactionBytecode)",
		node_info_vulnerabilities=None,
		node_irs="REF_100(address) -> p.recipient
REF_103(uint256) -> p.amount
TUPLE_0(bool,bytes) = LOW_LEVEL_CALL, dest:REF_100, function:call, \
arguments:['transactionBytecode'] value:REF_103 
success(bool)= UNPACK TUPLE_0 index: 0 ",
		node_source_code_lines="[507]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	317 -> 318	[key=0,
		edge_type=next,
		label=Next];
	319	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(success)

IRs:
TMP_218(None) = SOLIDITY_CALL require(bool)(success)",
		node_expression="require(bool)(success)",
		node_info_vulnerabilities=None,
		node_irs="TMP_218(None) = SOLIDITY_CALL require(bool)(success)",
		node_source_code_lines="[508]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	318 -> 319	[key=0,
		edge_type=next,
		label=Next];
	320	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
p.proposalPassed = true

IRs:
REF_104(bool) -> p.proposalPassed
REF_104 (->p) := True(bool)",
		node_expression="p.proposalPassed = true",
		node_info_vulnerabilities=None,
		node_irs="REF_104(bool) -> p.proposalPassed
REF_104 (->p) := True(bool)",
		node_source_code_lines="[510]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	319 -> 320	[key=0,
		edge_type=next,
		label=Next];
	322	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514]",
		node_type=END_IF,
		source_file="buggy_36.sol"];
	320 -> 322	[key=0,
		edge_type=next,
		label=Next];
	321 -> 322	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ProposalTallied(proposalNumber,yea - nay,quorum,p.proposalPassed)

IRs:
TMP_219(uint256) = yea \
- nay
REF_106(bool) -> p.proposalPassed
Emit ProposalTallied(proposalNumber.TMP_219.quorum.REF_106)",
		node_expression="ProposalTallied(proposalNumber,yea - nay,quorum,p.proposalPassed)",
		node_info_vulnerabilities=None,
		node_irs="TMP_219(uint256) = yea - nay
REF_106(bool) -> p.proposalPassed
Emit ProposalTallied(proposalNumber.TMP_219.quorum.REF_106)",
		node_source_code_lines="[517]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	322 -> 323	[key=0,
		edge_type=next,
		label=Next];
	324	[contract_name=MindsyncPlatform,
		function_fullname="executeProposal(uint256,bytes)",
		label="buggy_36.sol_MindsyncPlatform_executeProposal(uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, \
500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	324 -> 294	[key=0,
		edge_type=next,
		label=Next];
	325	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[519, 520, 521]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	326	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_221(bool) = tx.origin == owner_txorigin8
\
TMP_222(None) = SOLIDITY_CALL require(bool)(TMP_221)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs="TMP_221(bool) = tx.origin == owner_txorigin8
TMP_222(None) = SOLIDITY_CALL require(bool)(TMP_221)",
		node_source_code_lines="[520]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	325 -> 326	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=MindsyncPlatform,
		function_fullname="bug_txorigin8(address)",
		label="buggy_36.sol_MindsyncPlatform_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[519, 520, 521]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	327 -> 325	[key=0,
		edge_type=next,
		label=Next];
	328	[contract_name=MindsyncPlatform,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
initialized = false

IRs:
initialized(bool) := False(bool)",
		node_expression="initialized = false",
		node_info_vulnerabilities=None,
		node_irs="initialized(bool) := False(bool)",
		node_source_code_lines="[215]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_36.sol"];
	329	[contract_name=MindsyncPlatform,
		function_fullname="slitherConstructorVariables()",
		label="buggy_36.sol_MindsyncPlatform_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [9, 10, 11, 17, 18, 19, 20, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 53, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, \
75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 177, 178, 179, 180, 182, 183, 184, \
185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, \
220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 286, 287, 288, 305, 306, 307, \
308, 334, 335, 336, 374, 375, 376, 377, 400, 401, 402, 403, 430, 431, 432, 433, 461, 462, 463, 464, 519, 520, 521], 'category': '\
access_control'}]",
		node_irs=None,
		node_source_code_lines="[174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, \
200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, \
226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, \
252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, \
278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, \
304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, \
330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, \
356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, \
382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, \
408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, \
434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, \
460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, \
486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, \
512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	329 -> 328	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=MindsyncPlatform,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22, 23, 24, 25]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	331	[contract_name=MindsyncPlatform,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_223(bool) = msg.sender == owner
TMP_224(None) = \
SOLIDITY_CALL require(bool)(TMP_223)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_223(bool) = msg.sender == owner
TMP_224(None) = SOLIDITY_CALL require(bool)(TMP_223)",
		node_source_code_lines="[23]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	330 -> 331	[key=0,
		edge_type=next,
		label=Next];
	332	[contract_name=MindsyncPlatform,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24]",
		node_type=_,
		source_file="buggy_36.sol"];
	331 -> 332	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=MindsyncPlatform,
		function_fullname="onlyOwner()",
		label="buggy_36.sol_MindsyncPlatform_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22, 23, 24, 25]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	333 -> 330	[key=0,
		edge_type=next,
		label=Next];
	334	[contract_name=MindsyncPlatform,
		function_fullname="onlyTokenholders()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	335	[contract_name=MindsyncPlatform,
		function_fullname="onlyTokenholders()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote)

IRs:
TMP_225(uint256) = \
HIGH_LEVEL_CALL, dest:tokenAddress(Token), function:actualBalanceOf, arguments:['msg.sender']  
TMP_226(bool) = TMP_225 > minimumTokensToVote
\
TMP_227(None) = SOLIDITY_CALL require(bool)(TMP_226)",
		node_expression="require(bool)(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote)",
		node_info_vulnerabilities=None,
		node_irs="TMP_225(uint256) = HIGH_LEVEL_CALL, dest:tokenAddress(Token), function:actualBalanceOf, arguments:['msg.sender']  
TMP_226(bool) = \
TMP_225 > minimumTokensToVote
TMP_227(None) = SOLIDITY_CALL require(bool)(TMP_226)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	334 -> 335	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=MindsyncPlatform,
		function_fullname="onlyTokenholders()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[269]",
		node_type=_,
		source_file="buggy_36.sol"];
	335 -> 336	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=MindsyncPlatform,
		function_fullname="onlyTokenholders()",
		label="buggy_36.sol_MindsyncPlatform_onlyTokenholders()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	337 -> 334	[key=0,
		edge_type=next,
		label=Next];
	338	[contract_name=MindsyncPlatform,
		function_fullname="onlyChairman()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[273, 274, 275, 276]",
		node_type=ENTRY_POINT,
		source_file="buggy_36.sol"];
	339	[contract_name=MindsyncPlatform,
		function_fullname="onlyChairman()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == chairmanAddress)

IRs:
TMP_228(bool) = msg.sender == chairmanAddress
\
TMP_229(None) = SOLIDITY_CALL require(bool)(TMP_228)",
		node_expression="require(bool)(msg.sender == chairmanAddress)",
		node_info_vulnerabilities=None,
		node_irs="TMP_228(bool) = msg.sender == chairmanAddress
TMP_229(None) = SOLIDITY_CALL require(bool)(TMP_228)",
		node_source_code_lines="[274]",
		node_type=EXPRESSION,
		source_file="buggy_36.sol"];
	338 -> 339	[key=0,
		edge_type=next,
		label=Next];
	340	[contract_name=MindsyncPlatform,
		function_fullname="onlyChairman()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[275]",
		node_type=_,
		source_file="buggy_36.sol"];
	339 -> 340	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=MindsyncPlatform,
		function_fullname="onlyChairman()",
		label="buggy_36.sol_MindsyncPlatform_onlyChairman()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[273, 274, 275, 276]",
		node_type=FUNCTION_NAME,
		source_file="buggy_36.sol"];
	341 -> 338	[key=0,
		edge_type=next,
		label=Next];
}
