digraph "" {
	node [label="\N"];
	0	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35, 36, 37]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	1	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a + b

IRs:
TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_source_code_lines="[33]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(c >= a,SafeMath: addition overflow)

IRs:
TMP_1(bool) = c >= a
TMP_2(None) = \
SOLIDITY_CALL require(bool,string)(TMP_1,SafeMath: addition overflow)",
		node_expression="require(bool,string)(c >= a,SafeMath: addition overflow)",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(bool) = c >= a
TMP_2(None) = SOLIDITY_CALL require(bool,string)(TMP_1,SafeMath: addition overflow)",
		node_source_code_lines="[34]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[36]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	2 -> 3	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_24.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35, 36, 37]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	4 -> 0	[key=0,
		edge_type=next,
		label=Next];
	5	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48, 49, 50]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	6	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
sub(a,b,SafeMath: subtraction overflow)

IRs:
TMP_3(uint256) = INTERNAL_CALL, SafeMath.sub(uint256,\
uint256,string)(a,b,SafeMath: subtraction overflow)
RETURN TMP_3",
		node_expression="sub(a,b,SafeMath: subtraction overflow)",
		node_info_vulnerabilities=None,
		node_irs="TMP_3(uint256) = INTERNAL_CALL, SafeMath.sub(uint256,uint256,string)(a,b,SafeMath: subtraction overflow)
RETURN TMP_3",
		node_source_code_lines="[49]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_24.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48, 49, 50]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	7 -> 5	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256,string)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67, 68, 69]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	9	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256,string)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b <= a,errorMessage)

IRs:
TMP_4(bool) = b <= a
TMP_5(None) = SOLIDITY_CALL \
require(bool,string)(TMP_4,errorMessage)",
		node_expression="require(bool,string)(b <= a,errorMessage)",
		node_info_vulnerabilities=None,
		node_irs="TMP_4(bool) = b <= a
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,errorMessage)",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	8 -> 9	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256,string)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a - b

IRs:
TMP_6(uint256) = a - b
c(uint256) := TMP_6(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(uint256) = a - b
c(uint256) := TMP_6(uint256)",
		node_source_code_lines="[66]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	9 -> 10	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256,string)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[68]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	10 -> 11	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256,string)",
		label="buggy_24.sol_SafeMath_sub(uint256,uint256,string)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67, 68, 69]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	12 -> 8	[key=0,
		edge_type=next,
		label=Next];
	13	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	14	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a == 0

IRs:
TMP_7(bool) = a == 0
CONDITION TMP_7",
		node_expression="a == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_7(bool) = a == 0
CONDITION TMP_7",
		node_source_code_lines="[84]",
		node_type=IF,
		source_file="buggy_24.sol"];
	13 -> 14	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
0

IRs:
RETURN 0",
		node_expression=0,
		node_info_vulnerabilities=None,
		node_irs="RETURN 0",
		node_source_code_lines="[85]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	14 -> 15	[key=0,
		edge_type=if_true,
		label=True];
	16	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[84, 85, 86]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	14 -> 16	[key=0,
		edge_type=if_false,
		label=False];
	17	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a * b

IRs:
TMP_8(uint256) = a * b
c(uint256) := TMP_8(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_8(uint256) = a * b
c(uint256) := TMP_8(uint256)",
		node_source_code_lines="[88]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	16 -> 17	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(c / a == b,SafeMath: multiplication overflow)

IRs:
TMP_9(uint256) = c / \
a
TMP_10(bool) = TMP_9 == b
TMP_11(None) = SOLIDITY_CALL require(bool,string)(TMP_10,SafeMath: multiplication overflow)",
		node_expression="require(bool,string)(c / a == b,SafeMath: multiplication overflow)",
		node_info_vulnerabilities=None,
		node_irs="TMP_9(uint256) = c / a
TMP_10(bool) = TMP_9 == b
TMP_11(None) = SOLIDITY_CALL require(bool,string)(TMP_10,SafeMath: multiplication \
overflow)",
		node_source_code_lines="[89]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	17 -> 18	[key=0,
		edge_type=next,
		label=Next];
	19	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[91]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	18 -> 19	[key=0,
		edge_type=next,
		label=Next];
	20	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_24.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	20 -> 13	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[105, 106, 107]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	22	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
div(a,b,SafeMath: division by zero)

IRs:
TMP_12(uint256) = INTERNAL_CALL, SafeMath.div(uint256,uint256,\
string)(a,b,SafeMath: division by zero)
RETURN TMP_12",
		node_expression="div(a,b,SafeMath: division by zero)",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(uint256) = INTERNAL_CALL, SafeMath.div(uint256,uint256,string)(a,b,SafeMath: division by zero)
RETURN TMP_12",
		node_source_code_lines="[106]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	21 -> 22	[key=0,
		edge_type=next,
		label=Next];
	23	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_24.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[105, 106, 107]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	23 -> 21	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256,string)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[123, 124, 125, 126, 127, 128, 129, 130]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	25	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256,string)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b > 0,errorMessage)

IRs:
TMP_13(bool) = b > 0
TMP_14(None) = SOLIDITY_CALL \
require(bool,string)(TMP_13,errorMessage)",
		node_expression="require(bool,string)(b > 0,errorMessage)",
		node_info_vulnerabilities=None,
		node_irs="TMP_13(bool) = b > 0
TMP_14(None) = SOLIDITY_CALL require(bool,string)(TMP_13,errorMessage)",
		node_source_code_lines="[125]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	24 -> 25	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256,string)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a / b

IRs:
TMP_15(uint256) = a / b
c(uint256) := TMP_15(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_15(uint256) = a / b
c(uint256) := TMP_15(uint256)",
		node_source_code_lines="[126]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	25 -> 26	[key=0,
		edge_type=next,
		label=Next];
	27	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256,string)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[129]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	26 -> 27	[key=0,
		edge_type=next,
		label=Next];
	28	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256,string)",
		label="buggy_24.sol_SafeMath_div(uint256,uint256,string)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[123, 124, 125, 126, 127, 128, 129, 130]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	28 -> 24	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[143, 144, 145]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	30	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
mod(a,b,SafeMath: modulo by zero)

IRs:
TMP_16(uint256) = INTERNAL_CALL, SafeMath.mod(uint256,uint256,\
string)(a,b,SafeMath: modulo by zero)
RETURN TMP_16",
		node_expression="mod(a,b,SafeMath: modulo by zero)",
		node_info_vulnerabilities=None,
		node_irs="TMP_16(uint256) = INTERNAL_CALL, SafeMath.mod(uint256,uint256,string)(a,b,SafeMath: modulo by zero)
RETURN TMP_16",
		node_source_code_lines="[144]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	29 -> 30	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="buggy_24.sol_SafeMath_mod(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[143, 144, 145]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	31 -> 29	[key=0,
		edge_type=next,
		label=Next];
	32	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256,string)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161, 162, 163, 164]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	33	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256,string)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b != 0,errorMessage)

IRs:
TMP_17(bool) = b != 0
TMP_18(None) = SOLIDITY_\
CALL require(bool,string)(TMP_17,errorMessage)",
		node_expression="require(bool,string)(b != 0,errorMessage)",
		node_info_vulnerabilities=None,
		node_irs="TMP_17(bool) = b != 0
TMP_18(None) = SOLIDITY_CALL require(bool,string)(TMP_17,errorMessage)",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	32 -> 33	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256,string)",
		label="Node Type: RETURN

EXPRESSION:
a % b

IRs:
TMP_19(uint256) = a % b
RETURN TMP_19",
		node_expression="a % b",
		node_info_vulnerabilities=None,
		node_irs="TMP_19(uint256) = a % b
RETURN TMP_19",
		node_source_code_lines="[163]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	33 -> 34	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256,string)",
		label="buggy_24.sol_SafeMath_mod(uint256,uint256,string)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161, 162, 163, 164]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	35 -> 32	[key=0,
		edge_type=next,
		label=Next];
	36	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[230, 231, 232, 233]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	37	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin18)

IRs:
TMP_20(bool) = tx.origin == owner_txorigin18
\
TMP_21(None) = SOLIDITY_CALL require(bool)(TMP_20)",
		node_expression="require(bool)(tx.origin == owner_txorigin18)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_20(bool) = tx.origin == owner_txorigin18
TMP_21(None) = SOLIDITY_CALL require(bool)(TMP_20)",
		node_source_code_lines="[231]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	36 -> 37	[key=0,
		edge_type=next,
		label=Next];
	38	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_22 = CONVERT this to address
REF_1 -> BALANCE \
TMP_22
Transfer dest:_recipient value:REF_1",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_22 = CONVERT this to address
REF_1 -> BALANCE TMP_22
Transfer dest:_recipient value:REF_1",
		node_source_code_lines="[232]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	37 -> 38	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin18(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[230, 231, 232, 233]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	39 -> 36	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[235, 236, 237, 238]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	41	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin29)

IRs:
TMP_24(bool) = tx.origin == owner_txorigin29
\
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_expression="require(bool)(tx.origin == owner_txorigin29)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_24(bool) = tx.origin == owner_txorigin29
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_source_code_lines="[236]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	40 -> 41	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[237]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	41 -> 42	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin29(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[235, 236, 237, 238]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	43 -> 40	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[240, 241, 242, 243]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	45	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin6)

IRs:
TMP_27(bool) = tx.origin == owner_txorigin6
\
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)",
		node_expression="require(bool)(tx.origin == owner_txorigin6)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_27(bool) = tx.origin == owner_txorigin6
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)",
		node_source_code_lines="[241]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	44 -> 45	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_29 = CONVERT this to address
REF_4 -> BALANCE \
TMP_29
Transfer dest:_recipient value:REF_4",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_29 = CONVERT this to address
REF_4 -> BALANCE TMP_29
Transfer dest:_recipient value:REF_4",
		node_source_code_lines="[242]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	45 -> 46	[key=0,
		edge_type=next,
		label=Next];
	47	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin6(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[240, 241, 242, 243]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	47 -> 44	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=FomoFeast,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[245, 246, 247]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	49	[contract_name=FomoFeast,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin16)

IRs:
TMP_31(bool) = tx.origin == owner_txorigin16
\
TMP_32(None) = SOLIDITY_CALL require(bool)(TMP_31)",
		node_expression="require(bool)(tx.origin == owner_txorigin16)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_31(bool) = tx.origin == owner_txorigin16
TMP_32(None) = SOLIDITY_CALL require(bool)(TMP_31)",
		node_source_code_lines="[246]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	48 -> 49	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=FomoFeast,
		function_fullname="bug_txorigin16(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin16(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[245, 246, 247]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	50 -> 48	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=FomoFeast,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[249, 250, 251]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	52	[contract_name=FomoFeast,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin24)

IRs:
TMP_33(bool) = tx.origin == owner_txorigin24
\
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_expression="require(bool)(tx.origin == owner_txorigin24)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_33(bool) = tx.origin == owner_txorigin24
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_source_code_lines="[250]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=FomoFeast,
		function_fullname="bug_txorigin24(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin24(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[249, 250, 251]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	53 -> 51	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[253, 254, 255, 256]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	55	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin5)

IRs:
TMP_35(bool) = tx.origin == owner_txorigin5
\
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_expression="require(bool)(tx.origin == owner_txorigin5)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_35(bool) = tx.origin == owner_txorigin5
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_source_code_lines="[254]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	54 -> 55	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[255]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin5(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[253, 254, 255, 256]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	57 -> 54	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	59	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin15)

IRs:
TMP_38(bool) = tx.origin == owner_txorigin15
\
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_expression="require(bool)(tx.origin == owner_txorigin15)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_38(bool) = tx.origin == owner_txorigin15
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_source_code_lines="[259]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	58 -> 59	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_6(None) -> to.call
REF_7(None) -> REF_6.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_6(None) -> to.call
REF_7(None) -> REF_6.value",
		node_source_code_lines="[260]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	59 -> 60	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin15(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	61 -> 58	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=FomoFeast,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[263, 264, 265]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	63	[contract_name=FomoFeast,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin28)

IRs:
TMP_41(bool) = tx.origin == owner_txorigin28
\
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_expression="require(bool)(tx.origin == owner_txorigin28)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_41(bool) = tx.origin == owner_txorigin28
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_source_code_lines="[264]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	62 -> 63	[key=0,
		edge_type=next,
		label=Next];
	64	[contract_name=FomoFeast,
		function_fullname="bug_txorigin28(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin28(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[263, 264, 265]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	64 -> 62	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[268, 269, 270, 271]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	66	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_43(bool) = tx.origin == owner_txorigin34
\
TMP_44(None) = SOLIDITY_CALL require(bool)(TMP_43)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_43(bool) = tx.origin == owner_txorigin34
TMP_44(None) = SOLIDITY_CALL require(bool)(TMP_43)",
		node_source_code_lines="[269]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	65 -> 66	[key=0,
		edge_type=next,
		label=Next];
	67	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_45 = CONVERT this to address
REF_9 -> BALANCE \
TMP_45
Transfer dest:_recipient value:REF_9",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_45 = CONVERT this to address
REF_9 -> BALANCE TMP_45
Transfer dest:_recipient value:REF_9",
		node_source_code_lines="[270]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	66 -> 67	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[268, 269, 270, 271]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	68 -> 65	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[273, 274, 275, 276]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	70	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_47(bool) = tx.origin == owner_txorigin21
\
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_47(bool) = tx.origin == owner_txorigin21
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_source_code_lines="[274]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	69 -> 70	[key=0,
		edge_type=next,
		label=Next];
	71	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[275]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	70 -> 71	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[273, 274, 275, 276]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	72 -> 69	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[278, 279, 280, 281]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	74	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_50(bool) = tx.origin == owner_txorigin10
\
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_50(bool) = tx.origin == owner_txorigin10
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_source_code_lines="[279]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	73 -> 74	[key=0,
		edge_type=next,
		label=Next];
	75	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_52 = CONVERT this to address
REF_12 -> BALANCE \
TMP_52
Transfer dest:_recipient value:REF_12",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_52 = CONVERT this to address
REF_12 -> BALANCE TMP_52
Transfer dest:_recipient value:REF_12",
		node_source_code_lines="[280]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	74 -> 75	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[278, 279, 280, 281]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	76 -> 73	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[283, 284, 285, 286]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	78	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_54(bool) = tx.origin == owner_txorigin22
\
TMP_55(None) = SOLIDITY_CALL require(bool)(TMP_54)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_54(bool) = tx.origin == owner_txorigin22
TMP_55(None) = SOLIDITY_CALL require(bool)(TMP_54)",
		node_source_code_lines="[284]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	77 -> 78	[key=0,
		edge_type=next,
		label=Next];
	79	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_56 = CONVERT this to address
REF_14 -> BALANCE \
TMP_56
Transfer dest:_recipient value:REF_14",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_56 = CONVERT this to address
REF_14 -> BALANCE TMP_56
Transfer dest:_recipient value:REF_14",
		node_source_code_lines="[285]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	78 -> 79	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[283, 284, 285, 286]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	80 -> 77	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=FomoFeast,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[288, 289, 290]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	82	[contract_name=FomoFeast,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_58(bool) = tx.origin == owner_txorigin12
\
TMP_59(None) = SOLIDITY_CALL require(bool)(TMP_58)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_58(bool) = tx.origin == owner_txorigin12
TMP_59(None) = SOLIDITY_CALL require(bool)(TMP_58)",
		node_source_code_lines="[289]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	81 -> 82	[key=0,
		edge_type=next,
		label=Next];
	83	[contract_name=FomoFeast,
		function_fullname="bug_txorigin12(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[288, 289, 290]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	83 -> 81	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=FomoFeast,
		function_fullname="initialize()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	85	[contract_name=FomoFeast,
		function_fullname="initialize()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! initialized,already initialized)

IRs:
TMP_60 = ! initialized 
TMP_61(\
None) = SOLIDITY_CALL require(bool,string)(TMP_60,already initialized)",
		node_expression="require(bool,string)(! initialized,already initialized)",
		node_info_vulnerabilities=None,
		node_irs="TMP_60 = ! initialized 
TMP_61(None) = SOLIDITY_CALL require(bool,string)(TMP_60,already initialized)",
		node_source_code_lines="[305]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	84 -> 85	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=FomoFeast,
		function_fullname="initialize()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[306]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	85 -> 86	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=FomoFeast,
		function_fullname="initialize()",
		label="Node Type: EXPRESSION

EXPRESSION:
userMapping[GENESIS_USER_ADDRESS] = User(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,address(0))

IRs:
\
REF_15(FomoFeast.User) -> userMapping[GENESIS_USER_ADDRESS]
TMP_62 = CONVERT 0 to address
TMP_63 = new User(1,0,0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,TMP_62)
REF_15 (->userMapping) := TMP_63(FomoFeast.User)",
		node_expression="userMapping[GENESIS_USER_ADDRESS] = User(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,address(0))",
		node_info_vulnerabilities=None,
		node_irs="REF_15(FomoFeast.User) -> userMapping[GENESIS_USER_ADDRESS]
TMP_62 = CONVERT 0 to address
TMP_63 = new User(1,0,0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,TMP_62)
REF_15 (->userMapping) := TMP_63(FomoFeast.User)",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	86 -> 87	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=FomoFeast,
		function_fullname="initialize()",
		label="Node Type: EXPRESSION

EXPRESSION:
initialized = true

IRs:
initialized(bool) := True(bool)",
		node_expression="initialized = true",
		node_info_vulnerabilities=None,
		node_irs="initialized(bool) := True(bool)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=FomoFeast,
		function_fullname="initialize()",
		label="buggy_24.sol_FomoFeast_initialize()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	89 -> 84	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[310, 311, 312, 313]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	91	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_64(bool) = tx.origin == owner_txorigin11
\
TMP_65(None) = SOLIDITY_CALL require(bool)(TMP_64)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_64(bool) = tx.origin == owner_txorigin11
TMP_65(None) = SOLIDITY_CALL require(bool)(TMP_64)",
		node_source_code_lines="[311]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	90 -> 91	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_16(None) -> to.call
REF_17(None) -> REF_16.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_16(None) -> to.call
REF_17(None) -> REF_16.value",
		node_source_code_lines="[312]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	91 -> 92	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[310, 311, 312, 313]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	93 -> 90	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=FomoFeast,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[321, 322, 323]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	95	[contract_name=FomoFeast,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
initialize()

IRs:
INTERNAL_CALL, FomoFeast.initialize()()",
		node_expression="initialize()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, FomoFeast.initialize()()",
		node_source_code_lines="[322]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	94 -> 95	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=FomoFeast,
		function_fullname="constructor()",
		label="buggy_24.sol_FomoFeast_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[321, 322, 323]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	96 -> 94	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[324, 325, 326, 327]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	98	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_68(bool) = tx.origin == owner_txorigin1
\
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_68(bool) = tx.origin == owner_txorigin1
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_source_code_lines="[325]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	97 -> 98	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[326]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	98 -> 99	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[324, 325, 326, 327]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	100 -> 97	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=FomoFeast,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[348, 349, 350, 351]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	104	[contract_name=FomoFeast,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_source_code_lines="[348]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	101 -> 104	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=FomoFeast,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(newOwner != address(0),cannot transfer ownership to address zero)

IRs:
\
TMP_71 = CONVERT 0 to address
TMP_72(bool) = newOwner != TMP_71
TMP_73(None) = SOLIDITY_CALL require(bool,string)(TMP_72,cannot \
transfer ownership to address zero)",
		node_expression="require(bool,string)(newOwner != address(0),cannot transfer ownership to address zero)",
		node_info_vulnerabilities=None,
		node_irs="TMP_71 = CONVERT 0 to address
TMP_72(bool) = newOwner != TMP_71
TMP_73(None) = SOLIDITY_CALL require(bool,string)(TMP_72,cannot \
transfer ownership to address zero)",
		node_source_code_lines="[349]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	103	[contract_name=FomoFeast,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[350]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	104 -> 102	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=FomoFeast,
		function_fullname="transferOwnership(address)",
		label="buggy_24.sol_FomoFeast_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[348, 349, 350, 351]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	105 -> 101	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[352, 353, 354, 355]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	107	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_75(bool) = tx.origin == owner_txorigin2
\
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_75(bool) = tx.origin == owner_txorigin2
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_source_code_lines="[353]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	106 -> 107	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_77 = CONVERT this to address
REF_20 -> BALANCE \
TMP_77
Transfer dest:_recipient value:REF_20",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_77 = CONVERT this to address
REF_20 -> BALANCE TMP_77
Transfer dest:_recipient value:REF_20",
		node_source_code_lines="[354]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	107 -> 108	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[352, 353, 354, 355]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	109 -> 106	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=FomoFeast,
		function_fullname="getLevelByInvestAmount(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[357, 358, 359, 360, 361, 362, 363, 364, 365]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	111	[contract_name=FomoFeast,
		function_fullname="getLevelByInvestAmount(uint256)",
		label="Node Type: IF

EXPRESSION:
investAmount >= ONE_ETH.mul(11)

IRs:
TMP_79(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(\
uint256,uint256), arguments:['ONE_ETH', '11'] 
TMP_80(bool) = investAmount >= TMP_79
CONDITION TMP_80",
		node_expression="investAmount >= ONE_ETH.mul(11)",
		node_info_vulnerabilities=None,
		node_irs="TMP_79(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['ONE_ETH', '11'] 
TMP_80(bool) = \
investAmount >= TMP_79
CONDITION TMP_80",
		node_source_code_lines="[358]",
		node_type=IF,
		source_file="buggy_24.sol"];
	110 -> 111	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=FomoFeast,
		function_fullname="getLevelByInvestAmount(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
level = 3

IRs:
level(uint256) := 3(uint256)",
		node_expression="level = 3",
		node_info_vulnerabilities=None,
		node_irs="level(uint256) := 3(uint256)",
		node_source_code_lines="[359]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	111 -> 112	[key=0,
		edge_type=if_true,
		label=True];
	113	[contract_name=FomoFeast,
		function_fullname="getLevelByInvestAmount(uint256)",
		label="Node Type: IF

EXPRESSION:
investAmount >= ONE_ETH.mul(6)

IRs:
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(\
uint256,uint256), arguments:['ONE_ETH', '6'] 
TMP_82(bool) = investAmount >= TMP_81
CONDITION TMP_82",
		node_expression="investAmount >= ONE_ETH.mul(6)",
		node_info_vulnerabilities=None,
		node_irs="TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['ONE_ETH', '6'] 
TMP_82(bool) = \
investAmount >= TMP_81
CONDITION TMP_82",
		node_source_code_lines="[360]",
		node_type=IF,
		source_file="buggy_24.sol"];
	111 -> 113	[key=0,
		edge_type=if_false,
		label=False];
	117	[contract_name=FomoFeast,
		function_fullname="getLevelByInvestAmount(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[358, 359, 360, 361, 362, 363, 364]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	112 -> 117	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=FomoFeast,
		function_fullname="getLevelByInvestAmount(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
level = 2

IRs:
level(uint256) := 2(uint256)",
		node_expression="level = 2",
		node_info_vulnerabilities=None,
		node_irs="level(uint256) := 2(uint256)",
		node_source_code_lines="[361]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	113 -> 114	[key=0,
		edge_type=if_true,
		label=True];
	115	[contract_name=FomoFeast,
		function_fullname="getLevelByInvestAmount(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
level = 1

IRs:
level(uint256) := 1(uint256)",
		node_expression="level = 1",
		node_info_vulnerabilities=None,
		node_irs="level(uint256) := 1(uint256)",
		node_source_code_lines="[363]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	113 -> 115	[key=0,
		edge_type=if_false,
		label=False];
	116	[contract_name=FomoFeast,
		function_fullname="getLevelByInvestAmount(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[360, 361, 362, 363, 364]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	114 -> 116	[key=0,
		edge_type=next,
		label=Next];
	115 -> 116	[key=0,
		edge_type=next,
		label=Next];
	116 -> 117	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=FomoFeast,
		function_fullname="getLevelByInvestAmount(uint256)",
		label="buggy_24.sol_FomoFeast_getLevelByInvestAmount(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[357, 358, 359, 360, 361, 362, 363, 364, 365]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	118 -> 110	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[366, 367, 368, 369]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	120	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_83(bool) = tx.origin == owner_txorigin17
\
TMP_84(None) = SOLIDITY_CALL require(bool)(TMP_83)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_83(bool) = tx.origin == owner_txorigin17
TMP_84(None) = SOLIDITY_CALL require(bool)(TMP_83)",
		node_source_code_lines="[367]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	119 -> 120	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[368]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	120 -> 121	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[366, 367, 368, 369]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	122 -> 119	[key=0,
		edge_type=next,
		label=Next];
	123	[contract_name=FomoFeast,
		function_fullname="isInvestExpired(FomoFeast.User)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[371, 372, 373]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	124	[contract_name=FomoFeast,
		function_fullname="isInvestExpired(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
expired = (user.currentInvestTime.add(user.currentInvestCycle.mul(ONE_DAY)) < now)

IRs:
REF_\
24(uint256) -> user.currentInvestTime
REF_26(uint256) -> user.currentInvestCycle
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.mul(uint256,uint256), arguments:['REF_26', 'ONE_DAY'] 
TMP_87(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_24', 'TMP_86'] 
TMP_88(bool) = TMP_87 < now
expired(bool) := TMP_88(bool)",
		node_expression="expired = (user.currentInvestTime.add(user.currentInvestCycle.mul(ONE_DAY)) < now)",
		node_info_vulnerabilities=None,
		node_irs="REF_24(uint256) -> user.currentInvestTime
REF_26(uint256) -> user.currentInvestCycle
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.mul(uint256,uint256), arguments:['REF_26', 'ONE_DAY'] 
TMP_87(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_24', 'TMP_86'] 
TMP_88(bool) = TMP_87 < now
expired(bool) := TMP_88(bool)",
		node_source_code_lines="[372]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	123 -> 124	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=FomoFeast,
		function_fullname="isInvestExpired(FomoFeast.User)",
		label="buggy_24.sol_FomoFeast_isInvestExpired(FomoFeast.User)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[371, 372, 373]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	125 -> 123	[key=0,
		edge_type=next,
		label=Next];
	126	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[374, 375, 376, 377]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	127	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_89(bool) = tx.origin == owner_txorigin37
\
TMP_90(None) = SOLIDITY_CALL require(bool)(TMP_89)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_89(bool) = tx.origin == owner_txorigin37
TMP_90(None) = SOLIDITY_CALL require(bool)(TMP_89)",
		node_source_code_lines="[375]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[376]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	127 -> 128	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[374, 375, 376, 377]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	129 -> 126	[key=0,
		edge_type=next,
		label=Next];
	130	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	131	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY)

IRs:
REF_30(uint256) -> user.currentInvestTime
\
TMP_92(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['now', 'REF_30'] 
TMP_93(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_92', 'ONE_DAY'] 
commissionDays(uint256) := \
TMP_93(uint256)",
		node_expression="commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY)",
		node_info_vulnerabilities=None,
		node_irs="REF_30(uint256) -> user.currentInvestTime
TMP_92(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['now', 'REF_30'] 
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['\
TMP_92', 'ONE_DAY'] 
commissionDays(uint256) := TMP_93(uint256)",
		node_source_code_lines="[380]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	130 -> 131	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(commissionDays >= 3,Invest time must >= 3days)

IRs:
TMP_94(bool) = commissionDays >= \
3
TMP_95(None) = SOLIDITY_CALL require(bool,string)(TMP_94,Invest time must >= 3days)",
		node_expression="require(bool,string)(commissionDays >= 3,Invest time must >= 3days)",
		node_info_vulnerabilities=None,
		node_irs="TMP_94(bool) = commissionDays >= 3
TMP_95(None) = SOLIDITY_CALL require(bool,string)(TMP_94,Invest time must >= 3days)",
		node_source_code_lines="[381]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	131 -> 132	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
lossRatio = 15

IRs:
lossRatio(uint256) := 15(uint256)",
		node_expression="lossRatio = 15",
		node_info_vulnerabilities=None,
		node_irs="lossRatio(uint256) := 15(uint256)",
		node_source_code_lines="[382]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	132 -> 133	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: IF

EXPRESSION:
commissionDays >= 60

IRs:
TMP_96(bool) = commissionDays >= 60
CONDITION TMP_96",
		node_expression="commissionDays >= 60",
		node_info_vulnerabilities=None,
		node_irs="TMP_96(bool) = commissionDays >= 60
CONDITION TMP_96",
		node_source_code_lines="[383]",
		node_type=IF,
		source_file="buggy_24.sol"];
	133 -> 134	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
lossRatio = 5

IRs:
lossRatio(uint256) := 5(uint256)",
		node_expression="lossRatio = 5",
		node_info_vulnerabilities=None,
		node_irs="lossRatio(uint256) := 5(uint256)",
		node_source_code_lines="[384]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	134 -> 135	[key=0,
		edge_type=if_true,
		label=True];
	136	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: IF

EXPRESSION:
commissionDays >= 30

IRs:
TMP_97(bool) = commissionDays >= 30
CONDITION TMP_97",
		node_expression="commissionDays >= 30",
		node_info_vulnerabilities=None,
		node_irs="TMP_97(bool) = commissionDays >= 30
CONDITION TMP_97",
		node_source_code_lines="[385]",
		node_type=IF,
		source_file="buggy_24.sol"];
	134 -> 136	[key=0,
		edge_type=if_false,
		label=False];
	139	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[383, 384, 385, 386, 387]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	135 -> 139	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
lossRatio = 10

IRs:
lossRatio(uint256) := 10(uint256)",
		node_expression="lossRatio = 10",
		node_info_vulnerabilities=None,
		node_irs="lossRatio(uint256) := 10(uint256)",
		node_source_code_lines="[386]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	136 -> 137	[key=0,
		edge_type=if_true,
		label=True];
	138	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[385, 386, 387]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	136 -> 138	[key=0,
		edge_type=if_false,
		label=False];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	138 -> 139	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
amount = user.currentInvestAmount

IRs:
REF_32(uint256) -> user.currentInvestAmount
amount(uint256) := \
REF_32(uint256)",
		node_expression="amount = user.currentInvestAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_32(uint256) -> user.currentInvestAmount
amount(uint256) := REF_32(uint256)",
		node_source_code_lines="[388]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	139 -> 140	[key=0,
		edge_type=next,
		label=Next];
	141	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
amount = amount.sub(user.currentInvestAmount.mul(lossRatio).div(100))

IRs:
REF_34(uint256) -> \
user.currentInvestAmount
TMP_98(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_\
34', 'lossRatio'] 
TMP_99(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_98', '\
100'] 
TMP_100(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['amount', 'TMP_99'] 
amount(\
uint256) := TMP_100(uint256)",
		node_expression="amount = amount.sub(user.currentInvestAmount.mul(lossRatio).div(100))",
		node_info_vulnerabilities=None,
		node_irs="REF_34(uint256) -> user.currentInvestAmount
TMP_98(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), \
arguments:['REF_34', 'lossRatio'] 
TMP_99(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['\
TMP_98', '100'] 
TMP_100(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['amount', 'TMP_\
99'] 
amount(uint256) := TMP_100(uint256)",
		node_source_code_lines="[389]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=FomoFeast,
		function_fullname="getAbortInvestAmount(FomoFeast.User)",
		label="buggy_24.sol_FomoFeast_getAbortInvestAmount(FomoFeast.User)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	142 -> 130	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[391, 392, 393, 394]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	144	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_101(bool) = tx.origin == owner_txorigin3
\
TMP_102(None) = SOLIDITY_CALL require(bool)(TMP_101)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_101(bool) = tx.origin == owner_txorigin3
TMP_102(None) = SOLIDITY_CALL require(bool)(TMP_101)",
		node_source_code_lines="[392]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_37(None) -> to.call
REF_38(None) -> REF_37.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_37(None) -> to.call
REF_38(None) -> REF_37.value",
		node_source_code_lines="[393]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	144 -> 145	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[391, 392, 393, 394]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	146 -> 143	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, \
422]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	148	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
level == 1

IRs:
TMP_104(bool) = level == 1
CONDITION TMP_104",
		node_expression="level == 1",
		node_info_vulnerabilities=None,
		node_irs="TMP_104(bool) = level == 1
CONDITION TMP_104",
		node_source_code_lines="[397]",
		node_type=IF,
		source_file="buggy_24.sol"];
	147 -> 148	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
investCycle == 30

IRs:
TMP_105(bool) = investCycle == 30
CONDITION TMP_105",
		node_expression="investCycle == 30",
		node_info_vulnerabilities=None,
		node_irs="TMP_105(bool) = investCycle == 30
CONDITION TMP_105",
		node_source_code_lines="[398]",
		node_type=IF,
		source_file="buggy_24.sol"];
	148 -> 149	[key=0,
		edge_type=if_true,
		label=True];
	156	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
level == 2

IRs:
TMP_107(bool) = level == 2
CONDITION TMP_107",
		node_expression="level == 2",
		node_info_vulnerabilities=None,
		node_irs="TMP_107(bool) = level == 2
CONDITION TMP_107",
		node_source_code_lines="[405]",
		node_type=IF,
		source_file="buggy_24.sol"];
	148 -> 156	[key=0,
		edge_type=if_false,
		label=False];
	150	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 7

IRs:
ratio(uint256) := 7(uint256)",
		node_expression="ratio = 7",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 7(uint256)",
		node_source_code_lines="[399]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	149 -> 150	[key=0,
		edge_type=if_true,
		label=True];
	151	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
investCycle == 60

IRs:
TMP_106(bool) = investCycle == 60
CONDITION TMP_106",
		node_expression="investCycle == 60",
		node_info_vulnerabilities=None,
		node_irs="TMP_106(bool) = investCycle == 60
CONDITION TMP_106",
		node_source_code_lines="[400]",
		node_type=IF,
		source_file="buggy_24.sol"];
	149 -> 151	[key=0,
		edge_type=if_false,
		label=False];
	155	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[398, 399, 400, 401, 402, 403, 404]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	150 -> 155	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 8

IRs:
ratio(uint256) := 8(uint256)",
		node_expression="ratio = 8",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 8(uint256)",
		node_source_code_lines="[401]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	151 -> 152	[key=0,
		edge_type=if_true,
		label=True];
	153	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 9

IRs:
ratio(uint256) := 9(uint256)",
		node_expression="ratio = 9",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 9(uint256)",
		node_source_code_lines="[403]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	151 -> 153	[key=0,
		edge_type=if_false,
		label=False];
	154	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[400, 401, 402, 403, 404]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	152 -> 154	[key=0,
		edge_type=next,
		label=Next];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	155 -> 172	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
investCycle == 30

IRs:
TMP_108(bool) = investCycle == 30
CONDITION TMP_108",
		node_expression="investCycle == 30",
		node_info_vulnerabilities=None,
		node_irs="TMP_108(bool) = investCycle == 30
CONDITION TMP_108",
		node_source_code_lines="[406]",
		node_type=IF,
		source_file="buggy_24.sol"];
	156 -> 157	[key=0,
		edge_type=if_true,
		label=True];
	164	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
investCycle == 30

IRs:
TMP_110(bool) = investCycle == 30
CONDITION TMP_110",
		node_expression="investCycle == 30",
		node_info_vulnerabilities=None,
		node_irs="TMP_110(bool) = investCycle == 30
CONDITION TMP_110",
		node_source_code_lines="[414]",
		node_type=IF,
		source_file="buggy_24.sol"];
	156 -> 164	[key=0,
		edge_type=if_false,
		label=False];
	158	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 8

IRs:
ratio(uint256) := 8(uint256)",
		node_expression="ratio = 8",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 8(uint256)",
		node_source_code_lines="[407]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	157 -> 158	[key=0,
		edge_type=if_true,
		label=True];
	159	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
investCycle == 60

IRs:
TMP_109(bool) = investCycle == 60
CONDITION TMP_109",
		node_expression="investCycle == 60",
		node_info_vulnerabilities=None,
		node_irs="TMP_109(bool) = investCycle == 60
CONDITION TMP_109",
		node_source_code_lines="[408]",
		node_type=IF,
		source_file="buggy_24.sol"];
	157 -> 159	[key=0,
		edge_type=if_false,
		label=False];
	163	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[406, 407, 408, 409, 410, 411, 412]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	158 -> 163	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 9

IRs:
ratio(uint256) := 9(uint256)",
		node_expression="ratio = 9",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 9(uint256)",
		node_source_code_lines="[409]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	159 -> 160	[key=0,
		edge_type=if_true,
		label=True];
	161	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 10

IRs:
ratio(uint256) := 10(uint256)",
		node_expression="ratio = 10",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 10(uint256)",
		node_source_code_lines="[411]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	159 -> 161	[key=0,
		edge_type=if_false,
		label=False];
	162	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[408, 409, 410, 411, 412]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	160 -> 162	[key=0,
		edge_type=next,
		label=Next];
	161 -> 162	[key=0,
		edge_type=next,
		label=Next];
	162 -> 163	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	163 -> 171	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 11

IRs:
ratio(uint256) := 11(uint256)",
		node_expression="ratio = 11",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 11(uint256)",
		node_source_code_lines="[415]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	164 -> 165	[key=0,
		edge_type=if_true,
		label=True];
	166	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
investCycle == 60

IRs:
TMP_111(bool) = investCycle == 60
CONDITION TMP_111",
		node_expression="investCycle == 60",
		node_info_vulnerabilities=None,
		node_irs="TMP_111(bool) = investCycle == 60
CONDITION TMP_111",
		node_source_code_lines="[416]",
		node_type=IF,
		source_file="buggy_24.sol"];
	164 -> 166	[key=0,
		edge_type=if_false,
		label=False];
	170	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[414, 415, 416, 417, 418, 419, 420]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	165 -> 170	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 12

IRs:
ratio(uint256) := 12(uint256)",
		node_expression="ratio = 12",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 12(uint256)",
		node_source_code_lines="[417]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	166 -> 167	[key=0,
		edge_type=if_true,
		label=True];
	168	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 13

IRs:
ratio(uint256) := 13(uint256)",
		node_expression="ratio = 13",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 13(uint256)",
		node_source_code_lines="[419]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	166 -> 168	[key=0,
		edge_type=if_false,
		label=False];
	169	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[416, 417, 418, 419, 420]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	167 -> 169	[key=0,
		edge_type=next,
		label=Next];
	168 -> 169	[key=0,
		edge_type=next,
		label=Next];
	169 -> 170	[key=0,
		edge_type=next,
		label=Next];
	170 -> 171	[key=0,
		edge_type=next,
		label=Next];
	171 -> 172	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRatio(uint256,uint256)",
		label="buggy_24.sol_FomoFeast_getStaticCommissionRatio(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, \
422]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	173 -> 147	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[423, 424, 425, 426]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	175	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_112(bool) = tx.origin == owner_txorigin9
\
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_112(bool) = tx.origin == owner_txorigin9
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_source_code_lines="[424]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	174 -> 175	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[425]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	175 -> 176	[key=0,
		edge_type=next,
		label=Next];
	177	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[423, 424, 425, 426]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	177 -> 174	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, \
454, 455, 456, 457, 458]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	179	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
user.currentlevel == 1

IRs:
REF_40(uint256) -> user.currentlevel
TMP_115(bool) = REF_40 == 1
CONDITION \
TMP_115",
		node_expression="user.currentlevel == 1",
		node_info_vulnerabilities=None,
		node_irs="REF_40(uint256) -> user.currentlevel
TMP_115(bool) = REF_40 == 1
CONDITION TMP_115",
		node_source_code_lines="[429]",
		node_type=IF,
		source_file="buggy_24.sol"];
	178 -> 179	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
depth == 1

IRs:
TMP_116(bool) = depth == 1
CONDITION TMP_116",
		node_expression="depth == 1",
		node_info_vulnerabilities=None,
		node_irs="TMP_116(bool) = depth == 1
CONDITION TMP_116",
		node_source_code_lines="[430]",
		node_type=IF,
		source_file="buggy_24.sol"];
	179 -> 180	[key=0,
		edge_type=if_true,
		label=True];
	184	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
user.currentlevel == 2

IRs:
REF_41(uint256) -> user.currentlevel
TMP_117(bool) = REF_41 == 2
CONDITION \
TMP_117",
		node_expression="user.currentlevel == 2",
		node_info_vulnerabilities=None,
		node_irs="REF_41(uint256) -> user.currentlevel
TMP_117(bool) = REF_41 == 2
CONDITION TMP_117",
		node_source_code_lines="[435]",
		node_type=IF,
		source_file="buggy_24.sol"];
	179 -> 184	[key=0,
		edge_type=if_false,
		label=False];
	181	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 50

IRs:
ratio(uint256) := 50(uint256)",
		node_expression="ratio = 50",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 50(uint256)",
		node_source_code_lines="[431]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	180 -> 181	[key=0,
		edge_type=if_true,
		label=True];
	182	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 0

IRs:
ratio(uint256) := 0(uint256)",
		node_expression="ratio = 0",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 0(uint256)",
		node_source_code_lines="[433]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	180 -> 182	[key=0,
		edge_type=if_false,
		label=False];
	183	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[430, 431, 432, 433, 434]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	181 -> 183	[key=0,
		edge_type=next,
		label=Next];
	182 -> 183	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, \
455, 456, 457]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	183 -> 209	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
depth == 1

IRs:
TMP_118(bool) = depth == 1
CONDITION TMP_118",
		node_expression="depth == 1",
		node_info_vulnerabilities=None,
		node_irs="TMP_118(bool) = depth == 1
CONDITION TMP_118",
		node_source_code_lines="[436]",
		node_type=IF,
		source_file="buggy_24.sol"];
	184 -> 185	[key=0,
		edge_type=if_true,
		label=True];
	192	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
depth == 1

IRs:
TMP_120(bool) = depth == 1
CONDITION TMP_120",
		node_expression="depth == 1",
		node_info_vulnerabilities=None,
		node_irs="TMP_120(bool) = depth == 1
CONDITION TMP_120",
		node_source_code_lines="[444]",
		node_type=IF,
		source_file="buggy_24.sol"];
	184 -> 192	[key=0,
		edge_type=if_false,
		label=False];
	186	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 70

IRs:
ratio(uint256) := 70(uint256)",
		node_expression="ratio = 70",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 70(uint256)",
		node_source_code_lines="[437]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	185 -> 186	[key=0,
		edge_type=if_true,
		label=True];
	187	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
depth == 2

IRs:
TMP_119(bool) = depth == 2
CONDITION TMP_119",
		node_expression="depth == 2",
		node_info_vulnerabilities=None,
		node_irs="TMP_119(bool) = depth == 2
CONDITION TMP_119",
		node_source_code_lines="[438]",
		node_type=IF,
		source_file="buggy_24.sol"];
	185 -> 187	[key=0,
		edge_type=if_false,
		label=False];
	191	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[436, 437, 438, 439, 440, 441, 442]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	186 -> 191	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 50

IRs:
ratio(uint256) := 50(uint256)",
		node_expression="ratio = 50",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 50(uint256)",
		node_source_code_lines="[439]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	187 -> 188	[key=0,
		edge_type=if_true,
		label=True];
	189	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 0

IRs:
ratio(uint256) := 0(uint256)",
		node_expression="ratio = 0",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 0(uint256)",
		node_source_code_lines="[441]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	187 -> 189	[key=0,
		edge_type=if_false,
		label=False];
	190	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[438, 439, 440, 441, 442]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	188 -> 190	[key=0,
		edge_type=next,
		label=Next];
	189 -> 190	[key=0,
		edge_type=next,
		label=Next];
	190 -> 191	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	191 -> 208	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 100

IRs:
ratio(uint256) := 100(uint256)",
		node_expression="ratio = 100",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 100(uint256)",
		node_source_code_lines="[445]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	192 -> 193	[key=0,
		edge_type=if_true,
		label=True];
	194	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
depth == 2

IRs:
TMP_121(bool) = depth == 2
CONDITION TMP_121",
		node_expression="depth == 2",
		node_info_vulnerabilities=None,
		node_irs="TMP_121(bool) = depth == 2
CONDITION TMP_121",
		node_source_code_lines="[446]",
		node_type=IF,
		source_file="buggy_24.sol"];
	192 -> 194	[key=0,
		edge_type=if_false,
		label=False];
	207	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	193 -> 207	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 70

IRs:
ratio(uint256) := 70(uint256)",
		node_expression="ratio = 70",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 70(uint256)",
		node_source_code_lines="[447]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	194 -> 195	[key=0,
		edge_type=if_true,
		label=True];
	196	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
depth == 3

IRs:
TMP_122(bool) = depth == 3
CONDITION TMP_122",
		node_expression="depth == 3",
		node_info_vulnerabilities=None,
		node_irs="TMP_122(bool) = depth == 3
CONDITION TMP_122",
		node_source_code_lines="[448]",
		node_type=IF,
		source_file="buggy_24.sol"];
	194 -> 196	[key=0,
		edge_type=if_false,
		label=False];
	206	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	195 -> 206	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 50

IRs:
ratio(uint256) := 50(uint256)",
		node_expression="ratio = 50",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 50(uint256)",
		node_source_code_lines="[449]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	196 -> 197	[key=0,
		edge_type=if_true,
		label=True];
	198	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
depth >= 4 && depth <= 10

IRs:
TMP_123(bool) = depth >= 4
TMP_124(bool) = depth <= 10
TMP_125(bool) = \
TMP_123 && TMP_124
CONDITION TMP_125",
		node_expression="depth >= 4 && depth <= 10",
		node_info_vulnerabilities=None,
		node_irs="TMP_123(bool) = depth >= 4
TMP_124(bool) = depth <= 10
TMP_125(bool) = TMP_123 && TMP_124
CONDITION TMP_125",
		node_source_code_lines="[450]",
		node_type=IF,
		source_file="buggy_24.sol"];
	196 -> 198	[key=0,
		edge_type=if_false,
		label=False];
	205	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[448, 449, 450, 451, 452, 453, 454, 455, 456]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	197 -> 205	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 10

IRs:
ratio(uint256) := 10(uint256)",
		node_expression="ratio = 10",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 10(uint256)",
		node_source_code_lines="[451]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	198 -> 199	[key=0,
		edge_type=if_true,
		label=True];
	200	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: IF

EXPRESSION:
depth >= 11 && depth <= 20

IRs:
TMP_126(bool) = depth >= 11
TMP_127(bool) = depth <= 20
TMP_128(bool) = \
TMP_126 && TMP_127
CONDITION TMP_128",
		node_expression="depth >= 11 && depth <= 20",
		node_info_vulnerabilities=None,
		node_irs="TMP_126(bool) = depth >= 11
TMP_127(bool) = depth <= 20
TMP_128(bool) = TMP_126 && TMP_127
CONDITION TMP_128",
		node_source_code_lines="[452]",
		node_type=IF,
		source_file="buggy_24.sol"];
	198 -> 200	[key=0,
		edge_type=if_false,
		label=False];
	204	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[450, 451, 452, 453, 454, 455, 456]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	199 -> 204	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 5

IRs:
ratio(uint256) := 5(uint256)",
		node_expression="ratio = 5",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 5(uint256)",
		node_source_code_lines="[453]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	200 -> 201	[key=0,
		edge_type=if_true,
		label=True];
	202	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
ratio = 1

IRs:
ratio(uint256) := 1(uint256)",
		node_expression="ratio = 1",
		node_info_vulnerabilities=None,
		node_irs="ratio(uint256) := 1(uint256)",
		node_source_code_lines="[455]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	200 -> 202	[key=0,
		edge_type=if_false,
		label=False];
	203	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[452, 453, 454, 455, 456]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	201 -> 203	[key=0,
		edge_type=next,
		label=Next];
	202 -> 203	[key=0,
		edge_type=next,
		label=Next];
	203 -> 204	[key=0,
		edge_type=next,
		label=Next];
	204 -> 205	[key=0,
		edge_type=next,
		label=Next];
	205 -> 206	[key=0,
		edge_type=next,
		label=Next];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	207 -> 208	[key=0,
		edge_type=next,
		label=Next];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	210	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRatio(FomoFeast.User,uint256)",
		label="buggy_24.sol_FomoFeast_getDynamicCommissionRatio(FomoFeast.User,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, \
454, 455, 456, 457, 458]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	210 -> 178	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[459, 460, 461, 462]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	212	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_129(bool) = tx.origin == owner_txorigin25
\
TMP_130(None) = SOLIDITY_CALL require(bool)(TMP_129)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_129(bool) = tx.origin == owner_txorigin25
TMP_130(None) = SOLIDITY_CALL require(bool)(TMP_129)",
		node_source_code_lines="[460]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	211 -> 212	[key=0,
		edge_type=next,
		label=Next];
	213	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[461]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	212 -> 213	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[459, 460, 461, 462]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	214 -> 211	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	216	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: IF

EXPRESSION:
user.currentInvestAmount == 0

IRs:
REF_43(uint256) -> user.currentInvestAmount
TMP_132(bool) = REF_43 == \
0
CONDITION TMP_132",
		node_expression="user.currentInvestAmount == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_43(uint256) -> user.currentInvestAmount
TMP_132(bool) = REF_43 == 0
CONDITION TMP_132",
		node_source_code_lines="[465]",
		node_type=IF,
		source_file="buggy_24.sol"];
	215 -> 216	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
amount = 0

IRs:
amount(uint256) := 0(uint256)",
		node_expression="amount = 0",
		node_info_vulnerabilities=None,
		node_irs="amount(uint256) := 0(uint256)",
		node_source_code_lines="[466]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	216 -> 217	[key=0,
		edge_type=if_true,
		label=True];
	218	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY)

IRs:
REF_45(uint256) -> user.currentInvestTime
\
TMP_133(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['now', 'REF_45'] 
TMP_134(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_133', 'ONE_DAY'] 
commissionDays(uint256) := \
TMP_134(uint256)",
		node_expression="commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY)",
		node_info_vulnerabilities=None,
		node_irs="REF_45(uint256) -> user.currentInvestTime
TMP_133(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['now', 'REF_45'] 
TMP_134(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['\
TMP_133', 'ONE_DAY'] 
commissionDays(uint256) := TMP_134(uint256)",
		node_source_code_lines="[468]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	216 -> 218	[key=0,
		edge_type=if_false,
		label=False];
	225	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	217 -> 225	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: IF

EXPRESSION:
commissionDays > user.currentInvestCycle

IRs:
REF_47(uint256) -> user.currentInvestCycle
TMP_135(bool) = \
commissionDays > REF_47
CONDITION TMP_135",
		node_expression="commissionDays > user.currentInvestCycle",
		node_info_vulnerabilities=None,
		node_irs="REF_47(uint256) -> user.currentInvestCycle
TMP_135(bool) = commissionDays > REF_47
CONDITION TMP_135",
		node_source_code_lines="[469]",
		node_type=IF,
		source_file="buggy_24.sol"];
	218 -> 219	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
commissionDays = user.currentInvestCycle

IRs:
REF_48(uint256) -> user.currentInvestCycle
commissionDays(\
uint256) := REF_48(uint256)",
		node_expression="commissionDays = user.currentInvestCycle",
		node_info_vulnerabilities=None,
		node_irs="REF_48(uint256) -> user.currentInvestCycle
commissionDays(uint256) := REF_48(uint256)",
		node_source_code_lines="[470]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	219 -> 220	[key=0,
		edge_type=if_true,
		label=True];
	221	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[469, 470, 471]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	219 -> 221	[key=0,
		edge_type=if_false,
		label=False];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
amount = user.currentInvestAmount.mul(user.currentStaticCommissionRatio).mul(commissionDays)

\
IRs:
REF_49(uint256) -> user.currentInvestAmount
REF_51(uint256) -> user.currentStaticCommissionRatio
TMP_136(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_49', 'REF_51'] 
TMP_137(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_136', 'commissionDays'] 
amount(uint256) := TMP_137(uint256)",
		node_expression="amount = user.currentInvestAmount.mul(user.currentStaticCommissionRatio).mul(commissionDays)",
		node_info_vulnerabilities=None,
		node_irs="REF_49(uint256) -> user.currentInvestAmount
REF_51(uint256) -> user.currentStaticCommissionRatio
TMP_136(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_49', 'REF_51'] 
TMP_137(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.mul(uint256,uint256), arguments:['TMP_136', 'commissionDays'] 
amount(uint256) := TMP_137(uint256)",
		node_source_code_lines="[472]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
amount = amount.div(1000)

IRs:
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(\
uint256,uint256), arguments:['amount', '1000'] 
amount(uint256) := TMP_138(uint256)",
		node_expression="amount = amount.div(1000)",
		node_info_vulnerabilities=None,
		node_irs="TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['amount', '1000'] 
amount(uint256) := \
TMP_138(uint256)",
		node_source_code_lines="[473]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	222 -> 223	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="Node Type: EXPRESSION

EXPRESSION:
amount = amount.sub(user.currentStaticCommissionWithdrawAmount)

IRs:
REF_55(uint256) -> user.currentStaticCommissionWithdrawAmount
\
TMP_139(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['amount', 'REF_55'] 
amount(uint256) := \
TMP_139(uint256)",
		node_expression="amount = amount.sub(user.currentStaticCommissionWithdrawAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_55(uint256) -> user.currentStaticCommissionWithdrawAmount
TMP_139(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['amount', 'REF_55'] 
amount(uint256) := TMP_139(uint256)",
		node_source_code_lines="[474]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	223 -> 224	[key=0,
		edge_type=next,
		label=Next];
	224 -> 225	[key=0,
		edge_type=next,
		label=Next];
	226	[contract_name=FomoFeast,
		function_fullname="getAvaliableStaticCommissionAmount(FomoFeast.User)",
		label="buggy_24.sol_FomoFeast_getAvaliableStaticCommissionAmount(FomoFeast.User)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	226 -> 215	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[477, 478, 479, 480]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	228	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_140(bool) = tx.origin == owner_txorigin19
\
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_140(bool) = tx.origin == owner_txorigin19
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_source_code_lines="[478]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	227 -> 228	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_56(None) -> to.call
REF_57(None) -> REF_56.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_56(None) -> to.call
REF_57(None) -> REF_56.value",
		node_source_code_lines="[479]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	228 -> 229	[key=0,
		edge_type=next,
		label=Next];
	230	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[477, 478, 479, 480]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	230 -> 227	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[482, 483, 484, 485, 486, 487, 488, 489]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	232	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
records = investRecordMapping[userAddress]

IRs:
REF_58(FomoFeast.InvestRecord[9]) -> investRecordMapping[\
userAddress]
records(FomoFeast.InvestRecord[9]) := REF_58(FomoFeast.InvestRecord[9])",
		node_expression="records = investRecordMapping[userAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_58(FomoFeast.InvestRecord[9]) -> investRecordMapping[userAddress]
records(FomoFeast.InvestRecord[9]) := REF_58(FomoFeast.InvestRecord[\
9])",
		node_source_code_lines="[483]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 8

IRs:
i(uint256) := 8(uint256)",
		node_expression="i = 8",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 8(uint256)",
		node_source_code_lines="[484]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	232 -> 235	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[484, 485, 486, 487]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	236	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
i > 0

IRs:
TMP_143(bool) = i > 0
CONDITION TMP_143",
		node_expression="i > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_143(bool) = i > 0
CONDITION TMP_143",
		node_source_code_lines="[484]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	233 -> 236	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[484, 485, 486, 487]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	240	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
records[0] = InvestRecord(time,amount,cycle)

IRs:
REF_61(FomoFeast.InvestRecord) -> records[\
0]
TMP_145 = new InvestRecord(time,amount,cycle)
REF_61 (->records) := TMP_145(FomoFeast.InvestRecord)",
		node_expression="records[0] = InvestRecord(time,amount,cycle)",
		node_info_vulnerabilities=None,
		node_irs="REF_61(FomoFeast.InvestRecord) -> records[0]
TMP_145 = new InvestRecord(time,amount,cycle)
REF_61 (->records) := TMP_145(FomoFeast.InvestRecord)",
		node_source_code_lines="[488]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	234 -> 240	[key=0,
		edge_type=next,
		label=Next];
	235 -> 233	[key=0,
		edge_type=next,
		label=Next];
	236 -> 234	[key=0,
		edge_type=if_false,
		label=False];
	237	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
prevRecord = records[i - 1]

IRs:
TMP_144(uint256) = i - 1
REF_59(FomoFeast.InvestRecord) -> \
records[TMP_144]
prevRecord(FomoFeast.InvestRecord) := REF_59(FomoFeast.InvestRecord)",
		node_expression="prevRecord = records[i - 1]",
		node_info_vulnerabilities=None,
		node_irs="TMP_144(uint256) = i - 1
REF_59(FomoFeast.InvestRecord) -> records[TMP_144]
prevRecord(FomoFeast.InvestRecord) := REF_59(FomoFeast.InvestRecord)",
		node_source_code_lines="[485]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	236 -> 237	[key=0,
		edge_type=if_true,
		label=True];
	238	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
records[i] = prevRecord

IRs:
REF_60(FomoFeast.InvestRecord) -> records[i]
REF_60 (->records) := \
prevRecord(FomoFeast.InvestRecord)",
		node_expression="records[i] = prevRecord",
		node_info_vulnerabilities=None,
		node_irs="REF_60(FomoFeast.InvestRecord) -> records[i]
REF_60 (->records) := prevRecord(FomoFeast.InvestRecord)",
		node_source_code_lines="[486]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	237 -> 238	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
-- i

IRs:
i(uint256) = i - 1",
		node_expression="-- i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i - 1",
		node_source_code_lines="[484]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	239 -> 236	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=FomoFeast,
		function_fullname="addInvestRecord(address,uint256,uint256,uint256)",
		label="buggy_24.sol_FomoFeast_addInvestRecord(address,uint256,uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[482, 483, 484, 485, 486, 487, 488, 489]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	241 -> 231	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[490, 491, 492, 493]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	243	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_146(bool) = tx.origin == owner_txorigin26
\
TMP_147(None) = SOLIDITY_CALL require(bool)(TMP_146)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_146(bool) = tx.origin == owner_txorigin26
TMP_147(None) = SOLIDITY_CALL require(bool)(TMP_146)",
		node_source_code_lines="[491]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	242 -> 243	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_148 = CONVERT this to address
REF_63 -> \
BALANCE TMP_148
Transfer dest:_recipient value:REF_63",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_148 = CONVERT this to address
REF_63 -> BALANCE TMP_148
Transfer dest:_recipient value:REF_63",
		node_source_code_lines="[492]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	243 -> 244	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[490, 491, 492, 493]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	245 -> 242	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[495, 496, 497, 498, 499, 500, 501, 502]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	247	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
records = staticCommissionRecordMapping[userAddress]

IRs:
REF_64(FomoFeast.CommissionRecord[\
9]) -> staticCommissionRecordMapping[userAddress]
records(FomoFeast.CommissionRecord[9]) := REF_64(FomoFeast.CommissionRecord[9])",
		node_expression="records = staticCommissionRecordMapping[userAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_64(FomoFeast.CommissionRecord[9]) -> staticCommissionRecordMapping[userAddress]
records(FomoFeast.CommissionRecord[9]) := REF_\
64(FomoFeast.CommissionRecord[9])",
		node_source_code_lines="[496]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	246 -> 247	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 8

IRs:
i(uint256) := 8(uint256)",
		node_expression="i = 8",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 8(uint256)",
		node_source_code_lines="[497]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	247 -> 250	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[497, 498, 499, 500]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	251	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
i > 0

IRs:
TMP_150(bool) = i > 0
CONDITION TMP_150",
		node_expression="i > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_150(bool) = i > 0
CONDITION TMP_150",
		node_source_code_lines="[497]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	248 -> 251	[key=0,
		edge_type=next,
		label=Next];
	249	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[497, 498, 499, 500]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	255	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
records[0] = CommissionRecord(time,amount)

IRs:
REF_67(FomoFeast.CommissionRecord) -> records[\
0]
TMP_152 = new CommissionRecord(time,amount)
REF_67 (->records) := TMP_152(FomoFeast.CommissionRecord)",
		node_expression="records[0] = CommissionRecord(time,amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_67(FomoFeast.CommissionRecord) -> records[0]
TMP_152 = new CommissionRecord(time,amount)
REF_67 (->records) := TMP_152(FomoFeast.CommissionRecord)",
		node_source_code_lines="[501]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	249 -> 255	[key=0,
		edge_type=next,
		label=Next];
	250 -> 248	[key=0,
		edge_type=next,
		label=Next];
	251 -> 249	[key=0,
		edge_type=if_false,
		label=False];
	252	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
prevRecord = records[i - 1]

IRs:
TMP_151(uint256) = i - 1
REF_65(FomoFeast.CommissionRecord) \
-> records[TMP_151]
prevRecord(FomoFeast.CommissionRecord) := REF_65(FomoFeast.CommissionRecord)",
		node_expression="prevRecord = records[i - 1]",
		node_info_vulnerabilities=None,
		node_irs="TMP_151(uint256) = i - 1
REF_65(FomoFeast.CommissionRecord) -> records[TMP_151]
prevRecord(FomoFeast.CommissionRecord) := REF_65(\
FomoFeast.CommissionRecord)",
		node_source_code_lines="[498]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	251 -> 252	[key=0,
		edge_type=if_true,
		label=True];
	253	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
records[i] = prevRecord

IRs:
REF_66(FomoFeast.CommissionRecord) -> records[i]
REF_66 (->records) := \
prevRecord(FomoFeast.CommissionRecord)",
		node_expression="records[i] = prevRecord",
		node_info_vulnerabilities=None,
		node_irs="REF_66(FomoFeast.CommissionRecord) -> records[i]
REF_66 (->records) := prevRecord(FomoFeast.CommissionRecord)",
		node_source_code_lines="[499]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
-- i

IRs:
i(uint256) = i - 1",
		node_expression="-- i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i - 1",
		node_source_code_lines="[497]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	253 -> 254	[key=0,
		edge_type=next,
		label=Next];
	254 -> 251	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=FomoFeast,
		function_fullname="addStaticCommissionRecord(address,uint256,uint256)",
		label="buggy_24.sol_FomoFeast_addStaticCommissionRecord(address,uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[495, 496, 497, 498, 499, 500, 501, 502]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	256 -> 246	[key=0,
		edge_type=next,
		label=Next];
	257	[contract_name=FomoFeast,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[503, 504, 505]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	258	[contract_name=FomoFeast,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_153(bool) = tx.origin == owner_txorigin20
\
TMP_154(None) = SOLIDITY_CALL require(bool)(TMP_153)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_153(bool) = tx.origin == owner_txorigin20
TMP_154(None) = SOLIDITY_CALL require(bool)(TMP_153)",
		node_source_code_lines="[504]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	257 -> 258	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=FomoFeast,
		function_fullname="bug_txorigin20(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[503, 504, 505]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	259 -> 257	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[507, 508, 509, 510, 511, 512, 513, 514]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	261	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
records = dynamicCommissionRecordMapping[userAddress]

IRs:
REF_68(FomoFeast.CommissionRecord[\
9]) -> dynamicCommissionRecordMapping[userAddress]
records(FomoFeast.CommissionRecord[9]) := REF_68(FomoFeast.CommissionRecord[9])",
		node_expression="records = dynamicCommissionRecordMapping[userAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_68(FomoFeast.CommissionRecord[9]) -> dynamicCommissionRecordMapping[userAddress]
records(FomoFeast.CommissionRecord[9]) := REF_\
68(FomoFeast.CommissionRecord[9])",
		node_source_code_lines="[508]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 8

IRs:
i(uint256) := 8(uint256)",
		node_expression="i = 8",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 8(uint256)",
		node_source_code_lines="[509]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	261 -> 264	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[509, 510, 511, 512]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	265	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
i > 0

IRs:
TMP_155(bool) = i > 0
CONDITION TMP_155",
		node_expression="i > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_155(bool) = i > 0
CONDITION TMP_155",
		node_source_code_lines="[509]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	262 -> 265	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[509, 510, 511, 512]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	269	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
records[0] = CommissionRecord(time,amount)

IRs:
REF_71(FomoFeast.CommissionRecord) -> records[\
0]
TMP_157 = new CommissionRecord(time,amount)
REF_71 (->records) := TMP_157(FomoFeast.CommissionRecord)",
		node_expression="records[0] = CommissionRecord(time,amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_71(FomoFeast.CommissionRecord) -> records[0]
TMP_157 = new CommissionRecord(time,amount)
REF_71 (->records) := TMP_157(FomoFeast.CommissionRecord)",
		node_source_code_lines="[513]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	263 -> 269	[key=0,
		edge_type=next,
		label=Next];
	264 -> 262	[key=0,
		edge_type=next,
		label=Next];
	265 -> 263	[key=0,
		edge_type=if_false,
		label=False];
	266	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
prevRecord = records[i - 1]

IRs:
TMP_156(uint256) = i - 1
REF_69(FomoFeast.CommissionRecord) \
-> records[TMP_156]
prevRecord(FomoFeast.CommissionRecord) := REF_69(FomoFeast.CommissionRecord)",
		node_expression="prevRecord = records[i - 1]",
		node_info_vulnerabilities=None,
		node_irs="TMP_156(uint256) = i - 1
REF_69(FomoFeast.CommissionRecord) -> records[TMP_156]
prevRecord(FomoFeast.CommissionRecord) := REF_69(\
FomoFeast.CommissionRecord)",
		node_source_code_lines="[510]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	265 -> 266	[key=0,
		edge_type=if_true,
		label=True];
	267	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
records[i] = prevRecord

IRs:
REF_70(FomoFeast.CommissionRecord) -> records[i]
REF_70 (->records) := \
prevRecord(FomoFeast.CommissionRecord)",
		node_expression="records[i] = prevRecord",
		node_info_vulnerabilities=None,
		node_irs="REF_70(FomoFeast.CommissionRecord) -> records[i]
REF_70 (->records) := prevRecord(FomoFeast.CommissionRecord)",
		node_source_code_lines="[511]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
-- i

IRs:
i(uint256) = i - 1",
		node_expression="-- i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i - 1",
		node_source_code_lines="[509]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	268 -> 265	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=FomoFeast,
		function_fullname="addDynamicCommissionRecord(address,uint256,uint256)",
		label="buggy_24.sol_FomoFeast_addDynamicCommissionRecord(address,uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[507, 508, 509, 510, 511, 512, 513, 514]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	270 -> 260	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=FomoFeast,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[515, 516, 517]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	272	[contract_name=FomoFeast,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_158(bool) = tx.origin == owner_txorigin32
\
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_158(bool) = tx.origin == owner_txorigin32
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_source_code_lines="[516]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	271 -> 272	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=FomoFeast,
		function_fullname="bug_txorigin32(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[515, 516, 517]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	273 -> 271	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, \
545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, \
571, 572, 573, 574, 575, 576]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	275	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
sponsor = userMapping[sponsorAddress]

IRs:
REF_72(FomoFeast.User) -> userMapping[sponsorAddress]
\
sponsor(FomoFeast.User) := REF_72(FomoFeast.User)",
		node_expression="sponsor = userMapping[sponsorAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_72(FomoFeast.User) -> userMapping[sponsorAddress]
sponsor(FomoFeast.User) := REF_72(FomoFeast.User)",
		node_source_code_lines="[520]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	274 -> 275	[key=0,
		edge_type=next,
		label=Next];
	276	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(sponsor.totalInvestCount > 0,Invalid sponsor address)

IRs:
REF_73(uint256) \
-> sponsor.totalInvestCount
TMP_160(bool) = REF_73 > 0
TMP_161(None) = SOLIDITY_CALL require(bool,string)(TMP_160,Invalid sponsor \
address)",
		node_expression="require(bool,string)(sponsor.totalInvestCount > 0,Invalid sponsor address)",
		node_info_vulnerabilities=None,
		node_irs="REF_73(uint256) -> sponsor.totalInvestCount
TMP_160(bool) = REF_73 > 0
TMP_161(None) = SOLIDITY_CALL require(bool,string)(TMP_160,\
Invalid sponsor address)",
		node_source_code_lines="[521]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	275 -> 276	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(investCycle == 30 || investCycle == 60 || investCycle == 90,Invalid invest \
cycle)

IRs:
TMP_162(bool) = investCycle == 30
TMP_163(bool) = investCycle == 60
TMP_164(bool) = TMP_162 || TMP_163
TMP_165(bool) = \
investCycle == 90
TMP_166(bool) = TMP_164 || TMP_165
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Invalid invest cycle)",
		node_expression="require(bool,string)(investCycle == 30 || investCycle == 60 || investCycle == 90,Invalid invest cycle)",
		node_info_vulnerabilities=None,
		node_irs="TMP_162(bool) = investCycle == 30
TMP_163(bool) = investCycle == 60
TMP_164(bool) = TMP_162 || TMP_163
TMP_165(bool) = investCycle == \
90
TMP_166(bool) = TMP_164 || TMP_165
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Invalid invest cycle)",
		node_source_code_lines="[522]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	276 -> 277	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
investAmount = msg.value.div(ONE_ETH)

IRs:
TMP_168(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.div(uint256,uint256), arguments:['msg.value', 'ONE_ETH'] 
investAmount(uint256) := TMP_168(uint256)",
		node_expression="investAmount = msg.value.div(ONE_ETH)",
		node_info_vulnerabilities=None,
		node_irs="TMP_168(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['msg.value', 'ONE_ETH'] 
investAmount(\
uint256) := TMP_168(uint256)",
		node_source_code_lines="[523]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	277 -> 278	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
investAmount = investAmount.mul(ONE_ETH)

IRs:
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.mul(uint256,uint256), arguments:['investAmount', 'ONE_ETH'] 
investAmount(uint256) := TMP_169(uint256)",
		node_expression="investAmount = investAmount.mul(ONE_ETH)",
		node_info_vulnerabilities=None,
		node_irs="TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['investAmount', 'ONE_ETH'] 
investAmount(\
uint256) := TMP_169(uint256)",
		node_source_code_lines="[524]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	278 -> 279	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(investAmount == msg.value,Invest amount is not integer)

IRs:
TMP_170(bool) = \
investAmount == msg.value
TMP_171(None) = SOLIDITY_CALL require(bool,string)(TMP_170,Invest amount is not integer)",
		node_expression="require(bool,string)(investAmount == msg.value,Invest amount is not integer)",
		node_info_vulnerabilities=None,
		node_irs="TMP_170(bool) = investAmount == msg.value
TMP_171(None) = SOLIDITY_CALL require(bool,string)(TMP_170,Invest amount is not integer)",
		node_source_code_lines="[525]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	279 -> 280	[key=0,
		edge_type=next,
		label=Next];
	281	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(investAmount >= ONE_ETH.mul(1) && investAmount <= ONE_ETH.mul(15),Invalid \
invest amount)

IRs:
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['ONE_ETH', '\
1'] 
TMP_173(bool) = investAmount >= TMP_172
TMP_174(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), \
arguments:['ONE_ETH', '15'] 
TMP_175(bool) = investAmount <= TMP_174
TMP_176(bool) = TMP_173 && TMP_175
TMP_177(None) = SOLIDITY_\
CALL require(bool,string)(TMP_176,Invalid invest amount)",
		node_expression="require(bool,string)(investAmount >= ONE_ETH.mul(1) && investAmount <= ONE_ETH.mul(15),Invalid invest amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['ONE_ETH', '1'] 
TMP_173(bool) = \
investAmount >= TMP_172
TMP_174(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['ONE_\
ETH', '15'] 
TMP_175(bool) = investAmount <= TMP_174
TMP_176(bool) = TMP_173 && TMP_175
TMP_177(None) = SOLIDITY_CALL require(bool,\
string)(TMP_176,Invalid invest amount)",
		node_source_code_lines="[526]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	280 -> 281	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user = userMapping[msg.sender]

IRs:
REF_78(FomoFeast.User) -> userMapping[msg.sender]
user(\
FomoFeast.User) := REF_78(FomoFeast.User)",
		node_expression="user = userMapping[msg.sender]",
		node_info_vulnerabilities=None,
		node_irs="REF_78(FomoFeast.User) -> userMapping[msg.sender]
user(FomoFeast.User) := REF_78(FomoFeast.User)",
		node_source_code_lines="[528]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	281 -> 282	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
level = getLevelByInvestAmount(investAmount)

IRs:
TMP_178(uint256) = INTERNAL_CALL, FomoFeast.getLevelByInvestAmount(\
uint256)(investAmount)
level(uint256) := TMP_178(uint256)",
		node_expression="level = getLevelByInvestAmount(investAmount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_178(uint256) = INTERNAL_CALL, FomoFeast.getLevelByInvestAmount(uint256)(investAmount)
level(uint256) := TMP_178(uint256)",
		node_source_code_lines="[529]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	282 -> 283	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: IF

EXPRESSION:
user.totalInvestCount > 0

IRs:
REF_79(uint256) -> user.totalInvestCount
TMP_179(bool) = REF_79 > 0
CONDITION \
TMP_179",
		node_expression="user.totalInvestCount > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_79(uint256) -> user.totalInvestCount
TMP_179(bool) = REF_79 > 0
CONDITION TMP_179",
		node_source_code_lines="[530]",
		node_type=IF,
		source_file="buggy_24.sol"];
	283 -> 284	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(user.sponsorAddress == sponsorAddress,sponsor address is inconsistent)

\
IRs:
REF_80(address) -> user.sponsorAddress
TMP_180(bool) = REF_80 == sponsorAddress
TMP_181(None) = SOLIDITY_CALL require(bool,\
string)(TMP_180,sponsor address is inconsistent)",
		node_expression="require(bool,string)(user.sponsorAddress == sponsorAddress,sponsor address is inconsistent)",
		node_info_vulnerabilities=None,
		node_irs="REF_80(address) -> user.sponsorAddress
TMP_180(bool) = REF_80 == sponsorAddress
TMP_181(None) = SOLIDITY_CALL require(bool,string)(\
TMP_180,sponsor address is inconsistent)",
		node_source_code_lines="[531]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	284 -> 285	[key=0,
		edge_type=if_true,
		label=True];
	307	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
userMapping[msg.sender] = User(1,investAmount,0,0,0,1,0,investAmount,now,investAmount,investCycle,\
level,getStaticCommissionRatio(level,investCycle),0,0,0,0,sponsorAddress)

IRs:
REF_104(FomoFeast.User) -> userMapping[msg.sender]
\
TMP_199(uint256) = INTERNAL_CALL, FomoFeast.getStaticCommissionRatio(uint256,uint256)(level,investCycle)
TMP_200 = new User(1,investAmount,\
0,0,0,1,0,investAmount,now,investAmount,investCycle,level,TMP_199,0,0,0,0,sponsorAddress)
REF_104 (->userMapping) := TMP_200(FomoFeast.User)",
		node_expression="userMapping[msg.sender] = User(1,investAmount,0,0,0,1,0,investAmount,now,investAmount,investCycle,level,getStaticCommissionRatio(\
level,investCycle),0,0,0,0,sponsorAddress)",
		node_info_vulnerabilities=None,
		node_irs="REF_104(FomoFeast.User) -> userMapping[msg.sender]
TMP_199(uint256) = INTERNAL_CALL, FomoFeast.getStaticCommissionRatio(uint256,\
uint256)(level,investCycle)
TMP_200 = new User(1,investAmount,0,0,0,1,0,investAmount,now,investAmount,investCycle,level,TMP_199,\
0,0,0,0,sponsorAddress)
REF_104 (->userMapping) := TMP_200(FomoFeast.User)",
		node_source_code_lines="[553, 554, 555, 556]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	284 -> 307	[key=0,
		edge_type=if_false,
		label=False];
	286	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(user.currentInvestAmount == 0,Dumplicate invest)

IRs:
REF_81(uint256) -> \
user.currentInvestAmount
TMP_182(bool) = REF_81 == 0
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,Dumplicate invest)",
		node_expression="require(bool,string)(user.currentInvestAmount == 0,Dumplicate invest)",
		node_info_vulnerabilities=None,
		node_irs="REF_81(uint256) -> user.currentInvestAmount
TMP_182(bool) = REF_81 == 0
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,\
Dumplicate invest)",
		node_source_code_lines="[532]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	285 -> 286	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(user.currentInvestTime == 0,Invalid state)

IRs:
REF_82(uint256) -> user.currentInvestTime
\
TMP_184(bool) = REF_82 == 0
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,Invalid state)",
		node_expression="require(bool,string)(user.currentInvestTime == 0,Invalid state)",
		node_info_vulnerabilities=None,
		node_irs="REF_82(uint256) -> user.currentInvestTime
TMP_184(bool) = REF_82 == 0
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,\
Invalid state)",
		node_source_code_lines="[533]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	286 -> 287	[key=0,
		edge_type=next,
		label=Next];
	288	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(user.currentInvestCycle == 0,Invalid state)

IRs:
REF_83(uint256) -> user.currentInvestCycle
\
TMP_186(bool) = REF_83 == 0
TMP_187(None) = SOLIDITY_CALL require(bool,string)(TMP_186,Invalid state)",
		node_expression="require(bool,string)(user.currentInvestCycle == 0,Invalid state)",
		node_info_vulnerabilities=None,
		node_irs="REF_83(uint256) -> user.currentInvestCycle
TMP_186(bool) = REF_83 == 0
TMP_187(None) = SOLIDITY_CALL require(bool,string)(TMP_186,\
Invalid state)",
		node_source_code_lines="[534]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	287 -> 288	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(user.currentlevel == 0,Invalid state)

IRs:
REF_84(uint256) -> user.currentlevel
\
TMP_188(bool) = REF_84 == 0
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,Invalid state)",
		node_expression="require(bool,string)(user.currentlevel == 0,Invalid state)",
		node_info_vulnerabilities=None,
		node_irs="REF_84(uint256) -> user.currentlevel
TMP_188(bool) = REF_84 == 0
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,Invalid \
state)",
		node_source_code_lines="[535]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	288 -> 289	[key=0,
		edge_type=next,
		label=Next];
	290	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(user.currentStaticCommissionRatio == 0,Invalid state)

IRs:
REF_85(uint256) \
-> user.currentStaticCommissionRatio
TMP_190(bool) = REF_85 == 0
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,Invalid \
state)",
		node_expression="require(bool,string)(user.currentStaticCommissionRatio == 0,Invalid state)",
		node_info_vulnerabilities=None,
		node_irs="REF_85(uint256) -> user.currentStaticCommissionRatio
TMP_190(bool) = REF_85 == 0
TMP_191(None) = SOLIDITY_CALL require(bool,string)(\
TMP_190,Invalid state)",
		node_source_code_lines="[536]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	289 -> 290	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(user.currentStaticCommissionWithdrawAmount == 0,Invalid state)

IRs:
REF_\
86(uint256) -> user.currentStaticCommissionWithdrawAmount
TMP_192(bool) = REF_86 == 0
TMP_193(None) = SOLIDITY_CALL require(bool,\
string)(TMP_192,Invalid state)",
		node_expression="require(bool,string)(user.currentStaticCommissionWithdrawAmount == 0,Invalid state)",
		node_info_vulnerabilities=None,
		node_irs="REF_86(uint256) -> user.currentStaticCommissionWithdrawAmount
TMP_192(bool) = REF_86 == 0
TMP_193(None) = SOLIDITY_CALL require(\
bool,string)(TMP_192,Invalid state)",
		node_source_code_lines="[537]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	290 -> 291	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
user.totalInvestCount = user.totalInvestCount.add(1)

IRs:
REF_87(uint256) -> user.totalInvestCount
\
REF_88(uint256) -> user.totalInvestCount
TMP_194(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_88', '1'] 
REF_87 (->user) := TMP_194(uint256)",
		node_expression="user.totalInvestCount = user.totalInvestCount.add(1)",
		node_info_vulnerabilities=None,
		node_irs="REF_87(uint256) -> user.totalInvestCount
REF_88(uint256) -> user.totalInvestCount
TMP_194(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_88', '1'] 
REF_87 (->user) := TMP_194(uint256)",
		node_source_code_lines="[538]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	291 -> 292	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
user.totalInvestAmount = user.totalInvestAmount.add(investAmount)

IRs:
REF_90(uint256) -> user.totalInvestAmount
\
REF_91(uint256) -> user.totalInvestAmount
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_91', 'investAmount'] 
REF_90 (->user) := TMP_195(uint256)",
		node_expression="user.totalInvestAmount = user.totalInvestAmount.add(investAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_90(uint256) -> user.totalInvestAmount
REF_91(uint256) -> user.totalInvestAmount
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_91', 'investAmount'] 
REF_90 (->user) := TMP_195(uint256)",
		node_source_code_lines="[539]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	292 -> 293	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentInvestTime = now

IRs:
REF_93(uint256) -> user.currentInvestTime
REF_93 (->user) := \
now(uint256)",
		node_expression="user.currentInvestTime = now",
		node_info_vulnerabilities=None,
		node_irs="REF_93(uint256) -> user.currentInvestTime
REF_93 (->user) := now(uint256)",
		node_source_code_lines="[540]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	293 -> 294	[key=0,
		edge_type=next,
		label=Next];
	295	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentInvestAmount = investAmount

IRs:
REF_94(uint256) -> user.currentInvestAmount
REF_\
94 (->user) := investAmount(uint256)",
		node_expression="user.currentInvestAmount = investAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_94(uint256) -> user.currentInvestAmount
REF_94 (->user) := investAmount(uint256)",
		node_source_code_lines="[541]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	294 -> 295	[key=0,
		edge_type=next,
		label=Next];
	296	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentInvestCycle = investCycle

IRs:
REF_95(uint256) -> user.currentInvestCycle
REF_95 (\
->user) := investCycle(uint256)",
		node_expression="user.currentInvestCycle = investCycle",
		node_info_vulnerabilities=None,
		node_irs="REF_95(uint256) -> user.currentInvestCycle
REF_95 (->user) := investCycle(uint256)",
		node_source_code_lines="[542]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	295 -> 296	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentlevel = level

IRs:
REF_96(uint256) -> user.currentlevel
REF_96 (->user) := level(\
uint256)",
		node_expression="user.currentlevel = level",
		node_info_vulnerabilities=None,
		node_irs="REF_96(uint256) -> user.currentlevel
REF_96 (->user) := level(uint256)",
		node_source_code_lines="[543]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	296 -> 297	[key=0,
		edge_type=next,
		label=Next];
	298	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentStaticCommissionRatio = getStaticCommissionRatio(level,investCycle)

IRs:
REF_97(\
uint256) -> user.currentStaticCommissionRatio
TMP_196(uint256) = INTERNAL_CALL, FomoFeast.getStaticCommissionRatio(uint256,uint256)(\
level,investCycle)
REF_97 (->user) := TMP_196(uint256)",
		node_expression="user.currentStaticCommissionRatio = getStaticCommissionRatio(level,investCycle)",
		node_info_vulnerabilities=None,
		node_irs="REF_97(uint256) -> user.currentStaticCommissionRatio
TMP_196(uint256) = INTERNAL_CALL, FomoFeast.getStaticCommissionRatio(uint256,\
uint256)(level,investCycle)
REF_97 (->user) := TMP_196(uint256)",
		node_source_code_lines="[544]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	297 -> 298	[key=0,
		edge_type=next,
		label=Next];
	299	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
userMapping[msg.sender] = user

IRs:
REF_98(FomoFeast.User) -> userMapping[msg.sender]
REF_98 (\
->userMapping) := user(FomoFeast.User)",
		node_expression="userMapping[msg.sender] = user",
		node_info_vulnerabilities=None,
		node_irs="REF_98(FomoFeast.User) -> userMapping[msg.sender]
REF_98 (->userMapping) := user(FomoFeast.User)",
		node_source_code_lines="[545]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	298 -> 299	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
addressWalker = sponsorAddress

IRs:
addressWalker(address) := sponsorAddress(address)",
		node_expression="addressWalker = sponsorAddress",
		node_info_vulnerabilities=None,
		node_irs="addressWalker(address) := sponsorAddress(address)",
		node_source_code_lines="[546]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	299 -> 300	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[547, 548, 549, 550, 551]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	300 -> 301	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
addressWalker != GENESIS_USER_ADDRESS

IRs:
TMP_197(bool) = addressWalker != GENESIS_USER_ADDRESS
\
CONDITION TMP_197",
		node_expression="addressWalker != GENESIS_USER_ADDRESS",
		node_info_vulnerabilities=None,
		node_irs="TMP_197(bool) = addressWalker != GENESIS_USER_ADDRESS
CONDITION TMP_197",
		node_source_code_lines="[547]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	301 -> 302	[key=0,
		edge_type=next,
		label=Next];
	303	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
sponsor = userMapping[addressWalker]

IRs:
REF_99(FomoFeast.User) -> userMapping[addressWalker]
\
sponsor(FomoFeast.User) := REF_99(FomoFeast.User)",
		node_expression="sponsor = userMapping[addressWalker]",
		node_info_vulnerabilities=None,
		node_irs="REF_99(FomoFeast.User) -> userMapping[addressWalker]
sponsor(FomoFeast.User) := REF_99(FomoFeast.User)",
		node_source_code_lines="[548]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	302 -> 303	[key=0,
		edge_type=if_true,
		label=True];
	306	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[547, 548, 549, 550, 551]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	302 -> 306	[key=0,
		edge_type=if_false,
		label=False];
	304	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
sponsor.totalDownlineInvestAmount = sponsor.totalDownlineInvestAmount.add(investAmount)

IRs:
\
REF_100(uint256) -> sponsor.totalDownlineInvestAmount
REF_101(uint256) -> sponsor.totalDownlineInvestAmount
TMP_198(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_101', 'investAmount'] 
REF_100 (->sponsor) := TMP_198(\
uint256)",
		node_expression="sponsor.totalDownlineInvestAmount = sponsor.totalDownlineInvestAmount.add(investAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_100(uint256) -> sponsor.totalDownlineInvestAmount
REF_101(uint256) -> sponsor.totalDownlineInvestAmount
TMP_198(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_101', 'investAmount'] 
REF_100 (->sponsor) := TMP_198(\
uint256)",
		node_source_code_lines="[549]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	303 -> 304	[key=0,
		edge_type=next,
		label=Next];
	305	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
addressWalker = sponsor.sponsorAddress

IRs:
REF_103(address) -> sponsor.sponsorAddress
addressWalker(\
address) := REF_103(address)",
		node_expression="addressWalker = sponsor.sponsorAddress",
		node_info_vulnerabilities=None,
		node_irs="REF_103(address) -> sponsor.sponsorAddress
addressWalker(address) := REF_103(address)",
		node_source_code_lines="[550]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	304 -> 305	[key=0,
		edge_type=next,
		label=Next];
	305 -> 302	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, \
556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	306 -> 321	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
addressMapping[totalUserCount] = msg.sender

IRs:
REF_105(address) -> addressMapping[totalUserCount]
\
REF_105 (->addressMapping) := msg.sender(address)",
		node_expression="addressMapping[totalUserCount] = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="REF_105(address) -> addressMapping[totalUserCount]
REF_105 (->addressMapping) := msg.sender(address)",
		node_source_code_lines="[557]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
totalUserCount = totalUserCount.add(1)

IRs:
TMP_201(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['totalUserCount', '1'] 
totalUserCount(uint256) := TMP_201(uint256)",
		node_expression="totalUserCount = totalUserCount.add(1)",
		node_info_vulnerabilities=None,
		node_irs="TMP_201(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalUserCount', '1'] 
totalUserCount(\
uint256) := TMP_201(uint256)",
		node_source_code_lines="[558]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	308 -> 309	[key=0,
		edge_type=next,
		label=Next];
	310	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
addressWalker_scope_0 = sponsorAddress

IRs:
addressWalker_scope_0(address) := sponsorAddress(\
address)",
		node_expression="addressWalker_scope_0 = sponsorAddress",
		node_info_vulnerabilities=None,
		node_irs="addressWalker_scope_0(address) := sponsorAddress(address)",
		node_source_code_lines="[559]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	309 -> 310	[key=0,
		edge_type=next,
		label=Next];
	311	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[560, 561, 562, 563, 564, 565, 566, 567, 568]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	310 -> 311	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
addressWalker_scope_0 != GENESIS_USER_ADDRESS

IRs:
TMP_202(bool) = addressWalker_scope_0 != GENESIS_\
USER_ADDRESS
CONDITION TMP_202",
		node_expression="addressWalker_scope_0 != GENESIS_USER_ADDRESS",
		node_info_vulnerabilities=None,
		node_irs="TMP_202(bool) = addressWalker_scope_0 != GENESIS_USER_ADDRESS
CONDITION TMP_202",
		node_source_code_lines="[560]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	311 -> 312	[key=0,
		edge_type=next,
		label=Next];
	313	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
sponsor = userMapping[addressWalker_scope_0]

IRs:
REF_107(FomoFeast.User) -> userMapping[addressWalker_\
scope_0]
sponsor(FomoFeast.User) := REF_107(FomoFeast.User)",
		node_expression="sponsor = userMapping[addressWalker_scope_0]",
		node_info_vulnerabilities=None,
		node_irs="REF_107(FomoFeast.User) -> userMapping[addressWalker_scope_0]
sponsor(FomoFeast.User) := REF_107(FomoFeast.User)",
		node_source_code_lines="[561]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	312 -> 313	[key=0,
		edge_type=if_true,
		label=True];
	320	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[560, 561, 562, 563, 564, 565, 566, 567, 568]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	312 -> 320	[key=0,
		edge_type=if_false,
		label=False];
	314	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
sponsor.downlineCount = sponsor.downlineCount.add(1)

IRs:
REF_108(uint256) -> sponsor.downlineCount
\
REF_109(uint256) -> sponsor.downlineCount
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_109', '1'] 
REF_108 (->sponsor) := TMP_203(uint256)",
		node_expression="sponsor.downlineCount = sponsor.downlineCount.add(1)",
		node_info_vulnerabilities=None,
		node_irs="REF_108(uint256) -> sponsor.downlineCount
REF_109(uint256) -> sponsor.downlineCount
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_109', '1'] 
REF_108 (->sponsor) := TMP_203(uint256)",
		node_source_code_lines="[562]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	313 -> 314	[key=0,
		edge_type=next,
		label=Next];
	315	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: IF

EXPRESSION:
addressWalker_scope_0 == sponsorAddress

IRs:
TMP_204(bool) = addressWalker_scope_0 == sponsorAddress
\
CONDITION TMP_204",
		node_expression="addressWalker_scope_0 == sponsorAddress",
		node_info_vulnerabilities=None,
		node_irs="TMP_204(bool) = addressWalker_scope_0 == sponsorAddress
CONDITION TMP_204",
		node_source_code_lines="[563]",
		node_type=IF,
		source_file="buggy_24.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
sponsor.nodeCount = sponsor.nodeCount.add(1)

IRs:
REF_111(uint256) -> sponsor.nodeCount
REF_\
112(uint256) -> sponsor.nodeCount
TMP_205(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_112', '1'] 
REF_111 (->sponsor) := TMP_205(uint256)",
		node_expression="sponsor.nodeCount = sponsor.nodeCount.add(1)",
		node_info_vulnerabilities=None,
		node_irs="REF_111(uint256) -> sponsor.nodeCount
REF_112(uint256) -> sponsor.nodeCount
TMP_205(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_112', '1'] 
REF_111 (->sponsor) := TMP_205(uint256)",
		node_source_code_lines="[564]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	315 -> 316	[key=0,
		edge_type=if_true,
		label=True];
	317	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[563, 564, 565]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	315 -> 317	[key=0,
		edge_type=if_false,
		label=False];
	316 -> 317	[key=0,
		edge_type=next,
		label=Next];
	318	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
sponsor.totalDownlineInvestAmount = sponsor.totalDownlineInvestAmount.add(investAmount)

IRs:
\
REF_114(uint256) -> sponsor.totalDownlineInvestAmount
REF_115(uint256) -> sponsor.totalDownlineInvestAmount
TMP_206(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_115', 'investAmount'] 
REF_114 (->sponsor) := TMP_206(\
uint256)",
		node_expression="sponsor.totalDownlineInvestAmount = sponsor.totalDownlineInvestAmount.add(investAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_114(uint256) -> sponsor.totalDownlineInvestAmount
REF_115(uint256) -> sponsor.totalDownlineInvestAmount
TMP_206(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_115', 'investAmount'] 
REF_114 (->sponsor) := TMP_206(\
uint256)",
		node_source_code_lines="[566]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	317 -> 318	[key=0,
		edge_type=next,
		label=Next];
	319	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
addressWalker_scope_0 = sponsor.sponsorAddress

IRs:
REF_117(address) -> sponsor.sponsorAddress
\
addressWalker_scope_0(address) := REF_117(address)",
		node_expression="addressWalker_scope_0 = sponsor.sponsorAddress",
		node_info_vulnerabilities=None,
		node_irs="REF_117(address) -> sponsor.sponsorAddress
addressWalker_scope_0(address) := REF_117(address)",
		node_source_code_lines="[567]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	318 -> 319	[key=0,
		edge_type=next,
		label=Next];
	319 -> 312	[key=0,
		edge_type=next,
		label=Next];
	320 -> 321	[key=0,
		edge_type=next,
		label=Next];
	322	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
addInvestRecord(msg.sender,now,investAmount,investCycle)

IRs:
INTERNAL_CALL, FomoFeast.addInvestRecord(\
address,uint256,uint256,uint256)(msg.sender,now,investAmount,investCycle)",
		node_expression="addInvestRecord(msg.sender,now,investAmount,investCycle)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, FomoFeast.addInvestRecord(address,uint256,uint256,uint256)(msg.sender,now,investAmount,investCycle)",
		node_source_code_lines="[571]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	321 -> 322	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
totalInvestCount = totalInvestCount.add(1)

IRs:
TMP_208(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['totalInvestCount', '1'] 
totalInvestCount(uint256) := TMP_208(uint256)",
		node_expression="totalInvestCount = totalInvestCount.add(1)",
		node_info_vulnerabilities=None,
		node_irs="TMP_208(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalInvestCount', '1'] 
totalInvestCount(\
uint256) := TMP_208(uint256)",
		node_source_code_lines="[572]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	322 -> 323	[key=0,
		edge_type=next,
		label=Next];
	324	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
totalInvestAmount = totalInvestAmount.add(investAmount)

IRs:
TMP_209(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalInvestAmount', 'investAmount'] 
totalInvestAmount(uint256) := \
TMP_209(uint256)",
		node_expression="totalInvestAmount = totalInvestAmount.add(investAmount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_209(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalInvestAmount', 'investAmount'] 
\
totalInvestAmount(uint256) := TMP_209(uint256)",
		node_source_code_lines="[573]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	323 -> 324	[key=0,
		edge_type=next,
		label=Next];
	325	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
engineerFunds = engineerFunds.add(investAmount.div(50))

IRs:
TMP_210(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['investAmount', '50'] 
TMP_211(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['engineerFunds', 'TMP_210'] 
engineerFunds(uint256) := TMP_211(uint256)",
		node_expression="engineerFunds = engineerFunds.add(investAmount.div(50))",
		node_info_vulnerabilities=None,
		node_irs="TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['investAmount', '50'] 
TMP_211(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['engineerFunds', 'TMP_210'] 
engineerFunds(\
uint256) := TMP_211(uint256)",
		node_source_code_lines="[574]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	324 -> 325	[key=0,
		edge_type=next,
		label=Next];
	326	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
operatorFunds = operatorFunds.add(investAmount.mul(3).div(100))

IRs:
TMP_212(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['investAmount', '3'] 
TMP_213(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_212', '100'] 
TMP_214(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['operatorFunds', 'TMP_213'] 
operatorFunds(uint256) := TMP_214(uint256)",
		node_expression="operatorFunds = operatorFunds.add(investAmount.mul(3).div(100))",
		node_info_vulnerabilities=None,
		node_irs="TMP_212(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['investAmount', '3'] 
TMP_213(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_212', '100'] 
TMP_214(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['operatorFunds', 'TMP_213'] 
operatorFunds(uint256) := \
TMP_214(uint256)",
		node_source_code_lines="[575]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	325 -> 326	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=FomoFeast,
		function_fullname="invest(address,uint256)",
		label="buggy_24.sol_FomoFeast_invest(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, \
545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, \
571, 572, 573, 574, 575, 576]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	327 -> 274	[key=0,
		edge_type=next,
		label=Next];
	328	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[577, 578, 579, 580]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	329	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_215(bool) = tx.origin == owner_txorigin38
\
TMP_216(None) = SOLIDITY_CALL require(bool)(TMP_215)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_215(bool) = tx.origin == owner_txorigin38
TMP_216(None) = SOLIDITY_CALL require(bool)(TMP_215)",
		node_source_code_lines="[578]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	328 -> 329	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_217 = CONVERT this to address
REF_126 -> \
BALANCE TMP_217
Transfer dest:_recipient value:REF_126",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_217 = CONVERT this to address
REF_126 -> BALANCE TMP_217
Transfer dest:_recipient value:REF_126",
		node_source_code_lines="[579]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	329 -> 330	[key=0,
		edge_type=next,
		label=Next];
	331	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[577, 578, 579, 580]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	331 -> 328	[key=0,
		edge_type=next,
		label=Next];
	332	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	333	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user = userMapping[msg.sender]

IRs:
REF_127(FomoFeast.User) -> userMapping[msg.sender]
user(\
FomoFeast.User) := REF_127(FomoFeast.User)",
		node_expression="user = userMapping[msg.sender]",
		node_info_vulnerabilities=None,
		node_irs="REF_127(FomoFeast.User) -> userMapping[msg.sender]
user(FomoFeast.User) := REF_127(FomoFeast.User)",
		node_source_code_lines="[583]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	332 -> 333	[key=0,
		edge_type=next,
		label=Next];
	334	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: IF

EXPRESSION:
user.currentInvestAmount > 0

IRs:
REF_128(uint256) -> user.currentInvestAmount
TMP_219(bool) = REF_128 > \
0
CONDITION TMP_219",
		node_expression="user.currentInvestAmount > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_128(uint256) -> user.currentInvestAmount
TMP_219(bool) = REF_128 > 0
CONDITION TMP_219",
		node_source_code_lines="[584]",
		node_type=IF,
		source_file="buggy_24.sol"];
	333 -> 334	[key=0,
		edge_type=next,
		label=Next];
	335	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
avaliableIA = user.currentInvestAmount

IRs:
REF_129(uint256) -> user.currentInvestAmount
avaliableIA(\
uint256) := REF_129(uint256)",
		node_expression="avaliableIA = user.currentInvestAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_129(uint256) -> user.currentInvestAmount
avaliableIA(uint256) := REF_129(uint256)",
		node_source_code_lines="[585]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	334 -> 335	[key=0,
		edge_type=if_true,
		label=True];
	350	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	334 -> 350	[key=0,
		edge_type=if_false,
		label=False];
	336	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: IF

EXPRESSION:
! isInvestExpired(user)

IRs:
TMP_220(bool) = INTERNAL_CALL, FomoFeast.isInvestExpired(FomoFeast.User)(\
user)
TMP_221 = ! TMP_220 
CONDITION TMP_221",
		node_expression="! isInvestExpired(user)",
		node_info_vulnerabilities=None,
		node_irs="TMP_220(bool) = INTERNAL_CALL, FomoFeast.isInvestExpired(FomoFeast.User)(user)
TMP_221 = ! TMP_220 
CONDITION TMP_221",
		node_source_code_lines="[586]",
		node_type=IF,
		source_file="buggy_24.sol"];
	335 -> 336	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
avaliableIA = getAbortInvestAmount(user)

IRs:
TMP_222(uint256) = INTERNAL_CALL, FomoFeast.getAbortInvestAmount(\
FomoFeast.User)(user)
avaliableIA(uint256) := TMP_222(uint256)",
		node_expression="avaliableIA = getAbortInvestAmount(user)",
		node_info_vulnerabilities=None,
		node_irs="TMP_222(uint256) = INTERNAL_CALL, FomoFeast.getAbortInvestAmount(FomoFeast.User)(user)
avaliableIA(uint256) := TMP_222(uint256)",
		node_source_code_lines="[587]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	336 -> 337	[key=0,
		edge_type=if_true,
		label=True];
	338	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[586, 587, 588]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	336 -> 338	[key=0,
		edge_type=if_false,
		label=False];
	337 -> 338	[key=0,
		edge_type=next,
		label=Next];
	339	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
avaliableSCA = getAvaliableStaticCommissionAmount(user)

IRs:
TMP_223(uint256) = INTERNAL_CALL, \
FomoFeast.getAvaliableStaticCommissionAmount(FomoFeast.User)(user)
avaliableSCA(uint256) := TMP_223(uint256)",
		node_expression="avaliableSCA = getAvaliableStaticCommissionAmount(user)",
		node_info_vulnerabilities=None,
		node_irs="TMP_223(uint256) = INTERNAL_CALL, FomoFeast.getAvaliableStaticCommissionAmount(FomoFeast.User)(user)
avaliableSCA(uint256) := TMP_\
223(uint256)",
		node_source_code_lines="[589]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	338 -> 339	[key=0,
		edge_type=next,
		label=Next];
	340	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.staticCommissionBalance = user.staticCommissionBalance.add(avaliableSCA)

IRs:
REF_130(uint256) \
-> user.staticCommissionBalance
REF_131(uint256) -> user.staticCommissionBalance
TMP_224(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_131', 'avaliableSCA'] 
REF_130 (->user) := TMP_224(uint256)",
		node_expression="user.staticCommissionBalance = user.staticCommissionBalance.add(avaliableSCA)",
		node_info_vulnerabilities=None,
		node_irs="REF_130(uint256) -> user.staticCommissionBalance
REF_131(uint256) -> user.staticCommissionBalance
TMP_224(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_131', 'avaliableSCA'] 
REF_130 (->user) := TMP_224(uint256)",
		node_source_code_lines="[590]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	339 -> 340	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentInvestTime = 0

IRs:
REF_133(uint256) -> user.currentInvestTime
REF_133 (->user) := \
0(uint256)",
		node_expression="user.currentInvestTime = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_133(uint256) -> user.currentInvestTime
REF_133 (->user) := 0(uint256)",
		node_source_code_lines="[591]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	340 -> 341	[key=0,
		edge_type=next,
		label=Next];
	342	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentInvestAmount = 0

IRs:
REF_134(uint256) -> user.currentInvestAmount
REF_134 (->user) := \
0(uint256)",
		node_expression="user.currentInvestAmount = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_134(uint256) -> user.currentInvestAmount
REF_134 (->user) := 0(uint256)",
		node_source_code_lines="[592]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	341 -> 342	[key=0,
		edge_type=next,
		label=Next];
	343	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentInvestCycle = 0

IRs:
REF_135(uint256) -> user.currentInvestCycle
REF_135 (->user) := \
0(uint256)",
		node_expression="user.currentInvestCycle = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_135(uint256) -> user.currentInvestCycle
REF_135 (->user) := 0(uint256)",
		node_source_code_lines="[593]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	342 -> 343	[key=0,
		edge_type=next,
		label=Next];
	344	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentlevel = 0

IRs:
REF_136(uint256) -> user.currentlevel
REF_136 (->user) := 0(uint256)",
		node_expression="user.currentlevel = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_136(uint256) -> user.currentlevel
REF_136 (->user) := 0(uint256)",
		node_source_code_lines="[594]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	343 -> 344	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentStaticCommissionRatio = 0

IRs:
REF_137(uint256) -> user.currentStaticCommissionRatio
\
REF_137 (->user) := 0(uint256)",
		node_expression="user.currentStaticCommissionRatio = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_137(uint256) -> user.currentStaticCommissionRatio
REF_137 (->user) := 0(uint256)",
		node_source_code_lines="[595]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	344 -> 345	[key=0,
		edge_type=next,
		label=Next];
	346	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentStaticCommissionWithdrawAmount = 0

IRs:
REF_138(uint256) -> user.currentStaticCommissionWithdrawAmount
\
REF_138 (->user) := 0(uint256)",
		node_expression="user.currentStaticCommissionWithdrawAmount = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_138(uint256) -> user.currentStaticCommissionWithdrawAmount
REF_138 (->user) := 0(uint256)",
		node_source_code_lines="[596]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	345 -> 346	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.totalWithdrawAmount = user.totalWithdrawAmount.add(avaliableIA)

IRs:
REF_139(uint256) -> \
user.totalWithdrawAmount
REF_140(uint256) -> user.totalWithdrawAmount
TMP_225(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_140', 'avaliableIA'] 
REF_139 (->user) := TMP_225(uint256)",
		node_expression="user.totalWithdrawAmount = user.totalWithdrawAmount.add(avaliableIA)",
		node_info_vulnerabilities=None,
		node_irs="REF_139(uint256) -> user.totalWithdrawAmount
REF_140(uint256) -> user.totalWithdrawAmount
TMP_225(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_140', 'avaliableIA'] 
REF_139 (->user) := TMP_225(uint256)",
		node_source_code_lines="[597]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	346 -> 347	[key=0,
		edge_type=next,
		label=Next];
	348	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
totalWithdrawAmount = totalWithdrawAmount.add(avaliableIA)

IRs:
TMP_226(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalWithdrawAmount', 'avaliableIA'] 
totalWithdrawAmount(uint256) := \
TMP_226(uint256)",
		node_expression="totalWithdrawAmount = totalWithdrawAmount.add(avaliableIA)",
		node_info_vulnerabilities=None,
		node_irs="TMP_226(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalWithdrawAmount', 'avaliableIA'] 
\
totalWithdrawAmount(uint256) := TMP_226(uint256)",
		node_source_code_lines="[598]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	347 -> 348	[key=0,
		edge_type=next,
		label=Next];
	349	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(avaliableIA)

IRs:
Transfer dest:msg.sender value:avaliableIA",
		node_expression="msg.sender.transfer(avaliableIA)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:msg.sender value:avaliableIA",
		node_source_code_lines="[599]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	348 -> 349	[key=0,
		edge_type=next,
		label=Next];
	349 -> 350	[key=0,
		edge_type=next,
		label=Next];
	351	[contract_name=FomoFeast,
		function_fullname="userWithdraw()",
		label="buggy_24.sol_FomoFeast_userWithdraw()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	351 -> 332	[key=0,
		edge_type=next,
		label=Next];
	352	[contract_name=FomoFeast,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[602, 603, 604]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	353	[contract_name=FomoFeast,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_228(bool) = tx.origin == owner_txorigin4
\
TMP_229(None) = SOLIDITY_CALL require(bool)(TMP_228)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_228(bool) = tx.origin == owner_txorigin4
TMP_229(None) = SOLIDITY_CALL require(bool)(TMP_228)",
		node_source_code_lines="[603]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	352 -> 353	[key=0,
		edge_type=next,
		label=Next];
	354	[contract_name=FomoFeast,
		function_fullname="bug_txorigin4(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[602, 603, 604]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	354 -> 352	[key=0,
		edge_type=next,
		label=Next];
	355	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	356	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user = userMapping[msg.sender]

IRs:
REF_144(FomoFeast.User) -> userMapping[msg.sender]
user(\
FomoFeast.User) := REF_144(FomoFeast.User)",
		node_expression="user = userMapping[msg.sender]",
		node_info_vulnerabilities=None,
		node_irs="REF_144(FomoFeast.User) -> userMapping[msg.sender]
user(FomoFeast.User) := REF_144(FomoFeast.User)",
		node_source_code_lines="[607]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	355 -> 356	[key=0,
		edge_type=next,
		label=Next];
	357	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
avaliableDCB = user.dynamicCommissionBalance

IRs:
REF_145(uint256) -> user.dynamicCommissionBalance
\
avaliableDCB(uint256) := REF_145(uint256)",
		node_expression="avaliableDCB = user.dynamicCommissionBalance",
		node_info_vulnerabilities=None,
		node_irs="REF_145(uint256) -> user.dynamicCommissionBalance
avaliableDCB(uint256) := REF_145(uint256)",
		node_source_code_lines="[608]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	356 -> 357	[key=0,
		edge_type=next,
		label=Next];
	358	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
avaliableSCA = getAvaliableStaticCommissionAmount(user)

IRs:
TMP_230(uint256) = INTERNAL_CALL, \
FomoFeast.getAvaliableStaticCommissionAmount(FomoFeast.User)(user)
avaliableSCA(uint256) := TMP_230(uint256)",
		node_expression="avaliableSCA = getAvaliableStaticCommissionAmount(user)",
		node_info_vulnerabilities=None,
		node_irs="TMP_230(uint256) = INTERNAL_CALL, FomoFeast.getAvaliableStaticCommissionAmount(FomoFeast.User)(user)
avaliableSCA(uint256) := TMP_\
230(uint256)",
		node_source_code_lines="[609]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	357 -> 358	[key=0,
		edge_type=next,
		label=Next];
	359	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
avaliableSCB = user.staticCommissionBalance.add(avaliableSCA)

IRs:
REF_146(uint256) -> user.staticCommissionBalance
\
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_146', 'avaliableSCA'] 
avaliableSCB(\
uint256) := TMP_231(uint256)",
		node_expression="avaliableSCB = user.staticCommissionBalance.add(avaliableSCA)",
		node_info_vulnerabilities=None,
		node_irs="REF_146(uint256) -> user.staticCommissionBalance
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_146', 'avaliableSCA'] 
avaliableSCB(uint256) := TMP_231(uint256)",
		node_source_code_lines="[610]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	358 -> 359	[key=0,
		edge_type=next,
		label=Next];
	360	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
avaliableWithdrawAmount = avaliableDCB.add(avaliableSCB)

IRs:
TMP_232(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['avaliableDCB', 'avaliableSCB'] 
avaliableWithdrawAmount(uint256) := \
TMP_232(uint256)",
		node_expression="avaliableWithdrawAmount = avaliableDCB.add(avaliableSCB)",
		node_info_vulnerabilities=None,
		node_irs="TMP_232(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['avaliableDCB', 'avaliableSCB'] 
\
avaliableWithdrawAmount(uint256) := TMP_232(uint256)",
		node_source_code_lines="[611]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	359 -> 360	[key=0,
		edge_type=next,
		label=Next];
	361	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: IF

EXPRESSION:
avaliableWithdrawAmount >= ONE_ETH.div(10)

IRs:
TMP_233(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.div(uint256,uint256), arguments:['ONE_ETH', '10'] 
TMP_234(bool) = avaliableWithdrawAmount >= TMP_233
CONDITION TMP_234",
		node_expression="avaliableWithdrawAmount >= ONE_ETH.div(10)",
		node_info_vulnerabilities=None,
		node_irs="TMP_233(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['ONE_ETH', '10'] 
TMP_234(bool) = \
avaliableWithdrawAmount >= TMP_233
CONDITION TMP_234",
		node_source_code_lines="[612]",
		node_type=IF,
		source_file="buggy_24.sol"];
	360 -> 361	[key=0,
		edge_type=next,
		label=Next];
	362	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.staticCommissionBalance = 0

IRs:
REF_150(uint256) -> user.staticCommissionBalance
REF_150 (\
->user) := 0(uint256)",
		node_expression="user.staticCommissionBalance = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_150(uint256) -> user.staticCommissionBalance
REF_150 (->user) := 0(uint256)",
		node_source_code_lines="[613]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	361 -> 362	[key=0,
		edge_type=if_true,
		label=True];
	375	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	361 -> 375	[key=0,
		edge_type=if_false,
		label=False];
	363	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.dynamicCommissionBalance = 0

IRs:
REF_151(uint256) -> user.dynamicCommissionBalance
REF_\
151 (->user) := 0(uint256)",
		node_expression="user.dynamicCommissionBalance = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_151(uint256) -> user.dynamicCommissionBalance
REF_151 (->user) := 0(uint256)",
		node_source_code_lines="[614]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	362 -> 363	[key=0,
		edge_type=next,
		label=Next];
	364	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.currentStaticCommissionWithdrawAmount = user.currentStaticCommissionWithdrawAmount.add(avaliableSCA)

\
IRs:
REF_152(uint256) -> user.currentStaticCommissionWithdrawAmount
REF_153(uint256) -> user.currentStaticCommissionWithdrawAmount
\
TMP_235(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_153', 'avaliableSCA'] 
REF_\
152 (->user) := TMP_235(uint256)",
		node_expression="user.currentStaticCommissionWithdrawAmount = user.currentStaticCommissionWithdrawAmount.add(avaliableSCA)",
		node_info_vulnerabilities=None,
		node_irs="REF_152(uint256) -> user.currentStaticCommissionWithdrawAmount
REF_153(uint256) -> user.currentStaticCommissionWithdrawAmount
TMP_\
235(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_153', 'avaliableSCA'] 
REF_152 (\
->user) := TMP_235(uint256)",
		node_source_code_lines="[615]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	363 -> 364	[key=0,
		edge_type=next,
		label=Next];
	365	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.totalStaticCommissionWithdrawAmount = user.totalStaticCommissionWithdrawAmount.add(avaliableSCB)

\
IRs:
REF_155(uint256) -> user.totalStaticCommissionWithdrawAmount
REF_156(uint256) -> user.totalStaticCommissionWithdrawAmount
TMP_\
236(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_156', 'avaliableSCB'] 
REF_155 (\
->user) := TMP_236(uint256)",
		node_expression="user.totalStaticCommissionWithdrawAmount = user.totalStaticCommissionWithdrawAmount.add(avaliableSCB)",
		node_info_vulnerabilities=None,
		node_irs="REF_155(uint256) -> user.totalStaticCommissionWithdrawAmount
REF_156(uint256) -> user.totalStaticCommissionWithdrawAmount
TMP_236(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_156', 'avaliableSCB'] 
REF_155 (\
->user) := TMP_236(uint256)",
		node_source_code_lines="[616]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	364 -> 365	[key=0,
		edge_type=next,
		label=Next];
	366	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.totalDynamicCommissionWithdrawAmount = user.totalDynamicCommissionWithdrawAmount.add(avaliableDCB)

\
IRs:
REF_158(uint256) -> user.totalDynamicCommissionWithdrawAmount
REF_159(uint256) -> user.totalDynamicCommissionWithdrawAmount
\
TMP_237(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_159', 'avaliableDCB'] 
REF_\
158 (->user) := TMP_237(uint256)",
		node_expression="user.totalDynamicCommissionWithdrawAmount = user.totalDynamicCommissionWithdrawAmount.add(avaliableDCB)",
		node_info_vulnerabilities=None,
		node_irs="REF_158(uint256) -> user.totalDynamicCommissionWithdrawAmount
REF_159(uint256) -> user.totalDynamicCommissionWithdrawAmount
TMP_\
237(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_159', 'avaliableDCB'] 
REF_158 (\
->user) := TMP_237(uint256)",
		node_source_code_lines="[617]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	365 -> 366	[key=0,
		edge_type=next,
		label=Next];
	367	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.totalWithdrawAmount = user.totalWithdrawAmount.add(avaliableWithdrawAmount)

IRs:
REF_161(\
uint256) -> user.totalWithdrawAmount
REF_162(uint256) -> user.totalWithdrawAmount
TMP_238(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_162', 'avaliableWithdrawAmount'] 
REF_161 (->user) := TMP_238(uint256)",
		node_expression="user.totalWithdrawAmount = user.totalWithdrawAmount.add(avaliableWithdrawAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_161(uint256) -> user.totalWithdrawAmount
REF_162(uint256) -> user.totalWithdrawAmount
TMP_238(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_162', 'avaliableWithdrawAmount'] 
REF_161 (->user) := TMP_238(\
uint256)",
		node_source_code_lines="[618]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	366 -> 367	[key=0,
		edge_type=next,
		label=Next];
	368	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
totalStaticCommissionWithdrawAmount = totalStaticCommissionWithdrawAmount.add(avaliableSCB)

\
IRs:
TMP_239(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalStaticCommissionWithdrawAmount', '\
avaliableSCB'] 
totalStaticCommissionWithdrawAmount(uint256) := TMP_239(uint256)",
		node_expression="totalStaticCommissionWithdrawAmount = totalStaticCommissionWithdrawAmount.add(avaliableSCB)",
		node_info_vulnerabilities=None,
		node_irs="TMP_239(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalStaticCommissionWithdrawAmount', '\
avaliableSCB'] 
totalStaticCommissionWithdrawAmount(uint256) := TMP_239(uint256)",
		node_source_code_lines="[619]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	367 -> 368	[key=0,
		edge_type=next,
		label=Next];
	369	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
totalDynamicCommissionWithdrawAmount = totalDynamicCommissionWithdrawAmount.add(avaliableDCB)

\
IRs:
TMP_240(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalDynamicCommissionWithdrawAmount', '\
avaliableDCB'] 
totalDynamicCommissionWithdrawAmount(uint256) := TMP_240(uint256)",
		node_expression="totalDynamicCommissionWithdrawAmount = totalDynamicCommissionWithdrawAmount.add(avaliableDCB)",
		node_info_vulnerabilities=None,
		node_irs="TMP_240(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalDynamicCommissionWithdrawAmount', '\
avaliableDCB'] 
totalDynamicCommissionWithdrawAmount(uint256) := TMP_240(uint256)",
		node_source_code_lines="[620]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	368 -> 369	[key=0,
		edge_type=next,
		label=Next];
	370	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
totalWithdrawAmount = totalWithdrawAmount.add(avaliableWithdrawAmount)

IRs:
TMP_241(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalWithdrawAmount', 'avaliableWithdrawAmount'] 
\
totalWithdrawAmount(uint256) := TMP_241(uint256)",
		node_expression="totalWithdrawAmount = totalWithdrawAmount.add(avaliableWithdrawAmount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_241(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalWithdrawAmount', 'avaliableWithdrawAmount'] 
\
totalWithdrawAmount(uint256) := TMP_241(uint256)",
		node_source_code_lines="[621]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	369 -> 370	[key=0,
		edge_type=next,
		label=Next];
	371	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: IF

EXPRESSION:
avaliableSCB > 0

IRs:
TMP_242(bool) = avaliableSCB > 0
CONDITION TMP_242",
		node_expression="avaliableSCB > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_242(bool) = avaliableSCB > 0
CONDITION TMP_242",
		node_source_code_lines="[622]",
		node_type=IF,
		source_file="buggy_24.sol"];
	370 -> 371	[key=0,
		edge_type=next,
		label=Next];
	372	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
addStaticCommissionRecord(msg.sender,now,avaliableSCB)

IRs:
INTERNAL_CALL, FomoFeast.addStaticCommissionRecord(\
address,uint256,uint256)(msg.sender,now,avaliableSCB)",
		node_expression="addStaticCommissionRecord(msg.sender,now,avaliableSCB)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, FomoFeast.addStaticCommissionRecord(address,uint256,uint256)(msg.sender,now,avaliableSCB)",
		node_source_code_lines="[623]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	371 -> 372	[key=0,
		edge_type=if_true,
		label=True];
	373	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[622, 623, 624]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	371 -> 373	[key=0,
		edge_type=if_false,
		label=False];
	372 -> 373	[key=0,
		edge_type=next,
		label=Next];
	374	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(avaliableWithdrawAmount)

IRs:
Transfer dest:msg.sender value:avaliableWithdrawAmount",
		node_expression="msg.sender.transfer(avaliableWithdrawAmount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:msg.sender value:avaliableWithdrawAmount",
		node_source_code_lines="[625]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	373 -> 374	[key=0,
		edge_type=next,
		label=Next];
	374 -> 375	[key=0,
		edge_type=next,
		label=Next];
	376	[contract_name=FomoFeast,
		function_fullname="userWithdrawCommission()",
		label="buggy_24.sol_FomoFeast_userWithdrawCommission()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	376 -> 355	[key=0,
		edge_type=next,
		label=Next];
	377	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[628, 629, 630, 631]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	378	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_245(bool) = tx.origin == owner_txorigin7
\
TMP_246(None) = SOLIDITY_CALL require(bool)(TMP_245)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_245(bool) = tx.origin == owner_txorigin7
TMP_246(None) = SOLIDITY_CALL require(bool)(TMP_245)",
		node_source_code_lines="[629]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	377 -> 378	[key=0,
		edge_type=next,
		label=Next];
	379	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_168(None) -> to.call
REF_169(None) -> REF_168.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_168(None) -> to.call
REF_169(None) -> REF_168.value",
		node_source_code_lines="[630]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	378 -> 379	[key=0,
		edge_type=next,
		label=Next];
	380	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[628, 629, 630, 631]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	380 -> 377	[key=0,
		edge_type=next,
		label=Next];
	381	[contract_name=FomoFeast,
		function_fullname="engineerWithdraw()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[633, 634, 635, 636, 637, 638, 639, 640]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	388	[contract_name=FomoFeast,
		function_fullname="engineerWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyEngineer()

IRs:
MODIFIER_CALL, FomoFeast.onlyEngineer()()",
		node_expression="onlyEngineer()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, FomoFeast.onlyEngineer()()",
		node_source_code_lines="[633]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	381 -> 388	[key=0,
		edge_type=next,
		label=Next];
	382	[contract_name=FomoFeast,
		function_fullname="engineerWithdraw()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
avaliableAmount = engineerFunds

IRs:
avaliableAmount(uint256) := engineerFunds(uint256)",
		node_expression="avaliableAmount = engineerFunds",
		node_info_vulnerabilities=None,
		node_irs="avaliableAmount(uint256) := engineerFunds(uint256)",
		node_source_code_lines="[634]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	383	[contract_name=FomoFeast,
		function_fullname="engineerWithdraw()",
		label="Node Type: IF

EXPRESSION:
avaliableAmount > 0

IRs:
TMP_248(bool) = avaliableAmount > 0
CONDITION TMP_248",
		node_expression="avaliableAmount > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_248(bool) = avaliableAmount > 0
CONDITION TMP_248",
		node_source_code_lines="[635]",
		node_type=IF,
		source_file="buggy_24.sol"];
	382 -> 383	[key=0,
		edge_type=next,
		label=Next];
	384	[contract_name=FomoFeast,
		function_fullname="engineerWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
engineerFunds = 0

IRs:
engineerFunds(uint256) := 0(uint256)",
		node_expression="engineerFunds = 0",
		node_info_vulnerabilities=None,
		node_irs="engineerFunds(uint256) := 0(uint256)",
		node_source_code_lines="[636]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	383 -> 384	[key=0,
		edge_type=if_true,
		label=True];
	387	[contract_name=FomoFeast,
		function_fullname="engineerWithdraw()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[635, 636, 637, 638, 639]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	383 -> 387	[key=0,
		edge_type=if_false,
		label=False];
	385	[contract_name=FomoFeast,
		function_fullname="engineerWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
engineerWithdrawAmount = engineerWithdrawAmount.add(avaliableAmount)

IRs:
TMP_249(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['engineerWithdrawAmount', 'avaliableAmount'] 
engineerWithdrawAmount(\
uint256) := TMP_249(uint256)",
		node_expression="engineerWithdrawAmount = engineerWithdrawAmount.add(avaliableAmount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_249(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['engineerWithdrawAmount', 'avaliableAmount'] 
\
engineerWithdrawAmount(uint256) := TMP_249(uint256)",
		node_source_code_lines="[637]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	384 -> 385	[key=0,
		edge_type=next,
		label=Next];
	386	[contract_name=FomoFeast,
		function_fullname="engineerWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(avaliableAmount)

IRs:
Transfer dest:msg.sender value:avaliableAmount",
		node_expression="msg.sender.transfer(avaliableAmount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:msg.sender value:avaliableAmount",
		node_source_code_lines="[638]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	385 -> 386	[key=0,
		edge_type=next,
		label=Next];
	386 -> 387	[key=0,
		edge_type=next,
		label=Next];
	388 -> 382	[key=0,
		edge_type=next,
		label=Next];
	389	[contract_name=FomoFeast,
		function_fullname="engineerWithdraw()",
		label="buggy_24.sol_FomoFeast_engineerWithdraw()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[633, 634, 635, 636, 637, 638, 639, 640]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	389 -> 381	[key=0,
		edge_type=next,
		label=Next];
	390	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[641, 642, 643, 644]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	391	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_252(bool) = tx.origin == owner_txorigin23
\
TMP_253(None) = SOLIDITY_CALL require(bool)(TMP_252)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_252(bool) = tx.origin == owner_txorigin23
TMP_253(None) = SOLIDITY_CALL require(bool)(TMP_252)",
		node_source_code_lines="[642]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	390 -> 391	[key=0,
		edge_type=next,
		label=Next];
	392	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_172(None) -> to.call
REF_173(None) -> REF_172.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_172(None) -> to.call
REF_173(None) -> REF_172.value",
		node_source_code_lines="[643]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	391 -> 392	[key=0,
		edge_type=next,
		label=Next];
	393	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[641, 642, 643, 644]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	393 -> 390	[key=0,
		edge_type=next,
		label=Next];
	394	[contract_name=FomoFeast,
		function_fullname="operatorWithdraw()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[646, 647, 648, 649, 650, 651, 652, 653]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	401	[contract_name=FomoFeast,
		function_fullname="operatorWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_source_code_lines="[646]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	394 -> 401	[key=0,
		edge_type=next,
		label=Next];
	395	[contract_name=FomoFeast,
		function_fullname="operatorWithdraw()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
avaliableAmount = operatorFunds

IRs:
avaliableAmount(uint256) := operatorFunds(uint256)",
		node_expression="avaliableAmount = operatorFunds",
		node_info_vulnerabilities=None,
		node_irs="avaliableAmount(uint256) := operatorFunds(uint256)",
		node_source_code_lines="[647]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	396	[contract_name=FomoFeast,
		function_fullname="operatorWithdraw()",
		label="Node Type: IF

EXPRESSION:
avaliableAmount > 0

IRs:
TMP_255(bool) = avaliableAmount > 0
CONDITION TMP_255",
		node_expression="avaliableAmount > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_255(bool) = avaliableAmount > 0
CONDITION TMP_255",
		node_source_code_lines="[648]",
		node_type=IF,
		source_file="buggy_24.sol"];
	395 -> 396	[key=0,
		edge_type=next,
		label=Next];
	397	[contract_name=FomoFeast,
		function_fullname="operatorWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
operatorFunds = 0

IRs:
operatorFunds(uint256) := 0(uint256)",
		node_expression="operatorFunds = 0",
		node_info_vulnerabilities=None,
		node_irs="operatorFunds(uint256) := 0(uint256)",
		node_source_code_lines="[649]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	396 -> 397	[key=0,
		edge_type=if_true,
		label=True];
	400	[contract_name=FomoFeast,
		function_fullname="operatorWithdraw()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[648, 649, 650, 651, 652]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	396 -> 400	[key=0,
		edge_type=if_false,
		label=False];
	398	[contract_name=FomoFeast,
		function_fullname="operatorWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
operatorWithdrawAmount = operatorWithdrawAmount.add(avaliableAmount)

IRs:
TMP_256(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['operatorWithdrawAmount', 'avaliableAmount'] 
operatorWithdrawAmount(\
uint256) := TMP_256(uint256)",
		node_expression="operatorWithdrawAmount = operatorWithdrawAmount.add(avaliableAmount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_256(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['operatorWithdrawAmount', 'avaliableAmount'] 
\
operatorWithdrawAmount(uint256) := TMP_256(uint256)",
		node_source_code_lines="[650]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	397 -> 398	[key=0,
		edge_type=next,
		label=Next];
	399	[contract_name=FomoFeast,
		function_fullname="operatorWithdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(avaliableAmount)

IRs:
Transfer dest:msg.sender value:avaliableAmount",
		node_expression="msg.sender.transfer(avaliableAmount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:msg.sender value:avaliableAmount",
		node_source_code_lines="[651]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	398 -> 399	[key=0,
		edge_type=next,
		label=Next];
	399 -> 400	[key=0,
		edge_type=next,
		label=Next];
	401 -> 395	[key=0,
		edge_type=next,
		label=Next];
	402	[contract_name=FomoFeast,
		function_fullname="operatorWithdraw()",
		label="buggy_24.sol_FomoFeast_operatorWithdraw()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[646, 647, 648, 649, 650, 651, 652, 653]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	402 -> 394	[key=0,
		edge_type=next,
		label=Next];
	403	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[654, 655, 656, 657]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	404	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_259(bool) = tx.origin == owner_txorigin14
\
TMP_260(None) = SOLIDITY_CALL require(bool)(TMP_259)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_259(bool) = tx.origin == owner_txorigin14
TMP_260(None) = SOLIDITY_CALL require(bool)(TMP_259)",
		node_source_code_lines="[655]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	403 -> 404	[key=0,
		edge_type=next,
		label=Next];
	405	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_261 = CONVERT this to address
REF_177 -> \
BALANCE TMP_261
Transfer dest:_recipient value:REF_177",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_261 = CONVERT this to address
REF_177 -> BALANCE TMP_261
Transfer dest:_recipient value:REF_177",
		node_source_code_lines="[656]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	404 -> 405	[key=0,
		edge_type=next,
		label=Next];
	406	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[654, 655, 656, 657]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	406 -> 403	[key=0,
		edge_type=next,
		label=Next];
	407	[contract_name=FomoFeast,
		function_fullname="getSummary()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[659, 660, 661, 662, 663, 664, 665, 666, 667]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	408	[contract_name=FomoFeast,
		function_fullname="getSummary()",
		label="Node Type: RETURN

EXPRESSION:
((address(this).balance,totalInvestCount,totalInvestAmount,totalStaticCommissionWithdrawAmount,totalDynamicCommissionWithdrawAmount,\
totalWithdrawAmount,totalUserCount,engineerFunds,engineerWithdrawAmount,operatorFunds,operatorWithdrawAmount))

IRs:
TMP_263 = CONVERT \
this to address
REF_178 -> BALANCE TMP_263
RETURN REF_178,totalInvestCount,totalInvestAmount,totalStaticCommissionWithdrawAmount,\
totalDynamicCommissionWithdrawAmount,totalWithdrawAmount,totalUserCount,engineerFunds,engineerWithdrawAmount,operatorFunds,operatorWithdrawAmount",
		node_expression="((address(this).balance,totalInvestCount,totalInvestAmount,totalStaticCommissionWithdrawAmount,totalDynamicCommissionWithdrawAmount,\
totalWithdrawAmount,totalUserCount,engineerFunds,engineerWithdrawAmount,operatorFunds,operatorWithdrawAmount))",
		node_info_vulnerabilities=None,
		node_irs="TMP_263 = CONVERT this to address
REF_178 -> BALANCE TMP_263
RETURN REF_178,totalInvestCount,totalInvestAmount,totalStaticCommissionWithdrawAmount,\
totalDynamicCommissionWithdrawAmount,totalWithdrawAmount,totalUserCount,engineerFunds,engineerWithdrawAmount,operatorFunds,operatorWithdrawAmount",
		node_source_code_lines="[660, 661, 662, 663, 664, 665, 666]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	407 -> 408	[key=0,
		edge_type=next,
		label=Next];
	409	[contract_name=FomoFeast,
		function_fullname="getSummary()",
		label="buggy_24.sol_FomoFeast_getSummary()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[659, 660, 661, 662, 663, 664, 665, 666, 667]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	409 -> 407	[key=0,
		edge_type=next,
		label=Next];
	410	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[668, 669, 670, 671]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	411	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_264(bool) = tx.origin == owner_txorigin30
\
TMP_265(None) = SOLIDITY_CALL require(bool)(TMP_264)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_264(bool) = tx.origin == owner_txorigin30
TMP_265(None) = SOLIDITY_CALL require(bool)(TMP_264)",
		node_source_code_lines="[669]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	410 -> 411	[key=0,
		edge_type=next,
		label=Next];
	412	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_266 = CONVERT this to address
REF_180 -> \
BALANCE TMP_266
Transfer dest:_recipient value:REF_180",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_266 = CONVERT this to address
REF_180 -> BALANCE TMP_266
Transfer dest:_recipient value:REF_180",
		node_source_code_lines="[670]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	411 -> 412	[key=0,
		edge_type=next,
		label=Next];
	413	[contract_name=FomoFeast,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_24.sol_FomoFeast_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[668, 669, 670, 671]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	413 -> 410	[key=0,
		edge_type=next,
		label=Next];
	414	[contract_name=FomoFeast,
		function_fullname="getUserByAddress(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	415	[contract_name=FomoFeast,
		function_fullname="getUserByAddress(address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user = userMapping[userAddress]

IRs:
REF_181(FomoFeast.User) -> userMapping[userAddress]
user(\
FomoFeast.User) := REF_181(FomoFeast.User)",
		node_expression="user = userMapping[userAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_181(FomoFeast.User) -> userMapping[userAddress]
user(FomoFeast.User) := REF_181(FomoFeast.User)",
		node_source_code_lines="[675]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	414 -> 415	[key=0,
		edge_type=next,
		label=Next];
	416	[contract_name=FomoFeast,
		function_fullname="getUserByAddress(address)",
		label="Node Type: RETURN

EXPRESSION:
((user.totalInvestCount,user.totalInvestAmount,user.totalStaticCommissionWithdrawAmount,user.totalDynamicCommissionWithdrawAmount,\
user.totalWithdrawAmount,user.downlineCount,user.nodeCount,user.totalDownlineInvestAmount,user.currentInvestTime,user.currentInvestAmount,\
user.currentInvestCycle,user.currentlevel,user.currentStaticCommissionRatio,user.staticCommissionBalance.add(getAvaliableStaticCommissionAmount(\
user)),user.dynamicCommissionBalance,user.calcDynamicCommissionAmount),user.sponsorAddress)

IRs:
REF_182(uint256) -> user.totalInvestCount
\
REF_183(uint256) -> user.totalInvestAmount
REF_184(uint256) -> user.totalStaticCommissionWithdrawAmount
REF_185(uint256) -> user.totalDynamicCommissionWithdrawAmount
\
REF_186(uint256) -> user.totalWithdrawAmount
REF_187(uint256) -> user.downlineCount
REF_188(uint256) -> user.nodeCount
REF_189(uint256) \
-> user.totalDownlineInvestAmount
REF_190(uint256) -> user.currentInvestTime
REF_191(uint256) -> user.currentInvestAmount
REF_192(\
uint256) -> user.currentInvestCycle
REF_193(uint256) -> user.currentlevel
REF_194(uint256) -> user.currentStaticCommissionRatio
\
REF_195(uint256) -> user.staticCommissionBalance
TMP_268(uint256) = INTERNAL_CALL, FomoFeast.getAvaliableStaticCommissionAmount(\
FomoFeast.User)(user)
TMP_269(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_195', '\
TMP_268'] 
REF_197(uint256) -> user.dynamicCommissionBalance
REF_198(uint256) -> user.calcDynamicCommissionAmount
REF_199(address) \
-> user.sponsorAddress
RETURN REF_182,REF_183,REF_184,REF_185,REF_186,REF_187,REF_188,REF_189,REF_190,REF_191,REF_192,REF_193,REF_\
194,TMP_269,REF_197,REF_198,REF_199",
		node_expression="((user.totalInvestCount,user.totalInvestAmount,user.totalStaticCommissionWithdrawAmount,user.totalDynamicCommissionWithdrawAmount,\
user.totalWithdrawAmount,user.downlineCount,user.nodeCount,user.totalDownlineInvestAmount,user.currentInvestTime,user.currentInvestAmount,\
user.currentInvestCycle,user.currentlevel,user.currentStaticCommissionRatio,user.staticCommissionBalance.add(getAvaliableStaticCommissionAmount(\
user)),user.dynamicCommissionBalance,user.calcDynamicCommissionAmount),user.sponsorAddress)",
		node_info_vulnerabilities=None,
		node_irs="REF_182(uint256) -> user.totalInvestCount
REF_183(uint256) -> user.totalInvestAmount
REF_184(uint256) -> user.totalStaticCommissionWithdrawAmount
\
REF_185(uint256) -> user.totalDynamicCommissionWithdrawAmount
REF_186(uint256) -> user.totalWithdrawAmount
REF_187(uint256) -> user.downlineCount
\
REF_188(uint256) -> user.nodeCount
REF_189(uint256) -> user.totalDownlineInvestAmount
REF_190(uint256) -> user.currentInvestTime
\
REF_191(uint256) -> user.currentInvestAmount
REF_192(uint256) -> user.currentInvestCycle
REF_193(uint256) -> user.currentlevel
REF_\
194(uint256) -> user.currentStaticCommissionRatio
REF_195(uint256) -> user.staticCommissionBalance
TMP_268(uint256) = INTERNAL_CALL, \
FomoFeast.getAvaliableStaticCommissionAmount(FomoFeast.User)(user)
TMP_269(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_195', 'TMP_268'] 
REF_197(uint256) -> user.dynamicCommissionBalance
REF_198(uint256) -> user.calcDynamicCommissionAmount
\
REF_199(address) -> user.sponsorAddress
RETURN REF_182,REF_183,REF_184,REF_185,REF_186,REF_187,REF_188,REF_189,REF_190,REF_191,REF_\
192,REF_193,REF_194,TMP_269,REF_197,REF_198,REF_199",
		node_source_code_lines="[676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	415 -> 416	[key=0,
		edge_type=next,
		label=Next];
	417	[contract_name=FomoFeast,
		function_fullname="getUserByAddress(address)",
		label="buggy_24.sol_FomoFeast_getUserByAddress(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	417 -> 414	[key=0,
		edge_type=next,
		label=Next];
	418	[contract_name=FomoFeast,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[690, 691, 692]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	419	[contract_name=FomoFeast,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_270(bool) = tx.origin == owner_txorigin8
\
TMP_271(None) = SOLIDITY_CALL require(bool)(TMP_270)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_270(bool) = tx.origin == owner_txorigin8
TMP_271(None) = SOLIDITY_CALL require(bool)(TMP_270)",
		node_source_code_lines="[691]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	418 -> 419	[key=0,
		edge_type=next,
		label=Next];
	420	[contract_name=FomoFeast,
		function_fullname="bug_txorigin8(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[690, 691, 692]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	420 -> 418	[key=0,
		edge_type=next,
		label=Next];
	421	[contract_name=FomoFeast,
		function_fullname="getUserByIndex(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[695, 696, 697]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	423	[contract_name=FomoFeast,
		function_fullname="getUserByIndex(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_source_code_lines="[694]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	421 -> 423	[key=0,
		edge_type=next,
		label=Next];
	422	[contract_name=FomoFeast,
		function_fullname="getUserByIndex(uint256)",
		label="Node Type: RETURN

EXPRESSION:
getUserByAddress(addressMapping[index])

IRs:
REF_200(address) -> addressMapping[index]
TUPLE_0(uint256[\
16],address) = INTERNAL_CALL, FomoFeast.getUserByAddress(address)(REF_200)
RETURN TUPLE_0",
		node_expression="getUserByAddress(addressMapping[index])",
		node_info_vulnerabilities=None,
		node_irs="REF_200(address) -> addressMapping[index]
TUPLE_0(uint256[16],address) = INTERNAL_CALL, FomoFeast.getUserByAddress(address)(REF_\
200)
RETURN TUPLE_0",
		node_source_code_lines="[696]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	423 -> 422	[key=0,
		edge_type=next,
		label=Next];
	424	[contract_name=FomoFeast,
		function_fullname="getUserByIndex(uint256)",
		label="buggy_24.sol_FomoFeast_getUserByIndex(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[694, 695, 696, 697]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	424 -> 421	[key=0,
		edge_type=next,
		label=Next];
	425	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[698, 699, 700, 701]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	426	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_273(bool) = tx.origin == owner_txorigin39
\
TMP_274(None) = SOLIDITY_CALL require(bool)(TMP_273)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_273(bool) = tx.origin == owner_txorigin39
TMP_274(None) = SOLIDITY_CALL require(bool)(TMP_273)",
		node_source_code_lines="[699]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	425 -> 426	[key=0,
		edge_type=next,
		label=Next];
	427	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_201(None) -> to.call
REF_202(None) -> REF_201.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_201(None) -> to.call
REF_202(None) -> REF_201.value",
		node_source_code_lines="[700]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	426 -> 427	[key=0,
		edge_type=next,
		label=Next];
	428	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[698, 699, 700, 701]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	428 -> 425	[key=0,
		edge_type=next,
		label=Next];
	429	[contract_name=FomoFeast,
		function_fullname="getInvestRecords(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	430	[contract_name=FomoFeast,
		function_fullname="getInvestRecords(address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
records = investRecordMapping[userAddress]

IRs:
REF_203(FomoFeast.InvestRecord[9]) -> investRecordMapping[\
userAddress]
records(FomoFeast.InvestRecord[9]) := REF_203(FomoFeast.InvestRecord[9])",
		node_expression="records = investRecordMapping[userAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_203(FomoFeast.InvestRecord[9]) -> investRecordMapping[userAddress]
records(FomoFeast.InvestRecord[9]) := REF_203(FomoFeast.InvestRecord[\
9])",
		node_source_code_lines="[712]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	429 -> 430	[key=0,
		edge_type=next,
		label=Next];
	431	[contract_name=FomoFeast,
		function_fullname="getInvestRecords(address)",
		label="Node Type: RETURN

EXPRESSION:
((records[0].time,records[0].amount,records[0].cycle),(records[1].time,records[1].amount,records[\
1].cycle),(records[2].time,records[2].amount,records[2].cycle),(records[3].time,records[3].amount,records[3].cycle),(records[4].time,\
records[4].amount,records[4].cycle),(records[5].time,records[5].amount,records[5].cycle),(records[6].time,records[6].amount,records[\
6].cycle),(records[7].time,records[7].amount,records[7].cycle),(records[8].time,records[8].amount,records[8].cycle))

IRs:
REF_204(\
FomoFeast.InvestRecord) -> records[0]
REF_205(uint256) -> REF_204.time
REF_206(FomoFeast.InvestRecord) -> records[0]
REF_207(uint256) \
-> REF_206.amount
REF_208(FomoFeast.InvestRecord) -> records[0]
REF_209(uint256) -> REF_208.cycle
REF_210(FomoFeast.InvestRecord) \
-> records[1]
REF_211(uint256) -> REF_210.time
REF_212(FomoFeast.InvestRecord) -> records[1]
REF_213(uint256) -> REF_212.amount
\
REF_214(FomoFeast.InvestRecord) -> records[1]
REF_215(uint256) -> REF_214.cycle
REF_216(FomoFeast.InvestRecord) -> records[2]
REF_\
217(uint256) -> REF_216.time
REF_218(FomoFeast.InvestRecord) -> records[2]
REF_219(uint256) -> REF_218.amount
REF_220(FomoFeast.InvestRecord) \
-> records[2]
REF_221(uint256) -> REF_220.cycle
REF_222(FomoFeast.InvestRecord) -> records[3]
REF_223(uint256) -> REF_222.time
REF_\
224(FomoFeast.InvestRecord) -> records[3]
REF_225(uint256) -> REF_224.amount
REF_226(FomoFeast.InvestRecord) -> records[3]
REF_227(\
uint256) -> REF_226.cycle
REF_228(FomoFeast.InvestRecord) -> records[4]
REF_229(uint256) -> REF_228.time
REF_230(FomoFeast.InvestRecord) \
-> records[4]
REF_231(uint256) -> REF_230.amount
REF_232(FomoFeast.InvestRecord) -> records[4]
REF_233(uint256) -> REF_232.cycle
\
REF_234(FomoFeast.InvestRecord) -> records[5]
REF_235(uint256) -> REF_234.time
REF_236(FomoFeast.InvestRecord) -> records[5]
REF_\
237(uint256) -> REF_236.amount
REF_238(FomoFeast.InvestRecord) -> records[5]
REF_239(uint256) -> REF_238.cycle
REF_240(FomoFeast.InvestRecord) \
-> records[6]
REF_241(uint256) -> REF_240.time
REF_242(FomoFeast.InvestRecord) -> records[6]
REF_243(uint256) -> REF_242.amount
\
REF_244(FomoFeast.InvestRecord) -> records[6]
REF_245(uint256) -> REF_244.cycle
REF_246(FomoFeast.InvestRecord) -> records[7]
REF_\
247(uint256) -> REF_246.time
REF_248(FomoFeast.InvestRecord) -> records[7]
REF_249(uint256) -> REF_248.amount
REF_250(FomoFeast.InvestRecord) \
-> records[7]
REF_251(uint256) -> REF_250.cycle
REF_252(FomoFeast.InvestRecord) -> records[8]
REF_253(uint256) -> REF_252.time
REF_\
254(FomoFeast.InvestRecord) -> records[8]
REF_255(uint256) -> REF_254.amount
REF_256(FomoFeast.InvestRecord) -> records[8]
REF_257(\
uint256) -> REF_256.cycle
RETURN REF_205,REF_207,REF_209,REF_211,REF_213,REF_215,REF_217,REF_219,REF_221,REF_223,REF_225,REF_227,\
REF_229,REF_231,REF_233,REF_235,REF_237,REF_239,REF_241,REF_243,REF_245,REF_247,REF_249,REF_251,REF_253,REF_255,REF_257",
		node_expression="((records[0].time,records[0].amount,records[0].cycle),(records[1].time,records[1].amount,records[1].cycle),(records[2].time,records[\
2].amount,records[2].cycle),(records[3].time,records[3].amount,records[3].cycle),(records[4].time,records[4].amount,records[4].cycle),(\
records[5].time,records[5].amount,records[5].cycle),(records[6].time,records[6].amount,records[6].cycle),(records[7].time,records[\
7].amount,records[7].cycle),(records[8].time,records[8].amount,records[8].cycle))",
		node_info_vulnerabilities=None,
		node_irs="REF_204(FomoFeast.InvestRecord) -> records[0]
REF_205(uint256) -> REF_204.time
REF_206(FomoFeast.InvestRecord) -> records[0]
REF_\
207(uint256) -> REF_206.amount
REF_208(FomoFeast.InvestRecord) -> records[0]
REF_209(uint256) -> REF_208.cycle
REF_210(FomoFeast.InvestRecord) \
-> records[1]
REF_211(uint256) -> REF_210.time
REF_212(FomoFeast.InvestRecord) -> records[1]
REF_213(uint256) -> REF_212.amount
\
REF_214(FomoFeast.InvestRecord) -> records[1]
REF_215(uint256) -> REF_214.cycle
REF_216(FomoFeast.InvestRecord) -> records[2]
REF_\
217(uint256) -> REF_216.time
REF_218(FomoFeast.InvestRecord) -> records[2]
REF_219(uint256) -> REF_218.amount
REF_220(FomoFeast.InvestRecord) \
-> records[2]
REF_221(uint256) -> REF_220.cycle
REF_222(FomoFeast.InvestRecord) -> records[3]
REF_223(uint256) -> REF_222.time
REF_\
224(FomoFeast.InvestRecord) -> records[3]
REF_225(uint256) -> REF_224.amount
REF_226(FomoFeast.InvestRecord) -> records[3]
REF_227(\
uint256) -> REF_226.cycle
REF_228(FomoFeast.InvestRecord) -> records[4]
REF_229(uint256) -> REF_228.time
REF_230(FomoFeast.InvestRecord) \
-> records[4]
REF_231(uint256) -> REF_230.amount
REF_232(FomoFeast.InvestRecord) -> records[4]
REF_233(uint256) -> REF_232.cycle
\
REF_234(FomoFeast.InvestRecord) -> records[5]
REF_235(uint256) -> REF_234.time
REF_236(FomoFeast.InvestRecord) -> records[5]
REF_\
237(uint256) -> REF_236.amount
REF_238(FomoFeast.InvestRecord) -> records[5]
REF_239(uint256) -> REF_238.cycle
REF_240(FomoFeast.InvestRecord) \
-> records[6]
REF_241(uint256) -> REF_240.time
REF_242(FomoFeast.InvestRecord) -> records[6]
REF_243(uint256) -> REF_242.amount
\
REF_244(FomoFeast.InvestRecord) -> records[6]
REF_245(uint256) -> REF_244.cycle
REF_246(FomoFeast.InvestRecord) -> records[7]
REF_\
247(uint256) -> REF_246.time
REF_248(FomoFeast.InvestRecord) -> records[7]
REF_249(uint256) -> REF_248.amount
REF_250(FomoFeast.InvestRecord) \
-> records[7]
REF_251(uint256) -> REF_250.cycle
REF_252(FomoFeast.InvestRecord) -> records[8]
REF_253(uint256) -> REF_252.time
REF_\
254(FomoFeast.InvestRecord) -> records[8]
REF_255(uint256) -> REF_254.amount
REF_256(FomoFeast.InvestRecord) -> records[8]
REF_257(\
uint256) -> REF_256.cycle
RETURN REF_205,REF_207,REF_209,REF_211,REF_213,REF_215,REF_217,REF_219,REF_221,REF_223,REF_225,REF_227,\
REF_229,REF_231,REF_233,REF_235,REF_237,REF_239,REF_241,REF_243,REF_245,REF_247,REF_249,REF_251,REF_253,REF_255,REF_257",
		node_source_code_lines="[713, 714, 715, 716, 717, 718, 719, 720, 721]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	430 -> 431	[key=0,
		edge_type=next,
		label=Next];
	432	[contract_name=FomoFeast,
		function_fullname="getInvestRecords(address)",
		label="buggy_24.sol_FomoFeast_getInvestRecords(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	432 -> 429	[key=0,
		edge_type=next,
		label=Next];
	433	[contract_name=FomoFeast,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[723, 724, 725]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	434	[contract_name=FomoFeast,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_276(bool) = tx.origin == owner_txorigin36
\
TMP_277(None) = SOLIDITY_CALL require(bool)(TMP_276)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_276(bool) = tx.origin == owner_txorigin36
TMP_277(None) = SOLIDITY_CALL require(bool)(TMP_276)",
		node_source_code_lines="[724]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	433 -> 434	[key=0,
		edge_type=next,
		label=Next];
	435	[contract_name=FomoFeast,
		function_fullname="bug_txorigin36(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[723, 724, 725]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	435 -> 433	[key=0,
		edge_type=next,
		label=Next];
	436	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRecords(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	437	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRecords(address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
records = staticCommissionRecordMapping[userAddress]

IRs:
REF_258(FomoFeast.CommissionRecord[\
9]) -> staticCommissionRecordMapping[userAddress]
records(FomoFeast.CommissionRecord[9]) := REF_258(FomoFeast.CommissionRecord[9])",
		node_expression="records = staticCommissionRecordMapping[userAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_258(FomoFeast.CommissionRecord[9]) -> staticCommissionRecordMapping[userAddress]
records(FomoFeast.CommissionRecord[9]) := REF_\
258(FomoFeast.CommissionRecord[9])",
		node_source_code_lines="[736]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	436 -> 437	[key=0,
		edge_type=next,
		label=Next];
	438	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRecords(address)",
		label="Node Type: RETURN

EXPRESSION:
((records[0].time,records[0].amount),(records[1].time,records[1].amount),(records[2].time,records[\
2].amount),(records[3].time,records[3].amount),(records[4].time,records[4].amount),(records[5].time,records[5].amount),(records[\
6].time,records[6].amount),(records[7].time,records[7].amount),(records[8].time,records[8].amount))

IRs:
REF_259(FomoFeast.CommissionRecord) \
-> records[0]
REF_260(uint256) -> REF_259.time
REF_261(FomoFeast.CommissionRecord) -> records[0]
REF_262(uint256) -> REF_261.amount
\
REF_263(FomoFeast.CommissionRecord) -> records[1]
REF_264(uint256) -> REF_263.time
REF_265(FomoFeast.CommissionRecord) -> records[\
1]
REF_266(uint256) -> REF_265.amount
REF_267(FomoFeast.CommissionRecord) -> records[2]
REF_268(uint256) -> REF_267.time
REF_269(\
FomoFeast.CommissionRecord) -> records[2]
REF_270(uint256) -> REF_269.amount
REF_271(FomoFeast.CommissionRecord) -> records[3]
REF_\
272(uint256) -> REF_271.time
REF_273(FomoFeast.CommissionRecord) -> records[3]
REF_274(uint256) -> REF_273.amount
REF_275(FomoFeast.CommissionRecord) \
-> records[4]
REF_276(uint256) -> REF_275.time
REF_277(FomoFeast.CommissionRecord) -> records[4]
REF_278(uint256) -> REF_277.amount
\
REF_279(FomoFeast.CommissionRecord) -> records[5]
REF_280(uint256) -> REF_279.time
REF_281(FomoFeast.CommissionRecord) -> records[\
5]
REF_282(uint256) -> REF_281.amount
REF_283(FomoFeast.CommissionRecord) -> records[6]
REF_284(uint256) -> REF_283.time
REF_285(\
FomoFeast.CommissionRecord) -> records[6]
REF_286(uint256) -> REF_285.amount
REF_287(FomoFeast.CommissionRecord) -> records[7]
REF_\
288(uint256) -> REF_287.time
REF_289(FomoFeast.CommissionRecord) -> records[7]
REF_290(uint256) -> REF_289.amount
REF_291(FomoFeast.CommissionRecord) \
-> records[8]
REF_292(uint256) -> REF_291.time
REF_293(FomoFeast.CommissionRecord) -> records[8]
REF_294(uint256) -> REF_293.amount
\
RETURN REF_260,REF_262,REF_264,REF_266,REF_268,REF_270,REF_272,REF_274,REF_276,REF_278,REF_280,REF_282,REF_284,REF_286,REF_288,REF_\
290,REF_292,REF_294",
		node_expression="((records[0].time,records[0].amount),(records[1].time,records[1].amount),(records[2].time,records[2].amount),(records[3].time,records[\
3].amount),(records[4].time,records[4].amount),(records[5].time,records[5].amount),(records[6].time,records[6].amount),(records[\
7].time,records[7].amount),(records[8].time,records[8].amount))",
		node_info_vulnerabilities=None,
		node_irs="REF_259(FomoFeast.CommissionRecord) -> records[0]
REF_260(uint256) -> REF_259.time
REF_261(FomoFeast.CommissionRecord) -> records[\
0]
REF_262(uint256) -> REF_261.amount
REF_263(FomoFeast.CommissionRecord) -> records[1]
REF_264(uint256) -> REF_263.time
REF_265(\
FomoFeast.CommissionRecord) -> records[1]
REF_266(uint256) -> REF_265.amount
REF_267(FomoFeast.CommissionRecord) -> records[2]
REF_\
268(uint256) -> REF_267.time
REF_269(FomoFeast.CommissionRecord) -> records[2]
REF_270(uint256) -> REF_269.amount
REF_271(FomoFeast.CommissionRecord) \
-> records[3]
REF_272(uint256) -> REF_271.time
REF_273(FomoFeast.CommissionRecord) -> records[3]
REF_274(uint256) -> REF_273.amount
\
REF_275(FomoFeast.CommissionRecord) -> records[4]
REF_276(uint256) -> REF_275.time
REF_277(FomoFeast.CommissionRecord) -> records[\
4]
REF_278(uint256) -> REF_277.amount
REF_279(FomoFeast.CommissionRecord) -> records[5]
REF_280(uint256) -> REF_279.time
REF_281(\
FomoFeast.CommissionRecord) -> records[5]
REF_282(uint256) -> REF_281.amount
REF_283(FomoFeast.CommissionRecord) -> records[6]
REF_\
284(uint256) -> REF_283.time
REF_285(FomoFeast.CommissionRecord) -> records[6]
REF_286(uint256) -> REF_285.amount
REF_287(FomoFeast.CommissionRecord) \
-> records[7]
REF_288(uint256) -> REF_287.time
REF_289(FomoFeast.CommissionRecord) -> records[7]
REF_290(uint256) -> REF_289.amount
\
REF_291(FomoFeast.CommissionRecord) -> records[8]
REF_292(uint256) -> REF_291.time
REF_293(FomoFeast.CommissionRecord) -> records[\
8]
REF_294(uint256) -> REF_293.amount
RETURN REF_260,REF_262,REF_264,REF_266,REF_268,REF_270,REF_272,REF_274,REF_276,REF_278,REF_\
280,REF_282,REF_284,REF_286,REF_288,REF_290,REF_292,REF_294",
		node_source_code_lines="[737, 738, 739, 740, 741, 742, 743, 744, 745]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	437 -> 438	[key=0,
		edge_type=next,
		label=Next];
	439	[contract_name=FomoFeast,
		function_fullname="getStaticCommissionRecords(address)",
		label="buggy_24.sol_FomoFeast_getStaticCommissionRecords(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	439 -> 436	[key=0,
		edge_type=next,
		label=Next];
	440	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[747, 748, 749, 750]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	441	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_278(bool) = tx.origin == owner_txorigin35
\
TMP_279(None) = SOLIDITY_CALL require(bool)(TMP_278)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_278(bool) = tx.origin == owner_txorigin35
TMP_279(None) = SOLIDITY_CALL require(bool)(TMP_278)",
		node_source_code_lines="[748]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	440 -> 441	[key=0,
		edge_type=next,
		label=Next];
	442	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_295(None) -> to.call
REF_296(None) -> REF_295.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_295(None) -> to.call
REF_296(None) -> REF_295.value",
		node_source_code_lines="[749]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	441 -> 442	[key=0,
		edge_type=next,
		label=Next];
	443	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[747, 748, 749, 750]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	443 -> 440	[key=0,
		edge_type=next,
		label=Next];
	444	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRecords(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	445	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRecords(address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
records = dynamicCommissionRecordMapping[userAddress]

IRs:
REF_297(FomoFeast.CommissionRecord[\
9]) -> dynamicCommissionRecordMapping[userAddress]
records(FomoFeast.CommissionRecord[9]) := REF_297(FomoFeast.CommissionRecord[\
9])",
		node_expression="records = dynamicCommissionRecordMapping[userAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_297(FomoFeast.CommissionRecord[9]) -> dynamicCommissionRecordMapping[userAddress]
records(FomoFeast.CommissionRecord[9]) := \
REF_297(FomoFeast.CommissionRecord[9])",
		node_source_code_lines="[761]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	444 -> 445	[key=0,
		edge_type=next,
		label=Next];
	446	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRecords(address)",
		label="Node Type: RETURN

EXPRESSION:
((records[0].time,records[0].amount),(records[1].time,records[1].amount),(records[2].time,records[\
2].amount),(records[3].time,records[3].amount),(records[4].time,records[4].amount),(records[5].time,records[5].amount),(records[\
6].time,records[6].amount),(records[7].time,records[7].amount),(records[8].time,records[8].amount))

IRs:
REF_298(FomoFeast.CommissionRecord) \
-> records[0]
REF_299(uint256) -> REF_298.time
REF_300(FomoFeast.CommissionRecord) -> records[0]
REF_301(uint256) -> REF_300.amount
\
REF_302(FomoFeast.CommissionRecord) -> records[1]
REF_303(uint256) -> REF_302.time
REF_304(FomoFeast.CommissionRecord) -> records[\
1]
REF_305(uint256) -> REF_304.amount
REF_306(FomoFeast.CommissionRecord) -> records[2]
REF_307(uint256) -> REF_306.time
REF_308(\
FomoFeast.CommissionRecord) -> records[2]
REF_309(uint256) -> REF_308.amount
REF_310(FomoFeast.CommissionRecord) -> records[3]
REF_\
311(uint256) -> REF_310.time
REF_312(FomoFeast.CommissionRecord) -> records[3]
REF_313(uint256) -> REF_312.amount
REF_314(FomoFeast.CommissionRecord) \
-> records[4]
REF_315(uint256) -> REF_314.time
REF_316(FomoFeast.CommissionRecord) -> records[4]
REF_317(uint256) -> REF_316.amount
\
REF_318(FomoFeast.CommissionRecord) -> records[5]
REF_319(uint256) -> REF_318.time
REF_320(FomoFeast.CommissionRecord) -> records[\
5]
REF_321(uint256) -> REF_320.amount
REF_322(FomoFeast.CommissionRecord) -> records[6]
REF_323(uint256) -> REF_322.time
REF_324(\
FomoFeast.CommissionRecord) -> records[6]
REF_325(uint256) -> REF_324.amount
REF_326(FomoFeast.CommissionRecord) -> records[7]
REF_\
327(uint256) -> REF_326.time
REF_328(FomoFeast.CommissionRecord) -> records[7]
REF_329(uint256) -> REF_328.amount
REF_330(FomoFeast.CommissionRecord) \
-> records[8]
REF_331(uint256) -> REF_330.time
REF_332(FomoFeast.CommissionRecord) -> records[8]
REF_333(uint256) -> REF_332.amount
\
RETURN REF_299,REF_301,REF_303,REF_305,REF_307,REF_309,REF_311,REF_313,REF_315,REF_317,REF_319,REF_321,REF_323,REF_325,REF_327,REF_\
329,REF_331,REF_333",
		node_expression="((records[0].time,records[0].amount),(records[1].time,records[1].amount),(records[2].time,records[2].amount),(records[3].time,records[\
3].amount),(records[4].time,records[4].amount),(records[5].time,records[5].amount),(records[6].time,records[6].amount),(records[\
7].time,records[7].amount),(records[8].time,records[8].amount))",
		node_info_vulnerabilities=None,
		node_irs="REF_298(FomoFeast.CommissionRecord) -> records[0]
REF_299(uint256) -> REF_298.time
REF_300(FomoFeast.CommissionRecord) -> records[\
0]
REF_301(uint256) -> REF_300.amount
REF_302(FomoFeast.CommissionRecord) -> records[1]
REF_303(uint256) -> REF_302.time
REF_304(\
FomoFeast.CommissionRecord) -> records[1]
REF_305(uint256) -> REF_304.amount
REF_306(FomoFeast.CommissionRecord) -> records[2]
REF_\
307(uint256) -> REF_306.time
REF_308(FomoFeast.CommissionRecord) -> records[2]
REF_309(uint256) -> REF_308.amount
REF_310(FomoFeast.CommissionRecord) \
-> records[3]
REF_311(uint256) -> REF_310.time
REF_312(FomoFeast.CommissionRecord) -> records[3]
REF_313(uint256) -> REF_312.amount
\
REF_314(FomoFeast.CommissionRecord) -> records[4]
REF_315(uint256) -> REF_314.time
REF_316(FomoFeast.CommissionRecord) -> records[\
4]
REF_317(uint256) -> REF_316.amount
REF_318(FomoFeast.CommissionRecord) -> records[5]
REF_319(uint256) -> REF_318.time
REF_320(\
FomoFeast.CommissionRecord) -> records[5]
REF_321(uint256) -> REF_320.amount
REF_322(FomoFeast.CommissionRecord) -> records[6]
REF_\
323(uint256) -> REF_322.time
REF_324(FomoFeast.CommissionRecord) -> records[6]
REF_325(uint256) -> REF_324.amount
REF_326(FomoFeast.CommissionRecord) \
-> records[7]
REF_327(uint256) -> REF_326.time
REF_328(FomoFeast.CommissionRecord) -> records[7]
REF_329(uint256) -> REF_328.amount
\
REF_330(FomoFeast.CommissionRecord) -> records[8]
REF_331(uint256) -> REF_330.time
REF_332(FomoFeast.CommissionRecord) -> records[\
8]
REF_333(uint256) -> REF_332.amount
RETURN REF_299,REF_301,REF_303,REF_305,REF_307,REF_309,REF_311,REF_313,REF_315,REF_317,REF_\
319,REF_321,REF_323,REF_325,REF_327,REF_329,REF_331,REF_333",
		node_source_code_lines="[762, 763, 764, 765, 766, 767, 768, 769, 770]",
		node_type=RETURN,
		source_file="buggy_24.sol"];
	445 -> 446	[key=0,
		edge_type=next,
		label=Next];
	447	[contract_name=FomoFeast,
		function_fullname="getDynamicCommissionRecords(address)",
		label="buggy_24.sol_FomoFeast_getDynamicCommissionRecords(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	447 -> 444	[key=0,
		edge_type=next,
		label=Next];
	448	[contract_name=FomoFeast,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[772, 773, 774]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	449	[contract_name=FomoFeast,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_281(bool) = tx.origin == owner_txorigin40
\
TMP_282(None) = SOLIDITY_CALL require(bool)(TMP_281)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_281(bool) = tx.origin == owner_txorigin40
TMP_282(None) = SOLIDITY_CALL require(bool)(TMP_281)",
		node_source_code_lines="[773]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	448 -> 449	[key=0,
		edge_type=next,
		label=Next];
	450	[contract_name=FomoFeast,
		function_fullname="bug_txorigin40(address)",
		label="buggy_24.sol_FomoFeast_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[772, 773, 774]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	450 -> 448	[key=0,
		edge_type=next,
		label=Next];
	451	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, \
802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	508	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_source_code_lines="[776]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	451 -> 508	[key=0,
		edge_type=next,
		label=Next];
	452	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[777, 778, 779, 780]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	455	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF_LOOP

EXPRESSION:
i < totalUserCount

IRs:
TMP_283(bool) = i < totalUserCount
CONDITION TMP_283",
		node_expression="i < totalUserCount",
		node_info_vulnerabilities=None,
		node_irs="TMP_283(bool) = i < totalUserCount
CONDITION TMP_283",
		node_source_code_lines="[777]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	452 -> 455	[key=0,
		edge_type=next,
		label=Next];
	453	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[777, 778, 779, 780]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	461	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i_scope_0 = 0

IRs:
i_scope_0(uint256) := 0(uint256)",
		node_expression="i_scope_0 = 0",
		node_info_vulnerabilities=None,
		node_irs="i_scope_0(uint256) := 0(uint256)",
		node_source_code_lines="[782]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	453 -> 461	[key=0,
		edge_type=next,
		label=Next];
	454	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 0(uint256)",
		node_source_code_lines="[777]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	454 -> 452	[key=0,
		edge_type=next,
		label=Next];
	455 -> 453	[key=0,
		edge_type=if_false,
		label=False];
	456	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user = userMapping[addressMapping[i]]

IRs:
REF_334(address) -> addressMapping[i]
REF_335(FomoFeast.User) \
-> userMapping[REF_334]
user(FomoFeast.User) := REF_335(FomoFeast.User)",
		node_expression="user = userMapping[addressMapping[i]]",
		node_info_vulnerabilities=None,
		node_irs="REF_334(address) -> addressMapping[i]
REF_335(FomoFeast.User) -> userMapping[REF_334]
user(FomoFeast.User) := REF_335(FomoFeast.User)",
		node_source_code_lines="[778]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	455 -> 456	[key=0,
		edge_type=if_true,
		label=True];
	457	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
user.calcDynamicCommissionAmount = 0

IRs:
REF_336(uint256) -> user.calcDynamicCommissionAmount
\
REF_336 (->user) := 0(uint256)",
		node_expression="user.calcDynamicCommissionAmount = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_336(uint256) -> user.calcDynamicCommissionAmount
REF_336 (->user) := 0(uint256)",
		node_source_code_lines="[779]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	456 -> 457	[key=0,
		edge_type=next,
		label=Next];
	458	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1",
		node_expression="++ i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i + 1",
		node_source_code_lines="[777]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	457 -> 458	[key=0,
		edge_type=next,
		label=Next];
	458 -> 455	[key=0,
		edge_type=next,
		label=Next];
	459	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, \
808, 809, 810, 811, 812, 813, 814, 815]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	462	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF_LOOP

EXPRESSION:
i_scope_0 < totalUserCount

IRs:
TMP_284(bool) = i_scope_0 < totalUserCount
CONDITION TMP_284",
		node_expression="i_scope_0 < totalUserCount",
		node_info_vulnerabilities=None,
		node_irs="TMP_284(bool) = i_scope_0 < totalUserCount
CONDITION TMP_284",
		node_source_code_lines="[782]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	459 -> 462	[key=0,
		edge_type=next,
		label=Next];
	460	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, \
808, 809, 810, 811, 812, 813, 814, 815]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	499	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i_scope_2 = 0

IRs:
i_scope_2(uint256) := 0(uint256)",
		node_expression="i_scope_2 = 0",
		node_info_vulnerabilities=None,
		node_irs="i_scope_2(uint256) := 0(uint256)",
		node_source_code_lines="[817]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	460 -> 499	[key=0,
		edge_type=next,
		label=Next];
	461 -> 459	[key=0,
		edge_type=next,
		label=Next];
	462 -> 460	[key=0,
		edge_type=if_false,
		label=False];
	463	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user_scope_1 = userMapping[addressMapping[i_scope_0]]

IRs:
REF_337(address) -> addressMapping[\
i_scope_0]
REF_338(FomoFeast.User) -> userMapping[REF_337]
user_scope_1(FomoFeast.User) := REF_338(FomoFeast.User)",
		node_expression="user_scope_1 = userMapping[addressMapping[i_scope_0]]",
		node_info_vulnerabilities=None,
		node_irs="REF_337(address) -> addressMapping[i_scope_0]
REF_338(FomoFeast.User) -> userMapping[REF_337]
user_scope_1(FomoFeast.User) := REF_\
338(FomoFeast.User)",
		node_source_code_lines="[783]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	462 -> 463	[key=0,
		edge_type=if_true,
		label=True];
	464	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF

EXPRESSION:
user_scope_1.currentInvestAmount > 0

IRs:
REF_339(uint256) -> user_scope_1.currentInvestAmount
TMP_285(\
bool) = REF_339 > 0
CONDITION TMP_285",
		node_expression="user_scope_1.currentInvestAmount > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_339(uint256) -> user_scope_1.currentInvestAmount
TMP_285(bool) = REF_339 > 0
CONDITION TMP_285",
		node_source_code_lines="[784]",
		node_type=IF,
		source_file="buggy_24.sol"];
	463 -> 464	[key=0,
		edge_type=next,
		label=Next];
	465	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
commissionDays = now.sub(user_scope_1.currentInvestTime).div(ONE_DAY)

IRs:
REF_341(uint256) \
-> user_scope_1.currentInvestTime
TMP_286(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
now', 'REF_341'] 
TMP_287(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_286', '\
ONE_DAY'] 
commissionDays(uint256) := TMP_287(uint256)",
		node_expression="commissionDays = now.sub(user_scope_1.currentInvestTime).div(ONE_DAY)",
		node_info_vulnerabilities=None,
		node_irs="REF_341(uint256) -> user_scope_1.currentInvestTime
TMP_286(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,\
uint256), arguments:['now', 'REF_341'] 
TMP_287(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), \
arguments:['TMP_286', 'ONE_DAY'] 
commissionDays(uint256) := TMP_287(uint256)",
		node_source_code_lines="[785]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	464 -> 465	[key=0,
		edge_type=if_true,
		label=True];
	495	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, \
810, 811, 812, 813, 814]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	464 -> 495	[key=0,
		edge_type=if_false,
		label=False];
	466	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF

EXPRESSION:
commissionDays >= 1 && commissionDays <= user_scope_1.currentInvestCycle

IRs:
TMP_288(bool) = commissionDays >= \
1
REF_343(uint256) -> user_scope_1.currentInvestCycle
TMP_289(bool) = commissionDays <= REF_343
TMP_290(bool) = TMP_288 && TMP_289
\
CONDITION TMP_290",
		node_expression="commissionDays >= 1 && commissionDays <= user_scope_1.currentInvestCycle",
		node_info_vulnerabilities=None,
		node_irs="TMP_288(bool) = commissionDays >= 1
REF_343(uint256) -> user_scope_1.currentInvestCycle
TMP_289(bool) = commissionDays <= REF_343
\
TMP_290(bool) = TMP_288 && TMP_289
CONDITION TMP_290",
		node_source_code_lines="[786]",
		node_type=IF,
		source_file="buggy_24.sol"];
	465 -> 466	[key=0,
		edge_type=next,
		label=Next];
	467	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
depth = 1

IRs:
depth(uint256) := 1(uint256)",
		node_expression="depth = 1",
		node_info_vulnerabilities=None,
		node_irs="depth(uint256) := 1(uint256)",
		node_source_code_lines="[787]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	466 -> 467	[key=0,
		edge_type=if_true,
		label=True];
	494	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, \
812, 813]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	466 -> 494	[key=0,
		edge_type=if_false,
		label=False];
	468	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
addressWalker = user_scope_1.sponsorAddress

IRs:
REF_344(address) -> user_scope_1.sponsorAddress
\
addressWalker(address) := REF_344(address)",
		node_expression="addressWalker = user_scope_1.sponsorAddress",
		node_info_vulnerabilities=None,
		node_irs="REF_344(address) -> user_scope_1.sponsorAddress
addressWalker(address) := REF_344(address)",
		node_source_code_lines="[788]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	467 -> 468	[key=0,
		edge_type=next,
		label=Next];
	469	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	468 -> 469	[key=0,
		edge_type=next,
		label=Next];
	470	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF_LOOP

EXPRESSION:
addressWalker != GENESIS_USER_ADDRESS

IRs:
TMP_291(bool) = addressWalker != GENESIS_USER_ADDRESS
\
CONDITION TMP_291",
		node_expression="addressWalker != GENESIS_USER_ADDRESS",
		node_info_vulnerabilities=None,
		node_irs="TMP_291(bool) = addressWalker != GENESIS_USER_ADDRESS
CONDITION TMP_291",
		node_source_code_lines="[789]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	469 -> 470	[key=0,
		edge_type=next,
		label=Next];
	471	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
sponsor = userMapping[addressWalker]

IRs:
REF_345(FomoFeast.User) -> userMapping[addressWalker]
\
sponsor(FomoFeast.User) := REF_345(FomoFeast.User)",
		node_expression="sponsor = userMapping[addressWalker]",
		node_info_vulnerabilities=None,
		node_irs="REF_345(FomoFeast.User) -> userMapping[addressWalker]
sponsor(FomoFeast.User) := REF_345(FomoFeast.User)",
		node_source_code_lines="[790]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	470 -> 471	[key=0,
		edge_type=if_true,
		label=True];
	493	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	470 -> 493	[key=0,
		edge_type=if_false,
		label=False];
	472	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF

EXPRESSION:
sponsor.currentInvestAmount > 0

IRs:
REF_346(uint256) -> sponsor.currentInvestAmount
TMP_292(bool) = \
REF_346 > 0
CONDITION TMP_292",
		node_expression="sponsor.currentInvestAmount > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_346(uint256) -> sponsor.currentInvestAmount
TMP_292(bool) = REF_346 > 0
CONDITION TMP_292",
		node_source_code_lines="[791]",
		node_type=IF,
		source_file="buggy_24.sol"];
	471 -> 472	[key=0,
		edge_type=next,
		label=Next];
	473	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
dynamicCommissionRatio = getDynamicCommissionRatio(sponsor,depth)

IRs:
TMP_293(uint256) = \
INTERNAL_CALL, FomoFeast.getDynamicCommissionRatio(FomoFeast.User,uint256)(sponsor,depth)
dynamicCommissionRatio(uint256) := TMP_\
293(uint256)",
		node_expression="dynamicCommissionRatio = getDynamicCommissionRatio(sponsor,depth)",
		node_info_vulnerabilities=None,
		node_irs="TMP_293(uint256) = INTERNAL_CALL, FomoFeast.getDynamicCommissionRatio(FomoFeast.User,uint256)(sponsor,depth)
dynamicCommissionRatio(\
uint256) := TMP_293(uint256)",
		node_source_code_lines="[792]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	472 -> 473	[key=0,
		edge_type=if_true,
		label=True];
	490	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	472 -> 490	[key=0,
		edge_type=if_false,
		label=False];
	474	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF

EXPRESSION:
dynamicCommissionRatio > 0

IRs:
TMP_294(bool) = dynamicCommissionRatio > 0
CONDITION TMP_294",
		node_expression="dynamicCommissionRatio > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_294(bool) = dynamicCommissionRatio > 0
CONDITION TMP_294",
		node_source_code_lines="[793]",
		node_type=IF,
		source_file="buggy_24.sol"];
	473 -> 474	[key=0,
		edge_type=next,
		label=Next];
	475	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
dynamicCA = sponsor.currentInvestAmount

IRs:
REF_347(uint256) -> sponsor.currentInvestAmount
\
dynamicCA(uint256) := REF_347(uint256)",
		node_expression="dynamicCA = sponsor.currentInvestAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_347(uint256) -> sponsor.currentInvestAmount
dynamicCA(uint256) := REF_347(uint256)",
		node_source_code_lines="[794]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	474 -> 475	[key=0,
		edge_type=if_true,
		label=True];
	489	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	474 -> 489	[key=0,
		edge_type=if_false,
		label=False];
	476	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF

EXPRESSION:
dynamicCA > user_scope_1.currentInvestAmount

IRs:
REF_348(uint256) -> user_scope_1.currentInvestAmount
\
TMP_295(bool) = dynamicCA > REF_348
CONDITION TMP_295",
		node_expression="dynamicCA > user_scope_1.currentInvestAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_348(uint256) -> user_scope_1.currentInvestAmount
TMP_295(bool) = dynamicCA > REF_348
CONDITION TMP_295",
		node_source_code_lines="[795]",
		node_type=IF,
		source_file="buggy_24.sol"];
	475 -> 476	[key=0,
		edge_type=next,
		label=Next];
	477	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = user_scope_1.currentInvestAmount

IRs:
REF_349(uint256) -> user_scope_1.currentInvestAmount
\
dynamicCA(uint256) := REF_349(uint256)",
		node_expression="dynamicCA = user_scope_1.currentInvestAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_349(uint256) -> user_scope_1.currentInvestAmount
dynamicCA(uint256) := REF_349(uint256)",
		node_source_code_lines="[796]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	476 -> 477	[key=0,
		edge_type=if_true,
		label=True];
	478	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[795, 796, 797]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	476 -> 478	[key=0,
		edge_type=if_false,
		label=False];
	477 -> 478	[key=0,
		edge_type=next,
		label=Next];
	479	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.mul(user_scope_1.currentStaticCommissionRatio)

IRs:
REF_351(uint256) -> \
user_scope_1.currentStaticCommissionRatio
TMP_296(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), \
arguments:['dynamicCA', 'REF_351'] 
dynamicCA(uint256) := TMP_296(uint256)",
		node_expression="dynamicCA = dynamicCA.mul(user_scope_1.currentStaticCommissionRatio)",
		node_info_vulnerabilities=None,
		node_irs="REF_351(uint256) -> user_scope_1.currentStaticCommissionRatio
TMP_296(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(\
uint256,uint256), arguments:['dynamicCA', 'REF_351'] 
dynamicCA(uint256) := TMP_296(uint256)",
		node_source_code_lines="[798]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	478 -> 479	[key=0,
		edge_type=next,
		label=Next];
	480	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.mul(dynamicCommissionRatio)

IRs:
TMP_297(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', 'dynamicCommissionRatio'] 
dynamicCA(uint256) := TMP_297(\
uint256)",
		node_expression="dynamicCA = dynamicCA.mul(dynamicCommissionRatio)",
		node_info_vulnerabilities=None,
		node_irs="TMP_297(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', 'dynamicCommissionRatio'] 
\
dynamicCA(uint256) := TMP_297(uint256)",
		node_source_code_lines="[799]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	479 -> 480	[key=0,
		edge_type=next,
		label=Next];
	481	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF

EXPRESSION:
sponsor.currentlevel == 1

IRs:
REF_353(uint256) -> sponsor.currentlevel
TMP_298(bool) = REF_353 == 1
\
CONDITION TMP_298",
		node_expression="sponsor.currentlevel == 1",
		node_info_vulnerabilities=None,
		node_irs="REF_353(uint256) -> sponsor.currentlevel
TMP_298(bool) = REF_353 == 1
CONDITION TMP_298",
		node_source_code_lines="[800]",
		node_type=IF,
		source_file="buggy_24.sol"];
	480 -> 481	[key=0,
		edge_type=next,
		label=Next];
	482	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.mul(3).div(1000 * 100 * 10)

IRs:
TMP_299(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '3'] 
TMP_300(uint256) = 1000 * 100
TMP_301(uint256) = \
TMP_300 * 10
TMP_302(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_299', 'TMP_\
301'] 
dynamicCA(uint256) := TMP_302(uint256)",
		node_expression="dynamicCA = dynamicCA.mul(3).div(1000 * 100 * 10)",
		node_info_vulnerabilities=None,
		node_irs="TMP_299(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '3'] 
TMP_300(uint256) = \
1000 * 100
TMP_301(uint256) = TMP_300 * 10
TMP_302(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), \
arguments:['TMP_299', 'TMP_301'] 
dynamicCA(uint256) := TMP_302(uint256)",
		node_source_code_lines="[801]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	481 -> 482	[key=0,
		edge_type=if_true,
		label=True];
	483	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF

EXPRESSION:
sponsor.currentlevel == 2

IRs:
REF_356(uint256) -> sponsor.currentlevel
TMP_303(bool) = REF_356 == 2
\
CONDITION TMP_303",
		node_expression="sponsor.currentlevel == 2",
		node_info_vulnerabilities=None,
		node_irs="REF_356(uint256) -> sponsor.currentlevel
TMP_303(bool) = REF_356 == 2
CONDITION TMP_303",
		node_source_code_lines="[802]",
		node_type=IF,
		source_file="buggy_24.sol"];
	481 -> 483	[key=0,
		edge_type=if_false,
		label=False];
	487	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[800, 801, 802, 803, 804, 805, 806]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	482 -> 487	[key=0,
		edge_type=next,
		label=Next];
	484	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.mul(6).div(1000 * 100 * 10)

IRs:
TMP_304(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '6'] 
TMP_305(uint256) = 1000 * 100
TMP_306(uint256) = \
TMP_305 * 10
TMP_307(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_304', 'TMP_\
306'] 
dynamicCA(uint256) := TMP_307(uint256)",
		node_expression="dynamicCA = dynamicCA.mul(6).div(1000 * 100 * 10)",
		node_info_vulnerabilities=None,
		node_irs="TMP_304(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '6'] 
TMP_305(uint256) = \
1000 * 100
TMP_306(uint256) = TMP_305 * 10
TMP_307(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), \
arguments:['TMP_304', 'TMP_306'] 
dynamicCA(uint256) := TMP_307(uint256)",
		node_source_code_lines="[803]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	483 -> 484	[key=0,
		edge_type=if_true,
		label=True];
	485	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.div(1000 * 100)

IRs:
TMP_308(uint256) = 1000 * 100
TMP_309(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['dynamicCA', 'TMP_308'] 
dynamicCA(uint256) := TMP_\
309(uint256)",
		node_expression="dynamicCA = dynamicCA.div(1000 * 100)",
		node_info_vulnerabilities=None,
		node_irs="TMP_308(uint256) = 1000 * 100
TMP_309(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['\
dynamicCA', 'TMP_308'] 
dynamicCA(uint256) := TMP_309(uint256)",
		node_source_code_lines="[805]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	483 -> 485	[key=0,
		edge_type=if_false,
		label=False];
	486	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[802, 803, 804, 805, 806]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	484 -> 486	[key=0,
		edge_type=next,
		label=Next];
	485 -> 486	[key=0,
		edge_type=next,
		label=Next];
	486 -> 487	[key=0,
		edge_type=next,
		label=Next];
	488	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
sponsor.calcDynamicCommissionAmount = sponsor.calcDynamicCommissionAmount.add(dynamicCA)

IRs:
\
REF_360(uint256) -> sponsor.calcDynamicCommissionAmount
REF_361(uint256) -> sponsor.calcDynamicCommissionAmount
TMP_310(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_361', 'dynamicCA'] 
REF_360 (->sponsor) := \
TMP_310(uint256)",
		node_expression="sponsor.calcDynamicCommissionAmount = sponsor.calcDynamicCommissionAmount.add(dynamicCA)",
		node_info_vulnerabilities=None,
		node_irs="REF_360(uint256) -> sponsor.calcDynamicCommissionAmount
REF_361(uint256) -> sponsor.calcDynamicCommissionAmount
TMP_310(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_361', 'dynamicCA'] 
REF_360 (->sponsor) := \
TMP_310(uint256)",
		node_source_code_lines="[807]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	487 -> 488	[key=0,
		edge_type=next,
		label=Next];
	488 -> 489	[key=0,
		edge_type=next,
		label=Next];
	489 -> 490	[key=0,
		edge_type=next,
		label=Next];
	491	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
addressWalker = sponsor.sponsorAddress

IRs:
REF_363(address) -> sponsor.sponsorAddress
addressWalker(\
address) := REF_363(address)",
		node_expression="addressWalker = sponsor.sponsorAddress",
		node_info_vulnerabilities=None,
		node_irs="REF_363(address) -> sponsor.sponsorAddress
addressWalker(address) := REF_363(address)",
		node_source_code_lines="[810]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	490 -> 491	[key=0,
		edge_type=next,
		label=Next];
	492	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
depth = depth.add(1)

IRs:
TMP_311(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['depth', '1'] 
depth(uint256) := TMP_311(uint256)",
		node_expression="depth = depth.add(1)",
		node_info_vulnerabilities=None,
		node_irs="TMP_311(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['depth', '1'] 
depth(uint256) := \
TMP_311(uint256)",
		node_source_code_lines="[811]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	491 -> 492	[key=0,
		edge_type=next,
		label=Next];
	492 -> 470	[key=0,
		edge_type=next,
		label=Next];
	493 -> 494	[key=0,
		edge_type=next,
		label=Next];
	494 -> 495	[key=0,
		edge_type=next,
		label=Next];
	496	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
++ i_scope_0

IRs:
i_scope_0(uint256) = i_scope_0 + 1",
		node_expression="++ i_scope_0",
		node_info_vulnerabilities=None,
		node_irs="i_scope_0(uint256) = i_scope_0 + 1",
		node_source_code_lines="[782]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	495 -> 496	[key=0,
		edge_type=next,
		label=Next];
	496 -> 462	[key=0,
		edge_type=next,
		label=Next];
	497	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[817, 818, 819, 820, 821, 822, 823, 824]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	500	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF_LOOP

EXPRESSION:
i_scope_2 < totalUserCount

IRs:
TMP_312(bool) = i_scope_2 < totalUserCount
CONDITION TMP_312",
		node_expression="i_scope_2 < totalUserCount",
		node_info_vulnerabilities=None,
		node_irs="TMP_312(bool) = i_scope_2 < totalUserCount
CONDITION TMP_312",
		node_source_code_lines="[817]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	497 -> 500	[key=0,
		edge_type=next,
		label=Next];
	498	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[817, 818, 819, 820, 821, 822, 823, 824]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	499 -> 497	[key=0,
		edge_type=next,
		label=Next];
	500 -> 498	[key=0,
		edge_type=if_false,
		label=False];
	501	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
userAddress = addressMapping[i_scope_2]

IRs:
REF_365(address) -> addressMapping[i_scope_2]
\
userAddress(address) := REF_365(address)",
		node_expression="userAddress = addressMapping[i_scope_2]",
		node_info_vulnerabilities=None,
		node_irs="REF_365(address) -> addressMapping[i_scope_2]
userAddress(address) := REF_365(address)",
		node_source_code_lines="[818]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	500 -> 501	[key=0,
		edge_type=if_true,
		label=True];
	502	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user_scope_3 = userMapping[userAddress]

IRs:
REF_366(FomoFeast.User) -> userMapping[userAddress]
\
user_scope_3(FomoFeast.User) := REF_366(FomoFeast.User)",
		node_expression="user_scope_3 = userMapping[userAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_366(FomoFeast.User) -> userMapping[userAddress]
user_scope_3(FomoFeast.User) := REF_366(FomoFeast.User)",
		node_source_code_lines="[819]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	501 -> 502	[key=0,
		edge_type=next,
		label=Next];
	503	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: IF

EXPRESSION:
user_scope_3.calcDynamicCommissionAmount > 0

IRs:
REF_367(uint256) -> user_scope_3.calcDynamicCommissionAmount
\
TMP_313(bool) = REF_367 > 0
CONDITION TMP_313",
		node_expression="user_scope_3.calcDynamicCommissionAmount > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_367(uint256) -> user_scope_3.calcDynamicCommissionAmount
TMP_313(bool) = REF_367 > 0
CONDITION TMP_313",
		node_source_code_lines="[820]",
		node_type=IF,
		source_file="buggy_24.sol"];
	502 -> 503	[key=0,
		edge_type=next,
		label=Next];
	504	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
user_scope_3.dynamicCommissionBalance = user_scope_3.dynamicCommissionBalance.add(user_scope_\
3.calcDynamicCommissionAmount)

IRs:
REF_368(uint256) -> user_scope_3.dynamicCommissionBalance
REF_369(uint256) -> user_scope_3.dynamicCommissionBalance
\
REF_371(uint256) -> user_scope_3.calcDynamicCommissionAmount
TMP_314(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_369', 'REF_371'] 
REF_368 (->user_scope_3) := TMP_314(uint256)",
		node_expression="user_scope_3.dynamicCommissionBalance = user_scope_3.dynamicCommissionBalance.add(user_scope_3.calcDynamicCommissionAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_368(uint256) -> user_scope_3.dynamicCommissionBalance
REF_369(uint256) -> user_scope_3.dynamicCommissionBalance
REF_371(uint256) \
-> user_scope_3.calcDynamicCommissionAmount
TMP_314(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_369', 'REF_371'] 
REF_368 (->user_scope_3) := TMP_314(uint256)",
		node_source_code_lines="[821]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	503 -> 504	[key=0,
		edge_type=if_true,
		label=True];
	506	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[820, 821, 822, 823]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	503 -> 506	[key=0,
		edge_type=if_false,
		label=False];
	505	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
addDynamicCommissionRecord(userAddress,now,user_scope_3.calcDynamicCommissionAmount)

IRs:
REF_\
372(uint256) -> user_scope_3.calcDynamicCommissionAmount
INTERNAL_CALL, FomoFeast.addDynamicCommissionRecord(address,uint256,uint256)(\
userAddress,now,REF_372)",
		node_expression="addDynamicCommissionRecord(userAddress,now,user_scope_3.calcDynamicCommissionAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_372(uint256) -> user_scope_3.calcDynamicCommissionAmount
INTERNAL_CALL, FomoFeast.addDynamicCommissionRecord(address,uint256,\
uint256)(userAddress,now,REF_372)",
		node_source_code_lines="[822]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	504 -> 505	[key=0,
		edge_type=next,
		label=Next];
	505 -> 506	[key=0,
		edge_type=next,
		label=Next];
	507	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="Node Type: EXPRESSION

EXPRESSION:
++ i_scope_2

IRs:
i_scope_2(uint256) = i_scope_2 + 1",
		node_expression="++ i_scope_2",
		node_info_vulnerabilities=None,
		node_irs="i_scope_2(uint256) = i_scope_2 + 1",
		node_source_code_lines="[817]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	506 -> 507	[key=0,
		edge_type=next,
		label=Next];
	507 -> 500	[key=0,
		edge_type=next,
		label=Next];
	508 -> 454	[key=0,
		edge_type=next,
		label=Next];
	509	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommission()",
		label="buggy_24.sol_FomoFeast_calcDynamicCommission()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, \
802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	509 -> 451	[key=0,
		edge_type=next,
		label=Next];
	510	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[826, 827, 828, 829]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	511	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_317(bool) = tx.origin == owner_txorigin33
\
TMP_318(None) = SOLIDITY_CALL require(bool)(TMP_317)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_317(bool) = tx.origin == owner_txorigin33
TMP_318(None) = SOLIDITY_CALL require(bool)(TMP_317)",
		node_source_code_lines="[827]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	510 -> 511	[key=0,
		edge_type=next,
		label=Next];
	512	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[828]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	511 -> 512	[key=0,
		edge_type=next,
		label=Next];
	513	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[826, 827, 828, 829]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	513 -> 510	[key=0,
		edge_type=next,
		label=Next];
	514	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[831, 832, 833, 834, 835, 836]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	522	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_source_code_lines="[831]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	514 -> 522	[key=0,
		edge_type=next,
		label=Next];
	515	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[832, 833, 834, 835]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	518	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < (index + length)

IRs:
TMP_320(uint256) = index + length
TMP_321(bool) = i < TMP_320
CONDITION \
TMP_321",
		node_expression="i < (index + length)",
		node_info_vulnerabilities=None,
		node_irs="TMP_320(uint256) = index + length
TMP_321(bool) = i < TMP_320
CONDITION TMP_321",
		node_source_code_lines="[832]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	515 -> 518	[key=0,
		edge_type=next,
		label=Next];
	516	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[832, 833, 834, 835]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	517	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = index

IRs:
i(uint256) := index(uint256)",
		node_expression="i = index",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := index(uint256)",
		node_source_code_lines="[832]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	517 -> 515	[key=0,
		edge_type=next,
		label=Next];
	518 -> 516	[key=0,
		edge_type=if_false,
		label=False];
	519	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user = userMapping[addressMapping[i]]

IRs:
REF_374(address) -> addressMapping[i]
REF_375(FomoFeast.User) \
-> userMapping[REF_374]
user(FomoFeast.User) := REF_375(FomoFeast.User)",
		node_expression="user = userMapping[addressMapping[i]]",
		node_info_vulnerabilities=None,
		node_irs="REF_374(address) -> addressMapping[i]
REF_375(FomoFeast.User) -> userMapping[REF_374]
user(FomoFeast.User) := REF_375(FomoFeast.User)",
		node_source_code_lines="[833]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	518 -> 519	[key=0,
		edge_type=if_true,
		label=True];
	520	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
user.calcDynamicCommissionAmount = 0

IRs:
REF_376(uint256) -> user.calcDynamicCommissionAmount
\
REF_376 (->user) := 0(uint256)",
		node_expression="user.calcDynamicCommissionAmount = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_376(uint256) -> user.calcDynamicCommissionAmount
REF_376 (->user) := 0(uint256)",
		node_source_code_lines="[834]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	519 -> 520	[key=0,
		edge_type=next,
		label=Next];
	521	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1",
		node_expression="++ i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i + 1",
		node_source_code_lines="[832]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	520 -> 521	[key=0,
		edge_type=next,
		label=Next];
	521 -> 518	[key=0,
		edge_type=next,
		label=Next];
	522 -> 517	[key=0,
		edge_type=next,
		label=Next];
	523	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionBegin(uint256,uint256)",
		label="buggy_24.sol_FomoFeast_calcDynamicCommissionBegin(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[831, 832, 833, 834, 835, 836]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	523 -> 514	[key=0,
		edge_type=next,
		label=Next];
	524	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[837, 838, 839, 840]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	525	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_323(bool) = tx.origin == owner_txorigin27
\
TMP_324(None) = SOLIDITY_CALL require(bool)(TMP_323)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_323(bool) = tx.origin == owner_txorigin27
TMP_324(None) = SOLIDITY_CALL require(bool)(TMP_323)",
		node_source_code_lines="[838]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	524 -> 525	[key=0,
		edge_type=next,
		label=Next];
	526	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_377(None) -> to.call
REF_378(None) -> REF_377.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_377(None) -> to.call
REF_378(None) -> REF_377.value",
		node_source_code_lines="[839]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	525 -> 526	[key=0,
		edge_type=next,
		label=Next];
	527	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[837, 838, 839, 840]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	527 -> 524	[key=0,
		edge_type=next,
		label=Next];
	528	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, \
868, 869, 870, 871, 872, 873, 874, 875, 876, 877]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	567	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_source_code_lines="[842]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	528 -> 567	[key=0,
		edge_type=next,
		label=Next];
	529	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, \
869, 870, 871, 872, 873, 874, 875, 876]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	532	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < (index + length)

IRs:
TMP_326(uint256) = index + length
TMP_327(bool) = i < TMP_326
CONDITION \
TMP_327",
		node_expression="i < (index + length)",
		node_info_vulnerabilities=None,
		node_irs="TMP_326(uint256) = index + length
TMP_327(bool) = i < TMP_326
CONDITION TMP_327",
		node_source_code_lines="[843]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	529 -> 532	[key=0,
		edge_type=next,
		label=Next];
	530	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, \
869, 870, 871, 872, 873, 874, 875, 876]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	531	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = index

IRs:
i(uint256) := index(uint256)",
		node_expression="i = index",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := index(uint256)",
		node_source_code_lines="[843]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	531 -> 529	[key=0,
		edge_type=next,
		label=Next];
	532 -> 530	[key=0,
		edge_type=if_false,
		label=False];
	533	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user = userMapping[addressMapping[i]]

IRs:
REF_379(address) -> addressMapping[i]
REF_380(FomoFeast.User) \
-> userMapping[REF_379]
user(FomoFeast.User) := REF_380(FomoFeast.User)",
		node_expression="user = userMapping[addressMapping[i]]",
		node_info_vulnerabilities=None,
		node_irs="REF_379(address) -> addressMapping[i]
REF_380(FomoFeast.User) -> userMapping[REF_379]
user(FomoFeast.User) := REF_380(FomoFeast.User)",
		node_source_code_lines="[844]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	532 -> 533	[key=0,
		edge_type=if_true,
		label=True];
	534	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
user.currentInvestAmount > 0

IRs:
REF_381(uint256) -> user.currentInvestAmount
TMP_328(bool) = REF_381 > \
0
CONDITION TMP_328",
		node_expression="user.currentInvestAmount > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_381(uint256) -> user.currentInvestAmount
TMP_328(bool) = REF_381 > 0
CONDITION TMP_328",
		node_source_code_lines="[845]",
		node_type=IF,
		source_file="buggy_24.sol"];
	533 -> 534	[key=0,
		edge_type=next,
		label=Next];
	535	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY)

IRs:
REF_383(uint256) -> user.currentInvestTime
\
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['now', 'REF_383'] 
TMP_330(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_329', 'ONE_DAY'] 
commissionDays(uint256) := \
TMP_330(uint256)",
		node_expression="commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY)",
		node_info_vulnerabilities=None,
		node_irs="REF_383(uint256) -> user.currentInvestTime
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['now', 'REF_383'] 
TMP_330(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['\
TMP_329', 'ONE_DAY'] 
commissionDays(uint256) := TMP_330(uint256)",
		node_source_code_lines="[846]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	534 -> 535	[key=0,
		edge_type=if_true,
		label=True];
	565	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, \
871, 872, 873, 874, 875]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	534 -> 565	[key=0,
		edge_type=if_false,
		label=False];
	536	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
commissionDays >= 1 && commissionDays <= user.currentInvestCycle

IRs:
TMP_331(bool) = commissionDays >= \
1
REF_385(uint256) -> user.currentInvestCycle
TMP_332(bool) = commissionDays <= REF_385
TMP_333(bool) = TMP_331 && TMP_332
CONDITION \
TMP_333",
		node_expression="commissionDays >= 1 && commissionDays <= user.currentInvestCycle",
		node_info_vulnerabilities=None,
		node_irs="TMP_331(bool) = commissionDays >= 1
REF_385(uint256) -> user.currentInvestCycle
TMP_332(bool) = commissionDays <= REF_385
TMP_333(\
bool) = TMP_331 && TMP_332
CONDITION TMP_333",
		node_source_code_lines="[847]",
		node_type=IF,
		source_file="buggy_24.sol"];
	535 -> 536	[key=0,
		edge_type=next,
		label=Next];
	537	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
depth = 1

IRs:
depth(uint256) := 1(uint256)",
		node_expression="depth = 1",
		node_info_vulnerabilities=None,
		node_irs="depth(uint256) := 1(uint256)",
		node_source_code_lines="[848]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	536 -> 537	[key=0,
		edge_type=if_true,
		label=True];
	564	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, \
873, 874]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	536 -> 564	[key=0,
		edge_type=if_false,
		label=False];
	538	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
addressWalker = user.sponsorAddress

IRs:
REF_386(address) -> user.sponsorAddress
addressWalker(\
address) := REF_386(address)",
		node_expression="addressWalker = user.sponsorAddress",
		node_info_vulnerabilities=None,
		node_irs="REF_386(address) -> user.sponsorAddress
addressWalker(address) := REF_386(address)",
		node_source_code_lines="[849]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	537 -> 538	[key=0,
		edge_type=next,
		label=Next];
	539	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	538 -> 539	[key=0,
		edge_type=next,
		label=Next];
	540	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
addressWalker != GENESIS_USER_ADDRESS

IRs:
TMP_334(bool) = addressWalker != GENESIS_USER_ADDRESS
\
CONDITION TMP_334",
		node_expression="addressWalker != GENESIS_USER_ADDRESS",
		node_info_vulnerabilities=None,
		node_irs="TMP_334(bool) = addressWalker != GENESIS_USER_ADDRESS
CONDITION TMP_334",
		node_source_code_lines="[850]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	539 -> 540	[key=0,
		edge_type=next,
		label=Next];
	541	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
sponsor = userMapping[addressWalker]

IRs:
REF_387(FomoFeast.User) -> userMapping[addressWalker]
\
sponsor(FomoFeast.User) := REF_387(FomoFeast.User)",
		node_expression="sponsor = userMapping[addressWalker]",
		node_info_vulnerabilities=None,
		node_irs="REF_387(FomoFeast.User) -> userMapping[addressWalker]
sponsor(FomoFeast.User) := REF_387(FomoFeast.User)",
		node_source_code_lines="[851]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	540 -> 541	[key=0,
		edge_type=if_true,
		label=True];
	563	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	540 -> 563	[key=0,
		edge_type=if_false,
		label=False];
	542	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
sponsor.currentInvestAmount > 0

IRs:
REF_388(uint256) -> sponsor.currentInvestAmount
TMP_335(bool) = \
REF_388 > 0
CONDITION TMP_335",
		node_expression="sponsor.currentInvestAmount > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_388(uint256) -> sponsor.currentInvestAmount
TMP_335(bool) = REF_388 > 0
CONDITION TMP_335",
		node_source_code_lines="[852]",
		node_type=IF,
		source_file="buggy_24.sol"];
	541 -> 542	[key=0,
		edge_type=next,
		label=Next];
	543	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
dynamicCommissionRatio = getDynamicCommissionRatio(sponsor,depth)

IRs:
TMP_336(uint256) = \
INTERNAL_CALL, FomoFeast.getDynamicCommissionRatio(FomoFeast.User,uint256)(sponsor,depth)
dynamicCommissionRatio(uint256) := TMP_\
336(uint256)",
		node_expression="dynamicCommissionRatio = getDynamicCommissionRatio(sponsor,depth)",
		node_info_vulnerabilities=None,
		node_irs="TMP_336(uint256) = INTERNAL_CALL, FomoFeast.getDynamicCommissionRatio(FomoFeast.User,uint256)(sponsor,depth)
dynamicCommissionRatio(\
uint256) := TMP_336(uint256)",
		node_source_code_lines="[853]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	542 -> 543	[key=0,
		edge_type=if_true,
		label=True];
	560	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	542 -> 560	[key=0,
		edge_type=if_false,
		label=False];
	544	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
dynamicCommissionRatio > 0

IRs:
TMP_337(bool) = dynamicCommissionRatio > 0
CONDITION TMP_337",
		node_expression="dynamicCommissionRatio > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_337(bool) = dynamicCommissionRatio > 0
CONDITION TMP_337",
		node_source_code_lines="[854]",
		node_type=IF,
		source_file="buggy_24.sol"];
	543 -> 544	[key=0,
		edge_type=next,
		label=Next];
	545	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
dynamicCA = sponsor.currentInvestAmount

IRs:
REF_389(uint256) -> sponsor.currentInvestAmount
\
dynamicCA(uint256) := REF_389(uint256)",
		node_expression="dynamicCA = sponsor.currentInvestAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_389(uint256) -> sponsor.currentInvestAmount
dynamicCA(uint256) := REF_389(uint256)",
		node_source_code_lines="[855]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	544 -> 545	[key=0,
		edge_type=if_true,
		label=True];
	559	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	544 -> 559	[key=0,
		edge_type=if_false,
		label=False];
	546	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
dynamicCA > user.currentInvestAmount

IRs:
REF_390(uint256) -> user.currentInvestAmount
TMP_338(bool) = \
dynamicCA > REF_390
CONDITION TMP_338",
		node_expression="dynamicCA > user.currentInvestAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_390(uint256) -> user.currentInvestAmount
TMP_338(bool) = dynamicCA > REF_390
CONDITION TMP_338",
		node_source_code_lines="[856]",
		node_type=IF,
		source_file="buggy_24.sol"];
	545 -> 546	[key=0,
		edge_type=next,
		label=Next];
	547	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = user.currentInvestAmount

IRs:
REF_391(uint256) -> user.currentInvestAmount
dynamicCA(\
uint256) := REF_391(uint256)",
		node_expression="dynamicCA = user.currentInvestAmount",
		node_info_vulnerabilities=None,
		node_irs="REF_391(uint256) -> user.currentInvestAmount
dynamicCA(uint256) := REF_391(uint256)",
		node_source_code_lines="[857]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	546 -> 547	[key=0,
		edge_type=if_true,
		label=True];
	548	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[856, 857, 858]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	546 -> 548	[key=0,
		edge_type=if_false,
		label=False];
	547 -> 548	[key=0,
		edge_type=next,
		label=Next];
	549	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.mul(user.currentStaticCommissionRatio)

IRs:
REF_393(uint256) -> user.currentStaticCommissionRatio
\
TMP_339(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', 'REF_393'] 
dynamicCA(\
uint256) := TMP_339(uint256)",
		node_expression="dynamicCA = dynamicCA.mul(user.currentStaticCommissionRatio)",
		node_info_vulnerabilities=None,
		node_irs="REF_393(uint256) -> user.currentStaticCommissionRatio
TMP_339(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,\
uint256), arguments:['dynamicCA', 'REF_393'] 
dynamicCA(uint256) := TMP_339(uint256)",
		node_source_code_lines="[859]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	548 -> 549	[key=0,
		edge_type=next,
		label=Next];
	550	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.mul(dynamicCommissionRatio)

IRs:
TMP_340(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', 'dynamicCommissionRatio'] 
dynamicCA(uint256) := TMP_340(\
uint256)",
		node_expression="dynamicCA = dynamicCA.mul(dynamicCommissionRatio)",
		node_info_vulnerabilities=None,
		node_irs="TMP_340(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', 'dynamicCommissionRatio'] 
\
dynamicCA(uint256) := TMP_340(uint256)",
		node_source_code_lines="[860]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	549 -> 550	[key=0,
		edge_type=next,
		label=Next];
	551	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
sponsor.currentlevel == 1

IRs:
REF_395(uint256) -> sponsor.currentlevel
TMP_341(bool) = REF_395 == 1
\
CONDITION TMP_341",
		node_expression="sponsor.currentlevel == 1",
		node_info_vulnerabilities=None,
		node_irs="REF_395(uint256) -> sponsor.currentlevel
TMP_341(bool) = REF_395 == 1
CONDITION TMP_341",
		node_source_code_lines="[861]",
		node_type=IF,
		source_file="buggy_24.sol"];
	550 -> 551	[key=0,
		edge_type=next,
		label=Next];
	552	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.mul(3).div(1000 * 100 * 10)

IRs:
TMP_342(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '3'] 
TMP_343(uint256) = 1000 * 100
TMP_344(uint256) = \
TMP_343 * 10
TMP_345(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_342', 'TMP_\
344'] 
dynamicCA(uint256) := TMP_345(uint256)",
		node_expression="dynamicCA = dynamicCA.mul(3).div(1000 * 100 * 10)",
		node_info_vulnerabilities=None,
		node_irs="TMP_342(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '3'] 
TMP_343(uint256) = \
1000 * 100
TMP_344(uint256) = TMP_343 * 10
TMP_345(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), \
arguments:['TMP_342', 'TMP_344'] 
dynamicCA(uint256) := TMP_345(uint256)",
		node_source_code_lines="[862]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	551 -> 552	[key=0,
		edge_type=if_true,
		label=True];
	553	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
sponsor.currentlevel == 2

IRs:
REF_398(uint256) -> sponsor.currentlevel
TMP_346(bool) = REF_398 == 2
\
CONDITION TMP_346",
		node_expression="sponsor.currentlevel == 2",
		node_info_vulnerabilities=None,
		node_irs="REF_398(uint256) -> sponsor.currentlevel
TMP_346(bool) = REF_398 == 2
CONDITION TMP_346",
		node_source_code_lines="[863]",
		node_type=IF,
		source_file="buggy_24.sol"];
	551 -> 553	[key=0,
		edge_type=if_false,
		label=False];
	557	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[861, 862, 863, 864, 865, 866, 867]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	552 -> 557	[key=0,
		edge_type=next,
		label=Next];
	554	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.mul(6).div(1000 * 100 * 10)

IRs:
TMP_347(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '6'] 
TMP_348(uint256) = 1000 * 100
TMP_349(uint256) = \
TMP_348 * 10
TMP_350(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_347', 'TMP_\
349'] 
dynamicCA(uint256) := TMP_350(uint256)",
		node_expression="dynamicCA = dynamicCA.mul(6).div(1000 * 100 * 10)",
		node_info_vulnerabilities=None,
		node_irs="TMP_347(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '6'] 
TMP_348(uint256) = \
1000 * 100
TMP_349(uint256) = TMP_348 * 10
TMP_350(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), \
arguments:['TMP_347', 'TMP_349'] 
dynamicCA(uint256) := TMP_350(uint256)",
		node_source_code_lines="[864]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	553 -> 554	[key=0,
		edge_type=if_true,
		label=True];
	555	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
dynamicCA = dynamicCA.div(1000 * 100)

IRs:
TMP_351(uint256) = 1000 * 100
TMP_352(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['dynamicCA', 'TMP_351'] 
dynamicCA(uint256) := TMP_\
352(uint256)",
		node_expression="dynamicCA = dynamicCA.div(1000 * 100)",
		node_info_vulnerabilities=None,
		node_irs="TMP_351(uint256) = 1000 * 100
TMP_352(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['\
dynamicCA', 'TMP_351'] 
dynamicCA(uint256) := TMP_352(uint256)",
		node_source_code_lines="[866]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	553 -> 555	[key=0,
		edge_type=if_false,
		label=False];
	556	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[863, 864, 865, 866, 867]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	554 -> 556	[key=0,
		edge_type=next,
		label=Next];
	555 -> 556	[key=0,
		edge_type=next,
		label=Next];
	556 -> 557	[key=0,
		edge_type=next,
		label=Next];
	558	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
sponsor.calcDynamicCommissionAmount = sponsor.calcDynamicCommissionAmount.add(dynamicCA)

IRs:
\
REF_402(uint256) -> sponsor.calcDynamicCommissionAmount
REF_403(uint256) -> sponsor.calcDynamicCommissionAmount
TMP_353(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_403', 'dynamicCA'] 
REF_402 (->sponsor) := \
TMP_353(uint256)",
		node_expression="sponsor.calcDynamicCommissionAmount = sponsor.calcDynamicCommissionAmount.add(dynamicCA)",
		node_info_vulnerabilities=None,
		node_irs="REF_402(uint256) -> sponsor.calcDynamicCommissionAmount
REF_403(uint256) -> sponsor.calcDynamicCommissionAmount
TMP_353(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_403', 'dynamicCA'] 
REF_402 (->sponsor) := \
TMP_353(uint256)",
		node_source_code_lines="[868]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	557 -> 558	[key=0,
		edge_type=next,
		label=Next];
	558 -> 559	[key=0,
		edge_type=next,
		label=Next];
	559 -> 560	[key=0,
		edge_type=next,
		label=Next];
	561	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
addressWalker = sponsor.sponsorAddress

IRs:
REF_405(address) -> sponsor.sponsorAddress
addressWalker(\
address) := REF_405(address)",
		node_expression="addressWalker = sponsor.sponsorAddress",
		node_info_vulnerabilities=None,
		node_irs="REF_405(address) -> sponsor.sponsorAddress
addressWalker(address) := REF_405(address)",
		node_source_code_lines="[871]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	560 -> 561	[key=0,
		edge_type=next,
		label=Next];
	562	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
depth = depth.add(1)

IRs:
TMP_354(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['depth', '1'] 
depth(uint256) := TMP_354(uint256)",
		node_expression="depth = depth.add(1)",
		node_info_vulnerabilities=None,
		node_irs="TMP_354(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['depth', '1'] 
depth(uint256) := \
TMP_354(uint256)",
		node_source_code_lines="[872]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	561 -> 562	[key=0,
		edge_type=next,
		label=Next];
	562 -> 540	[key=0,
		edge_type=next,
		label=Next];
	563 -> 564	[key=0,
		edge_type=next,
		label=Next];
	564 -> 565	[key=0,
		edge_type=next,
		label=Next];
	566	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1",
		node_expression="++ i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i + 1",
		node_source_code_lines="[843]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	565 -> 566	[key=0,
		edge_type=next,
		label=Next];
	566 -> 532	[key=0,
		edge_type=next,
		label=Next];
	567 -> 531	[key=0,
		edge_type=next,
		label=Next];
	568	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionRange(uint256,uint256)",
		label="buggy_24.sol_FomoFeast_calcDynamicCommissionRange(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, \
868, 869, 870, 871, 872, 873, 874, 875, 876, 877]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	568 -> 528	[key=0,
		edge_type=next,
		label=Next];
	569	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[878, 879, 880, 881]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	570	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_356(bool) = tx.origin == owner_txorigin31
\
TMP_357(None) = SOLIDITY_CALL require(bool)(TMP_356)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_356(bool) = tx.origin == owner_txorigin31
TMP_357(None) = SOLIDITY_CALL require(bool)(TMP_356)",
		node_source_code_lines="[879]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	569 -> 570	[key=0,
		edge_type=next,
		label=Next];
	571	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_407(None) -> to.call
REF_408(None) -> REF_407.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="REF_407(None) -> to.call
REF_408(None) -> REF_407.value",
		node_source_code_lines="[880]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	570 -> 571	[key=0,
		edge_type=next,
		label=Next];
	572	[contract_name=FomoFeast,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[878, 879, 880, 881]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	572 -> 569	[key=0,
		edge_type=next,
		label=Next];
	573	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[883, 884, 885, 886, 887, 888, 889, 890, 891, 892]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	585	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, FomoFeast.onlyOwner()()",
		node_source_code_lines="[883]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	573 -> 585	[key=0,
		edge_type=next,
		label=Next];
	574	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[884, 885, 886, 887, 888, 889, 890, 891]",
		node_type=BEGIN_LOOP,
		source_file="buggy_24.sol"];
	577	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < (index + length)

IRs:
TMP_359(uint256) = index + length
TMP_360(bool) = i < TMP_359
CONDITION \
TMP_360",
		node_expression="i < (index + length)",
		node_info_vulnerabilities=None,
		node_irs="TMP_359(uint256) = index + length
TMP_360(bool) = i < TMP_359
CONDITION TMP_360",
		node_source_code_lines="[884]",
		node_type=IF_LOOP,
		source_file="buggy_24.sol"];
	574 -> 577	[key=0,
		edge_type=next,
		label=Next];
	575	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[884, 885, 886, 887, 888, 889, 890, 891]",
		node_type=END_LOOP,
		source_file="buggy_24.sol"];
	576	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = index

IRs:
i(uint256) := index(uint256)",
		node_expression="i = index",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := index(uint256)",
		node_source_code_lines="[884]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	576 -> 574	[key=0,
		edge_type=next,
		label=Next];
	577 -> 575	[key=0,
		edge_type=if_false,
		label=False];
	578	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
userAddress = addressMapping[i]

IRs:
REF_409(address) -> addressMapping[i]
userAddress(address) := \
REF_409(address)",
		node_expression="userAddress = addressMapping[i]",
		node_info_vulnerabilities=None,
		node_irs="REF_409(address) -> addressMapping[i]
userAddress(address) := REF_409(address)",
		node_source_code_lines="[885]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	577 -> 578	[key=0,
		edge_type=if_true,
		label=True];
	579	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
user = userMapping[userAddress]

IRs:
REF_410(FomoFeast.User) -> userMapping[userAddress]
user(\
FomoFeast.User) := REF_410(FomoFeast.User)",
		node_expression="user = userMapping[userAddress]",
		node_info_vulnerabilities=None,
		node_irs="REF_410(FomoFeast.User) -> userMapping[userAddress]
user(FomoFeast.User) := REF_410(FomoFeast.User)",
		node_source_code_lines="[886]",
		node_type="NEW VARIABLE",
		source_file="buggy_24.sol"];
	578 -> 579	[key=0,
		edge_type=next,
		label=Next];
	580	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
user.calcDynamicCommissionAmount > 0

IRs:
REF_411(uint256) -> user.calcDynamicCommissionAmount
TMP_361(\
bool) = REF_411 > 0
CONDITION TMP_361",
		node_expression="user.calcDynamicCommissionAmount > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_411(uint256) -> user.calcDynamicCommissionAmount
TMP_361(bool) = REF_411 > 0
CONDITION TMP_361",
		node_source_code_lines="[887]",
		node_type=IF,
		source_file="buggy_24.sol"];
	579 -> 580	[key=0,
		edge_type=next,
		label=Next];
	581	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
user.dynamicCommissionBalance = user.dynamicCommissionBalance.add(user.calcDynamicCommissionAmount)

\
IRs:
REF_412(uint256) -> user.dynamicCommissionBalance
REF_413(uint256) -> user.dynamicCommissionBalance
REF_415(uint256) -> user.calcDynamicCommissionAmount
\
TMP_362(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_413', 'REF_415'] 
REF_412 (\
->user) := TMP_362(uint256)",
		node_expression="user.dynamicCommissionBalance = user.dynamicCommissionBalance.add(user.calcDynamicCommissionAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_412(uint256) -> user.dynamicCommissionBalance
REF_413(uint256) -> user.dynamicCommissionBalance
REF_415(uint256) -> user.calcDynamicCommissionAmount
\
TMP_362(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_413', 'REF_415'] 
REF_412 (\
->user) := TMP_362(uint256)",
		node_source_code_lines="[888]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	580 -> 581	[key=0,
		edge_type=if_true,
		label=True];
	583	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[887, 888, 889, 890]",
		node_type=END_IF,
		source_file="buggy_24.sol"];
	580 -> 583	[key=0,
		edge_type=if_false,
		label=False];
	582	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
addDynamicCommissionRecord(userAddress,now,user.calcDynamicCommissionAmount)

IRs:
REF_416(uint256) \
-> user.calcDynamicCommissionAmount
INTERNAL_CALL, FomoFeast.addDynamicCommissionRecord(address,uint256,uint256)(userAddress,now,\
REF_416)",
		node_expression="addDynamicCommissionRecord(userAddress,now,user.calcDynamicCommissionAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_416(uint256) -> user.calcDynamicCommissionAmount
INTERNAL_CALL, FomoFeast.addDynamicCommissionRecord(address,uint256,uint256)(\
userAddress,now,REF_416)",
		node_source_code_lines="[889]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	581 -> 582	[key=0,
		edge_type=next,
		label=Next];
	582 -> 583	[key=0,
		edge_type=next,
		label=Next];
	584	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1",
		node_expression="++ i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i + 1",
		node_source_code_lines="[884]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	583 -> 584	[key=0,
		edge_type=next,
		label=Next];
	584 -> 577	[key=0,
		edge_type=next,
		label=Next];
	585 -> 576	[key=0,
		edge_type=next,
		label=Next];
	586	[contract_name=FomoFeast,
		function_fullname="calcDynamicCommissionEnd(uint256,uint256)",
		label="buggy_24.sol_FomoFeast_calcDynamicCommissionEnd(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[883, 884, 885, 886, 887, 888, 889, 890, 891, 892]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	586 -> 573	[key=0,
		edge_type=next,
		label=Next];
	587	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[893, 894, 895, 896]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	588	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_365(bool) = tx.origin == owner_txorigin13
\
TMP_366(None) = SOLIDITY_CALL require(bool)(TMP_365)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="TMP_365(bool) = tx.origin == owner_txorigin13
TMP_366(None) = SOLIDITY_CALL require(bool)(TMP_365)",
		node_source_code_lines="[894]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	587 -> 588	[key=0,
		edge_type=next,
		label=Next];
	589	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[895]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	588 -> 589	[key=0,
		edge_type=next,
		label=Next];
	590	[contract_name=FomoFeast,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_24.sol_FomoFeast_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[893, 894, 895, 896]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	590 -> 587	[key=0,
		edge_type=next,
		label=Next];
	591	[contract_name=FomoFeast,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
initialized = false

IRs:
initialized(bool) := False(bool)",
		node_expression="initialized = false",
		node_info_vulnerabilities=None,
		node_irs="initialized(bool) := False(bool)",
		node_source_code_lines="[223]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_24.sol"];
	592	[contract_name=FomoFeast,
		function_fullname="slitherConstructorVariables()",
		label="buggy_24.sol_FomoFeast_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, \
199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, \
225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, \
251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, \
277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, \
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, \
329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, \
355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, \
381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, \
407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, \
433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, \
459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, \
485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, \
511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, \
537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, \
563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, \
589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, \
615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, \
641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, \
667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, \
693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, \
719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, \
745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, \
771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, \
797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, \
823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, \
849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, \
875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	592 -> 591	[key=0,
		edge_type=next,
		label=Next];
	593	[contract_name=FomoFeast,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
ONE_ETH = 1000000000000000000

IRs:
ONE_ETH(uint256) := 1000000000000000000(uint256)",
		node_expression="ONE_ETH = 1000000000000000000",
		node_info_vulnerabilities=None,
		node_irs="ONE_ETH(uint256) := 1000000000000000000(uint256)",
		node_source_code_lines="[217]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_24.sol"];
	594	[contract_name=FomoFeast,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
ONE_DAY = 86400

IRs:
ONE_DAY(uint256) := 86400(uint256)",
		node_expression="ONE_DAY = 86400",
		node_info_vulnerabilities=None,
		node_irs="ONE_DAY(uint256) := 86400(uint256)",
		node_source_code_lines="[218]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_24.sol"];
	593 -> 594	[key=0,
		edge_type=next,
		label=Next];
	595	[contract_name=FomoFeast,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
GENESIS_USER_ADDRESS = 0xe00d13D53Ba180EAD5F4838BD56b15629026A8C9

IRs:
GENESIS_USER_ADDRESS(\
address) := 1279105570044960835433212542219778850780535498953(address)",
		node_expression="GENESIS_USER_ADDRESS = 0xe00d13D53Ba180EAD5F4838BD56b15629026A8C9",
		node_info_vulnerabilities=None,
		node_irs="GENESIS_USER_ADDRESS(address) := 1279105570044960835433212542219778850780535498953(address)",
		node_source_code_lines="[219]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_24.sol"];
	594 -> 595	[key=0,
		edge_type=next,
		label=Next];
	596	[contract_name=FomoFeast,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
ENGINEER_ADDRESS = 0xddf0bB01f81059CCdB3D5bF5b1C7Bd540aDDFEac

IRs:
ENGINEER_ADDRESS(address) := \
1267055429867200931565801719035647845103168257708(address)",
		node_expression="ENGINEER_ADDRESS = 0xddf0bB01f81059CCdB3D5bF5b1C7Bd540aDDFEac",
		node_info_vulnerabilities=None,
		node_irs="ENGINEER_ADDRESS(address) := 1267055429867200931565801719035647845103168257708(address)",
		node_source_code_lines="[220]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_24.sol"];
	595 -> 596	[key=0,
		edge_type=next,
		label=Next];
	597	[contract_name=FomoFeast,
		function_fullname="slitherConstructorConstantVariables()",
		label="buggy_24.sol_FomoFeast_slitherConstructorConstantVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, \
260, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 310, 311, \
312, 313, 324, 325, 326, 327, 352, 353, 354, 355, 366, 367, 368, 369, 374, 375, 376, 377, 391, 392, 393, 394, 423, 424, 425, 426, \
459, 460, 461, 462, 477, 478, 479, 480, 490, 491, 492, 493, 503, 504, 505, 515, 516, 517, 577, 578, 579, 580, 602, 603, 604, 628, \
629, 630, 631, 641, 642, 643, 644, 654, 655, 656, 657, 668, 669, 670, 671, 690, 691, 692, 698, 699, 700, 701, 723, 724, 725, 747, \
748, 749, 750, 772, 773, 774, 826, 827, 828, 829, 837, 838, 839, 840, 878, 879, 880, 881, 893, 894, 895, 896], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, \
199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, \
225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, \
251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, \
277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, \
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, \
329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, \
355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, \
381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, \
407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, \
433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, \
459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, \
485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, \
511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, \
537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, \
563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, \
589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, \
615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, \
641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, \
667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, \
693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, \
719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, \
745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, \
771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, \
797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, \
823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, \
849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, \
875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	597 -> 593	[key=0,
		edge_type=next,
		label=Next];
	598	[contract_name=FomoFeast,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[334, 335, 336, 337]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	599	[contract_name=FomoFeast,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender == owner,onlyOwner)

IRs:
TMP_368(bool) = msg.sender == owner
\
TMP_369(None) = SOLIDITY_CALL require(bool,string)(TMP_368,onlyOwner)",
		node_expression="require(bool,string)(msg.sender == owner,onlyOwner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_368(bool) = msg.sender == owner
TMP_369(None) = SOLIDITY_CALL require(bool,string)(TMP_368,onlyOwner)",
		node_source_code_lines="[335]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	598 -> 599	[key=0,
		edge_type=next,
		label=Next];
	600	[contract_name=FomoFeast,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[336]",
		node_type=_,
		source_file="buggy_24.sol"];
	599 -> 600	[key=0,
		edge_type=next,
		label=Next];
	601	[contract_name=FomoFeast,
		function_fullname="onlyOwner()",
		label="buggy_24.sol_FomoFeast_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[334, 335, 336, 337]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	601 -> 598	[key=0,
		edge_type=next,
		label=Next];
	602	[contract_name=FomoFeast,
		function_fullname="onlyEngineer()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[339, 340, 341, 342]",
		node_type=ENTRY_POINT,
		source_file="buggy_24.sol"];
	603	[contract_name=FomoFeast,
		function_fullname="onlyEngineer()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender == ENGINEER_ADDRESS,onlyEngineer)

IRs:
TMP_370(bool) = msg.sender == \
ENGINEER_ADDRESS
TMP_371(None) = SOLIDITY_CALL require(bool,string)(TMP_370,onlyEngineer)",
		node_expression="require(bool,string)(msg.sender == ENGINEER_ADDRESS,onlyEngineer)",
		node_info_vulnerabilities=None,
		node_irs="TMP_370(bool) = msg.sender == ENGINEER_ADDRESS
TMP_371(None) = SOLIDITY_CALL require(bool,string)(TMP_370,onlyEngineer)",
		node_source_code_lines="[340]",
		node_type=EXPRESSION,
		source_file="buggy_24.sol"];
	602 -> 603	[key=0,
		edge_type=next,
		label=Next];
	604	[contract_name=FomoFeast,
		function_fullname="onlyEngineer()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[341]",
		node_type=_,
		source_file="buggy_24.sol"];
	603 -> 604	[key=0,
		edge_type=next,
		label=Next];
	605	[contract_name=FomoFeast,
		function_fullname="onlyEngineer()",
		label="buggy_24.sol_FomoFeast_onlyEngineer()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[339, 340, 341, 342]",
		node_type=FUNCTION_NAME,
		source_file="buggy_24.sol"];
	605 -> 602	[key=0,
		edge_type=next,
		label=Next];
}
