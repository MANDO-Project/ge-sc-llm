digraph "" {
	node [label="\N"];
	0	[contract_name=Ownable,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	1	[contract_name=Ownable,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_0(bool) = tx.origin == owner_txorigin21
\
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_0(bool) = tx.origin == owner_txorigin21
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=Ownable,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[34]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=Ownable,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_20.sol_Ownable_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	3 -> 0	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=Ownable,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	5	[contract_name=Ownable,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_3(bool) = tx.origin == owner_txorigin40
\
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_3(bool) = tx.origin == owner_txorigin40
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	4 -> 5	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=Ownable,
		function_fullname="bug_txorigin40(address)",
		label="buggy_20.sol_Ownable_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	6 -> 4	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=Ownable,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	8	[contract_name=Ownable,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[44]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	7 -> 8	[key=0,
		edge_type=next,
		label=Next];
	9	[contract_name=Ownable,
		function_fullname="constructor()",
		label="buggy_20.sol_Ownable_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	9 -> 7	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=Ownable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	11	[contract_name=Ownable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_5(bool) = tx.origin == owner_txorigin17
\
TMP_6(None) = SOLIDITY_CALL require(bool)(TMP_5)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_5(bool) = tx.origin == owner_txorigin17
TMP_6(None) = SOLIDITY_CALL require(bool)(TMP_5)",
		node_source_code_lines="[47]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	10 -> 11	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=Ownable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[48]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	11 -> 12	[key=0,
		edge_type=next,
		label=Next];
	13	[contract_name=Ownable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_20.sol_Ownable_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	13 -> 10	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=Ownable,
		function_fullname="changeOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	17	[contract_name=Ownable,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	14 -> 17	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=Ownable,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = _newOwner

IRs:
owner(address) := _newOwner(address)",
		node_expression="owner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := _newOwner(address)",
		node_source_code_lines="[57]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	16	[contract_name=Ownable,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnerChanged(msg.sender,_newOwner)

IRs:
Emit OwnerChanged(msg.sender._newOwner)",
		node_expression="OwnerChanged(msg.sender,_newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnerChanged(msg.sender._newOwner)",
		node_source_code_lines="[58]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	15 -> 16	[key=0,
		edge_type=next,
		label=Next];
	17 -> 15	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=Ownable,
		function_fullname="changeOwner(address)",
		label="buggy_20.sol_Ownable_changeOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	18 -> 14	[key=0,
		edge_type=next,
		label=Next];
	19	[contract_name=Ownable,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	20	[contract_name=Ownable,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_10(bool) = tx.origin == owner_txorigin37
\
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_10(bool) = tx.origin == owner_txorigin37
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	19 -> 20	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=Ownable,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	20 -> 21	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=Ownable,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_20.sol_Ownable_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	22 -> 19	[key=0,
		edge_type=next,
		label=Next];
	23	[contract_name=Ownable,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51, 52, 53, 54]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	24	[contract_name=Ownable,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender == owner,only the owner can call this)

IRs:
TMP_13(bool) = msg.sender == \
owner
TMP_14(None) = SOLIDITY_CALL require(bool,string)(TMP_13,only the owner can call this)",
		node_expression="require(bool,string)(msg.sender == owner,only the owner can call this)",
		node_info_vulnerabilities=None,
		node_irs="TMP_13(bool) = msg.sender == owner
TMP_14(None) = SOLIDITY_CALL require(bool,string)(TMP_13,only the owner can call this)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=Ownable,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[53]",
		node_type=_,
		source_file="buggy_20.sol"];
	24 -> 25	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=Ownable,
		function_fullname="onlyOwner()",
		label="buggy_20.sol_Ownable_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51, 52, 53, 54]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	26 -> 23	[key=0,
		edge_type=next,
		label=Next];
	27	[contract_name=Stoppable,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	28	[contract_name=Stoppable,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_15(bool) = tx.origin == owner_txorigin21
\
TMP_16(None) = SOLIDITY_CALL require(bool)(TMP_15)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_15(bool) = tx.origin == owner_txorigin21
TMP_16(None) = SOLIDITY_CALL require(bool)(TMP_15)",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=Stoppable,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[34]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	28 -> 29	[key=0,
		edge_type=next,
		label=Next];
	30	[contract_name=Stoppable,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_20.sol_Stoppable_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	30 -> 27	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=Stoppable,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	32	[contract_name=Stoppable,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_18(bool) = tx.origin == owner_txorigin40
\
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_18(bool) = tx.origin == owner_txorigin40
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	31 -> 32	[key=0,
		edge_type=next,
		label=Next];
	33	[contract_name=Stoppable,
		function_fullname="bug_txorigin40(address)",
		label="buggy_20.sol_Stoppable_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	33 -> 31	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=Stoppable,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	35	[contract_name=Stoppable,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[44]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	34 -> 35	[key=0,
		edge_type=next,
		label=Next];
	36	[contract_name=Stoppable,
		function_fullname="constructor()",
		label="buggy_20.sol_Stoppable_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	36 -> 34	[key=0,
		edge_type=next,
		label=Next];
	37	[contract_name=Stoppable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	38	[contract_name=Stoppable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_20(bool) = tx.origin == owner_txorigin17
\
TMP_21(None) = SOLIDITY_CALL require(bool)(TMP_20)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_20(bool) = tx.origin == owner_txorigin17
TMP_21(None) = SOLIDITY_CALL require(bool)(TMP_20)",
		node_source_code_lines="[47]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	37 -> 38	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=Stoppable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[48]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	38 -> 39	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=Stoppable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_20.sol_Stoppable_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	40 -> 37	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=Stoppable,
		function_fullname="changeOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	44	[contract_name=Stoppable,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	41 -> 44	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=Stoppable,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = _newOwner

IRs:
owner(address) := _newOwner(address)",
		node_expression="owner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := _newOwner(address)",
		node_source_code_lines="[57]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	43	[contract_name=Stoppable,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnerChanged(msg.sender,_newOwner)

IRs:
Emit OwnerChanged(msg.sender._newOwner)",
		node_expression="OwnerChanged(msg.sender,_newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnerChanged(msg.sender._newOwner)",
		node_source_code_lines="[58]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	42 -> 43	[key=0,
		edge_type=next,
		label=Next];
	44 -> 42	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=Stoppable,
		function_fullname="changeOwner(address)",
		label="buggy_20.sol_Stoppable_changeOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	45 -> 41	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=Stoppable,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	47	[contract_name=Stoppable,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_25(bool) = tx.origin == owner_txorigin37
\
TMP_26(None) = SOLIDITY_CALL require(bool)(TMP_25)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_25(bool) = tx.origin == owner_txorigin37
TMP_26(None) = SOLIDITY_CALL require(bool)(TMP_25)",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	46 -> 47	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=Stoppable,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	47 -> 48	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=Stoppable,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_20.sol_Stoppable_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	49 -> 46	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=Stoppable,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	51	[contract_name=Stoppable,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_28(bool) = tx.origin == owner_txorigin10
\
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_28(bool) = tx.origin == owner_txorigin10
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_source_code_lines="[74]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	50 -> 51	[key=0,
		edge_type=next,
		label=Next];
	52	[contract_name=Stoppable,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_30 = CONVERT this to address
REF_7 -> BALANCE \
TMP_30
Transfer dest:_recipient value:REF_7",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_30 = CONVERT this to address
REF_7 -> BALANCE TMP_30
Transfer dest:_recipient value:REF_7",
		node_source_code_lines="[75]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=Stoppable,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_20.sol_Stoppable_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	53 -> 50	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=Stoppable,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[79, 80, 81, 82]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	55	[contract_name=Stoppable,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_32(bool) = tx.origin == owner_txorigin33
\
TMP_33(None) = SOLIDITY_CALL require(bool)(TMP_32)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_32(bool) = tx.origin == owner_txorigin33
TMP_33(None) = SOLIDITY_CALL require(bool)(TMP_32)",
		node_source_code_lines="[80]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	54 -> 55	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=Stoppable,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=Stoppable,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_20.sol_Stoppable_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[79, 80, 81, 82]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	57 -> 54	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=Stoppable,
		function_fullname="setIsActive(bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	64	[contract_name=Stoppable,
		function_fullname="setIsActive(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[90]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	58 -> 64	[key=0,
		edge_type=next,
		label=Next];
	59	[contract_name=Stoppable,
		function_fullname="setIsActive(bool)",
		label="Node Type: IF

EXPRESSION:
_isActive == isActive

IRs:
TMP_35(bool) = _isActive == isActive
CONDITION TMP_35",
		node_expression="_isActive == isActive",
		node_info_vulnerabilities=None,
		node_irs="TMP_35(bool) = _isActive == isActive
CONDITION TMP_35",
		node_source_code_lines="[91]",
		node_type=IF,
		source_file="buggy_20.sol"];
	60	[contract_name=Stoppable,
		function_fullname="setIsActive(bool)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[91]",
		node_type=RETURN,
		source_file="buggy_20.sol"];
	59 -> 60	[key=0,
		edge_type=if_true,
		label=True];
	61	[contract_name=Stoppable,
		function_fullname="setIsActive(bool)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[91]",
		node_type=END_IF,
		source_file="buggy_20.sol"];
	59 -> 61	[key=0,
		edge_type=if_false,
		label=False];
	62	[contract_name=Stoppable,
		function_fullname="setIsActive(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
isActive = _isActive

IRs:
isActive(bool) := _isActive(bool)",
		node_expression="isActive = _isActive",
		node_info_vulnerabilities=None,
		node_irs="isActive(bool) := _isActive(bool)",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	61 -> 62	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=Stoppable,
		function_fullname="setIsActive(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
IsActiveChanged(_isActive)

IRs:
Emit IsActiveChanged(_isActive)",
		node_expression="IsActiveChanged(_isActive)",
		node_info_vulnerabilities=None,
		node_irs="Emit IsActiveChanged(_isActive)",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	62 -> 63	[key=0,
		edge_type=next,
		label=Next];
	64 -> 59	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Stoppable,
		function_fullname="setIsActive(bool)",
		label="buggy_20.sol_Stoppable_setIsActive(bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	65 -> 58	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=Stoppable,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	67	[contract_name=Stoppable,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_38(bool) = tx.origin == owner_txorigin3
\
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_38(bool) = tx.origin == owner_txorigin3
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	66 -> 67	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=Stoppable,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=Stoppable,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_20.sol_Stoppable_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	69 -> 66	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=Stoppable,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
isActive = true

IRs:
isActive(bool) := True(bool)",
		node_expression="isActive = true",
		node_info_vulnerabilities=None,
		node_irs="isActive(bool) := True(bool)",
		node_source_code_lines="[77]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_20.sol"];
	71	[contract_name=Stoppable,
		function_fullname="slitherConstructorVariables()",
		label="buggy_20.sol_Stoppable_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	71 -> 70	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=Stoppable,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51, 52, 53, 54]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	73	[contract_name=Stoppable,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender == owner,only the owner can call this)

IRs:
TMP_41(bool) = msg.sender == \
owner
TMP_42(None) = SOLIDITY_CALL require(bool,string)(TMP_41,only the owner can call this)",
		node_expression="require(bool,string)(msg.sender == owner,only the owner can call this)",
		node_info_vulnerabilities=None,
		node_irs="TMP_41(bool) = msg.sender == owner
TMP_42(None) = SOLIDITY_CALL require(bool,string)(TMP_41,only the owner can call this)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	72 -> 73	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=Stoppable,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[53]",
		node_type=_,
		source_file="buggy_20.sol"];
	73 -> 74	[key=0,
		edge_type=next,
		label=Next];
	75	[contract_name=Stoppable,
		function_fullname="onlyOwner()",
		label="buggy_20.sol_Stoppable_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51, 52, 53, 54]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	75 -> 72	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=Stoppable,
		function_fullname="onlyActive()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	77	[contract_name=Stoppable,
		function_fullname="onlyActive()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isActive,contract is stopped)

IRs:
TMP_43(None) = SOLIDITY_CALL require(\
bool,string)(isActive,contract is stopped)",
		node_expression="require(bool,string)(isActive,contract is stopped)",
		node_info_vulnerabilities=None,
		node_irs="TMP_43(None) = SOLIDITY_CALL require(bool,string)(isActive,contract is stopped)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	76 -> 77	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=Stoppable,
		function_fullname="onlyActive()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[87]",
		node_type=_,
		source_file="buggy_20.sol"];
	77 -> 78	[key=0,
		edge_type=next,
		label=Next];
	79	[contract_name=Stoppable,
		function_fullname="onlyActive()",
		label="buggy_20.sol_Stoppable_onlyActive()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	79 -> 76	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=RampInstantPoolInterface,
		function_fullname="sendFundsToSwap(uint256)",
		label="buggy_20.sol_RampInstantPoolInterface_sendFundsToSwap(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	81	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="release(address,address,address,bytes,bytes32)",
		label="buggy_20.sol_RampInstantEscrowsPoolInterface_release(address,address,address,bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[123, 124, 125, 126, 127, 128, 129, 130]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	82	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[131, 132, 133, 134]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	83	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_44(bool) = tx.origin == owner_txorigin9
\
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_44(bool) = tx.origin == owner_txorigin9
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_source_code_lines="[132]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	82 -> 83	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	83 -> 84	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_20.sol_RampInstantEscrowsPoolInterface_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[131, 132, 133, 134]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	85 -> 82	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="returnFunds(address,address,address,bytes,bytes32)",
		label="buggy_20.sol_RampInstantEscrowsPoolInterface_returnFunds(address,address,address,bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[136, 137, 138, 139, 140, 141, 142, 143]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	87	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	88	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_47(bool) = tx.origin == owner_txorigin25
\
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_47(bool) = tx.origin == owner_txorigin25
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	88 -> 89	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=RampInstantEscrowsPoolInterface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_20.sol_RampInstantEscrowsPoolInterface_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	90 -> 87	[key=0,
		edge_type=next,
		label=Next];
	91	[contract_name=RampInstantPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="buggy_20.sol_RampInstantPool_sendFundsToSwap(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	92	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	93	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_50(bool) = tx.origin == owner_txorigin10
\
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_50(bool) = tx.origin == owner_txorigin10
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_source_code_lines="[74]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	92 -> 93	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_52 = CONVERT this to address
REF_14 -> BALANCE \
TMP_52
Transfer dest:_recipient value:REF_14",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_52 = CONVERT this to address
REF_14 -> BALANCE TMP_52
Transfer dest:_recipient value:REF_14",
		node_source_code_lines="[75]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	93 -> 94	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_20.sol_RampInstantPool_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	95 -> 92	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[79, 80, 81, 82]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	97	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_54(bool) = tx.origin == owner_txorigin33
\
TMP_55(None) = SOLIDITY_CALL require(bool)(TMP_54)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_54(bool) = tx.origin == owner_txorigin33
TMP_55(None) = SOLIDITY_CALL require(bool)(TMP_54)",
		node_source_code_lines="[80]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	96 -> 97	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	97 -> 98	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[79, 80, 81, 82]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	99 -> 96	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=RampInstantPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	106	[contract_name=RampInstantPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[90]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	100 -> 106	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=RampInstantPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: IF

EXPRESSION:
_isActive == isActive

IRs:
TMP_57(bool) = _isActive == isActive
CONDITION TMP_57",
		node_expression="_isActive == isActive",
		node_info_vulnerabilities=None,
		node_irs="TMP_57(bool) = _isActive == isActive
CONDITION TMP_57",
		node_source_code_lines="[91]",
		node_type=IF,
		source_file="buggy_20.sol"];
	102	[contract_name=RampInstantPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[91]",
		node_type=RETURN,
		source_file="buggy_20.sol"];
	101 -> 102	[key=0,
		edge_type=if_true,
		label=True];
	103	[contract_name=RampInstantPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[91]",
		node_type=END_IF,
		source_file="buggy_20.sol"];
	101 -> 103	[key=0,
		edge_type=if_false,
		label=False];
	104	[contract_name=RampInstantPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
isActive = _isActive

IRs:
isActive(bool) := _isActive(bool)",
		node_expression="isActive = _isActive",
		node_info_vulnerabilities=None,
		node_irs="isActive(bool) := _isActive(bool)",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=RampInstantPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
IsActiveChanged(_isActive)

IRs:
Emit IsActiveChanged(_isActive)",
		node_expression="IsActiveChanged(_isActive)",
		node_info_vulnerabilities=None,
		node_irs="Emit IsActiveChanged(_isActive)",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	104 -> 105	[key=0,
		edge_type=next,
		label=Next];
	106 -> 101	[key=0,
		edge_type=next,
		label=Next];
	107	[contract_name=RampInstantPool,
		function_fullname="setIsActive(bool)",
		label="buggy_20.sol_RampInstantPool_setIsActive(bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	107 -> 100	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	109	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_60(bool) = tx.origin == owner_txorigin3
\
TMP_61(None) = SOLIDITY_CALL require(bool)(TMP_60)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_60(bool) = tx.origin == owner_txorigin3
TMP_61(None) = SOLIDITY_CALL require(bool)(TMP_60)",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	108 -> 109	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_16(None) -> to.call
REF_17(None) -> REF_16.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_16(None) -> to.call
REF_17(None) -> REF_16.value",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	109 -> 110	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	111 -> 108	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	113	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_63(bool) = tx.origin == owner_txorigin21
\
TMP_64(None) = SOLIDITY_CALL require(bool)(TMP_63)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_63(bool) = tx.origin == owner_txorigin21
TMP_64(None) = SOLIDITY_CALL require(bool)(TMP_63)",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[34]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	115 -> 112	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	117	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_66(bool) = tx.origin == owner_txorigin40
\
TMP_67(None) = SOLIDITY_CALL require(bool)(TMP_66)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_66(bool) = tx.origin == owner_txorigin40
TMP_67(None) = SOLIDITY_CALL require(bool)(TMP_66)",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	116 -> 117	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin40(address)",
		label="buggy_20.sol_RampInstantPool_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	118 -> 116	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=RampInstantPool,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	120	[contract_name=RampInstantPool,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[44]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	119 -> 120	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=RampInstantPool,
		function_fullname="constructor()",
		label="buggy_20.sol_RampInstantPool_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	121 -> 119	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	123	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_68(bool) = tx.origin == owner_txorigin17
\
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_68(bool) = tx.origin == owner_txorigin17
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_source_code_lines="[47]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	122 -> 123	[key=0,
		edge_type=next,
		label=Next];
	124	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[48]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	123 -> 124	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	125 -> 122	[key=0,
		edge_type=next,
		label=Next];
	126	[contract_name=RampInstantPool,
		function_fullname="changeOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	129	[contract_name=RampInstantPool,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	126 -> 129	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=RampInstantPool,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = _newOwner

IRs:
owner(address) := _newOwner(address)",
		node_expression="owner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := _newOwner(address)",
		node_source_code_lines="[57]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	128	[contract_name=RampInstantPool,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnerChanged(msg.sender,_newOwner)

IRs:
Emit OwnerChanged(msg.sender._newOwner)",
		node_expression="OwnerChanged(msg.sender,_newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnerChanged(msg.sender._newOwner)",
		node_source_code_lines="[58]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	127 -> 128	[key=0,
		edge_type=next,
		label=Next];
	129 -> 127	[key=0,
		edge_type=next,
		label=Next];
	130	[contract_name=RampInstantPool,
		function_fullname="changeOwner(address)",
		label="buggy_20.sol_RampInstantPool_changeOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	130 -> 126	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	132	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_73(bool) = tx.origin == owner_txorigin37
\
TMP_74(None) = SOLIDITY_CALL require(bool)(TMP_73)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_73(bool) = tx.origin == owner_txorigin37
TMP_74(None) = SOLIDITY_CALL require(bool)(TMP_73)",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	131 -> 132	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	132 -> 133	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	134 -> 131	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	136	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_76(bool) = tx.origin == owner_txorigin22
\
TMP_77(None) = SOLIDITY_CALL require(bool)(TMP_76)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_76(bool) = tx.origin == owner_txorigin22
TMP_77(None) = SOLIDITY_CALL require(bool)(TMP_76)",
		node_source_code_lines="[172]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	135 -> 136	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_78 = CONVERT this to address
REF_22 -> BALANCE \
TMP_78
Transfer dest:_recipient value:REF_22",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_78 = CONVERT this to address
REF_22 -> BALANCE TMP_78
Transfer dest:_recipient value:REF_22",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_20.sol_RampInstantPool_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	138 -> 135	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[176, 177, 178]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	140	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_80(bool) = tx.origin == owner_txorigin12
\
TMP_81(None) = SOLIDITY_CALL require(bool)(TMP_80)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_80(bool) = tx.origin == owner_txorigin12
TMP_81(None) = SOLIDITY_CALL require(bool)(TMP_80)",
		node_source_code_lines="[177]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	139 -> 140	[key=0,
		edge_type=next,
		label=Next];
	141	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin12(address)",
		label="buggy_20.sol_RampInstantPool_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[176, 177, 178]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	141 -> 139	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[180, 181, 182, 183]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	143	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_82(bool) = tx.origin == owner_txorigin11
\
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_82(bool) = tx.origin == owner_txorigin11
TMP_83(None) = SOLIDITY_CALL require(bool)(TMP_82)",
		node_source_code_lines="[181]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	142 -> 143	[key=0,
		edge_type=next,
		label=Next];
	144	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_23(None) -> to.call
REF_24(None) -> REF_23.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_23(None) -> to.call
REF_24(None) -> REF_23.value",
		node_source_code_lines="[182]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[180, 181, 182, 183]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	145 -> 142	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187, 188]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	147	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_85(bool) = tx.origin == owner_txorigin1
\
TMP_86(None) = SOLIDITY_CALL require(bool)(TMP_85)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_85(bool) = tx.origin == owner_txorigin1
TMP_86(None) = SOLIDITY_CALL require(bool)(TMP_85)",
		node_source_code_lines="[186]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	146 -> 147	[key=0,
		edge_type=next,
		label=Next];
	148	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[187]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	147 -> 148	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187, 188]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	149 -> 146	[key=0,
		edge_type=next,
		label=Next];
	150	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[196, 197, 198, 199]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	151	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_88(bool) = tx.origin == owner_txorigin27
\
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_88(bool) = tx.origin == owner_txorigin27
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_source_code_lines="[197]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	150 -> 151	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_26(None) -> to.call
REF_27(None) -> REF_26.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_26(None) -> to.call
REF_27(None) -> REF_26.value",
		node_source_code_lines="[198]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	151 -> 152	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[196, 197, 198, 199]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	153 -> 150	[key=0,
		edge_type=next,
		label=Next];
	154	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	155	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_91(bool) = tx.origin == owner_txorigin31
\
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_91(bool) = tx.origin == owner_txorigin31
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_source_code_lines="[202]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_28(None) -> to.call
REF_29(None) -> REF_28.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_28(None) -> to.call
REF_29(None) -> REF_28.value",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	155 -> 156	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	157 -> 154	[key=0,
		edge_type=next,
		label=Next];
	158	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[206, 207, 208, 209]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	159	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_94(bool) = tx.origin == owner_txorigin13
\
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_94(bool) = tx.origin == owner_txorigin13
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_source_code_lines="[207]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	158 -> 159	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[208]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=RampInstantPool,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[206, 207, 208, 209]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	161 -> 158	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=RampInstantPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225, 226, 227, 228]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	168	[contract_name=RampInstantPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
validateLimits(_minSwapAmount,_maxSwapAmount)

IRs:
MODIFIER_CALL, RampInstantPool.validateLimits(\
uint256,uint256)(_minSwapAmount,_maxSwapAmount)",
		node_expression="validateLimits(_minSwapAmount,_maxSwapAmount)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.validateLimits(uint256,uint256)(_minSwapAmount,_maxSwapAmount)",
		node_source_code_lines="[220]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	162 -> 168	[key=0,
		edge_type=next,
		label=Next];
	163	[contract_name=RampInstantPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
swapsContract = _swapsContract

IRs:
swapsContract(address) := _swapsContract(address)",
		node_expression="swapsContract = _swapsContract",
		node_info_vulnerabilities=None,
		node_irs="swapsContract(address) := _swapsContract(address)",
		node_source_code_lines="[223]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	164	[contract_name=RampInstantPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
paymentDetailsHash = _paymentDetailsHash

IRs:
paymentDetailsHash(bytes32) := _paymentDetailsHash(\
bytes32)",
		node_expression="paymentDetailsHash = _paymentDetailsHash",
		node_info_vulnerabilities=None,
		node_irs="paymentDetailsHash(bytes32) := _paymentDetailsHash(bytes32)",
		node_source_code_lines="[224]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=RampInstantPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
minSwapAmount = _minSwapAmount

IRs:
minSwapAmount(uint256) := _minSwapAmount(uint256)",
		node_expression="minSwapAmount = _minSwapAmount",
		node_info_vulnerabilities=None,
		node_irs="minSwapAmount(uint256) := _minSwapAmount(uint256)",
		node_source_code_lines="[225]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	164 -> 165	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=RampInstantPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
maxSwapAmount = _maxSwapAmount

IRs:
maxSwapAmount(uint256) := _maxSwapAmount(uint256)",
		node_expression="maxSwapAmount = _maxSwapAmount",
		node_info_vulnerabilities=None,
		node_irs="maxSwapAmount(uint256) := _maxSwapAmount(uint256)",
		node_source_code_lines="[226]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	165 -> 166	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=RampInstantPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
ASSET_TYPE = _assetType

IRs:
ASSET_TYPE(uint16) := _assetType(uint16)",
		node_expression="ASSET_TYPE = _assetType",
		node_info_vulnerabilities=None,
		node_irs="ASSET_TYPE(uint16) := _assetType(uint16)",
		node_source_code_lines="[227]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=RampInstantPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
validateSwapsContract(_swapsContract,_assetType)

IRs:
MODIFIER_CALL, RampInstantPool.validateSwapsContract(\
address,uint16)(_swapsContract,_assetType)",
		node_expression="validateSwapsContract(_swapsContract,_assetType)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.validateSwapsContract(address,uint16)(_swapsContract,_assetType)",
		node_source_code_lines="[221]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	168 -> 169	[key=0,
		edge_type=next,
		label=Next];
	169 -> 163	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=RampInstantPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="buggy_20.sol_RampInstantPool_constructor(address,uint256,uint256,bytes32,uint16)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	170 -> 162	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[229, 230, 231, 232]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	172	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_99(bool) = tx.origin == owner_txorigin19
\
TMP_100(None) = SOLIDITY_CALL require(bool)(TMP_99)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_99(bool) = tx.origin == owner_txorigin19
TMP_100(None) = SOLIDITY_CALL require(bool)(TMP_99)",
		node_source_code_lines="[230]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	171 -> 172	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_31(None) -> to.call
REF_32(None) -> REF_31.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_31(None) -> to.call
REF_32(None) -> REF_31.value",
		node_source_code_lines="[231]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	172 -> 173	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[229, 230, 231, 232]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	174 -> 171	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=RampInstantPool,
		function_fullname="availableFunds()",
		label="buggy_20.sol_RampInstantPool_availableFunds()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	176	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[235, 236, 237, 238]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	177	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_102(bool) = tx.origin == owner_txorigin26
\
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_102(bool) = tx.origin == owner_txorigin26
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_source_code_lines="[236]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	176 -> 177	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_104 = CONVERT this to address
REF_34 -> \
BALANCE TMP_104
Transfer dest:_recipient value:REF_34",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_104 = CONVERT this to address
REF_34 -> BALANCE TMP_104
Transfer dest:_recipient value:REF_34",
		node_source_code_lines="[237]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	177 -> 178	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_20.sol_RampInstantPool_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[235, 236, 237, 238]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	179 -> 176	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=RampInstantPool,
		function_fullname="withdrawFunds(address,uint256)",
		label="buggy_20.sol_RampInstantPool_withdrawFunds(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[240, 241]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	181	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[242, 243, 244]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	182	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_106(bool) = tx.origin == owner_txorigin20
\
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_106(bool) = tx.origin == owner_txorigin20
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_source_code_lines="[243]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	181 -> 182	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin20(address)",
		label="buggy_20.sol_RampInstantPool_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[242, 243, 244]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	183 -> 181	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=RampInstantPool,
		function_fullname="withdrawAllFunds(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[246, 247, 248]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	186	[contract_name=RampInstantPool,
		function_fullname="withdrawAllFunds(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[246]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	184 -> 186	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=RampInstantPool,
		function_fullname="withdrawAllFunds(address)",
		label="Node Type: RETURN

EXPRESSION:
withdrawFunds(_to,availableFunds())

IRs:
TMP_108(uint256) = INTERNAL_CALL, RampInstantPool.availableFunds()()
\
TMP_109(bool) = INTERNAL_CALL, RampInstantPool.withdrawFunds(address,uint256)(_to,TMP_108)
RETURN TMP_109",
		node_expression="withdrawFunds(_to,availableFunds())",
		node_info_vulnerabilities=None,
		node_irs="TMP_108(uint256) = INTERNAL_CALL, RampInstantPool.availableFunds()()
TMP_109(bool) = INTERNAL_CALL, RampInstantPool.withdrawFunds(\
address,uint256)(_to,TMP_108)
RETURN TMP_109",
		node_source_code_lines="[247]",
		node_type=RETURN,
		source_file="buggy_20.sol"];
	186 -> 185	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=RampInstantPool,
		function_fullname="withdrawAllFunds(address)",
		label="buggy_20.sol_RampInstantPool_withdrawAllFunds(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[246, 247, 248]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	187 -> 184	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[249, 250, 251]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	189	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_111(bool) = tx.origin == owner_txorigin32
\
TMP_112(None) = SOLIDITY_CALL require(bool)(TMP_111)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_111(bool) = tx.origin == owner_txorigin32
TMP_112(None) = SOLIDITY_CALL require(bool)(TMP_111)",
		node_source_code_lines="[250]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	188 -> 189	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin32(address)",
		label="buggy_20.sol_RampInstantPool_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[249, 250, 251]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	190 -> 188	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=RampInstantPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[256, 257, 258, 259, 260]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	195	[contract_name=RampInstantPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[256]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	191 -> 195	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=RampInstantPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
minSwapAmount = _minAmount

IRs:
minSwapAmount(uint256) := _minAmount(uint256)",
		node_expression="minSwapAmount = _minAmount",
		node_info_vulnerabilities=None,
		node_irs="minSwapAmount(uint256) := _minAmount(uint256)",
		node_source_code_lines="[257]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	193	[contract_name=RampInstantPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
maxSwapAmount = _maxAmount

IRs:
maxSwapAmount(uint256) := _maxAmount(uint256)",
		node_expression="maxSwapAmount = _maxAmount",
		node_info_vulnerabilities=None,
		node_irs="maxSwapAmount(uint256) := _maxAmount(uint256)",
		node_source_code_lines="[258]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	192 -> 193	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=RampInstantPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
LimitsChanged(_minAmount,_maxAmount)

IRs:
Emit LimitsChanged(_minAmount._maxAmount)",
		node_expression="LimitsChanged(_minAmount,_maxAmount)",
		node_info_vulnerabilities=None,
		node_irs="Emit LimitsChanged(_minAmount._maxAmount)",
		node_source_code_lines="[259]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=RampInstantPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
validateLimits(_minAmount,_maxAmount)

IRs:
MODIFIER_CALL, RampInstantPool.validateLimits(uint256,\
uint256)(_minAmount,_maxAmount)",
		node_expression="validateLimits(_minAmount,_maxAmount)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.validateLimits(uint256,uint256)(_minAmount,_maxAmount)",
		node_source_code_lines="[256]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	195 -> 196	[key=0,
		edge_type=next,
		label=Next];
	196 -> 192	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=RampInstantPool,
		function_fullname="setLimits(uint256,uint256)",
		label="buggy_20.sol_RampInstantPool_setLimits(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[253, 254, 255, 256, 257, 258, 259, 260]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	197 -> 191	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[261, 262, 263, 264]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	199	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_116(bool) = tx.origin == owner_txorigin38
\
TMP_117(None) = SOLIDITY_CALL require(bool)(TMP_116)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_116(bool) = tx.origin == owner_txorigin38
TMP_117(None) = SOLIDITY_CALL require(bool)(TMP_116)",
		node_source_code_lines="[262]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	198 -> 199	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_118 = CONVERT this to address
REF_36 -> \
BALANCE TMP_118
Transfer dest:_recipient value:REF_36",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_118 = CONVERT this to address
REF_36 -> BALANCE TMP_118
Transfer dest:_recipient value:REF_36",
		node_source_code_lines="[263]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	199 -> 200	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_20.sol_RampInstantPool_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[261, 262, 263, 264]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	201 -> 198	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=RampInstantPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[268, 269, 270, 271, 272]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	206	[contract_name=RampInstantPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	202 -> 206	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=RampInstantPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
oldSwapsContract = swapsContract

IRs:
oldSwapsContract(address) := swapsContract(address)",
		node_expression="oldSwapsContract = swapsContract",
		node_info_vulnerabilities=None,
		node_irs="oldSwapsContract(address) := swapsContract(address)",
		node_source_code_lines="[269]",
		node_type="NEW VARIABLE",
		source_file="buggy_20.sol"];
	204	[contract_name=RampInstantPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
swapsContract = _swapsContract

IRs:
swapsContract(address) := _swapsContract(address)",
		node_expression="swapsContract = _swapsContract",
		node_info_vulnerabilities=None,
		node_irs="swapsContract(address) := _swapsContract(address)",
		node_source_code_lines="[270]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	203 -> 204	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=RampInstantPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
SwapsContractChanged(oldSwapsContract,_swapsContract)

IRs:
Emit SwapsContractChanged(oldSwapsContract._\
swapsContract)",
		node_expression="SwapsContractChanged(oldSwapsContract,_swapsContract)",
		node_info_vulnerabilities=None,
		node_irs="Emit SwapsContractChanged(oldSwapsContract._swapsContract)",
		node_source_code_lines="[271]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	204 -> 205	[key=0,
		edge_type=next,
		label=Next];
	207	[contract_name=RampInstantPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
validateSwapsContract(_swapsContract,ASSET_TYPE)

IRs:
MODIFIER_CALL, RampInstantPool.validateSwapsContract(\
address,uint16)(_swapsContract,ASSET_TYPE)",
		node_expression="validateSwapsContract(_swapsContract,ASSET_TYPE)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.validateSwapsContract(address,uint16)(_swapsContract,ASSET_TYPE)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	207 -> 203	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=RampInstantPool,
		function_fullname="setSwapsContract(address)",
		label="buggy_20.sol_RampInstantPool_setSwapsContract(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[266, 267, 268, 269, 270, 271, 272]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	208 -> 202	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[273, 274, 275]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	210	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_123(bool) = tx.origin == owner_txorigin4
\
TMP_124(None) = SOLIDITY_CALL require(bool)(TMP_123)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_123(bool) = tx.origin == owner_txorigin4
TMP_124(None) = SOLIDITY_CALL require(bool)(TMP_123)",
		node_source_code_lines="[274]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	209 -> 210	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=RampInstantPool,
		function_fullname="bug_txorigin4(address)",
		label="buggy_20.sol_RampInstantPool_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[273, 274, 275]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	211 -> 209	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=RampInstantPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="buggy_20.sol_RampInstantPool_sendFundsToSwap(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	213	[contract_name=RampInstantPool,
		function_fullname="releaseSwap(address,address,bytes,bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[285, 286, 287, 288, 289, 290, 291, 292, 293]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	215	[contract_name=RampInstantPool,
		function_fullname="releaseSwap(address,address,bytes,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[285]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	213 -> 215	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=RampInstantPool,
		function_fullname="releaseSwap(address,address,bytes,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
RampInstantEscrowsPoolInterface(swapsContract).release(address(this),_receiver,_oracle,_assetData,_\
paymentDetailsHash)

IRs:
TMP_125 = CONVERT swapsContract to RampInstantEscrowsPoolInterface
TMP_126 = CONVERT this to address
HIGH_\
LEVEL_CALL, dest:TMP_125(RampInstantEscrowsPoolInterface), function:release, arguments:['TMP_126', '_receiver', '_oracle', '_assetData', '_\
paymentDetailsHash']  ",
		node_expression="RampInstantEscrowsPoolInterface(swapsContract).release(address(this),_receiver,_oracle,_assetData,_paymentDetailsHash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_125 = CONVERT swapsContract to RampInstantEscrowsPoolInterface
TMP_126 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_125(\
RampInstantEscrowsPoolInterface), function:release, arguments:['TMP_126', '_receiver', '_oracle', '_assetData', '_paymentDetailsHash']  ",
		node_source_code_lines="[286, 287, 288, 289, 290, 291, 292]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	215 -> 214	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=RampInstantPool,
		function_fullname="releaseSwap(address,address,bytes,bytes32)",
		label="buggy_20.sol_RampInstantPool_releaseSwap(address,address,bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	216 -> 213	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[294, 295, 296, 297]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	218	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_129(bool) = tx.origin == owner_txorigin7
\
TMP_130(None) = SOLIDITY_CALL require(bool)(TMP_129)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_129(bool) = tx.origin == owner_txorigin7
TMP_130(None) = SOLIDITY_CALL require(bool)(TMP_129)",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	217 -> 218	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_38(None) -> to.call
REF_39(None) -> REF_38.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_38(None) -> to.call
REF_39(None) -> REF_38.value",
		node_source_code_lines="[296]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	218 -> 219	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[294, 295, 296, 297]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	220 -> 217	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=RampInstantPool,
		function_fullname="returnSwap(address,address,bytes,bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310, 311, 312]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	223	[contract_name=RampInstantPool,
		function_fullname="returnSwap(address,address,bytes,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[304]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	221 -> 223	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=RampInstantPool,
		function_fullname="returnSwap(address,address,bytes,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
RampInstantEscrowsPoolInterface(swapsContract).returnFunds(address(this),_receiver,_oracle,_assetData,_\
paymentDetailsHash)

IRs:
TMP_132 = CONVERT swapsContract to RampInstantEscrowsPoolInterface
TMP_133 = CONVERT this to address
HIGH_\
LEVEL_CALL, dest:TMP_132(RampInstantEscrowsPoolInterface), function:returnFunds, arguments:['TMP_133', '_receiver', '_oracle', '_\
assetData', '_paymentDetailsHash']  ",
		node_expression="RampInstantEscrowsPoolInterface(swapsContract).returnFunds(address(this),_receiver,_oracle,_assetData,_paymentDetailsHash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_132 = CONVERT swapsContract to RampInstantEscrowsPoolInterface
TMP_133 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_132(\
RampInstantEscrowsPoolInterface), function:returnFunds, arguments:['TMP_133', '_receiver', '_oracle', '_assetData', '_paymentDetailsHash']  ",
		node_source_code_lines="[305, 306, 307, 308, 309, 310, 311]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	223 -> 222	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=RampInstantPool,
		function_fullname="returnSwap(address,address,bytes,bytes32)",
		label="buggy_20.sol_RampInstantPool_returnSwap(address,address,bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	224 -> 221	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315, 316]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	226	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_136(bool) = tx.origin == owner_txorigin23
\
TMP_137(None) = SOLIDITY_CALL require(bool)(TMP_136)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_136(bool) = tx.origin == owner_txorigin23
TMP_137(None) = SOLIDITY_CALL require(bool)(TMP_136)",
		node_source_code_lines="[314]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	225 -> 226	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_41(None) -> to.call
REF_42(None) -> REF_41.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_41(None) -> to.call
REF_42(None) -> REF_41.value",
		node_source_code_lines="[315]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	226 -> 227	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=RampInstantPool,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_20.sol_RampInstantPool_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315, 316]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	228 -> 225	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=RampInstantPool,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	230	[contract_name=RampInstantPool,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
revert(string)(this pool cannot receive ether)

IRs:
TMP_139(None) = SOLIDITY_CALL revert(string)(\
this pool cannot receive ether)",
		node_expression="revert(string)(this pool cannot receive ether)",
		node_info_vulnerabilities=None,
		node_irs="TMP_139(None) = SOLIDITY_CALL revert(string)(this pool cannot receive ether)",
		node_source_code_lines="[323]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=RampInstantPool,
		function_fullname="fallback()",
		label="buggy_20.sol_RampInstantPool_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	231 -> 229	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[325, 326, 327, 328]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	233	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_140(bool) = tx.origin == owner_txorigin14
\
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_140(bool) = tx.origin == owner_txorigin14
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_source_code_lines="[326]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	232 -> 233	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_142 = CONVERT this to address
REF_44 -> \
BALANCE TMP_142
Transfer dest:_recipient value:REF_44",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_142 = CONVERT this to address
REF_44 -> BALANCE TMP_142
Transfer dest:_recipient value:REF_44",
		node_source_code_lines="[327]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	233 -> 234	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=RampInstantPool,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_20.sol_RampInstantPool_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[325, 326, 327, 328]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	235 -> 232	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=RampInstantPool,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
isActive = true

IRs:
isActive(bool) := True(bool)",
		node_expression="isActive = true",
		node_info_vulnerabilities=None,
		node_irs="isActive(bool) := True(bool)",
		node_source_code_lines="[77]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_20.sol"];
	237	[contract_name=RampInstantPool,
		function_fullname="slitherConstructorVariables()",
		label="buggy_20.sol_RampInstantPool_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, \
192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, \
218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, \
244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, \
270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, \
296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, \
322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, \
348, 349, 350, 351, 352, 353, 354, 355]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	237 -> 236	[key=0,
		edge_type=next,
		label=Next];
	238	[contract_name=RampInstantPool,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
MAX_SWAP_AMOUNT_LIMIT = 1 << 240

IRs:
TMP_144(uint256) = 1 << 240
MAX_SWAP_AMOUNT_LIMIT(\
uint256) := TMP_144(uint256)",
		node_expression="MAX_SWAP_AMOUNT_LIMIT = 1 << 240",
		node_info_vulnerabilities=None,
		node_irs="TMP_144(uint256) = 1 << 240
MAX_SWAP_AMOUNT_LIMIT(uint256) := TMP_144(uint256)",
		node_source_code_lines="[168]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_20.sol"];
	239	[contract_name=RampInstantPool,
		function_fullname="slitherConstructorConstantVariables()",
		label="buggy_20.sol_RampInstantPool_slitherConstructorConstantVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, \
192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, \
218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, \
244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, \
270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, \
296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, \
322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, \
348, 349, 350, 351, 352, 353, 354, 355]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	239 -> 238	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=RampInstantPool,
		function_fullname="onlyActive()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	241	[contract_name=RampInstantPool,
		function_fullname="onlyActive()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isActive,contract is stopped)

IRs:
TMP_145(None) = SOLIDITY_CALL require(\
bool,string)(isActive,contract is stopped)",
		node_expression="require(bool,string)(isActive,contract is stopped)",
		node_info_vulnerabilities=None,
		node_irs="TMP_145(None) = SOLIDITY_CALL require(bool,string)(isActive,contract is stopped)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	240 -> 241	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=RampInstantPool,
		function_fullname="onlyActive()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[87]",
		node_type=_,
		source_file="buggy_20.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=RampInstantPool,
		function_fullname="onlyActive()",
		label="buggy_20.sol_RampInstantPool_onlyActive()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	243 -> 240	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=RampInstantPool,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51, 52, 53, 54]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	245	[contract_name=RampInstantPool,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender == owner,only the owner can call this)

IRs:
TMP_146(bool) = \
msg.sender == owner
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,only the owner can call this)",
		node_expression="require(bool,string)(msg.sender == owner,only the owner can call this)",
		node_info_vulnerabilities=None,
		node_irs="TMP_146(bool) = msg.sender == owner
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,only the owner can call this)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	244 -> 245	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=RampInstantPool,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[53]",
		node_type=_,
		source_file="buggy_20.sol"];
	245 -> 246	[key=0,
		edge_type=next,
		label=Next];
	247	[contract_name=RampInstantPool,
		function_fullname="onlyOwner()",
		label="buggy_20.sol_RampInstantPool_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51, 52, 53, 54]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	247 -> 244	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=RampInstantPool,
		function_fullname="onlySwapsContract()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[330, 331, 332, 333]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	249	[contract_name=RampInstantPool,
		function_fullname="onlySwapsContract()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender == swapsContract,only the swaps contract can call this)

IRs:
\
TMP_148(bool) = msg.sender == swapsContract
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,only the swaps contract can \
call this)",
		node_expression="require(bool,string)(msg.sender == swapsContract,only the swaps contract can call this)",
		node_info_vulnerabilities=None,
		node_irs="TMP_148(bool) = msg.sender == swapsContract
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,only the swaps contract can \
call this)",
		node_source_code_lines="[331]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	248 -> 249	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=RampInstantPool,
		function_fullname="onlySwapsContract()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[332]",
		node_type=_,
		source_file="buggy_20.sol"];
	249 -> 250	[key=0,
		edge_type=next,
		label=Next];
	251	[contract_name=RampInstantPool,
		function_fullname="onlySwapsContract()",
		label="buggy_20.sol_RampInstantPool_onlySwapsContract()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[330, 331, 332, 333]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	251 -> 248	[key=0,
		edge_type=next,
		label=Next];
	252	[contract_name=RampInstantPool,
		function_fullname="isWithinLimits(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	253	[contract_name=RampInstantPool,
		function_fullname="isWithinLimits(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_amount >= minSwapAmount && _amount <= maxSwapAmount,amount outside swap \
limits)

IRs:
TMP_150(bool) = _amount >= minSwapAmount
TMP_151(bool) = _amount <= maxSwapAmount
TMP_152(bool) = TMP_150 && TMP_151
\
TMP_153(None) = SOLIDITY_CALL require(bool,string)(TMP_152,amount outside swap limits)",
		node_expression="require(bool,string)(_amount >= minSwapAmount && _amount <= maxSwapAmount,amount outside swap limits)",
		node_info_vulnerabilities=None,
		node_irs="TMP_150(bool) = _amount >= minSwapAmount
TMP_151(bool) = _amount <= maxSwapAmount
TMP_152(bool) = TMP_150 && TMP_151
TMP_153(None) = \
SOLIDITY_CALL require(bool,string)(TMP_152,amount outside swap limits)",
		node_source_code_lines="[336]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=RampInstantPool,
		function_fullname="isWithinLimits(uint256)",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[337]",
		node_type=_,
		source_file="buggy_20.sol"];
	253 -> 254	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=RampInstantPool,
		function_fullname="isWithinLimits(uint256)",
		label="buggy_20.sol_RampInstantPool_isWithinLimits(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	255 -> 252	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=RampInstantPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343, 344]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	257	[contract_name=RampInstantPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_minAmount <= _maxAmount,min limit over max limit)

IRs:
TMP_154(bool) = _\
minAmount <= _maxAmount
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,min limit over max limit)",
		node_expression="require(bool,string)(_minAmount <= _maxAmount,min limit over max limit)",
		node_info_vulnerabilities=None,
		node_irs="TMP_154(bool) = _minAmount <= _maxAmount
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,min limit over max limit)",
		node_source_code_lines="[341]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=RampInstantPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_maxAmount <= MAX_SWAP_AMOUNT_LIMIT,maxAmount too high)

IRs:
TMP_156(bool) = _\
maxAmount <= MAX_SWAP_AMOUNT_LIMIT
TMP_157(None) = SOLIDITY_CALL require(bool,string)(TMP_156,maxAmount too high)",
		node_expression="require(bool,string)(_maxAmount <= MAX_SWAP_AMOUNT_LIMIT,maxAmount too high)",
		node_info_vulnerabilities=None,
		node_irs="TMP_156(bool) = _maxAmount <= MAX_SWAP_AMOUNT_LIMIT
TMP_157(None) = SOLIDITY_CALL require(bool,string)(TMP_156,maxAmount too high)",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	257 -> 258	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=RampInstantPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[343]",
		node_type=_,
		source_file="buggy_20.sol"];
	258 -> 259	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=RampInstantPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="buggy_20.sol_RampInstantPool_validateLimits(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343, 344]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	260 -> 256	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=RampInstantPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[346, 347, 348, 349, 350, 351, 352, 353]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	262	[contract_name=RampInstantPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_swapsContract != address(0),null swaps contract address)

IRs:
TMP_158 = \
CONVERT 0 to address
TMP_159(bool) = _swapsContract != TMP_158
TMP_160(None) = SOLIDITY_CALL require(bool,string)(TMP_159,null swaps \
contract address)",
		node_expression="require(bool,string)(_swapsContract != address(0),null swaps contract address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_158 = CONVERT 0 to address
TMP_159(bool) = _swapsContract != TMP_158
TMP_160(None) = SOLIDITY_CALL require(bool,string)(TMP_\
159,null swaps contract address)",
		node_source_code_lines="[347]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=RampInstantPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(RampInstantEscrowsPoolInterface(_swapsContract).ASSET_TYPE() == _assetType,\
pool asset type doesn't match swap contract)

IRs:
TMP_161 = CONVERT _swapsContract to RampInstantEscrowsPoolInterface
TMP_162(uint16) = \
HIGH_LEVEL_CALL, dest:TMP_161(RampInstantEscrowsPoolInterface), function:ASSET_TYPE, arguments:[]  
TMP_163(bool) = TMP_162 == _\
assetType
TMP_164(None) = SOLIDITY_CALL require(bool,string)(TMP_163,pool asset type doesn't match swap contract)",
		node_expression="require(bool,string)(RampInstantEscrowsPoolInterface(_swapsContract).ASSET_TYPE() == _assetType,pool asset type doesn't match swap \
contract)",
		node_info_vulnerabilities=None,
		node_irs="TMP_161 = CONVERT _swapsContract to RampInstantEscrowsPoolInterface
TMP_162(uint16) = HIGH_LEVEL_CALL, dest:TMP_161(RampInstantEscrowsPoolInterface), \
function:ASSET_TYPE, arguments:[]  
TMP_163(bool) = TMP_162 == _assetType
TMP_164(None) = SOLIDITY_CALL require(bool,string)(TMP_\
163,pool asset type doesn't match swap contract)",
		node_source_code_lines="[348, 349, 350, 351]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	262 -> 263	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=RampInstantPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[352]",
		node_type=_,
		source_file="buggy_20.sol"];
	263 -> 264	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=RampInstantPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="buggy_20.sol_RampInstantPool_validateSwapsContract(address,uint16)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[346, 347, 348, 349, 350, 351, 352, 353]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	265 -> 261	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	267	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_165(bool) = tx.origin == owner_txorigin22
\
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_165(bool) = tx.origin == owner_txorigin22
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_source_code_lines="[172]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_167 = CONVERT this to address
REF_47 -> \
BALANCE TMP_167
Transfer dest:_recipient value:REF_47",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_167 = CONVERT this to address
REF_47 -> BALANCE TMP_167
Transfer dest:_recipient value:REF_47",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_20.sol_RampInstantEthPool_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	269 -> 266	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[176, 177, 178]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	271	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_169(bool) = tx.origin == owner_txorigin12
\
TMP_170(None) = SOLIDITY_CALL require(bool)(TMP_169)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_169(bool) = tx.origin == owner_txorigin12
TMP_170(None) = SOLIDITY_CALL require(bool)(TMP_169)",
		node_source_code_lines="[177]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	270 -> 271	[key=0,
		edge_type=next,
		label=Next];
	272	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin12(address)",
		label="buggy_20.sol_RampInstantEthPool_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[176, 177, 178]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	272 -> 270	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[180, 181, 182, 183]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	274	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_171(bool) = tx.origin == owner_txorigin11
\
TMP_172(None) = SOLIDITY_CALL require(bool)(TMP_171)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_171(bool) = tx.origin == owner_txorigin11
TMP_172(None) = SOLIDITY_CALL require(bool)(TMP_171)",
		node_source_code_lines="[181]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	273 -> 274	[key=0,
		edge_type=next,
		label=Next];
	275	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_48(None) -> to.call
REF_49(None) -> REF_48.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_48(None) -> to.call
REF_49(None) -> REF_48.value",
		node_source_code_lines="[182]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	274 -> 275	[key=0,
		edge_type=next,
		label=Next];
	276	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[180, 181, 182, 183]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	276 -> 273	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187, 188]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	278	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_174(bool) = tx.origin == owner_txorigin1
\
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_174(bool) = tx.origin == owner_txorigin1
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_source_code_lines="[186]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	277 -> 278	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[187]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	278 -> 279	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187, 188]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	280 -> 277	[key=0,
		edge_type=next,
		label=Next];
	281	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[196, 197, 198, 199]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	282	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_177(bool) = tx.origin == owner_txorigin27
\
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_177(bool) = tx.origin == owner_txorigin27
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_source_code_lines="[197]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	281 -> 282	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_51(None) -> to.call
REF_52(None) -> REF_51.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_51(None) -> to.call
REF_52(None) -> REF_51.value",
		node_source_code_lines="[198]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	282 -> 283	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[196, 197, 198, 199]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	284 -> 281	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	286	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_180(bool) = tx.origin == owner_txorigin31
\
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_180(bool) = tx.origin == owner_txorigin31
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_source_code_lines="[202]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	285 -> 286	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_53(None) -> to.call
REF_54(None) -> REF_53.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_53(None) -> to.call
REF_54(None) -> REF_53.value",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	286 -> 287	[key=0,
		edge_type=next,
		label=Next];
	288	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	288 -> 285	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[206, 207, 208, 209]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	290	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_183(bool) = tx.origin == owner_txorigin13
\
TMP_184(None) = SOLIDITY_CALL require(bool)(TMP_183)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_183(bool) = tx.origin == owner_txorigin13
TMP_184(None) = SOLIDITY_CALL require(bool)(TMP_183)",
		node_source_code_lines="[207]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	289 -> 290	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[208]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	290 -> 291	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[206, 207, 208, 209]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	292 -> 289	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[222, 223, 224, 225, 226, 227, 228]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	299	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
validateLimits(_minSwapAmount,_maxSwapAmount)

IRs:
MODIFIER_CALL, RampInstantPool.validateLimits(\
uint256,uint256)(_minSwapAmount,_maxSwapAmount)",
		node_expression="validateLimits(_minSwapAmount,_maxSwapAmount)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.validateLimits(uint256,uint256)(_minSwapAmount,_maxSwapAmount)",
		node_source_code_lines="[220]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	293 -> 299	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
swapsContract = _swapsContract

IRs:
swapsContract(address) := _swapsContract(address)",
		node_expression="swapsContract = _swapsContract",
		node_info_vulnerabilities=None,
		node_irs="swapsContract(address) := _swapsContract(address)",
		node_source_code_lines="[223]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	295	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
paymentDetailsHash = _paymentDetailsHash

IRs:
paymentDetailsHash(bytes32) := _paymentDetailsHash(\
bytes32)",
		node_expression="paymentDetailsHash = _paymentDetailsHash",
		node_info_vulnerabilities=None,
		node_irs="paymentDetailsHash(bytes32) := _paymentDetailsHash(bytes32)",
		node_source_code_lines="[224]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	294 -> 295	[key=0,
		edge_type=next,
		label=Next];
	296	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
minSwapAmount = _minSwapAmount

IRs:
minSwapAmount(uint256) := _minSwapAmount(uint256)",
		node_expression="minSwapAmount = _minSwapAmount",
		node_info_vulnerabilities=None,
		node_irs="minSwapAmount(uint256) := _minSwapAmount(uint256)",
		node_source_code_lines="[225]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	295 -> 296	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
maxSwapAmount = _maxSwapAmount

IRs:
maxSwapAmount(uint256) := _maxSwapAmount(uint256)",
		node_expression="maxSwapAmount = _maxSwapAmount",
		node_info_vulnerabilities=None,
		node_irs="maxSwapAmount(uint256) := _maxSwapAmount(uint256)",
		node_source_code_lines="[226]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	296 -> 297	[key=0,
		edge_type=next,
		label=Next];
	298	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
ASSET_TYPE = _assetType

IRs:
ASSET_TYPE(uint16) := _assetType(uint16)",
		node_expression="ASSET_TYPE = _assetType",
		node_info_vulnerabilities=None,
		node_irs="ASSET_TYPE(uint16) := _assetType(uint16)",
		node_source_code_lines="[227]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	297 -> 298	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
validateSwapsContract(_swapsContract,_assetType)

IRs:
MODIFIER_CALL, RampInstantPool.validateSwapsContract(\
address,uint16)(_swapsContract,_assetType)",
		node_expression="validateSwapsContract(_swapsContract,_assetType)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.validateSwapsContract(address,uint16)(_swapsContract,_assetType)",
		node_source_code_lines="[221]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	299 -> 300	[key=0,
		edge_type=next,
		label=Next];
	300 -> 294	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32,uint16)",
		label="buggy_20.sol_RampInstantEthPool_constructor(address,uint256,uint256,bytes32,uint16)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	301 -> 293	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[229, 230, 231, 232]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	303	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_188(bool) = tx.origin == owner_txorigin19
\
TMP_189(None) = SOLIDITY_CALL require(bool)(TMP_188)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_188(bool) = tx.origin == owner_txorigin19
TMP_189(None) = SOLIDITY_CALL require(bool)(TMP_188)",
		node_source_code_lines="[230]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	302 -> 303	[key=0,
		edge_type=next,
		label=Next];
	304	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_56(None) -> to.call
REF_57(None) -> REF_56.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_56(None) -> to.call
REF_57(None) -> REF_56.value",
		node_source_code_lines="[231]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	303 -> 304	[key=0,
		edge_type=next,
		label=Next];
	305	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[229, 230, 231, 232]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	305 -> 302	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=RampInstantEthPool,
		function_fullname="availableFunds()",
		label="buggy_20.sol_RampInstantEthPool_availableFunds()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	307	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[235, 236, 237, 238]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	308	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_191(bool) = tx.origin == owner_txorigin26
\
TMP_192(None) = SOLIDITY_CALL require(bool)(TMP_191)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_191(bool) = tx.origin == owner_txorigin26
TMP_192(None) = SOLIDITY_CALL require(bool)(TMP_191)",
		node_source_code_lines="[236]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_193 = CONVERT this to address
REF_59 -> \
BALANCE TMP_193
Transfer dest:_recipient value:REF_59",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_193 = CONVERT this to address
REF_59 -> BALANCE TMP_193
Transfer dest:_recipient value:REF_59",
		node_source_code_lines="[237]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	308 -> 309	[key=0,
		edge_type=next,
		label=Next];
	310	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_20.sol_RampInstantEthPool_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[235, 236, 237, 238]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	310 -> 307	[key=0,
		edge_type=next,
		label=Next];
	311	[contract_name=RampInstantEthPool,
		function_fullname="withdrawFunds(address,uint256)",
		label="buggy_20.sol_RampInstantEthPool_withdrawFunds(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[240, 241]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	312	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[242, 243, 244]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	313	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_195(bool) = tx.origin == owner_txorigin20
\
TMP_196(None) = SOLIDITY_CALL require(bool)(TMP_195)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_195(bool) = tx.origin == owner_txorigin20
TMP_196(None) = SOLIDITY_CALL require(bool)(TMP_195)",
		node_source_code_lines="[243]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	312 -> 313	[key=0,
		edge_type=next,
		label=Next];
	314	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin20(address)",
		label="buggy_20.sol_RampInstantEthPool_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[242, 243, 244]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	314 -> 312	[key=0,
		edge_type=next,
		label=Next];
	315	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAllFunds(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[246, 247, 248]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	317	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAllFunds(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[246]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	315 -> 317	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAllFunds(address)",
		label="Node Type: RETURN

EXPRESSION:
withdrawFunds(_to,availableFunds())

IRs:
TMP_197(uint256) = INTERNAL_CALL, RampInstantEthPool.availableFunds()()
\
TMP_198(bool) = INTERNAL_CALL, RampInstantEthPool.withdrawFunds(address,uint256)(_to,TMP_197)
RETURN TMP_198",
		node_expression="withdrawFunds(_to,availableFunds())",
		node_info_vulnerabilities=None,
		node_irs="TMP_197(uint256) = INTERNAL_CALL, RampInstantEthPool.availableFunds()()
TMP_198(bool) = INTERNAL_CALL, RampInstantEthPool.withdrawFunds(\
address,uint256)(_to,TMP_197)
RETURN TMP_198",
		node_source_code_lines="[247]",
		node_type=RETURN,
		source_file="buggy_20.sol"];
	317 -> 316	[key=0,
		edge_type=next,
		label=Next];
	318	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAllFunds(address)",
		label="buggy_20.sol_RampInstantEthPool_withdrawAllFunds(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[246, 247, 248]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	318 -> 315	[key=0,
		edge_type=next,
		label=Next];
	319	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[249, 250, 251]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	320	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_200(bool) = tx.origin == owner_txorigin32
\
TMP_201(None) = SOLIDITY_CALL require(bool)(TMP_200)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_200(bool) = tx.origin == owner_txorigin32
TMP_201(None) = SOLIDITY_CALL require(bool)(TMP_200)",
		node_source_code_lines="[250]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	319 -> 320	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin32(address)",
		label="buggy_20.sol_RampInstantEthPool_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[249, 250, 251]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	321 -> 319	[key=0,
		edge_type=next,
		label=Next];
	322	[contract_name=RampInstantEthPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[256, 257, 258, 259, 260]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	326	[contract_name=RampInstantEthPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[256]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	322 -> 326	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=RampInstantEthPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
minSwapAmount = _minAmount

IRs:
minSwapAmount(uint256) := _minAmount(uint256)",
		node_expression="minSwapAmount = _minAmount",
		node_info_vulnerabilities=None,
		node_irs="minSwapAmount(uint256) := _minAmount(uint256)",
		node_source_code_lines="[257]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	324	[contract_name=RampInstantEthPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
maxSwapAmount = _maxAmount

IRs:
maxSwapAmount(uint256) := _maxAmount(uint256)",
		node_expression="maxSwapAmount = _maxAmount",
		node_info_vulnerabilities=None,
		node_irs="maxSwapAmount(uint256) := _maxAmount(uint256)",
		node_source_code_lines="[258]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	323 -> 324	[key=0,
		edge_type=next,
		label=Next];
	325	[contract_name=RampInstantEthPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
LimitsChanged(_minAmount,_maxAmount)

IRs:
Emit LimitsChanged(_minAmount._maxAmount)",
		node_expression="LimitsChanged(_minAmount,_maxAmount)",
		node_info_vulnerabilities=None,
		node_irs="Emit LimitsChanged(_minAmount._maxAmount)",
		node_source_code_lines="[259]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	324 -> 325	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=RampInstantEthPool,
		function_fullname="setLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
validateLimits(_minAmount,_maxAmount)

IRs:
MODIFIER_CALL, RampInstantPool.validateLimits(uint256,\
uint256)(_minAmount,_maxAmount)",
		node_expression="validateLimits(_minAmount,_maxAmount)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.validateLimits(uint256,uint256)(_minAmount,_maxAmount)",
		node_source_code_lines="[256]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	326 -> 327	[key=0,
		edge_type=next,
		label=Next];
	327 -> 323	[key=0,
		edge_type=next,
		label=Next];
	328	[contract_name=RampInstantEthPool,
		function_fullname="setLimits(uint256,uint256)",
		label="buggy_20.sol_RampInstantEthPool_setLimits(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[253, 254, 255, 256, 257, 258, 259, 260]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	328 -> 322	[key=0,
		edge_type=next,
		label=Next];
	329	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[261, 262, 263, 264]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	330	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_205(bool) = tx.origin == owner_txorigin38
\
TMP_206(None) = SOLIDITY_CALL require(bool)(TMP_205)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_205(bool) = tx.origin == owner_txorigin38
TMP_206(None) = SOLIDITY_CALL require(bool)(TMP_205)",
		node_source_code_lines="[262]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	329 -> 330	[key=0,
		edge_type=next,
		label=Next];
	331	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_207 = CONVERT this to address
REF_61 -> \
BALANCE TMP_207
Transfer dest:_recipient value:REF_61",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_207 = CONVERT this to address
REF_61 -> BALANCE TMP_207
Transfer dest:_recipient value:REF_61",
		node_source_code_lines="[263]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	330 -> 331	[key=0,
		edge_type=next,
		label=Next];
	332	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_20.sol_RampInstantEthPool_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[261, 262, 263, 264]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	332 -> 329	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=RampInstantEthPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[268, 269, 270, 271, 272]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	337	[contract_name=RampInstantEthPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	333 -> 337	[key=0,
		edge_type=next,
		label=Next];
	334	[contract_name=RampInstantEthPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
oldSwapsContract = swapsContract

IRs:
oldSwapsContract(address) := swapsContract(address)",
		node_expression="oldSwapsContract = swapsContract",
		node_info_vulnerabilities=None,
		node_irs="oldSwapsContract(address) := swapsContract(address)",
		node_source_code_lines="[269]",
		node_type="NEW VARIABLE",
		source_file="buggy_20.sol"];
	335	[contract_name=RampInstantEthPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
swapsContract = _swapsContract

IRs:
swapsContract(address) := _swapsContract(address)",
		node_expression="swapsContract = _swapsContract",
		node_info_vulnerabilities=None,
		node_irs="swapsContract(address) := _swapsContract(address)",
		node_source_code_lines="[270]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	334 -> 335	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=RampInstantEthPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
SwapsContractChanged(oldSwapsContract,_swapsContract)

IRs:
Emit SwapsContractChanged(oldSwapsContract._\
swapsContract)",
		node_expression="SwapsContractChanged(oldSwapsContract,_swapsContract)",
		node_info_vulnerabilities=None,
		node_irs="Emit SwapsContractChanged(oldSwapsContract._swapsContract)",
		node_source_code_lines="[271]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	335 -> 336	[key=0,
		edge_type=next,
		label=Next];
	338	[contract_name=RampInstantEthPool,
		function_fullname="setSwapsContract(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
validateSwapsContract(_swapsContract,ASSET_TYPE)

IRs:
MODIFIER_CALL, RampInstantPool.validateSwapsContract(\
address,uint16)(_swapsContract,ASSET_TYPE)",
		node_expression="validateSwapsContract(_swapsContract,ASSET_TYPE)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.validateSwapsContract(address,uint16)(_swapsContract,ASSET_TYPE)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	337 -> 338	[key=0,
		edge_type=next,
		label=Next];
	338 -> 334	[key=0,
		edge_type=next,
		label=Next];
	339	[contract_name=RampInstantEthPool,
		function_fullname="setSwapsContract(address)",
		label="buggy_20.sol_RampInstantEthPool_setSwapsContract(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[266, 267, 268, 269, 270, 271, 272]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	339 -> 333	[key=0,
		edge_type=next,
		label=Next];
	340	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[273, 274, 275]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	341	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_212(bool) = tx.origin == owner_txorigin4
\
TMP_213(None) = SOLIDITY_CALL require(bool)(TMP_212)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_212(bool) = tx.origin == owner_txorigin4
TMP_213(None) = SOLIDITY_CALL require(bool)(TMP_212)",
		node_source_code_lines="[274]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	340 -> 341	[key=0,
		edge_type=next,
		label=Next];
	342	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin4(address)",
		label="buggy_20.sol_RampInstantEthPool_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[273, 274, 275]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	342 -> 340	[key=0,
		edge_type=next,
		label=Next];
	343	[contract_name=RampInstantEthPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="buggy_20.sol_RampInstantEthPool_sendFundsToSwap(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	344	[contract_name=RampInstantEthPool,
		function_fullname="releaseSwap(address,address,bytes,bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[285, 286, 287, 288, 289, 290, 291, 292, 293]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	346	[contract_name=RampInstantEthPool,
		function_fullname="releaseSwap(address,address,bytes,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[285]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	344 -> 346	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=RampInstantEthPool,
		function_fullname="releaseSwap(address,address,bytes,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
RampInstantEscrowsPoolInterface(swapsContract).release(address(this),_receiver,_oracle,_assetData,_\
paymentDetailsHash)

IRs:
TMP_214 = CONVERT swapsContract to RampInstantEscrowsPoolInterface
TMP_215 = CONVERT this to address
HIGH_\
LEVEL_CALL, dest:TMP_214(RampInstantEscrowsPoolInterface), function:release, arguments:['TMP_215', '_receiver', '_oracle', '_assetData', '_\
paymentDetailsHash']  ",
		node_expression="RampInstantEscrowsPoolInterface(swapsContract).release(address(this),_receiver,_oracle,_assetData,_paymentDetailsHash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_214 = CONVERT swapsContract to RampInstantEscrowsPoolInterface
TMP_215 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_214(\
RampInstantEscrowsPoolInterface), function:release, arguments:['TMP_215', '_receiver', '_oracle', '_assetData', '_paymentDetailsHash']  ",
		node_source_code_lines="[286, 287, 288, 289, 290, 291, 292]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	346 -> 345	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=RampInstantEthPool,
		function_fullname="releaseSwap(address,address,bytes,bytes32)",
		label="buggy_20.sol_RampInstantEthPool_releaseSwap(address,address,bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	347 -> 344	[key=0,
		edge_type=next,
		label=Next];
	348	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[294, 295, 296, 297]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	349	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_218(bool) = tx.origin == owner_txorigin7
\
TMP_219(None) = SOLIDITY_CALL require(bool)(TMP_218)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_218(bool) = tx.origin == owner_txorigin7
TMP_219(None) = SOLIDITY_CALL require(bool)(TMP_218)",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	348 -> 349	[key=0,
		edge_type=next,
		label=Next];
	350	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_63(None) -> to.call
REF_64(None) -> REF_63.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_63(None) -> to.call
REF_64(None) -> REF_63.value",
		node_source_code_lines="[296]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	349 -> 350	[key=0,
		edge_type=next,
		label=Next];
	351	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[294, 295, 296, 297]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	351 -> 348	[key=0,
		edge_type=next,
		label=Next];
	352	[contract_name=RampInstantEthPool,
		function_fullname="returnSwap(address,address,bytes,bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310, 311, 312]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	354	[contract_name=RampInstantEthPool,
		function_fullname="returnSwap(address,address,bytes,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[304]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	352 -> 354	[key=0,
		edge_type=next,
		label=Next];
	353	[contract_name=RampInstantEthPool,
		function_fullname="returnSwap(address,address,bytes,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
RampInstantEscrowsPoolInterface(swapsContract).returnFunds(address(this),_receiver,_oracle,_assetData,_\
paymentDetailsHash)

IRs:
TMP_221 = CONVERT swapsContract to RampInstantEscrowsPoolInterface
TMP_222 = CONVERT this to address
HIGH_\
LEVEL_CALL, dest:TMP_221(RampInstantEscrowsPoolInterface), function:returnFunds, arguments:['TMP_222', '_receiver', '_oracle', '_\
assetData', '_paymentDetailsHash']  ",
		node_expression="RampInstantEscrowsPoolInterface(swapsContract).returnFunds(address(this),_receiver,_oracle,_assetData,_paymentDetailsHash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_221 = CONVERT swapsContract to RampInstantEscrowsPoolInterface
TMP_222 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_221(\
RampInstantEscrowsPoolInterface), function:returnFunds, arguments:['TMP_222', '_receiver', '_oracle', '_assetData', '_paymentDetailsHash']  ",
		node_source_code_lines="[305, 306, 307, 308, 309, 310, 311]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	354 -> 353	[key=0,
		edge_type=next,
		label=Next];
	355	[contract_name=RampInstantEthPool,
		function_fullname="returnSwap(address,address,bytes,bytes32)",
		label="buggy_20.sol_RampInstantEthPool_returnSwap(address,address,bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	355 -> 352	[key=0,
		edge_type=next,
		label=Next];
	356	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315, 316]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	357	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_225(bool) = tx.origin == owner_txorigin23
\
TMP_226(None) = SOLIDITY_CALL require(bool)(TMP_225)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_225(bool) = tx.origin == owner_txorigin23
TMP_226(None) = SOLIDITY_CALL require(bool)(TMP_225)",
		node_source_code_lines="[314]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	356 -> 357	[key=0,
		edge_type=next,
		label=Next];
	358	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_66(None) -> to.call
REF_67(None) -> REF_66.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_66(None) -> to.call
REF_67(None) -> REF_66.value",
		node_source_code_lines="[315]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	357 -> 358	[key=0,
		edge_type=next,
		label=Next];
	359	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315, 316]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	359 -> 356	[key=0,
		edge_type=next,
		label=Next];
	360	[contract_name=RampInstantEthPool,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	361	[contract_name=RampInstantEthPool,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
revert(string)(this pool cannot receive ether)

IRs:
TMP_228(None) = SOLIDITY_CALL revert(string)(\
this pool cannot receive ether)",
		node_expression="revert(string)(this pool cannot receive ether)",
		node_info_vulnerabilities=None,
		node_irs="TMP_228(None) = SOLIDITY_CALL revert(string)(this pool cannot receive ether)",
		node_source_code_lines="[323]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	360 -> 361	[key=0,
		edge_type=next,
		label=Next];
	362	[contract_name=RampInstantEthPool,
		function_fullname="fallback()",
		label="buggy_20.sol_RampInstantEthPool_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	362 -> 360	[key=0,
		edge_type=next,
		label=Next];
	363	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[325, 326, 327, 328]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	364	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_229(bool) = tx.origin == owner_txorigin14
\
TMP_230(None) = SOLIDITY_CALL require(bool)(TMP_229)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_229(bool) = tx.origin == owner_txorigin14
TMP_230(None) = SOLIDITY_CALL require(bool)(TMP_229)",
		node_source_code_lines="[326]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	363 -> 364	[key=0,
		edge_type=next,
		label=Next];
	365	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_231 = CONVERT this to address
REF_69 -> \
BALANCE TMP_231
Transfer dest:_recipient value:REF_69",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_231 = CONVERT this to address
REF_69 -> BALANCE TMP_231
Transfer dest:_recipient value:REF_69",
		node_source_code_lines="[327]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	364 -> 365	[key=0,
		edge_type=next,
		label=Next];
	366	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_20.sol_RampInstantEthPool_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[325, 326, 327, 328]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	366 -> 363	[key=0,
		edge_type=next,
		label=Next];
	367	[contract_name=RampInstantEthPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="buggy_20.sol_RampInstantEthPool_sendFundsToSwap(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	368	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	369	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_233(bool) = tx.origin == owner_txorigin10
\
TMP_234(None) = SOLIDITY_CALL require(bool)(TMP_233)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_233(bool) = tx.origin == owner_txorigin10
TMP_234(None) = SOLIDITY_CALL require(bool)(TMP_233)",
		node_source_code_lines="[74]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	368 -> 369	[key=0,
		edge_type=next,
		label=Next];
	370	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_235 = CONVERT this to address
REF_71 -> \
BALANCE TMP_235
Transfer dest:_recipient value:REF_71",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_235 = CONVERT this to address
REF_71 -> BALANCE TMP_235
Transfer dest:_recipient value:REF_71",
		node_source_code_lines="[75]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	369 -> 370	[key=0,
		edge_type=next,
		label=Next];
	371	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_20.sol_RampInstantEthPool_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[73, 74, 75, 76]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	371 -> 368	[key=0,
		edge_type=next,
		label=Next];
	372	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[79, 80, 81, 82]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	373	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_237(bool) = tx.origin == owner_txorigin33
\
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_237(bool) = tx.origin == owner_txorigin33
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_source_code_lines="[80]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	372 -> 373	[key=0,
		edge_type=next,
		label=Next];
	374	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	373 -> 374	[key=0,
		edge_type=next,
		label=Next];
	375	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[79, 80, 81, 82]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	375 -> 372	[key=0,
		edge_type=next,
		label=Next];
	376	[contract_name=RampInstantEthPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	382	[contract_name=RampInstantEthPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[90]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	376 -> 382	[key=0,
		edge_type=next,
		label=Next];
	377	[contract_name=RampInstantEthPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: IF

EXPRESSION:
_isActive == isActive

IRs:
TMP_240(bool) = _isActive == isActive
CONDITION TMP_240",
		node_expression="_isActive == isActive",
		node_info_vulnerabilities=None,
		node_irs="TMP_240(bool) = _isActive == isActive
CONDITION TMP_240",
		node_source_code_lines="[91]",
		node_type=IF,
		source_file="buggy_20.sol"];
	378	[contract_name=RampInstantEthPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[91]",
		node_type=RETURN,
		source_file="buggy_20.sol"];
	377 -> 378	[key=0,
		edge_type=if_true,
		label=True];
	379	[contract_name=RampInstantEthPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[91]",
		node_type=END_IF,
		source_file="buggy_20.sol"];
	377 -> 379	[key=0,
		edge_type=if_false,
		label=False];
	380	[contract_name=RampInstantEthPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
isActive = _isActive

IRs:
isActive(bool) := _isActive(bool)",
		node_expression="isActive = _isActive",
		node_info_vulnerabilities=None,
		node_irs="isActive(bool) := _isActive(bool)",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	379 -> 380	[key=0,
		edge_type=next,
		label=Next];
	381	[contract_name=RampInstantEthPool,
		function_fullname="setIsActive(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
IsActiveChanged(_isActive)

IRs:
Emit IsActiveChanged(_isActive)",
		node_expression="IsActiveChanged(_isActive)",
		node_info_vulnerabilities=None,
		node_irs="Emit IsActiveChanged(_isActive)",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	380 -> 381	[key=0,
		edge_type=next,
		label=Next];
	382 -> 377	[key=0,
		edge_type=next,
		label=Next];
	383	[contract_name=RampInstantEthPool,
		function_fullname="setIsActive(bool)",
		label="buggy_20.sol_RampInstantEthPool_setIsActive(bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	383 -> 376	[key=0,
		edge_type=next,
		label=Next];
	384	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	385	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_243(bool) = tx.origin == owner_txorigin3
\
TMP_244(None) = SOLIDITY_CALL require(bool)(TMP_243)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_243(bool) = tx.origin == owner_txorigin3
TMP_244(None) = SOLIDITY_CALL require(bool)(TMP_243)",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	384 -> 385	[key=0,
		edge_type=next,
		label=Next];
	386	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_73(None) -> to.call
REF_74(None) -> REF_73.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_73(None) -> to.call
REF_74(None) -> REF_73.value",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	385 -> 386	[key=0,
		edge_type=next,
		label=Next];
	387	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	387 -> 384	[key=0,
		edge_type=next,
		label=Next];
	388	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	389	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_246(bool) = tx.origin == owner_txorigin21
\
TMP_247(None) = SOLIDITY_CALL require(bool)(TMP_246)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_246(bool) = tx.origin == owner_txorigin21
TMP_247(None) = SOLIDITY_CALL require(bool)(TMP_246)",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	388 -> 389	[key=0,
		edge_type=next,
		label=Next];
	390	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[34]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	389 -> 390	[key=0,
		edge_type=next,
		label=Next];
	391	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[32, 33, 34, 35]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	391 -> 388	[key=0,
		edge_type=next,
		label=Next];
	392	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	393	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_249(bool) = tx.origin == owner_txorigin40
\
TMP_250(None) = SOLIDITY_CALL require(bool)(TMP_249)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_249(bool) = tx.origin == owner_txorigin40
TMP_250(None) = SOLIDITY_CALL require(bool)(TMP_249)",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	392 -> 393	[key=0,
		edge_type=next,
		label=Next];
	394	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin40(address)",
		label="buggy_20.sol_RampInstantEthPool_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	394 -> 392	[key=0,
		edge_type=next,
		label=Next];
	395	[contract_name=RampInstantEthPool,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	396	[contract_name=RampInstantEthPool,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[44]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	395 -> 396	[key=0,
		edge_type=next,
		label=Next];
	397	[contract_name=RampInstantEthPool,
		function_fullname="constructor()",
		label="buggy_20.sol_RampInstantEthPool_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	397 -> 395	[key=0,
		edge_type=next,
		label=Next];
	398	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	399	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_251(bool) = tx.origin == owner_txorigin17
\
TMP_252(None) = SOLIDITY_CALL require(bool)(TMP_251)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_251(bool) = tx.origin == owner_txorigin17
TMP_252(None) = SOLIDITY_CALL require(bool)(TMP_251)",
		node_source_code_lines="[47]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	398 -> 399	[key=0,
		edge_type=next,
		label=Next];
	400	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[48]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	399 -> 400	[key=0,
		edge_type=next,
		label=Next];
	401	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	401 -> 398	[key=0,
		edge_type=next,
		label=Next];
	402	[contract_name=RampInstantEthPool,
		function_fullname="changeOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	405	[contract_name=RampInstantEthPool,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	402 -> 405	[key=0,
		edge_type=next,
		label=Next];
	403	[contract_name=RampInstantEthPool,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = _newOwner

IRs:
owner(address) := _newOwner(address)",
		node_expression="owner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := _newOwner(address)",
		node_source_code_lines="[57]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	404	[contract_name=RampInstantEthPool,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnerChanged(msg.sender,_newOwner)

IRs:
Emit OwnerChanged(msg.sender._newOwner)",
		node_expression="OwnerChanged(msg.sender,_newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnerChanged(msg.sender._newOwner)",
		node_source_code_lines="[58]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	403 -> 404	[key=0,
		edge_type=next,
		label=Next];
	405 -> 403	[key=0,
		edge_type=next,
		label=Next];
	406	[contract_name=RampInstantEthPool,
		function_fullname="changeOwner(address)",
		label="buggy_20.sol_RampInstantEthPool_changeOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58, 59]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	406 -> 402	[key=0,
		edge_type=next,
		label=Next];
	407	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	408	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_256(bool) = tx.origin == owner_txorigin37
\
TMP_257(None) = SOLIDITY_CALL require(bool)(TMP_256)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_256(bool) = tx.origin == owner_txorigin37
TMP_257(None) = SOLIDITY_CALL require(bool)(TMP_256)",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	407 -> 408	[key=0,
		edge_type=next,
		label=Next];
	409	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	408 -> 409	[key=0,
		edge_type=next,
		label=Next];
	410	[contract_name=RampInstantEthPool,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	410 -> 407	[key=0,
		edge_type=next,
		label=Next];
	411	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[364, 365, 366, 367]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	412	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_259(bool) = tx.origin == owner_txorigin2
\
TMP_260(None) = SOLIDITY_CALL require(bool)(TMP_259)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_259(bool) = tx.origin == owner_txorigin2
TMP_260(None) = SOLIDITY_CALL require(bool)(TMP_259)",
		node_source_code_lines="[365]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	411 -> 412	[key=0,
		edge_type=next,
		label=Next];
	413	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_261 = CONVERT this to address
REF_79 -> \
BALANCE TMP_261
Transfer dest:_recipient value:REF_79",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_261 = CONVERT this to address
REF_79 -> BALANCE TMP_261
Transfer dest:_recipient value:REF_79",
		node_source_code_lines="[366]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	412 -> 413	[key=0,
		edge_type=next,
		label=Next];
	414	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_20.sol_RampInstantEthPool_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[364, 365, 366, 367]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	414 -> 411	[key=0,
		edge_type=next,
		label=Next];
	415	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[380]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	416	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
RampInstantPool(_swapsContract,_minSwapAmount,_maxSwapAmount,_paymentDetailsHash,ETH_TYPE_ID)

\
IRs:
INTERNAL_CALL, RampInstantPool.constructor(address,uint256,uint256,bytes32,uint16)(_swapsContract,_minSwapAmount,_maxSwapAmount,_\
paymentDetailsHash,ETH_TYPE_ID)",
		node_expression="RampInstantPool(_swapsContract,_minSwapAmount,_maxSwapAmount,_paymentDetailsHash,ETH_TYPE_ID)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, RampInstantPool.constructor(address,uint256,uint256,bytes32,uint16)(_swapsContract,_minSwapAmount,_maxSwapAmount,_\
paymentDetailsHash,ETH_TYPE_ID)",
		node_source_code_lines="[377, 378, 379]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	415 -> 416	[key=0,
		edge_type=next,
		label=Next];
	417	[contract_name=RampInstantEthPool,
		function_fullname="constructor(address,uint256,uint256,bytes32)",
		label="buggy_20.sol_RampInstantEthPool_constructor(address,uint256,uint256,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	417 -> 415	[key=0,
		edge_type=next,
		label=Next];
	418	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[381, 382, 383, 384]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	419	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_264(bool) = tx.origin == owner_txorigin30
\
TMP_265(None) = SOLIDITY_CALL require(bool)(TMP_264)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_264(bool) = tx.origin == owner_txorigin30
TMP_265(None) = SOLIDITY_CALL require(bool)(TMP_264)",
		node_source_code_lines="[382]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	418 -> 419	[key=0,
		edge_type=next,
		label=Next];
	420	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_266 = CONVERT this to address
REF_81 -> \
BALANCE TMP_266
Transfer dest:_recipient value:REF_81",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_266 = CONVERT this to address
REF_81 -> BALANCE TMP_266
Transfer dest:_recipient value:REF_81",
		node_source_code_lines="[383]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	419 -> 420	[key=0,
		edge_type=next,
		label=Next];
	421	[contract_name=RampInstantEthPool,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_20.sol_RampInstantEthPool_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[381, 382, 383, 384]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	421 -> 418	[key=0,
		edge_type=next,
		label=Next];
	422	[contract_name=RampInstantEthPool,
		function_fullname="availableFunds()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[386, 387, 388]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	423	[contract_name=RampInstantEthPool,
		function_fullname="availableFunds()",
		label="Node Type: RETURN

EXPRESSION:
address(this).balance

IRs:
TMP_268 = CONVERT this to address
REF_82 -> BALANCE TMP_268
RETURN REF_\
82",
		node_expression="address(this).balance",
		node_info_vulnerabilities=None,
		node_irs="TMP_268 = CONVERT this to address
REF_82 -> BALANCE TMP_268
RETURN REF_82",
		node_source_code_lines="[387]",
		node_type=RETURN,
		source_file="buggy_20.sol"];
	422 -> 423	[key=0,
		edge_type=next,
		label=Next];
	424	[contract_name=RampInstantEthPool,
		function_fullname="availableFunds()",
		label="buggy_20.sol_RampInstantEthPool_availableFunds()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[386, 387, 388]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	424 -> 422	[key=0,
		edge_type=next,
		label=Next];
	425	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[389, 390, 391]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	426	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_269(bool) = tx.origin == owner_txorigin8
\
TMP_270(None) = SOLIDITY_CALL require(bool)(TMP_269)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_269(bool) = tx.origin == owner_txorigin8
TMP_270(None) = SOLIDITY_CALL require(bool)(TMP_269)",
		node_source_code_lines="[390]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	425 -> 426	[key=0,
		edge_type=next,
		label=Next];
	427	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin8(address)",
		label="buggy_20.sol_RampInstantEthPool_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[389, 390, 391]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	427 -> 425	[key=0,
		edge_type=next,
		label=Next];
	428	[contract_name=RampInstantEthPool,
		function_fullname="withdrawFunds(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[396, 397, 398, 399]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	431	[contract_name=RampInstantEthPool,
		function_fullname="withdrawFunds(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Ownable.onlyOwner()()",
		node_source_code_lines="[396]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	428 -> 431	[key=0,
		edge_type=next,
		label=Next];
	429	[contract_name=RampInstantEthPool,
		function_fullname="withdrawFunds(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_to.transfer(_amount)

IRs:
Transfer dest:_to value:_amount",
		node_expression="_to.transfer(_amount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:_to value:_amount",
		node_source_code_lines="[397]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	430	[contract_name=RampInstantEthPool,
		function_fullname="withdrawFunds(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[398]",
		node_type=RETURN,
		source_file="buggy_20.sol"];
	429 -> 430	[key=0,
		edge_type=next,
		label=Next];
	431 -> 429	[key=0,
		edge_type=next,
		label=Next];
	432	[contract_name=RampInstantEthPool,
		function_fullname="withdrawFunds(address,uint256)",
		label="buggy_20.sol_RampInstantEthPool_withdrawFunds(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[393, 394, 395, 396, 397, 398, 399]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	432 -> 428	[key=0,
		edge_type=next,
		label=Next];
	433	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402, 403]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	434	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_273(bool) = tx.origin == owner_txorigin39
\
TMP_274(None) = SOLIDITY_CALL require(bool)(TMP_273)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_273(bool) = tx.origin == owner_txorigin39
TMP_274(None) = SOLIDITY_CALL require(bool)(TMP_273)",
		node_source_code_lines="[401]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	433 -> 434	[key=0,
		edge_type=next,
		label=Next];
	435	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_source_code_lines="[402]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	434 -> 435	[key=0,
		edge_type=next,
		label=Next];
	436	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402, 403]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	436 -> 433	[key=0,
		edge_type=next,
		label=Next];
	437	[contract_name=RampInstantEthPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[407, 408, 409, 410]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	440	[contract_name=RampInstantEthPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyActive()

IRs:
MODIFIER_CALL, Stoppable.onlyActive()()",
		node_expression="onlyActive()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Stoppable.onlyActive()()",
		node_source_code_lines="[407]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	437 -> 440	[key=0,
		edge_type=next,
		label=Next];
	438	[contract_name=RampInstantEthPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
swapsContract.transfer(_amount)

IRs:
Transfer dest:swapsContract value:_amount",
		node_expression="swapsContract.transfer(_amount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:swapsContract value:_amount",
		node_source_code_lines="[408]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	439	[contract_name=RampInstantEthPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[409]",
		node_type=RETURN,
		source_file="buggy_20.sol"];
	438 -> 439	[key=0,
		edge_type=next,
		label=Next];
	441	[contract_name=RampInstantEthPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlySwapsContract()

IRs:
MODIFIER_CALL, RampInstantPool.onlySwapsContract()()",
		node_expression="onlySwapsContract()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.onlySwapsContract()()",
		node_source_code_lines="[407]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	440 -> 441	[key=0,
		edge_type=next,
		label=Next];
	442	[contract_name=RampInstantEthPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
isWithinLimits(_amount)

IRs:
MODIFIER_CALL, RampInstantPool.isWithinLimits(uint256)(_amount)",
		node_expression="isWithinLimits(_amount)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, RampInstantPool.isWithinLimits(uint256)(_amount)",
		node_source_code_lines="[407]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	441 -> 442	[key=0,
		edge_type=next,
		label=Next];
	442 -> 438	[key=0,
		edge_type=next,
		label=Next];
	443	[contract_name=RampInstantEthPool,
		function_fullname="sendFundsToSwap(uint256)",
		label="buggy_20.sol_RampInstantEthPool_sendFundsToSwap(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[405, 406, 407, 408, 409, 410]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	443 -> 437	[key=0,
		edge_type=next,
		label=Next];
	444	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[411, 412, 413]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	445	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_280(bool) = tx.origin == owner_txorigin36
\
TMP_281(None) = SOLIDITY_CALL require(bool)(TMP_280)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_280(bool) = tx.origin == owner_txorigin36
TMP_281(None) = SOLIDITY_CALL require(bool)(TMP_280)",
		node_source_code_lines="[412]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	444 -> 445	[key=0,
		edge_type=next,
		label=Next];
	446	[contract_name=RampInstantEthPool,
		function_fullname="bug_txorigin36(address)",
		label="buggy_20.sol_RampInstantEthPool_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[411, 412, 413]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	446 -> 444	[key=0,
		edge_type=next,
		label=Next];
	447	[contract_name=RampInstantEthPool,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[418, 419, 420, 421, 422, 423]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	448	[contract_name=RampInstantEthPool,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.data.length == 0,invalid pool function called)

IRs:
REF_87 -> LENGTH \
msg.data
TMP_282(bool) = REF_87 == 0
TMP_283(None) = SOLIDITY_CALL require(bool,string)(TMP_282,invalid pool function called)",
		node_expression="require(bool,string)(msg.data.length == 0,invalid pool function called)",
		node_info_vulnerabilities=None,
		node_irs="REF_87 -> LENGTH msg.data
TMP_282(bool) = REF_87 == 0
TMP_283(None) = SOLIDITY_CALL require(bool,string)(TMP_282,invalid pool function \
called)",
		node_source_code_lines="[419]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	447 -> 448	[key=0,
		edge_type=next,
		label=Next];
	449	[contract_name=RampInstantEthPool,
		function_fullname="fallback()",
		label="Node Type: IF

EXPRESSION:
msg.sender != swapsContract

IRs:
TMP_284(bool) = msg.sender != swapsContract
CONDITION TMP_284",
		node_expression="msg.sender != swapsContract",
		node_info_vulnerabilities=None,
		node_irs="TMP_284(bool) = msg.sender != swapsContract
CONDITION TMP_284",
		node_source_code_lines="[420]",
		node_type=IF,
		source_file="buggy_20.sol"];
	448 -> 449	[key=0,
		edge_type=next,
		label=Next];
	450	[contract_name=RampInstantEthPool,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
ReceivedFunds(msg.sender,msg.value)

IRs:
Emit ReceivedFunds(msg.sender.msg.value)",
		node_expression="ReceivedFunds(msg.sender,msg.value)",
		node_info_vulnerabilities=None,
		node_irs="Emit ReceivedFunds(msg.sender.msg.value)",
		node_source_code_lines="[421]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	449 -> 450	[key=0,
		edge_type=if_true,
		label=True];
	451	[contract_name=RampInstantEthPool,
		function_fullname="fallback()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[420, 421, 422]",
		node_type=END_IF,
		source_file="buggy_20.sol"];
	449 -> 451	[key=0,
		edge_type=if_false,
		label=False];
	450 -> 451	[key=0,
		edge_type=next,
		label=Next];
	452	[contract_name=RampInstantEthPool,
		function_fullname="fallback()",
		label="buggy_20.sol_RampInstantEthPool_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[418, 419, 420, 421, 422, 423]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	452 -> 447	[key=0,
		edge_type=next,
		label=Next];
	453	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[424, 425, 426, 427]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	454	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_286(bool) = tx.origin == owner_txorigin35
\
TMP_287(None) = SOLIDITY_CALL require(bool)(TMP_286)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="TMP_286(bool) = tx.origin == owner_txorigin35
TMP_287(None) = SOLIDITY_CALL require(bool)(TMP_286)",
		node_source_code_lines="[425]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	453 -> 454	[key=0,
		edge_type=next,
		label=Next];
	455	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_88(None) -> to.call
REF_89(None) -> REF_88.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="REF_88(None) -> to.call
REF_89(None) -> REF_88.value",
		node_source_code_lines="[426]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	454 -> 455	[key=0,
		edge_type=next,
		label=Next];
	456	[contract_name=RampInstantEthPool,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_20.sol_RampInstantEthPool_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[424, 425, 426, 427]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	456 -> 453	[key=0,
		edge_type=next,
		label=Next];
	457	[contract_name=RampInstantEthPool,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
isActive = true

IRs:
isActive(bool) := True(bool)",
		node_expression="isActive = true",
		node_info_vulnerabilities=None,
		node_irs="isActive(bool) := True(bool)",
		node_source_code_lines="[77]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_20.sol"];
	458	[contract_name=RampInstantEthPool,
		function_fullname="slitherConstructorVariables()",
		label="buggy_20.sol_RampInstantEthPool_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, \
388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, \
414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	458 -> 457	[key=0,
		edge_type=next,
		label=Next];
	459	[contract_name=RampInstantEthPool,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
MAX_SWAP_AMOUNT_LIMIT = 1 << 240

IRs:
TMP_289(uint256) = 1 << 240
MAX_SWAP_AMOUNT_LIMIT(\
uint256) := TMP_289(uint256)",
		node_expression="MAX_SWAP_AMOUNT_LIMIT = 1 << 240",
		node_info_vulnerabilities=None,
		node_irs="TMP_289(uint256) = 1 << 240
MAX_SWAP_AMOUNT_LIMIT(uint256) := TMP_289(uint256)",
		node_source_code_lines="[168]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_20.sol"];
	460	[contract_name=RampInstantEthPool,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
ETH_TYPE_ID = 1

IRs:
ETH_TYPE_ID(uint16) := 1(uint256)",
		node_expression="ETH_TYPE_ID = 1",
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs="ETH_TYPE_ID(uint16) := 1(uint256)",
		node_source_code_lines="[368]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_20.sol"];
	459 -> 460	[key=0,
		edge_type=next,
		label=Next];
	461	[contract_name=RampInstantEthPool,
		function_fullname="slitherConstructorConstantVariables()",
		label="buggy_20.sol_RampInstantEthPool_slitherConstructorConstantVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 60, 61, 62, 63, 73, 74, 75, 76, 79, 80, 81, 82, 95, 96, 97, 98, 131, 132, \
133, 134, 144, 145, 146, 147, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 201, \
202, 203, 204, 206, 207, 208, 209, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 249, 250, 251, 261, 262, 263, 264, 273, \
274, 275, 294, 295, 296, 297, 313, 314, 315, 316, 325, 326, 327, 328, 364, 365, 366, 367, 368, 382, 383, 384, 385, 390, 391, 392, \
401, 402, 403, 404, 412, 413, 414, 425, 426, 427, 428], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, \
388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, \
414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	461 -> 459	[key=0,
		edge_type=next,
		label=Next];
	462	[contract_name=RampInstantEthPool,
		function_fullname="onlySwapsContract()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[330, 331, 332, 333]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	463	[contract_name=RampInstantEthPool,
		function_fullname="onlySwapsContract()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender == swapsContract,only the swaps contract can call this)

IRs:
\
TMP_290(bool) = msg.sender == swapsContract
TMP_291(None) = SOLIDITY_CALL require(bool,string)(TMP_290,only the swaps contract can \
call this)",
		node_expression="require(bool,string)(msg.sender == swapsContract,only the swaps contract can call this)",
		node_info_vulnerabilities=None,
		node_irs="TMP_290(bool) = msg.sender == swapsContract
TMP_291(None) = SOLIDITY_CALL require(bool,string)(TMP_290,only the swaps contract can \
call this)",
		node_source_code_lines="[331]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	462 -> 463	[key=0,
		edge_type=next,
		label=Next];
	464	[contract_name=RampInstantEthPool,
		function_fullname="onlySwapsContract()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[332]",
		node_type=_,
		source_file="buggy_20.sol"];
	463 -> 464	[key=0,
		edge_type=next,
		label=Next];
	465	[contract_name=RampInstantEthPool,
		function_fullname="onlySwapsContract()",
		label="buggy_20.sol_RampInstantEthPool_onlySwapsContract()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[330, 331, 332, 333]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	465 -> 462	[key=0,
		edge_type=next,
		label=Next];
	466	[contract_name=RampInstantEthPool,
		function_fullname="isWithinLimits(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	467	[contract_name=RampInstantEthPool,
		function_fullname="isWithinLimits(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_amount >= minSwapAmount && _amount <= maxSwapAmount,amount outside swap \
limits)

IRs:
TMP_292(bool) = _amount >= minSwapAmount
TMP_293(bool) = _amount <= maxSwapAmount
TMP_294(bool) = TMP_292 && TMP_293
\
TMP_295(None) = SOLIDITY_CALL require(bool,string)(TMP_294,amount outside swap limits)",
		node_expression="require(bool,string)(_amount >= minSwapAmount && _amount <= maxSwapAmount,amount outside swap limits)",
		node_info_vulnerabilities=None,
		node_irs="TMP_292(bool) = _amount >= minSwapAmount
TMP_293(bool) = _amount <= maxSwapAmount
TMP_294(bool) = TMP_292 && TMP_293
TMP_295(None) = \
SOLIDITY_CALL require(bool,string)(TMP_294,amount outside swap limits)",
		node_source_code_lines="[336]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	466 -> 467	[key=0,
		edge_type=next,
		label=Next];
	468	[contract_name=RampInstantEthPool,
		function_fullname="isWithinLimits(uint256)",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[337]",
		node_type=_,
		source_file="buggy_20.sol"];
	467 -> 468	[key=0,
		edge_type=next,
		label=Next];
	469	[contract_name=RampInstantEthPool,
		function_fullname="isWithinLimits(uint256)",
		label="buggy_20.sol_RampInstantEthPool_isWithinLimits(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	469 -> 466	[key=0,
		edge_type=next,
		label=Next];
	470	[contract_name=RampInstantEthPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343, 344]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	471	[contract_name=RampInstantEthPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_minAmount <= _maxAmount,min limit over max limit)

IRs:
TMP_296(bool) = _\
minAmount <= _maxAmount
TMP_297(None) = SOLIDITY_CALL require(bool,string)(TMP_296,min limit over max limit)",
		node_expression="require(bool,string)(_minAmount <= _maxAmount,min limit over max limit)",
		node_info_vulnerabilities=None,
		node_irs="TMP_296(bool) = _minAmount <= _maxAmount
TMP_297(None) = SOLIDITY_CALL require(bool,string)(TMP_296,min limit over max limit)",
		node_source_code_lines="[341]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	470 -> 471	[key=0,
		edge_type=next,
		label=Next];
	472	[contract_name=RampInstantEthPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_maxAmount <= MAX_SWAP_AMOUNT_LIMIT,maxAmount too high)

IRs:
TMP_298(bool) = _\
maxAmount <= MAX_SWAP_AMOUNT_LIMIT
TMP_299(None) = SOLIDITY_CALL require(bool,string)(TMP_298,maxAmount too high)",
		node_expression="require(bool,string)(_maxAmount <= MAX_SWAP_AMOUNT_LIMIT,maxAmount too high)",
		node_info_vulnerabilities=None,
		node_irs="TMP_298(bool) = _maxAmount <= MAX_SWAP_AMOUNT_LIMIT
TMP_299(None) = SOLIDITY_CALL require(bool,string)(TMP_298,maxAmount too high)",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	471 -> 472	[key=0,
		edge_type=next,
		label=Next];
	473	[contract_name=RampInstantEthPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[343]",
		node_type=_,
		source_file="buggy_20.sol"];
	472 -> 473	[key=0,
		edge_type=next,
		label=Next];
	474	[contract_name=RampInstantEthPool,
		function_fullname="validateLimits(uint256,uint256)",
		label="buggy_20.sol_RampInstantEthPool_validateLimits(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343, 344]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	474 -> 470	[key=0,
		edge_type=next,
		label=Next];
	475	[contract_name=RampInstantEthPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[346, 347, 348, 349, 350, 351, 352, 353]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	476	[contract_name=RampInstantEthPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_swapsContract != address(0),null swaps contract address)

IRs:
TMP_300 = \
CONVERT 0 to address
TMP_301(bool) = _swapsContract != TMP_300
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,null swaps \
contract address)",
		node_expression="require(bool,string)(_swapsContract != address(0),null swaps contract address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_300 = CONVERT 0 to address
TMP_301(bool) = _swapsContract != TMP_300
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_\
301,null swaps contract address)",
		node_source_code_lines="[347]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	475 -> 476	[key=0,
		edge_type=next,
		label=Next];
	477	[contract_name=RampInstantEthPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(RampInstantEscrowsPoolInterface(_swapsContract).ASSET_TYPE() == _assetType,\
pool asset type doesn't match swap contract)

IRs:
TMP_303 = CONVERT _swapsContract to RampInstantEscrowsPoolInterface
TMP_304(uint16) = \
HIGH_LEVEL_CALL, dest:TMP_303(RampInstantEscrowsPoolInterface), function:ASSET_TYPE, arguments:[]  
TMP_305(bool) = TMP_304 == _\
assetType
TMP_306(None) = SOLIDITY_CALL require(bool,string)(TMP_305,pool asset type doesn't match swap contract)",
		node_expression="require(bool,string)(RampInstantEscrowsPoolInterface(_swapsContract).ASSET_TYPE() == _assetType,pool asset type doesn't match swap \
contract)",
		node_info_vulnerabilities=None,
		node_irs="TMP_303 = CONVERT _swapsContract to RampInstantEscrowsPoolInterface
TMP_304(uint16) = HIGH_LEVEL_CALL, dest:TMP_303(RampInstantEscrowsPoolInterface), \
function:ASSET_TYPE, arguments:[]  
TMP_305(bool) = TMP_304 == _assetType
TMP_306(None) = SOLIDITY_CALL require(bool,string)(TMP_\
305,pool asset type doesn't match swap contract)",
		node_source_code_lines="[348, 349, 350, 351]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	476 -> 477	[key=0,
		edge_type=next,
		label=Next];
	478	[contract_name=RampInstantEthPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[352]",
		node_type=_,
		source_file="buggy_20.sol"];
	477 -> 478	[key=0,
		edge_type=next,
		label=Next];
	479	[contract_name=RampInstantEthPool,
		function_fullname="validateSwapsContract(address,uint16)",
		label="buggy_20.sol_RampInstantEthPool_validateSwapsContract(address,uint16)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[346, 347, 348, 349, 350, 351, 352, 353]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	479 -> 475	[key=0,
		edge_type=next,
		label=Next];
	480	[contract_name=RampInstantEthPool,
		function_fullname="onlyActive()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	481	[contract_name=RampInstantEthPool,
		function_fullname="onlyActive()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isActive,contract is stopped)

IRs:
TMP_307(None) = SOLIDITY_CALL require(\
bool,string)(isActive,contract is stopped)",
		node_expression="require(bool,string)(isActive,contract is stopped)",
		node_info_vulnerabilities=None,
		node_irs="TMP_307(None) = SOLIDITY_CALL require(bool,string)(isActive,contract is stopped)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	480 -> 481	[key=0,
		edge_type=next,
		label=Next];
	482	[contract_name=RampInstantEthPool,
		function_fullname="onlyActive()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[87]",
		node_type=_,
		source_file="buggy_20.sol"];
	481 -> 482	[key=0,
		edge_type=next,
		label=Next];
	483	[contract_name=RampInstantEthPool,
		function_fullname="onlyActive()",
		label="buggy_20.sol_RampInstantEthPool_onlyActive()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	483 -> 480	[key=0,
		edge_type=next,
		label=Next];
	484	[contract_name=RampInstantEthPool,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51, 52, 53, 54]",
		node_type=ENTRY_POINT,
		source_file="buggy_20.sol"];
	485	[contract_name=RampInstantEthPool,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender == owner,only the owner can call this)

IRs:
TMP_308(bool) = \
msg.sender == owner
TMP_309(None) = SOLIDITY_CALL require(bool,string)(TMP_308,only the owner can call this)",
		node_expression="require(bool,string)(msg.sender == owner,only the owner can call this)",
		node_info_vulnerabilities=None,
		node_irs="TMP_308(bool) = msg.sender == owner
TMP_309(None) = SOLIDITY_CALL require(bool,string)(TMP_308,only the owner can call this)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_20.sol"];
	484 -> 485	[key=0,
		edge_type=next,
		label=Next];
	486	[contract_name=RampInstantEthPool,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[53]",
		node_type=_,
		source_file="buggy_20.sol"];
	485 -> 486	[key=0,
		edge_type=next,
		label=Next];
	487	[contract_name=RampInstantEthPool,
		function_fullname="onlyOwner()",
		label="buggy_20.sol_RampInstantEthPool_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51, 52, 53, 54]",
		node_type=FUNCTION_NAME,
		source_file="buggy_20.sol"];
	487 -> 484	[key=0,
		edge_type=next,
		label=Next];
}
