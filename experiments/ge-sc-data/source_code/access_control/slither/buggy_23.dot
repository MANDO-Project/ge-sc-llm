digraph "" {
	node [label="\N"];
	0	[contract_name=IERC20,
		function_fullname="transfer(address,uint256)",
		label="buggy_23.sol_IERC20_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	1	[contract_name=IERC20,
		function_fullname="approve(address,uint256)",
		label="buggy_23.sol_IERC20_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	2	[contract_name=IERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_23.sol_IERC20_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	3	[contract_name=IERC20,
		function_fullname="totalSupply()",
		label="buggy_23.sol_IERC20_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	4	[contract_name=IERC20,
		function_fullname="balanceOf(address)",
		label="buggy_23.sol_IERC20_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	5	[contract_name=IERC20,
		function_fullname="allowance(address,address)",
		label="buggy_23.sol_IERC20_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	6	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	7	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a == 0

IRs:
TMP_0(bool) = a == 0
CONDITION TMP_0",
		node_expression="a == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(bool) = a == 0
CONDITION TMP_0",
		node_source_code_lines="[47]",
		node_type=IF,
		source_file="buggy_23.sol"];
	6 -> 7	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
0

IRs:
RETURN 0",
		node_expression=0,
		node_info_vulnerabilities=None,
		node_irs="RETURN 0",
		node_source_code_lines="[48]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	7 -> 8	[key=0,
		edge_type=if_true,
		label=True];
	9	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[47, 48, 49]",
		node_type=END_IF,
		source_file="buggy_23.sol"];
	7 -> 9	[key=0,
		edge_type=if_false,
		label=False];
	10	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a * b

IRs:
TMP_1(uint256) = a * b
c(uint256) := TMP_1(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(uint256) = a * b
c(uint256) := TMP_1(uint256)",
		node_source_code_lines="[51]",
		node_type="NEW VARIABLE",
		source_file="buggy_23.sol"];
	9 -> 10	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(c / a == b)

IRs:
TMP_2(uint256) = c / a
TMP_3(bool) = TMP_2 == b
TMP_4(None) = \
SOLIDITY_CALL require(bool)(TMP_3)",
		node_expression="require(bool)(c / a == b)",
		node_info_vulnerabilities=None,
		node_irs="TMP_2(uint256) = c / a
TMP_3(bool) = TMP_2 == b
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	10 -> 11	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[54]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	11 -> 12	[key=0,
		edge_type=next,
		label=Next];
	13	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_23.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	13 -> 6	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63, 64, 65, 66, 67]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	15	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b > 0)

IRs:
TMP_5(bool) = b > 0
TMP_6(None) = SOLIDITY_CALL require(bool)(TMP_\
5)",
		node_expression="require(bool)(b > 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_5(bool) = b > 0
TMP_6(None) = SOLIDITY_CALL require(bool)(TMP_5)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	14 -> 15	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a / b

IRs:
TMP_7(uint256) = a / b
c(uint256) := TMP_7(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_7(uint256) = a / b
c(uint256) := TMP_7(uint256)",
		node_source_code_lines="[63]",
		node_type="NEW VARIABLE",
		source_file="buggy_23.sol"];
	15 -> 16	[key=0,
		edge_type=next,
		label=Next];
	17	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[66]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	16 -> 17	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_23.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[60, 61, 62, 63, 64, 65, 66, 67]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	18 -> 14	[key=0,
		edge_type=next,
		label=Next];
	19	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[72, 73, 74, 75, 76, 77]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	20	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b <= a)

IRs:
TMP_8(bool) = b <= a
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_\
8)",
		node_expression="require(bool)(b <= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_8(bool) = b <= a
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)",
		node_source_code_lines="[73]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	19 -> 20	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a - b

IRs:
TMP_10(uint256) = a - b
c(uint256) := TMP_10(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_10(uint256) = a - b
c(uint256) := TMP_10(uint256)",
		node_source_code_lines="[74]",
		node_type="NEW VARIABLE",
		source_file="buggy_23.sol"];
	20 -> 21	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[76]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	21 -> 22	[key=0,
		edge_type=next,
		label=Next];
	23	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_23.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[72, 73, 74, 75, 76, 77]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	23 -> 19	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[82, 83, 84, 85, 86, 87]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	25	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a + b

IRs:
TMP_11(uint256) = a + b
c(uint256) := TMP_11(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_11(uint256) = a + b
c(uint256) := TMP_11(uint256)",
		node_source_code_lines="[83]",
		node_type="NEW VARIABLE",
		source_file="buggy_23.sol"];
	24 -> 25	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(c >= a)

IRs:
TMP_12(bool) = c >= a
TMP_13(None) = SOLIDITY_CALL require(bool)(\
TMP_12)",
		node_expression="require(bool)(c >= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(bool) = c >= a
TMP_13(None) = SOLIDITY_CALL require(bool)(TMP_12)",
		node_source_code_lines="[84]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	25 -> 26	[key=0,
		edge_type=next,
		label=Next];
	27	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[86]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	26 -> 27	[key=0,
		edge_type=next,
		label=Next];
	28	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_23.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[82, 83, 84, 85, 86, 87]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	28 -> 24	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[93, 94, 95, 96]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	30	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b != 0)

IRs:
TMP_14(bool) = b != 0
TMP_15(None) = SOLIDITY_CALL require(bool)(\
TMP_14)",
		node_expression="require(bool)(b != 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_14(bool) = b != 0
TMP_15(None) = SOLIDITY_CALL require(bool)(TMP_14)",
		node_source_code_lines="[94]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	29 -> 30	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a % b

IRs:
TMP_16(uint256) = a % b
RETURN TMP_16",
		node_expression="a % b",
		node_info_vulnerabilities=None,
		node_irs="TMP_16(uint256) = a % b
RETURN TMP_16",
		node_source_code_lines="[95]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	30 -> 31	[key=0,
		edge_type=next,
		label=Next];
	32	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="buggy_23.sol_SafeMath_mod(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[93, 94, 95, 96]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	32 -> 29	[key=0,
		edge_type=next,
		label=Next];
	33	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="buggy_23.sol_ERC20_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	34	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="buggy_23.sol_ERC20_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	35	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_23.sol_ERC20_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	36	[contract_name=ERC20,
		function_fullname="totalSupply()",
		label="buggy_23.sol_ERC20_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	37	[contract_name=ERC20,
		function_fullname="balanceOf(address)",
		label="buggy_23.sol_ERC20_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	38	[contract_name=ERC20,
		function_fullname="allowance(address,address)",
		label="buggy_23.sol_ERC20_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	39	[contract_name=ERC20,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	40	[contract_name=ERC20,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_17(bool) = tx.origin == owner_txorigin1
\
TMP_18(None) = SOLIDITY_CALL require(bool)(TMP_17)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_17(bool) = tx.origin == owner_txorigin1
TMP_18(None) = SOLIDITY_CALL require(bool)(TMP_17)",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	39 -> 40	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=ERC20,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	40 -> 41	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=ERC20,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_23.sol_ERC20_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	42 -> 39	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	44	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_20(bool) = tx.origin == owner_txorigin2
\
TMP_21(None) = SOLIDITY_CALL require(bool)(TMP_20)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_20(bool) = tx.origin == owner_txorigin2
TMP_21(None) = SOLIDITY_CALL require(bool)(TMP_20)",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	43 -> 44	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_22 = CONVERT this to address
REF_2 -> BALANCE \
TMP_22
Transfer dest:_recipient value:REF_2",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_22 = CONVERT this to address
REF_2 -> BALANCE TMP_22
Transfer dest:_recipient value:REF_2",
		node_source_code_lines="[128]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	44 -> 45	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_23.sol_ERC20_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	46 -> 43	[key=0,
		edge_type=next,
		label=Next];
	47	[contract_name=ERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	48	[contract_name=ERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_24(bool) = tx.origin == owner_txorigin17
\
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_24(bool) = tx.origin == owner_txorigin17
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	47 -> 48	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=ERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	48 -> 49	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=ERC20,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_23.sol_ERC20_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	50 -> 47	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=ERC20,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	52	[contract_name=ERC20,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply

IRs:
RETURN _totalSupply",
		node_expression=_totalSupply,
		node_info_vulnerabilities=None,
		node_irs="RETURN _totalSupply",
		node_source_code_lines="[142]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=ERC20,
		function_fullname="totalSupply()",
		label="buggy_23.sol_ERC20_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	53 -> 51	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=ERC20,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	55	[contract_name=ERC20,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_27(bool) = tx.origin == owner_txorigin25
\
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_27(bool) = tx.origin == owner_txorigin25
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	54 -> 55	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=ERC20,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=ERC20,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_23.sol_ERC20_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	57 -> 54	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=ERC20,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	59	[contract_name=ERC20,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
_balances[owner]

IRs:
REF_5(uint256) -> _balances[owner]
RETURN REF_5",
		node_expression="_balances[owner]",
		node_info_vulnerabilities=None,
		node_irs="REF_5(uint256) -> _balances[owner]
RETURN REF_5",
		node_source_code_lines="[155]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	58 -> 59	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=ERC20,
		function_fullname="balanceOf(address)",
		label="buggy_23.sol_ERC20_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	60 -> 58	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=ERC20,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159, 160]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	62	[contract_name=ERC20,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_30(bool) = tx.origin == owner_txorigin19
\
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_30(bool) = tx.origin == owner_txorigin19
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	61 -> 62	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=ERC20,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_6(None) -> to.call
REF_7(None) -> REF_6.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_6(None) -> to.call
REF_7(None) -> REF_6.value",
		node_source_code_lines="[159]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	62 -> 63	[key=0,
		edge_type=next,
		label=Next];
	64	[contract_name=ERC20,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_23.sol_ERC20_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159, 160]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	64 -> 61	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=ERC20,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168, 169, 170]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	66	[contract_name=ERC20,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
_allowed[owner][spender]

IRs:
REF_8(mapping(address => uint256)) -> _allowed[owner]
REF_9(uint256) \
-> REF_8[spender]
RETURN REF_9",
		node_expression="_allowed[owner][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_8(mapping(address => uint256)) -> _allowed[owner]
REF_9(uint256) -> REF_8[spender]
RETURN REF_9",
		node_source_code_lines="[169]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	65 -> 66	[key=0,
		edge_type=next,
		label=Next];
	67	[contract_name=ERC20,
		function_fullname="allowance(address,address)",
		label="buggy_23.sol_ERC20_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168, 169, 170]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	67 -> 65	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	69	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_33(bool) = tx.origin == owner_txorigin26
\
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_33(bool) = tx.origin == owner_txorigin26
TMP_34(None) = SOLIDITY_CALL require(bool)(TMP_33)",
		node_source_code_lines="[172]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	68 -> 69	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_35 = CONVERT this to address
REF_11 -> BALANCE \
TMP_35
Transfer dest:_recipient value:REF_11",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_35 = CONVERT this to address
REF_11 -> BALANCE TMP_35
Transfer dest:_recipient value:REF_11",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	69 -> 70	[key=0,
		edge_type=next,
		label=Next];
	71	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_23.sol_ERC20_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	71 -> 68	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[181, 182, 183, 184]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	73	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(msg.sender,to,value)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(\
msg.sender,to,value)",
		node_expression="_transfer(msg.sender,to,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(msg.sender,to,value)",
		node_source_code_lines="[182]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	72 -> 73	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[183]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	73 -> 74	[key=0,
		edge_type=next,
		label=Next];
	75	[contract_name=ERC20,
		function_fullname="transfer(address,uint256)",
		label="buggy_23.sol_ERC20_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[181, 182, 183, 184]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	75 -> 72	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=ERC20,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	77	[contract_name=ERC20,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_38(bool) = tx.origin == owner_txorigin20
\
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_38(bool) = tx.origin == owner_txorigin20
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_source_code_lines="[186]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	76 -> 77	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=ERC20,
		function_fullname="bug_txorigin20(address)",
		label="buggy_23.sol_ERC20_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	78 -> 76	[key=0,
		edge_type=next,
		label=Next];
	79	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198, 199, 200, 201]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	80	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,value)

IRs:
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,value)",
		node_expression="_approve(msg.sender,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._approve(address,address,uint256)(msg.sender,spender,value)",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	79 -> 80	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[200]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	80 -> 81	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=ERC20,
		function_fullname="approve(address,uint256)",
		label="buggy_23.sol_ERC20_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198, 199, 200, 201]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	82 -> 79	[key=0,
		edge_type=next,
		label=Next];
	83	[contract_name=ERC20,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	84	[contract_name=ERC20,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_41(bool) = tx.origin == owner_txorigin32
\
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_41(bool) = tx.origin == owner_txorigin32
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	83 -> 84	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=ERC20,
		function_fullname="bug_txorigin32(address)",
		label="buggy_23.sol_ERC20_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	85 -> 83	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[214, 215, 216, 217, 218]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	87	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(from,to,value)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(from,to,\
value)",
		node_expression="_transfer(from,to,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(from,to,value)",
		node_source_code_lines="[215]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	86 -> 87	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(from,msg.sender,_allowed[from][msg.sender].sub(value))

IRs:
REF_12(mapping(address => \
uint256)) -> _allowed[from]
REF_13(uint256) -> REF_12[msg.sender]
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_13', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(from,msg.sender,TMP_44)",
		node_expression="_approve(from,msg.sender,_allowed[from][msg.sender].sub(value))",
		node_info_vulnerabilities=None,
		node_irs="REF_12(mapping(address => uint256)) -> _allowed[from]
REF_13(uint256) -> REF_12[msg.sender]
TMP_44(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_13', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
from,msg.sender,TMP_44)",
		node_source_code_lines="[216]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[217]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	88 -> 89	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=ERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_23.sol_ERC20_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[214, 215, 216, 217, 218]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	90 -> 86	[key=0,
		edge_type=next,
		label=Next];
	91	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[219, 220, 221, 222]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	92	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_46(bool) = tx.origin == owner_txorigin38
\
TMP_47(None) = SOLIDITY_CALL require(bool)(TMP_46)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_46(bool) = tx.origin == owner_txorigin38
TMP_47(None) = SOLIDITY_CALL require(bool)(TMP_46)",
		node_source_code_lines="[220]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	91 -> 92	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_48 = CONVERT this to address
REF_16 -> BALANCE \
TMP_48
Transfer dest:_recipient value:REF_16",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_48 = CONVERT this to address
REF_16 -> BALANCE TMP_48
Transfer dest:_recipient value:REF_16",
		node_source_code_lines="[221]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	92 -> 93	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_23.sol_ERC20_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[219, 220, 221, 222]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	94 -> 91	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=ERC20,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	96	[contract_name=ERC20,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowed[msg.sender][spender].add(addedValue))

IRs:
REF_17(mapping(\
address => uint256)) -> _allowed[msg.sender]
REF_18(uint256) -> REF_17[spender]
TMP_50(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_18', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(msg.sender,\
spender,TMP_50)",
		node_expression="_approve(msg.sender,spender,_allowed[msg.sender][spender].add(addedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_17(mapping(address => uint256)) -> _allowed[msg.sender]
REF_18(uint256) -> REF_17[spender]
TMP_50(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_18', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,address,\
uint256)(msg.sender,spender,TMP_50)",
		node_source_code_lines="[235]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	95 -> 96	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=ERC20,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[236]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	96 -> 97	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=ERC20,
		function_fullname="increaseAllowance(address,uint256)",
		label="buggy_23.sol_ERC20_increaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	98 -> 95	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=ERC20,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[238, 239, 240]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	100	[contract_name=ERC20,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_52(bool) = tx.origin == owner_txorigin4
\
TMP_53(None) = SOLIDITY_CALL require(bool)(TMP_52)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_52(bool) = tx.origin == owner_txorigin4
TMP_53(None) = SOLIDITY_CALL require(bool)(TMP_52)",
		node_source_code_lines="[239]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	99 -> 100	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=ERC20,
		function_fullname="bug_txorigin4(address)",
		label="buggy_23.sol_ERC20_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[238, 239, 240]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	101 -> 99	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=ERC20,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[252, 253, 254, 255]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	103	[contract_name=ERC20,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowed[msg.sender][spender].sub(subtractedValue))

IRs:
REF_20(\
mapping(address => uint256)) -> _allowed[msg.sender]
REF_21(uint256) -> REF_20[spender]
TMP_54(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_21', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,TMP_54)",
		node_expression="_approve(msg.sender,spender,_allowed[msg.sender][spender].sub(subtractedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_20(mapping(address => uint256)) -> _allowed[msg.sender]
REF_21(uint256) -> REF_20[spender]
TMP_54(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_21', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_54)",
		node_source_code_lines="[253]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=ERC20,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[254]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=ERC20,
		function_fullname="decreaseAllowance(address,uint256)",
		label="buggy_23.sol_ERC20_decreaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[252, 253, 254, 255]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	105 -> 102	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=ERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[256, 257, 258, 259]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	107	[contract_name=ERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_56(bool) = tx.origin == owner_txorigin7
\
TMP_57(None) = SOLIDITY_CALL require(bool)(TMP_56)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_56(bool) = tx.origin == owner_txorigin7
TMP_57(None) = SOLIDITY_CALL require(bool)(TMP_56)",
		node_source_code_lines="[257]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	106 -> 107	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=ERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_23(None) -> to.call
REF_24(None) -> REF_23.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_23(None) -> to.call
REF_24(None) -> REF_23.value",
		node_source_code_lines="[258]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	107 -> 108	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=ERC20,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_23.sol_ERC20_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[256, 257, 258, 259]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	109 -> 106	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	111	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(to != address(0))

IRs:
TMP_59 = CONVERT 0 to address
TMP_60(bool) = to != TMP_\
59
TMP_61(None) = SOLIDITY_CALL require(bool)(TMP_60)",
		node_expression="require(bool)(to != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_59 = CONVERT 0 to address
TMP_60(bool) = to != TMP_59
TMP_61(None) = SOLIDITY_CALL require(bool)(TMP_60)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	110 -> 111	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[from] = _balances[from].sub(value)

IRs:
REF_25(uint256) -> _balances[from]
REF_26(\
uint256) -> _balances[from]
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_\
26', 'value'] 
REF_25 (->_balances) := TMP_62(uint256)",
		node_expression="_balances[from] = _balances[from].sub(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_25(uint256) -> _balances[from]
REF_26(uint256) -> _balances[from]
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_26', 'value'] 
REF_25 (->_balances) := TMP_62(uint256)",
		node_source_code_lines="[270]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	111 -> 112	[key=0,
		edge_type=next,
		label=Next];
	113	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[to] = _balances[to].add(value)

IRs:
REF_28(uint256) -> _balances[to]
REF_29(uint256) \
-> _balances[to]
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_29', 'value'] 
\
REF_28 (->_balances) := TMP_63(uint256)",
		node_expression="_balances[to] = _balances[to].add(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_28(uint256) -> _balances[to]
REF_29(uint256) -> _balances[to]
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_29', 'value'] 
REF_28 (->_balances) := TMP_63(uint256)",
		node_source_code_lines="[271]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,to,value)

IRs:
Emit Transfer(from.to.value)",
		node_expression="Transfer(from,to,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(from.to.value)",
		node_source_code_lines="[272]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=ERC20,
		function_fullname="_transfer(address,address,uint256)",
		label="buggy_23.sol_ERC20__transfer(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	115 -> 110	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=ERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	117	[contract_name=ERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_65(bool) = tx.origin == owner_txorigin23
\
TMP_66(None) = SOLIDITY_CALL require(bool)(TMP_65)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_65(bool) = tx.origin == owner_txorigin23
TMP_66(None) = SOLIDITY_CALL require(bool)(TMP_65)",
		node_source_code_lines="[275]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	116 -> 117	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=ERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_31(None) -> to.call
REF_32(None) -> REF_31.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_31(None) -> to.call
REF_32(None) -> REF_31.value",
		node_source_code_lines="[276]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	117 -> 118	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=ERC20,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_23.sol_ERC20_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	119 -> 116	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288, 289, 290, 291, 292]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	121	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(account != address(0))

IRs:
TMP_68 = CONVERT 0 to address
TMP_69(bool) = account != \
TMP_68
TMP_70(None) = SOLIDITY_CALL require(bool)(TMP_69)",
		node_expression="require(bool)(account != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_68 = CONVERT 0 to address
TMP_69(bool) = account != TMP_68
TMP_70(None) = SOLIDITY_CALL require(bool)(TMP_69)",
		node_source_code_lines="[287]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	120 -> 121	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.add(value)

IRs:
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(uint256) := TMP_71(uint256)",
		node_expression="_totalSupply = _totalSupply.add(value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(\
uint256) := TMP_71(uint256)",
		node_source_code_lines="[289]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	121 -> 122	[key=0,
		edge_type=next,
		label=Next];
	123	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].add(value)

IRs:
REF_34(uint256) -> _balances[account]
\
REF_35(uint256) -> _balances[account]
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_35', 'value'] 
REF_34 (->_balances) := TMP_72(uint256)",
		node_expression="_balances[account] = _balances[account].add(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_34(uint256) -> _balances[account]
REF_35(uint256) -> _balances[account]
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_35', 'value'] 
REF_34 (->_balances) := TMP_72(uint256)",
		node_source_code_lines="[290]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	122 -> 123	[key=0,
		edge_type=next,
		label=Next];
	124	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),account,value)

IRs:
TMP_73 = CONVERT 0 to address
Emit Transfer(TMP_73.account.value)",
		node_expression="Transfer(address(0),account,value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_73 = CONVERT 0 to address
Emit Transfer(TMP_73.account.value)",
		node_source_code_lines="[291]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	123 -> 124	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=ERC20,
		function_fullname="_mint(address,uint256)",
		label="buggy_23.sol_ERC20__mint(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288, 289, 290, 291, 292]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	125 -> 120	[key=0,
		edge_type=next,
		label=Next];
	126	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	127	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_75(bool) = tx.origin == owner_txorigin14
\
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_75(bool) = tx.origin == owner_txorigin14
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_source_code_lines="[294]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_77 = CONVERT this to address
REF_38 -> BALANCE \
TMP_77
Transfer dest:_recipient value:REF_38",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_77 = CONVERT this to address
REF_38 -> BALANCE TMP_77
Transfer dest:_recipient value:REF_38",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	127 -> 128	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_23.sol_ERC20_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	129 -> 126	[key=0,
		edge_type=next,
		label=Next];
	130	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	131	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(account != address(0))

IRs:
TMP_79 = CONVERT 0 to address
TMP_80(bool) = account != \
TMP_79
TMP_81(None) = SOLIDITY_CALL require(bool)(TMP_80)",
		node_expression="require(bool)(account != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_79 = CONVERT 0 to address
TMP_80(bool) = account != TMP_79
TMP_81(None) = SOLIDITY_CALL require(bool)(TMP_80)",
		node_source_code_lines="[305]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	130 -> 131	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.sub(value)

IRs:
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(uint256) := TMP_82(uint256)",
		node_expression="_totalSupply = _totalSupply.sub(value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(\
uint256) := TMP_82(uint256)",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	131 -> 132	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].sub(value)

IRs:
REF_40(uint256) -> _balances[account]
\
REF_41(uint256) -> _balances[account]
TMP_83(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_41', 'value'] 
REF_40 (->_balances) := TMP_83(uint256)",
		node_expression="_balances[account] = _balances[account].sub(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_40(uint256) -> _balances[account]
REF_41(uint256) -> _balances[account]
TMP_83(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_41', 'value'] 
REF_40 (->_balances) := TMP_83(uint256)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	132 -> 133	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(account,address(0),value)

IRs:
TMP_84 = CONVERT 0 to address
Emit Transfer(account.TMP_\
84.value)",
		node_expression="Transfer(account,address(0),value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_84 = CONVERT 0 to address
Emit Transfer(account.TMP_84.value)",
		node_source_code_lines="[309]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	133 -> 134	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=ERC20,
		function_fullname="_burn(address,uint256)",
		label="buggy_23.sol_ERC20__burn(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	135 -> 130	[key=0,
		edge_type=next,
		label=Next];
	136	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[311, 312, 313, 314]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	137	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_86(bool) = tx.origin == owner_txorigin30
\
TMP_87(None) = SOLIDITY_CALL require(bool)(TMP_86)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_86(bool) = tx.origin == owner_txorigin30
TMP_87(None) = SOLIDITY_CALL require(bool)(TMP_86)",
		node_source_code_lines="[312]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_88 = CONVERT this to address
REF_44 -> BALANCE \
TMP_88
Transfer dest:_recipient value:REF_44",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_88 = CONVERT this to address
REF_44 -> BALANCE TMP_88
Transfer dest:_recipient value:REF_44",
		node_source_code_lines="[313]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=ERC20,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_23.sol_ERC20_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[311, 312, 313, 314]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	139 -> 136	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324, 325, 326, 327, 328]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	141	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(spender != address(0))

IRs:
TMP_90 = CONVERT 0 to address
TMP_91(bool) = spender != \
TMP_90
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_expression="require(bool)(spender != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_90 = CONVERT 0 to address
TMP_91(bool) = spender != TMP_90
TMP_92(None) = SOLIDITY_CALL require(bool)(TMP_91)",
		node_source_code_lines="[323]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(owner != address(0))

IRs:
TMP_93 = CONVERT 0 to address
TMP_94(bool) = owner != \
TMP_93
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_expression="require(bool)(owner != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_93 = CONVERT 0 to address
TMP_94(bool) = owner != TMP_93
TMP_95(None) = SOLIDITY_CALL require(bool)(TMP_94)",
		node_source_code_lines="[324]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	141 -> 142	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_allowed[owner][spender] = value

IRs:
REF_45(mapping(address => uint256)) -> _allowed[owner]
\
REF_46(uint256) -> REF_45[spender]
REF_46 (->_allowed) := value(uint256)",
		node_expression="_allowed[owner][spender] = value",
		node_info_vulnerabilities=None,
		node_irs="REF_45(mapping(address => uint256)) -> _allowed[owner]
REF_46(uint256) -> REF_45[spender]
REF_46 (->_allowed) := value(uint256)",
		node_source_code_lines="[326]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	142 -> 143	[key=0,
		edge_type=next,
		label=Next];
	144	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(owner,spender,value)

IRs:
Emit Approval(owner.spender.value)",
		node_expression="Approval(owner,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(owner.spender.value)",
		node_source_code_lines="[327]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=ERC20,
		function_fullname="_approve(address,address,uint256)",
		label="buggy_23.sol_ERC20__approve(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324, 325, 326, 327, 328]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	145 -> 140	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=ERC20,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[329, 330, 331]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	147	[contract_name=ERC20,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_97(bool) = tx.origin == owner_txorigin8
\
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_97(bool) = tx.origin == owner_txorigin8
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)",
		node_source_code_lines="[330]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	146 -> 147	[key=0,
		edge_type=next,
		label=Next];
	148	[contract_name=ERC20,
		function_fullname="bug_txorigin8(address)",
		label="buggy_23.sol_ERC20_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[329, 330, 331]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	148 -> 146	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=ERC20,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[341, 342, 343, 344]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	150	[contract_name=ERC20,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(account,value)

IRs:
INTERNAL_CALL, ERC20._burn(address,uint256)(account,value)",
		node_expression="_burn(account,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._burn(address,uint256)(account,value)",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	149 -> 150	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=ERC20,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(account,msg.sender,_allowed[account][msg.sender].sub(value))

IRs:
REF_47(mapping(address => \
uint256)) -> _allowed[account]
REF_48(uint256) -> REF_47[msg.sender]
TMP_100(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_48', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(account,msg.sender,TMP_100)",
		node_expression="_approve(account,msg.sender,_allowed[account][msg.sender].sub(value))",
		node_info_vulnerabilities=None,
		node_irs="REF_47(mapping(address => uint256)) -> _allowed[account]
REF_48(uint256) -> REF_47[msg.sender]
TMP_100(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_48', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,\
uint256)(account,msg.sender,TMP_100)",
		node_source_code_lines="[343]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	150 -> 151	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=ERC20,
		function_fullname="_burnFrom(address,uint256)",
		label="buggy_23.sol_ERC20__burnFrom(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[341, 342, 343, 344]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	152 -> 149	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=ERC20,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[345, 346, 347, 348]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	154	[contract_name=ERC20,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_102(bool) = tx.origin == owner_txorigin39
\
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_102(bool) = tx.origin == owner_txorigin39
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_source_code_lines="[346]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=ERC20,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_50(None) -> to.call
REF_51(None) -> REF_50.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_50(None) -> to.call
REF_51(None) -> REF_50.value",
		node_source_code_lines="[347]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=ERC20,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_23.sol_ERC20_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[345, 346, 347, 348]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	156 -> 153	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	158	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_105(bool) = tx.origin == owner_txorigin1
\
TMP_106(None) = SOLIDITY_CALL require(bool)(TMP_105)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_105(bool) = tx.origin == owner_txorigin1
TMP_106(None) = SOLIDITY_CALL require(bool)(TMP_105)",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	157 -> 158	[key=0,
		edge_type=next,
		label=Next];
	159	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	158 -> 159	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_23.sol_ERC20Burnable_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	160 -> 157	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	162	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_108(bool) = tx.origin == owner_txorigin2
\
TMP_109(None) = SOLIDITY_CALL require(bool)(TMP_108)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_108(bool) = tx.origin == owner_txorigin2
TMP_109(None) = SOLIDITY_CALL require(bool)(TMP_108)",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	161 -> 162	[key=0,
		edge_type=next,
		label=Next];
	163	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_110 = CONVERT this to address
REF_54 -> \
BALANCE TMP_110
Transfer dest:_recipient value:REF_54",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_110 = CONVERT this to address
REF_54 -> BALANCE TMP_110
Transfer dest:_recipient value:REF_54",
		node_source_code_lines="[128]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	162 -> 163	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_23.sol_ERC20Burnable_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	164 -> 161	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	166	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_112(bool) = tx.origin == owner_txorigin17
\
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_112(bool) = tx.origin == owner_txorigin17
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	165 -> 166	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_23.sol_ERC20Burnable_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	168 -> 165	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=ERC20Burnable,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	170	[contract_name=ERC20Burnable,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply

IRs:
RETURN _totalSupply",
		node_expression=_totalSupply,
		node_info_vulnerabilities=None,
		node_irs="RETURN _totalSupply",
		node_source_code_lines="[142]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	169 -> 170	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=ERC20Burnable,
		function_fullname="totalSupply()",
		label="buggy_23.sol_ERC20Burnable_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	171 -> 169	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	173	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_115(bool) = tx.origin == owner_txorigin25
\
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_115(bool) = tx.origin == owner_txorigin25
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	172 -> 173	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	173 -> 174	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=ERC20Burnable,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_23.sol_ERC20Burnable_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	175 -> 172	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=ERC20Burnable,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	177	[contract_name=ERC20Burnable,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
_balances[owner]

IRs:
REF_57(uint256) -> _balances[owner]
RETURN REF_57",
		node_expression="_balances[owner]",
		node_info_vulnerabilities=None,
		node_irs="REF_57(uint256) -> _balances[owner]
RETURN REF_57",
		node_source_code_lines="[155]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	176 -> 177	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=ERC20Burnable,
		function_fullname="balanceOf(address)",
		label="buggy_23.sol_ERC20Burnable_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	178 -> 176	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159, 160]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	180	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_118(bool) = tx.origin == owner_txorigin19
\
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_118(bool) = tx.origin == owner_txorigin19
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	179 -> 180	[key=0,
		edge_type=next,
		label=Next];
	181	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_58(None) -> to.call
REF_59(None) -> REF_58.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_58(None) -> to.call
REF_59(None) -> REF_58.value",
		node_source_code_lines="[159]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	180 -> 181	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_23.sol_ERC20Burnable_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159, 160]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	182 -> 179	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=ERC20Burnable,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168, 169, 170]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	184	[contract_name=ERC20Burnable,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
_allowed[owner][spender]

IRs:
REF_60(mapping(address => uint256)) -> _allowed[owner]
REF_61(uint256) \
-> REF_60[spender]
RETURN REF_61",
		node_expression="_allowed[owner][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_60(mapping(address => uint256)) -> _allowed[owner]
REF_61(uint256) -> REF_60[spender]
RETURN REF_61",
		node_source_code_lines="[169]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	183 -> 184	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=ERC20Burnable,
		function_fullname="allowance(address,address)",
		label="buggy_23.sol_ERC20Burnable_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168, 169, 170]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	185 -> 183	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	187	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_121(bool) = tx.origin == owner_txorigin26
\
TMP_122(None) = SOLIDITY_CALL require(bool)(TMP_121)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_121(bool) = tx.origin == owner_txorigin26
TMP_122(None) = SOLIDITY_CALL require(bool)(TMP_121)",
		node_source_code_lines="[172]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	186 -> 187	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_123 = CONVERT this to address
REF_63 -> \
BALANCE TMP_123
Transfer dest:_recipient value:REF_63",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_123 = CONVERT this to address
REF_63 -> BALANCE TMP_123
Transfer dest:_recipient value:REF_63",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	187 -> 188	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_23.sol_ERC20Burnable_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	189 -> 186	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=ERC20Burnable,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[181, 182, 183, 184]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	191	[contract_name=ERC20Burnable,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(msg.sender,to,value)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(\
msg.sender,to,value)",
		node_expression="_transfer(msg.sender,to,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(msg.sender,to,value)",
		node_source_code_lines="[182]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	190 -> 191	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=ERC20Burnable,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[183]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	191 -> 192	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=ERC20Burnable,
		function_fullname="transfer(address,uint256)",
		label="buggy_23.sol_ERC20Burnable_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[181, 182, 183, 184]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	193 -> 190	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	195	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_126(bool) = tx.origin == owner_txorigin20
\
TMP_127(None) = SOLIDITY_CALL require(bool)(TMP_126)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_126(bool) = tx.origin == owner_txorigin20
TMP_127(None) = SOLIDITY_CALL require(bool)(TMP_126)",
		node_source_code_lines="[186]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin20(address)",
		label="buggy_23.sol_ERC20Burnable_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	196 -> 194	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=ERC20Burnable,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198, 199, 200, 201]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	198	[contract_name=ERC20Burnable,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,value)

IRs:
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,value)",
		node_expression="_approve(msg.sender,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._approve(address,address,uint256)(msg.sender,spender,value)",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=ERC20Burnable,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[200]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	198 -> 199	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=ERC20Burnable,
		function_fullname="approve(address,uint256)",
		label="buggy_23.sol_ERC20Burnable_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198, 199, 200, 201]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	200 -> 197	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	202	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_129(bool) = tx.origin == owner_txorigin32
\
TMP_130(None) = SOLIDITY_CALL require(bool)(TMP_129)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_129(bool) = tx.origin == owner_txorigin32
TMP_130(None) = SOLIDITY_CALL require(bool)(TMP_129)",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	201 -> 202	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin32(address)",
		label="buggy_23.sol_ERC20Burnable_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	203 -> 201	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=ERC20Burnable,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[214, 215, 216, 217, 218]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	205	[contract_name=ERC20Burnable,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(from,to,value)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(from,to,\
value)",
		node_expression="_transfer(from,to,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(from,to,value)",
		node_source_code_lines="[215]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	204 -> 205	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=ERC20Burnable,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(from,msg.sender,_allowed[from][msg.sender].sub(value))

IRs:
REF_64(mapping(address => \
uint256)) -> _allowed[from]
REF_65(uint256) -> REF_64[msg.sender]
TMP_132(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_65', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(from,msg.sender,TMP_132)",
		node_expression="_approve(from,msg.sender,_allowed[from][msg.sender].sub(value))",
		node_info_vulnerabilities=None,
		node_irs="REF_64(mapping(address => uint256)) -> _allowed[from]
REF_65(uint256) -> REF_64[msg.sender]
TMP_132(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_65', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
from,msg.sender,TMP_132)",
		node_source_code_lines="[216]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	205 -> 206	[key=0,
		edge_type=next,
		label=Next];
	207	[contract_name=ERC20Burnable,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[217]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=ERC20Burnable,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_23.sol_ERC20Burnable_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[214, 215, 216, 217, 218]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	208 -> 204	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[219, 220, 221, 222]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	210	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_134(bool) = tx.origin == owner_txorigin38
\
TMP_135(None) = SOLIDITY_CALL require(bool)(TMP_134)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_134(bool) = tx.origin == owner_txorigin38
TMP_135(None) = SOLIDITY_CALL require(bool)(TMP_134)",
		node_source_code_lines="[220]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	209 -> 210	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_136 = CONVERT this to address
REF_68 -> \
BALANCE TMP_136
Transfer dest:_recipient value:REF_68",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_136 = CONVERT this to address
REF_68 -> BALANCE TMP_136
Transfer dest:_recipient value:REF_68",
		node_source_code_lines="[221]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	210 -> 211	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_23.sol_ERC20Burnable_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[219, 220, 221, 222]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	212 -> 209	[key=0,
		edge_type=next,
		label=Next];
	213	[contract_name=ERC20Burnable,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	214	[contract_name=ERC20Burnable,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowed[msg.sender][spender].add(addedValue))

IRs:
REF_69(mapping(\
address => uint256)) -> _allowed[msg.sender]
REF_70(uint256) -> REF_69[spender]
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_70', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,TMP_138)",
		node_expression="_approve(msg.sender,spender,_allowed[msg.sender][spender].add(addedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_69(mapping(address => uint256)) -> _allowed[msg.sender]
REF_70(uint256) -> REF_69[spender]
TMP_138(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_70', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_138)",
		node_source_code_lines="[235]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	213 -> 214	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=ERC20Burnable,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[236]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	214 -> 215	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=ERC20Burnable,
		function_fullname="increaseAllowance(address,uint256)",
		label="buggy_23.sol_ERC20Burnable_increaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	216 -> 213	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[238, 239, 240]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	218	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_140(bool) = tx.origin == owner_txorigin4
\
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_140(bool) = tx.origin == owner_txorigin4
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)",
		node_source_code_lines="[239]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	217 -> 218	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin4(address)",
		label="buggy_23.sol_ERC20Burnable_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[238, 239, 240]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	219 -> 217	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=ERC20Burnable,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[252, 253, 254, 255]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	221	[contract_name=ERC20Burnable,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowed[msg.sender][spender].sub(subtractedValue))

IRs:
REF_72(\
mapping(address => uint256)) -> _allowed[msg.sender]
REF_73(uint256) -> REF_72[spender]
TMP_142(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_73', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,TMP_142)",
		node_expression="_approve(msg.sender,spender,_allowed[msg.sender][spender].sub(subtractedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_72(mapping(address => uint256)) -> _allowed[msg.sender]
REF_73(uint256) -> REF_72[spender]
TMP_142(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_73', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_142)",
		node_source_code_lines="[253]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=ERC20Burnable,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[254]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=ERC20Burnable,
		function_fullname="decreaseAllowance(address,uint256)",
		label="buggy_23.sol_ERC20Burnable_decreaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[252, 253, 254, 255]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	223 -> 220	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[256, 257, 258, 259]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	225	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_144(bool) = tx.origin == owner_txorigin7
\
TMP_145(None) = SOLIDITY_CALL require(bool)(TMP_144)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_144(bool) = tx.origin == owner_txorigin7
TMP_145(None) = SOLIDITY_CALL require(bool)(TMP_144)",
		node_source_code_lines="[257]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	224 -> 225	[key=0,
		edge_type=next,
		label=Next];
	226	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_75(None) -> to.call
REF_76(None) -> REF_75.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_75(None) -> to.call
REF_76(None) -> REF_75.value",
		node_source_code_lines="[258]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	225 -> 226	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_23.sol_ERC20Burnable_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[256, 257, 258, 259]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	227 -> 224	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=ERC20Burnable,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	229	[contract_name=ERC20Burnable,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(to != address(0))

IRs:
TMP_147 = CONVERT 0 to address
TMP_148(bool) = to != TMP_\
147
TMP_149(None) = SOLIDITY_CALL require(bool)(TMP_148)",
		node_expression="require(bool)(to != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_147 = CONVERT 0 to address
TMP_148(bool) = to != TMP_147
TMP_149(None) = SOLIDITY_CALL require(bool)(TMP_148)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	228 -> 229	[key=0,
		edge_type=next,
		label=Next];
	230	[contract_name=ERC20Burnable,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[from] = _balances[from].sub(value)

IRs:
REF_77(uint256) -> _balances[from]
REF_78(\
uint256) -> _balances[from]
TMP_150(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_78', 'value'] 
REF_77 (->_balances) := TMP_150(uint256)",
		node_expression="_balances[from] = _balances[from].sub(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_77(uint256) -> _balances[from]
REF_78(uint256) -> _balances[from]
TMP_150(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_78', 'value'] 
REF_77 (->_balances) := TMP_150(uint256)",
		node_source_code_lines="[270]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=ERC20Burnable,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[to] = _balances[to].add(value)

IRs:
REF_80(uint256) -> _balances[to]
REF_81(uint256) \
-> _balances[to]
TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_81', 'value'] 
\
REF_80 (->_balances) := TMP_151(uint256)",
		node_expression="_balances[to] = _balances[to].add(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_80(uint256) -> _balances[to]
REF_81(uint256) -> _balances[to]
TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_81', 'value'] 
REF_80 (->_balances) := TMP_151(uint256)",
		node_source_code_lines="[271]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	230 -> 231	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=ERC20Burnable,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,to,value)

IRs:
Emit Transfer(from.to.value)",
		node_expression="Transfer(from,to,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(from.to.value)",
		node_source_code_lines="[272]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=ERC20Burnable,
		function_fullname="_transfer(address,address,uint256)",
		label="buggy_23.sol_ERC20Burnable__transfer(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	233 -> 228	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	235	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_153(bool) = tx.origin == owner_txorigin23
\
TMP_154(None) = SOLIDITY_CALL require(bool)(TMP_153)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_153(bool) = tx.origin == owner_txorigin23
TMP_154(None) = SOLIDITY_CALL require(bool)(TMP_153)",
		node_source_code_lines="[275]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	234 -> 235	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_83(None) -> to.call
REF_84(None) -> REF_83.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_83(None) -> to.call
REF_84(None) -> REF_83.value",
		node_source_code_lines="[276]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	235 -> 236	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_23.sol_ERC20Burnable_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	237 -> 234	[key=0,
		edge_type=next,
		label=Next];
	238	[contract_name=ERC20Burnable,
		function_fullname="_mint(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288, 289, 290, 291, 292]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	239	[contract_name=ERC20Burnable,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(account != address(0))

IRs:
TMP_156 = CONVERT 0 to address
TMP_157(bool) = account != \
TMP_156
TMP_158(None) = SOLIDITY_CALL require(bool)(TMP_157)",
		node_expression="require(bool)(account != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_156 = CONVERT 0 to address
TMP_157(bool) = account != TMP_156
TMP_158(None) = SOLIDITY_CALL require(bool)(TMP_157)",
		node_source_code_lines="[287]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=ERC20Burnable,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.add(value)

IRs:
TMP_159(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(uint256) := TMP_159(uint256)",
		node_expression="_totalSupply = _totalSupply.add(value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_159(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(\
uint256) := TMP_159(uint256)",
		node_source_code_lines="[289]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	239 -> 240	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=ERC20Burnable,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].add(value)

IRs:
REF_86(uint256) -> _balances[account]
\
REF_87(uint256) -> _balances[account]
TMP_160(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_87', 'value'] 
REF_86 (->_balances) := TMP_160(uint256)",
		node_expression="_balances[account] = _balances[account].add(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_86(uint256) -> _balances[account]
REF_87(uint256) -> _balances[account]
TMP_160(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_87', 'value'] 
REF_86 (->_balances) := TMP_160(uint256)",
		node_source_code_lines="[290]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	240 -> 241	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=ERC20Burnable,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),account,value)

IRs:
TMP_161 = CONVERT 0 to address
Emit Transfer(TMP_161.account.value)",
		node_expression="Transfer(address(0),account,value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_161 = CONVERT 0 to address
Emit Transfer(TMP_161.account.value)",
		node_source_code_lines="[291]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=ERC20Burnable,
		function_fullname="_mint(address,uint256)",
		label="buggy_23.sol_ERC20Burnable__mint(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288, 289, 290, 291, 292]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	243 -> 238	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	245	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_163(bool) = tx.origin == owner_txorigin14
\
TMP_164(None) = SOLIDITY_CALL require(bool)(TMP_163)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_163(bool) = tx.origin == owner_txorigin14
TMP_164(None) = SOLIDITY_CALL require(bool)(TMP_163)",
		node_source_code_lines="[294]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	244 -> 245	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_165 = CONVERT this to address
REF_90 -> \
BALANCE TMP_165
Transfer dest:_recipient value:REF_90",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_165 = CONVERT this to address
REF_90 -> BALANCE TMP_165
Transfer dest:_recipient value:REF_90",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	245 -> 246	[key=0,
		edge_type=next,
		label=Next];
	247	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_23.sol_ERC20Burnable_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	247 -> 244	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=ERC20Burnable,
		function_fullname="_burn(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	249	[contract_name=ERC20Burnable,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(account != address(0))

IRs:
TMP_167 = CONVERT 0 to address
TMP_168(bool) = account != \
TMP_167
TMP_169(None) = SOLIDITY_CALL require(bool)(TMP_168)",
		node_expression="require(bool)(account != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_167 = CONVERT 0 to address
TMP_168(bool) = account != TMP_167
TMP_169(None) = SOLIDITY_CALL require(bool)(TMP_168)",
		node_source_code_lines="[305]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	248 -> 249	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=ERC20Burnable,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.sub(value)

IRs:
TMP_170(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(uint256) := TMP_170(uint256)",
		node_expression="_totalSupply = _totalSupply.sub(value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_170(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(\
uint256) := TMP_170(uint256)",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	249 -> 250	[key=0,
		edge_type=next,
		label=Next];
	251	[contract_name=ERC20Burnable,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].sub(value)

IRs:
REF_92(uint256) -> _balances[account]
\
REF_93(uint256) -> _balances[account]
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_93', 'value'] 
REF_92 (->_balances) := TMP_171(uint256)",
		node_expression="_balances[account] = _balances[account].sub(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_92(uint256) -> _balances[account]
REF_93(uint256) -> _balances[account]
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_93', 'value'] 
REF_92 (->_balances) := TMP_171(uint256)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	250 -> 251	[key=0,
		edge_type=next,
		label=Next];
	252	[contract_name=ERC20Burnable,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(account,address(0),value)

IRs:
TMP_172 = CONVERT 0 to address
Emit Transfer(account.TMP_\
172.value)",
		node_expression="Transfer(account,address(0),value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_172 = CONVERT 0 to address
Emit Transfer(account.TMP_172.value)",
		node_source_code_lines="[309]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	251 -> 252	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=ERC20Burnable,
		function_fullname="_burn(address,uint256)",
		label="buggy_23.sol_ERC20Burnable__burn(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	253 -> 248	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[311, 312, 313, 314]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	255	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_174(bool) = tx.origin == owner_txorigin30
\
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_174(bool) = tx.origin == owner_txorigin30
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_source_code_lines="[312]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	254 -> 255	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_176 = CONVERT this to address
REF_96 -> \
BALANCE TMP_176
Transfer dest:_recipient value:REF_96",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_176 = CONVERT this to address
REF_96 -> BALANCE TMP_176
Transfer dest:_recipient value:REF_96",
		node_source_code_lines="[313]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	255 -> 256	[key=0,
		edge_type=next,
		label=Next];
	257	[contract_name=ERC20Burnable,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_23.sol_ERC20Burnable_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[311, 312, 313, 314]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	257 -> 254	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=ERC20Burnable,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324, 325, 326, 327, 328]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	259	[contract_name=ERC20Burnable,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(spender != address(0))

IRs:
TMP_178 = CONVERT 0 to address
TMP_179(bool) = spender != \
TMP_178
TMP_180(None) = SOLIDITY_CALL require(bool)(TMP_179)",
		node_expression="require(bool)(spender != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_178 = CONVERT 0 to address
TMP_179(bool) = spender != TMP_178
TMP_180(None) = SOLIDITY_CALL require(bool)(TMP_179)",
		node_source_code_lines="[323]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	258 -> 259	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=ERC20Burnable,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(owner != address(0))

IRs:
TMP_181 = CONVERT 0 to address
TMP_182(bool) = owner != \
TMP_181
TMP_183(None) = SOLIDITY_CALL require(bool)(TMP_182)",
		node_expression="require(bool)(owner != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_181 = CONVERT 0 to address
TMP_182(bool) = owner != TMP_181
TMP_183(None) = SOLIDITY_CALL require(bool)(TMP_182)",
		node_source_code_lines="[324]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	259 -> 260	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=ERC20Burnable,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_allowed[owner][spender] = value

IRs:
REF_97(mapping(address => uint256)) -> _allowed[owner]
\
REF_98(uint256) -> REF_97[spender]
REF_98 (->_allowed) := value(uint256)",
		node_expression="_allowed[owner][spender] = value",
		node_info_vulnerabilities=None,
		node_irs="REF_97(mapping(address => uint256)) -> _allowed[owner]
REF_98(uint256) -> REF_97[spender]
REF_98 (->_allowed) := value(uint256)",
		node_source_code_lines="[326]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=ERC20Burnable,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(owner,spender,value)

IRs:
Emit Approval(owner.spender.value)",
		node_expression="Approval(owner,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(owner.spender.value)",
		node_source_code_lines="[327]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=ERC20Burnable,
		function_fullname="_approve(address,address,uint256)",
		label="buggy_23.sol_ERC20Burnable__approve(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324, 325, 326, 327, 328]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	263 -> 258	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[329, 330, 331]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	265	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_185(bool) = tx.origin == owner_txorigin8
\
TMP_186(None) = SOLIDITY_CALL require(bool)(TMP_185)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_185(bool) = tx.origin == owner_txorigin8
TMP_186(None) = SOLIDITY_CALL require(bool)(TMP_185)",
		node_source_code_lines="[330]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	264 -> 265	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin8(address)",
		label="buggy_23.sol_ERC20Burnable_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[329, 330, 331]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	266 -> 264	[key=0,
		edge_type=next,
		label=Next];
	267	[contract_name=ERC20Burnable,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[341, 342, 343, 344]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	268	[contract_name=ERC20Burnable,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(account,value)

IRs:
INTERNAL_CALL, ERC20._burn(address,uint256)(account,value)",
		node_expression="_burn(account,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._burn(address,uint256)(account,value)",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=ERC20Burnable,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(account,msg.sender,_allowed[account][msg.sender].sub(value))

IRs:
REF_99(mapping(address => \
uint256)) -> _allowed[account]
REF_100(uint256) -> REF_99[msg.sender]
TMP_188(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_100', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(account,msg.sender,TMP_\
188)",
		node_expression="_approve(account,msg.sender,_allowed[account][msg.sender].sub(value))",
		node_info_vulnerabilities=None,
		node_irs="REF_99(mapping(address => uint256)) -> _allowed[account]
REF_100(uint256) -> REF_99[msg.sender]
TMP_188(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_100', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,\
uint256)(account,msg.sender,TMP_188)",
		node_source_code_lines="[343]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	268 -> 269	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=ERC20Burnable,
		function_fullname="_burnFrom(address,uint256)",
		label="buggy_23.sol_ERC20Burnable__burnFrom(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[341, 342, 343, 344]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	270 -> 267	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[345, 346, 347, 348]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	272	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_190(bool) = tx.origin == owner_txorigin39
\
TMP_191(None) = SOLIDITY_CALL require(bool)(TMP_190)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_190(bool) = tx.origin == owner_txorigin39
TMP_191(None) = SOLIDITY_CALL require(bool)(TMP_190)",
		node_source_code_lines="[346]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	271 -> 272	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_102(None) -> to.call
REF_103(None) -> REF_102.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_102(None) -> to.call
REF_103(None) -> REF_102.value",
		node_source_code_lines="[347]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	272 -> 273	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_23.sol_ERC20Burnable_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[345, 346, 347, 348]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	274 -> 271	[key=0,
		edge_type=next,
		label=Next];
	275	[contract_name=ERC20Burnable,
		function_fullname="transfer(address,uint256)",
		label="buggy_23.sol_ERC20Burnable_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	276	[contract_name=ERC20Burnable,
		function_fullname="approve(address,uint256)",
		label="buggy_23.sol_ERC20Burnable_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	277	[contract_name=ERC20Burnable,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_23.sol_ERC20Burnable_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	278	[contract_name=ERC20Burnable,
		function_fullname="totalSupply()",
		label="buggy_23.sol_ERC20Burnable_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	279	[contract_name=ERC20Burnable,
		function_fullname="balanceOf(address)",
		label="buggy_23.sol_ERC20Burnable_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	280	[contract_name=ERC20Burnable,
		function_fullname="allowance(address,address)",
		label="buggy_23.sol_ERC20Burnable_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	281	[contract_name=ERC20Burnable,
		function_fullname="burn(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[365, 366, 367]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	282	[contract_name=ERC20Burnable,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(msg.sender,value)

IRs:
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,value)",
		node_expression="_burn(msg.sender,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,value)",
		node_source_code_lines="[366]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	281 -> 282	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=ERC20Burnable,
		function_fullname="burn(uint256)",
		label="buggy_23.sol_ERC20Burnable_burn(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[365, 366, 367]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	283 -> 281	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[368, 369, 370]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	285	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_194(bool) = tx.origin == owner_txorigin36
\
TMP_195(None) = SOLIDITY_CALL require(bool)(TMP_194)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_194(bool) = tx.origin == owner_txorigin36
TMP_195(None) = SOLIDITY_CALL require(bool)(TMP_194)",
		node_source_code_lines="[369]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	284 -> 285	[key=0,
		edge_type=next,
		label=Next];
	286	[contract_name=ERC20Burnable,
		function_fullname="bug_txorigin36(address)",
		label="buggy_23.sol_ERC20Burnable_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[368, 369, 370]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	286 -> 284	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=ERC20Burnable,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[377, 378, 379]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	288	[contract_name=ERC20Burnable,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burnFrom(from,value)

IRs:
INTERNAL_CALL, ERC20._burnFrom(address,uint256)(from,value)",
		node_expression="_burnFrom(from,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._burnFrom(address,uint256)(from,value)",
		node_source_code_lines="[378]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	287 -> 288	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=ERC20Burnable,
		function_fullname="burnFrom(address,uint256)",
		label="buggy_23.sol_ERC20Burnable_burnFrom(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[377, 378, 379]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	289 -> 287	[key=0,
		edge_type=next,
		label=Next];
	290	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[380, 381, 382, 383]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	291	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_197(bool) = tx.origin == owner_txorigin35
\
TMP_198(None) = SOLIDITY_CALL require(bool)(TMP_197)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_197(bool) = tx.origin == owner_txorigin35
TMP_198(None) = SOLIDITY_CALL require(bool)(TMP_197)",
		node_source_code_lines="[381]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	290 -> 291	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_104(None) -> to.call
REF_105(None) -> REF_104.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_104(None) -> to.call
REF_105(None) -> REF_104.value",
		node_source_code_lines="[382]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	291 -> 292	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=ERC20Burnable,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_23.sol_ERC20Burnable_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[380, 381, 382, 383]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	293 -> 290	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=ERC20Detailed,
		function_fullname="transfer(address,uint256)",
		label="buggy_23.sol_ERC20Detailed_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	295	[contract_name=ERC20Detailed,
		function_fullname="approve(address,uint256)",
		label="buggy_23.sol_ERC20Detailed_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	296	[contract_name=ERC20Detailed,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_23.sol_ERC20Detailed_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	297	[contract_name=ERC20Detailed,
		function_fullname="totalSupply()",
		label="buggy_23.sol_ERC20Detailed_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	298	[contract_name=ERC20Detailed,
		function_fullname="balanceOf(address)",
		label="buggy_23.sol_ERC20Detailed_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	299	[contract_name=ERC20Detailed,
		function_fullname="allowance(address,address)",
		label="buggy_23.sol_ERC20Detailed_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	300	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[398, 399, 400, 401]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	301	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_200(bool) = tx.origin == owner_txorigin37
\
TMP_201(None) = SOLIDITY_CALL require(bool)(TMP_200)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_200(bool) = tx.origin == owner_txorigin37
TMP_201(None) = SOLIDITY_CALL require(bool)(TMP_200)",
		node_source_code_lines="[399]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	300 -> 301	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[400]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	301 -> 302	[key=0,
		edge_type=next,
		label=Next];
	303	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_23.sol_ERC20Detailed_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[398, 399, 400, 401]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	303 -> 300	[key=0,
		edge_type=next,
		label=Next];
	304	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[403, 404, 405, 406]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	305	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_203(bool) = tx.origin == owner_txorigin3
\
TMP_204(None) = SOLIDITY_CALL require(bool)(TMP_203)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_203(bool) = tx.origin == owner_txorigin3
TMP_204(None) = SOLIDITY_CALL require(bool)(TMP_203)",
		node_source_code_lines="[404]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	304 -> 305	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_107(None) -> to.call
REF_108(None) -> REF_107.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_107(None) -> to.call
REF_108(None) -> REF_107.value",
		node_source_code_lines="[405]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	305 -> 306	[key=0,
		edge_type=next,
		label=Next];
	307	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_23.sol_ERC20Detailed_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[403, 404, 405, 406]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	307 -> 304	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[408, 409, 410, 411]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	309	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_206(bool) = tx.origin == owner_txorigin9
\
TMP_207(None) = SOLIDITY_CALL require(bool)(TMP_206)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_206(bool) = tx.origin == owner_txorigin9
TMP_207(None) = SOLIDITY_CALL require(bool)(TMP_206)",
		node_source_code_lines="[409]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	308 -> 309	[key=0,
		edge_type=next,
		label=Next];
	310	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[410]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	309 -> 310	[key=0,
		edge_type=next,
		label=Next];
	311	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_23.sol_ERC20Detailed_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[408, 409, 410, 411]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	311 -> 308	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[414, 415, 416, 417, 418]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	313	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_name = name

IRs:
_name(string) := name(string)",
		node_expression="_name = name",
		node_info_vulnerabilities=None,
		node_irs="_name(string) := name(string)",
		node_source_code_lines="[415]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	312 -> 313	[key=0,
		edge_type=next,
		label=Next];
	314	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_symbol = symbol

IRs:
_symbol(string) := symbol(string)",
		node_expression="_symbol = symbol",
		node_info_vulnerabilities=None,
		node_irs="_symbol(string) := symbol(string)",
		node_source_code_lines="[416]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	313 -> 314	[key=0,
		edge_type=next,
		label=Next];
	315	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_decimals = decimals

IRs:
_decimals(uint8) := decimals(uint8)",
		node_expression="_decimals = decimals",
		node_info_vulnerabilities=None,
		node_irs="_decimals(uint8) := decimals(uint8)",
		node_source_code_lines="[417]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=ERC20Detailed,
		function_fullname="constructor(string,string,uint8)",
		label="buggy_23.sol_ERC20Detailed_constructor(string,string,uint8)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[414, 415, 416, 417, 418]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	316 -> 312	[key=0,
		edge_type=next,
		label=Next];
	317	[contract_name=ERC20Detailed,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[419, 420, 421]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	318	[contract_name=ERC20Detailed,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_209(bool) = tx.origin == owner_txorigin40
\
TMP_210(None) = SOLIDITY_CALL require(bool)(TMP_209)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_209(bool) = tx.origin == owner_txorigin40
TMP_210(None) = SOLIDITY_CALL require(bool)(TMP_209)",
		node_source_code_lines="[420]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	317 -> 318	[key=0,
		edge_type=next,
		label=Next];
	319	[contract_name=ERC20Detailed,
		function_fullname="bug_txorigin40(address)",
		label="buggy_23.sol_ERC20Detailed_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[419, 420, 421]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	319 -> 317	[key=0,
		edge_type=next,
		label=Next];
	320	[contract_name=ERC20Detailed,
		function_fullname="name()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[426, 427, 428]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	321	[contract_name=ERC20Detailed,
		function_fullname="name()",
		label="Node Type: RETURN

EXPRESSION:
_name

IRs:
RETURN _name",
		node_expression=_name,
		node_info_vulnerabilities=None,
		node_irs="RETURN _name",
		node_source_code_lines="[427]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	320 -> 321	[key=0,
		edge_type=next,
		label=Next];
	322	[contract_name=ERC20Detailed,
		function_fullname="name()",
		label="buggy_23.sol_ERC20Detailed_name()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[426, 427, 428]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	322 -> 320	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[429, 430, 431, 432]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	324	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_211(bool) = tx.origin == owner_txorigin33
\
TMP_212(None) = SOLIDITY_CALL require(bool)(TMP_211)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_211(bool) = tx.origin == owner_txorigin33
TMP_212(None) = SOLIDITY_CALL require(bool)(TMP_211)",
		node_source_code_lines="[430]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	323 -> 324	[key=0,
		edge_type=next,
		label=Next];
	325	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[431]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	324 -> 325	[key=0,
		edge_type=next,
		label=Next];
	326	[contract_name=ERC20Detailed,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_23.sol_ERC20Detailed_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[429, 430, 431, 432]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	326 -> 323	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=ERC20Detailed,
		function_fullname="symbol()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[437, 438, 439]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	328	[contract_name=ERC20Detailed,
		function_fullname="symbol()",
		label="Node Type: RETURN

EXPRESSION:
_symbol

IRs:
RETURN _symbol",
		node_expression=_symbol,
		node_info_vulnerabilities=None,
		node_irs="RETURN _symbol",
		node_source_code_lines="[438]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	327 -> 328	[key=0,
		edge_type=next,
		label=Next];
	329	[contract_name=ERC20Detailed,
		function_fullname="symbol()",
		label="buggy_23.sol_ERC20Detailed_symbol()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[437, 438, 439]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	329 -> 327	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[440, 441, 442, 443]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	331	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_214(bool) = tx.origin == owner_txorigin27
\
TMP_215(None) = SOLIDITY_CALL require(bool)(TMP_214)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_214(bool) = tx.origin == owner_txorigin27
TMP_215(None) = SOLIDITY_CALL require(bool)(TMP_214)",
		node_source_code_lines="[441]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	330 -> 331	[key=0,
		edge_type=next,
		label=Next];
	332	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_111(None) -> to.call
REF_112(None) -> REF_111.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_111(None) -> to.call
REF_112(None) -> REF_111.value",
		node_source_code_lines="[442]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	331 -> 332	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_23.sol_ERC20Detailed_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[440, 441, 442, 443]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	333 -> 330	[key=0,
		edge_type=next,
		label=Next];
	334	[contract_name=ERC20Detailed,
		function_fullname="decimals()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[448, 449, 450]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	335	[contract_name=ERC20Detailed,
		function_fullname="decimals()",
		label="Node Type: RETURN

EXPRESSION:
_decimals

IRs:
RETURN _decimals",
		node_expression=_decimals,
		node_info_vulnerabilities=None,
		node_irs="RETURN _decimals",
		node_source_code_lines="[449]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	334 -> 335	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=ERC20Detailed,
		function_fullname="decimals()",
		label="buggy_23.sol_ERC20Detailed_decimals()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[448, 449, 450]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	336 -> 334	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[451, 452, 453, 454]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	338	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_217(bool) = tx.origin == owner_txorigin31
\
TMP_218(None) = SOLIDITY_CALL require(bool)(TMP_217)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_217(bool) = tx.origin == owner_txorigin31
TMP_218(None) = SOLIDITY_CALL require(bool)(TMP_217)",
		node_source_code_lines="[452]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	337 -> 338	[key=0,
		edge_type=next,
		label=Next];
	339	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_113(None) -> to.call
REF_114(None) -> REF_113.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_113(None) -> to.call
REF_114(None) -> REF_113.value",
		node_source_code_lines="[453]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	338 -> 339	[key=0,
		edge_type=next,
		label=Next];
	340	[contract_name=ERC20Detailed,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_23.sol_ERC20Detailed_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[451, 452, 453, 454]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	340 -> 337	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=AGR,
		function_fullname="burn(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[365, 366, 367]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	342	[contract_name=AGR,
		function_fullname="burn(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(msg.sender,value)

IRs:
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,value)",
		node_expression="_burn(msg.sender,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,value)",
		node_source_code_lines="[366]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	341 -> 342	[key=0,
		edge_type=next,
		label=Next];
	343	[contract_name=AGR,
		function_fullname="burn(uint256)",
		label="buggy_23.sol_AGR_burn(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[365, 366, 367]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	343 -> 341	[key=0,
		edge_type=next,
		label=Next];
	344	[contract_name=AGR,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[368, 369, 370]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	345	[contract_name=AGR,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_221(bool) = tx.origin == owner_txorigin36
\
TMP_222(None) = SOLIDITY_CALL require(bool)(TMP_221)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_221(bool) = tx.origin == owner_txorigin36
TMP_222(None) = SOLIDITY_CALL require(bool)(TMP_221)",
		node_source_code_lines="[369]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	344 -> 345	[key=0,
		edge_type=next,
		label=Next];
	346	[contract_name=AGR,
		function_fullname="bug_txorigin36(address)",
		label="buggy_23.sol_AGR_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[368, 369, 370]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	346 -> 344	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=AGR,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[377, 378, 379]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	348	[contract_name=AGR,
		function_fullname="burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burnFrom(from,value)

IRs:
INTERNAL_CALL, ERC20._burnFrom(address,uint256)(from,value)",
		node_expression="_burnFrom(from,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._burnFrom(address,uint256)(from,value)",
		node_source_code_lines="[378]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	347 -> 348	[key=0,
		edge_type=next,
		label=Next];
	349	[contract_name=AGR,
		function_fullname="burnFrom(address,uint256)",
		label="buggy_23.sol_AGR_burnFrom(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[377, 378, 379]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	349 -> 347	[key=0,
		edge_type=next,
		label=Next];
	350	[contract_name=AGR,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[380, 381, 382, 383]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	351	[contract_name=AGR,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_224(bool) = tx.origin == owner_txorigin35
\
TMP_225(None) = SOLIDITY_CALL require(bool)(TMP_224)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_224(bool) = tx.origin == owner_txorigin35
TMP_225(None) = SOLIDITY_CALL require(bool)(TMP_224)",
		node_source_code_lines="[381]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	350 -> 351	[key=0,
		edge_type=next,
		label=Next];
	352	[contract_name=AGR,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_115(None) -> to.call
REF_116(None) -> REF_115.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_115(None) -> to.call
REF_116(None) -> REF_115.value",
		node_source_code_lines="[382]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	351 -> 352	[key=0,
		edge_type=next,
		label=Next];
	353	[contract_name=AGR,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_23.sol_AGR_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[380, 381, 382, 383]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	353 -> 350	[key=0,
		edge_type=next,
		label=Next];
	354	[contract_name=AGR,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	355	[contract_name=AGR,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_227(bool) = tx.origin == owner_txorigin1
\
TMP_228(None) = SOLIDITY_CALL require(bool)(TMP_227)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_227(bool) = tx.origin == owner_txorigin1
TMP_228(None) = SOLIDITY_CALL require(bool)(TMP_227)",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	354 -> 355	[key=0,
		edge_type=next,
		label=Next];
	356	[contract_name=AGR,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	355 -> 356	[key=0,
		edge_type=next,
		label=Next];
	357	[contract_name=AGR,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_23.sol_AGR_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	357 -> 354	[key=0,
		edge_type=next,
		label=Next];
	358	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	359	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_230(bool) = tx.origin == owner_txorigin2
\
TMP_231(None) = SOLIDITY_CALL require(bool)(TMP_230)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_230(bool) = tx.origin == owner_txorigin2
TMP_231(None) = SOLIDITY_CALL require(bool)(TMP_230)",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	358 -> 359	[key=0,
		edge_type=next,
		label=Next];
	360	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_232 = CONVERT this to address
REF_119 -> \
BALANCE TMP_232
Transfer dest:_recipient value:REF_119",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_232 = CONVERT this to address
REF_119 -> BALANCE TMP_232
Transfer dest:_recipient value:REF_119",
		node_source_code_lines="[128]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	359 -> 360	[key=0,
		edge_type=next,
		label=Next];
	361	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_23.sol_AGR_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	361 -> 358	[key=0,
		edge_type=next,
		label=Next];
	362	[contract_name=AGR,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	363	[contract_name=AGR,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_234(bool) = tx.origin == owner_txorigin17
\
TMP_235(None) = SOLIDITY_CALL require(bool)(TMP_234)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_234(bool) = tx.origin == owner_txorigin17
TMP_235(None) = SOLIDITY_CALL require(bool)(TMP_234)",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	362 -> 363	[key=0,
		edge_type=next,
		label=Next];
	364	[contract_name=AGR,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	363 -> 364	[key=0,
		edge_type=next,
		label=Next];
	365	[contract_name=AGR,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_23.sol_AGR_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	365 -> 362	[key=0,
		edge_type=next,
		label=Next];
	366	[contract_name=AGR,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	367	[contract_name=AGR,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply

IRs:
RETURN _totalSupply",
		node_expression=_totalSupply,
		node_info_vulnerabilities=None,
		node_irs="RETURN _totalSupply",
		node_source_code_lines="[142]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	366 -> 367	[key=0,
		edge_type=next,
		label=Next];
	368	[contract_name=AGR,
		function_fullname="totalSupply()",
		label="buggy_23.sol_AGR_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141, 142, 143]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	368 -> 366	[key=0,
		edge_type=next,
		label=Next];
	369	[contract_name=AGR,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	370	[contract_name=AGR,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_237(bool) = tx.origin == owner_txorigin25
\
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_237(bool) = tx.origin == owner_txorigin25
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	369 -> 370	[key=0,
		edge_type=next,
		label=Next];
	371	[contract_name=AGR,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	370 -> 371	[key=0,
		edge_type=next,
		label=Next];
	372	[contract_name=AGR,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_23.sol_AGR_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	372 -> 369	[key=0,
		edge_type=next,
		label=Next];
	373	[contract_name=AGR,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	374	[contract_name=AGR,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
_balances[owner]

IRs:
REF_122(uint256) -> _balances[owner]
RETURN REF_122",
		node_expression="_balances[owner]",
		node_info_vulnerabilities=None,
		node_irs="REF_122(uint256) -> _balances[owner]
RETURN REF_122",
		node_source_code_lines="[155]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	373 -> 374	[key=0,
		edge_type=next,
		label=Next];
	375	[contract_name=AGR,
		function_fullname="balanceOf(address)",
		label="buggy_23.sol_AGR_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[154, 155, 156]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	375 -> 373	[key=0,
		edge_type=next,
		label=Next];
	376	[contract_name=AGR,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159, 160]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	377	[contract_name=AGR,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_240(bool) = tx.origin == owner_txorigin19
\
TMP_241(None) = SOLIDITY_CALL require(bool)(TMP_240)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_240(bool) = tx.origin == owner_txorigin19
TMP_241(None) = SOLIDITY_CALL require(bool)(TMP_240)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	376 -> 377	[key=0,
		edge_type=next,
		label=Next];
	378	[contract_name=AGR,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_123(None) -> to.call
REF_124(None) -> REF_123.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_123(None) -> to.call
REF_124(None) -> REF_123.value",
		node_source_code_lines="[159]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	377 -> 378	[key=0,
		edge_type=next,
		label=Next];
	379	[contract_name=AGR,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_23.sol_AGR_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[157, 158, 159, 160]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	379 -> 376	[key=0,
		edge_type=next,
		label=Next];
	380	[contract_name=AGR,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168, 169, 170]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	381	[contract_name=AGR,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
_allowed[owner][spender]

IRs:
REF_125(mapping(address => uint256)) -> _allowed[owner]
REF_126(uint256) \
-> REF_125[spender]
RETURN REF_126",
		node_expression="_allowed[owner][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_125(mapping(address => uint256)) -> _allowed[owner]
REF_126(uint256) -> REF_125[spender]
RETURN REF_126",
		node_source_code_lines="[169]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	380 -> 381	[key=0,
		edge_type=next,
		label=Next];
	382	[contract_name=AGR,
		function_fullname="allowance(address,address)",
		label="buggy_23.sol_AGR_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168, 169, 170]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	382 -> 380	[key=0,
		edge_type=next,
		label=Next];
	383	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	384	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_243(bool) = tx.origin == owner_txorigin26
\
TMP_244(None) = SOLIDITY_CALL require(bool)(TMP_243)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_243(bool) = tx.origin == owner_txorigin26
TMP_244(None) = SOLIDITY_CALL require(bool)(TMP_243)",
		node_source_code_lines="[172]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	383 -> 384	[key=0,
		edge_type=next,
		label=Next];
	385	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_245 = CONVERT this to address
REF_128 -> \
BALANCE TMP_245
Transfer dest:_recipient value:REF_128",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_245 = CONVERT this to address
REF_128 -> BALANCE TMP_245
Transfer dest:_recipient value:REF_128",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	384 -> 385	[key=0,
		edge_type=next,
		label=Next];
	386	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_23.sol_AGR_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	386 -> 383	[key=0,
		edge_type=next,
		label=Next];
	387	[contract_name=AGR,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[181, 182, 183, 184]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	388	[contract_name=AGR,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(msg.sender,to,value)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(\
msg.sender,to,value)",
		node_expression="_transfer(msg.sender,to,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(msg.sender,to,value)",
		node_source_code_lines="[182]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	387 -> 388	[key=0,
		edge_type=next,
		label=Next];
	389	[contract_name=AGR,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[183]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	388 -> 389	[key=0,
		edge_type=next,
		label=Next];
	390	[contract_name=AGR,
		function_fullname="transfer(address,uint256)",
		label="buggy_23.sol_AGR_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[181, 182, 183, 184]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	390 -> 387	[key=0,
		edge_type=next,
		label=Next];
	391	[contract_name=AGR,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	392	[contract_name=AGR,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_248(bool) = tx.origin == owner_txorigin20
\
TMP_249(None) = SOLIDITY_CALL require(bool)(TMP_248)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_248(bool) = tx.origin == owner_txorigin20
TMP_249(None) = SOLIDITY_CALL require(bool)(TMP_248)",
		node_source_code_lines="[186]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	391 -> 392	[key=0,
		edge_type=next,
		label=Next];
	393	[contract_name=AGR,
		function_fullname="bug_txorigin20(address)",
		label="buggy_23.sol_AGR_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[185, 186, 187]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	393 -> 391	[key=0,
		edge_type=next,
		label=Next];
	394	[contract_name=AGR,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198, 199, 200, 201]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	395	[contract_name=AGR,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,value)

IRs:
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,value)",
		node_expression="_approve(msg.sender,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._approve(address,address,uint256)(msg.sender,spender,value)",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	394 -> 395	[key=0,
		edge_type=next,
		label=Next];
	396	[contract_name=AGR,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[200]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	395 -> 396	[key=0,
		edge_type=next,
		label=Next];
	397	[contract_name=AGR,
		function_fullname="approve(address,uint256)",
		label="buggy_23.sol_AGR_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198, 199, 200, 201]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	397 -> 394	[key=0,
		edge_type=next,
		label=Next];
	398	[contract_name=AGR,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	399	[contract_name=AGR,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_251(bool) = tx.origin == owner_txorigin32
\
TMP_252(None) = SOLIDITY_CALL require(bool)(TMP_251)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_251(bool) = tx.origin == owner_txorigin32
TMP_252(None) = SOLIDITY_CALL require(bool)(TMP_251)",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	398 -> 399	[key=0,
		edge_type=next,
		label=Next];
	400	[contract_name=AGR,
		function_fullname="bug_txorigin32(address)",
		label="buggy_23.sol_AGR_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	400 -> 398	[key=0,
		edge_type=next,
		label=Next];
	401	[contract_name=AGR,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[214, 215, 216, 217, 218]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	402	[contract_name=AGR,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_transfer(from,to,value)

IRs:
INTERNAL_CALL, ERC20._transfer(address,address,uint256)(from,to,\
value)",
		node_expression="_transfer(from,to,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._transfer(address,address,uint256)(from,to,value)",
		node_source_code_lines="[215]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	401 -> 402	[key=0,
		edge_type=next,
		label=Next];
	403	[contract_name=AGR,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(from,msg.sender,_allowed[from][msg.sender].sub(value))

IRs:
REF_129(mapping(address => \
uint256)) -> _allowed[from]
REF_130(uint256) -> REF_129[msg.sender]
TMP_254(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_130', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(from,msg.sender,TMP_254)",
		node_expression="_approve(from,msg.sender,_allowed[from][msg.sender].sub(value))",
		node_info_vulnerabilities=None,
		node_irs="REF_129(mapping(address => uint256)) -> _allowed[from]
REF_130(uint256) -> REF_129[msg.sender]
TMP_254(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_130', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,\
uint256)(from,msg.sender,TMP_254)",
		node_source_code_lines="[216]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	402 -> 403	[key=0,
		edge_type=next,
		label=Next];
	404	[contract_name=AGR,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[217]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	403 -> 404	[key=0,
		edge_type=next,
		label=Next];
	405	[contract_name=AGR,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_23.sol_AGR_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[214, 215, 216, 217, 218]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	405 -> 401	[key=0,
		edge_type=next,
		label=Next];
	406	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[219, 220, 221, 222]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	407	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_256(bool) = tx.origin == owner_txorigin38
\
TMP_257(None) = SOLIDITY_CALL require(bool)(TMP_256)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_256(bool) = tx.origin == owner_txorigin38
TMP_257(None) = SOLIDITY_CALL require(bool)(TMP_256)",
		node_source_code_lines="[220]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	406 -> 407	[key=0,
		edge_type=next,
		label=Next];
	408	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_258 = CONVERT this to address
REF_133 -> \
BALANCE TMP_258
Transfer dest:_recipient value:REF_133",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_258 = CONVERT this to address
REF_133 -> BALANCE TMP_258
Transfer dest:_recipient value:REF_133",
		node_source_code_lines="[221]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	407 -> 408	[key=0,
		edge_type=next,
		label=Next];
	409	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_23.sol_AGR_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[219, 220, 221, 222]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	409 -> 406	[key=0,
		edge_type=next,
		label=Next];
	410	[contract_name=AGR,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	411	[contract_name=AGR,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowed[msg.sender][spender].add(addedValue))

IRs:
REF_134(mapping(\
address => uint256)) -> _allowed[msg.sender]
REF_135(uint256) -> REF_134[spender]
TMP_260(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_135', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(\
msg.sender,spender,TMP_260)",
		node_expression="_approve(msg.sender,spender,_allowed[msg.sender][spender].add(addedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_134(mapping(address => uint256)) -> _allowed[msg.sender]
REF_135(uint256) -> REF_134[spender]
TMP_260(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_135', 'addedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_260)",
		node_source_code_lines="[235]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	410 -> 411	[key=0,
		edge_type=next,
		label=Next];
	412	[contract_name=AGR,
		function_fullname="increaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[236]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	411 -> 412	[key=0,
		edge_type=next,
		label=Next];
	413	[contract_name=AGR,
		function_fullname="increaseAllowance(address,uint256)",
		label="buggy_23.sol_AGR_increaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	413 -> 410	[key=0,
		edge_type=next,
		label=Next];
	414	[contract_name=AGR,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[238, 239, 240]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	415	[contract_name=AGR,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_262(bool) = tx.origin == owner_txorigin4
\
TMP_263(None) = SOLIDITY_CALL require(bool)(TMP_262)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_262(bool) = tx.origin == owner_txorigin4
TMP_263(None) = SOLIDITY_CALL require(bool)(TMP_262)",
		node_source_code_lines="[239]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	414 -> 415	[key=0,
		edge_type=next,
		label=Next];
	416	[contract_name=AGR,
		function_fullname="bug_txorigin4(address)",
		label="buggy_23.sol_AGR_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[238, 239, 240]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	416 -> 414	[key=0,
		edge_type=next,
		label=Next];
	417	[contract_name=AGR,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[252, 253, 254, 255]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	418	[contract_name=AGR,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(msg.sender,spender,_allowed[msg.sender][spender].sub(subtractedValue))

IRs:
REF_137(\
mapping(address => uint256)) -> _allowed[msg.sender]
REF_138(uint256) -> REF_137[spender]
TMP_264(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_138', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_264)",
		node_expression="_approve(msg.sender,spender,_allowed[msg.sender][spender].sub(subtractedValue))",
		node_info_vulnerabilities=None,
		node_irs="REF_137(mapping(address => uint256)) -> _allowed[msg.sender]
REF_138(uint256) -> REF_137[spender]
TMP_264(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_138', 'subtractedValue'] 
INTERNAL_CALL, ERC20._approve(address,\
address,uint256)(msg.sender,spender,TMP_264)",
		node_source_code_lines="[253]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	417 -> 418	[key=0,
		edge_type=next,
		label=Next];
	419	[contract_name=AGR,
		function_fullname="decreaseAllowance(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[254]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	418 -> 419	[key=0,
		edge_type=next,
		label=Next];
	420	[contract_name=AGR,
		function_fullname="decreaseAllowance(address,uint256)",
		label="buggy_23.sol_AGR_decreaseAllowance(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[252, 253, 254, 255]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	420 -> 417	[key=0,
		edge_type=next,
		label=Next];
	421	[contract_name=AGR,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[256, 257, 258, 259]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	422	[contract_name=AGR,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_266(bool) = tx.origin == owner_txorigin7
\
TMP_267(None) = SOLIDITY_CALL require(bool)(TMP_266)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_266(bool) = tx.origin == owner_txorigin7
TMP_267(None) = SOLIDITY_CALL require(bool)(TMP_266)",
		node_source_code_lines="[257]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	421 -> 422	[key=0,
		edge_type=next,
		label=Next];
	423	[contract_name=AGR,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_140(None) -> to.call
REF_141(None) -> REF_140.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_140(None) -> to.call
REF_141(None) -> REF_140.value",
		node_source_code_lines="[258]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	422 -> 423	[key=0,
		edge_type=next,
		label=Next];
	424	[contract_name=AGR,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_23.sol_AGR_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[256, 257, 258, 259]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	424 -> 421	[key=0,
		edge_type=next,
		label=Next];
	425	[contract_name=AGR,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	426	[contract_name=AGR,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(to != address(0))

IRs:
TMP_269 = CONVERT 0 to address
TMP_270(bool) = to != TMP_\
269
TMP_271(None) = SOLIDITY_CALL require(bool)(TMP_270)",
		node_expression="require(bool)(to != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_269 = CONVERT 0 to address
TMP_270(bool) = to != TMP_269
TMP_271(None) = SOLIDITY_CALL require(bool)(TMP_270)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	425 -> 426	[key=0,
		edge_type=next,
		label=Next];
	427	[contract_name=AGR,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[from] = _balances[from].sub(value)

IRs:
REF_142(uint256) -> _balances[from]
REF_143(\
uint256) -> _balances[from]
TMP_272(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_143', 'value'] 
REF_142 (->_balances) := TMP_272(uint256)",
		node_expression="_balances[from] = _balances[from].sub(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_142(uint256) -> _balances[from]
REF_143(uint256) -> _balances[from]
TMP_272(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_143', 'value'] 
REF_142 (->_balances) := TMP_272(uint256)",
		node_source_code_lines="[270]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	426 -> 427	[key=0,
		edge_type=next,
		label=Next];
	428	[contract_name=AGR,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[to] = _balances[to].add(value)

IRs:
REF_145(uint256) -> _balances[to]
REF_146(uint256) \
-> _balances[to]
TMP_273(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_146', '\
value'] 
REF_145 (->_balances) := TMP_273(uint256)",
		node_expression="_balances[to] = _balances[to].add(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_145(uint256) -> _balances[to]
REF_146(uint256) -> _balances[to]
TMP_273(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_146', 'value'] 
REF_145 (->_balances) := TMP_273(uint256)",
		node_source_code_lines="[271]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	427 -> 428	[key=0,
		edge_type=next,
		label=Next];
	429	[contract_name=AGR,
		function_fullname="_transfer(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,to,value)

IRs:
Emit Transfer(from.to.value)",
		node_expression="Transfer(from,to,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(from.to.value)",
		node_source_code_lines="[272]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	428 -> 429	[key=0,
		edge_type=next,
		label=Next];
	430	[contract_name=AGR,
		function_fullname="_transfer(address,address,uint256)",
		label="buggy_23.sol_AGR__transfer(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269, 270, 271, 272, 273]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	430 -> 425	[key=0,
		edge_type=next,
		label=Next];
	431	[contract_name=AGR,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	432	[contract_name=AGR,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_275(bool) = tx.origin == owner_txorigin23
\
TMP_276(None) = SOLIDITY_CALL require(bool)(TMP_275)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_275(bool) = tx.origin == owner_txorigin23
TMP_276(None) = SOLIDITY_CALL require(bool)(TMP_275)",
		node_source_code_lines="[275]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	431 -> 432	[key=0,
		edge_type=next,
		label=Next];
	433	[contract_name=AGR,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_148(None) -> to.call
REF_149(None) -> REF_148.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_148(None) -> to.call
REF_149(None) -> REF_148.value",
		node_source_code_lines="[276]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	432 -> 433	[key=0,
		edge_type=next,
		label=Next];
	434	[contract_name=AGR,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_23.sol_AGR_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[274, 275, 276, 277]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	434 -> 431	[key=0,
		edge_type=next,
		label=Next];
	435	[contract_name=AGR,
		function_fullname="_mint(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288, 289, 290, 291, 292]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	436	[contract_name=AGR,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(account != address(0))

IRs:
TMP_278 = CONVERT 0 to address
TMP_279(bool) = account != \
TMP_278
TMP_280(None) = SOLIDITY_CALL require(bool)(TMP_279)",
		node_expression="require(bool)(account != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_278 = CONVERT 0 to address
TMP_279(bool) = account != TMP_278
TMP_280(None) = SOLIDITY_CALL require(bool)(TMP_279)",
		node_source_code_lines="[287]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	435 -> 436	[key=0,
		edge_type=next,
		label=Next];
	437	[contract_name=AGR,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.add(value)

IRs:
TMP_281(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(uint256) := TMP_281(uint256)",
		node_expression="_totalSupply = _totalSupply.add(value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_281(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(\
uint256) := TMP_281(uint256)",
		node_source_code_lines="[289]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	436 -> 437	[key=0,
		edge_type=next,
		label=Next];
	438	[contract_name=AGR,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].add(value)

IRs:
REF_151(uint256) -> _balances[account]
\
REF_152(uint256) -> _balances[account]
TMP_282(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_152', 'value'] 
REF_151 (->_balances) := TMP_282(uint256)",
		node_expression="_balances[account] = _balances[account].add(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_151(uint256) -> _balances[account]
REF_152(uint256) -> _balances[account]
TMP_282(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_152', 'value'] 
REF_151 (->_balances) := TMP_282(uint256)",
		node_source_code_lines="[290]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	437 -> 438	[key=0,
		edge_type=next,
		label=Next];
	439	[contract_name=AGR,
		function_fullname="_mint(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),account,value)

IRs:
TMP_283 = CONVERT 0 to address
Emit Transfer(TMP_283.account.value)",
		node_expression="Transfer(address(0),account,value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_283 = CONVERT 0 to address
Emit Transfer(TMP_283.account.value)",
		node_source_code_lines="[291]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	438 -> 439	[key=0,
		edge_type=next,
		label=Next];
	440	[contract_name=AGR,
		function_fullname="_mint(address,uint256)",
		label="buggy_23.sol_AGR__mint(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288, 289, 290, 291, 292]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	440 -> 435	[key=0,
		edge_type=next,
		label=Next];
	441	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	442	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_285(bool) = tx.origin == owner_txorigin14
\
TMP_286(None) = SOLIDITY_CALL require(bool)(TMP_285)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_285(bool) = tx.origin == owner_txorigin14
TMP_286(None) = SOLIDITY_CALL require(bool)(TMP_285)",
		node_source_code_lines="[294]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	441 -> 442	[key=0,
		edge_type=next,
		label=Next];
	443	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_287 = CONVERT this to address
REF_155 -> \
BALANCE TMP_287
Transfer dest:_recipient value:REF_155",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_287 = CONVERT this to address
REF_155 -> BALANCE TMP_287
Transfer dest:_recipient value:REF_155",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	442 -> 443	[key=0,
		edge_type=next,
		label=Next];
	444	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_23.sol_AGR_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	444 -> 441	[key=0,
		edge_type=next,
		label=Next];
	445	[contract_name=AGR,
		function_fullname="_burn(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	446	[contract_name=AGR,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(account != address(0))

IRs:
TMP_289 = CONVERT 0 to address
TMP_290(bool) = account != \
TMP_289
TMP_291(None) = SOLIDITY_CALL require(bool)(TMP_290)",
		node_expression="require(bool)(account != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_289 = CONVERT 0 to address
TMP_290(bool) = account != TMP_289
TMP_291(None) = SOLIDITY_CALL require(bool)(TMP_290)",
		node_source_code_lines="[305]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	445 -> 446	[key=0,
		edge_type=next,
		label=Next];
	447	[contract_name=AGR,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.sub(value)

IRs:
TMP_292(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(uint256) := TMP_292(uint256)",
		node_expression="_totalSupply = _totalSupply.sub(value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_292(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'value'] 
_totalSupply(\
uint256) := TMP_292(uint256)",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	446 -> 447	[key=0,
		edge_type=next,
		label=Next];
	448	[contract_name=AGR,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].sub(value)

IRs:
REF_157(uint256) -> _balances[account]
\
REF_158(uint256) -> _balances[account]
TMP_293(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_158', 'value'] 
REF_157 (->_balances) := TMP_293(uint256)",
		node_expression="_balances[account] = _balances[account].sub(value)",
		node_info_vulnerabilities=None,
		node_irs="REF_157(uint256) -> _balances[account]
REF_158(uint256) -> _balances[account]
TMP_293(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_158', 'value'] 
REF_157 (->_balances) := TMP_293(uint256)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	447 -> 448	[key=0,
		edge_type=next,
		label=Next];
	449	[contract_name=AGR,
		function_fullname="_burn(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(account,address(0),value)

IRs:
TMP_294 = CONVERT 0 to address
Emit Transfer(account.TMP_\
294.value)",
		node_expression="Transfer(account,address(0),value)",
		node_info_vulnerabilities=None,
		node_irs="TMP_294 = CONVERT 0 to address
Emit Transfer(account.TMP_294.value)",
		node_source_code_lines="[309]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	448 -> 449	[key=0,
		edge_type=next,
		label=Next];
	450	[contract_name=AGR,
		function_fullname="_burn(address,uint256)",
		label="buggy_23.sol_AGR__burn(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[304, 305, 306, 307, 308, 309, 310]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	450 -> 445	[key=0,
		edge_type=next,
		label=Next];
	451	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[311, 312, 313, 314]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	452	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_296(bool) = tx.origin == owner_txorigin30
\
TMP_297(None) = SOLIDITY_CALL require(bool)(TMP_296)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_296(bool) = tx.origin == owner_txorigin30
TMP_297(None) = SOLIDITY_CALL require(bool)(TMP_296)",
		node_source_code_lines="[312]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	451 -> 452	[key=0,
		edge_type=next,
		label=Next];
	453	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_298 = CONVERT this to address
REF_161 -> \
BALANCE TMP_298
Transfer dest:_recipient value:REF_161",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_298 = CONVERT this to address
REF_161 -> BALANCE TMP_298
Transfer dest:_recipient value:REF_161",
		node_source_code_lines="[313]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	452 -> 453	[key=0,
		edge_type=next,
		label=Next];
	454	[contract_name=AGR,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_23.sol_AGR_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[311, 312, 313, 314]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	454 -> 451	[key=0,
		edge_type=next,
		label=Next];
	455	[contract_name=AGR,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324, 325, 326, 327, 328]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	456	[contract_name=AGR,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(spender != address(0))

IRs:
TMP_300 = CONVERT 0 to address
TMP_301(bool) = spender != \
TMP_300
TMP_302(None) = SOLIDITY_CALL require(bool)(TMP_301)",
		node_expression="require(bool)(spender != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_300 = CONVERT 0 to address
TMP_301(bool) = spender != TMP_300
TMP_302(None) = SOLIDITY_CALL require(bool)(TMP_301)",
		node_source_code_lines="[323]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	455 -> 456	[key=0,
		edge_type=next,
		label=Next];
	457	[contract_name=AGR,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(owner != address(0))

IRs:
TMP_303 = CONVERT 0 to address
TMP_304(bool) = owner != \
TMP_303
TMP_305(None) = SOLIDITY_CALL require(bool)(TMP_304)",
		node_expression="require(bool)(owner != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_303 = CONVERT 0 to address
TMP_304(bool) = owner != TMP_303
TMP_305(None) = SOLIDITY_CALL require(bool)(TMP_304)",
		node_source_code_lines="[324]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	456 -> 457	[key=0,
		edge_type=next,
		label=Next];
	458	[contract_name=AGR,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_allowed[owner][spender] = value

IRs:
REF_162(mapping(address => uint256)) -> _allowed[owner]
\
REF_163(uint256) -> REF_162[spender]
REF_163 (->_allowed) := value(uint256)",
		node_expression="_allowed[owner][spender] = value",
		node_info_vulnerabilities=None,
		node_irs="REF_162(mapping(address => uint256)) -> _allowed[owner]
REF_163(uint256) -> REF_162[spender]
REF_163 (->_allowed) := value(uint256)",
		node_source_code_lines="[326]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	457 -> 458	[key=0,
		edge_type=next,
		label=Next];
	459	[contract_name=AGR,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(owner,spender,value)

IRs:
Emit Approval(owner.spender.value)",
		node_expression="Approval(owner,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(owner.spender.value)",
		node_source_code_lines="[327]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	458 -> 459	[key=0,
		edge_type=next,
		label=Next];
	460	[contract_name=AGR,
		function_fullname="_approve(address,address,uint256)",
		label="buggy_23.sol_AGR__approve(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[322, 323, 324, 325, 326, 327, 328]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	460 -> 455	[key=0,
		edge_type=next,
		label=Next];
	461	[contract_name=AGR,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[329, 330, 331]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	462	[contract_name=AGR,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_307(bool) = tx.origin == owner_txorigin8
\
TMP_308(None) = SOLIDITY_CALL require(bool)(TMP_307)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_307(bool) = tx.origin == owner_txorigin8
TMP_308(None) = SOLIDITY_CALL require(bool)(TMP_307)",
		node_source_code_lines="[330]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	461 -> 462	[key=0,
		edge_type=next,
		label=Next];
	463	[contract_name=AGR,
		function_fullname="bug_txorigin8(address)",
		label="buggy_23.sol_AGR_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[329, 330, 331]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	463 -> 461	[key=0,
		edge_type=next,
		label=Next];
	464	[contract_name=AGR,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[341, 342, 343, 344]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	465	[contract_name=AGR,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(account,value)

IRs:
INTERNAL_CALL, ERC20._burn(address,uint256)(account,value)",
		node_expression="_burn(account,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._burn(address,uint256)(account,value)",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	464 -> 465	[key=0,
		edge_type=next,
		label=Next];
	466	[contract_name=AGR,
		function_fullname="_burnFrom(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(account,msg.sender,_allowed[account][msg.sender].sub(value))

IRs:
REF_164(mapping(address => \
uint256)) -> _allowed[account]
REF_165(uint256) -> REF_164[msg.sender]
TMP_310(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_165', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,uint256)(account,msg.sender,\
TMP_310)",
		node_expression="_approve(account,msg.sender,_allowed[account][msg.sender].sub(value))",
		node_info_vulnerabilities=None,
		node_irs="REF_164(mapping(address => uint256)) -> _allowed[account]
REF_165(uint256) -> REF_164[msg.sender]
TMP_310(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_165', 'value'] 
INTERNAL_CALL, ERC20._approve(address,address,\
uint256)(account,msg.sender,TMP_310)",
		node_source_code_lines="[343]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	465 -> 466	[key=0,
		edge_type=next,
		label=Next];
	467	[contract_name=AGR,
		function_fullname="_burnFrom(address,uint256)",
		label="buggy_23.sol_AGR__burnFrom(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[341, 342, 343, 344]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	467 -> 464	[key=0,
		edge_type=next,
		label=Next];
	468	[contract_name=AGR,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[345, 346, 347, 348]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	469	[contract_name=AGR,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_312(bool) = tx.origin == owner_txorigin39
\
TMP_313(None) = SOLIDITY_CALL require(bool)(TMP_312)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_312(bool) = tx.origin == owner_txorigin39
TMP_313(None) = SOLIDITY_CALL require(bool)(TMP_312)",
		node_source_code_lines="[346]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	468 -> 469	[key=0,
		edge_type=next,
		label=Next];
	470	[contract_name=AGR,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_167(None) -> to.call
REF_168(None) -> REF_167.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_167(None) -> to.call
REF_168(None) -> REF_167.value",
		node_source_code_lines="[347]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	469 -> 470	[key=0,
		edge_type=next,
		label=Next];
	471	[contract_name=AGR,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_23.sol_AGR_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[345, 346, 347, 348]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	471 -> 468	[key=0,
		edge_type=next,
		label=Next];
	472	[contract_name=AGR,
		function_fullname="transfer(address,uint256)",
		label="buggy_23.sol_AGR_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	473	[contract_name=AGR,
		function_fullname="approve(address,uint256)",
		label="buggy_23.sol_AGR_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	474	[contract_name=AGR,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_23.sol_AGR_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	475	[contract_name=AGR,
		function_fullname="totalSupply()",
		label="buggy_23.sol_AGR_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	476	[contract_name=AGR,
		function_fullname="balanceOf(address)",
		label="buggy_23.sol_AGR_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	477	[contract_name=AGR,
		function_fullname="allowance(address,address)",
		label="buggy_23.sol_AGR_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	478	[contract_name=AGR,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[398, 399, 400, 401]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	479	[contract_name=AGR,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_315(bool) = tx.origin == owner_txorigin37
\
TMP_316(None) = SOLIDITY_CALL require(bool)(TMP_315)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_315(bool) = tx.origin == owner_txorigin37
TMP_316(None) = SOLIDITY_CALL require(bool)(TMP_315)",
		node_source_code_lines="[399]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	478 -> 479	[key=0,
		edge_type=next,
		label=Next];
	480	[contract_name=AGR,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[400]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	479 -> 480	[key=0,
		edge_type=next,
		label=Next];
	481	[contract_name=AGR,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_23.sol_AGR_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[398, 399, 400, 401]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	481 -> 478	[key=0,
		edge_type=next,
		label=Next];
	482	[contract_name=AGR,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[403, 404, 405, 406]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	483	[contract_name=AGR,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_318(bool) = tx.origin == owner_txorigin3
\
TMP_319(None) = SOLIDITY_CALL require(bool)(TMP_318)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_318(bool) = tx.origin == owner_txorigin3
TMP_319(None) = SOLIDITY_CALL require(bool)(TMP_318)",
		node_source_code_lines="[404]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	482 -> 483	[key=0,
		edge_type=next,
		label=Next];
	484	[contract_name=AGR,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_170(None) -> to.call
REF_171(None) -> REF_170.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_170(None) -> to.call
REF_171(None) -> REF_170.value",
		node_source_code_lines="[405]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	483 -> 484	[key=0,
		edge_type=next,
		label=Next];
	485	[contract_name=AGR,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_23.sol_AGR_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[403, 404, 405, 406]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	485 -> 482	[key=0,
		edge_type=next,
		label=Next];
	486	[contract_name=AGR,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[408, 409, 410, 411]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	487	[contract_name=AGR,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_321(bool) = tx.origin == owner_txorigin9
\
TMP_322(None) = SOLIDITY_CALL require(bool)(TMP_321)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_321(bool) = tx.origin == owner_txorigin9
TMP_322(None) = SOLIDITY_CALL require(bool)(TMP_321)",
		node_source_code_lines="[409]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	486 -> 487	[key=0,
		edge_type=next,
		label=Next];
	488	[contract_name=AGR,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[410]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	487 -> 488	[key=0,
		edge_type=next,
		label=Next];
	489	[contract_name=AGR,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_23.sol_AGR_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[408, 409, 410, 411]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	489 -> 486	[key=0,
		edge_type=next,
		label=Next];
	490	[contract_name=AGR,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[414, 415, 416, 417, 418]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	491	[contract_name=AGR,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_name = name

IRs:
_name(string) := name(string)",
		node_expression="_name = name",
		node_info_vulnerabilities=None,
		node_irs="_name(string) := name(string)",
		node_source_code_lines="[415]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	490 -> 491	[key=0,
		edge_type=next,
		label=Next];
	492	[contract_name=AGR,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_symbol = symbol

IRs:
_symbol(string) := symbol(string)",
		node_expression="_symbol = symbol",
		node_info_vulnerabilities=None,
		node_irs="_symbol(string) := symbol(string)",
		node_source_code_lines="[416]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	491 -> 492	[key=0,
		edge_type=next,
		label=Next];
	493	[contract_name=AGR,
		function_fullname="constructor(string,string,uint8)",
		label="Node Type: EXPRESSION

EXPRESSION:
_decimals = decimals

IRs:
_decimals(uint8) := decimals(uint8)",
		node_expression="_decimals = decimals",
		node_info_vulnerabilities=None,
		node_irs="_decimals(uint8) := decimals(uint8)",
		node_source_code_lines="[417]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	492 -> 493	[key=0,
		edge_type=next,
		label=Next];
	494	[contract_name=AGR,
		function_fullname="constructor(string,string,uint8)",
		label="buggy_23.sol_AGR_constructor(string,string,uint8)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[414, 415, 416, 417, 418]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	494 -> 490	[key=0,
		edge_type=next,
		label=Next];
	495	[contract_name=AGR,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[419, 420, 421]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	496	[contract_name=AGR,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_324(bool) = tx.origin == owner_txorigin40
\
TMP_325(None) = SOLIDITY_CALL require(bool)(TMP_324)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_324(bool) = tx.origin == owner_txorigin40
TMP_325(None) = SOLIDITY_CALL require(bool)(TMP_324)",
		node_source_code_lines="[420]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	495 -> 496	[key=0,
		edge_type=next,
		label=Next];
	497	[contract_name=AGR,
		function_fullname="bug_txorigin40(address)",
		label="buggy_23.sol_AGR_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[419, 420, 421]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	497 -> 495	[key=0,
		edge_type=next,
		label=Next];
	498	[contract_name=AGR,
		function_fullname="name()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[426, 427, 428]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	499	[contract_name=AGR,
		function_fullname="name()",
		label="Node Type: RETURN

EXPRESSION:
_name

IRs:
RETURN _name",
		node_expression=_name,
		node_info_vulnerabilities=None,
		node_irs="RETURN _name",
		node_source_code_lines="[427]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	498 -> 499	[key=0,
		edge_type=next,
		label=Next];
	500	[contract_name=AGR,
		function_fullname="name()",
		label="buggy_23.sol_AGR_name()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[426, 427, 428]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	500 -> 498	[key=0,
		edge_type=next,
		label=Next];
	501	[contract_name=AGR,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[429, 430, 431, 432]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	502	[contract_name=AGR,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_326(bool) = tx.origin == owner_txorigin33
\
TMP_327(None) = SOLIDITY_CALL require(bool)(TMP_326)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_326(bool) = tx.origin == owner_txorigin33
TMP_327(None) = SOLIDITY_CALL require(bool)(TMP_326)",
		node_source_code_lines="[430]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	501 -> 502	[key=0,
		edge_type=next,
		label=Next];
	503	[contract_name=AGR,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[431]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	502 -> 503	[key=0,
		edge_type=next,
		label=Next];
	504	[contract_name=AGR,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_23.sol_AGR_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[429, 430, 431, 432]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	504 -> 501	[key=0,
		edge_type=next,
		label=Next];
	505	[contract_name=AGR,
		function_fullname="symbol()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[437, 438, 439]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	506	[contract_name=AGR,
		function_fullname="symbol()",
		label="Node Type: RETURN

EXPRESSION:
_symbol

IRs:
RETURN _symbol",
		node_expression=_symbol,
		node_info_vulnerabilities=None,
		node_irs="RETURN _symbol",
		node_source_code_lines="[438]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	505 -> 506	[key=0,
		edge_type=next,
		label=Next];
	507	[contract_name=AGR,
		function_fullname="symbol()",
		label="buggy_23.sol_AGR_symbol()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[437, 438, 439]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	507 -> 505	[key=0,
		edge_type=next,
		label=Next];
	508	[contract_name=AGR,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[440, 441, 442, 443]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	509	[contract_name=AGR,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_329(bool) = tx.origin == owner_txorigin27
\
TMP_330(None) = SOLIDITY_CALL require(bool)(TMP_329)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_329(bool) = tx.origin == owner_txorigin27
TMP_330(None) = SOLIDITY_CALL require(bool)(TMP_329)",
		node_source_code_lines="[441]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	508 -> 509	[key=0,
		edge_type=next,
		label=Next];
	510	[contract_name=AGR,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_174(None) -> to.call
REF_175(None) -> REF_174.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_174(None) -> to.call
REF_175(None) -> REF_174.value",
		node_source_code_lines="[442]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	509 -> 510	[key=0,
		edge_type=next,
		label=Next];
	511	[contract_name=AGR,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_23.sol_AGR_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[440, 441, 442, 443]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	511 -> 508	[key=0,
		edge_type=next,
		label=Next];
	512	[contract_name=AGR,
		function_fullname="decimals()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[448, 449, 450]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	513	[contract_name=AGR,
		function_fullname="decimals()",
		label="Node Type: RETURN

EXPRESSION:
_decimals

IRs:
RETURN _decimals",
		node_expression=_decimals,
		node_info_vulnerabilities=None,
		node_irs="RETURN _decimals",
		node_source_code_lines="[449]",
		node_type=RETURN,
		source_file="buggy_23.sol"];
	512 -> 513	[key=0,
		edge_type=next,
		label=Next];
	514	[contract_name=AGR,
		function_fullname="decimals()",
		label="buggy_23.sol_AGR_decimals()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[448, 449, 450]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	514 -> 512	[key=0,
		edge_type=next,
		label=Next];
	515	[contract_name=AGR,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[451, 452, 453, 454]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	516	[contract_name=AGR,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_332(bool) = tx.origin == owner_txorigin31
\
TMP_333(None) = SOLIDITY_CALL require(bool)(TMP_332)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_332(bool) = tx.origin == owner_txorigin31
TMP_333(None) = SOLIDITY_CALL require(bool)(TMP_332)",
		node_source_code_lines="[452]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	515 -> 516	[key=0,
		edge_type=next,
		label=Next];
	517	[contract_name=AGR,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_176(None) -> to.call
REF_177(None) -> REF_176.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="REF_176(None) -> to.call
REF_177(None) -> REF_176.value",
		node_source_code_lines="[453]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	516 -> 517	[key=0,
		edge_type=next,
		label=Next];
	518	[contract_name=AGR,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_23.sol_AGR_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[451, 452, 453, 454]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	518 -> 515	[key=0,
		edge_type=next,
		label=Next];
	519	[contract_name=AGR,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[465, 466, 467]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	521	[contract_name=AGR,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
ERC20Detailed(Aggregion Token,AGR,4)

IRs:
INTERNAL_CALL, ERC20Detailed.constructor(string,string,\
uint8)(Aggregion Token,AGR,4)",
		node_expression="ERC20Detailed(Aggregion Token,AGR,4)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20Detailed.constructor(string,string,uint8)(Aggregion Token,AGR,4)",
		node_source_code_lines="[465]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	519 -> 521	[key=0,
		edge_type=next,
		label=Next];
	520	[contract_name=AGR,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
super._mint(msg.sender,30000000000000)

IRs:
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,\
30000000000000)",
		node_expression="super._mint(msg.sender,30000000000000)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,30000000000000)",
		node_source_code_lines="[466]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	521 -> 520	[key=0,
		edge_type=next,
		label=Next];
	522	[contract_name=AGR,
		function_fullname="constructor()",
		label="buggy_23.sol_AGR_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[465, 466, 467]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	522 -> 519	[key=0,
		edge_type=next,
		label=Next];
	523	[contract_name=AGR,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[468, 469, 470, 471]",
		node_type=ENTRY_POINT,
		source_file="buggy_23.sol"];
	524	[contract_name=AGR,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_337(bool) = tx.origin == owner_txorigin13
\
TMP_338(None) = SOLIDITY_CALL require(bool)(TMP_337)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="TMP_337(bool) = tx.origin == owner_txorigin13
TMP_338(None) = SOLIDITY_CALL require(bool)(TMP_337)",
		node_source_code_lines="[469]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	523 -> 524	[key=0,
		edge_type=next,
		label=Next];
	525	[contract_name=AGR,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[470]",
		node_type=EXPRESSION,
		source_file="buggy_23.sol"];
	524 -> 525	[key=0,
		edge_type=next,
		label=Next];
	526	[contract_name=AGR,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_23.sol_AGR_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 144, 145, 146, 147, 157, 158, 159, 160, 171, 172, 173, 174, \
185, 186, 187, 202, 203, 204, 219, 220, 221, 222, 238, 239, 240, 256, 257, 258, 259, 274, 275, 276, 277, 293, 294, 295, 296, 311, \
312, 313, 314, 329, 330, 331, 345, 346, 347, 348, 368, 369, 370, 380, 381, 382, 383, 398, 399, 400, 401, 403, 404, 405, 406, 408, \
409, 410, 411, 419, 420, 421, 429, 430, 431, 432, 440, 441, 442, 443, 451, 452, 453, 454, 468, 469, 470, 471], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[468, 469, 470, 471]",
		node_type=FUNCTION_NAME,
		source_file="buggy_23.sol"];
	526 -> 523	[key=0,
		edge_type=next,
		label=Next];
}
