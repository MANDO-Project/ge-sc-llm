digraph "" {
	node [label="\N"];
	0	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[9, 10, 11, 12]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	1	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a + b

IRs:
TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_source_code_lines="[10]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(c >= a)

IRs:
TMP_1(bool) = c >= a
TMP_2(None) = SOLIDITY_CALL require(bool)(TMP_\
1)",
		node_expression="require(bool)(c >= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(bool) = c >= a
TMP_2(None) = SOLIDITY_CALL require(bool)(TMP_1)",
		node_source_code_lines="[11]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_11.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[9, 10, 11, 12]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	3 -> 0	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	5	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b <= a)

IRs:
TMP_3(bool) = b <= a
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_\
3)",
		node_expression="require(bool)(b <= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_3(bool) = b <= a
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[14]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	4 -> 5	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a - b

IRs:
TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_source_code_lines="[15]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_11.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	7 -> 4	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	9	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a * b

IRs:
TMP_6(uint256) = a * b
c(uint256) := TMP_6(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(uint256) = a * b
c(uint256) := TMP_6(uint256)",
		node_source_code_lines="[18]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	8 -> 9	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(a == 0 || c / a == b)

IRs:
TMP_7(bool) = a == 0
TMP_8(uint256) = c / a
TMP_9(bool) = \
TMP_8 == b
TMP_10(bool) = TMP_7 || TMP_9
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_expression="require(bool)(a == 0 || c / a == b)",
		node_info_vulnerabilities=None,
		node_irs="TMP_7(bool) = a == 0
TMP_8(uint256) = c / a
TMP_9(bool) = TMP_8 == b
TMP_10(bool) = TMP_7 || TMP_9
TMP_11(None) = SOLIDITY_CALL \
require(bool)(TMP_10)",
		node_source_code_lines="[19]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	9 -> 10	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_11.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	11 -> 8	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[21, 22, 23, 24]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	13	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(b > 0)

IRs:
TMP_12(bool) = b > 0
TMP_13(None) = SOLIDITY_CALL require(bool)(TMP_\
12)",
		node_expression="require(bool)(b > 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(bool) = b > 0
TMP_13(None) = SOLIDITY_CALL require(bool)(TMP_12)",
		node_source_code_lines="[22]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	12 -> 13	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
c = a / b

IRs:
TMP_14(uint256) = a / b
c(uint256) := TMP_14(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_14(uint256) = a / b
c(uint256) := TMP_14(uint256)",
		node_source_code_lines="[23]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	13 -> 14	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_11.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[21, 22, 23, 24]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	15 -> 12	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=ERC20Interface,
		function_fullname="totalSupply()",
		label="buggy_11.sol_ERC20Interface_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	17	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[29, 30, 31, 32]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	18	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_15(bool) = tx.origin == owner_txorigin37
\
TMP_16(None) = SOLIDITY_CALL require(bool)(TMP_15)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_15(bool) = tx.origin == owner_txorigin37
TMP_16(None) = SOLIDITY_CALL require(bool)(TMP_15)",
		node_source_code_lines="[30]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	17 -> 18	[key=0,
		edge_type=next,
		label=Next];
	19	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	18 -> 19	[key=0,
		edge_type=next,
		label=Next];
	20	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_11.sol_ERC20Interface_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[29, 30, 31, 32]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	20 -> 17	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=ERC20Interface,
		function_fullname="balanceOf(address)",
		label="buggy_11.sol_ERC20Interface_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[33]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	22	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[34, 35, 36, 37]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	23	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_18(bool) = tx.origin == owner_txorigin3
\
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_18(bool) = tx.origin == owner_txorigin3
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)",
		node_source_code_lines="[35]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	22 -> 23	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_1(None) -> to.call
REF_2(None) -> REF_1.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_1(None) -> to.call
REF_2(None) -> REF_1.value",
		node_source_code_lines="[36]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_11.sol_ERC20Interface_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[34, 35, 36, 37]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	25 -> 22	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=ERC20Interface,
		function_fullname="allowance(address,address)",
		label="buggy_11.sol_ERC20Interface_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[38]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	27	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[39, 40, 41, 42]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	28	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_21(bool) = tx.origin == owner_txorigin9
\
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_21(bool) = tx.origin == owner_txorigin9
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_source_code_lines="[40]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[41]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	28 -> 29	[key=0,
		edge_type=next,
		label=Next];
	30	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_11.sol_ERC20Interface_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[39, 40, 41, 42]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	30 -> 27	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=ERC20Interface,
		function_fullname="transfer(address,uint256)",
		label="buggy_11.sol_ERC20Interface_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	32	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[44, 45, 46, 47]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	33	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_24(bool) = tx.origin == owner_txorigin25
\
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_24(bool) = tx.origin == owner_txorigin25
TMP_25(None) = SOLIDITY_CALL require(bool)(TMP_24)",
		node_source_code_lines="[45]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	32 -> 33	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[46]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	33 -> 34	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=ERC20Interface,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_11.sol_ERC20Interface_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[44, 45, 46, 47]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	35 -> 32	[key=0,
		edge_type=next,
		label=Next];
	36	[contract_name=ERC20Interface,
		function_fullname="approve(address,uint256)",
		label="buggy_11.sol_ERC20Interface_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	37	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	38	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_27(bool) = tx.origin == owner_txorigin19
\
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_27(bool) = tx.origin == owner_txorigin19
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	37 -> 38	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_5(None) -> to.call
REF_6(None) -> REF_5.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_5(None) -> to.call
REF_6(None) -> REF_5.value",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	38 -> 39	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_11.sol_ERC20Interface_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	40 -> 37	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=ERC20Interface,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_11.sol_ERC20Interface_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[53]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	42	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	43	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_30(bool) = tx.origin == owner_txorigin26
\
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_30(bool) = tx.origin == owner_txorigin26
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	42 -> 43	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_32 = CONVERT this to address
REF_8 -> BALANCE \
TMP_32
Transfer dest:_recipient value:REF_8",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_32 = CONVERT this to address
REF_8 -> BALANCE TMP_32
Transfer dest:_recipient value:REF_8",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	43 -> 44	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=ERC20Interface,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_11.sol_ERC20Interface_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	45 -> 42	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	47	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_34(bool) = tx.origin == owner_txorigin27
\
TMP_35(None) = SOLIDITY_CALL require(bool)(TMP_34)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_34(bool) = tx.origin == owner_txorigin27
TMP_35(None) = SOLIDITY_CALL require(bool)(TMP_34)",
		node_source_code_lines="[60]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	46 -> 47	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	47 -> 48	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_11.sol_ERC20Interface_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	49 -> 46	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	51	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_37(bool) = tx.origin == owner_txorigin31
\
TMP_38(None) = SOLIDITY_CALL require(bool)(TMP_37)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_37(bool) = tx.origin == owner_txorigin31
TMP_38(None) = SOLIDITY_CALL require(bool)(TMP_37)",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	50 -> 51	[key=0,
		edge_type=next,
		label=Next];
	52	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_11(None) -> to.call
REF_12(None) -> REF_11.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_11(None) -> to.call
REF_12(None) -> REF_11.value",
		node_source_code_lines="[66]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=ERC20Interface,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_11.sol_ERC20Interface_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	53 -> 50	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=ApproveAndCallFallBack,
		function_fullname="receiveApproval(address,uint256,address,bytes)",
		label="buggy_11.sol_ApproveAndCallFallBack_receiveApproval(address,uint256,address,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[73]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	55	[contract_name=ApproveAndCallFallBack,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[74, 75, 76]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	56	[contract_name=ApproveAndCallFallBack,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_40(bool) = tx.origin == owner_txorigin20
\
TMP_41(None) = SOLIDITY_CALL require(bool)(TMP_40)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_40(bool) = tx.origin == owner_txorigin20
TMP_41(None) = SOLIDITY_CALL require(bool)(TMP_40)",
		node_source_code_lines="[75]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=ApproveAndCallFallBack,
		function_fullname="bug_txorigin20(address)",
		label="buggy_11.sol_ApproveAndCallFallBack_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[74, 75, 76]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	57 -> 55	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=Owned,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	59	[contract_name=Owned,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_42(bool) = tx.origin == owner_txorigin21
\
TMP_43(None) = SOLIDITY_CALL require(bool)(TMP_42)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_42(bool) = tx.origin == owner_txorigin21
TMP_43(None) = SOLIDITY_CALL require(bool)(TMP_42)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	58 -> 59	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=Owned,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	59 -> 60	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=Owned,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_11.sol_Owned_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	61 -> 58	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[86, 87, 88, 89]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	63	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_45(bool) = tx.origin == owner_txorigin10
\
TMP_46(None) = SOLIDITY_CALL require(bool)(TMP_45)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_45(bool) = tx.origin == owner_txorigin10
TMP_46(None) = SOLIDITY_CALL require(bool)(TMP_45)",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	62 -> 63	[key=0,
		edge_type=next,
		label=Next];
	64	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_47 = CONVERT this to address
REF_15 -> BALANCE \
TMP_47
Transfer dest:_recipient value:REF_15",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_47 = CONVERT this to address
REF_15 -> BALANCE TMP_47
Transfer dest:_recipient value:REF_15",
		node_source_code_lines="[88]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	63 -> 64	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_11.sol_Owned_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[86, 87, 88, 89]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	65 -> 62	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=Owned,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[92, 93, 94, 95]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	67	[contract_name=Owned,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_49(bool) = tx.origin == owner_txorigin13
\
TMP_50(None) = SOLIDITY_CALL require(bool)(TMP_49)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_49(bool) = tx.origin == owner_txorigin13
TMP_50(None) = SOLIDITY_CALL require(bool)(TMP_49)",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	66 -> 67	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=Owned,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[94]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=Owned,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_11.sol_Owned_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[92, 93, 94, 95]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	69 -> 66	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[98, 99, 100]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	71	[contract_name=Owned,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[99]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	70 -> 71	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=Owned,
		function_fullname="constructor()",
		label="buggy_11.sol_Owned_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[98, 99, 100]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	72 -> 70	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=Owned,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[101, 102, 103]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	74	[contract_name=Owned,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_52(bool) = tx.origin == owner_txorigin32
\
TMP_53(None) = SOLIDITY_CALL require(bool)(TMP_52)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_52(bool) = tx.origin == owner_txorigin32
TMP_53(None) = SOLIDITY_CALL require(bool)(TMP_52)",
		node_source_code_lines="[102]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	73 -> 74	[key=0,
		edge_type=next,
		label=Next];
	75	[contract_name=Owned,
		function_fullname="bug_txorigin32(address)",
		label="buggy_11.sol_Owned_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[101, 102, 103]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	75 -> 73	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	78	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[110]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	76 -> 78	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = _newOwner

IRs:
newOwner(address) := _newOwner(address)",
		node_expression="newOwner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="newOwner(address) := _newOwner(address)",
		node_source_code_lines="[111]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	78 -> 77	[key=0,
		edge_type=next,
		label=Next];
	79	[contract_name=Owned,
		function_fullname="transferOwnership(address)",
		label="buggy_11.sol_Owned_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	79 -> 76	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	81	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_55(bool) = tx.origin == owner_txorigin38
\
TMP_56(None) = SOLIDITY_CALL require(bool)(TMP_55)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_55(bool) = tx.origin == owner_txorigin38
TMP_56(None) = SOLIDITY_CALL require(bool)(TMP_55)",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	80 -> 81	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_57 = CONVERT this to address
REF_18 -> BALANCE \
TMP_57
Transfer dest:_recipient value:REF_18",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_57 = CONVERT this to address
REF_18 -> BALANCE TMP_57
Transfer dest:_recipient value:REF_18",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	81 -> 82	[key=0,
		edge_type=next,
		label=Next];
	83	[contract_name=Owned,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_11.sol_Owned_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	83 -> 80	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[117, 118, 119, 120, 121, 122]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	85	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == newOwner)

IRs:
TMP_59(bool) = msg.sender == newOwner
TMP_60(None) = \
SOLIDITY_CALL require(bool)(TMP_59)",
		node_expression="require(bool)(msg.sender == newOwner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_59(bool) = msg.sender == newOwner
TMP_60(None) = SOLIDITY_CALL require(bool)(TMP_59)",
		node_source_code_lines="[118]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	84 -> 85	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnershipTransferred(owner,newOwner)

IRs:
Emit OwnershipTransferred(owner.newOwner)",
		node_expression="OwnershipTransferred(owner,newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnershipTransferred(owner.newOwner)",
		node_source_code_lines="[119]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	85 -> 86	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[120]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	86 -> 87	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = address(0)

IRs:
TMP_62 = CONVERT 0 to address
newOwner(address) := TMP_62(address)",
		node_expression="newOwner = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_62 = CONVERT 0 to address
newOwner(address) := TMP_62(address)",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=Owned,
		function_fullname="acceptOwnership()",
		label="buggy_11.sol_Owned_acceptOwnership()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[117, 118, 119, 120, 121, 122]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	89 -> 84	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=Owned,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[123, 124, 125]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	91	[contract_name=Owned,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_63(bool) = tx.origin == owner_txorigin4
\
TMP_64(None) = SOLIDITY_CALL require(bool)(TMP_63)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_63(bool) = tx.origin == owner_txorigin4
TMP_64(None) = SOLIDITY_CALL require(bool)(TMP_63)",
		node_source_code_lines="[124]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	90 -> 91	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=Owned,
		function_fullname="bug_txorigin4(address)",
		label="buggy_11.sol_Owned_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[123, 124, 125]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	92 -> 90	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	94	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_65(bool) = msg.sender == owner
TMP_66(None) = SOLIDITY_\
CALL require(bool)(TMP_65)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_65(bool) = msg.sender == owner
TMP_66(None) = SOLIDITY_CALL require(bool)(TMP_65)",
		node_source_code_lines="[106]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	93 -> 94	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[107]",
		node_type=_,
		source_file="buggy_11.sol"];
	94 -> 95	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=Owned,
		function_fullname="onlyOwner()",
		label="buggy_11.sol_Owned_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	96 -> 93	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	98	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_67(bool) = tx.origin == owner_txorigin21
\
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_67(bool) = tx.origin == owner_txorigin21
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	97 -> 98	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	98 -> 99	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	100 -> 97	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[86, 87, 88, 89]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	102	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_70(bool) = tx.origin == owner_txorigin10
\
TMP_71(None) = SOLIDITY_CALL require(bool)(TMP_70)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_70(bool) = tx.origin == owner_txorigin10
TMP_71(None) = SOLIDITY_CALL require(bool)(TMP_70)",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	101 -> 102	[key=0,
		edge_type=next,
		label=Next];
	103	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_72 = CONVERT this to address
REF_21 -> BALANCE \
TMP_72
Transfer dest:_recipient value:REF_21",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_72 = CONVERT this to address
REF_21 -> BALANCE TMP_72
Transfer dest:_recipient value:REF_21",
		node_source_code_lines="[88]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_11.sol_ForTheBlockchain_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[86, 87, 88, 89]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	104 -> 101	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[92, 93, 94, 95]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	106	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_74(bool) = tx.origin == owner_txorigin13
\
TMP_75(None) = SOLIDITY_CALL require(bool)(TMP_74)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_74(bool) = tx.origin == owner_txorigin13
TMP_75(None) = SOLIDITY_CALL require(bool)(TMP_74)",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	105 -> 106	[key=0,
		edge_type=next,
		label=Next];
	107	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[94]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	106 -> 107	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[92, 93, 94, 95]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	108 -> 105	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[98, 99, 100]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	110	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[99]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	109 -> 110	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="buggy_11.sol_ForTheBlockchain_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[98, 99, 100]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	111 -> 109	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[101, 102, 103]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	113	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_77(bool) = tx.origin == owner_txorigin32
\
TMP_78(None) = SOLIDITY_CALL require(bool)(TMP_77)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_77(bool) = tx.origin == owner_txorigin32
TMP_78(None) = SOLIDITY_CALL require(bool)(TMP_77)",
		node_source_code_lines="[102]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin32(address)",
		label="buggy_11.sol_ForTheBlockchain_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[101, 102, 103]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	114 -> 112	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=ForTheBlockchain,
		function_fullname="transferOwnership(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	117	[contract_name=ForTheBlockchain,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[110]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	115 -> 117	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=ForTheBlockchain,
		function_fullname="transferOwnership(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = _newOwner

IRs:
newOwner(address) := _newOwner(address)",
		node_expression="newOwner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="newOwner(address) := _newOwner(address)",
		node_source_code_lines="[111]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	117 -> 116	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=ForTheBlockchain,
		function_fullname="transferOwnership(address)",
		label="buggy_11.sol_ForTheBlockchain_transferOwnership(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	118 -> 115	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	120	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_80(bool) = tx.origin == owner_txorigin38
\
TMP_81(None) = SOLIDITY_CALL require(bool)(TMP_80)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_80(bool) = tx.origin == owner_txorigin38
TMP_81(None) = SOLIDITY_CALL require(bool)(TMP_80)",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	119 -> 120	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_82 = CONVERT this to address
REF_24 -> BALANCE \
TMP_82
Transfer dest:_recipient value:REF_24",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_82 = CONVERT this to address
REF_24 -> BALANCE TMP_82
Transfer dest:_recipient value:REF_24",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	120 -> 121	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_11.sol_ForTheBlockchain_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	122 -> 119	[key=0,
		edge_type=next,
		label=Next];
	123	[contract_name=ForTheBlockchain,
		function_fullname="acceptOwnership()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[117, 118, 119, 120, 121, 122]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	124	[contract_name=ForTheBlockchain,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == newOwner)

IRs:
TMP_84(bool) = msg.sender == newOwner
TMP_85(None) = \
SOLIDITY_CALL require(bool)(TMP_84)",
		node_expression="require(bool)(msg.sender == newOwner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_84(bool) = msg.sender == newOwner
TMP_85(None) = SOLIDITY_CALL require(bool)(TMP_84)",
		node_source_code_lines="[118]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	123 -> 124	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=ForTheBlockchain,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnershipTransferred(owner,newOwner)

IRs:
Emit OwnershipTransferred(owner.newOwner)",
		node_expression="OwnershipTransferred(owner,newOwner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnershipTransferred(owner.newOwner)",
		node_source_code_lines="[119]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	124 -> 125	[key=0,
		edge_type=next,
		label=Next];
	126	[contract_name=ForTheBlockchain,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)",
		node_expression="owner = newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := newOwner(address)",
		node_source_code_lines="[120]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	125 -> 126	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=ForTheBlockchain,
		function_fullname="acceptOwnership()",
		label="Node Type: EXPRESSION

EXPRESSION:
newOwner = address(0)

IRs:
TMP_87 = CONVERT 0 to address
newOwner(address) := TMP_87(address)",
		node_expression="newOwner = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_87 = CONVERT 0 to address
newOwner(address) := TMP_87(address)",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=ForTheBlockchain,
		function_fullname="acceptOwnership()",
		label="buggy_11.sol_ForTheBlockchain_acceptOwnership()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[117, 118, 119, 120, 121, 122]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	128 -> 123	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[123, 124, 125]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	130	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_88(bool) = tx.origin == owner_txorigin4
\
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_88(bool) = tx.origin == owner_txorigin4
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_source_code_lines="[124]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	129 -> 130	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin4(address)",
		label="buggy_11.sol_ForTheBlockchain_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[123, 124, 125]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	131 -> 129	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=ForTheBlockchain,
		function_fullname="totalSupply()",
		label="buggy_11.sol_ForTheBlockchain_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	133	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[29, 30, 31, 32]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	134	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_90(bool) = tx.origin == owner_txorigin37
\
TMP_91(None) = SOLIDITY_CALL require(bool)(TMP_90)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_90(bool) = tx.origin == owner_txorigin37
TMP_91(None) = SOLIDITY_CALL require(bool)(TMP_90)",
		node_source_code_lines="[30]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	133 -> 134	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	134 -> 135	[key=0,
		edge_type=next,
		label=Next];
	136	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[29, 30, 31, 32]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	136 -> 133	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=ForTheBlockchain,
		function_fullname="balanceOf(address)",
		label="buggy_11.sol_ForTheBlockchain_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[33]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	138	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[34, 35, 36, 37]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	139	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_93(bool) = tx.origin == owner_txorigin3
\
TMP_94(None) = SOLIDITY_CALL require(bool)(TMP_93)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_93(bool) = tx.origin == owner_txorigin3
TMP_94(None) = SOLIDITY_CALL require(bool)(TMP_93)",
		node_source_code_lines="[35]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	138 -> 139	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_26(None) -> to.call
REF_27(None) -> REF_26.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_26(None) -> to.call
REF_27(None) -> REF_26.value",
		node_source_code_lines="[36]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	139 -> 140	[key=0,
		edge_type=next,
		label=Next];
	141	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[34, 35, 36, 37]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	141 -> 138	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=ForTheBlockchain,
		function_fullname="allowance(address,address)",
		label="buggy_11.sol_ForTheBlockchain_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[38]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	143	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[39, 40, 41, 42]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	144	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_96(bool) = tx.origin == owner_txorigin9
\
TMP_97(None) = SOLIDITY_CALL require(bool)(TMP_96)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_96(bool) = tx.origin == owner_txorigin9
TMP_97(None) = SOLIDITY_CALL require(bool)(TMP_96)",
		node_source_code_lines="[40]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[41]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	144 -> 145	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[39, 40, 41, 42]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	146 -> 143	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=ForTheBlockchain,
		function_fullname="transfer(address,uint256)",
		label="buggy_11.sol_ForTheBlockchain_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	148	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[44, 45, 46, 47]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	149	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_99(bool) = tx.origin == owner_txorigin25
\
TMP_100(None) = SOLIDITY_CALL require(bool)(TMP_99)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_99(bool) = tx.origin == owner_txorigin25
TMP_100(None) = SOLIDITY_CALL require(bool)(TMP_99)",
		node_source_code_lines="[45]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	148 -> 149	[key=0,
		edge_type=next,
		label=Next];
	150	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[46]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	149 -> 150	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[44, 45, 46, 47]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	151 -> 148	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=ForTheBlockchain,
		function_fullname="approve(address,uint256)",
		label="buggy_11.sol_ForTheBlockchain_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	153	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	154	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_102(bool) = tx.origin == owner_txorigin19
\
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_102(bool) = tx.origin == owner_txorigin19
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_30(None) -> to.call
REF_31(None) -> REF_30.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_30(None) -> to.call
REF_31(None) -> REF_30.value",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	156 -> 153	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=ForTheBlockchain,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_11.sol_ForTheBlockchain_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[53]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	158	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	159	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_105(bool) = tx.origin == owner_txorigin26
\
TMP_106(None) = SOLIDITY_CALL require(bool)(TMP_105)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_105(bool) = tx.origin == owner_txorigin26
TMP_106(None) = SOLIDITY_CALL require(bool)(TMP_105)",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	158 -> 159	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_107 = CONVERT this to address
REF_33 -> \
BALANCE TMP_107
Transfer dest:_recipient value:REF_33",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_107 = CONVERT this to address
REF_33 -> BALANCE TMP_107
Transfer dest:_recipient value:REF_33",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_11.sol_ForTheBlockchain_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	161 -> 158	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	163	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_109(bool) = tx.origin == owner_txorigin27
\
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_109(bool) = tx.origin == owner_txorigin27
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)",
		node_source_code_lines="[60]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	162 -> 163	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_34(None) -> to.call
REF_35(None) -> REF_34.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_34(None) -> to.call
REF_35(None) -> REF_34.value",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	165 -> 162	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	167	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_112(bool) = tx.origin == owner_txorigin31
\
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_112(bool) = tx.origin == owner_txorigin31
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_36(None) -> to.call
REF_37(None) -> REF_36.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_36(None) -> to.call
REF_37(None) -> REF_36.value",
		node_source_code_lines="[66]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	167 -> 168	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	169 -> 166	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	171	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_115(bool) = tx.origin == owner_txorigin22
\
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_115(bool) = tx.origin == owner_txorigin22
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	170 -> 171	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_117 = CONVERT this to address
REF_39 -> \
BALANCE TMP_117
Transfer dest:_recipient value:REF_39",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_117 = CONVERT this to address
REF_39 -> BALANCE TMP_117
Transfer dest:_recipient value:REF_39",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	171 -> 172	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_11.sol_ForTheBlockchain_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	173 -> 170	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[137, 138, 139]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	175	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_119(bool) = tx.origin == owner_txorigin12
\
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_119(bool) = tx.origin == owner_txorigin12
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_source_code_lines="[138]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	174 -> 175	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin12(address)",
		label="buggy_11.sol_ForTheBlockchain_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[137, 138, 139]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	176 -> 174	[key=0,
		edge_type=next,
		label=Next];
	177	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[141, 142, 143, 144]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	178	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_121(bool) = tx.origin == owner_txorigin11
\
TMP_122(None) = SOLIDITY_CALL require(bool)(TMP_121)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_121(bool) = tx.origin == owner_txorigin11
TMP_122(None) = SOLIDITY_CALL require(bool)(TMP_121)",
		node_source_code_lines="[142]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	177 -> 178	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_40(None) -> to.call
REF_41(None) -> REF_40.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_40(None) -> to.call
REF_41(None) -> REF_40.value",
		node_source_code_lines="[143]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	178 -> 179	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[141, 142, 143, 144]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	180 -> 177	[key=0,
		edge_type=next,
		label=Next];
	181	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[146, 147, 148, 149]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	182	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_124(bool) = tx.origin == owner_txorigin1
\
TMP_125(None) = SOLIDITY_CALL require(bool)(TMP_124)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_124(bool) = tx.origin == owner_txorigin1
TMP_125(None) = SOLIDITY_CALL require(bool)(TMP_124)",
		node_source_code_lines="[147]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	181 -> 182	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[148]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	182 -> 183	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[146, 147, 148, 149]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	184 -> 181	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[153, 154, 155, 156]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	186	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_127(bool) = tx.origin == owner_txorigin2
\
TMP_128(None) = SOLIDITY_CALL require(bool)(TMP_127)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_127(bool) = tx.origin == owner_txorigin2
TMP_128(None) = SOLIDITY_CALL require(bool)(TMP_127)",
		node_source_code_lines="[154]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	185 -> 186	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_129 = CONVERT this to address
REF_44 -> \
BALANCE TMP_129
Transfer dest:_recipient value:REF_44",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_129 = CONVERT this to address
REF_44 -> BALANCE TMP_129
Transfer dest:_recipient value:REF_44",
		node_source_code_lines="[155]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	186 -> 187	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_11.sol_ForTheBlockchain_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[153, 154, 155, 156]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	188 -> 185	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[158, 159, 160, 161]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	190	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_131(bool) = tx.origin == owner_txorigin17
\
TMP_132(None) = SOLIDITY_CALL require(bool)(TMP_131)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_131(bool) = tx.origin == owner_txorigin17
TMP_132(None) = SOLIDITY_CALL require(bool)(TMP_131)",
		node_source_code_lines="[159]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	189 -> 190	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[160]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	190 -> 191	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[158, 159, 160, 161]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	192 -> 189	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168, 169, 170, 171, 172, 173, 174, 175, 176]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	194	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
symbol = FTB

IRs:
symbol(string) := FTB(string)",
		node_expression="symbol = FTB",
		node_info_vulnerabilities=None,
		node_irs="symbol(string) := FTB(string)",
		node_source_code_lines="[169]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
name = ForTheBlockchain

IRs:
name(string) := ForTheBlockchain(string)",
		node_expression="name = ForTheBlockchain",
		node_info_vulnerabilities=None,
		node_irs="name(string) := ForTheBlockchain(string)",
		node_source_code_lines="[170]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
decimals = 8

IRs:
decimals(uint256) := 8(uint256)",
		node_expression="decimals = 8",
		node_info_vulnerabilities=None,
		node_irs="decimals(uint256) := 8(uint256)",
		node_source_code_lines="[171]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	195 -> 196	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = 100000000 * 10 ** (decimals)

IRs:
TMP_134(uint256) = 10 ** decimals
TMP_135(uint256) = \
100000000 * TMP_134
_totalSupply(uint256) := TMP_135(uint256)",
		node_expression="_totalSupply = 100000000 * 10 ** (decimals)",
		node_info_vulnerabilities=None,
		node_irs="TMP_134(uint256) = 10 ** decimals
TMP_135(uint256) = 100000000 * TMP_134
_totalSupply(uint256) := TMP_135(uint256)",
		node_source_code_lines="[172]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	196 -> 197	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[owner] = _totalSupply

IRs:
REF_46(uint256) -> balances[owner]
REF_46 (->balances) := _\
totalSupply(uint256)",
		node_expression="balances[owner] = _totalSupply",
		node_info_vulnerabilities=None,
		node_irs="REF_46(uint256) -> balances[owner]
REF_46 (->balances) := _totalSupply(uint256)",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),owner,_totalSupply)

IRs:
TMP_136 = CONVERT 0 to address
Emit Transfer(TMP_\
136.owner._totalSupply)",
		node_expression="Transfer(address(0),owner,_totalSupply)",
		node_info_vulnerabilities=None,
		node_irs="TMP_136 = CONVERT 0 to address
Emit Transfer(TMP_136.owner._totalSupply)",
		node_source_code_lines="[174]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	198 -> 199	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=ForTheBlockchain,
		function_fullname="constructor()",
		label="buggy_11.sol_ForTheBlockchain_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168, 169, 170, 171, 172, 173, 174, 175, 176]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	200 -> 193	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[177, 178, 179, 180]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	202	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_138(bool) = tx.origin == owner_txorigin7
\
TMP_139(None) = SOLIDITY_CALL require(bool)(TMP_138)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_138(bool) = tx.origin == owner_txorigin7
TMP_139(None) = SOLIDITY_CALL require(bool)(TMP_138)",
		node_source_code_lines="[178]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	201 -> 202	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_47(None) -> to.call
REF_48(None) -> REF_47.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_47(None) -> to.call
REF_48(None) -> REF_47.value",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	202 -> 203	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[177, 178, 179, 180]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	204 -> 201	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=ForTheBlockchain,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[186, 187, 188]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	206	[contract_name=ForTheBlockchain,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply.sub(balances[address(0)])

IRs:
TMP_141 = CONVERT 0 to address
REF_50(uint256) -> balances[\
TMP_141]
TMP_142(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'REF_\
50'] 
RETURN TMP_142",
		node_expression="_totalSupply.sub(balances[address(0)])",
		node_info_vulnerabilities=None,
		node_irs="TMP_141 = CONVERT 0 to address
REF_50(uint256) -> balances[TMP_141]
TMP_142(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['_totalSupply', 'REF_50'] 
RETURN TMP_142",
		node_source_code_lines="[187]",
		node_type=RETURN,
		source_file="buggy_11.sol"];
	205 -> 206	[key=0,
		edge_type=next,
		label=Next];
	207	[contract_name=ForTheBlockchain,
		function_fullname="totalSupply()",
		label="buggy_11.sol_ForTheBlockchain_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[186, 187, 188]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	207 -> 205	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[189, 190, 191, 192]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	209	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_143(bool) = tx.origin == owner_txorigin23
\
TMP_144(None) = SOLIDITY_CALL require(bool)(TMP_143)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_143(bool) = tx.origin == owner_txorigin23
TMP_144(None) = SOLIDITY_CALL require(bool)(TMP_143)",
		node_source_code_lines="[190]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	210	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_51(None) -> to.call
REF_52(None) -> REF_51.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_51(None) -> to.call
REF_52(None) -> REF_51.value",
		node_source_code_lines="[191]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	209 -> 210	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[189, 190, 191, 192]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	211 -> 208	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=ForTheBlockchain,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198, 199, 200]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	213	[contract_name=ForTheBlockchain,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
balances[tokenOwner]

IRs:
REF_53(uint256) -> balances[tokenOwner]
RETURN REF_53",
		node_expression="balances[tokenOwner]",
		node_info_vulnerabilities=None,
		node_irs="REF_53(uint256) -> balances[tokenOwner]
RETURN REF_53",
		node_source_code_lines="[199]",
		node_type=RETURN,
		source_file="buggy_11.sol"];
	212 -> 213	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=ForTheBlockchain,
		function_fullname="balanceOf(address)",
		label="buggy_11.sol_ForTheBlockchain_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198, 199, 200]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	214 -> 212	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	216	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_146(bool) = tx.origin == owner_txorigin14
\
TMP_147(None) = SOLIDITY_CALL require(bool)(TMP_146)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_146(bool) = tx.origin == owner_txorigin14
TMP_147(None) = SOLIDITY_CALL require(bool)(TMP_146)",
		node_source_code_lines="[202]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	215 -> 216	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_148 = CONVERT this to address
REF_55 -> \
BALANCE TMP_148
Transfer dest:_recipient value:REF_55",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_148 = CONVERT this to address
REF_55 -> BALANCE TMP_148
Transfer dest:_recipient value:REF_55",
		node_source_code_lines="[203]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	216 -> 217	[key=0,
		edge_type=next,
		label=Next];
	218	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_11.sol_ForTheBlockchain_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[201, 202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	218 -> 215	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=ForTheBlockchain,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[212, 213, 214, 215, 216, 217]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	220	[contract_name=ForTheBlockchain,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] = balances[msg.sender].sub(tokens)

IRs:
REF_56(uint256) -> balances[msg.sender]
\
REF_57(uint256) -> balances[msg.sender]
TMP_150(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['REF_57', 'tokens'] 
REF_56 (->balances) := TMP_150(uint256)",
		node_expression="balances[msg.sender] = balances[msg.sender].sub(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_56(uint256) -> balances[msg.sender]
REF_57(uint256) -> balances[msg.sender]
TMP_150(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_57', 'tokens'] 
REF_56 (->balances) := TMP_150(uint256)",
		node_source_code_lines="[213]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	219 -> 220	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=ForTheBlockchain,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[to] = balances[to].add(tokens)

IRs:
REF_59(uint256) -> balances[to]
REF_60(uint256) \
-> balances[to]
TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_60', 'tokens'] 
\
REF_59 (->balances) := TMP_151(uint256)",
		node_expression="balances[to] = balances[to].add(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_59(uint256) -> balances[to]
REF_60(uint256) -> balances[to]
TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_60', 'tokens'] 
REF_59 (->balances) := TMP_151(uint256)",
		node_source_code_lines="[214]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=ForTheBlockchain,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(msg.sender,to,tokens)

IRs:
Emit Transfer(msg.sender.to.tokens)",
		node_expression="Transfer(msg.sender,to,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(msg.sender.to.tokens)",
		node_source_code_lines="[215]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=ForTheBlockchain,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[216]",
		node_type=RETURN,
		source_file="buggy_11.sol"];
	222 -> 223	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=ForTheBlockchain,
		function_fullname="transfer(address,uint256)",
		label="buggy_11.sol_ForTheBlockchain_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[212, 213, 214, 215, 216, 217]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	224 -> 219	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[218, 219, 220, 221]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	226	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_153(bool) = tx.origin == owner_txorigin30
\
TMP_154(None) = SOLIDITY_CALL require(bool)(TMP_153)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_153(bool) = tx.origin == owner_txorigin30
TMP_154(None) = SOLIDITY_CALL require(bool)(TMP_153)",
		node_source_code_lines="[219]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	225 -> 226	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_155 = CONVERT this to address
REF_63 -> \
BALANCE TMP_155
Transfer dest:_recipient value:REF_63",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_155 = CONVERT this to address
REF_63 -> BALANCE TMP_155
Transfer dest:_recipient value:REF_63",
		node_source_code_lines="[220]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	226 -> 227	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=ForTheBlockchain,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_11.sol_ForTheBlockchain_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[218, 219, 220, 221]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	228 -> 225	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=ForTheBlockchain,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[232, 233, 234, 235, 236]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	230	[contract_name=ForTheBlockchain,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][spender] = tokens

IRs:
REF_64(mapping(address => uint256)) -> allowed[msg.sender]
\
REF_65(uint256) -> REF_64[spender]
REF_65 (->allowed) := tokens(uint256)",
		node_expression="allowed[msg.sender][spender] = tokens",
		node_info_vulnerabilities=None,
		node_irs="REF_64(mapping(address => uint256)) -> allowed[msg.sender]
REF_65(uint256) -> REF_64[spender]
REF_65 (->allowed) := tokens(uint256)",
		node_source_code_lines="[233]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=ForTheBlockchain,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,spender,tokens)

IRs:
Emit Approval(msg.sender.spender.tokens)",
		node_expression="Approval(msg.sender,spender,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(msg.sender.spender.tokens)",
		node_source_code_lines="[234]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	230 -> 231	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=ForTheBlockchain,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[235]",
		node_type=RETURN,
		source_file="buggy_11.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=ForTheBlockchain,
		function_fullname="approve(address,uint256)",
		label="buggy_11.sol_ForTheBlockchain_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[232, 233, 234, 235, 236]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	233 -> 229	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[237, 238, 239]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	235	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_158(bool) = tx.origin == owner_txorigin8
\
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_158(bool) = tx.origin == owner_txorigin8
TMP_159(None) = SOLIDITY_CALL require(bool)(TMP_158)",
		node_source_code_lines="[238]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	234 -> 235	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin8(address)",
		label="buggy_11.sol_ForTheBlockchain_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[237, 238, 239]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	236 -> 234	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=ForTheBlockchain,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[251, 252, 253, 254, 255, 256, 257]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	238	[contract_name=ForTheBlockchain,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[from] = balances[from].sub(tokens)

IRs:
REF_66(uint256) -> balances[from]
REF_67(uint256) \
-> balances[from]
TMP_160(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_67', '\
tokens'] 
REF_66 (->balances) := TMP_160(uint256)",
		node_expression="balances[from] = balances[from].sub(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_66(uint256) -> balances[from]
REF_67(uint256) -> balances[from]
TMP_160(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_67', 'tokens'] 
REF_66 (->balances) := TMP_160(uint256)",
		node_source_code_lines="[252]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	237 -> 238	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=ForTheBlockchain,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens)

IRs:
REF_69(mapping(address => \
uint256)) -> allowed[from]
REF_70(uint256) -> REF_69[msg.sender]
REF_71(mapping(address => uint256)) -> allowed[from]
REF_72(uint256) \
-> REF_71[msg.sender]
TMP_161(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_72', '\
tokens'] 
REF_70 (->allowed) := TMP_161(uint256)",
		node_expression="allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_69(mapping(address => uint256)) -> allowed[from]
REF_70(uint256) -> REF_69[msg.sender]
REF_71(mapping(address => uint256)) -> \
allowed[from]
REF_72(uint256) -> REF_71[msg.sender]
TMP_161(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,\
uint256), arguments:['REF_72', 'tokens'] 
REF_70 (->allowed) := TMP_161(uint256)",
		node_source_code_lines="[253]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=ForTheBlockchain,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[to] = balances[to].add(tokens)

IRs:
REF_74(uint256) -> balances[to]
REF_75(uint256) \
-> balances[to]
TMP_162(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_75', 'tokens'] 
\
REF_74 (->balances) := TMP_162(uint256)",
		node_expression="balances[to] = balances[to].add(tokens)",
		node_info_vulnerabilities=None,
		node_irs="REF_74(uint256) -> balances[to]
REF_75(uint256) -> balances[to]
TMP_162(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_75', 'tokens'] 
REF_74 (->balances) := TMP_162(uint256)",
		node_source_code_lines="[254]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	239 -> 240	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=ForTheBlockchain,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,to,tokens)

IRs:
Emit Transfer(from.to.tokens)",
		node_expression="Transfer(from,to,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(from.to.tokens)",
		node_source_code_lines="[255]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	240 -> 241	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=ForTheBlockchain,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[256]",
		node_type=RETURN,
		source_file="buggy_11.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=ForTheBlockchain,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_11.sol_ForTheBlockchain_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[251, 252, 253, 254, 255, 256, 257]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	243 -> 237	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	245	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_164(bool) = tx.origin == owner_txorigin39
\
TMP_165(None) = SOLIDITY_CALL require(bool)(TMP_164)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_164(bool) = tx.origin == owner_txorigin39
TMP_165(None) = SOLIDITY_CALL require(bool)(TMP_164)",
		node_source_code_lines="[259]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	244 -> 245	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_77(None) -> to.call
REF_78(None) -> REF_77.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_77(None) -> to.call
REF_78(None) -> REF_77.value",
		node_source_code_lines="[260]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	245 -> 246	[key=0,
		edge_type=next,
		label=Next];
	247	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	247 -> 244	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=ForTheBlockchain,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[268, 269, 270]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	249	[contract_name=ForTheBlockchain,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
allowed[tokenOwner][spender]

IRs:
REF_79(mapping(address => uint256)) -> allowed[tokenOwner]
REF_\
80(uint256) -> REF_79[spender]
RETURN REF_80",
		node_expression="allowed[tokenOwner][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_79(mapping(address => uint256)) -> allowed[tokenOwner]
REF_80(uint256) -> REF_79[spender]
RETURN REF_80",
		node_source_code_lines="[269]",
		node_type=RETURN,
		source_file="buggy_11.sol"];
	248 -> 249	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=ForTheBlockchain,
		function_fullname="allowance(address,address)",
		label="buggy_11.sol_ForTheBlockchain_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[268, 269, 270]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	250 -> 248	[key=0,
		edge_type=next,
		label=Next];
	251	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[271, 272, 273]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	252	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_167(bool) = tx.origin == owner_txorigin36
\
TMP_168(None) = SOLIDITY_CALL require(bool)(TMP_167)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_167(bool) = tx.origin == owner_txorigin36
TMP_168(None) = SOLIDITY_CALL require(bool)(TMP_167)",
		node_source_code_lines="[272]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	251 -> 252	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin36(address)",
		label="buggy_11.sol_ForTheBlockchain_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[271, 272, 273]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	253 -> 251	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=ForTheBlockchain,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[281, 282, 283, 284, 285, 286]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	255	[contract_name=ForTheBlockchain,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
allowed[msg.sender][spender] = tokens

IRs:
REF_81(mapping(address => uint256)) -> allowed[msg.sender]
\
REF_82(uint256) -> REF_81[spender]
REF_82 (->allowed) := tokens(uint256)",
		node_expression="allowed[msg.sender][spender] = tokens",
		node_info_vulnerabilities=None,
		node_irs="REF_81(mapping(address => uint256)) -> allowed[msg.sender]
REF_82(uint256) -> REF_81[spender]
REF_82 (->allowed) := tokens(uint256)",
		node_source_code_lines="[282]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	254 -> 255	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=ForTheBlockchain,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(msg.sender,spender,tokens)

IRs:
Emit Approval(msg.sender.spender.tokens)",
		node_expression="Approval(msg.sender,spender,tokens)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(msg.sender.spender.tokens)",
		node_source_code_lines="[283]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	255 -> 256	[key=0,
		edge_type=next,
		label=Next];
	257	[contract_name=ForTheBlockchain,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ApproveAndCallFallBack(spender).receiveApproval(msg.sender,tokens,address(this),data)

IRs:
TMP_\
170 = CONVERT spender to ApproveAndCallFallBack
TMP_171 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_170(ApproveAndCallFallBack), \
function:receiveApproval, arguments:['msg.sender', 'tokens', 'TMP_171', 'data']  ",
		node_expression="ApproveAndCallFallBack(spender).receiveApproval(msg.sender,tokens,address(this),data)",
		node_info_vulnerabilities=None,
		node_irs="TMP_170 = CONVERT spender to ApproveAndCallFallBack
TMP_171 = CONVERT this to address
HIGH_LEVEL_CALL, dest:TMP_170(ApproveAndCallFallBack), \
function:receiveApproval, arguments:['msg.sender', 'tokens', 'TMP_171', 'data']  ",
		node_source_code_lines="[284]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=ForTheBlockchain,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[285]",
		node_type=RETURN,
		source_file="buggy_11.sol"];
	257 -> 258	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=ForTheBlockchain,
		function_fullname="approveAndCall(address,uint256,bytes)",
		label="buggy_11.sol_ForTheBlockchain_approveAndCall(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[281, 282, 283, 284, 285, 286]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	259 -> 254	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[287, 288, 289, 290]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	261	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_173(bool) = tx.origin == owner_txorigin35
\
TMP_174(None) = SOLIDITY_CALL require(bool)(TMP_173)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_173(bool) = tx.origin == owner_txorigin35
TMP_174(None) = SOLIDITY_CALL require(bool)(TMP_173)",
		node_source_code_lines="[288]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_source_code_lines="[289]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=ForTheBlockchain,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[287, 288, 289, 290]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	263 -> 260	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=ForTheBlockchain,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[296, 297, 298]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	265	[contract_name=ForTheBlockchain,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
revert()()

IRs:
TMP_176(None) = SOLIDITY_CALL revert()()",
		node_expression="revert()()",
		node_info_vulnerabilities=None,
		node_irs="TMP_176(None) = SOLIDITY_CALL revert()()",
		node_source_code_lines="[297]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	264 -> 265	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=ForTheBlockchain,
		function_fullname="fallback()",
		label="buggy_11.sol_ForTheBlockchain_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[296, 297, 298]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	266 -> 264	[key=0,
		edge_type=next,
		label=Next];
	267	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[299, 300, 301]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	268	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_177(bool) = tx.origin == owner_txorigin40
\
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_177(bool) = tx.origin == owner_txorigin40
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_source_code_lines="[300]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=ForTheBlockchain,
		function_fullname="bug_txorigin40(address)",
		label="buggy_11.sol_ForTheBlockchain_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[299, 300, 301]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	269 -> 267	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=ForTheBlockchain,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	272	[contract_name=ForTheBlockchain,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Owned.onlyOwner()()",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	270 -> 272	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=ForTheBlockchain,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
ERC20Interface(tokenAddress).transfer(owner,tokens)

IRs:
TMP_179 = CONVERT tokenAddress to ERC20Interface
\
TMP_180(bool) = HIGH_LEVEL_CALL, dest:TMP_179(ERC20Interface), function:transfer, arguments:['owner', 'tokens']  
RETURN TMP_180",
		node_expression="ERC20Interface(tokenAddress).transfer(owner,tokens)",
		node_info_vulnerabilities=None,
		node_irs="TMP_179 = CONVERT tokenAddress to ERC20Interface
TMP_180(bool) = HIGH_LEVEL_CALL, dest:TMP_179(ERC20Interface), function:transfer, \
arguments:['owner', 'tokens']  
RETURN TMP_180",
		node_source_code_lines="[308]",
		node_type=RETURN,
		source_file="buggy_11.sol"];
	272 -> 271	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=ForTheBlockchain,
		function_fullname="transferAnyERC20Token(address,uint256)",
		label="buggy_11.sol_ForTheBlockchain_transferAnyERC20Token(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	273 -> 270	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[310, 311, 312, 313]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	275	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_182(bool) = tx.origin == owner_txorigin33
\
TMP_183(None) = SOLIDITY_CALL require(bool)(TMP_182)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="TMP_182(bool) = tx.origin == owner_txorigin33
TMP_183(None) = SOLIDITY_CALL require(bool)(TMP_182)",
		node_source_code_lines="[311]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	274 -> 275	[key=0,
		edge_type=next,
		label=Next];
	276	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[312]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	275 -> 276	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=ForTheBlockchain,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_11.sol_ForTheBlockchain_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, \
65, 66, 67, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 101, 102, 103, 113, 114, 115, 116, 123, 124, 125, 132, 133, \
134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 177, 178, 179, 180, 189, \
190, 191, 192, 201, 202, 203, 204, 218, 219, 220, 221, 237, 238, 239, 258, 259, 260, 261, 271, 272, 273, 287, 288, 289, 290, 299, \
300, 301, 310, 311, 312, 313], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[310, 311, 312, 313]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	277 -> 274	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=ForTheBlockchain,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=ENTRY_POINT,
		source_file="buggy_11.sol"];
	279	[contract_name=ForTheBlockchain,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_185(bool) = msg.sender == owner
TMP_186(None) = \
SOLIDITY_CALL require(bool)(TMP_185)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_185(bool) = msg.sender == owner
TMP_186(None) = SOLIDITY_CALL require(bool)(TMP_185)",
		node_source_code_lines="[106]",
		node_type=EXPRESSION,
		source_file="buggy_11.sol"];
	278 -> 279	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=ForTheBlockchain,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[107]",
		node_type=_,
		source_file="buggy_11.sol"];
	279 -> 280	[key=0,
		edge_type=next,
		label=Next];
	281	[contract_name=ForTheBlockchain,
		function_fullname="onlyOwner()",
		label="buggy_11.sol_ForTheBlockchain_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=FUNCTION_NAME,
		source_file="buggy_11.sol"];
	281 -> 278	[key=0,
		edge_type=next,
		label=Next];
}
