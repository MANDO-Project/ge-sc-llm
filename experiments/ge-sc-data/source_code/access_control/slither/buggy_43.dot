digraph "" {
	node [label="\N"];
	0	[contract_name=EventMetadata,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[10, 11, 12, 13]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	1	[contract_name=EventMetadata,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_0(bool) = tx.origin == owner_txorigin33
\
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_0(bool) = tx.origin == owner_txorigin33
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[11]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=EventMetadata,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[12]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=EventMetadata,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_43.sol_EventMetadata_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[10, 11, 12, 13]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	3 -> 0	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=EventMetadata,
		function_fullname="_setMetadata(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18, 19, 20]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	5	[contract_name=EventMetadata,
		function_fullname="_setMetadata(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
MetadataSet(metadata)

IRs:
Emit MetadataSet(metadata)",
		node_expression="MetadataSet(metadata)",
		node_info_vulnerabilities=None,
		node_irs="Emit MetadataSet(metadata)",
		node_source_code_lines="[19]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	4 -> 5	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=EventMetadata,
		function_fullname="_setMetadata(bytes)",
		label="buggy_43.sol_EventMetadata__setMetadata(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18, 19, 20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	6 -> 4	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=EventMetadata,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[21, 22, 23, 24]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	8	[contract_name=EventMetadata,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_4(bool) = tx.origin == owner_txorigin2
\
TMP_5(None) = SOLIDITY_CALL require(bool)(TMP_4)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_4(bool) = tx.origin == owner_txorigin2
TMP_5(None) = SOLIDITY_CALL require(bool)(TMP_4)",
		node_source_code_lines="[22]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	7 -> 8	[key=0,
		edge_type=next,
		label=Next];
	9	[contract_name=EventMetadata,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_6 = CONVERT this to address
REF_2 -> BALANCE \
TMP_6
Transfer dest:_recipient value:REF_2",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_6 = CONVERT this to address
REF_2 -> BALANCE TMP_6
Transfer dest:_recipient value:REF_2",
		node_source_code_lines="[23]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	8 -> 9	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=EventMetadata,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_43.sol_EventMetadata_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[21, 22, 23, 24]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	10 -> 7	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[31, 32, 33, 34]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	12	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_8(bool) = tx.origin == owner_txorigin22
\
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_8(bool) = tx.origin == owner_txorigin22
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	11 -> 12	[key=0,
		edge_type=next,
		label=Next];
	13	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_10 = CONVERT this to address
REF_4 -> BALANCE \
TMP_10
Transfer dest:_recipient value:REF_4",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_10 = CONVERT this to address
REF_4 -> BALANCE TMP_10
Transfer dest:_recipient value:REF_4",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	12 -> 13	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_43.sol_Operated_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[31, 32, 33, 34]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	14 -> 11	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=Operated,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[36, 37, 38]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	16	[contract_name=Operated,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_12(bool) = tx.origin == owner_txorigin12
\
TMP_13(None) = SOLIDITY_CALL require(bool)(TMP_12)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_12(bool) = tx.origin == owner_txorigin12
TMP_13(None) = SOLIDITY_CALL require(bool)(TMP_12)",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	15 -> 16	[key=0,
		edge_type=next,
		label=Next];
	17	[contract_name=Operated,
		function_fullname="bug_txorigin12(address)",
		label="buggy_43.sol_Operated_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[36, 37, 38]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	17 -> 15	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=Operated,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	19	[contract_name=Operated,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_14(bool) = tx.origin == owner_txorigin27
\
TMP_15(None) = SOLIDITY_CALL require(bool)(TMP_14)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_14(bool) = tx.origin == owner_txorigin27
TMP_15(None) = SOLIDITY_CALL require(bool)(TMP_14)",
		node_source_code_lines="[42]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	18 -> 19	[key=0,
		edge_type=next,
		label=Next];
	20	[contract_name=Operated,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_5(None) -> to.call
REF_6(None) -> REF_5.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_5(None) -> to.call
REF_6(None) -> REF_5.value",
		node_source_code_lines="[43]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	19 -> 20	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=Operated,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_43.sol_Operated_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	21 -> 18	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52, 53]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	23	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_operator != operator,cannot set same operator)

IRs:
TMP_17(bool) = _operator != \
operator
TMP_18(None) = SOLIDITY_CALL require(bool,string)(TMP_17,cannot set same operator)",
		node_expression="require(bool,string)(_operator != operator,cannot set same operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_17(bool) = _operator != operator
TMP_18(None) = SOLIDITY_CALL require(bool,string)(TMP_17,cannot set same operator)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	22 -> 23	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_operator = operator

IRs:
_operator(address) := operator(address)",
		node_expression="_operator = operator",
		node_info_vulnerabilities=None,
		node_irs="_operator(address) := operator(address)",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(operator,hasActiveOperator())

IRs:
TMP_19(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
\
Emit OperatorUpdated(operator.TMP_19)",
		node_expression="OperatorUpdated(operator,hasActiveOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_19(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
Emit OperatorUpdated(operator.TMP_19)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	24 -> 25	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=Operated,
		function_fullname="_setOperator(address)",
		label="buggy_43.sol_Operated__setOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52, 53]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	26 -> 22	[key=0,
		edge_type=next,
		label=Next];
	27	[contract_name=Operated,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	28	[contract_name=Operated,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_21(bool) = tx.origin == owner_txorigin17
\
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_21(bool) = tx.origin == owner_txorigin17
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=Operated,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	28 -> 29	[key=0,
		edge_type=next,
		label=Next];
	30	[contract_name=Operated,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_43.sol_Operated_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	30 -> 27	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=Operated,
		function_fullname="_transferOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	32	[contract_name=Operated,
		function_fullname="_transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_operator != address(0),operator not set)

IRs:
TMP_24 = CONVERT 0 to address
\
TMP_25(bool) = _operator != TMP_24
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,operator not set)",
		node_expression="require(bool,string)(_operator != address(0),operator not set)",
		node_info_vulnerabilities=None,
		node_irs="TMP_24 = CONVERT 0 to address
TMP_25(bool) = _operator != TMP_24
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,operator \
not set)",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	31 -> 32	[key=0,
		edge_type=next,
		label=Next];
	33	[contract_name=Operated,
		function_fullname="_transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_setOperator(operator)

IRs:
INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_expression="_setOperator(operator)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	32 -> 33	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=Operated,
		function_fullname="_transferOperator(address)",
		label="buggy_43.sol_Operated__transferOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	34 -> 31	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=Operated,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	36	[contract_name=Operated,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_28(bool) = tx.origin == owner_txorigin37
\
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_28(bool) = tx.origin == owner_txorigin37
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	35 -> 36	[key=0,
		edge_type=next,
		label=Next];
	37	[contract_name=Operated,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[66]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	36 -> 37	[key=0,
		edge_type=next,
		label=Next];
	38	[contract_name=Operated,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_43.sol_Operated_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	38 -> 35	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72, 73, 74]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	40	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(hasActiveOperator(),only when operator active)

IRs:
TMP_31(bool) = INTERNAL_\
CALL, Operated.hasActiveOperator()()
TMP_32(None) = SOLIDITY_CALL require(bool,string)(TMP_31,only when operator active)",
		node_expression="require(bool,string)(hasActiveOperator(),only when operator active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_31(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_32(None) = SOLIDITY_CALL require(bool,string)(TMP_31,only when \
operator active)",
		node_source_code_lines="[70]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	39 -> 40	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_operator = address(0)

IRs:
TMP_33 = CONVERT 0 to address
_operator(address) := TMP_33(address)",
		node_expression="_operator = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_33 = CONVERT 0 to address
_operator(address) := TMP_33(address)",
		node_source_code_lines="[71]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	40 -> 41	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = false

IRs:
_status(bool) := False(bool)",
		node_expression="_status = false",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := False(bool)",
		node_source_code_lines="[72]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	41 -> 42	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(address(0),false)

IRs:
TMP_34 = CONVERT 0 to address
Emit OperatorUpdated(TMP_\
34.False)",
		node_expression="OperatorUpdated(address(0),false)",
		node_info_vulnerabilities=None,
		node_irs="TMP_34 = CONVERT 0 to address
Emit OperatorUpdated(TMP_34.False)",
		node_source_code_lines="[73]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	42 -> 43	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=Operated,
		function_fullname="_renounceOperator()",
		label="buggy_43.sol_Operated__renounceOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72, 73, 74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	44 -> 39	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=Operated,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	46	[contract_name=Operated,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_36(bool) = tx.origin == owner_txorigin3
\
TMP_37(None) = SOLIDITY_CALL require(bool)(TMP_36)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_36(bool) = tx.origin == owner_txorigin3
TMP_37(None) = SOLIDITY_CALL require(bool)(TMP_36)",
		node_source_code_lines="[76]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	45 -> 46	[key=0,
		edge_type=next,
		label=Next];
	47	[contract_name=Operated,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	46 -> 47	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=Operated,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_43.sol_Operated_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	48 -> 45	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	50	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! hasActiveOperator(),only when operator not active)

IRs:
TMP_39(bool) = \
INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_40 = ! TMP_39 
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,only when \
operator not active)",
		node_expression="require(bool,string)(! hasActiveOperator(),only when operator not active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_39(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_40 = ! TMP_39 
TMP_41(None) = SOLIDITY_CALL require(bool,string)(\
TMP_40,only when operator not active)",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	49 -> 50	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = true

IRs:
_status(bool) := True(bool)",
		node_expression="_status = true",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := True(bool)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	50 -> 51	[key=0,
		edge_type=next,
		label=Next];
	52	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(_operator,true)

IRs:
Emit OperatorUpdated(_operator.True)",
		node_expression="OperatorUpdated(_operator,true)",
		node_info_vulnerabilities=None,
		node_irs="Emit OperatorUpdated(_operator.True)",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=Operated,
		function_fullname="_activateOperator()",
		label="buggy_43.sol_Operated__activateOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	53 -> 49	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=Operated,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	55	[contract_name=Operated,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_43(bool) = tx.origin == owner_txorigin9
\
TMP_44(None) = SOLIDITY_CALL require(bool)(TMP_43)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_43(bool) = tx.origin == owner_txorigin9
TMP_44(None) = SOLIDITY_CALL require(bool)(TMP_43)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	54 -> 55	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=Operated,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=Operated,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_43.sol_Operated_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	57 -> 54	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	59	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(hasActiveOperator(),only when operator active)

IRs:
TMP_46(bool) = INTERNAL_\
CALL, Operated.hasActiveOperator()()
TMP_47(None) = SOLIDITY_CALL require(bool,string)(TMP_46,only when operator active)",
		node_expression="require(bool,string)(hasActiveOperator(),only when operator active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_46(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_47(None) = SOLIDITY_CALL require(bool,string)(TMP_46,only when \
operator active)",
		node_source_code_lines="[91]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	58 -> 59	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = false

IRs:
_status(bool) := False(bool)",
		node_expression="_status = false",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := False(bool)",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	59 -> 60	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(_operator,false)

IRs:
Emit OperatorUpdated(_operator.False)",
		node_expression="OperatorUpdated(_operator,false)",
		node_info_vulnerabilities=None,
		node_irs="Emit OperatorUpdated(_operator.False)",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	60 -> 61	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=Operated,
		function_fullname="_deactivateOperator()",
		label="buggy_43.sol_Operated__deactivateOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	62 -> 58	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=Operated,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	64	[contract_name=Operated,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_49(bool) = tx.origin == owner_txorigin25
\
TMP_50(None) = SOLIDITY_CALL require(bool)(TMP_49)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_49(bool) = tx.origin == owner_txorigin25
TMP_50(None) = SOLIDITY_CALL require(bool)(TMP_49)",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	63 -> 64	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Operated,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	64 -> 65	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=Operated,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_43.sol_Operated_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	66 -> 63	[key=0,
		edge_type=next,
		label=Next];
	67	[contract_name=Operated,
		function_fullname="getOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[102, 103, 104]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	68	[contract_name=Operated,
		function_fullname="getOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
operator = _operator

IRs:
operator(address) := _operator(address)",
		node_expression="operator = _operator",
		node_info_vulnerabilities=None,
		node_irs="operator(address) := _operator(address)",
		node_source_code_lines="[103]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=Operated,
		function_fullname="getOperator()",
		label="buggy_43.sol_Operated_getOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[102, 103, 104]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	69 -> 67	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=Operated,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	71	[contract_name=Operated,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_52(bool) = tx.origin == owner_txorigin19
\
TMP_53(None) = SOLIDITY_CALL require(bool)(TMP_52)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_52(bool) = tx.origin == owner_txorigin19
TMP_53(None) = SOLIDITY_CALL require(bool)(TMP_52)",
		node_source_code_lines="[106]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	70 -> 71	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=Operated,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_13(None) -> to.call
REF_14(None) -> REF_13.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_13(None) -> to.call
REF_14(None) -> REF_13.value",
		node_source_code_lines="[107]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	71 -> 72	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=Operated,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_43.sol_Operated_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	73 -> 70	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=Operated,
		function_fullname="isOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	75	[contract_name=Operated,
		function_fullname="isOperator(address)",
		label="Node Type: RETURN

EXPRESSION:
(caller == getOperator())

IRs:
TMP_55(address) = INTERNAL_CALL, Operated.getOperator()()
TMP_56(\
bool) = caller == TMP_55
RETURN TMP_56",
		node_expression="(caller == getOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_55(address) = INTERNAL_CALL, Operated.getOperator()()
TMP_56(bool) = caller == TMP_55
RETURN TMP_56",
		node_source_code_lines="[111]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	74 -> 75	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=Operated,
		function_fullname="isOperator(address)",
		label="buggy_43.sol_Operated_isOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	76 -> 74	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	78	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_57(bool) = tx.origin == owner_txorigin26
\
TMP_58(None) = SOLIDITY_CALL require(bool)(TMP_57)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_57(bool) = tx.origin == owner_txorigin26
TMP_58(None) = SOLIDITY_CALL require(bool)(TMP_57)",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	77 -> 78	[key=0,
		edge_type=next,
		label=Next];
	79	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_59 = CONVERT this to address
REF_16 -> BALANCE \
TMP_59
Transfer dest:_recipient value:REF_16",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_59 = CONVERT this to address
REF_16 -> BALANCE TMP_59
Transfer dest:_recipient value:REF_16",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	78 -> 79	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=Operated,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_43.sol_Operated_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	80 -> 77	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=Operated,
		function_fullname="hasActiveOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	82	[contract_name=Operated,
		function_fullname="hasActiveOperator()",
		label="Node Type: RETURN

EXPRESSION:
_status

IRs:
RETURN _status",
		node_expression=_status,
		node_info_vulnerabilities=None,
		node_irs="RETURN _status",
		node_source_code_lines="[119]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	81 -> 82	[key=0,
		edge_type=next,
		label=Next];
	83	[contract_name=Operated,
		function_fullname="hasActiveOperator()",
		label="buggy_43.sol_Operated_hasActiveOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	83 -> 81	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=Operated,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[121, 122, 123]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	85	[contract_name=Operated,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_61(bool) = tx.origin == owner_txorigin20
\
TMP_62(None) = SOLIDITY_CALL require(bool)(TMP_61)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_61(bool) = tx.origin == owner_txorigin20
TMP_62(None) = SOLIDITY_CALL require(bool)(TMP_61)",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	84 -> 85	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=Operated,
		function_fullname="bug_txorigin20(address)",
		label="buggy_43.sol_Operated_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[121, 122, 123]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	86 -> 84	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=Operated,
		function_fullname="isActiveOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[125, 126, 127]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	88	[contract_name=Operated,
		function_fullname="isActiveOperator(address)",
		label="Node Type: RETURN

EXPRESSION:
(isOperator(caller) && hasActiveOperator())

IRs:
TMP_63(bool) = INTERNAL_CALL, Operated.isOperator(\
address)(caller)
TMP_64(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_65(bool) = TMP_63 && TMP_64
RETURN TMP_65",
		node_expression="(isOperator(caller) && hasActiveOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_63(bool) = INTERNAL_CALL, Operated.isOperator(address)(caller)
TMP_64(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
\
TMP_65(bool) = TMP_63 && TMP_64
RETURN TMP_65",
		node_source_code_lines="[126]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=Operated,
		function_fullname="isActiveOperator(address)",
		label="buggy_43.sol_Operated_isActiveOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[125, 126, 127]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	89 -> 87	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=Operated,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[128, 129, 130]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	91	[contract_name=Operated,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_66(bool) = tx.origin == owner_txorigin32
\
TMP_67(None) = SOLIDITY_CALL require(bool)(TMP_66)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_66(bool) = tx.origin == owner_txorigin32
TMP_67(None) = SOLIDITY_CALL require(bool)(TMP_66)",
		node_source_code_lines="[129]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	90 -> 91	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=Operated,
		function_fullname="bug_txorigin32(address)",
		label="buggy_43.sol_Operated_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[128, 129, 130]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	92 -> 90	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	94	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
out = new bytes(34)

IRs:
TMP_69 = new bytes(34)
out(bytes) := TMP_69(bytes)",
		node_expression="out = new bytes(34)",
		node_info_vulnerabilities=None,
		node_irs="TMP_69 = new bytes(34)
out(bytes) := TMP_69(bytes)",
		node_source_code_lines="[156]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	93 -> 94	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[0] = bytes1(multihash.hashFunction)

IRs:
REF_17(bytes1) -> out[0]
REF_18(uint8) -> multihash.hashFunction
\
TMP_70 = CONVERT REF_18 to bytes1
REF_17 (->out) := TMP_70(bytes1)",
		node_expression="out[0] = bytes1(multihash.hashFunction)",
		node_info_vulnerabilities=None,
		node_irs="REF_17(bytes1) -> out[0]
REF_18(uint8) -> multihash.hashFunction
TMP_70 = CONVERT REF_18 to bytes1
REF_17 (->out) := TMP_70(bytes1)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	94 -> 95	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[1] = bytes1(multihash.digestSize)

IRs:
REF_19(bytes1) -> out[1]
REF_20(uint8) -> multihash.digestSize
\
TMP_71 = CONVERT REF_20 to bytes1
REF_19 (->out) := TMP_71(bytes1)",
		node_expression="out[1] = bytes1(multihash.digestSize)",
		node_info_vulnerabilities=None,
		node_irs="REF_19(bytes1) -> out[1]
REF_20(uint8) -> multihash.digestSize
TMP_71 = CONVERT REF_20 to bytes1
REF_19 (->out) := TMP_71(bytes1)",
		node_source_code_lines="[159]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	95 -> 96	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	96 -> 97	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i = 0

IRs:
i(uint8) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint8) := 0(uint256)",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	97 -> 100	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164]",
		node_type=BEGIN_LOOP,
		source_file="buggy_43.sol"];
	101	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < 32

IRs:
TMP_72(bool) = i < 32
CONDITION TMP_72",
		node_expression="i < 32",
		node_info_vulnerabilities=None,
		node_irs="TMP_72(bool) = i < 32
CONDITION TMP_72",
		node_source_code_lines="[162]",
		node_type=IF_LOOP,
		source_file="buggy_43.sol"];
	98 -> 101	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164]",
		node_type=END_LOOP,
		source_file="buggy_43.sol"];
	104	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: RETURN

EXPRESSION:
out

IRs:
RETURN out",
		node_expression=out,
		node_info_vulnerabilities=None,
		node_irs="RETURN out",
		node_source_code_lines="[166]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	99 -> 104	[key=0,
		edge_type=next,
		label=Next];
	100 -> 98	[key=0,
		edge_type=next,
		label=Next];
	101 -> 99	[key=0,
		edge_type=if_false,
		label=False];
	102	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[i + 2] = multihash.hash[i]

IRs:
TMP_73(uint8) = i + 2
REF_21(None) -> out[TMP_73]
REF_22(\
bytes32) -> multihash.hash
REF_23(None) -> REF_22[i]
REF_21 (->out) := REF_23(None)",
		node_expression="out[i + 2] = multihash.hash[i]",
		node_info_vulnerabilities=None,
		node_irs="TMP_73(uint8) = i + 2
REF_21(None) -> out[TMP_73]
REF_22(bytes32) -> multihash.hash
REF_23(None) -> REF_22[i]
REF_21 (->out) := \
REF_23(None)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	101 -> 102	[key=0,
		edge_type=if_true,
		label=True];
	103	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_74(uint8) := i(uint8)
i(uint8) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_74(uint8) := i(uint8)
i(uint8) = i + 1",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	103 -> 101	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=MultiHashWrapper,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="buggy_43.sol_MultiHashWrapper__combineMultiHash(MultiHashWrapper.MultiHash)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	105 -> 93	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=MultiHashWrapper,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[168, 169, 170, 171]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	107	[contract_name=MultiHashWrapper,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_75(bool) = tx.origin == owner_txorigin38
\
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_75(bool) = tx.origin == owner_txorigin38
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_source_code_lines="[169]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	106 -> 107	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=MultiHashWrapper,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_77 = CONVERT this to address
REF_25 -> BALANCE \
TMP_77
Transfer dest:_recipient value:REF_25",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_77 = CONVERT this to address
REF_25 -> BALANCE TMP_77
Transfer dest:_recipient value:REF_25",
		node_source_code_lines="[170]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	107 -> 108	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=MultiHashWrapper,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_43.sol_MultiHashWrapper_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[168, 169, 170, 171]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	109 -> 106	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	111	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(source.length == 34,length of source must be 34)

IRs:
REF_26 -> LENGTH \
source
TMP_79(bool) = REF_26 == 34
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,length of source must be 34)",
		node_expression="require(bool,string)(source.length == 34,length of source must be 34)",
		node_info_vulnerabilities=None,
		node_irs="REF_26 -> LENGTH source
TMP_79(bool) = REF_26 == 34
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,length of source must \
be 34)",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	110 -> 111	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
hashFunction = uint8(source[0])

IRs:
REF_27(None) -> source[0]
TMP_81 = CONVERT REF_27 to \
uint8
hashFunction(uint8) := TMP_81(uint8)",
		node_expression="hashFunction = uint8(source[0])",
		node_info_vulnerabilities=None,
		node_irs="REF_27(None) -> source[0]
TMP_81 = CONVERT REF_27 to uint8
hashFunction(uint8) := TMP_81(uint8)",
		node_source_code_lines="[181]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	111 -> 112	[key=0,
		edge_type=next,
		label=Next];
	113	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
digestSize = uint8(source[1])

IRs:
REF_28(None) -> source[1]
TMP_82 = CONVERT REF_28 to uint8
\
digestSize(uint8) := TMP_82(uint8)",
		node_expression="digestSize = uint8(source[1])",
		node_info_vulnerabilities=None,
		node_irs="REF_28(None) -> source[1]
TMP_82 = CONVERT REF_28 to uint8
digestSize(uint8) := TMP_82(uint8)",
		node_source_code_lines="[182]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[183]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[185, 186, 187, 188, 189]",
		node_type="INLINE ASM",
		source_file="buggy_43.sol"];
	114 -> 115	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: RETURN

EXPRESSION:
(MultiHash(hashFunction,digestSize,hash))

IRs:
TMP_83 = new MultiHash(hashFunction,digestSize,hash)
\
RETURN TMP_83",
		node_expression="(MultiHash(hashFunction,digestSize,hash))",
		node_info_vulnerabilities=None,
		node_irs="TMP_83 = new MultiHash(hashFunction,digestSize,hash)
RETURN TMP_83",
		node_source_code_lines="[189, 190, 191, 192, 193]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	115 -> 116	[key=0,
		edge_type=next,
		label=Next];
	117	[contract_name=MultiHashWrapper,
		function_fullname="_splitMultiHash(bytes)",
		label="buggy_43.sol_MultiHashWrapper__splitMultiHash(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	117 -> 110	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=MultiHashWrapper,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[195, 196, 197]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	119	[contract_name=MultiHashWrapper,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_84(bool) = tx.origin == owner_txorigin4
\
TMP_85(None) = SOLIDITY_CALL require(bool)(TMP_84)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_84(bool) = tx.origin == owner_txorigin4
TMP_85(None) = SOLIDITY_CALL require(bool)(TMP_84)",
		node_source_code_lines="[196]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	118 -> 119	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=MultiHashWrapper,
		function_fullname="bug_txorigin4(address)",
		label="buggy_43.sol_MultiHashWrapper_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[195, 196, 197]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	120 -> 118	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=iFactory,
		function_fullname="create(bytes)",
		label="buggy_43.sol_iFactory_create(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[213]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	122	[contract_name=iFactory,
		function_fullname="createSalty(bytes,bytes32)",
		label="buggy_43.sol_iFactory_createSalty(bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[214]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	123	[contract_name=iFactory,
		function_fullname="getInitSelector()",
		label="buggy_43.sol_iFactory_getInitSelector()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[215]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	124	[contract_name=iFactory,
		function_fullname="getInstanceRegistry()",
		label="buggy_43.sol_iFactory_getInstanceRegistry()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[216]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	125	[contract_name=iFactory,
		function_fullname="getTemplate()",
		label="buggy_43.sol_iFactory_getTemplate()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[217]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	126	[contract_name=iFactory,
		function_fullname="getSaltyInstance(bytes,bytes32)",
		label="buggy_43.sol_iFactory_getSaltyInstance(bytes,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[218]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	127	[contract_name=iFactory,
		function_fullname="getNextInstance(bytes)",
		label="buggy_43.sol_iFactory_getNextInstance(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[219]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	128	[contract_name=iFactory,
		function_fullname="getInstanceCreator(address)",
		label="buggy_43.sol_iFactory_getInstanceCreator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[221]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	129	[contract_name=iFactory,
		function_fullname="getInstanceType()",
		label="buggy_43.sol_iFactory_getInstanceType()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[222]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	130	[contract_name=iFactory,
		function_fullname="getInstanceCount()",
		label="buggy_43.sol_iFactory_getInstanceCount()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[223]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	131	[contract_name=iFactory,
		function_fullname="getInstance(uint256)",
		label="buggy_43.sol_iFactory_getInstance(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[224]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	132	[contract_name=iFactory,
		function_fullname="getInstances()",
		label="buggy_43.sol_iFactory_getInstances()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[225]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	133	[contract_name=iFactory,
		function_fullname="getPaginatedInstances(uint256,uint256)",
		label="buggy_43.sol_iFactory_getPaginatedInstances(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[226]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	134	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	135	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
out = new bytes(34)

IRs:
TMP_87 = new bytes(34)
out(bytes) := TMP_87(bytes)",
		node_expression="out = new bytes(34)",
		node_info_vulnerabilities=None,
		node_irs="TMP_87 = new bytes(34)
out(bytes) := TMP_87(bytes)",
		node_source_code_lines="[156]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	134 -> 135	[key=0,
		edge_type=next,
		label=Next];
	136	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[0] = bytes1(multihash.hashFunction)

IRs:
REF_29(bytes1) -> out[0]
REF_30(uint8) -> multihash.hashFunction
\
TMP_88 = CONVERT REF_30 to bytes1
REF_29 (->out) := TMP_88(bytes1)",
		node_expression="out[0] = bytes1(multihash.hashFunction)",
		node_info_vulnerabilities=None,
		node_irs="REF_29(bytes1) -> out[0]
REF_30(uint8) -> multihash.hashFunction
TMP_88 = CONVERT REF_30 to bytes1
REF_29 (->out) := TMP_88(bytes1)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	135 -> 136	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[1] = bytes1(multihash.digestSize)

IRs:
REF_31(bytes1) -> out[1]
REF_32(uint8) -> multihash.digestSize
\
TMP_89 = CONVERT REF_32 to bytes1
REF_31 (->out) := TMP_89(bytes1)",
		node_expression="out[1] = bytes1(multihash.digestSize)",
		node_info_vulnerabilities=None,
		node_irs="REF_31(bytes1) -> out[1]
REF_32(uint8) -> multihash.digestSize
TMP_89 = CONVERT REF_32 to bytes1
REF_31 (->out) := TMP_89(bytes1)",
		node_source_code_lines="[159]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	141	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i = 0

IRs:
i(uint8) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint8) := 0(uint256)",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	138 -> 141	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164]",
		node_type=BEGIN_LOOP,
		source_file="buggy_43.sol"];
	142	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < 32

IRs:
TMP_90(bool) = i < 32
CONDITION TMP_90",
		node_expression="i < 32",
		node_info_vulnerabilities=None,
		node_irs="TMP_90(bool) = i < 32
CONDITION TMP_90",
		node_source_code_lines="[162]",
		node_type=IF_LOOP,
		source_file="buggy_43.sol"];
	139 -> 142	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164]",
		node_type=END_LOOP,
		source_file="buggy_43.sol"];
	145	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: RETURN

EXPRESSION:
out

IRs:
RETURN out",
		node_expression=out,
		node_info_vulnerabilities=None,
		node_irs="RETURN out",
		node_source_code_lines="[166]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	140 -> 145	[key=0,
		edge_type=next,
		label=Next];
	141 -> 139	[key=0,
		edge_type=next,
		label=Next];
	142 -> 140	[key=0,
		edge_type=if_false,
		label=False];
	143	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[i + 2] = multihash.hash[i]

IRs:
TMP_91(uint8) = i + 2
REF_33(None) -> out[TMP_91]
REF_34(\
bytes32) -> multihash.hash
REF_35(None) -> REF_34[i]
REF_33 (->out) := REF_35(None)",
		node_expression="out[i + 2] = multihash.hash[i]",
		node_info_vulnerabilities=None,
		node_irs="TMP_91(uint8) = i + 2
REF_33(None) -> out[TMP_91]
REF_34(bytes32) -> multihash.hash
REF_35(None) -> REF_34[i]
REF_33 (->out) := \
REF_35(None)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	142 -> 143	[key=0,
		edge_type=if_true,
		label=True];
	144	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_92(uint8) := i(uint8)
i(uint8) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_92(uint8) := i(uint8)
i(uint8) = i + 1",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	144 -> 142	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=ProofHash,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="buggy_43.sol_ProofHash__combineMultiHash(MultiHashWrapper.MultiHash)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	146 -> 134	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=ProofHash,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[168, 169, 170, 171]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	148	[contract_name=ProofHash,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_93(bool) = tx.origin == owner_txorigin38
\
TMP_94(None) = SOLIDITY_CALL require(bool)(TMP_93)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_93(bool) = tx.origin == owner_txorigin38
TMP_94(None) = SOLIDITY_CALL require(bool)(TMP_93)",
		node_source_code_lines="[169]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	147 -> 148	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=ProofHash,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_95 = CONVERT this to address
REF_37 -> BALANCE \
TMP_95
Transfer dest:_recipient value:REF_37",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_95 = CONVERT this to address
REF_37 -> BALANCE TMP_95
Transfer dest:_recipient value:REF_37",
		node_source_code_lines="[170]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	148 -> 149	[key=0,
		edge_type=next,
		label=Next];
	150	[contract_name=ProofHash,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_43.sol_ProofHash_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[168, 169, 170, 171]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	150 -> 147	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=ProofHash,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	152	[contract_name=ProofHash,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(source.length == 34,length of source must be 34)

IRs:
REF_38 -> LENGTH \
source
TMP_97(bool) = REF_38 == 34
TMP_98(None) = SOLIDITY_CALL require(bool,string)(TMP_97,length of source must be 34)",
		node_expression="require(bool,string)(source.length == 34,length of source must be 34)",
		node_info_vulnerabilities=None,
		node_irs="REF_38 -> LENGTH source
TMP_97(bool) = REF_38 == 34
TMP_98(None) = SOLIDITY_CALL require(bool,string)(TMP_97,length of source must \
be 34)",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	151 -> 152	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=ProofHash,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
hashFunction = uint8(source[0])

IRs:
REF_39(None) -> source[0]
TMP_99 = CONVERT REF_39 to \
uint8
hashFunction(uint8) := TMP_99(uint8)",
		node_expression="hashFunction = uint8(source[0])",
		node_info_vulnerabilities=None,
		node_irs="REF_39(None) -> source[0]
TMP_99 = CONVERT REF_39 to uint8
hashFunction(uint8) := TMP_99(uint8)",
		node_source_code_lines="[181]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	152 -> 153	[key=0,
		edge_type=next,
		label=Next];
	154	[contract_name=ProofHash,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
digestSize = uint8(source[1])

IRs:
REF_40(None) -> source[1]
TMP_100 = CONVERT REF_40 to uint8
\
digestSize(uint8) := TMP_100(uint8)",
		node_expression="digestSize = uint8(source[1])",
		node_info_vulnerabilities=None,
		node_irs="REF_40(None) -> source[1]
TMP_100 = CONVERT REF_40 to uint8
digestSize(uint8) := TMP_100(uint8)",
		node_source_code_lines="[182]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=ProofHash,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[183]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=ProofHash,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[185, 186, 187, 188, 189]",
		node_type="INLINE ASM",
		source_file="buggy_43.sol"];
	155 -> 156	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=ProofHash,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: RETURN

EXPRESSION:
(MultiHash(hashFunction,digestSize,hash))

IRs:
TMP_101 = new MultiHash(hashFunction,digestSize,hash)
\
RETURN TMP_101",
		node_expression="(MultiHash(hashFunction,digestSize,hash))",
		node_info_vulnerabilities=None,
		node_irs="TMP_101 = new MultiHash(hashFunction,digestSize,hash)
RETURN TMP_101",
		node_source_code_lines="[189, 190, 191, 192, 193]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	156 -> 157	[key=0,
		edge_type=next,
		label=Next];
	158	[contract_name=ProofHash,
		function_fullname="_splitMultiHash(bytes)",
		label="buggy_43.sol_ProofHash__splitMultiHash(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	158 -> 151	[key=0,
		edge_type=next,
		label=Next];
	159	[contract_name=ProofHash,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[195, 196, 197]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	160	[contract_name=ProofHash,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_102(bool) = tx.origin == owner_txorigin4
\
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_102(bool) = tx.origin == owner_txorigin4
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_source_code_lines="[196]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=ProofHash,
		function_fullname="bug_txorigin4(address)",
		label="buggy_43.sol_ProofHash_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[195, 196, 197]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	161 -> 159	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[233, 234, 235, 236]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	163	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_104(bool) = tx.origin == owner_txorigin11
\
TMP_105(None) = SOLIDITY_CALL require(bool)(TMP_104)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_104(bool) = tx.origin == owner_txorigin11
TMP_105(None) = SOLIDITY_CALL require(bool)(TMP_104)",
		node_source_code_lines="[234]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	162 -> 163	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_41(None) -> to.call
REF_42(None) -> REF_41.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_41(None) -> to.call
REF_42(None) -> REF_41.value",
		node_source_code_lines="[235]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_43.sol_ProofHash_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[233, 234, 235, 236]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	165 -> 162	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[239, 240, 241, 242]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	167	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_107(bool) = tx.origin == owner_txorigin31
\
TMP_108(None) = SOLIDITY_CALL require(bool)(TMP_107)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_107(bool) = tx.origin == owner_txorigin31
TMP_108(None) = SOLIDITY_CALL require(bool)(TMP_107)",
		node_source_code_lines="[240]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_43(None) -> to.call
REF_44(None) -> REF_43.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_43(None) -> to.call
REF_44(None) -> REF_43.value",
		node_source_code_lines="[241]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	167 -> 168	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_43.sol_ProofHash_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[239, 240, 241, 242]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	169 -> 166	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=ProofHash,
		function_fullname="_setProofHash(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	171	[contract_name=ProofHash,
		function_fullname="_setProofHash(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_proofHash = MultiHashWrapper._splitMultiHash(proofHash)

IRs:
TMP_110(MultiHashWrapper.MultiHash) = \
INTERNAL_CALL, MultiHashWrapper._splitMultiHash(bytes)(proofHash)
_proofHash(MultiHashWrapper.MultiHash) := TMP_110(MultiHashWrapper.MultiHash)",
		node_expression="_proofHash = MultiHashWrapper._splitMultiHash(proofHash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_110(MultiHashWrapper.MultiHash) = INTERNAL_CALL, MultiHashWrapper._splitMultiHash(bytes)(proofHash)
_proofHash(MultiHashWrapper.MultiHash) := \
TMP_110(MultiHashWrapper.MultiHash)",
		node_source_code_lines="[248]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	170 -> 171	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=ProofHash,
		function_fullname="_setProofHash(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ProofHashSet(msg.sender,proofHash)

IRs:
Emit ProofHashSet(msg.sender.proofHash)",
		node_expression="ProofHashSet(msg.sender,proofHash)",
		node_info_vulnerabilities=None,
		node_irs="Emit ProofHashSet(msg.sender.proofHash)",
		node_source_code_lines="[249]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	171 -> 172	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=ProofHash,
		function_fullname="_setProofHash(bytes)",
		label="buggy_43.sol_ProofHash__setProofHash(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	173 -> 170	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253, 254]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	175	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_112(bool) = tx.origin == owner_txorigin7
\
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_112(bool) = tx.origin == owner_txorigin7
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)",
		node_source_code_lines="[252]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	174 -> 175	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_46(None) -> to.call
REF_47(None) -> REF_46.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_46(None) -> to.call
REF_47(None) -> REF_46.value",
		node_source_code_lines="[253]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	175 -> 176	[key=0,
		edge_type=next,
		label=Next];
	177	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_43.sol_ProofHash_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253, 254]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	177 -> 174	[key=0,
		edge_type=next,
		label=Next];
	178	[contract_name=ProofHash,
		function_fullname="getProofHash()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[258, 259, 260]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	179	[contract_name=ProofHash,
		function_fullname="getProofHash()",
		label="Node Type: EXPRESSION

EXPRESSION:
proofHash = MultiHashWrapper._combineMultiHash(_proofHash)

IRs:
TMP_115(bytes) = INTERNAL_CALL, \
MultiHashWrapper._combineMultiHash(MultiHashWrapper.MultiHash)(_proofHash)
proofHash(bytes) := TMP_115(bytes)",
		node_expression="proofHash = MultiHashWrapper._combineMultiHash(_proofHash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_115(bytes) = INTERNAL_CALL, MultiHashWrapper._combineMultiHash(MultiHashWrapper.MultiHash)(_proofHash)
proofHash(bytes) := TMP_\
115(bytes)",
		node_source_code_lines="[259]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	178 -> 179	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=ProofHash,
		function_fullname="getProofHash()",
		label="buggy_43.sol_ProofHash_getProofHash()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[258, 259, 260]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	180 -> 178	[key=0,
		edge_type=next,
		label=Next];
	181	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[261, 262, 263, 264]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	182	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_116(bool) = tx.origin == owner_txorigin23
\
TMP_117(None) = SOLIDITY_CALL require(bool)(TMP_116)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_116(bool) = tx.origin == owner_txorigin23
TMP_117(None) = SOLIDITY_CALL require(bool)(TMP_116)",
		node_source_code_lines="[262]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	181 -> 182	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_49(None) -> to.call
REF_50(None) -> REF_49.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_49(None) -> to.call
REF_50(None) -> REF_49.value",
		node_source_code_lines="[263]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	182 -> 183	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=ProofHash,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_43.sol_ProofHash_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[261, 262, 263, 264]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	184 -> 181	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=Template,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[272, 273, 274, 275]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	186	[contract_name=Template,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_119(bool) = tx.origin == owner_txorigin1
\
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_119(bool) = tx.origin == owner_txorigin1
TMP_120(None) = SOLIDITY_CALL require(bool)(TMP_119)",
		node_source_code_lines="[273]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	185 -> 186	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=Template,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[274]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	186 -> 187	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=Template,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_43.sol_Template_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[272, 273, 274, 275]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	188 -> 185	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=Template,
		function_fullname="getCreator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	190	[contract_name=Template,
		function_fullname="getCreator()",
		label="Node Type: EXPRESSION

EXPRESSION:
creator = iFactory(_factory).getInstanceCreator(address(this))

IRs:
TMP_122 = CONVERT _factory \
to iFactory
TMP_123 = CONVERT this to address
TMP_124(address) = HIGH_LEVEL_CALL, dest:TMP_122(iFactory), function:getInstanceCreator, \
arguments:['TMP_123']  
creator(address) := TMP_124(address)",
		node_expression="creator = iFactory(_factory).getInstanceCreator(address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_122 = CONVERT _factory to iFactory
TMP_123 = CONVERT this to address
TMP_124(address) = HIGH_LEVEL_CALL, dest:TMP_122(iFactory), \
function:getInstanceCreator, arguments:['TMP_123']  
creator(address) := TMP_124(address)",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	189 -> 190	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=Template,
		function_fullname="getCreator()",
		label="buggy_43.sol_Template_getCreator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	191 -> 189	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=Template,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	193	[contract_name=Template,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_125(bool) = tx.origin == owner_txorigin14
\
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_125(bool) = tx.origin == owner_txorigin14
TMP_126(None) = SOLIDITY_CALL require(bool)(TMP_125)",
		node_source_code_lines="[298]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	192 -> 193	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=Template,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_127 = CONVERT this to address
REF_54 -> \
BALANCE TMP_127
Transfer dest:_recipient value:REF_54",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_127 = CONVERT this to address
REF_54 -> BALANCE TMP_127
Transfer dest:_recipient value:REF_54",
		node_source_code_lines="[299]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=Template,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_43.sol_Template_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	195 -> 192	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=Template,
		function_fullname="isCreator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	197	[contract_name=Template,
		function_fullname="isCreator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
ok = (caller == getCreator())

IRs:
TMP_129(address) = INTERNAL_CALL, Template.getCreator()()
\
TMP_130(bool) = caller == TMP_129
ok(bool) := TMP_130(bool)",
		node_expression="ok = (caller == getCreator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_129(address) = INTERNAL_CALL, Template.getCreator()()
TMP_130(bool) = caller == TMP_129
ok(bool) := TMP_130(bool)",
		node_source_code_lines="[303]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	196 -> 197	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=Template,
		function_fullname="isCreator(address)",
		label="buggy_43.sol_Template_isCreator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	198 -> 196	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=Template,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[305, 306, 307, 308]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	200	[contract_name=Template,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_131(bool) = tx.origin == owner_txorigin30
\
TMP_132(None) = SOLIDITY_CALL require(bool)(TMP_131)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_131(bool) = tx.origin == owner_txorigin30
TMP_132(None) = SOLIDITY_CALL require(bool)(TMP_131)",
		node_source_code_lines="[306]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	199 -> 200	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=Template,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_133 = CONVERT this to address
REF_56 -> \
BALANCE TMP_133
Transfer dest:_recipient value:REF_56",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_133 = CONVERT this to address
REF_56 -> BALANCE TMP_133
Transfer dest:_recipient value:REF_56",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	200 -> 201	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=Template,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_43.sol_Template_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[305, 306, 307, 308]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	202 -> 199	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=Template,
		function_fullname="getFactory()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[310, 311, 312]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	204	[contract_name=Template,
		function_fullname="getFactory()",
		label="Node Type: EXPRESSION

EXPRESSION:
factory = _factory

IRs:
factory(address) := _factory(address)",
		node_expression="factory = _factory",
		node_info_vulnerabilities=None,
		node_irs="factory(address) := _factory(address)",
		node_source_code_lines="[311]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	203 -> 204	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=Template,
		function_fullname="getFactory()",
		label="buggy_43.sol_Template_getFactory()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[310, 311, 312]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	205 -> 203	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=Template,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	207	[contract_name=Template,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_135(bool) = tx.origin == owner_txorigin8
\
TMP_136(None) = SOLIDITY_CALL require(bool)(TMP_135)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_135(bool) = tx.origin == owner_txorigin8
TMP_136(None) = SOLIDITY_CALL require(bool)(TMP_135)",
		node_source_code_lines="[314]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=Template,
		function_fullname="bug_txorigin8(address)",
		label="buggy_43.sol_Template_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	208 -> 206	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[280, 281, 282, 283, 284, 285, 286, 287, 288, 289]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	210	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: EXPRESSION

EXPRESSION:
_factory = msg.sender

IRs:
_factory(address) := msg.sender(address)",
		node_expression="_factory = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="_factory(address) := msg.sender(address)",
		node_source_code_lines="[282]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	209 -> 210	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[285]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	210 -> 211	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287]",
		node_type="INLINE ASM",
		source_file="buggy_43.sol"];
	211 -> 212	[key=0,
		edge_type=next,
		label=Next];
	213	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(codeSize == 0,must be called within contract constructor)

IRs:
TMP_137(\
bool) = codeSize == 0
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,must be called within contract constructor)",
		node_expression="require(bool,string)(codeSize == 0,must be called within contract constructor)",
		node_info_vulnerabilities=None,
		node_irs="TMP_137(bool) = codeSize == 0
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,must be called within contract constructor)",
		node_source_code_lines="[287]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	212 -> 213	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[288]",
		node_type=_,
		source_file="buggy_43.sol"];
	213 -> 214	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=Template,
		function_fullname="initializeTemplate()",
		label="buggy_43.sol_Template_initializeTemplate()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[280, 281, 282, 283, 284, 285, 286, 287, 288, 289]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	215 -> 209	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=Post,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[272, 273, 274, 275]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	217	[contract_name=Post,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_139(bool) = tx.origin == owner_txorigin1
\
TMP_140(None) = SOLIDITY_CALL require(bool)(TMP_139)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_139(bool) = tx.origin == owner_txorigin1
TMP_140(None) = SOLIDITY_CALL require(bool)(TMP_139)",
		node_source_code_lines="[273]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	216 -> 217	[key=0,
		edge_type=next,
		label=Next];
	218	[contract_name=Post,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[274]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	217 -> 218	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=Post,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_43.sol_Post_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[272, 273, 274, 275]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	219 -> 216	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=Post,
		function_fullname="getCreator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	221	[contract_name=Post,
		function_fullname="getCreator()",
		label="Node Type: EXPRESSION

EXPRESSION:
creator = iFactory(_factory).getInstanceCreator(address(this))

IRs:
TMP_142 = CONVERT _factory \
to iFactory
TMP_143 = CONVERT this to address
TMP_144(address) = HIGH_LEVEL_CALL, dest:TMP_142(iFactory), function:getInstanceCreator, \
arguments:['TMP_143']  
creator(address) := TMP_144(address)",
		node_expression="creator = iFactory(_factory).getInstanceCreator(address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_142 = CONVERT _factory to iFactory
TMP_143 = CONVERT this to address
TMP_144(address) = HIGH_LEVEL_CALL, dest:TMP_142(iFactory), \
function:getInstanceCreator, arguments:['TMP_143']  
creator(address) := TMP_144(address)",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=Post,
		function_fullname="getCreator()",
		label="buggy_43.sol_Post_getCreator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[293, 294, 295, 296]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	222 -> 220	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=Post,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	224	[contract_name=Post,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_145(bool) = tx.origin == owner_txorigin14
\
TMP_146(None) = SOLIDITY_CALL require(bool)(TMP_145)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_145(bool) = tx.origin == owner_txorigin14
TMP_146(None) = SOLIDITY_CALL require(bool)(TMP_145)",
		node_source_code_lines="[298]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	223 -> 224	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=Post,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_147 = CONVERT this to address
REF_60 -> \
BALANCE TMP_147
Transfer dest:_recipient value:REF_60",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_147 = CONVERT this to address
REF_60 -> BALANCE TMP_147
Transfer dest:_recipient value:REF_60",
		node_source_code_lines="[299]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	224 -> 225	[key=0,
		edge_type=next,
		label=Next];
	226	[contract_name=Post,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_43.sol_Post_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	226 -> 223	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=Post,
		function_fullname="isCreator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	228	[contract_name=Post,
		function_fullname="isCreator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
ok = (caller == getCreator())

IRs:
TMP_149(address) = INTERNAL_CALL, Template.getCreator()()
\
TMP_150(bool) = caller == TMP_149
ok(bool) := TMP_150(bool)",
		node_expression="ok = (caller == getCreator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_149(address) = INTERNAL_CALL, Template.getCreator()()
TMP_150(bool) = caller == TMP_149
ok(bool) := TMP_150(bool)",
		node_source_code_lines="[303]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	227 -> 228	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=Post,
		function_fullname="isCreator(address)",
		label="buggy_43.sol_Post_isCreator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	229 -> 227	[key=0,
		edge_type=next,
		label=Next];
	230	[contract_name=Post,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[305, 306, 307, 308]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	231	[contract_name=Post,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_151(bool) = tx.origin == owner_txorigin30
\
TMP_152(None) = SOLIDITY_CALL require(bool)(TMP_151)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_151(bool) = tx.origin == owner_txorigin30
TMP_152(None) = SOLIDITY_CALL require(bool)(TMP_151)",
		node_source_code_lines="[306]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	230 -> 231	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=Post,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_153 = CONVERT this to address
REF_62 -> \
BALANCE TMP_153
Transfer dest:_recipient value:REF_62",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_153 = CONVERT this to address
REF_62 -> BALANCE TMP_153
Transfer dest:_recipient value:REF_62",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=Post,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_43.sol_Post_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[305, 306, 307, 308]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	233 -> 230	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=Post,
		function_fullname="getFactory()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[310, 311, 312]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	235	[contract_name=Post,
		function_fullname="getFactory()",
		label="Node Type: EXPRESSION

EXPRESSION:
factory = _factory

IRs:
factory(address) := _factory(address)",
		node_expression="factory = _factory",
		node_info_vulnerabilities=None,
		node_irs="factory(address) := _factory(address)",
		node_source_code_lines="[311]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	234 -> 235	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=Post,
		function_fullname="getFactory()",
		label="buggy_43.sol_Post_getFactory()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[310, 311, 312]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	236 -> 234	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=Post,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	238	[contract_name=Post,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_155(bool) = tx.origin == owner_txorigin8
\
TMP_156(None) = SOLIDITY_CALL require(bool)(TMP_155)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_155(bool) = tx.origin == owner_txorigin8
TMP_156(None) = SOLIDITY_CALL require(bool)(TMP_155)",
		node_source_code_lines="[314]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	237 -> 238	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=Post,
		function_fullname="bug_txorigin8(address)",
		label="buggy_43.sol_Post_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[313, 314, 315]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	239 -> 237	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=Post,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[10, 11, 12, 13]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	241	[contract_name=Post,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_157(bool) = tx.origin == owner_txorigin33
\
TMP_158(None) = SOLIDITY_CALL require(bool)(TMP_157)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_157(bool) = tx.origin == owner_txorigin33
TMP_158(None) = SOLIDITY_CALL require(bool)(TMP_157)",
		node_source_code_lines="[11]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	240 -> 241	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=Post,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[12]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=Post,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_43.sol_Post_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[10, 11, 12, 13]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	243 -> 240	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=Post,
		function_fullname="_setMetadata(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18, 19, 20]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	245	[contract_name=Post,
		function_fullname="_setMetadata(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
MetadataSet(metadata)

IRs:
Emit MetadataSet(metadata)",
		node_expression="MetadataSet(metadata)",
		node_info_vulnerabilities=None,
		node_irs="Emit MetadataSet(metadata)",
		node_source_code_lines="[19]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	244 -> 245	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=Post,
		function_fullname="_setMetadata(bytes)",
		label="buggy_43.sol_Post__setMetadata(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18, 19, 20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	246 -> 244	[key=0,
		edge_type=next,
		label=Next];
	247	[contract_name=Post,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[21, 22, 23, 24]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	248	[contract_name=Post,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_161(bool) = tx.origin == owner_txorigin2
\
TMP_162(None) = SOLIDITY_CALL require(bool)(TMP_161)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_161(bool) = tx.origin == owner_txorigin2
TMP_162(None) = SOLIDITY_CALL require(bool)(TMP_161)",
		node_source_code_lines="[22]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	247 -> 248	[key=0,
		edge_type=next,
		label=Next];
	249	[contract_name=Post,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_163 = CONVERT this to address
REF_65 -> \
BALANCE TMP_163
Transfer dest:_recipient value:REF_65",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_163 = CONVERT this to address
REF_65 -> BALANCE TMP_163
Transfer dest:_recipient value:REF_65",
		node_source_code_lines="[23]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	248 -> 249	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=Post,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_43.sol_Post_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[21, 22, 23, 24]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	250 -> 247	[key=0,
		edge_type=next,
		label=Next];
	251	[contract_name=Post,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[31, 32, 33, 34]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	252	[contract_name=Post,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_165(bool) = tx.origin == owner_txorigin22
\
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_165(bool) = tx.origin == owner_txorigin22
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	251 -> 252	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=Post,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_167 = CONVERT this to address
REF_67 -> \
BALANCE TMP_167
Transfer dest:_recipient value:REF_67",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_167 = CONVERT this to address
REF_67 -> BALANCE TMP_167
Transfer dest:_recipient value:REF_67",
		node_source_code_lines="[33]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=Post,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_43.sol_Post_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[31, 32, 33, 34]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	254 -> 251	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=Post,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[36, 37, 38]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	256	[contract_name=Post,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_169(bool) = tx.origin == owner_txorigin12
\
TMP_170(None) = SOLIDITY_CALL require(bool)(TMP_169)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_169(bool) = tx.origin == owner_txorigin12
TMP_170(None) = SOLIDITY_CALL require(bool)(TMP_169)",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	255 -> 256	[key=0,
		edge_type=next,
		label=Next];
	257	[contract_name=Post,
		function_fullname="bug_txorigin12(address)",
		label="buggy_43.sol_Post_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[36, 37, 38]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	257 -> 255	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=Post,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	259	[contract_name=Post,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_171(bool) = tx.origin == owner_txorigin27
\
TMP_172(None) = SOLIDITY_CALL require(bool)(TMP_171)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_171(bool) = tx.origin == owner_txorigin27
TMP_172(None) = SOLIDITY_CALL require(bool)(TMP_171)",
		node_source_code_lines="[42]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	258 -> 259	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=Post,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_68(None) -> to.call
REF_69(None) -> REF_68.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_68(None) -> to.call
REF_69(None) -> REF_68.value",
		node_source_code_lines="[43]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	259 -> 260	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=Post,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_43.sol_Post_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	261 -> 258	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=Post,
		function_fullname="_setOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52, 53]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	263	[contract_name=Post,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_operator != operator,cannot set same operator)

IRs:
TMP_174(bool) = _operator != \
operator
TMP_175(None) = SOLIDITY_CALL require(bool,string)(TMP_174,cannot set same operator)",
		node_expression="require(bool,string)(_operator != operator,cannot set same operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_174(bool) = _operator != operator
TMP_175(None) = SOLIDITY_CALL require(bool,string)(TMP_174,cannot set same operator)",
		node_source_code_lines="[50]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	262 -> 263	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=Post,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_operator = operator

IRs:
_operator(address) := operator(address)",
		node_expression="_operator = operator",
		node_info_vulnerabilities=None,
		node_irs="_operator(address) := operator(address)",
		node_source_code_lines="[51]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	263 -> 264	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=Post,
		function_fullname="_setOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(operator,hasActiveOperator())

IRs:
TMP_176(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
\
Emit OperatorUpdated(operator.TMP_176)",
		node_expression="OperatorUpdated(operator,hasActiveOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_176(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
Emit OperatorUpdated(operator.TMP_176)",
		node_source_code_lines="[52]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	264 -> 265	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=Post,
		function_fullname="_setOperator(address)",
		label="buggy_43.sol_Post__setOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[49, 50, 51, 52, 53]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	266 -> 262	[key=0,
		edge_type=next,
		label=Next];
	267	[contract_name=Post,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	268	[contract_name=Post,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_178(bool) = tx.origin == owner_txorigin17
\
TMP_179(None) = SOLIDITY_CALL require(bool)(TMP_178)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_178(bool) = tx.origin == owner_txorigin17
TMP_179(None) = SOLIDITY_CALL require(bool)(TMP_178)",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=Post,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	268 -> 269	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=Post,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_43.sol_Post_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	270 -> 267	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=Post,
		function_fullname="_transferOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	272	[contract_name=Post,
		function_fullname="_transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_operator != address(0),operator not set)

IRs:
TMP_181 = CONVERT 0 to address
\
TMP_182(bool) = _operator != TMP_181
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,operator not set)",
		node_expression="require(bool,string)(_operator != address(0),operator not set)",
		node_info_vulnerabilities=None,
		node_irs="TMP_181 = CONVERT 0 to address
TMP_182(bool) = _operator != TMP_181
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,operator \
not set)",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	271 -> 272	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=Post,
		function_fullname="_transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_setOperator(operator)

IRs:
INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_expression="_setOperator(operator)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_source_code_lines="[62]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	272 -> 273	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=Post,
		function_fullname="_transferOperator(address)",
		label="buggy_43.sol_Post__transferOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	274 -> 271	[key=0,
		edge_type=next,
		label=Next];
	275	[contract_name=Post,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	276	[contract_name=Post,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_185(bool) = tx.origin == owner_txorigin37
\
TMP_186(None) = SOLIDITY_CALL require(bool)(TMP_185)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_185(bool) = tx.origin == owner_txorigin37
TMP_186(None) = SOLIDITY_CALL require(bool)(TMP_185)",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	275 -> 276	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=Post,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[66]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	276 -> 277	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=Post,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_43.sol_Post_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[64, 65, 66, 67]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	278 -> 275	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=Post,
		function_fullname="_renounceOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72, 73, 74]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	280	[contract_name=Post,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(hasActiveOperator(),only when operator active)

IRs:
TMP_188(bool) = INTERNAL_\
CALL, Operated.hasActiveOperator()()
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,only when operator active)",
		node_expression="require(bool,string)(hasActiveOperator(),only when operator active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_188(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,only when \
operator active)",
		node_source_code_lines="[70]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	279 -> 280	[key=0,
		edge_type=next,
		label=Next];
	281	[contract_name=Post,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_operator = address(0)

IRs:
TMP_190 = CONVERT 0 to address
_operator(address) := TMP_190(address)",
		node_expression="_operator = address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_190 = CONVERT 0 to address
_operator(address) := TMP_190(address)",
		node_source_code_lines="[71]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	280 -> 281	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=Post,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = false

IRs:
_status(bool) := False(bool)",
		node_expression="_status = false",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := False(bool)",
		node_source_code_lines="[72]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	281 -> 282	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=Post,
		function_fullname="_renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(address(0),false)

IRs:
TMP_191 = CONVERT 0 to address
Emit OperatorUpdated(TMP_\
191.False)",
		node_expression="OperatorUpdated(address(0),false)",
		node_info_vulnerabilities=None,
		node_irs="TMP_191 = CONVERT 0 to address
Emit OperatorUpdated(TMP_191.False)",
		node_source_code_lines="[73]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	282 -> 283	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=Post,
		function_fullname="_renounceOperator()",
		label="buggy_43.sol_Post__renounceOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72, 73, 74]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	284 -> 279	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=Post,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	286	[contract_name=Post,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_193(bool) = tx.origin == owner_txorigin3
\
TMP_194(None) = SOLIDITY_CALL require(bool)(TMP_193)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_193(bool) = tx.origin == owner_txorigin3
TMP_194(None) = SOLIDITY_CALL require(bool)(TMP_193)",
		node_source_code_lines="[76]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	285 -> 286	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=Post,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_72(None) -> to.call
REF_73(None) -> REF_72.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_72(None) -> to.call
REF_73(None) -> REF_72.value",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	286 -> 287	[key=0,
		edge_type=next,
		label=Next];
	288	[contract_name=Post,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_43.sol_Post_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	288 -> 285	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=Post,
		function_fullname="_activateOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	290	[contract_name=Post,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! hasActiveOperator(),only when operator not active)

IRs:
TMP_196(bool) = \
INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_197 = ! TMP_196 
TMP_198(None) = SOLIDITY_CALL require(bool,string)(TMP_197,only \
when operator not active)",
		node_expression="require(bool,string)(! hasActiveOperator(),only when operator not active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_196(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_197 = ! TMP_196 
TMP_198(None) = SOLIDITY_CALL require(bool,string)(\
TMP_197,only when operator not active)",
		node_source_code_lines="[81]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	289 -> 290	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=Post,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = true

IRs:
_status(bool) := True(bool)",
		node_expression="_status = true",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := True(bool)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	290 -> 291	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=Post,
		function_fullname="_activateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(_operator,true)

IRs:
Emit OperatorUpdated(_operator.True)",
		node_expression="OperatorUpdated(_operator,true)",
		node_info_vulnerabilities=None,
		node_irs="Emit OperatorUpdated(_operator.True)",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	291 -> 292	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=Post,
		function_fullname="_activateOperator()",
		label="buggy_43.sol_Post__activateOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[80, 81, 82, 83, 84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	293 -> 289	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=Post,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	295	[contract_name=Post,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_200(bool) = tx.origin == owner_txorigin9
\
TMP_201(None) = SOLIDITY_CALL require(bool)(TMP_200)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_200(bool) = tx.origin == owner_txorigin9
TMP_201(None) = SOLIDITY_CALL require(bool)(TMP_200)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	294 -> 295	[key=0,
		edge_type=next,
		label=Next];
	296	[contract_name=Post,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[87]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	295 -> 296	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=Post,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_43.sol_Post_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[85, 86, 87, 88]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	297 -> 294	[key=0,
		edge_type=next,
		label=Next];
	298	[contract_name=Post,
		function_fullname="_deactivateOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	299	[contract_name=Post,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(hasActiveOperator(),only when operator active)

IRs:
TMP_203(bool) = INTERNAL_\
CALL, Operated.hasActiveOperator()()
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,only when operator active)",
		node_expression="require(bool,string)(hasActiveOperator(),only when operator active)",
		node_info_vulnerabilities=None,
		node_irs="TMP_203(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,only when \
operator active)",
		node_source_code_lines="[91]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	298 -> 299	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=Post,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
_status = false

IRs:
_status(bool) := False(bool)",
		node_expression="_status = false",
		node_info_vulnerabilities=None,
		node_irs="_status(bool) := False(bool)",
		node_source_code_lines="[92]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	299 -> 300	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=Post,
		function_fullname="_deactivateOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
OperatorUpdated(_operator,false)

IRs:
Emit OperatorUpdated(_operator.False)",
		node_expression="OperatorUpdated(_operator,false)",
		node_info_vulnerabilities=None,
		node_irs="Emit OperatorUpdated(_operator.False)",
		node_source_code_lines="[93]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	300 -> 301	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=Post,
		function_fullname="_deactivateOperator()",
		label="buggy_43.sol_Post__deactivateOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93, 94]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	302 -> 298	[key=0,
		edge_type=next,
		label=Next];
	303	[contract_name=Post,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	304	[contract_name=Post,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_206(bool) = tx.origin == owner_txorigin25
\
TMP_207(None) = SOLIDITY_CALL require(bool)(TMP_206)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_206(bool) = tx.origin == owner_txorigin25
TMP_207(None) = SOLIDITY_CALL require(bool)(TMP_206)",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	303 -> 304	[key=0,
		edge_type=next,
		label=Next];
	305	[contract_name=Post,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[97]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	304 -> 305	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=Post,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_43.sol_Post_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[95, 96, 97, 98]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	306 -> 303	[key=0,
		edge_type=next,
		label=Next];
	307	[contract_name=Post,
		function_fullname="getOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[102, 103, 104]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	308	[contract_name=Post,
		function_fullname="getOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
operator = _operator

IRs:
operator(address) := _operator(address)",
		node_expression="operator = _operator",
		node_info_vulnerabilities=None,
		node_irs="operator(address) := _operator(address)",
		node_source_code_lines="[103]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=Post,
		function_fullname="getOperator()",
		label="buggy_43.sol_Post_getOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[102, 103, 104]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	309 -> 307	[key=0,
		edge_type=next,
		label=Next];
	310	[contract_name=Post,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	311	[contract_name=Post,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_209(bool) = tx.origin == owner_txorigin19
\
TMP_210(None) = SOLIDITY_CALL require(bool)(TMP_209)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_209(bool) = tx.origin == owner_txorigin19
TMP_210(None) = SOLIDITY_CALL require(bool)(TMP_209)",
		node_source_code_lines="[106]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	310 -> 311	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=Post,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_76(None) -> to.call
REF_77(None) -> REF_76.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_76(None) -> to.call
REF_77(None) -> REF_76.value",
		node_source_code_lines="[107]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	311 -> 312	[key=0,
		edge_type=next,
		label=Next];
	313	[contract_name=Post,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_43.sol_Post_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	313 -> 310	[key=0,
		edge_type=next,
		label=Next];
	314	[contract_name=Post,
		function_fullname="isOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	315	[contract_name=Post,
		function_fullname="isOperator(address)",
		label="Node Type: RETURN

EXPRESSION:
(caller == getOperator())

IRs:
TMP_212(address) = INTERNAL_CALL, Operated.getOperator()()
TMP_213(\
bool) = caller == TMP_212
RETURN TMP_213",
		node_expression="(caller == getOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_212(address) = INTERNAL_CALL, Operated.getOperator()()
TMP_213(bool) = caller == TMP_212
RETURN TMP_213",
		node_source_code_lines="[111]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=Post,
		function_fullname="isOperator(address)",
		label="buggy_43.sol_Post_isOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[110, 111, 112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	316 -> 314	[key=0,
		edge_type=next,
		label=Next];
	317	[contract_name=Post,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	318	[contract_name=Post,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_214(bool) = tx.origin == owner_txorigin26
\
TMP_215(None) = SOLIDITY_CALL require(bool)(TMP_214)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_214(bool) = tx.origin == owner_txorigin26
TMP_215(None) = SOLIDITY_CALL require(bool)(TMP_214)",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	317 -> 318	[key=0,
		edge_type=next,
		label=Next];
	319	[contract_name=Post,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_216 = CONVERT this to address
REF_79 -> \
BALANCE TMP_216
Transfer dest:_recipient value:REF_79",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_216 = CONVERT this to address
REF_79 -> BALANCE TMP_216
Transfer dest:_recipient value:REF_79",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	318 -> 319	[key=0,
		edge_type=next,
		label=Next];
	320	[contract_name=Post,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_43.sol_Post_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	320 -> 317	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=Post,
		function_fullname="hasActiveOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	322	[contract_name=Post,
		function_fullname="hasActiveOperator()",
		label="Node Type: RETURN

EXPRESSION:
_status

IRs:
RETURN _status",
		node_expression=_status,
		node_info_vulnerabilities=None,
		node_irs="RETURN _status",
		node_source_code_lines="[119]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	321 -> 322	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=Post,
		function_fullname="hasActiveOperator()",
		label="buggy_43.sol_Post_hasActiveOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	323 -> 321	[key=0,
		edge_type=next,
		label=Next];
	324	[contract_name=Post,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[121, 122, 123]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	325	[contract_name=Post,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_218(bool) = tx.origin == owner_txorigin20
\
TMP_219(None) = SOLIDITY_CALL require(bool)(TMP_218)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_218(bool) = tx.origin == owner_txorigin20
TMP_219(None) = SOLIDITY_CALL require(bool)(TMP_218)",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	324 -> 325	[key=0,
		edge_type=next,
		label=Next];
	326	[contract_name=Post,
		function_fullname="bug_txorigin20(address)",
		label="buggy_43.sol_Post_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[121, 122, 123]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	326 -> 324	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=Post,
		function_fullname="isActiveOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[125, 126, 127]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	328	[contract_name=Post,
		function_fullname="isActiveOperator(address)",
		label="Node Type: RETURN

EXPRESSION:
(isOperator(caller) && hasActiveOperator())

IRs:
TMP_220(bool) = INTERNAL_CALL, Operated.isOperator(\
address)(caller)
TMP_221(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_222(bool) = TMP_220 && TMP_221
RETURN TMP_222",
		node_expression="(isOperator(caller) && hasActiveOperator())",
		node_info_vulnerabilities=None,
		node_irs="TMP_220(bool) = INTERNAL_CALL, Operated.isOperator(address)(caller)
TMP_221(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
\
TMP_222(bool) = TMP_220 && TMP_221
RETURN TMP_222",
		node_source_code_lines="[126]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	327 -> 328	[key=0,
		edge_type=next,
		label=Next];
	329	[contract_name=Post,
		function_fullname="isActiveOperator(address)",
		label="buggy_43.sol_Post_isActiveOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[125, 126, 127]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	329 -> 327	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=Post,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[128, 129, 130]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	331	[contract_name=Post,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_223(bool) = tx.origin == owner_txorigin32
\
TMP_224(None) = SOLIDITY_CALL require(bool)(TMP_223)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_223(bool) = tx.origin == owner_txorigin32
TMP_224(None) = SOLIDITY_CALL require(bool)(TMP_223)",
		node_source_code_lines="[129]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	330 -> 331	[key=0,
		edge_type=next,
		label=Next];
	332	[contract_name=Post,
		function_fullname="bug_txorigin32(address)",
		label="buggy_43.sol_Post_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[128, 129, 130]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	332 -> 330	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=Post,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[233, 234, 235, 236]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	334	[contract_name=Post,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_225(bool) = tx.origin == owner_txorigin11
\
TMP_226(None) = SOLIDITY_CALL require(bool)(TMP_225)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_225(bool) = tx.origin == owner_txorigin11
TMP_226(None) = SOLIDITY_CALL require(bool)(TMP_225)",
		node_source_code_lines="[234]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	333 -> 334	[key=0,
		edge_type=next,
		label=Next];
	335	[contract_name=Post,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_80(None) -> to.call
REF_81(None) -> REF_80.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_80(None) -> to.call
REF_81(None) -> REF_80.value",
		node_source_code_lines="[235]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	334 -> 335	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=Post,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_43.sol_Post_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[233, 234, 235, 236]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	336 -> 333	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=Post,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[239, 240, 241, 242]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	338	[contract_name=Post,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_228(bool) = tx.origin == owner_txorigin31
\
TMP_229(None) = SOLIDITY_CALL require(bool)(TMP_228)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_228(bool) = tx.origin == owner_txorigin31
TMP_229(None) = SOLIDITY_CALL require(bool)(TMP_228)",
		node_source_code_lines="[240]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	337 -> 338	[key=0,
		edge_type=next,
		label=Next];
	339	[contract_name=Post,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_82(None) -> to.call
REF_83(None) -> REF_82.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_82(None) -> to.call
REF_83(None) -> REF_82.value",
		node_source_code_lines="[241]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	338 -> 339	[key=0,
		edge_type=next,
		label=Next];
	340	[contract_name=Post,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_43.sol_Post_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[239, 240, 241, 242]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	340 -> 337	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=Post,
		function_fullname="_setProofHash(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	342	[contract_name=Post,
		function_fullname="_setProofHash(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_proofHash = MultiHashWrapper._splitMultiHash(proofHash)

IRs:
TMP_231(MultiHashWrapper.MultiHash) = \
INTERNAL_CALL, MultiHashWrapper._splitMultiHash(bytes)(proofHash)
_proofHash(MultiHashWrapper.MultiHash) := TMP_231(MultiHashWrapper.MultiHash)",
		node_expression="_proofHash = MultiHashWrapper._splitMultiHash(proofHash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_231(MultiHashWrapper.MultiHash) = INTERNAL_CALL, MultiHashWrapper._splitMultiHash(bytes)(proofHash)
_proofHash(MultiHashWrapper.MultiHash) := \
TMP_231(MultiHashWrapper.MultiHash)",
		node_source_code_lines="[248]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	341 -> 342	[key=0,
		edge_type=next,
		label=Next];
	343	[contract_name=Post,
		function_fullname="_setProofHash(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ProofHashSet(msg.sender,proofHash)

IRs:
Emit ProofHashSet(msg.sender.proofHash)",
		node_expression="ProofHashSet(msg.sender,proofHash)",
		node_info_vulnerabilities=None,
		node_irs="Emit ProofHashSet(msg.sender.proofHash)",
		node_source_code_lines="[249]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	342 -> 343	[key=0,
		edge_type=next,
		label=Next];
	344	[contract_name=Post,
		function_fullname="_setProofHash(bytes)",
		label="buggy_43.sol_Post__setProofHash(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[247, 248, 249, 250]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	344 -> 341	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=Post,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253, 254]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	346	[contract_name=Post,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_233(bool) = tx.origin == owner_txorigin7
\
TMP_234(None) = SOLIDITY_CALL require(bool)(TMP_233)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_233(bool) = tx.origin == owner_txorigin7
TMP_234(None) = SOLIDITY_CALL require(bool)(TMP_233)",
		node_source_code_lines="[252]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	345 -> 346	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=Post,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_85(None) -> to.call
REF_86(None) -> REF_85.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_85(None) -> to.call
REF_86(None) -> REF_85.value",
		node_source_code_lines="[253]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	346 -> 347	[key=0,
		edge_type=next,
		label=Next];
	348	[contract_name=Post,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_43.sol_Post_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253, 254]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	348 -> 345	[key=0,
		edge_type=next,
		label=Next];
	349	[contract_name=Post,
		function_fullname="getProofHash()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[258, 259, 260]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	350	[contract_name=Post,
		function_fullname="getProofHash()",
		label="Node Type: EXPRESSION

EXPRESSION:
proofHash = MultiHashWrapper._combineMultiHash(_proofHash)

IRs:
TMP_236(bytes) = INTERNAL_CALL, \
MultiHashWrapper._combineMultiHash(MultiHashWrapper.MultiHash)(_proofHash)
proofHash(bytes) := TMP_236(bytes)",
		node_expression="proofHash = MultiHashWrapper._combineMultiHash(_proofHash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_236(bytes) = INTERNAL_CALL, MultiHashWrapper._combineMultiHash(MultiHashWrapper.MultiHash)(_proofHash)
proofHash(bytes) := TMP_\
236(bytes)",
		node_source_code_lines="[259]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	349 -> 350	[key=0,
		edge_type=next,
		label=Next];
	351	[contract_name=Post,
		function_fullname="getProofHash()",
		label="buggy_43.sol_Post_getProofHash()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[258, 259, 260]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	351 -> 349	[key=0,
		edge_type=next,
		label=Next];
	352	[contract_name=Post,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[261, 262, 263, 264]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	353	[contract_name=Post,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_237(bool) = tx.origin == owner_txorigin23
\
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_237(bool) = tx.origin == owner_txorigin23
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_source_code_lines="[262]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	352 -> 353	[key=0,
		edge_type=next,
		label=Next];
	354	[contract_name=Post,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_88(None) -> to.call
REF_89(None) -> REF_88.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_88(None) -> to.call
REF_89(None) -> REF_88.value",
		node_source_code_lines="[263]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	353 -> 354	[key=0,
		edge_type=next,
		label=Next];
	355	[contract_name=Post,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_43.sol_Post_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[261, 262, 263, 264]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	355 -> 352	[key=0,
		edge_type=next,
		label=Next];
	356	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	357	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
out = new bytes(34)

IRs:
TMP_241 = new bytes(34)
out(bytes) := TMP_241(bytes)",
		node_expression="out = new bytes(34)",
		node_info_vulnerabilities=None,
		node_irs="TMP_241 = new bytes(34)
out(bytes) := TMP_241(bytes)",
		node_source_code_lines="[156]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	356 -> 357	[key=0,
		edge_type=next,
		label=Next];
	358	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[0] = bytes1(multihash.hashFunction)

IRs:
REF_90(bytes1) -> out[0]
REF_91(uint8) -> multihash.hashFunction
\
TMP_242 = CONVERT REF_91 to bytes1
REF_90 (->out) := TMP_242(bytes1)",
		node_expression="out[0] = bytes1(multihash.hashFunction)",
		node_info_vulnerabilities=None,
		node_irs="REF_90(bytes1) -> out[0]
REF_91(uint8) -> multihash.hashFunction
TMP_242 = CONVERT REF_91 to bytes1
REF_90 (->out) := TMP_242(bytes1)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	357 -> 358	[key=0,
		edge_type=next,
		label=Next];
	359	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[1] = bytes1(multihash.digestSize)

IRs:
REF_92(bytes1) -> out[1]
REF_93(uint8) -> multihash.digestSize
\
TMP_243 = CONVERT REF_93 to bytes1
REF_92 (->out) := TMP_243(bytes1)",
		node_expression="out[1] = bytes1(multihash.digestSize)",
		node_info_vulnerabilities=None,
		node_irs="REF_92(bytes1) -> out[1]
REF_93(uint8) -> multihash.digestSize
TMP_243 = CONVERT REF_93 to bytes1
REF_92 (->out) := TMP_243(bytes1)",
		node_source_code_lines="[159]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	358 -> 359	[key=0,
		edge_type=next,
		label=Next];
	360	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	359 -> 360	[key=0,
		edge_type=next,
		label=Next];
	363	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i = 0

IRs:
i(uint8) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint8) := 0(uint256)",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	360 -> 363	[key=0,
		edge_type=next,
		label=Next];
	361	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164]",
		node_type=BEGIN_LOOP,
		source_file="buggy_43.sol"];
	364	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < 32

IRs:
TMP_244(bool) = i < 32
CONDITION TMP_244",
		node_expression="i < 32",
		node_info_vulnerabilities=None,
		node_irs="TMP_244(bool) = i < 32
CONDITION TMP_244",
		node_source_code_lines="[162]",
		node_type=IF_LOOP,
		source_file="buggy_43.sol"];
	361 -> 364	[key=0,
		edge_type=next,
		label=Next];
	362	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[162, 163, 164]",
		node_type=END_LOOP,
		source_file="buggy_43.sol"];
	367	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: RETURN

EXPRESSION:
out

IRs:
RETURN out",
		node_expression=out,
		node_info_vulnerabilities=None,
		node_irs="RETURN out",
		node_source_code_lines="[166]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	362 -> 367	[key=0,
		edge_type=next,
		label=Next];
	363 -> 361	[key=0,
		edge_type=next,
		label=Next];
	364 -> 362	[key=0,
		edge_type=if_false,
		label=False];
	365	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
out[i + 2] = multihash.hash[i]

IRs:
TMP_245(uint8) = i + 2
REF_94(None) -> out[TMP_245]
REF_\
95(bytes32) -> multihash.hash
REF_96(None) -> REF_95[i]
REF_94 (->out) := REF_96(None)",
		node_expression="out[i + 2] = multihash.hash[i]",
		node_info_vulnerabilities=None,
		node_irs="TMP_245(uint8) = i + 2
REF_94(None) -> out[TMP_245]
REF_95(bytes32) -> multihash.hash
REF_96(None) -> REF_95[i]
REF_94 (->out) := \
REF_96(None)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	364 -> 365	[key=0,
		edge_type=if_true,
		label=True];
	366	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_246(uint8) := i(uint8)
i(uint8) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_246(uint8) := i(uint8)
i(uint8) = i + 1",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	365 -> 366	[key=0,
		edge_type=next,
		label=Next];
	366 -> 364	[key=0,
		edge_type=next,
		label=Next];
	368	[contract_name=Post,
		function_fullname="_combineMultiHash(MultiHashWrapper.MultiHash)",
		label="buggy_43.sol_Post__combineMultiHash(MultiHashWrapper.MultiHash)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	368 -> 356	[key=0,
		edge_type=next,
		label=Next];
	369	[contract_name=Post,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[168, 169, 170, 171]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	370	[contract_name=Post,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_247(bool) = tx.origin == owner_txorigin38
\
TMP_248(None) = SOLIDITY_CALL require(bool)(TMP_247)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_247(bool) = tx.origin == owner_txorigin38
TMP_248(None) = SOLIDITY_CALL require(bool)(TMP_247)",
		node_source_code_lines="[169]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	369 -> 370	[key=0,
		edge_type=next,
		label=Next];
	371	[contract_name=Post,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_249 = CONVERT this to address
REF_98 -> \
BALANCE TMP_249
Transfer dest:_recipient value:REF_98",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_249 = CONVERT this to address
REF_98 -> BALANCE TMP_249
Transfer dest:_recipient value:REF_98",
		node_source_code_lines="[170]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	370 -> 371	[key=0,
		edge_type=next,
		label=Next];
	372	[contract_name=Post,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_43.sol_Post_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[168, 169, 170, 171]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	372 -> 369	[key=0,
		edge_type=next,
		label=Next];
	373	[contract_name=Post,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	374	[contract_name=Post,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(source.length == 34,length of source must be 34)

IRs:
REF_99 -> LENGTH \
source
TMP_251(bool) = REF_99 == 34
TMP_252(None) = SOLIDITY_CALL require(bool,string)(TMP_251,length of source must be 34)",
		node_expression="require(bool,string)(source.length == 34,length of source must be 34)",
		node_info_vulnerabilities=None,
		node_irs="REF_99 -> LENGTH source
TMP_251(bool) = REF_99 == 34
TMP_252(None) = SOLIDITY_CALL require(bool,string)(TMP_251,length of source \
must be 34)",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	373 -> 374	[key=0,
		edge_type=next,
		label=Next];
	375	[contract_name=Post,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
hashFunction = uint8(source[0])

IRs:
REF_100(None) -> source[0]
TMP_253 = CONVERT REF_100 \
to uint8
hashFunction(uint8) := TMP_253(uint8)",
		node_expression="hashFunction = uint8(source[0])",
		node_info_vulnerabilities=None,
		node_irs="REF_100(None) -> source[0]
TMP_253 = CONVERT REF_100 to uint8
hashFunction(uint8) := TMP_253(uint8)",
		node_source_code_lines="[181]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	374 -> 375	[key=0,
		edge_type=next,
		label=Next];
	376	[contract_name=Post,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
digestSize = uint8(source[1])

IRs:
REF_101(None) -> source[1]
TMP_254 = CONVERT REF_101 to \
uint8
digestSize(uint8) := TMP_254(uint8)",
		node_expression="digestSize = uint8(source[1])",
		node_info_vulnerabilities=None,
		node_irs="REF_101(None) -> source[1]
TMP_254 = CONVERT REF_101 to uint8
digestSize(uint8) := TMP_254(uint8)",
		node_source_code_lines="[182]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	375 -> 376	[key=0,
		edge_type=next,
		label=Next];
	377	[contract_name=Post,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[183]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	376 -> 377	[key=0,
		edge_type=next,
		label=Next];
	378	[contract_name=Post,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[185, 186, 187, 188, 189]",
		node_type="INLINE ASM",
		source_file="buggy_43.sol"];
	377 -> 378	[key=0,
		edge_type=next,
		label=Next];
	379	[contract_name=Post,
		function_fullname="_splitMultiHash(bytes)",
		label="Node Type: RETURN

EXPRESSION:
(MultiHash(hashFunction,digestSize,hash))

IRs:
TMP_255 = new MultiHash(hashFunction,digestSize,hash)
\
RETURN TMP_255",
		node_expression="(MultiHash(hashFunction,digestSize,hash))",
		node_info_vulnerabilities=None,
		node_irs="TMP_255 = new MultiHash(hashFunction,digestSize,hash)
RETURN TMP_255",
		node_source_code_lines="[189, 190, 191, 192, 193]",
		node_type=RETURN,
		source_file="buggy_43.sol"];
	378 -> 379	[key=0,
		edge_type=next,
		label=Next];
	380	[contract_name=Post,
		function_fullname="_splitMultiHash(bytes)",
		label="buggy_43.sol_Post__splitMultiHash(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	380 -> 373	[key=0,
		edge_type=next,
		label=Next];
	381	[contract_name=Post,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[195, 196, 197]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	382	[contract_name=Post,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_256(bool) = tx.origin == owner_txorigin4
\
TMP_257(None) = SOLIDITY_CALL require(bool)(TMP_256)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_256(bool) = tx.origin == owner_txorigin4
TMP_257(None) = SOLIDITY_CALL require(bool)(TMP_256)",
		node_source_code_lines="[196]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	381 -> 382	[key=0,
		edge_type=next,
		label=Next];
	383	[contract_name=Post,
		function_fullname="bug_txorigin4(address)",
		label="buggy_43.sol_Post_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[195, 196, 197]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	383 -> 381	[key=0,
		edge_type=next,
		label=Next];
	384	[contract_name=Post,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[326, 327, 328, 329]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	385	[contract_name=Post,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_258(bool) = tx.origin == owner_txorigin13
\
TMP_259(None) = SOLIDITY_CALL require(bool)(TMP_258)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_258(bool) = tx.origin == owner_txorigin13
TMP_259(None) = SOLIDITY_CALL require(bool)(TMP_258)",
		node_source_code_lines="[327]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	384 -> 385	[key=0,
		edge_type=next,
		label=Next];
	386	[contract_name=Post,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[328]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	385 -> 386	[key=0,
		edge_type=next,
		label=Next];
	387	[contract_name=Post,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_43.sol_Post_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[326, 327, 328, 329]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	387 -> 384	[key=0,
		edge_type=next,
		label=Next];
	388	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	400	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
initializeTemplate()

IRs:
MODIFIER_CALL, Template.initializeTemplate()()",
		node_expression="initializeTemplate()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Template.initializeTemplate()()",
		node_source_code_lines="[336]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	388 -> 400	[key=0,
		edge_type=next,
		label=Next];
	389	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: IF

EXPRESSION:
multihash.length != 0

IRs:
REF_103 -> LENGTH multihash
TMP_261(bool) = REF_103 != 0
CONDITION TMP_261",
		node_expression="multihash.length != 0",
		node_info_vulnerabilities=None,
		node_irs="REF_103 -> LENGTH multihash
TMP_261(bool) = REF_103 != 0
CONDITION TMP_261",
		node_source_code_lines="[339]",
		node_type=IF,
		source_file="buggy_43.sol"];
	390	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ProofHash._setProofHash(multihash)

IRs:
INTERNAL_CALL, ProofHash._setProofHash(bytes)(multihash)",
		node_expression="ProofHash._setProofHash(multihash)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ProofHash._setProofHash(bytes)(multihash)",
		node_source_code_lines="[340]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	389 -> 390	[key=0,
		edge_type=if_true,
		label=True];
	391	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[339, 340, 341]",
		node_type=END_IF,
		source_file="buggy_43.sol"];
	389 -> 391	[key=0,
		edge_type=if_false,
		label=False];
	390 -> 391	[key=0,
		edge_type=next,
		label=Next];
	392	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: IF

EXPRESSION:
operator != address(0)

IRs:
TMP_263 = CONVERT 0 to address
TMP_264(bool) = operator != TMP_263
CONDITION \
TMP_264",
		node_expression="operator != address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_263 = CONVERT 0 to address
TMP_264(bool) = operator != TMP_263
CONDITION TMP_264",
		node_source_code_lines="[344]",
		node_type=IF,
		source_file="buggy_43.sol"];
	391 -> 392	[key=0,
		edge_type=next,
		label=Next];
	393	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Operated._setOperator(operator)

IRs:
INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_expression="Operated._setOperator(operator)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._setOperator(address)(operator)",
		node_source_code_lines="[345]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	392 -> 393	[key=0,
		edge_type=if_true,
		label=True];
	395	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[344, 345, 346, 347]",
		node_type=END_IF,
		source_file="buggy_43.sol"];
	392 -> 395	[key=0,
		edge_type=if_false,
		label=False];
	394	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Operated._activateOperator()

IRs:
INTERNAL_CALL, Operated._activateOperator()()",
		node_expression="Operated._activateOperator()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._activateOperator()()",
		node_source_code_lines="[346]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	393 -> 394	[key=0,
		edge_type=next,
		label=Next];
	394 -> 395	[key=0,
		edge_type=next,
		label=Next];
	396	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: IF

EXPRESSION:
metadata.length != 0

IRs:
REF_107 -> LENGTH metadata
TMP_267(bool) = REF_107 != 0
CONDITION TMP_267",
		node_expression="metadata.length != 0",
		node_info_vulnerabilities=None,
		node_irs="REF_107 -> LENGTH metadata
TMP_267(bool) = REF_107 != 0
CONDITION TMP_267",
		node_source_code_lines="[350]",
		node_type=IF,
		source_file="buggy_43.sol"];
	395 -> 396	[key=0,
		edge_type=next,
		label=Next];
	397	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
EventMetadata._setMetadata(metadata)

IRs:
INTERNAL_CALL, EventMetadata._setMetadata(bytes)(metadata)",
		node_expression="EventMetadata._setMetadata(metadata)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, EventMetadata._setMetadata(bytes)(metadata)",
		node_source_code_lines="[351]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	396 -> 397	[key=0,
		edge_type=if_true,
		label=True];
	398	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[350, 351, 352]",
		node_type=END_IF,
		source_file="buggy_43.sol"];
	396 -> 398	[key=0,
		edge_type=if_false,
		label=False];
	397 -> 398	[key=0,
		edge_type=next,
		label=Next];
	399	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Initialized(operator,multihash,metadata)

IRs:
Emit Initialized(operator.multihash.metadata)",
		node_expression="Initialized(operator,multihash,metadata)",
		node_info_vulnerabilities=None,
		node_irs="Emit Initialized(operator.multihash.metadata)",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	398 -> 399	[key=0,
		edge_type=next,
		label=Next];
	400 -> 389	[key=0,
		edge_type=next,
		label=Next];
	401	[contract_name=Post,
		function_fullname="initialize(address,bytes,bytes)",
		label="buggy_43.sol_Post_initialize(address,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	401 -> 388	[key=0,
		edge_type=next,
		label=Next];
	402	[contract_name=Post,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[357, 358, 359, 360]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	403	[contract_name=Post,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_271(bool) = tx.origin == owner_txorigin39
\
TMP_272(None) = SOLIDITY_CALL require(bool)(TMP_271)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_271(bool) = tx.origin == owner_txorigin39
TMP_272(None) = SOLIDITY_CALL require(bool)(TMP_271)",
		node_source_code_lines="[358]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	402 -> 403	[key=0,
		edge_type=next,
		label=Next];
	404	[contract_name=Post,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_109(None) -> to.call
REF_110(None) -> REF_109.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_109(None) -> to.call
REF_110(None) -> REF_109.value",
		node_source_code_lines="[359]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	403 -> 404	[key=0,
		edge_type=next,
		label=Next];
	405	[contract_name=Post,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_43.sol_Post_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[357, 358, 359, 360]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	405 -> 402	[key=0,
		edge_type=next,
		label=Next];
	406	[contract_name=Post,
		function_fullname="setMetadata(bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[364, 365, 366, 367, 368, 369, 370]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	407	[contract_name=Post,
		function_fullname="setMetadata(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender),\
only active operator or creator)

IRs:
TMP_274(bool) = INTERNAL_CALL, Template.isCreator(address)(msg.sender)
TMP_275(bool) = INTERNAL_\
CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_276(bool) = TMP_274 || TMP_275
TMP_277(None) = SOLIDITY_CALL require(bool,\
string)(TMP_276,only active operator or creator)",
		node_expression="require(bool,string)(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender),only active operator or creator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_274(bool) = INTERNAL_CALL, Template.isCreator(address)(msg.sender)
TMP_275(bool) = INTERNAL_CALL, Operated.isActiveOperator(\
address)(msg.sender)
TMP_276(bool) = TMP_274 || TMP_275
TMP_277(None) = SOLIDITY_CALL require(bool,string)(TMP_276,only active operator \
or creator)",
		node_source_code_lines="[366]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	406 -> 407	[key=0,
		edge_type=next,
		label=Next];
	408	[contract_name=Post,
		function_fullname="setMetadata(bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
EventMetadata._setMetadata(metadata)

IRs:
INTERNAL_CALL, EventMetadata._setMetadata(bytes)(metadata)",
		node_expression="EventMetadata._setMetadata(metadata)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, EventMetadata._setMetadata(bytes)(metadata)",
		node_source_code_lines="[369]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	407 -> 408	[key=0,
		edge_type=next,
		label=Next];
	409	[contract_name=Post,
		function_fullname="setMetadata(bytes)",
		label="buggy_43.sol_Post_setMetadata(bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[364, 365, 366, 367, 368, 369, 370]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	409 -> 406	[key=0,
		edge_type=next,
		label=Next];
	410	[contract_name=Post,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[371, 372, 373]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	411	[contract_name=Post,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_279(bool) = tx.origin == owner_txorigin36
\
TMP_280(None) = SOLIDITY_CALL require(bool)(TMP_279)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_279(bool) = tx.origin == owner_txorigin36
TMP_280(None) = SOLIDITY_CALL require(bool)(TMP_279)",
		node_source_code_lines="[372]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	410 -> 411	[key=0,
		edge_type=next,
		label=Next];
	412	[contract_name=Post,
		function_fullname="bug_txorigin36(address)",
		label="buggy_43.sol_Post_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[371, 372, 373]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	412 -> 410	[key=0,
		edge_type=next,
		label=Next];
	413	[contract_name=Post,
		function_fullname="transferOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[375, 376, 377, 378, 379, 380, 381]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	414	[contract_name=Post,
		function_fullname="transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(Operated.isActiveOperator(msg.sender),only active operator)

IRs:
TMP_281(\
bool) = INTERNAL_CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_282(None) = SOLIDITY_CALL require(bool,string)(TMP_281,\
only active operator)",
		node_expression="require(bool,string)(Operated.isActiveOperator(msg.sender),only active operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_281(bool) = INTERNAL_CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_282(None) = SOLIDITY_CALL require(bool,string)(\
TMP_281,only active operator)",
		node_source_code_lines="[377]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	413 -> 414	[key=0,
		edge_type=next,
		label=Next];
	415	[contract_name=Post,
		function_fullname="transferOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
Operated._transferOperator(operator)

IRs:
INTERNAL_CALL, Operated._transferOperator(address)(\
operator)",
		node_expression="Operated._transferOperator(operator)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._transferOperator(address)(operator)",
		node_source_code_lines="[380]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	414 -> 415	[key=0,
		edge_type=next,
		label=Next];
	416	[contract_name=Post,
		function_fullname="transferOperator(address)",
		label="buggy_43.sol_Post_transferOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[375, 376, 377, 378, 379, 380, 381]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	416 -> 413	[key=0,
		edge_type=next,
		label=Next];
	417	[contract_name=Post,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[382, 383, 384, 385]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	418	[contract_name=Post,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_284(bool) = tx.origin == owner_txorigin35
\
TMP_285(None) = SOLIDITY_CALL require(bool)(TMP_284)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_284(bool) = tx.origin == owner_txorigin35
TMP_285(None) = SOLIDITY_CALL require(bool)(TMP_284)",
		node_source_code_lines="[383]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	417 -> 418	[key=0,
		edge_type=next,
		label=Next];
	419	[contract_name=Post,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_116(None) -> to.call
REF_117(None) -> REF_116.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="REF_116(None) -> to.call
REF_117(None) -> REF_116.value",
		node_source_code_lines="[384]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	418 -> 419	[key=0,
		edge_type=next,
		label=Next];
	420	[contract_name=Post,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_43.sol_Post_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[382, 383, 384, 385]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	420 -> 417	[key=0,
		edge_type=next,
		label=Next];
	421	[contract_name=Post,
		function_fullname="renounceOperator()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[387, 388, 389, 390, 391, 392, 393]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	422	[contract_name=Post,
		function_fullname="renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(Operated.isActiveOperator(msg.sender),only active operator)

IRs:
TMP_287(\
bool) = INTERNAL_CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_288(None) = SOLIDITY_CALL require(bool,string)(TMP_287,\
only active operator)",
		node_expression="require(bool,string)(Operated.isActiveOperator(msg.sender),only active operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_287(bool) = INTERNAL_CALL, Operated.isActiveOperator(address)(msg.sender)
TMP_288(None) = SOLIDITY_CALL require(bool,string)(\
TMP_287,only active operator)",
		node_source_code_lines="[389]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	421 -> 422	[key=0,
		edge_type=next,
		label=Next];
	423	[contract_name=Post,
		function_fullname="renounceOperator()",
		label="Node Type: EXPRESSION

EXPRESSION:
Operated._renounceOperator()

IRs:
INTERNAL_CALL, Operated._renounceOperator()()",
		node_expression="Operated._renounceOperator()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Operated._renounceOperator()()",
		node_source_code_lines="[392]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	422 -> 423	[key=0,
		edge_type=next,
		label=Next];
	424	[contract_name=Post,
		function_fullname="renounceOperator()",
		label="buggy_43.sol_Post_renounceOperator()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[387, 388, 389, 390, 391, 392, 393]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	424 -> 421	[key=0,
		edge_type=next,
		label=Next];
	425	[contract_name=Post,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[394, 395, 396]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	426	[contract_name=Post,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_290(bool) = tx.origin == owner_txorigin40
\
TMP_291(None) = SOLIDITY_CALL require(bool)(TMP_290)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs="TMP_290(bool) = tx.origin == owner_txorigin40
TMP_291(None) = SOLIDITY_CALL require(bool)(TMP_290)",
		node_source_code_lines="[395]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	425 -> 426	[key=0,
		edge_type=next,
		label=Next];
	427	[contract_name=Post,
		function_fullname="bug_txorigin40(address)",
		label="buggy_43.sol_Post_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 55, 56, 57, 58, 65, 66, 67, 68, 76, 77, \
78, 79, 86, 87, 88, 89, 96, 97, 98, 99, 106, 107, 108, 109, 114, 115, 116, 117, 122, 123, 124, 129, 130, 131, 169, 170, 171, 172, \
196, 197, 198, 233, 234, 235, 236, 239, 240, 241, 242, 251, 252, 253, 254, 261, 262, 263, 264, 272, 273, 274, 275, 297, 298, 299, \
300, 305, 306, 307, 308, 313, 314, 315, 326, 327, 328, 329, 357, 358, 359, 360, 371, 372, 373, 382, 383, 384, 385, 394, 395, 396], '\
category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[394, 395, 396]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	427 -> 425	[key=0,
		edge_type=next,
		label=Next];
	428	[contract_name=Post,
		function_fullname="initializeTemplate()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[280, 281, 282, 283, 284, 285, 286, 287, 288, 289]",
		node_type=ENTRY_POINT,
		source_file="buggy_43.sol"];
	429	[contract_name=Post,
		function_fullname="initializeTemplate()",
		label="Node Type: EXPRESSION

EXPRESSION:
_factory = msg.sender

IRs:
_factory(address) := msg.sender(address)",
		node_expression="_factory = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="_factory(address) := msg.sender(address)",
		node_source_code_lines="[282]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	428 -> 429	[key=0,
		edge_type=next,
		label=Next];
	430	[contract_name=Post,
		function_fullname="initializeTemplate()",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[285]",
		node_type="NEW VARIABLE",
		source_file="buggy_43.sol"];
	429 -> 430	[key=0,
		edge_type=next,
		label=Next];
	431	[contract_name=Post,
		function_fullname="initializeTemplate()",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287]",
		node_type="INLINE ASM",
		source_file="buggy_43.sol"];
	430 -> 431	[key=0,
		edge_type=next,
		label=Next];
	432	[contract_name=Post,
		function_fullname="initializeTemplate()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(codeSize == 0,must be called within contract constructor)

IRs:
TMP_292(\
bool) = codeSize == 0
TMP_293(None) = SOLIDITY_CALL require(bool,string)(TMP_292,must be called within contract constructor)",
		node_expression="require(bool,string)(codeSize == 0,must be called within contract constructor)",
		node_info_vulnerabilities=None,
		node_irs="TMP_292(bool) = codeSize == 0
TMP_293(None) = SOLIDITY_CALL require(bool,string)(TMP_292,must be called within contract constructor)",
		node_source_code_lines="[287]",
		node_type=EXPRESSION,
		source_file="buggy_43.sol"];
	431 -> 432	[key=0,
		edge_type=next,
		label=Next];
	433	[contract_name=Post,
		function_fullname="initializeTemplate()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[288]",
		node_type=_,
		source_file="buggy_43.sol"];
	432 -> 433	[key=0,
		edge_type=next,
		label=Next];
	434	[contract_name=Post,
		function_fullname="initializeTemplate()",
		label="buggy_43.sol_Post_initializeTemplate()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[280, 281, 282, 283, 284, 285, 286, 287, 288, 289]",
		node_type=FUNCTION_NAME,
		source_file="buggy_43.sol"];
	434 -> 428	[key=0,
		edge_type=next,
		label=Next];
}
