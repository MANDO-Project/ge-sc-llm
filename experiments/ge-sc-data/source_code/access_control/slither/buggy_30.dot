digraph "" {
	node [label="\N"];
	0	[contract_name=IERC777,
		function_fullname="name()",
		label="buggy_30.sol_IERC777_name()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[10]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	1	[contract_name=IERC777,
		function_fullname="symbol()",
		label="buggy_30.sol_IERC777_symbol()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	2	[contract_name=IERC777,
		function_fullname="granularity()",
		label="buggy_30.sol_IERC777_granularity()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	3	[contract_name=IERC777,
		function_fullname="totalSupply()",
		label="buggy_30.sol_IERC777_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	4	[contract_name=IERC777,
		function_fullname="balanceOf(address)",
		label="buggy_30.sol_IERC777_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	5	[contract_name=IERC777,
		function_fullname="send(address,uint256,bytes)",
		label="buggy_30.sol_IERC777_send(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[25]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	6	[contract_name=IERC777,
		function_fullname="burn(uint256,bytes)",
		label="buggy_30.sol_IERC777_burn(uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	7	[contract_name=IERC777,
		function_fullname="isOperatorFor(address,address)",
		label="buggy_30.sol_IERC777_isOperatorFor(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[31]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	8	[contract_name=IERC777,
		function_fullname="authorizeOperator(address)",
		label="buggy_30.sol_IERC777_authorizeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[34]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	9	[contract_name=IERC777,
		function_fullname="revokeOperator(address)",
		label="buggy_30.sol_IERC777_revokeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[37]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	10	[contract_name=IERC777,
		function_fullname="defaultOperators()",
		label="buggy_30.sol_IERC777_defaultOperators()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[40]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	11	[contract_name=IERC777,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_IERC777_operatorSend(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45, 46, 47, 48, 49]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	12	[contract_name=IERC777,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="buggy_30.sol_IERC777_operatorBurn(address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[52, 53, 54, 55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	13	[contract_name=IERC777Recipient,
		function_fullname="tokensReceived(address,address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_IERC777Recipient_tokensReceived(address,address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[79, 80, 81, 82, 83, 84, 85, 86]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	14	[contract_name=IERC777Sender,
		function_fullname="tokensToSend(address,address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_IERC777Sender_tokensToSend(address,address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[91, 92, 93, 94, 95, 96, 97, 98]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	15	[contract_name=IERC20,
		function_fullname="totalSupply()",
		label="buggy_30.sol_IERC20_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[103]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	16	[contract_name=IERC20,
		function_fullname="balanceOf(address)",
		label="buggy_30.sol_IERC20_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[106]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	17	[contract_name=IERC20,
		function_fullname="transfer(address,uint256)",
		label="buggy_30.sol_IERC20_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[109]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	18	[contract_name=IERC20,
		function_fullname="allowance(address,address)",
		label="buggy_30.sol_IERC20_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	19	[contract_name=IERC20,
		function_fullname="approve(address,uint256)",
		label="buggy_30.sol_IERC20_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[115]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	20	[contract_name=IERC20,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_30.sol_IERC20_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	21	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132, 133, 134]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	22	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a + b

IRs:
TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(uint256) = a + b
c(uint256) := TMP_0(uint256)",
		node_source_code_lines="[130]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	21 -> 22	[key=0,
		edge_type=next,
		label=Next];
	23	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(c >= a,SafeMath: addition overflow)

IRs:
TMP_1(bool) = c >= a
TMP_2(None) = \
SOLIDITY_CALL require(bool,string)(TMP_1,SafeMath: addition overflow)",
		node_expression="require(bool,string)(c >= a,SafeMath: addition overflow)",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(bool) = c >= a
TMP_2(None) = SOLIDITY_CALL require(bool,string)(TMP_1,SafeMath: addition overflow)",
		node_source_code_lines="[131]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	22 -> 23	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[133]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_30.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[129, 130, 131, 132, 133, 134]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	25 -> 21	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[137, 138, 139, 140, 141, 142]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	27	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b <= a,SafeMath: subtraction overflow)

IRs:
TMP_3(bool) = b <= a
TMP_4(\
None) = SOLIDITY_CALL require(bool,string)(TMP_3,SafeMath: subtraction overflow)",
		node_expression="require(bool,string)(b <= a,SafeMath: subtraction overflow)",
		node_info_vulnerabilities=None,
		node_irs="TMP_3(bool) = b <= a
TMP_4(None) = SOLIDITY_CALL require(bool,string)(TMP_3,SafeMath: subtraction overflow)",
		node_source_code_lines="[138]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	26 -> 27	[key=0,
		edge_type=next,
		label=Next];
	28	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a - b

IRs:
TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_expression="c = a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_5(uint256) = a - b
c(uint256) := TMP_5(uint256)",
		node_source_code_lines="[139]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	27 -> 28	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[141]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	28 -> 29	[key=0,
		edge_type=next,
		label=Next];
	30	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_30.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[137, 138, 139, 140, 141, 142]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	30 -> 26	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	32	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a == 0

IRs:
TMP_6(bool) = a == 0
CONDITION TMP_6",
		node_expression="a == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(bool) = a == 0
CONDITION TMP_6",
		node_source_code_lines="[149]",
		node_type=IF,
		source_file="buggy_30.sol"];
	31 -> 32	[key=0,
		edge_type=next,
		label=Next];
	33	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
0

IRs:
RETURN 0",
		node_expression=0,
		node_info_vulnerabilities=None,
		node_irs="RETURN 0",
		node_source_code_lines="[150]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	32 -> 33	[key=0,
		edge_type=if_true,
		label=True];
	34	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[149, 150, 151]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	32 -> 34	[key=0,
		edge_type=if_false,
		label=False];
	35	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a * b

IRs:
TMP_7(uint256) = a * b
c(uint256) := TMP_7(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_7(uint256) = a * b
c(uint256) := TMP_7(uint256)",
		node_source_code_lines="[153]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	34 -> 35	[key=0,
		edge_type=next,
		label=Next];
	36	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(c / a == b,SafeMath: multiplication overflow)

IRs:
TMP_8(uint256) = c / \
a
TMP_9(bool) = TMP_8 == b
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,SafeMath: multiplication overflow)",
		node_expression="require(bool,string)(c / a == b,SafeMath: multiplication overflow)",
		node_info_vulnerabilities=None,
		node_irs="TMP_8(uint256) = c / a
TMP_9(bool) = TMP_8 == b
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,SafeMath: multiplication \
overflow)",
		node_source_code_lines="[154]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	35 -> 36	[key=0,
		edge_type=next,
		label=Next];
	37	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[156]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	36 -> 37	[key=0,
		edge_type=next,
		label=Next];
	38	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_30.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	38 -> 31	[key=0,
		edge_type=next,
		label=Next];
	39	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[160, 161, 162, 163, 164, 165, 166, 167]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	40	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b > 0,SafeMath: division by zero)

IRs:
TMP_11(bool) = b > 0
TMP_12(None) = \
SOLIDITY_CALL require(bool,string)(TMP_11,SafeMath: division by zero)",
		node_expression="require(bool,string)(b > 0,SafeMath: division by zero)",
		node_info_vulnerabilities=None,
		node_irs="TMP_11(bool) = b > 0
TMP_12(None) = SOLIDITY_CALL require(bool,string)(TMP_11,SafeMath: division by zero)",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	39 -> 40	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a / b

IRs:
TMP_13(uint256) = a / b
c(uint256) := TMP_13(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_13(uint256) = a / b
c(uint256) := TMP_13(uint256)",
		node_source_code_lines="[163]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	40 -> 41	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[166]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	41 -> 42	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_30.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[160, 161, 162, 163, 164, 165, 166, 167]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	43 -> 39	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[170, 171, 172, 173]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	45	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(b != 0,SafeMath: modulo by zero)

IRs:
TMP_14(bool) = b != 0
TMP_15(None) = \
SOLIDITY_CALL require(bool,string)(TMP_14,SafeMath: modulo by zero)",
		node_expression="require(bool,string)(b != 0,SafeMath: modulo by zero)",
		node_info_vulnerabilities=None,
		node_irs="TMP_14(bool) = b != 0
TMP_15(None) = SOLIDITY_CALL require(bool,string)(TMP_14,SafeMath: modulo by zero)",
		node_source_code_lines="[171]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	44 -> 45	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a % b

IRs:
TMP_16(uint256) = a % b
RETURN TMP_16",
		node_expression="a % b",
		node_info_vulnerabilities=None,
		node_irs="TMP_16(uint256) = a % b
RETURN TMP_16",
		node_source_code_lines="[172]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	45 -> 46	[key=0,
		edge_type=next,
		label=Next];
	47	[contract_name=SafeMath,
		function_fullname="mod(uint256,uint256)",
		label="buggy_30.sol_SafeMath_mod(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[170, 171, 172, 173]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	47 -> 44	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=Address,
		function_fullname="isContract(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183, 184, 185, 186, 187]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	49	[contract_name=Address,
		function_fullname="isContract(address)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[183]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	48 -> 49	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=Address,
		function_fullname="isContract(address)",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[185]",
		node_type="INLINE ASM",
		source_file="buggy_30.sol"];
	49 -> 50	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=Address,
		function_fullname="isContract(address)",
		label="Node Type: RETURN

EXPRESSION:
size > 0

IRs:
TMP_17(bool) = size > 0
RETURN TMP_17",
		node_expression="size > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_17(bool) = size > 0
RETURN TMP_17",
		node_source_code_lines="[186]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	50 -> 51	[key=0,
		edge_type=next,
		label=Next];
	52	[contract_name=Address,
		function_fullname="isContract(address)",
		label="buggy_30.sol_Address_isContract(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183, 184, 185, 186, 187]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	52 -> 48	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=IERC1820Registry,
		function_fullname="setManager(address,address)",
		label="buggy_30.sol_IERC1820Registry_setManager(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[192]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	54	[contract_name=IERC1820Registry,
		function_fullname="getManager(address)",
		label="buggy_30.sol_IERC1820Registry_getManager(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[195]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	55	[contract_name=IERC1820Registry,
		function_fullname="setInterfaceImplementer(address,bytes32,address)",
		label="buggy_30.sol_IERC1820Registry_setInterfaceImplementer(address,bytes32,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[198]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	56	[contract_name=IERC1820Registry,
		function_fullname="getInterfaceImplementer(address,bytes32)",
		label="buggy_30.sol_IERC1820Registry_getInterfaceImplementer(address,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[201]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	57	[contract_name=IERC1820Registry,
		function_fullname="interfaceHash(string)",
		label="buggy_30.sol_IERC1820Registry_interfaceHash(string)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[204]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	58	[contract_name=IERC1820Registry,
		function_fullname="updateERC165Cache(address,bytes4)",
		label="buggy_30.sol_IERC1820Registry_updateERC165Cache(address,bytes4)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[207]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	59	[contract_name=IERC1820Registry,
		function_fullname="implementsERC165Interface(address,bytes4)",
		label="buggy_30.sol_IERC1820Registry_implementsERC165Interface(address,bytes4)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[210]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	60	[contract_name=IERC1820Registry,
		function_fullname="implementsERC165InterfaceNoCache(address,bytes4)",
		label="buggy_30.sol_IERC1820Registry_implementsERC165InterfaceNoCache(address,bytes4)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[213]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	61	[contract_name=ERC777,
		function_fullname="totalSupply()",
		label="buggy_30.sol_ERC777_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[103]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	62	[contract_name=ERC777,
		function_fullname="balanceOf(address)",
		label="buggy_30.sol_ERC777_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[106]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	63	[contract_name=ERC777,
		function_fullname="transfer(address,uint256)",
		label="buggy_30.sol_ERC777_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[109]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	64	[contract_name=ERC777,
		function_fullname="allowance(address,address)",
		label="buggy_30.sol_ERC777_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	65	[contract_name=ERC777,
		function_fullname="approve(address,uint256)",
		label="buggy_30.sol_ERC777_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[115]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	66	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_30.sol_ERC777_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	67	[contract_name=ERC777,
		function_fullname="name()",
		label="buggy_30.sol_ERC777_name()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[10]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	68	[contract_name=ERC777,
		function_fullname="symbol()",
		label="buggy_30.sol_ERC777_symbol()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	69	[contract_name=ERC777,
		function_fullname="granularity()",
		label="buggy_30.sol_ERC777_granularity()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	70	[contract_name=ERC777,
		function_fullname="totalSupply()",
		label="buggy_30.sol_ERC777_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	71	[contract_name=ERC777,
		function_fullname="balanceOf(address)",
		label="buggy_30.sol_ERC777_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	72	[contract_name=ERC777,
		function_fullname="send(address,uint256,bytes)",
		label="buggy_30.sol_ERC777_send(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[25]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	73	[contract_name=ERC777,
		function_fullname="burn(uint256,bytes)",
		label="buggy_30.sol_ERC777_burn(uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	74	[contract_name=ERC777,
		function_fullname="isOperatorFor(address,address)",
		label="buggy_30.sol_ERC777_isOperatorFor(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[31]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	75	[contract_name=ERC777,
		function_fullname="authorizeOperator(address)",
		label="buggy_30.sol_ERC777_authorizeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[34]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	76	[contract_name=ERC777,
		function_fullname="revokeOperator(address)",
		label="buggy_30.sol_ERC777_revokeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[37]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	77	[contract_name=ERC777,
		function_fullname="defaultOperators()",
		label="buggy_30.sol_ERC777_defaultOperators()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[40]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	78	[contract_name=ERC777,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_ERC777_operatorSend(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45, 46, 47, 48, 49]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	79	[contract_name=ERC777,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="buggy_30.sol_ERC777_operatorBurn(address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[52, 53, 54, 55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	80	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	81	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_name = name

IRs:
_name(string) := name(string)",
		node_expression="_name = name",
		node_info_vulnerabilities=None,
		node_irs="_name(string) := name(string)",
		node_source_code_lines="[263]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	80 -> 81	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_symbol = symbol

IRs:
_symbol(string) := symbol(string)",
		node_expression="_symbol = symbol",
		node_info_vulnerabilities=None,
		node_irs="_symbol(string) := symbol(string)",
		node_source_code_lines="[264]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	81 -> 82	[key=0,
		edge_type=next,
		label=Next];
	83	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_defaultOperatorsArray = defaultOperators

IRs:
_defaultOperatorsArray(address[]) := defaultOperators(\
address[])",
		node_expression="_defaultOperatorsArray = defaultOperators",
		node_info_vulnerabilities=None,
		node_irs="_defaultOperatorsArray(address[]) := defaultOperators(address[])",
		node_source_code_lines="[266]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	82 -> 83	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 0(uint256)",
		node_source_code_lines="[267]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	83 -> 86	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269]",
		node_type=BEGIN_LOOP,
		source_file="buggy_30.sol"];
	87	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: IF_LOOP

EXPRESSION:
i < _defaultOperatorsArray.length

IRs:
REF_0 -> LENGTH _defaultOperatorsArray
TMP_18(bool) = i < \
REF_0
CONDITION TMP_18",
		node_expression="i < _defaultOperatorsArray.length",
		node_info_vulnerabilities=None,
		node_irs="REF_0 -> LENGTH _defaultOperatorsArray
TMP_18(bool) = i < REF_0
CONDITION TMP_18",
		node_source_code_lines="[267]",
		node_type=IF_LOOP,
		source_file="buggy_30.sol"];
	84 -> 87	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269]",
		node_type=END_LOOP,
		source_file="buggy_30.sol"];
	90	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_erc1820.setInterfaceImplementer(address(this),keccak256(bytes)(ERC777Token),address(this))

\
IRs:
TMP_20 = CONVERT this to address
TMP_21(bytes32) = SOLIDITY_CALL keccak256(bytes)(ERC777Token)
TMP_22 = CONVERT this to address
\
HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:setInterfaceImplementer, arguments:['TMP_20', 'TMP_21', 'TMP_22']  ",
		node_expression="_erc1820.setInterfaceImplementer(address(this),keccak256(bytes)(ERC777Token),address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_20 = CONVERT this to address
TMP_21(bytes32) = SOLIDITY_CALL keccak256(bytes)(ERC777Token)
TMP_22 = CONVERT this to address
\
HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:setInterfaceImplementer, arguments:['TMP_20', 'TMP_21', 'TMP_22']  ",
		node_source_code_lines="[272]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	85 -> 90	[key=0,
		edge_type=next,
		label=Next];
	86 -> 84	[key=0,
		edge_type=next,
		label=Next];
	87 -> 85	[key=0,
		edge_type=if_false,
		label=False];
	88	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_defaultOperators[_defaultOperatorsArray[i]] = true

IRs:
REF_1(address) -> _defaultOperatorsArray[\
i]
REF_2(bool) -> _defaultOperators[REF_1]
REF_2 (->_defaultOperators) := True(bool)",
		node_expression="_defaultOperators[_defaultOperatorsArray[i]] = true",
		node_info_vulnerabilities=None,
		node_irs="REF_1(address) -> _defaultOperatorsArray[i]
REF_2(bool) -> _defaultOperators[REF_1]
REF_2 (->_defaultOperators) := True(bool)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	87 -> 88	[key=0,
		edge_type=if_true,
		label=True];
	89	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_19(uint256) := i(uint256)
i(uint256) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_19(uint256) := i(uint256)
i(uint256) = i + 1",
		node_source_code_lines="[267]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	88 -> 89	[key=0,
		edge_type=next,
		label=Next];
	89 -> 87	[key=0,
		edge_type=next,
		label=Next];
	91	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_erc1820.setInterfaceImplementer(address(this),keccak256(bytes)(ERC20Token),address(this))

IRs:
\
TMP_24 = CONVERT this to address
TMP_25(bytes32) = SOLIDITY_CALL keccak256(bytes)(ERC20Token)
TMP_26 = CONVERT this to address
HIGH_\
LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:setInterfaceImplementer, arguments:['TMP_24', 'TMP_25', 'TMP_26']  ",
		node_expression="_erc1820.setInterfaceImplementer(address(this),keccak256(bytes)(ERC20Token),address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_24 = CONVERT this to address
TMP_25(bytes32) = SOLIDITY_CALL keccak256(bytes)(ERC20Token)
TMP_26 = CONVERT this to address
HIGH_\
LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:setInterfaceImplementer, arguments:['TMP_24', 'TMP_25', 'TMP_26']  ",
		node_source_code_lines="[273]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	90 -> 91	[key=0,
		edge_type=next,
		label=Next];
	92	[contract_name=ERC777,
		function_fullname="constructor(string,string,address[])",
		label="buggy_30.sol_ERC777_constructor(string,string,address[])",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	92 -> 80	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=ERC777,
		function_fullname="name()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278, 279]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	94	[contract_name=ERC777,
		function_fullname="name()",
		label="Node Type: RETURN

EXPRESSION:
_name

IRs:
RETURN _name",
		node_expression=_name,
		node_info_vulnerabilities=None,
		node_irs="RETURN _name",
		node_source_code_lines="[278]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	93 -> 94	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=ERC777,
		function_fullname="name()",
		label="buggy_30.sol_ERC777_name()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278, 279]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	95 -> 93	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=ERC777,
		function_fullname="symbol()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[282, 283, 284]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	97	[contract_name=ERC777,
		function_fullname="symbol()",
		label="Node Type: RETURN

EXPRESSION:
_symbol

IRs:
RETURN _symbol",
		node_expression=_symbol,
		node_info_vulnerabilities=None,
		node_irs="RETURN _symbol",
		node_source_code_lines="[283]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	96 -> 97	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=ERC777,
		function_fullname="symbol()",
		label="buggy_30.sol_ERC777_symbol()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[282, 283, 284]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	98 -> 96	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=ERC777,
		function_fullname="decimals()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[287, 288, 289]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	100	[contract_name=ERC777,
		function_fullname="decimals()",
		label="Node Type: RETURN

EXPRESSION:
18

IRs:
RETURN 18",
		node_expression=18,
		node_info_vulnerabilities=None,
		node_irs="RETURN 18",
		node_source_code_lines="[288]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	99 -> 100	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=ERC777,
		function_fullname="decimals()",
		label="buggy_30.sol_ERC777_decimals()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[287, 288, 289]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	101 -> 99	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=ERC777,
		function_fullname="granularity()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[292, 293, 294]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	103	[contract_name=ERC777,
		function_fullname="granularity()",
		label="Node Type: RETURN

EXPRESSION:
1

IRs:
RETURN 1",
		node_expression=1,
		node_info_vulnerabilities=None,
		node_irs="RETURN 1",
		node_source_code_lines="[293]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=ERC777,
		function_fullname="granularity()",
		label="buggy_30.sol_ERC777_granularity()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[292, 293, 294]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	104 -> 102	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=ERC777,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[297, 298, 299]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	106	[contract_name=ERC777,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply

IRs:
RETURN _totalSupply",
		node_expression=_totalSupply,
		node_info_vulnerabilities=None,
		node_irs="RETURN _totalSupply",
		node_source_code_lines="[298]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	105 -> 106	[key=0,
		edge_type=next,
		label=Next];
	107	[contract_name=ERC777,
		function_fullname="totalSupply()",
		label="buggy_30.sol_ERC777_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[297, 298, 299]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	107 -> 105	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=ERC777,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	109	[contract_name=ERC777,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
_balances[tokenHolder]

IRs:
REF_5(uint256) -> _balances[tokenHolder]
RETURN REF_5",
		node_expression="_balances[tokenHolder]",
		node_info_vulnerabilities=None,
		node_irs="REF_5(uint256) -> _balances[tokenHolder]
RETURN REF_5",
		node_source_code_lines="[303]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	108 -> 109	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=ERC777,
		function_fullname="balanceOf(address)",
		label="buggy_30.sol_ERC777_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	110 -> 108	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=ERC777,
		function_fullname="send(address,uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	112	[contract_name=ERC777,
		function_fullname="send(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_send(msg.sender,msg.sender,recipient,amount,data,,true)

IRs:
INTERNAL_CALL, ERC777._send(address,\
address,address,uint256,bytes,bytes,bool)(msg.sender,msg.sender,recipient,amount,data,,True)",
		node_expression="_send(msg.sender,msg.sender,recipient,amount,data,,true)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._send(address,address,address,uint256,bytes,bytes,bool)(msg.sender,msg.sender,recipient,amount,data,,True)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	111 -> 112	[key=0,
		edge_type=next,
		label=Next];
	113	[contract_name=ERC777,
		function_fullname="send(address,uint256,bytes)",
		label="buggy_30.sol_ERC777_send(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	113 -> 111	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=ERC777,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	115	[contract_name=ERC777,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(recipient != address(0),ERC777: transfer to the zero address)

IRs:
TMP_\
29 = CONVERT 0 to address
TMP_30(bool) = recipient != TMP_29
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,ERC777: transfer \
to the zero address)",
		node_expression="require(bool,string)(recipient != address(0),ERC777: transfer to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_29 = CONVERT 0 to address
TMP_30(bool) = recipient != TMP_29
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,ERC777: \
transfer to the zero address)",
		node_source_code_lines="[313]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	114 -> 115	[key=0,
		edge_type=next,
		label=Next];
	116	[contract_name=ERC777,
		function_fullname="transfer(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
from = msg.sender

IRs:
from(address) := msg.sender(address)",
		node_expression="from = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="from(address) := msg.sender(address)",
		node_source_code_lines="[315]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	115 -> 116	[key=0,
		edge_type=next,
		label=Next];
	117	[contract_name=ERC777,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensToSend(from,from,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._callTokensToSend(\
address,address,address,uint256,bytes,bytes)(from,from,recipient,amount,,)",
		node_expression="_callTokensToSend(from,from,recipient,amount,,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(from,from,recipient,amount,,)",
		node_source_code_lines="[317]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	116 -> 117	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=ERC777,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_move(from,from,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._move(address,address,address,\
uint256,bytes,bytes)(from,from,recipient,amount,,)",
		node_expression="_move(from,from,recipient,amount,,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._move(address,address,address,uint256,bytes,bytes)(from,from,recipient,amount,,)",
		node_source_code_lines="[319]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	117 -> 118	[key=0,
		edge_type=next,
		label=Next];
	119	[contract_name=ERC777,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensReceived(from,from,recipient,amount,,,false)

IRs:
INTERNAL_CALL, ERC777._callTokensReceived(\
address,address,address,uint256,bytes,bytes,bool)(from,from,recipient,amount,,,False)",
		node_expression="_callTokensReceived(from,from,recipient,amount,,,false)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(from,from,recipient,amount,,,False)",
		node_source_code_lines="[321]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	118 -> 119	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=ERC777,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[323]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	119 -> 120	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=ERC777,
		function_fullname="transfer(address,uint256)",
		label="buggy_30.sol_ERC777_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	121 -> 114	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=ERC777,
		function_fullname="burn(uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[327, 328, 329]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	123	[contract_name=ERC777,
		function_fullname="burn(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(msg.sender,msg.sender,amount,data,)

IRs:
INTERNAL_CALL, ERC777._burn(address,address,uint256,\
bytes,bytes)(msg.sender,msg.sender,amount,data,)",
		node_expression="_burn(msg.sender,msg.sender,amount,data,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._burn(address,address,uint256,bytes,bytes)(msg.sender,msg.sender,amount,data,)",
		node_source_code_lines="[328]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	122 -> 123	[key=0,
		edge_type=next,
		label=Next];
	124	[contract_name=ERC777,
		function_fullname="burn(uint256,bytes)",
		label="buggy_30.sol_ERC777_burn(uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[327, 328, 329]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	124 -> 122	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=ERC777,
		function_fullname="isOperatorFor(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338, 339]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	126	[contract_name=ERC777,
		function_fullname="isOperatorFor(address,address)",
		label="Node Type: RETURN

EXPRESSION:
operator == tokenHolder || (_defaultOperators[operator] && ! _revokedDefaultOperators[tokenHolder][\
operator]) || _operators[tokenHolder][operator]

IRs:
TMP_36(bool) = operator == tokenHolder
REF_6(bool) -> _defaultOperators[operator]
\
REF_7(mapping(address => bool)) -> _revokedDefaultOperators[tokenHolder]
REF_8(bool) -> REF_7[operator]
TMP_37 = ! REF_8 
TMP_38(\
bool) = REF_6 && TMP_37
TMP_39(bool) = TMP_36 || TMP_38
REF_9(mapping(address => bool)) -> _operators[tokenHolder]
REF_10(bool) \
-> REF_9[operator]
TMP_40(bool) = TMP_39 || REF_10
RETURN TMP_40",
		node_expression="operator == tokenHolder || (_defaultOperators[operator] && ! _revokedDefaultOperators[tokenHolder][operator]) || _operators[tokenHolder][\
operator]",
		node_info_vulnerabilities=None,
		node_irs="TMP_36(bool) = operator == tokenHolder
REF_6(bool) -> _defaultOperators[operator]
REF_7(mapping(address => bool)) -> _revokedDefaultOperators[\
tokenHolder]
REF_8(bool) -> REF_7[operator]
TMP_37 = ! REF_8 
TMP_38(bool) = REF_6 && TMP_37
TMP_39(bool) = TMP_36 || TMP_38
REF_\
9(mapping(address => bool)) -> _operators[tokenHolder]
REF_10(bool) -> REF_9[operator]
TMP_40(bool) = TMP_39 || REF_10
RETURN TMP_\
40",
		node_source_code_lines="[336, 337, 338]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	125 -> 126	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=ERC777,
		function_fullname="isOperatorFor(address,address)",
		label="buggy_30.sol_ERC777_isOperatorFor(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[332, 333, 334, 335, 336, 337, 338, 339]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	127 -> 125	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	129	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin18)

IRs:
TMP_41(bool) = tx.origin == owner_txorigin18
\
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_expression="require(bool)(tx.origin == owner_txorigin18)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_41(bool) = tx.origin == owner_txorigin18
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_source_code_lines="[341]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	128 -> 129	[key=0,
		edge_type=next,
		label=Next];
	130	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_43 = CONVERT this to address
REF_12 -> BALANCE \
TMP_43
Transfer dest:_recipient value:REF_12",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_43 = CONVERT this to address
REF_12 -> BALANCE TMP_43
Transfer dest:_recipient value:REF_12",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	129 -> 130	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="buggy_30.sol_ERC777_withdrawAll_txorigin18(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	131 -> 128	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=ERC777,
		function_fullname="authorizeOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	133	[contract_name=ERC777,
		function_fullname="authorizeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender != operator,ERC777: authorizing self as operator)

IRs:
TMP_45(\
bool) = msg.sender != operator
TMP_46(None) = SOLIDITY_CALL require(bool,string)(TMP_45,ERC777: authorizing self as operator)",
		node_expression="require(bool,string)(msg.sender != operator,ERC777: authorizing self as operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_45(bool) = msg.sender != operator
TMP_46(None) = SOLIDITY_CALL require(bool,string)(TMP_45,ERC777: authorizing self as operator)",
		node_source_code_lines="[347]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	132 -> 133	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=ERC777,
		function_fullname="authorizeOperator(address)",
		label="Node Type: IF

EXPRESSION:
_defaultOperators[operator]

IRs:
REF_13(bool) -> _defaultOperators[operator]
CONDITION REF_13",
		node_expression="_defaultOperators[operator]",
		node_info_vulnerabilities=None,
		node_irs="REF_13(bool) -> _defaultOperators[operator]
CONDITION REF_13",
		node_source_code_lines="[349]",
		node_type=IF,
		source_file="buggy_30.sol"];
	133 -> 134	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=ERC777,
		function_fullname="authorizeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
delete _revokedDefaultOperators[msg.sender][operator]

IRs:
REF_14(mapping(address => bool)) \
-> _revokedDefaultOperators[msg.sender]
REF_15(bool) -> REF_14[operator]
REF_14 = delete REF_15 ",
		node_expression="delete _revokedDefaultOperators[msg.sender][operator]",
		node_info_vulnerabilities=None,
		node_irs="REF_14(mapping(address => bool)) -> _revokedDefaultOperators[msg.sender]
REF_15(bool) -> REF_14[operator]
REF_14 = delete REF_15 ",
		node_source_code_lines="[350]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	134 -> 135	[key=0,
		edge_type=if_true,
		label=True];
	136	[contract_name=ERC777,
		function_fullname="authorizeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_operators[msg.sender][operator] = true

IRs:
REF_16(mapping(address => bool)) -> _operators[\
msg.sender]
REF_17(bool) -> REF_16[operator]
REF_17 (->_operators) := True(bool)",
		node_expression="_operators[msg.sender][operator] = true",
		node_info_vulnerabilities=None,
		node_irs="REF_16(mapping(address => bool)) -> _operators[msg.sender]
REF_17(bool) -> REF_16[operator]
REF_17 (->_operators) := True(bool)",
		node_source_code_lines="[352]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	134 -> 136	[key=0,
		edge_type=if_false,
		label=False];
	137	[contract_name=ERC777,
		function_fullname="authorizeOperator(address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[349, 350, 351, 352, 353]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	135 -> 137	[key=0,
		edge_type=next,
		label=Next];
	136 -> 137	[key=0,
		edge_type=next,
		label=Next];
	138	[contract_name=ERC777,
		function_fullname="authorizeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
AuthorizedOperator(operator,msg.sender)

IRs:
Emit AuthorizedOperator(operator.msg.sender)",
		node_expression="AuthorizedOperator(operator,msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit AuthorizedOperator(operator.msg.sender)",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=ERC777,
		function_fullname="authorizeOperator(address)",
		label="buggy_30.sol_ERC777_authorizeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	139 -> 132	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=ERC777,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[357, 358, 359, 360]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	141	[contract_name=ERC777,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin29)

IRs:
TMP_48(bool) = tx.origin == owner_txorigin29
\
TMP_49(None) = SOLIDITY_CALL require(bool)(TMP_48)",
		node_expression="require(bool)(tx.origin == owner_txorigin29)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_48(bool) = tx.origin == owner_txorigin29
TMP_49(None) = SOLIDITY_CALL require(bool)(TMP_48)",
		node_source_code_lines="[358]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=ERC777,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[359]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	141 -> 142	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=ERC777,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="buggy_30.sol_ERC777_sendto_txorigin29(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[357, 358, 359, 360]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	143 -> 140	[key=0,
		edge_type=next,
		label=Next];
	144	[contract_name=ERC777,
		function_fullname="revokeOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	145	[contract_name=ERC777,
		function_fullname="revokeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(operator != msg.sender,ERC777: revoking self as operator)

IRs:
TMP_51(bool) = \
operator != msg.sender
TMP_52(None) = SOLIDITY_CALL require(bool,string)(TMP_51,ERC777: revoking self as operator)",
		node_expression="require(bool,string)(operator != msg.sender,ERC777: revoking self as operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_51(bool) = operator != msg.sender
TMP_52(None) = SOLIDITY_CALL require(bool,string)(TMP_51,ERC777: revoking self as operator)",
		node_source_code_lines="[364]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	144 -> 145	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=ERC777,
		function_fullname="revokeOperator(address)",
		label="Node Type: IF

EXPRESSION:
_defaultOperators[operator]

IRs:
REF_19(bool) -> _defaultOperators[operator]
CONDITION REF_19",
		node_expression="_defaultOperators[operator]",
		node_info_vulnerabilities=None,
		node_irs="REF_19(bool) -> _defaultOperators[operator]
CONDITION REF_19",
		node_source_code_lines="[366]",
		node_type=IF,
		source_file="buggy_30.sol"];
	145 -> 146	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=ERC777,
		function_fullname="revokeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_revokedDefaultOperators[msg.sender][operator] = true

IRs:
REF_20(mapping(address => bool)) \
-> _revokedDefaultOperators[msg.sender]
REF_21(bool) -> REF_20[operator]
REF_21 (->_revokedDefaultOperators) := True(bool)",
		node_expression="_revokedDefaultOperators[msg.sender][operator] = true",
		node_info_vulnerabilities=None,
		node_irs="REF_20(mapping(address => bool)) -> _revokedDefaultOperators[msg.sender]
REF_21(bool) -> REF_20[operator]
REF_21 (->_revokedDefaultOperators) := \
True(bool)",
		node_source_code_lines="[367]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	146 -> 147	[key=0,
		edge_type=if_true,
		label=True];
	148	[contract_name=ERC777,
		function_fullname="revokeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
delete _operators[msg.sender][operator]

IRs:
REF_22(mapping(address => bool)) -> _operators[\
msg.sender]
REF_23(bool) -> REF_22[operator]
REF_22 = delete REF_23 ",
		node_expression="delete _operators[msg.sender][operator]",
		node_info_vulnerabilities=None,
		node_irs="REF_22(mapping(address => bool)) -> _operators[msg.sender]
REF_23(bool) -> REF_22[operator]
REF_22 = delete REF_23 ",
		node_source_code_lines="[369]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	146 -> 148	[key=0,
		edge_type=if_false,
		label=False];
	149	[contract_name=ERC777,
		function_fullname="revokeOperator(address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[366, 367, 368, 369, 370]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	147 -> 149	[key=0,
		edge_type=next,
		label=Next];
	148 -> 149	[key=0,
		edge_type=next,
		label=Next];
	150	[contract_name=ERC777,
		function_fullname="revokeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
RevokedOperator(operator,msg.sender)

IRs:
Emit RevokedOperator(operator.msg.sender)",
		node_expression="RevokedOperator(operator,msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit RevokedOperator(operator.msg.sender)",
		node_source_code_lines="[372]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	149 -> 150	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=ERC777,
		function_fullname="revokeOperator(address)",
		label="buggy_30.sol_ERC777_revokeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	151 -> 144	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[374, 375, 376, 377]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	153	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin6)

IRs:
TMP_54(bool) = tx.origin == owner_txorigin6
\
TMP_55(None) = SOLIDITY_CALL require(bool)(TMP_54)",
		node_expression="require(bool)(tx.origin == owner_txorigin6)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_54(bool) = tx.origin == owner_txorigin6
TMP_55(None) = SOLIDITY_CALL require(bool)(TMP_54)",
		node_source_code_lines="[375]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	152 -> 153	[key=0,
		edge_type=next,
		label=Next];
	154	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_56 = CONVERT this to address
REF_25 -> BALANCE \
TMP_56
Transfer dest:_recipient value:REF_25",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_56 = CONVERT this to address
REF_25 -> BALANCE TMP_56
Transfer dest:_recipient value:REF_25",
		node_source_code_lines="[376]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="buggy_30.sol_ERC777_withdrawAll_txorigin6(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[374, 375, 376, 377]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	155 -> 152	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=ERC777,
		function_fullname="defaultOperators()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[380, 381, 382]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	157	[contract_name=ERC777,
		function_fullname="defaultOperators()",
		label="Node Type: RETURN

EXPRESSION:
_defaultOperatorsArray

IRs:
RETURN _defaultOperatorsArray",
		node_expression=_defaultOperatorsArray,
		node_info_vulnerabilities=None,
		node_irs="RETURN _defaultOperatorsArray",
		node_source_code_lines="[381]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	156 -> 157	[key=0,
		edge_type=next,
		label=Next];
	158	[contract_name=ERC777,
		function_fullname="defaultOperators()",
		label="buggy_30.sol_ERC777_defaultOperators()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[380, 381, 382]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	158 -> 156	[key=0,
		edge_type=next,
		label=Next];
	159	[contract_name=ERC777,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[383, 384, 385]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	160	[contract_name=ERC777,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin16)

IRs:
TMP_58(bool) = tx.origin == owner_txorigin16
\
TMP_59(None) = SOLIDITY_CALL require(bool)(TMP_58)",
		node_expression="require(bool)(tx.origin == owner_txorigin16)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_58(bool) = tx.origin == owner_txorigin16
TMP_59(None) = SOLIDITY_CALL require(bool)(TMP_58)",
		node_source_code_lines="[384]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=ERC777,
		function_fullname="bug_txorigin16(address)",
		label="buggy_30.sol_ERC777_bug_txorigin16(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[383, 384, 385]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	161 -> 159	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=ERC777,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[396, 397, 398, 399]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	163	[contract_name=ERC777,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isOperatorFor(msg.sender,sender),ERC777: caller is not an operator for holder)

\
IRs:
TMP_60(bool) = INTERNAL_CALL, ERC777.isOperatorFor(address,address)(msg.sender,sender)
TMP_61(None) = SOLIDITY_CALL require(\
bool,string)(TMP_60,ERC777: caller is not an operator for holder)",
		node_expression="require(bool,string)(isOperatorFor(msg.sender,sender),ERC777: caller is not an operator for holder)",
		node_info_vulnerabilities=None,
		node_irs="TMP_60(bool) = INTERNAL_CALL, ERC777.isOperatorFor(address,address)(msg.sender,sender)
TMP_61(None) = SOLIDITY_CALL require(bool,\
string)(TMP_60,ERC777: caller is not an operator for holder)",
		node_source_code_lines="[397]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	162 -> 163	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=ERC777,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_send(msg.sender,sender,recipient,amount,data,operatorData,true)

IRs:
INTERNAL_CALL, ERC777._\
send(address,address,address,uint256,bytes,bytes,bool)(msg.sender,sender,recipient,amount,data,operatorData,True)",
		node_expression="_send(msg.sender,sender,recipient,amount,data,operatorData,true)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._send(address,address,address,uint256,bytes,bytes,bool)(msg.sender,sender,recipient,amount,data,operatorData,\
True)",
		node_source_code_lines="[398]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=ERC777,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_ERC777_operatorSend(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	165 -> 162	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=ERC777,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	167	[contract_name=ERC777,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin24)

IRs:
TMP_63(bool) = tx.origin == owner_txorigin24
\
TMP_64(None) = SOLIDITY_CALL require(bool)(TMP_63)",
		node_expression="require(bool)(tx.origin == owner_txorigin24)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_63(bool) = tx.origin == owner_txorigin24
TMP_64(None) = SOLIDITY_CALL require(bool)(TMP_63)",
		node_source_code_lines="[401]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=ERC777,
		function_fullname="bug_txorigin24(address)",
		label="buggy_30.sol_ERC777_bug_txorigin24(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	168 -> 166	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=ERC777,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[405, 406, 407, 408]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	170	[contract_name=ERC777,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isOperatorFor(msg.sender,account),ERC777: caller is not an operator for \
holder)

IRs:
TMP_65(bool) = INTERNAL_CALL, ERC777.isOperatorFor(address,address)(msg.sender,account)
TMP_66(None) = SOLIDITY_CALL \
require(bool,string)(TMP_65,ERC777: caller is not an operator for holder)",
		node_expression="require(bool,string)(isOperatorFor(msg.sender,account),ERC777: caller is not an operator for holder)",
		node_info_vulnerabilities=None,
		node_irs="TMP_65(bool) = INTERNAL_CALL, ERC777.isOperatorFor(address,address)(msg.sender,account)
TMP_66(None) = SOLIDITY_CALL require(bool,\
string)(TMP_65,ERC777: caller is not an operator for holder)",
		node_source_code_lines="[406]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	169 -> 170	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=ERC777,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(msg.sender,account,amount,data,operatorData)

IRs:
INTERNAL_CALL, ERC777._burn(address,\
address,uint256,bytes,bytes)(msg.sender,account,amount,data,operatorData)",
		node_expression="_burn(msg.sender,account,amount,data,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._burn(address,address,uint256,bytes,bytes)(msg.sender,account,amount,data,operatorData)",
		node_source_code_lines="[407]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	170 -> 171	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=ERC777,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="buggy_30.sol_ERC777_operatorBurn(address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[405, 406, 407, 408]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	172 -> 169	[key=0,
		edge_type=next,
		label=Next];
	173	[contract_name=ERC777,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[409, 410, 411, 412]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	174	[contract_name=ERC777,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin5)

IRs:
TMP_68(bool) = tx.origin == owner_txorigin5
\
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_expression="require(bool)(tx.origin == owner_txorigin5)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_68(bool) = tx.origin == owner_txorigin5
TMP_69(None) = SOLIDITY_CALL require(bool)(TMP_68)",
		node_source_code_lines="[410]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	173 -> 174	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=ERC777,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[411]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	174 -> 175	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=ERC777,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="buggy_30.sol_ERC777_sendto_txorigin5(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[409, 410, 411, 412]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	176 -> 173	[key=0,
		edge_type=next,
		label=Next];
	177	[contract_name=ERC777,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[415, 416, 417]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	178	[contract_name=ERC777,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
_allowances[holder][spender]

IRs:
REF_27(mapping(address => uint256)) -> _allowances[holder]
REF_\
28(uint256) -> REF_27[spender]
RETURN REF_28",
		node_expression="_allowances[holder][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_27(mapping(address => uint256)) -> _allowances[holder]
REF_28(uint256) -> REF_27[spender]
RETURN REF_28",
		node_source_code_lines="[416]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	177 -> 178	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=ERC777,
		function_fullname="allowance(address,address)",
		label="buggy_30.sol_ERC777_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[415, 416, 417]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	179 -> 177	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=ERC777,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[418, 419, 420, 421]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	181	[contract_name=ERC777,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin15)

IRs:
TMP_71(bool) = tx.origin == owner_txorigin15
\
TMP_72(None) = SOLIDITY_CALL require(bool)(TMP_71)",
		node_expression="require(bool)(tx.origin == owner_txorigin15)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_71(bool) = tx.origin == owner_txorigin15
TMP_72(None) = SOLIDITY_CALL require(bool)(TMP_71)",
		node_source_code_lines="[419]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	180 -> 181	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=ERC777,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_29(None) -> to.call
REF_30(None) -> REF_29.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_29(None) -> to.call
REF_30(None) -> REF_29.value",
		node_source_code_lines="[420]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	181 -> 182	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=ERC777,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="buggy_30.sol_ERC777_transferTo_txorigin15(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[418, 419, 420, 421]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	183 -> 180	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=ERC777,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[424, 425, 426, 427, 428]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	185	[contract_name=ERC777,
		function_fullname="approve(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
holder = msg.sender

IRs:
holder(address) := msg.sender(address)",
		node_expression="holder = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="holder(address) := msg.sender(address)",
		node_source_code_lines="[425]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	184 -> 185	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=ERC777,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(holder,spender,value)

IRs:
INTERNAL_CALL, ERC777._approve(address,address,uint256)(\
holder,spender,value)",
		node_expression="_approve(holder,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._approve(address,address,uint256)(holder,spender,value)",
		node_source_code_lines="[426]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	185 -> 186	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=ERC777,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[427]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	186 -> 187	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=ERC777,
		function_fullname="approve(address,uint256)",
		label="buggy_30.sol_ERC777_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[424, 425, 426, 427, 428]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	188 -> 184	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=ERC777,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[429, 430, 431]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	190	[contract_name=ERC777,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin28)

IRs:
TMP_75(bool) = tx.origin == owner_txorigin28
\
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_expression="require(bool)(tx.origin == owner_txorigin28)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_75(bool) = tx.origin == owner_txorigin28
TMP_76(None) = SOLIDITY_CALL require(bool)(TMP_75)",
		node_source_code_lines="[430]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	189 -> 190	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=ERC777,
		function_fullname="bug_txorigin28(address)",
		label="buggy_30.sol_ERC777_bug_txorigin28(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[429, 430, 431]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	191 -> 189	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	193	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(recipient != address(0),ERC777: transfer to the zero address)

IRs:
TMP_\
77 = CONVERT 0 to address
TMP_78(bool) = recipient != TMP_77
TMP_79(None) = SOLIDITY_CALL require(bool,string)(TMP_78,ERC777: transfer \
to the zero address)",
		node_expression="require(bool,string)(recipient != address(0),ERC777: transfer to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_77 = CONVERT 0 to address
TMP_78(bool) = recipient != TMP_77
TMP_79(None) = SOLIDITY_CALL require(bool,string)(TMP_78,ERC777: \
transfer to the zero address)",
		node_source_code_lines="[435]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	192 -> 193	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(holder != address(0),ERC777: transfer from the zero address)

IRs:
TMP_80 = \
CONVERT 0 to address
TMP_81(bool) = holder != TMP_80
TMP_82(None) = SOLIDITY_CALL require(bool,string)(TMP_81,ERC777: transfer from \
the zero address)",
		node_expression="require(bool,string)(holder != address(0),ERC777: transfer from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_80 = CONVERT 0 to address
TMP_81(bool) = holder != TMP_80
TMP_82(None) = SOLIDITY_CALL require(bool,string)(TMP_81,ERC777: transfer \
from the zero address)",
		node_source_code_lines="[436]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
spender = msg.sender

IRs:
spender(address) := msg.sender(address)",
		node_expression="spender = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="spender(address) := msg.sender(address)",
		node_source_code_lines="[438]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensToSend(spender,holder,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._callTokensToSend(\
address,address,address,uint256,bytes,bytes)(spender,holder,recipient,amount,,)",
		node_expression="_callTokensToSend(spender,holder,recipient,amount,,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(spender,holder,recipient,amount,,)",
		node_source_code_lines="[440]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	195 -> 196	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_move(spender,holder,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._move(address,address,address,\
uint256,bytes,bytes)(spender,holder,recipient,amount,,)",
		node_expression="_move(spender,holder,recipient,amount,,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._move(address,address,address,uint256,bytes,bytes)(spender,holder,recipient,amount,,)",
		node_source_code_lines="[442]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	196 -> 197	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(holder,spender,_allowances[holder][spender].sub(amount))

IRs:
REF_31(mapping(address => \
uint256)) -> _allowances[holder]
REF_32(uint256) -> REF_31[spender]
TMP_85(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_32', 'amount'] 
INTERNAL_CALL, ERC777._approve(address,address,uint256)(holder,spender,TMP_85)",
		node_expression="_approve(holder,spender,_allowances[holder][spender].sub(amount))",
		node_info_vulnerabilities=None,
		node_irs="REF_31(mapping(address => uint256)) -> _allowances[holder]
REF_32(uint256) -> REF_31[spender]
TMP_85(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_32', 'amount'] 
INTERNAL_CALL, ERC777._approve(address,address,\
uint256)(holder,spender,TMP_85)",
		node_source_code_lines="[443]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensReceived(spender,holder,recipient,amount,,,false)

IRs:
INTERNAL_CALL, ERC777._callTokensReceived(\
address,address,address,uint256,bytes,bytes,bool)(spender,holder,recipient,amount,,,False)",
		node_expression="_callTokensReceived(spender,holder,recipient,amount,,,false)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(spender,holder,recipient,amount,,,False)",
		node_source_code_lines="[445]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	198 -> 199	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[447]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	199 -> 200	[key=0,
		edge_type=next,
		label=Next];
	201	[contract_name=ERC777,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_30.sol_ERC777_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	201 -> 192	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[449, 450, 451, 452]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	203	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_88(bool) = tx.origin == owner_txorigin34
\
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_88(bool) = tx.origin == owner_txorigin34
TMP_89(None) = SOLIDITY_CALL require(bool)(TMP_88)",
		node_source_code_lines="[450]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	202 -> 203	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_90 = CONVERT this to address
REF_35 -> BALANCE \
TMP_90
Transfer dest:_recipient value:REF_35",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_90 = CONVERT this to address
REF_35 -> BALANCE TMP_90
Transfer dest:_recipient value:REF_35",
		node_source_code_lines="[451]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	203 -> 204	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_30.sol_ERC777_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[449, 450, 451, 452]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	205 -> 202	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=ERC777,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	207	[contract_name=ERC777,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(account != address(0),ERC777: mint to the zero address)

IRs:
TMP_92 = CONVERT \
0 to address
TMP_93(bool) = account != TMP_92
TMP_94(None) = SOLIDITY_CALL require(bool,string)(TMP_93,ERC777: mint to the zero \
address)",
		node_expression="require(bool,string)(account != address(0),ERC777: mint to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_92 = CONVERT 0 to address
TMP_93(bool) = account != TMP_92
TMP_94(None) = SOLIDITY_CALL require(bool,string)(TMP_93,ERC777: \
mint to the zero address)",
		node_source_code_lines="[464]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=ERC777,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.add(amount)

IRs:
TMP_95(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(uint256) := TMP_95(uint256)",
		node_expression="_totalSupply = _totalSupply.add(amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_95(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(\
uint256) := TMP_95(uint256)",
		node_source_code_lines="[467]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	207 -> 208	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=ERC777,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].add(amount)

IRs:
REF_37(uint256) -> _balances[account]
\
REF_38(uint256) -> _balances[account]
TMP_96(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_38', 'amount'] 
REF_37 (->_balances) := TMP_96(uint256)",
		node_expression="_balances[account] = _balances[account].add(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_37(uint256) -> _balances[account]
REF_38(uint256) -> _balances[account]
TMP_96(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_38', 'amount'] 
REF_37 (->_balances) := TMP_96(uint256)",
		node_source_code_lines="[468]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	210	[contract_name=ERC777,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensReceived(operator,address(0),account,amount,userData,operatorData,true)

IRs:
TMP_\
97 = CONVERT 0 to address
INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(operator,TMP_\
97,account,amount,userData,operatorData,True)",
		node_expression="_callTokensReceived(operator,address(0),account,amount,userData,operatorData,true)",
		node_info_vulnerabilities=None,
		node_irs="TMP_97 = CONVERT 0 to address
INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(operator,\
TMP_97,account,amount,userData,operatorData,True)",
		node_source_code_lines="[470]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	209 -> 210	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=ERC777,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Minted(operator,account,amount,userData,operatorData)

IRs:
Emit Minted(operator.account.amount.userData.operatorData)",
		node_expression="Minted(operator,account,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="Emit Minted(operator.account.amount.userData.operatorData)",
		node_source_code_lines="[472]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	210 -> 211	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=ERC777,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),account,amount)

IRs:
TMP_100 = CONVERT 0 to address
Emit Transfer(TMP_100.account.amount)",
		node_expression="Transfer(address(0),account,amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_100 = CONVERT 0 to address
Emit Transfer(TMP_100.account.amount)",
		node_source_code_lines="[473]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	211 -> 212	[key=0,
		edge_type=next,
		label=Next];
	213	[contract_name=ERC777,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_ERC777__mint(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	213 -> 206	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=ERC777,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[475, 476, 477, 478]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	215	[contract_name=ERC777,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_102(bool) = tx.origin == owner_txorigin21
\
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_102(bool) = tx.origin == owner_txorigin21
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_source_code_lines="[476]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	214 -> 215	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=ERC777,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[477]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	215 -> 216	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=ERC777,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_30.sol_ERC777_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[475, 476, 477, 478]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	217 -> 214	[key=0,
		edge_type=next,
		label=Next];
	218	[contract_name=ERC777,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[491, 492, 493, 494, 495, 496, 497, 498, 499, 500]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	219	[contract_name=ERC777,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(from != address(0),ERC777: send from the zero address)

IRs:
TMP_105 = CONVERT \
0 to address
TMP_106(bool) = from != TMP_105
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,ERC777: send from the zero \
address)",
		node_expression="require(bool,string)(from != address(0),ERC777: send from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_105 = CONVERT 0 to address
TMP_106(bool) = from != TMP_105
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,ERC777: \
send from the zero address)",
		node_source_code_lines="[492]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	218 -> 219	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=ERC777,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(to != address(0),ERC777: send to the zero address)

IRs:
TMP_108 = CONVERT \
0 to address
TMP_109(bool) = to != TMP_108
TMP_110(None) = SOLIDITY_CALL require(bool,string)(TMP_109,ERC777: send to the zero address)",
		node_expression="require(bool,string)(to != address(0),ERC777: send to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_108 = CONVERT 0 to address
TMP_109(bool) = to != TMP_108
TMP_110(None) = SOLIDITY_CALL require(bool,string)(TMP_109,ERC777: \
send to the zero address)",
		node_source_code_lines="[493]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	219 -> 220	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=ERC777,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensToSend(operator,from,to,amount,userData,operatorData)

IRs:
INTERNAL_CALL, ERC777._\
callTokensToSend(address,address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)",
		node_expression="_callTokensToSend(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)",
		node_source_code_lines="[495]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=ERC777,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
_move(operator,from,to,amount,userData,operatorData)

IRs:
INTERNAL_CALL, ERC777._move(address,\
address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)",
		node_expression="_move(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._move(address,address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)",
		node_source_code_lines="[497]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=ERC777,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensReceived(operator,from,to,amount,userData,operatorData,requireReceptionAck)

IRs:
\
INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(operator,from,to,amount,userData,operatorData,\
requireReceptionAck)",
		node_expression="_callTokensReceived(operator,from,to,amount,userData,operatorData,requireReceptionAck)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(operator,from,to,amount,userData,operatorData,\
requireReceptionAck)",
		node_source_code_lines="[499]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	222 -> 223	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=ERC777,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="buggy_30.sol_ERC777__send(address,address,address,uint256,bytes,bytes,bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	224 -> 218	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[501, 502, 503, 504]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	226	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_114(bool) = tx.origin == owner_txorigin10
\
TMP_115(None) = SOLIDITY_CALL require(bool)(TMP_114)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_114(bool) = tx.origin == owner_txorigin10
TMP_115(None) = SOLIDITY_CALL require(bool)(TMP_114)",
		node_source_code_lines="[502]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	225 -> 226	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_116 = CONVERT this to address
REF_42 -> \
BALANCE TMP_116
Transfer dest:_recipient value:REF_42",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_116 = CONVERT this to address
REF_42 -> BALANCE TMP_116
Transfer dest:_recipient value:REF_42",
		node_source_code_lines="[503]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	226 -> 227	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_30.sol_ERC777_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[501, 502, 503, 504]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	228 -> 225	[key=0,
		edge_type=next,
		label=Next];
	229	[contract_name=ERC777,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	230	[contract_name=ERC777,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(from != address(0),ERC777: burn from the zero address)

IRs:
TMP_118 = CONVERT \
0 to address
TMP_119(bool) = from != TMP_118
TMP_120(None) = SOLIDITY_CALL require(bool,string)(TMP_119,ERC777: burn from the zero \
address)",
		node_expression="require(bool,string)(from != address(0),ERC777: burn from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_118 = CONVERT 0 to address
TMP_119(bool) = from != TMP_118
TMP_120(None) = SOLIDITY_CALL require(bool,string)(TMP_119,ERC777: \
burn from the zero address)",
		node_source_code_lines="[516]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=ERC777,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensToSend(operator,from,address(0),amount,data,operatorData)

IRs:
TMP_121 = CONVERT \
0 to address
INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(operator,from,TMP_121,amount,data,\
operatorData)",
		node_expression="_callTokensToSend(operator,from,address(0),amount,data,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="TMP_121 = CONVERT 0 to address
INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(operator,from,\
TMP_121,amount,data,operatorData)",
		node_source_code_lines="[518]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	230 -> 231	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=ERC777,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.sub(amount)

IRs:
TMP_123(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(uint256) := TMP_123(uint256)",
		node_expression="_totalSupply = _totalSupply.sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_123(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(\
uint256) := TMP_123(uint256)",
		node_source_code_lines="[521]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=ERC777,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[from] = _balances[from].sub(amount)

IRs:
REF_44(uint256) -> _balances[from]
REF_45(\
uint256) -> _balances[from]
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_45', 'amount'] 
REF_44 (->_balances) := TMP_124(uint256)",
		node_expression="_balances[from] = _balances[from].sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_44(uint256) -> _balances[from]
REF_45(uint256) -> _balances[from]
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_45', 'amount'] 
REF_44 (->_balances) := TMP_124(uint256)",
		node_source_code_lines="[522]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	232 -> 233	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=ERC777,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Burned(operator,from,amount,data,operatorData)

IRs:
Emit Burned(operator.from.amount.data.operatorData)",
		node_expression="Burned(operator,from,amount,data,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="Emit Burned(operator.from.amount.data.operatorData)",
		node_source_code_lines="[524]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	233 -> 234	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=ERC777,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,address(0),amount)

IRs:
TMP_126 = CONVERT 0 to address
Emit Transfer(from.TMP_\
126.amount)",
		node_expression="Transfer(from,address(0),amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_126 = CONVERT 0 to address
Emit Transfer(from.TMP_126.amount)",
		node_source_code_lines="[525]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	234 -> 235	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=ERC777,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_ERC777__burn(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	236 -> 229	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[527, 528, 529, 530]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	238	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_128(bool) = tx.origin == owner_txorigin22
\
TMP_129(None) = SOLIDITY_CALL require(bool)(TMP_128)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_128(bool) = tx.origin == owner_txorigin22
TMP_129(None) = SOLIDITY_CALL require(bool)(TMP_128)",
		node_source_code_lines="[528]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	237 -> 238	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_130 = CONVERT this to address
REF_48 -> \
BALANCE TMP_130
Transfer dest:_recipient value:REF_48",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_130 = CONVERT this to address
REF_48 -> BALANCE TMP_130
Transfer dest:_recipient value:REF_48",
		node_source_code_lines="[529]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_30.sol_ERC777_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[527, 528, 529, 530]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	240 -> 237	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=ERC777,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[541, 542, 543, 544, 545, 546, 547]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	242	[contract_name=ERC777,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[from] = _balances[from].sub(amount)

IRs:
REF_49(uint256) -> _balances[from]
REF_50(\
uint256) -> _balances[from]
TMP_132(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_50', 'amount'] 
REF_49 (->_balances) := TMP_132(uint256)",
		node_expression="_balances[from] = _balances[from].sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_49(uint256) -> _balances[from]
REF_50(uint256) -> _balances[from]
TMP_132(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_50', 'amount'] 
REF_49 (->_balances) := TMP_132(uint256)",
		node_source_code_lines="[542]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243	[contract_name=ERC777,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[to] = _balances[to].add(amount)

IRs:
REF_52(uint256) -> _balances[to]
REF_53(uint256) \
-> _balances[to]
TMP_133(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_53', 'amount'] 
\
REF_52 (->_balances) := TMP_133(uint256)",
		node_expression="_balances[to] = _balances[to].add(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_52(uint256) -> _balances[to]
REF_53(uint256) -> _balances[to]
TMP_133(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_53', 'amount'] 
REF_52 (->_balances) := TMP_133(uint256)",
		node_source_code_lines="[543]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	242 -> 243	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=ERC777,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Sent(operator,from,to,amount,userData,operatorData)

IRs:
Emit Sent(operator.from.to.amount.userData.operatorData)",
		node_expression="Sent(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="Emit Sent(operator.from.to.amount.userData.operatorData)",
		node_source_code_lines="[545]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	243 -> 244	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=ERC777,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,to,amount)

IRs:
Emit Transfer(from.to.amount)",
		node_expression="Transfer(from,to,amount)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(from.to.amount)",
		node_source_code_lines="[546]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	244 -> 245	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=ERC777,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_ERC777__move(address,address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	246 -> 241	[key=0,
		edge_type=next,
		label=Next];
	247	[contract_name=ERC777,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[548, 549, 550]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	248	[contract_name=ERC777,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_136(bool) = tx.origin == owner_txorigin12
\
TMP_137(None) = SOLIDITY_CALL require(bool)(TMP_136)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_136(bool) = tx.origin == owner_txorigin12
TMP_137(None) = SOLIDITY_CALL require(bool)(TMP_136)",
		node_source_code_lines="[549]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	247 -> 248	[key=0,
		edge_type=next,
		label=Next];
	249	[contract_name=ERC777,
		function_fullname="bug_txorigin12(address)",
		label="buggy_30.sol_ERC777_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[548, 549, 550]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	249 -> 247	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=ERC777,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[552, 553, 554, 555, 556, 557, 558, 559, 560]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	251	[contract_name=ERC777,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(spender != address(0),ERC777: approve to the zero address)

IRs:
TMP_138 = \
CONVERT 0 to address
TMP_139(bool) = spender != TMP_138
TMP_140(None) = SOLIDITY_CALL require(bool,string)(TMP_139,ERC777: approve \
to the zero address)",
		node_expression="require(bool,string)(spender != address(0),ERC777: approve to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_138 = CONVERT 0 to address
TMP_139(bool) = spender != TMP_138
TMP_140(None) = SOLIDITY_CALL require(bool,string)(TMP_139,ERC777: \
approve to the zero address)",
		node_source_code_lines="[556]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	250 -> 251	[key=0,
		edge_type=next,
		label=Next];
	252	[contract_name=ERC777,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_allowances[holder][spender] = value

IRs:
REF_55(mapping(address => uint256)) -> _allowances[\
holder]
REF_56(uint256) -> REF_55[spender]
REF_56 (->_allowances) := value(uint256)",
		node_expression="_allowances[holder][spender] = value",
		node_info_vulnerabilities=None,
		node_irs="REF_55(mapping(address => uint256)) -> _allowances[holder]
REF_56(uint256) -> REF_55[spender]
REF_56 (->_allowances) := value(uint256)",
		node_source_code_lines="[558]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	251 -> 252	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=ERC777,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(holder,spender,value)

IRs:
Emit Approval(holder.spender.value)",
		node_expression="Approval(holder,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(holder.spender.value)",
		node_source_code_lines="[559]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=ERC777,
		function_fullname="_approve(address,address,uint256)",
		label="buggy_30.sol_ERC777__approve(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[552, 553, 554, 555, 556, 557, 558, 559, 560]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	254 -> 250	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=ERC777,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[561, 562, 563, 564]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	256	[contract_name=ERC777,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_142(bool) = tx.origin == owner_txorigin11
\
TMP_143(None) = SOLIDITY_CALL require(bool)(TMP_142)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_142(bool) = tx.origin == owner_txorigin11
TMP_143(None) = SOLIDITY_CALL require(bool)(TMP_142)",
		node_source_code_lines="[562]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	255 -> 256	[key=0,
		edge_type=next,
		label=Next];
	257	[contract_name=ERC777,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_57(None) -> to.call
REF_58(None) -> REF_57.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_57(None) -> to.call
REF_58(None) -> REF_57.value",
		node_source_code_lines="[563]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=ERC777,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_30.sol_ERC777_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[561, 562, 563, 564]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	258 -> 255	[key=0,
		edge_type=next,
		label=Next];
	259	[contract_name=ERC777,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[576, 577, 578, 579, 580, 581]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	260	[contract_name=ERC777,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
implementer = _erc1820.getInterfaceImplementer(from,TOKENS_SENDER_INTERFACE_HASH)

IRs:
TMP_\
145(address) = HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:getInterfaceImplementer, arguments:['from', 'TOKENS_SENDER_\
INTERFACE_HASH']  
implementer(address) := TMP_145(address)",
		node_expression="implementer = _erc1820.getInterfaceImplementer(from,TOKENS_SENDER_INTERFACE_HASH)",
		node_info_vulnerabilities=None,
		node_irs="TMP_145(address) = HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:getInterfaceImplementer, arguments:['from', 'TOKENS_\
SENDER_INTERFACE_HASH']  
implementer(address) := TMP_145(address)",
		node_source_code_lines="[577]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	259 -> 260	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=ERC777,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: IF

EXPRESSION:
implementer != address(0)

IRs:
TMP_146 = CONVERT 0 to address
TMP_147(bool) = implementer != TMP_146
\
CONDITION TMP_147",
		node_expression="implementer != address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_146 = CONVERT 0 to address
TMP_147(bool) = implementer != TMP_146
CONDITION TMP_147",
		node_source_code_lines="[578]",
		node_type=IF,
		source_file="buggy_30.sol"];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=ERC777,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData)

IRs:
\
TMP_148 = CONVERT implementer to IERC777Sender
HIGH_LEVEL_CALL, dest:TMP_148(IERC777Sender), function:tokensToSend, arguments:['\
operator', 'from', 'to', 'amount', 'userData', 'operatorData']  ",
		node_expression="IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="TMP_148 = CONVERT implementer to IERC777Sender
HIGH_LEVEL_CALL, dest:TMP_148(IERC777Sender), function:tokensToSend, arguments:['\
operator', 'from', 'to', 'amount', 'userData', 'operatorData']  ",
		node_source_code_lines="[579]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	261 -> 262	[key=0,
		edge_type=if_true,
		label=True];
	263	[contract_name=ERC777,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[578, 579, 580]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	261 -> 263	[key=0,
		edge_type=if_false,
		label=False];
	262 -> 263	[key=0,
		edge_type=next,
		label=Next];
	264	[contract_name=ERC777,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_ERC777__callTokensToSend(address,address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	264 -> 259	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=ERC777,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[582, 583, 584, 585]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	266	[contract_name=ERC777,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_150(bool) = tx.origin == owner_txorigin1
\
TMP_151(None) = SOLIDITY_CALL require(bool)(TMP_150)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_150(bool) = tx.origin == owner_txorigin1
TMP_151(None) = SOLIDITY_CALL require(bool)(TMP_150)",
		node_source_code_lines="[583]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	265 -> 266	[key=0,
		edge_type=next,
		label=Next];
	267	[contract_name=ERC777,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[584]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=ERC777,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_30.sol_ERC777_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[582, 583, 584, 585]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	268 -> 265	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=ERC777,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[598, 599, 600, 601, 602, 603, 604, 605]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	270	[contract_name=ERC777,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
implementer = _erc1820.getInterfaceImplementer(to,TOKENS_RECIPIENT_INTERFACE_HASH)

IRs:
TMP_\
153(address) = HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:getInterfaceImplementer, arguments:['to', 'TOKENS_RECIPIENT_\
INTERFACE_HASH']  
implementer(address) := TMP_153(address)",
		node_expression="implementer = _erc1820.getInterfaceImplementer(to,TOKENS_RECIPIENT_INTERFACE_HASH)",
		node_info_vulnerabilities=None,
		node_irs="TMP_153(address) = HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:getInterfaceImplementer, arguments:['to', 'TOKENS_\
RECIPIENT_INTERFACE_HASH']  
implementer(address) := TMP_153(address)",
		node_source_code_lines="[599]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	269 -> 270	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=ERC777,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: IF

EXPRESSION:
implementer != address(0)

IRs:
TMP_154 = CONVERT 0 to address
TMP_155(bool) = implementer != TMP_154
\
CONDITION TMP_155",
		node_expression="implementer != address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_154 = CONVERT 0 to address
TMP_155(bool) = implementer != TMP_154
CONDITION TMP_155",
		node_source_code_lines="[600]",
		node_type=IF,
		source_file="buggy_30.sol"];
	270 -> 271	[key=0,
		edge_type=next,
		label=Next];
	272	[contract_name=ERC777,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
IERC777Recipient(implementer).tokensReceived(operator,from,to,amount,userData,operatorData)

\
IRs:
TMP_156 = CONVERT implementer to IERC777Recipient
HIGH_LEVEL_CALL, dest:TMP_156(IERC777Recipient), function:tokensReceived, \
arguments:['operator', 'from', 'to', 'amount', 'userData', 'operatorData']  ",
		node_expression="IERC777Recipient(implementer).tokensReceived(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="TMP_156 = CONVERT implementer to IERC777Recipient
HIGH_LEVEL_CALL, dest:TMP_156(IERC777Recipient), function:tokensReceived, arguments:['\
operator', 'from', 'to', 'amount', 'userData', 'operatorData']  ",
		node_source_code_lines="[601]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	271 -> 272	[key=0,
		edge_type=if_true,
		label=True];
	273	[contract_name=ERC777,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: IF

EXPRESSION:
requireReceptionAck

IRs:
CONDITION requireReceptionAck",
		node_expression=requireReceptionAck,
		node_info_vulnerabilities=None,
		node_irs="CONDITION requireReceptionAck",
		node_source_code_lines="[602]",
		node_type=IF,
		source_file="buggy_30.sol"];
	271 -> 273	[key=0,
		edge_type=if_false,
		label=False];
	276	[contract_name=ERC777,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[600, 601, 602, 603, 604]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	272 -> 276	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=ERC777,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! to.isContract(),ERC777: token recipient contract has no implementer for \
ERC777TokensRecipient)

IRs:
TMP_158(bool) = LIBRARY_CALL, dest:Address, function:Address.isContract(address), arguments:['to'] 
\
TMP_159 = ! TMP_158 
TMP_160(None) = SOLIDITY_CALL require(bool,string)(TMP_159,ERC777: token recipient contract has no implementer \
for ERC777TokensRecipient)",
		node_expression="require(bool,string)(! to.isContract(),ERC777: token recipient contract has no implementer for ERC777TokensRecipient)",
		node_info_vulnerabilities=None,
		node_irs="TMP_158(bool) = LIBRARY_CALL, dest:Address, function:Address.isContract(address), arguments:['to'] 
TMP_159 = ! TMP_158 
TMP_160(\
None) = SOLIDITY_CALL require(bool,string)(TMP_159,ERC777: token recipient contract has no implementer for ERC777TokensRecipient)",
		node_source_code_lines="[603]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	273 -> 274	[key=0,
		edge_type=if_true,
		label=True];
	275	[contract_name=ERC777,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[602, 603, 604]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	273 -> 275	[key=0,
		edge_type=if_false,
		label=False];
	274 -> 275	[key=0,
		edge_type=next,
		label=Next];
	275 -> 276	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=ERC777,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="buggy_30.sol_ERC777__callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	277 -> 269	[key=0,
		edge_type=next,
		label=Next];
	278	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[606, 607, 608, 609]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	279	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_161(bool) = tx.origin == owner_txorigin2
\
TMP_162(None) = SOLIDITY_CALL require(bool)(TMP_161)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_161(bool) = tx.origin == owner_txorigin2
TMP_162(None) = SOLIDITY_CALL require(bool)(TMP_161)",
		node_source_code_lines="[607]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	278 -> 279	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_163 = CONVERT this to address
REF_66 -> \
BALANCE TMP_163
Transfer dest:_recipient value:REF_66",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_163 = CONVERT this to address
REF_66 -> BALANCE TMP_163
Transfer dest:_recipient value:REF_66",
		node_source_code_lines="[608]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	279 -> 280	[key=0,
		edge_type=next,
		label=Next];
	281	[contract_name=ERC777,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_30.sol_ERC777_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[606, 607, 608, 609]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	281 -> 278	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=ERC777,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
_erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24)

IRs:
TMP_165 = \
CONVERT 137743751162352440304869156374792304326613118244 to IERC1820Registry
_erc1820(IERC1820Registry) := TMP_165(IERC1820Registry)",
		node_expression="_erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24)",
		node_info_vulnerabilities=None,
		node_irs="TMP_165 = CONVERT 137743751162352440304869156374792304326613118244 to IERC1820Registry
_erc1820(IERC1820Registry) := TMP_165(IERC1820Registry)",
		node_source_code_lines="[224]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_30.sol"];
	283	[contract_name=ERC777,
		function_fullname="slitherConstructorVariables()",
		label="buggy_30.sol_ERC777_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, \
246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, \
272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, \
298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, \
324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, \
350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, \
376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, \
402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, \
428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, \
454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, \
480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, \
506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, \
532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, \
558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, \
584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, \
610]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	283 -> 282	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=ERC777,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
TOKENS_SENDER_INTERFACE_HASH = 0x29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895

\
IRs:
TOKENS_SENDER_INTERFACE_HASH(bytes32) := 18936552921575092301472466748482491067159488139731697543124572343800628504725(uint256)",
		node_expression="TOKENS_SENDER_INTERFACE_HASH = 0x29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
		node_info_vulnerabilities=None,
		node_irs="TOKENS_SENDER_INTERFACE_HASH(bytes32) := 18936552921575092301472466748482491067159488139731697543124572343800628504725(uint256)",
		node_source_code_lines="[237, 238]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_30.sol"];
	285	[contract_name=ERC777,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
TOKENS_RECIPIENT_INTERFACE_HASH = 0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b

\
IRs:
TOKENS_RECIPIENT_INTERFACE_HASH(bytes32) := 80741353335606793576644178559265408063696393279619534167571325834855102858555(uint256)",
		node_expression="TOKENS_RECIPIENT_INTERFACE_HASH = 0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
		node_info_vulnerabilities=None,
		node_irs="TOKENS_RECIPIENT_INTERFACE_HASH(bytes32) := 80741353335606793576644178559265408063696393279619534167571325834855102858555(uint256)",
		node_source_code_lines="[241, 242]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_30.sol"];
	284 -> 285	[key=0,
		edge_type=next,
		label=Next];
	286	[contract_name=ERC777,
		function_fullname="slitherConstructorConstantVariables()",
		label="buggy_30.sol_ERC777_slitherConstructorConstantVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, \
246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, \
272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, \
298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, \
324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, \
350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, \
376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, \
402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, \
428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, \
454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, \
480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, \
506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, \
532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, \
558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, \
584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, \
610]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	286 -> 284	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=Roles,
		function_fullname="add(Roles.Role,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[618, 619, 620, 621]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	288	[contract_name=Roles,
		function_fullname="add(Roles.Role,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! has(role,account),Roles: account already has role)

IRs:
TMP_166(bool) = \
INTERNAL_CALL, Roles.has(Roles.Role,address)(role,account)
TMP_167 = ! TMP_166 
TMP_168(None) = SOLIDITY_CALL require(bool,string)(\
TMP_167,Roles: account already has role)",
		node_expression="require(bool,string)(! has(role,account),Roles: account already has role)",
		node_info_vulnerabilities=None,
		node_irs="TMP_166(bool) = INTERNAL_CALL, Roles.has(Roles.Role,address)(role,account)
TMP_167 = ! TMP_166 
TMP_168(None) = SOLIDITY_CALL require(\
bool,string)(TMP_167,Roles: account already has role)",
		node_source_code_lines="[619]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	287 -> 288	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=Roles,
		function_fullname="add(Roles.Role,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
role.bearer[account] = true

IRs:
REF_67(mapping(address => bool)) -> role.bearer
REF_68(bool) \
-> REF_67[account]
REF_68 (->role) := True(bool)",
		node_expression="role.bearer[account] = true",
		node_info_vulnerabilities=None,
		node_irs="REF_67(mapping(address => bool)) -> role.bearer
REF_68(bool) -> REF_67[account]
REF_68 (->role) := True(bool)",
		node_source_code_lines="[620]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	288 -> 289	[key=0,
		edge_type=next,
		label=Next];
	290	[contract_name=Roles,
		function_fullname="add(Roles.Role,address)",
		label="buggy_30.sol_Roles_add(Roles.Role,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[618, 619, 620, 621]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	290 -> 287	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=Roles,
		function_fullname="remove(Roles.Role,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[624, 625, 626, 627]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	292	[contract_name=Roles,
		function_fullname="remove(Roles.Role,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(has(role,account),Roles: account does not have role)

IRs:
TMP_169(bool) = \
INTERNAL_CALL, Roles.has(Roles.Role,address)(role,account)
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,Roles: account \
does not have role)",
		node_expression="require(bool,string)(has(role,account),Roles: account does not have role)",
		node_info_vulnerabilities=None,
		node_irs="TMP_169(bool) = INTERNAL_CALL, Roles.has(Roles.Role,address)(role,account)
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_\
169,Roles: account does not have role)",
		node_source_code_lines="[625]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	291 -> 292	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=Roles,
		function_fullname="remove(Roles.Role,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
role.bearer[account] = false

IRs:
REF_69(mapping(address => bool)) -> role.bearer
REF_70(bool) \
-> REF_69[account]
REF_70 (->role) := False(bool)",
		node_expression="role.bearer[account] = false",
		node_info_vulnerabilities=None,
		node_irs="REF_69(mapping(address => bool)) -> role.bearer
REF_70(bool) -> REF_69[account]
REF_70 (->role) := False(bool)",
		node_source_code_lines="[626]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	292 -> 293	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=Roles,
		function_fullname="remove(Roles.Role,address)",
		label="buggy_30.sol_Roles_remove(Roles.Role,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[624, 625, 626, 627]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	294 -> 291	[key=0,
		edge_type=next,
		label=Next];
	295	[contract_name=Roles,
		function_fullname="has(Roles.Role,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[630, 631, 632, 633]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	296	[contract_name=Roles,
		function_fullname="has(Roles.Role,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(account != address(0),Roles: account is the zero address)

IRs:
TMP_171 = \
CONVERT 0 to address
TMP_172(bool) = account != TMP_171
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Roles: account \
is the zero address)",
		node_expression="require(bool,string)(account != address(0),Roles: account is the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_171 = CONVERT 0 to address
TMP_172(bool) = account != TMP_171
TMP_173(None) = SOLIDITY_CALL require(bool,string)(TMP_172,Roles: \
account is the zero address)",
		node_source_code_lines="[631]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	295 -> 296	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=Roles,
		function_fullname="has(Roles.Role,address)",
		label="Node Type: RETURN

EXPRESSION:
role.bearer[account]

IRs:
REF_71(mapping(address => bool)) -> role.bearer
REF_72(bool) -> REF_71[\
account]
RETURN REF_72",
		node_expression="role.bearer[account]",
		node_info_vulnerabilities=None,
		node_irs="REF_71(mapping(address => bool)) -> role.bearer
REF_72(bool) -> REF_71[account]
RETURN REF_72",
		node_source_code_lines="[632]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	296 -> 297	[key=0,
		edge_type=next,
		label=Next];
	298	[contract_name=Roles,
		function_fullname="has(Roles.Role,address)",
		label="buggy_30.sol_Roles_has(Roles.Role,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[630, 631, 632, 633]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	298 -> 295	[key=0,
		edge_type=next,
		label=Next];
	299	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[639, 640, 641, 642]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	300	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_174(bool) = tx.origin == owner_txorigin35
\
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_174(bool) = tx.origin == owner_txorigin35
TMP_175(None) = SOLIDITY_CALL require(bool)(TMP_174)",
		node_source_code_lines="[640]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	299 -> 300	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_73(None) -> to.call
REF_74(None) -> REF_73.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_73(None) -> to.call
REF_74(None) -> REF_73.value",
		node_source_code_lines="[641]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	300 -> 301	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_30.sol_MinterRole_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[639, 640, 641, 642]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	302 -> 299	[key=0,
		edge_type=next,
		label=Next];
	303	[contract_name=MinterRole,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[644, 645, 646]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	304	[contract_name=MinterRole,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_177(bool) = tx.origin == owner_txorigin40
\
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_177(bool) = tx.origin == owner_txorigin40
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_source_code_lines="[645]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	303 -> 304	[key=0,
		edge_type=next,
		label=Next];
	305	[contract_name=MinterRole,
		function_fullname="bug_txorigin40(address)",
		label="buggy_30.sol_MinterRole_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[644, 645, 646]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	305 -> 303	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=MinterRole,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[651, 652, 653]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	307	[contract_name=MinterRole,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_addMinter(msg.sender)

IRs:
INTERNAL_CALL, MinterRole._addMinter(address)(msg.sender)",
		node_expression="_addMinter(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, MinterRole._addMinter(address)(msg.sender)",
		node_source_code_lines="[652]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	306 -> 307	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=MinterRole,
		function_fullname="constructor()",
		label="buggy_30.sol_MinterRole_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[651, 652, 653]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	308 -> 306	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=MinterRole,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[654, 655, 656, 657]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	310	[contract_name=MinterRole,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_180(bool) = tx.origin == owner_txorigin17
\
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_180(bool) = tx.origin == owner_txorigin17
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_source_code_lines="[655]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	309 -> 310	[key=0,
		edge_type=next,
		label=Next];
	311	[contract_name=MinterRole,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[656]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	310 -> 311	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=MinterRole,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_30.sol_MinterRole_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[654, 655, 656, 657]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	312 -> 309	[key=0,
		edge_type=next,
		label=Next];
	313	[contract_name=MinterRole,
		function_fullname="isMinter(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[664, 665, 666]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	314	[contract_name=MinterRole,
		function_fullname="isMinter(address)",
		label="Node Type: RETURN

EXPRESSION:
_minters.has(account)

IRs:
TMP_183(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,\
address), arguments:['_minters', 'account'] 
RETURN TMP_183",
		node_expression="_minters.has(account)",
		node_info_vulnerabilities=None,
		node_irs="TMP_183(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,address), arguments:['_minters', 'account'] 
RETURN TMP_\
183",
		node_source_code_lines="[665]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	313 -> 314	[key=0,
		edge_type=next,
		label=Next];
	315	[contract_name=MinterRole,
		function_fullname="isMinter(address)",
		label="buggy_30.sol_MinterRole_isMinter(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[664, 665, 666]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	315 -> 313	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=MinterRole,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[667, 668, 669, 670]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	317	[contract_name=MinterRole,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_184(bool) = tx.origin == owner_txorigin37
\
TMP_185(None) = SOLIDITY_CALL require(bool)(TMP_184)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_184(bool) = tx.origin == owner_txorigin37
TMP_185(None) = SOLIDITY_CALL require(bool)(TMP_184)",
		node_source_code_lines="[668]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	316 -> 317	[key=0,
		edge_type=next,
		label=Next];
	318	[contract_name=MinterRole,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[669]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	317 -> 318	[key=0,
		edge_type=next,
		label=Next];
	319	[contract_name=MinterRole,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_30.sol_MinterRole_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[667, 668, 669, 670]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	319 -> 316	[key=0,
		edge_type=next,
		label=Next];
	320	[contract_name=MinterRole,
		function_fullname="addMinter(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[672, 673, 674]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	322	[contract_name=MinterRole,
		function_fullname="addMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyMinter()

IRs:
MODIFIER_CALL, MinterRole.onlyMinter()()",
		node_expression="onlyMinter()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, MinterRole.onlyMinter()()",
		node_source_code_lines="[672]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	320 -> 322	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=MinterRole,
		function_fullname="addMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_addMinter(account)

IRs:
INTERNAL_CALL, MinterRole._addMinter(address)(account)",
		node_expression="_addMinter(account)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, MinterRole._addMinter(address)(account)",
		node_source_code_lines="[673]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	322 -> 321	[key=0,
		edge_type=next,
		label=Next];
	323	[contract_name=MinterRole,
		function_fullname="addMinter(address)",
		label="buggy_30.sol_MinterRole_addMinter(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[672, 673, 674]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	323 -> 320	[key=0,
		edge_type=next,
		label=Next];
	324	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[675, 676, 677, 678]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	325	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_189(bool) = tx.origin == owner_txorigin3
\
TMP_190(None) = SOLIDITY_CALL require(bool)(TMP_189)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_189(bool) = tx.origin == owner_txorigin3
TMP_190(None) = SOLIDITY_CALL require(bool)(TMP_189)",
		node_source_code_lines="[676]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	324 -> 325	[key=0,
		edge_type=next,
		label=Next];
	326	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_78(None) -> to.call
REF_79(None) -> REF_78.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_78(None) -> to.call
REF_79(None) -> REF_78.value",
		node_source_code_lines="[677]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	325 -> 326	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_30.sol_MinterRole_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[675, 676, 677, 678]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	327 -> 324	[key=0,
		edge_type=next,
		label=Next];
	328	[contract_name=MinterRole,
		function_fullname="renounceMinter()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[680, 681, 682]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	329	[contract_name=MinterRole,
		function_fullname="renounceMinter()",
		label="Node Type: EXPRESSION

EXPRESSION:
_removeMinter(msg.sender)

IRs:
INTERNAL_CALL, MinterRole._removeMinter(address)(msg.sender)",
		node_expression="_removeMinter(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, MinterRole._removeMinter(address)(msg.sender)",
		node_source_code_lines="[681]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	328 -> 329	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=MinterRole,
		function_fullname="renounceMinter()",
		label="buggy_30.sol_MinterRole_renounceMinter()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[680, 681, 682]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	330 -> 328	[key=0,
		edge_type=next,
		label=Next];
	331	[contract_name=MinterRole,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[683, 684, 685, 686]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	332	[contract_name=MinterRole,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_193(bool) = tx.origin == owner_txorigin9
\
TMP_194(None) = SOLIDITY_CALL require(bool)(TMP_193)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_193(bool) = tx.origin == owner_txorigin9
TMP_194(None) = SOLIDITY_CALL require(bool)(TMP_193)",
		node_source_code_lines="[684]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	331 -> 332	[key=0,
		edge_type=next,
		label=Next];
	333	[contract_name=MinterRole,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[685]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	332 -> 333	[key=0,
		edge_type=next,
		label=Next];
	334	[contract_name=MinterRole,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_30.sol_MinterRole_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[683, 684, 685, 686]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	334 -> 331	[key=0,
		edge_type=next,
		label=Next];
	335	[contract_name=MinterRole,
		function_fullname="_addMinter(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[688, 689, 690, 691]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	336	[contract_name=MinterRole,
		function_fullname="_addMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_minters.add(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), \
arguments:['_minters', 'account'] ",
		node_expression="_minters.add(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), arguments:['_minters', 'account'] ",
		node_source_code_lines="[689]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	335 -> 336	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=MinterRole,
		function_fullname="_addMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
MinterAdded(account)

IRs:
Emit MinterAdded(account)",
		node_expression="MinterAdded(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit MinterAdded(account)",
		node_source_code_lines="[690]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	336 -> 337	[key=0,
		edge_type=next,
		label=Next];
	338	[contract_name=MinterRole,
		function_fullname="_addMinter(address)",
		label="buggy_30.sol_MinterRole__addMinter(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[688, 689, 690, 691]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	338 -> 335	[key=0,
		edge_type=next,
		label=Next];
	339	[contract_name=MinterRole,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[692, 693, 694, 695]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	340	[contract_name=MinterRole,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_198(bool) = tx.origin == owner_txorigin25
\
TMP_199(None) = SOLIDITY_CALL require(bool)(TMP_198)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_198(bool) = tx.origin == owner_txorigin25
TMP_199(None) = SOLIDITY_CALL require(bool)(TMP_198)",
		node_source_code_lines="[693]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	339 -> 340	[key=0,
		edge_type=next,
		label=Next];
	341	[contract_name=MinterRole,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[694]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	340 -> 341	[key=0,
		edge_type=next,
		label=Next];
	342	[contract_name=MinterRole,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_30.sol_MinterRole_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[692, 693, 694, 695]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	342 -> 339	[key=0,
		edge_type=next,
		label=Next];
	343	[contract_name=MinterRole,
		function_fullname="_removeMinter(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[697, 698, 699, 700]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	344	[contract_name=MinterRole,
		function_fullname="_removeMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_minters.remove(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), \
arguments:['_minters', 'account'] ",
		node_expression="_minters.remove(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), arguments:['_minters', 'account'] ",
		node_source_code_lines="[698]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	343 -> 344	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=MinterRole,
		function_fullname="_removeMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
MinterRemoved(account)

IRs:
Emit MinterRemoved(account)",
		node_expression="MinterRemoved(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit MinterRemoved(account)",
		node_source_code_lines="[699]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	344 -> 345	[key=0,
		edge_type=next,
		label=Next];
	346	[contract_name=MinterRole,
		function_fullname="_removeMinter(address)",
		label="buggy_30.sol_MinterRole__removeMinter(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[697, 698, 699, 700]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	346 -> 343	[key=0,
		edge_type=next,
		label=Next];
	347	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[701, 702, 703, 704]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	348	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_203(bool) = tx.origin == owner_txorigin19
\
TMP_204(None) = SOLIDITY_CALL require(bool)(TMP_203)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_203(bool) = tx.origin == owner_txorigin19
TMP_204(None) = SOLIDITY_CALL require(bool)(TMP_203)",
		node_source_code_lines="[702]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	347 -> 348	[key=0,
		edge_type=next,
		label=Next];
	349	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_source_code_lines="[703]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	348 -> 349	[key=0,
		edge_type=next,
		label=Next];
	350	[contract_name=MinterRole,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_30.sol_MinterRole_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[701, 702, 703, 704]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	350 -> 347	[key=0,
		edge_type=next,
		label=Next];
	351	[contract_name=MinterRole,
		function_fullname="onlyMinter()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[659, 660, 661, 662]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	352	[contract_name=MinterRole,
		function_fullname="onlyMinter()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isMinter(msg.sender),MinterRole: caller does not have the Minter role)

\
IRs:
TMP_206(bool) = INTERNAL_CALL, MinterRole.isMinter(address)(msg.sender)
TMP_207(None) = SOLIDITY_CALL require(bool,string)(\
TMP_206,MinterRole: caller does not have the Minter role)",
		node_expression="require(bool,string)(isMinter(msg.sender),MinterRole: caller does not have the Minter role)",
		node_info_vulnerabilities=None,
		node_irs="TMP_206(bool) = INTERNAL_CALL, MinterRole.isMinter(address)(msg.sender)
TMP_207(None) = SOLIDITY_CALL require(bool,string)(TMP_206,\
MinterRole: caller does not have the Minter role)",
		node_source_code_lines="[660]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	351 -> 352	[key=0,
		edge_type=next,
		label=Next];
	353	[contract_name=MinterRole,
		function_fullname="onlyMinter()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[661]",
		node_type=_,
		source_file="buggy_30.sol"];
	352 -> 353	[key=0,
		edge_type=next,
		label=Next];
	354	[contract_name=MinterRole,
		function_fullname="onlyMinter()",
		label="buggy_30.sol_MinterRole_onlyMinter()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[659, 660, 661, 662]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	354 -> 351	[key=0,
		edge_type=next,
		label=Next];
	355	[contract_name=PauserRole,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[710, 711, 712, 713]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	356	[contract_name=PauserRole,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_208(bool) = tx.origin == owner_txorigin33
\
TMP_209(None) = SOLIDITY_CALL require(bool)(TMP_208)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_208(bool) = tx.origin == owner_txorigin33
TMP_209(None) = SOLIDITY_CALL require(bool)(TMP_208)",
		node_source_code_lines="[711]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	355 -> 356	[key=0,
		edge_type=next,
		label=Next];
	357	[contract_name=PauserRole,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[712]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	356 -> 357	[key=0,
		edge_type=next,
		label=Next];
	358	[contract_name=PauserRole,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_30.sol_PauserRole_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[710, 711, 712, 713]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	358 -> 355	[key=0,
		edge_type=next,
		label=Next];
	359	[contract_name=PauserRole,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[715, 716, 717, 718]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	360	[contract_name=PauserRole,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_211(bool) = tx.origin == owner_txorigin27
\
TMP_212(None) = SOLIDITY_CALL require(bool)(TMP_211)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_211(bool) = tx.origin == owner_txorigin27
TMP_212(None) = SOLIDITY_CALL require(bool)(TMP_211)",
		node_source_code_lines="[716]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	359 -> 360	[key=0,
		edge_type=next,
		label=Next];
	361	[contract_name=PauserRole,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_87(None) -> to.call
REF_88(None) -> REF_87.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_87(None) -> to.call
REF_88(None) -> REF_87.value",
		node_source_code_lines="[717]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	360 -> 361	[key=0,
		edge_type=next,
		label=Next];
	362	[contract_name=PauserRole,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_30.sol_PauserRole_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[715, 716, 717, 718]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	362 -> 359	[key=0,
		edge_type=next,
		label=Next];
	363	[contract_name=PauserRole,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[723, 724, 725]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	364	[contract_name=PauserRole,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_addPauser(msg.sender)

IRs:
INTERNAL_CALL, PauserRole._addPauser(address)(msg.sender)",
		node_expression="_addPauser(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, PauserRole._addPauser(address)(msg.sender)",
		node_source_code_lines="[724]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	363 -> 364	[key=0,
		edge_type=next,
		label=Next];
	365	[contract_name=PauserRole,
		function_fullname="constructor()",
		label="buggy_30.sol_PauserRole_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[723, 724, 725]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	365 -> 363	[key=0,
		edge_type=next,
		label=Next];
	366	[contract_name=PauserRole,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[726, 727, 728, 729]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	367	[contract_name=PauserRole,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_215(bool) = tx.origin == owner_txorigin26
\
TMP_216(None) = SOLIDITY_CALL require(bool)(TMP_215)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_215(bool) = tx.origin == owner_txorigin26
TMP_216(None) = SOLIDITY_CALL require(bool)(TMP_215)",
		node_source_code_lines="[727]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	366 -> 367	[key=0,
		edge_type=next,
		label=Next];
	368	[contract_name=PauserRole,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_217 = CONVERT this to address
REF_90 -> \
BALANCE TMP_217
Transfer dest:_recipient value:REF_90",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_217 = CONVERT this to address
REF_90 -> BALANCE TMP_217
Transfer dest:_recipient value:REF_90",
		node_source_code_lines="[728]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	367 -> 368	[key=0,
		edge_type=next,
		label=Next];
	369	[contract_name=PauserRole,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_30.sol_PauserRole_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[726, 727, 728, 729]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	369 -> 366	[key=0,
		edge_type=next,
		label=Next];
	370	[contract_name=PauserRole,
		function_fullname="isPauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[736, 737, 738]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	371	[contract_name=PauserRole,
		function_fullname="isPauser(address)",
		label="Node Type: RETURN

EXPRESSION:
_pausers.has(account)

IRs:
TMP_219(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,\
address), arguments:['_pausers', 'account'] 
RETURN TMP_219",
		node_expression="_pausers.has(account)",
		node_info_vulnerabilities=None,
		node_irs="TMP_219(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,address), arguments:['_pausers', 'account'] 
RETURN TMP_\
219",
		node_source_code_lines="[737]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	370 -> 371	[key=0,
		edge_type=next,
		label=Next];
	372	[contract_name=PauserRole,
		function_fullname="isPauser(address)",
		label="buggy_30.sol_PauserRole_isPauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[736, 737, 738]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	372 -> 370	[key=0,
		edge_type=next,
		label=Next];
	373	[contract_name=PauserRole,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[739, 740, 741]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	374	[contract_name=PauserRole,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_220(bool) = tx.origin == owner_txorigin20
\
TMP_221(None) = SOLIDITY_CALL require(bool)(TMP_220)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_220(bool) = tx.origin == owner_txorigin20
TMP_221(None) = SOLIDITY_CALL require(bool)(TMP_220)",
		node_source_code_lines="[740]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	373 -> 374	[key=0,
		edge_type=next,
		label=Next];
	375	[contract_name=PauserRole,
		function_fullname="bug_txorigin20(address)",
		label="buggy_30.sol_PauserRole_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[739, 740, 741]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	375 -> 373	[key=0,
		edge_type=next,
		label=Next];
	376	[contract_name=PauserRole,
		function_fullname="addPauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[743, 744, 745]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	378	[contract_name=PauserRole,
		function_fullname="addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyPauser()

IRs:
MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_expression="onlyPauser()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_source_code_lines="[743]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	376 -> 378	[key=0,
		edge_type=next,
		label=Next];
	377	[contract_name=PauserRole,
		function_fullname="addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_addPauser(account)

IRs:
INTERNAL_CALL, PauserRole._addPauser(address)(account)",
		node_expression="_addPauser(account)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, PauserRole._addPauser(address)(account)",
		node_source_code_lines="[744]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	378 -> 377	[key=0,
		edge_type=next,
		label=Next];
	379	[contract_name=PauserRole,
		function_fullname="addPauser(address)",
		label="buggy_30.sol_PauserRole_addPauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[743, 744, 745]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	379 -> 376	[key=0,
		edge_type=next,
		label=Next];
	380	[contract_name=PauserRole,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[746, 747, 748]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	381	[contract_name=PauserRole,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_224(bool) = tx.origin == owner_txorigin32
\
TMP_225(None) = SOLIDITY_CALL require(bool)(TMP_224)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_224(bool) = tx.origin == owner_txorigin32
TMP_225(None) = SOLIDITY_CALL require(bool)(TMP_224)",
		node_source_code_lines="[747]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	380 -> 381	[key=0,
		edge_type=next,
		label=Next];
	382	[contract_name=PauserRole,
		function_fullname="bug_txorigin32(address)",
		label="buggy_30.sol_PauserRole_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[746, 747, 748]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	382 -> 380	[key=0,
		edge_type=next,
		label=Next];
	383	[contract_name=PauserRole,
		function_fullname="renouncePauser()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[750, 751, 752]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	384	[contract_name=PauserRole,
		function_fullname="renouncePauser()",
		label="Node Type: EXPRESSION

EXPRESSION:
_removePauser(msg.sender)

IRs:
INTERNAL_CALL, PauserRole._removePauser(address)(msg.sender)",
		node_expression="_removePauser(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, PauserRole._removePauser(address)(msg.sender)",
		node_source_code_lines="[751]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	383 -> 384	[key=0,
		edge_type=next,
		label=Next];
	385	[contract_name=PauserRole,
		function_fullname="renouncePauser()",
		label="buggy_30.sol_PauserRole_renouncePauser()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[750, 751, 752]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	385 -> 383	[key=0,
		edge_type=next,
		label=Next];
	386	[contract_name=PauserRole,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[753, 754, 755, 756]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	387	[contract_name=PauserRole,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_227(bool) = tx.origin == owner_txorigin38
\
TMP_228(None) = SOLIDITY_CALL require(bool)(TMP_227)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_227(bool) = tx.origin == owner_txorigin38
TMP_228(None) = SOLIDITY_CALL require(bool)(TMP_227)",
		node_source_code_lines="[754]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	386 -> 387	[key=0,
		edge_type=next,
		label=Next];
	388	[contract_name=PauserRole,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_229 = CONVERT this to address
REF_93 -> \
BALANCE TMP_229
Transfer dest:_recipient value:REF_93",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_229 = CONVERT this to address
REF_93 -> BALANCE TMP_229
Transfer dest:_recipient value:REF_93",
		node_source_code_lines="[755]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	387 -> 388	[key=0,
		edge_type=next,
		label=Next];
	389	[contract_name=PauserRole,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_30.sol_PauserRole_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[753, 754, 755, 756]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	389 -> 386	[key=0,
		edge_type=next,
		label=Next];
	390	[contract_name=PauserRole,
		function_fullname="_addPauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[758, 759, 760, 761]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	391	[contract_name=PauserRole,
		function_fullname="_addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_pausers.add(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), \
arguments:['_pausers', 'account'] ",
		node_expression="_pausers.add(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), arguments:['_pausers', 'account'] ",
		node_source_code_lines="[759]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	390 -> 391	[key=0,
		edge_type=next,
		label=Next];
	392	[contract_name=PauserRole,
		function_fullname="_addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
PauserAdded(account)

IRs:
Emit PauserAdded(account)",
		node_expression="PauserAdded(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit PauserAdded(account)",
		node_source_code_lines="[760]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	391 -> 392	[key=0,
		edge_type=next,
		label=Next];
	393	[contract_name=PauserRole,
		function_fullname="_addPauser(address)",
		label="buggy_30.sol_PauserRole__addPauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[758, 759, 760, 761]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	393 -> 390	[key=0,
		edge_type=next,
		label=Next];
	394	[contract_name=PauserRole,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[762, 763, 764]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	395	[contract_name=PauserRole,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_233(bool) = tx.origin == owner_txorigin4
\
TMP_234(None) = SOLIDITY_CALL require(bool)(TMP_233)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_233(bool) = tx.origin == owner_txorigin4
TMP_234(None) = SOLIDITY_CALL require(bool)(TMP_233)",
		node_source_code_lines="[763]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	394 -> 395	[key=0,
		edge_type=next,
		label=Next];
	396	[contract_name=PauserRole,
		function_fullname="bug_txorigin4(address)",
		label="buggy_30.sol_PauserRole_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[762, 763, 764]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	396 -> 394	[key=0,
		edge_type=next,
		label=Next];
	397	[contract_name=PauserRole,
		function_fullname="_removePauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[766, 767, 768, 769]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	398	[contract_name=PauserRole,
		function_fullname="_removePauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_pausers.remove(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), \
arguments:['_pausers', 'account'] ",
		node_expression="_pausers.remove(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), arguments:['_pausers', 'account'] ",
		node_source_code_lines="[767]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	397 -> 398	[key=0,
		edge_type=next,
		label=Next];
	399	[contract_name=PauserRole,
		function_fullname="_removePauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
PauserRemoved(account)

IRs:
Emit PauserRemoved(account)",
		node_expression="PauserRemoved(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit PauserRemoved(account)",
		node_source_code_lines="[768]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	398 -> 399	[key=0,
		edge_type=next,
		label=Next];
	400	[contract_name=PauserRole,
		function_fullname="_removePauser(address)",
		label="buggy_30.sol_PauserRole__removePauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[766, 767, 768, 769]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	400 -> 397	[key=0,
		edge_type=next,
		label=Next];
	401	[contract_name=PauserRole,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[770, 771, 772, 773]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	402	[contract_name=PauserRole,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_237(bool) = tx.origin == owner_txorigin7
\
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_237(bool) = tx.origin == owner_txorigin7
TMP_238(None) = SOLIDITY_CALL require(bool)(TMP_237)",
		node_source_code_lines="[771]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	401 -> 402	[key=0,
		edge_type=next,
		label=Next];
	403	[contract_name=PauserRole,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_96(None) -> to.call
REF_97(None) -> REF_96.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_96(None) -> to.call
REF_97(None) -> REF_96.value",
		node_source_code_lines="[772]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	402 -> 403	[key=0,
		edge_type=next,
		label=Next];
	404	[contract_name=PauserRole,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_30.sol_PauserRole_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[770, 771, 772, 773]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	404 -> 401	[key=0,
		edge_type=next,
		label=Next];
	405	[contract_name=PauserRole,
		function_fullname="onlyPauser()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[731, 732, 733, 734]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	406	[contract_name=PauserRole,
		function_fullname="onlyPauser()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isPauser(msg.sender),PauserRole: caller does not have the Pauser role)

\
IRs:
TMP_240(bool) = INTERNAL_CALL, PauserRole.isPauser(address)(msg.sender)
TMP_241(None) = SOLIDITY_CALL require(bool,string)(\
TMP_240,PauserRole: caller does not have the Pauser role)",
		node_expression="require(bool,string)(isPauser(msg.sender),PauserRole: caller does not have the Pauser role)",
		node_info_vulnerabilities=None,
		node_irs="TMP_240(bool) = INTERNAL_CALL, PauserRole.isPauser(address)(msg.sender)
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,\
PauserRole: caller does not have the Pauser role)",
		node_source_code_lines="[732]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	405 -> 406	[key=0,
		edge_type=next,
		label=Next];
	407	[contract_name=PauserRole,
		function_fullname="onlyPauser()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[733]",
		node_type=_,
		source_file="buggy_30.sol"];
	406 -> 407	[key=0,
		edge_type=next,
		label=Next];
	408	[contract_name=PauserRole,
		function_fullname="onlyPauser()",
		label="buggy_30.sol_PauserRole_onlyPauser()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[731, 732, 733, 734]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	408 -> 405	[key=0,
		edge_type=next,
		label=Next];
	409	[contract_name=Pausable,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[710, 711, 712, 713]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	410	[contract_name=Pausable,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_242(bool) = tx.origin == owner_txorigin33
\
TMP_243(None) = SOLIDITY_CALL require(bool)(TMP_242)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_242(bool) = tx.origin == owner_txorigin33
TMP_243(None) = SOLIDITY_CALL require(bool)(TMP_242)",
		node_source_code_lines="[711]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	409 -> 410	[key=0,
		edge_type=next,
		label=Next];
	411	[contract_name=Pausable,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[712]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	410 -> 411	[key=0,
		edge_type=next,
		label=Next];
	412	[contract_name=Pausable,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_30.sol_Pausable_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[710, 711, 712, 713]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	412 -> 409	[key=0,
		edge_type=next,
		label=Next];
	413	[contract_name=Pausable,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[715, 716, 717, 718]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	414	[contract_name=Pausable,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_245(bool) = tx.origin == owner_txorigin27
\
TMP_246(None) = SOLIDITY_CALL require(bool)(TMP_245)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_245(bool) = tx.origin == owner_txorigin27
TMP_246(None) = SOLIDITY_CALL require(bool)(TMP_245)",
		node_source_code_lines="[716]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	413 -> 414	[key=0,
		edge_type=next,
		label=Next];
	415	[contract_name=Pausable,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_99(None) -> to.call
REF_100(None) -> REF_99.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_99(None) -> to.call
REF_100(None) -> REF_99.value",
		node_source_code_lines="[717]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	414 -> 415	[key=0,
		edge_type=next,
		label=Next];
	416	[contract_name=Pausable,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_30.sol_Pausable_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[715, 716, 717, 718]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	416 -> 413	[key=0,
		edge_type=next,
		label=Next];
	417	[contract_name=Pausable,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[723, 724, 725]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	418	[contract_name=Pausable,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_addPauser(msg.sender)

IRs:
INTERNAL_CALL, PauserRole._addPauser(address)(msg.sender)",
		node_expression="_addPauser(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, PauserRole._addPauser(address)(msg.sender)",
		node_source_code_lines="[724]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	417 -> 418	[key=0,
		edge_type=next,
		label=Next];
	419	[contract_name=Pausable,
		function_fullname="constructor()",
		label="buggy_30.sol_Pausable_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[723, 724, 725]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	419 -> 417	[key=0,
		edge_type=next,
		label=Next];
	420	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[726, 727, 728, 729]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	421	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_249(bool) = tx.origin == owner_txorigin26
\
TMP_250(None) = SOLIDITY_CALL require(bool)(TMP_249)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_249(bool) = tx.origin == owner_txorigin26
TMP_250(None) = SOLIDITY_CALL require(bool)(TMP_249)",
		node_source_code_lines="[727]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	420 -> 421	[key=0,
		edge_type=next,
		label=Next];
	422	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_251 = CONVERT this to address
REF_102 -> \
BALANCE TMP_251
Transfer dest:_recipient value:REF_102",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_251 = CONVERT this to address
REF_102 -> BALANCE TMP_251
Transfer dest:_recipient value:REF_102",
		node_source_code_lines="[728]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	421 -> 422	[key=0,
		edge_type=next,
		label=Next];
	423	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_30.sol_Pausable_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[726, 727, 728, 729]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	423 -> 420	[key=0,
		edge_type=next,
		label=Next];
	424	[contract_name=Pausable,
		function_fullname="isPauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[736, 737, 738]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	425	[contract_name=Pausable,
		function_fullname="isPauser(address)",
		label="Node Type: RETURN

EXPRESSION:
_pausers.has(account)

IRs:
TMP_253(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,\
address), arguments:['_pausers', 'account'] 
RETURN TMP_253",
		node_expression="_pausers.has(account)",
		node_info_vulnerabilities=None,
		node_irs="TMP_253(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,address), arguments:['_pausers', 'account'] 
RETURN TMP_\
253",
		node_source_code_lines="[737]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	424 -> 425	[key=0,
		edge_type=next,
		label=Next];
	426	[contract_name=Pausable,
		function_fullname="isPauser(address)",
		label="buggy_30.sol_Pausable_isPauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[736, 737, 738]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	426 -> 424	[key=0,
		edge_type=next,
		label=Next];
	427	[contract_name=Pausable,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[739, 740, 741]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	428	[contract_name=Pausable,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_254(bool) = tx.origin == owner_txorigin20
\
TMP_255(None) = SOLIDITY_CALL require(bool)(TMP_254)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_254(bool) = tx.origin == owner_txorigin20
TMP_255(None) = SOLIDITY_CALL require(bool)(TMP_254)",
		node_source_code_lines="[740]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	427 -> 428	[key=0,
		edge_type=next,
		label=Next];
	429	[contract_name=Pausable,
		function_fullname="bug_txorigin20(address)",
		label="buggy_30.sol_Pausable_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[739, 740, 741]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	429 -> 427	[key=0,
		edge_type=next,
		label=Next];
	430	[contract_name=Pausable,
		function_fullname="addPauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[743, 744, 745]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	432	[contract_name=Pausable,
		function_fullname="addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyPauser()

IRs:
MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_expression="onlyPauser()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_source_code_lines="[743]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	430 -> 432	[key=0,
		edge_type=next,
		label=Next];
	431	[contract_name=Pausable,
		function_fullname="addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_addPauser(account)

IRs:
INTERNAL_CALL, PauserRole._addPauser(address)(account)",
		node_expression="_addPauser(account)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, PauserRole._addPauser(address)(account)",
		node_source_code_lines="[744]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	432 -> 431	[key=0,
		edge_type=next,
		label=Next];
	433	[contract_name=Pausable,
		function_fullname="addPauser(address)",
		label="buggy_30.sol_Pausable_addPauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[743, 744, 745]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	433 -> 430	[key=0,
		edge_type=next,
		label=Next];
	434	[contract_name=Pausable,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[746, 747, 748]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	435	[contract_name=Pausable,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_258(bool) = tx.origin == owner_txorigin32
\
TMP_259(None) = SOLIDITY_CALL require(bool)(TMP_258)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_258(bool) = tx.origin == owner_txorigin32
TMP_259(None) = SOLIDITY_CALL require(bool)(TMP_258)",
		node_source_code_lines="[747]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	434 -> 435	[key=0,
		edge_type=next,
		label=Next];
	436	[contract_name=Pausable,
		function_fullname="bug_txorigin32(address)",
		label="buggy_30.sol_Pausable_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[746, 747, 748]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	436 -> 434	[key=0,
		edge_type=next,
		label=Next];
	437	[contract_name=Pausable,
		function_fullname="renouncePauser()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[750, 751, 752]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	438	[contract_name=Pausable,
		function_fullname="renouncePauser()",
		label="Node Type: EXPRESSION

EXPRESSION:
_removePauser(msg.sender)

IRs:
INTERNAL_CALL, PauserRole._removePauser(address)(msg.sender)",
		node_expression="_removePauser(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, PauserRole._removePauser(address)(msg.sender)",
		node_source_code_lines="[751]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	437 -> 438	[key=0,
		edge_type=next,
		label=Next];
	439	[contract_name=Pausable,
		function_fullname="renouncePauser()",
		label="buggy_30.sol_Pausable_renouncePauser()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[750, 751, 752]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	439 -> 437	[key=0,
		edge_type=next,
		label=Next];
	440	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[753, 754, 755, 756]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	441	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_261(bool) = tx.origin == owner_txorigin38
\
TMP_262(None) = SOLIDITY_CALL require(bool)(TMP_261)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_261(bool) = tx.origin == owner_txorigin38
TMP_262(None) = SOLIDITY_CALL require(bool)(TMP_261)",
		node_source_code_lines="[754]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	440 -> 441	[key=0,
		edge_type=next,
		label=Next];
	442	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_263 = CONVERT this to address
REF_105 -> \
BALANCE TMP_263
Transfer dest:_recipient value:REF_105",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_263 = CONVERT this to address
REF_105 -> BALANCE TMP_263
Transfer dest:_recipient value:REF_105",
		node_source_code_lines="[755]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	441 -> 442	[key=0,
		edge_type=next,
		label=Next];
	443	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_30.sol_Pausable_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[753, 754, 755, 756]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	443 -> 440	[key=0,
		edge_type=next,
		label=Next];
	444	[contract_name=Pausable,
		function_fullname="_addPauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[758, 759, 760, 761]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	445	[contract_name=Pausable,
		function_fullname="_addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_pausers.add(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), \
arguments:['_pausers', 'account'] ",
		node_expression="_pausers.add(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), arguments:['_pausers', 'account'] ",
		node_source_code_lines="[759]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	444 -> 445	[key=0,
		edge_type=next,
		label=Next];
	446	[contract_name=Pausable,
		function_fullname="_addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
PauserAdded(account)

IRs:
Emit PauserAdded(account)",
		node_expression="PauserAdded(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit PauserAdded(account)",
		node_source_code_lines="[760]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	445 -> 446	[key=0,
		edge_type=next,
		label=Next];
	447	[contract_name=Pausable,
		function_fullname="_addPauser(address)",
		label="buggy_30.sol_Pausable__addPauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[758, 759, 760, 761]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	447 -> 444	[key=0,
		edge_type=next,
		label=Next];
	448	[contract_name=Pausable,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[762, 763, 764]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	449	[contract_name=Pausable,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_267(bool) = tx.origin == owner_txorigin4
\
TMP_268(None) = SOLIDITY_CALL require(bool)(TMP_267)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_267(bool) = tx.origin == owner_txorigin4
TMP_268(None) = SOLIDITY_CALL require(bool)(TMP_267)",
		node_source_code_lines="[763]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	448 -> 449	[key=0,
		edge_type=next,
		label=Next];
	450	[contract_name=Pausable,
		function_fullname="bug_txorigin4(address)",
		label="buggy_30.sol_Pausable_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[762, 763, 764]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	450 -> 448	[key=0,
		edge_type=next,
		label=Next];
	451	[contract_name=Pausable,
		function_fullname="_removePauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[766, 767, 768, 769]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	452	[contract_name=Pausable,
		function_fullname="_removePauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_pausers.remove(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), \
arguments:['_pausers', 'account'] ",
		node_expression="_pausers.remove(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), arguments:['_pausers', 'account'] ",
		node_source_code_lines="[767]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	451 -> 452	[key=0,
		edge_type=next,
		label=Next];
	453	[contract_name=Pausable,
		function_fullname="_removePauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
PauserRemoved(account)

IRs:
Emit PauserRemoved(account)",
		node_expression="PauserRemoved(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit PauserRemoved(account)",
		node_source_code_lines="[768]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	452 -> 453	[key=0,
		edge_type=next,
		label=Next];
	454	[contract_name=Pausable,
		function_fullname="_removePauser(address)",
		label="buggy_30.sol_Pausable__removePauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[766, 767, 768, 769]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	454 -> 451	[key=0,
		edge_type=next,
		label=Next];
	455	[contract_name=Pausable,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[770, 771, 772, 773]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	456	[contract_name=Pausable,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_271(bool) = tx.origin == owner_txorigin7
\
TMP_272(None) = SOLIDITY_CALL require(bool)(TMP_271)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_271(bool) = tx.origin == owner_txorigin7
TMP_272(None) = SOLIDITY_CALL require(bool)(TMP_271)",
		node_source_code_lines="[771]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	455 -> 456	[key=0,
		edge_type=next,
		label=Next];
	457	[contract_name=Pausable,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_108(None) -> to.call
REF_109(None) -> REF_108.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_108(None) -> to.call
REF_109(None) -> REF_108.value",
		node_source_code_lines="[772]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	456 -> 457	[key=0,
		edge_type=next,
		label=Next];
	458	[contract_name=Pausable,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_30.sol_Pausable_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[770, 771, 772, 773]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	458 -> 455	[key=0,
		edge_type=next,
		label=Next];
	459	[contract_name=Pausable,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[778, 779, 780, 781]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	460	[contract_name=Pausable,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_274(bool) = tx.origin == owner_txorigin31
\
TMP_275(None) = SOLIDITY_CALL require(bool)(TMP_274)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_274(bool) = tx.origin == owner_txorigin31
TMP_275(None) = SOLIDITY_CALL require(bool)(TMP_274)",
		node_source_code_lines="[779]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	459 -> 460	[key=0,
		edge_type=next,
		label=Next];
	461	[contract_name=Pausable,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_110(None) -> to.call
REF_111(None) -> REF_110.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_110(None) -> to.call
REF_111(None) -> REF_110.value",
		node_source_code_lines="[780]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	460 -> 461	[key=0,
		edge_type=next,
		label=Next];
	462	[contract_name=Pausable,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_30.sol_Pausable_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[778, 779, 780, 781]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	462 -> 459	[key=0,
		edge_type=next,
		label=Next];
	463	[contract_name=Pausable,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[785, 786, 787, 788]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	464	[contract_name=Pausable,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_277(bool) = tx.origin == owner_txorigin13
\
TMP_278(None) = SOLIDITY_CALL require(bool)(TMP_277)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_277(bool) = tx.origin == owner_txorigin13
TMP_278(None) = SOLIDITY_CALL require(bool)(TMP_277)",
		node_source_code_lines="[786]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	463 -> 464	[key=0,
		edge_type=next,
		label=Next];
	465	[contract_name=Pausable,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[787]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	464 -> 465	[key=0,
		edge_type=next,
		label=Next];
	466	[contract_name=Pausable,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_30.sol_Pausable_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[785, 786, 787, 788]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	466 -> 463	[key=0,
		edge_type=next,
		label=Next];
	467	[contract_name=Pausable,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[794, 795, 796]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	468	[contract_name=Pausable,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_paused = false

IRs:
_paused(bool) := False(bool)",
		node_expression="_paused = false",
		node_info_vulnerabilities=None,
		node_irs="_paused(bool) := False(bool)",
		node_source_code_lines="[795]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	467 -> 468	[key=0,
		edge_type=next,
		label=Next];
	469	[contract_name=Pausable,
		function_fullname="constructor()",
		label="buggy_30.sol_Pausable_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[794, 795, 796]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	469 -> 467	[key=0,
		edge_type=next,
		label=Next];
	470	[contract_name=Pausable,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[797, 798, 799, 800]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	471	[contract_name=Pausable,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_280(bool) = tx.origin == owner_txorigin23
\
TMP_281(None) = SOLIDITY_CALL require(bool)(TMP_280)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_280(bool) = tx.origin == owner_txorigin23
TMP_281(None) = SOLIDITY_CALL require(bool)(TMP_280)",
		node_source_code_lines="[798]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	470 -> 471	[key=0,
		edge_type=next,
		label=Next];
	472	[contract_name=Pausable,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_113(None) -> to.call
REF_114(None) -> REF_113.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_113(None) -> to.call
REF_114(None) -> REF_113.value",
		node_source_code_lines="[799]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	471 -> 472	[key=0,
		edge_type=next,
		label=Next];
	473	[contract_name=Pausable,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_30.sol_Pausable_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[797, 798, 799, 800]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	473 -> 470	[key=0,
		edge_type=next,
		label=Next];
	474	[contract_name=Pausable,
		function_fullname="paused()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[803, 804, 805]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	475	[contract_name=Pausable,
		function_fullname="paused()",
		label="Node Type: RETURN

EXPRESSION:
_paused

IRs:
RETURN _paused",
		node_expression=_paused,
		node_info_vulnerabilities=None,
		node_irs="RETURN _paused",
		node_source_code_lines="[804]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	474 -> 475	[key=0,
		edge_type=next,
		label=Next];
	476	[contract_name=Pausable,
		function_fullname="paused()",
		label="buggy_30.sol_Pausable_paused()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[803, 804, 805]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	476 -> 474	[key=0,
		edge_type=next,
		label=Next];
	477	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[806, 807, 808, 809]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	478	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_283(bool) = tx.origin == owner_txorigin14
\
TMP_284(None) = SOLIDITY_CALL require(bool)(TMP_283)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_283(bool) = tx.origin == owner_txorigin14
TMP_284(None) = SOLIDITY_CALL require(bool)(TMP_283)",
		node_source_code_lines="[807]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	477 -> 478	[key=0,
		edge_type=next,
		label=Next];
	479	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_285 = CONVERT this to address
REF_116 -> \
BALANCE TMP_285
Transfer dest:_recipient value:REF_116",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_285 = CONVERT this to address
REF_116 -> BALANCE TMP_285
Transfer dest:_recipient value:REF_116",
		node_source_code_lines="[808]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	478 -> 479	[key=0,
		edge_type=next,
		label=Next];
	480	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_30.sol_Pausable_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[806, 807, 808, 809]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	480 -> 477	[key=0,
		edge_type=next,
		label=Next];
	481	[contract_name=Pausable,
		function_fullname="pause()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[824, 825, 826, 827]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	484	[contract_name=Pausable,
		function_fullname="pause()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyPauser()

IRs:
MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_expression="onlyPauser()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_source_code_lines="[824]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	481 -> 484	[key=0,
		edge_type=next,
		label=Next];
	482	[contract_name=Pausable,
		function_fullname="pause()",
		label="Node Type: EXPRESSION

EXPRESSION:
_paused = true

IRs:
_paused(bool) := True(bool)",
		node_expression="_paused = true",
		node_info_vulnerabilities=None,
		node_irs="_paused(bool) := True(bool)",
		node_source_code_lines="[825]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	483	[contract_name=Pausable,
		function_fullname="pause()",
		label="Node Type: EXPRESSION

EXPRESSION:
Paused(msg.sender)

IRs:
Emit Paused(msg.sender)",
		node_expression="Paused(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit Paused(msg.sender)",
		node_source_code_lines="[826]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	482 -> 483	[key=0,
		edge_type=next,
		label=Next];
	485	[contract_name=Pausable,
		function_fullname="pause()",
		label="Node Type: EXPRESSION

EXPRESSION:
whenNotPaused()

IRs:
MODIFIER_CALL, Pausable.whenNotPaused()()",
		node_expression="whenNotPaused()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Pausable.whenNotPaused()()",
		node_source_code_lines="[824]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	484 -> 485	[key=0,
		edge_type=next,
		label=Next];
	485 -> 482	[key=0,
		edge_type=next,
		label=Next];
	486	[contract_name=Pausable,
		function_fullname="pause()",
		label="buggy_30.sol_Pausable_pause()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[824, 825, 826, 827]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	486 -> 481	[key=0,
		edge_type=next,
		label=Next];
	487	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[828, 829, 830, 831]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	488	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_290(bool) = tx.origin == owner_txorigin30
\
TMP_291(None) = SOLIDITY_CALL require(bool)(TMP_290)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_290(bool) = tx.origin == owner_txorigin30
TMP_291(None) = SOLIDITY_CALL require(bool)(TMP_290)",
		node_source_code_lines="[829]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	487 -> 488	[key=0,
		edge_type=next,
		label=Next];
	489	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_292 = CONVERT this to address
REF_118 -> \
BALANCE TMP_292
Transfer dest:_recipient value:REF_118",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_292 = CONVERT this to address
REF_118 -> BALANCE TMP_292
Transfer dest:_recipient value:REF_118",
		node_source_code_lines="[830]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	488 -> 489	[key=0,
		edge_type=next,
		label=Next];
	490	[contract_name=Pausable,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_30.sol_Pausable_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[828, 829, 830, 831]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	490 -> 487	[key=0,
		edge_type=next,
		label=Next];
	491	[contract_name=Pausable,
		function_fullname="unpause()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[834, 835, 836, 837]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	494	[contract_name=Pausable,
		function_fullname="unpause()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyPauser()

IRs:
MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_expression="onlyPauser()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_source_code_lines="[834]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	491 -> 494	[key=0,
		edge_type=next,
		label=Next];
	492	[contract_name=Pausable,
		function_fullname="unpause()",
		label="Node Type: EXPRESSION

EXPRESSION:
_paused = false

IRs:
_paused(bool) := False(bool)",
		node_expression="_paused = false",
		node_info_vulnerabilities=None,
		node_irs="_paused(bool) := False(bool)",
		node_source_code_lines="[835]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	493	[contract_name=Pausable,
		function_fullname="unpause()",
		label="Node Type: EXPRESSION

EXPRESSION:
Unpaused(msg.sender)

IRs:
Emit Unpaused(msg.sender)",
		node_expression="Unpaused(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit Unpaused(msg.sender)",
		node_source_code_lines="[836]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	492 -> 493	[key=0,
		edge_type=next,
		label=Next];
	495	[contract_name=Pausable,
		function_fullname="unpause()",
		label="Node Type: EXPRESSION

EXPRESSION:
whenPaused()

IRs:
MODIFIER_CALL, Pausable.whenPaused()()",
		node_expression="whenPaused()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Pausable.whenPaused()()",
		node_source_code_lines="[834]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	494 -> 495	[key=0,
		edge_type=next,
		label=Next];
	495 -> 492	[key=0,
		edge_type=next,
		label=Next];
	496	[contract_name=Pausable,
		function_fullname="unpause()",
		label="buggy_30.sol_Pausable_unpause()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[834, 835, 836, 837]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	496 -> 491	[key=0,
		edge_type=next,
		label=Next];
	497	[contract_name=Pausable,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[838, 839, 840]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	498	[contract_name=Pausable,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_297(bool) = tx.origin == owner_txorigin8
\
TMP_298(None) = SOLIDITY_CALL require(bool)(TMP_297)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_297(bool) = tx.origin == owner_txorigin8
TMP_298(None) = SOLIDITY_CALL require(bool)(TMP_297)",
		node_source_code_lines="[839]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	497 -> 498	[key=0,
		edge_type=next,
		label=Next];
	499	[contract_name=Pausable,
		function_fullname="bug_txorigin8(address)",
		label="buggy_30.sol_Pausable_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[838, 839, 840]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	499 -> 497	[key=0,
		edge_type=next,
		label=Next];
	500	[contract_name=Pausable,
		function_fullname="onlyPauser()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[731, 732, 733, 734]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	501	[contract_name=Pausable,
		function_fullname="onlyPauser()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isPauser(msg.sender),PauserRole: caller does not have the Pauser role)

\
IRs:
TMP_299(bool) = INTERNAL_CALL, PauserRole.isPauser(address)(msg.sender)
TMP_300(None) = SOLIDITY_CALL require(bool,string)(\
TMP_299,PauserRole: caller does not have the Pauser role)",
		node_expression="require(bool,string)(isPauser(msg.sender),PauserRole: caller does not have the Pauser role)",
		node_info_vulnerabilities=None,
		node_irs="TMP_299(bool) = INTERNAL_CALL, PauserRole.isPauser(address)(msg.sender)
TMP_300(None) = SOLIDITY_CALL require(bool,string)(TMP_299,\
PauserRole: caller does not have the Pauser role)",
		node_source_code_lines="[732]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	500 -> 501	[key=0,
		edge_type=next,
		label=Next];
	502	[contract_name=Pausable,
		function_fullname="onlyPauser()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[733]",
		node_type=_,
		source_file="buggy_30.sol"];
	501 -> 502	[key=0,
		edge_type=next,
		label=Next];
	503	[contract_name=Pausable,
		function_fullname="onlyPauser()",
		label="buggy_30.sol_Pausable_onlyPauser()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[731, 732, 733, 734]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	503 -> 500	[key=0,
		edge_type=next,
		label=Next];
	504	[contract_name=Pausable,
		function_fullname="whenNotPaused()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[812, 813, 814, 815]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	505	[contract_name=Pausable,
		function_fullname="whenNotPaused()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! _paused,Pausable: paused)

IRs:
TMP_301 = ! _paused 
TMP_302(None) = SOLIDITY_\
CALL require(bool,string)(TMP_301,Pausable: paused)",
		node_expression="require(bool,string)(! _paused,Pausable: paused)",
		node_info_vulnerabilities=None,
		node_irs="TMP_301 = ! _paused 
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,Pausable: paused)",
		node_source_code_lines="[813]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	504 -> 505	[key=0,
		edge_type=next,
		label=Next];
	506	[contract_name=Pausable,
		function_fullname="whenNotPaused()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[814]",
		node_type=_,
		source_file="buggy_30.sol"];
	505 -> 506	[key=0,
		edge_type=next,
		label=Next];
	507	[contract_name=Pausable,
		function_fullname="whenNotPaused()",
		label="buggy_30.sol_Pausable_whenNotPaused()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[812, 813, 814, 815]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	507 -> 504	[key=0,
		edge_type=next,
		label=Next];
	508	[contract_name=Pausable,
		function_fullname="whenPaused()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[818, 819, 820, 821]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	509	[contract_name=Pausable,
		function_fullname="whenPaused()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_paused,Pausable: not paused)

IRs:
TMP_303(None) = SOLIDITY_CALL require(\
bool,string)(_paused,Pausable: not paused)",
		node_expression="require(bool,string)(_paused,Pausable: not paused)",
		node_info_vulnerabilities=None,
		node_irs="TMP_303(None) = SOLIDITY_CALL require(bool,string)(_paused,Pausable: not paused)",
		node_source_code_lines="[819]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	508 -> 509	[key=0,
		edge_type=next,
		label=Next];
	510	[contract_name=Pausable,
		function_fullname="whenPaused()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[820]",
		node_type=_,
		source_file="buggy_30.sol"];
	509 -> 510	[key=0,
		edge_type=next,
		label=Next];
	511	[contract_name=Pausable,
		function_fullname="whenPaused()",
		label="buggy_30.sol_Pausable_whenPaused()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[818, 819, 820, 821]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	511 -> 508	[key=0,
		edge_type=next,
		label=Next];
	512	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[778, 779, 780, 781]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	513	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_304(bool) = tx.origin == owner_txorigin31
\
TMP_305(None) = SOLIDITY_CALL require(bool)(TMP_304)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_304(bool) = tx.origin == owner_txorigin31
TMP_305(None) = SOLIDITY_CALL require(bool)(TMP_304)",
		node_source_code_lines="[779]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	512 -> 513	[key=0,
		edge_type=next,
		label=Next];
	514	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_119(None) -> to.call
REF_120(None) -> REF_119.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_119(None) -> to.call
REF_120(None) -> REF_119.value",
		node_source_code_lines="[780]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	513 -> 514	[key=0,
		edge_type=next,
		label=Next];
	515	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[778, 779, 780, 781]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	515 -> 512	[key=0,
		edge_type=next,
		label=Next];
	516	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[785, 786, 787, 788]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	517	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_307(bool) = tx.origin == owner_txorigin13
\
TMP_308(None) = SOLIDITY_CALL require(bool)(TMP_307)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_307(bool) = tx.origin == owner_txorigin13
TMP_308(None) = SOLIDITY_CALL require(bool)(TMP_307)",
		node_source_code_lines="[786]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	516 -> 517	[key=0,
		edge_type=next,
		label=Next];
	518	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[787]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	517 -> 518	[key=0,
		edge_type=next,
		label=Next];
	519	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[785, 786, 787, 788]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	519 -> 516	[key=0,
		edge_type=next,
		label=Next];
	520	[contract_name=SKYBITToken,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[794, 795, 796]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	521	[contract_name=SKYBITToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_paused = false

IRs:
_paused(bool) := False(bool)",
		node_expression="_paused = false",
		node_info_vulnerabilities=None,
		node_irs="_paused(bool) := False(bool)",
		node_source_code_lines="[795]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	520 -> 521	[key=0,
		edge_type=next,
		label=Next];
	522	[contract_name=SKYBITToken,
		function_fullname="constructor()",
		label="buggy_30.sol_SKYBITToken_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[794, 795, 796]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	522 -> 520	[key=0,
		edge_type=next,
		label=Next];
	523	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[797, 798, 799, 800]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	524	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_310(bool) = tx.origin == owner_txorigin23
\
TMP_311(None) = SOLIDITY_CALL require(bool)(TMP_310)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_310(bool) = tx.origin == owner_txorigin23
TMP_311(None) = SOLIDITY_CALL require(bool)(TMP_310)",
		node_source_code_lines="[798]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	523 -> 524	[key=0,
		edge_type=next,
		label=Next];
	525	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_122(None) -> to.call
REF_123(None) -> REF_122.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_122(None) -> to.call
REF_123(None) -> REF_122.value",
		node_source_code_lines="[799]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	524 -> 525	[key=0,
		edge_type=next,
		label=Next];
	526	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[797, 798, 799, 800]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	526 -> 523	[key=0,
		edge_type=next,
		label=Next];
	527	[contract_name=SKYBITToken,
		function_fullname="paused()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[803, 804, 805]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	528	[contract_name=SKYBITToken,
		function_fullname="paused()",
		label="Node Type: RETURN

EXPRESSION:
_paused

IRs:
RETURN _paused",
		node_expression=_paused,
		node_info_vulnerabilities=None,
		node_irs="RETURN _paused",
		node_source_code_lines="[804]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	527 -> 528	[key=0,
		edge_type=next,
		label=Next];
	529	[contract_name=SKYBITToken,
		function_fullname="paused()",
		label="buggy_30.sol_SKYBITToken_paused()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[803, 804, 805]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	529 -> 527	[key=0,
		edge_type=next,
		label=Next];
	530	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[806, 807, 808, 809]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	531	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_313(bool) = tx.origin == owner_txorigin14
\
TMP_314(None) = SOLIDITY_CALL require(bool)(TMP_313)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_313(bool) = tx.origin == owner_txorigin14
TMP_314(None) = SOLIDITY_CALL require(bool)(TMP_313)",
		node_source_code_lines="[807]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	530 -> 531	[key=0,
		edge_type=next,
		label=Next];
	532	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_315 = CONVERT this to address
REF_125 -> \
BALANCE TMP_315
Transfer dest:_recipient value:REF_125",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_315 = CONVERT this to address
REF_125 -> BALANCE TMP_315
Transfer dest:_recipient value:REF_125",
		node_source_code_lines="[808]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	531 -> 532	[key=0,
		edge_type=next,
		label=Next];
	533	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[806, 807, 808, 809]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	533 -> 530	[key=0,
		edge_type=next,
		label=Next];
	534	[contract_name=SKYBITToken,
		function_fullname="pause()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[824, 825, 826, 827]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	537	[contract_name=SKYBITToken,
		function_fullname="pause()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyPauser()

IRs:
MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_expression="onlyPauser()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_source_code_lines="[824]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	534 -> 537	[key=0,
		edge_type=next,
		label=Next];
	535	[contract_name=SKYBITToken,
		function_fullname="pause()",
		label="Node Type: EXPRESSION

EXPRESSION:
_paused = true

IRs:
_paused(bool) := True(bool)",
		node_expression="_paused = true",
		node_info_vulnerabilities=None,
		node_irs="_paused(bool) := True(bool)",
		node_source_code_lines="[825]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	536	[contract_name=SKYBITToken,
		function_fullname="pause()",
		label="Node Type: EXPRESSION

EXPRESSION:
Paused(msg.sender)

IRs:
Emit Paused(msg.sender)",
		node_expression="Paused(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit Paused(msg.sender)",
		node_source_code_lines="[826]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	535 -> 536	[key=0,
		edge_type=next,
		label=Next];
	538	[contract_name=SKYBITToken,
		function_fullname="pause()",
		label="Node Type: EXPRESSION

EXPRESSION:
whenNotPaused()

IRs:
MODIFIER_CALL, Pausable.whenNotPaused()()",
		node_expression="whenNotPaused()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Pausable.whenNotPaused()()",
		node_source_code_lines="[824]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	537 -> 538	[key=0,
		edge_type=next,
		label=Next];
	538 -> 535	[key=0,
		edge_type=next,
		label=Next];
	539	[contract_name=SKYBITToken,
		function_fullname="pause()",
		label="buggy_30.sol_SKYBITToken_pause()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[824, 825, 826, 827]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	539 -> 534	[key=0,
		edge_type=next,
		label=Next];
	540	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[828, 829, 830, 831]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	541	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_320(bool) = tx.origin == owner_txorigin30
\
TMP_321(None) = SOLIDITY_CALL require(bool)(TMP_320)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_320(bool) = tx.origin == owner_txorigin30
TMP_321(None) = SOLIDITY_CALL require(bool)(TMP_320)",
		node_source_code_lines="[829]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	540 -> 541	[key=0,
		edge_type=next,
		label=Next];
	542	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_322 = CONVERT this to address
REF_127 -> \
BALANCE TMP_322
Transfer dest:_recipient value:REF_127",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_322 = CONVERT this to address
REF_127 -> BALANCE TMP_322
Transfer dest:_recipient value:REF_127",
		node_source_code_lines="[830]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	541 -> 542	[key=0,
		edge_type=next,
		label=Next];
	543	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[828, 829, 830, 831]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	543 -> 540	[key=0,
		edge_type=next,
		label=Next];
	544	[contract_name=SKYBITToken,
		function_fullname="unpause()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[834, 835, 836, 837]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	547	[contract_name=SKYBITToken,
		function_fullname="unpause()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyPauser()

IRs:
MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_expression="onlyPauser()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_source_code_lines="[834]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	544 -> 547	[key=0,
		edge_type=next,
		label=Next];
	545	[contract_name=SKYBITToken,
		function_fullname="unpause()",
		label="Node Type: EXPRESSION

EXPRESSION:
_paused = false

IRs:
_paused(bool) := False(bool)",
		node_expression="_paused = false",
		node_info_vulnerabilities=None,
		node_irs="_paused(bool) := False(bool)",
		node_source_code_lines="[835]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	546	[contract_name=SKYBITToken,
		function_fullname="unpause()",
		label="Node Type: EXPRESSION

EXPRESSION:
Unpaused(msg.sender)

IRs:
Emit Unpaused(msg.sender)",
		node_expression="Unpaused(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit Unpaused(msg.sender)",
		node_source_code_lines="[836]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	545 -> 546	[key=0,
		edge_type=next,
		label=Next];
	548	[contract_name=SKYBITToken,
		function_fullname="unpause()",
		label="Node Type: EXPRESSION

EXPRESSION:
whenPaused()

IRs:
MODIFIER_CALL, Pausable.whenPaused()()",
		node_expression="whenPaused()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Pausable.whenPaused()()",
		node_source_code_lines="[834]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	547 -> 548	[key=0,
		edge_type=next,
		label=Next];
	548 -> 545	[key=0,
		edge_type=next,
		label=Next];
	549	[contract_name=SKYBITToken,
		function_fullname="unpause()",
		label="buggy_30.sol_SKYBITToken_unpause()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[834, 835, 836, 837]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	549 -> 544	[key=0,
		edge_type=next,
		label=Next];
	550	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[838, 839, 840]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	551	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_327(bool) = tx.origin == owner_txorigin8
\
TMP_328(None) = SOLIDITY_CALL require(bool)(TMP_327)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_327(bool) = tx.origin == owner_txorigin8
TMP_328(None) = SOLIDITY_CALL require(bool)(TMP_327)",
		node_source_code_lines="[839]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	550 -> 551	[key=0,
		edge_type=next,
		label=Next];
	552	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin8(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[838, 839, 840]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	552 -> 550	[key=0,
		edge_type=next,
		label=Next];
	553	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[710, 711, 712, 713]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	554	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_329(bool) = tx.origin == owner_txorigin33
\
TMP_330(None) = SOLIDITY_CALL require(bool)(TMP_329)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_329(bool) = tx.origin == owner_txorigin33
TMP_330(None) = SOLIDITY_CALL require(bool)(TMP_329)",
		node_source_code_lines="[711]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	553 -> 554	[key=0,
		edge_type=next,
		label=Next];
	555	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[712]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	554 -> 555	[key=0,
		edge_type=next,
		label=Next];
	556	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[710, 711, 712, 713]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	556 -> 553	[key=0,
		edge_type=next,
		label=Next];
	557	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[715, 716, 717, 718]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	558	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_332(bool) = tx.origin == owner_txorigin27
\
TMP_333(None) = SOLIDITY_CALL require(bool)(TMP_332)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_332(bool) = tx.origin == owner_txorigin27
TMP_333(None) = SOLIDITY_CALL require(bool)(TMP_332)",
		node_source_code_lines="[716]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	557 -> 558	[key=0,
		edge_type=next,
		label=Next];
	559	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_129(None) -> to.call
REF_130(None) -> REF_129.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_129(None) -> to.call
REF_130(None) -> REF_129.value",
		node_source_code_lines="[717]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	558 -> 559	[key=0,
		edge_type=next,
		label=Next];
	560	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[715, 716, 717, 718]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	560 -> 557	[key=0,
		edge_type=next,
		label=Next];
	561	[contract_name=SKYBITToken,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[723, 724, 725]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	562	[contract_name=SKYBITToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_addPauser(msg.sender)

IRs:
INTERNAL_CALL, PauserRole._addPauser(address)(msg.sender)",
		node_expression="_addPauser(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, PauserRole._addPauser(address)(msg.sender)",
		node_source_code_lines="[724]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	561 -> 562	[key=0,
		edge_type=next,
		label=Next];
	563	[contract_name=SKYBITToken,
		function_fullname="constructor()",
		label="buggy_30.sol_SKYBITToken_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[723, 724, 725]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	563 -> 561	[key=0,
		edge_type=next,
		label=Next];
	564	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[726, 727, 728, 729]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	565	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_336(bool) = tx.origin == owner_txorigin26
\
TMP_337(None) = SOLIDITY_CALL require(bool)(TMP_336)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_336(bool) = tx.origin == owner_txorigin26
TMP_337(None) = SOLIDITY_CALL require(bool)(TMP_336)",
		node_source_code_lines="[727]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	564 -> 565	[key=0,
		edge_type=next,
		label=Next];
	566	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_338 = CONVERT this to address
REF_132 -> \
BALANCE TMP_338
Transfer dest:_recipient value:REF_132",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_338 = CONVERT this to address
REF_132 -> BALANCE TMP_338
Transfer dest:_recipient value:REF_132",
		node_source_code_lines="[728]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	565 -> 566	[key=0,
		edge_type=next,
		label=Next];
	567	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[726, 727, 728, 729]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	567 -> 564	[key=0,
		edge_type=next,
		label=Next];
	568	[contract_name=SKYBITToken,
		function_fullname="isPauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[736, 737, 738]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	569	[contract_name=SKYBITToken,
		function_fullname="isPauser(address)",
		label="Node Type: RETURN

EXPRESSION:
_pausers.has(account)

IRs:
TMP_340(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,\
address), arguments:['_pausers', 'account'] 
RETURN TMP_340",
		node_expression="_pausers.has(account)",
		node_info_vulnerabilities=None,
		node_irs="TMP_340(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,address), arguments:['_pausers', 'account'] 
RETURN TMP_\
340",
		node_source_code_lines="[737]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	568 -> 569	[key=0,
		edge_type=next,
		label=Next];
	570	[contract_name=SKYBITToken,
		function_fullname="isPauser(address)",
		label="buggy_30.sol_SKYBITToken_isPauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[736, 737, 738]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	570 -> 568	[key=0,
		edge_type=next,
		label=Next];
	571	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[739, 740, 741]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	572	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_341(bool) = tx.origin == owner_txorigin20
\
TMP_342(None) = SOLIDITY_CALL require(bool)(TMP_341)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_341(bool) = tx.origin == owner_txorigin20
TMP_342(None) = SOLIDITY_CALL require(bool)(TMP_341)",
		node_source_code_lines="[740]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	571 -> 572	[key=0,
		edge_type=next,
		label=Next];
	573	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin20(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[739, 740, 741]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	573 -> 571	[key=0,
		edge_type=next,
		label=Next];
	574	[contract_name=SKYBITToken,
		function_fullname="addPauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[743, 744, 745]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	576	[contract_name=SKYBITToken,
		function_fullname="addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyPauser()

IRs:
MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_expression="onlyPauser()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, PauserRole.onlyPauser()()",
		node_source_code_lines="[743]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	574 -> 576	[key=0,
		edge_type=next,
		label=Next];
	575	[contract_name=SKYBITToken,
		function_fullname="addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_addPauser(account)

IRs:
INTERNAL_CALL, PauserRole._addPauser(address)(account)",
		node_expression="_addPauser(account)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, PauserRole._addPauser(address)(account)",
		node_source_code_lines="[744]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	576 -> 575	[key=0,
		edge_type=next,
		label=Next];
	577	[contract_name=SKYBITToken,
		function_fullname="addPauser(address)",
		label="buggy_30.sol_SKYBITToken_addPauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[743, 744, 745]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	577 -> 574	[key=0,
		edge_type=next,
		label=Next];
	578	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[746, 747, 748]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	579	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_345(bool) = tx.origin == owner_txorigin32
\
TMP_346(None) = SOLIDITY_CALL require(bool)(TMP_345)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_345(bool) = tx.origin == owner_txorigin32
TMP_346(None) = SOLIDITY_CALL require(bool)(TMP_345)",
		node_source_code_lines="[747]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	578 -> 579	[key=0,
		edge_type=next,
		label=Next];
	580	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin32(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[746, 747, 748]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	580 -> 578	[key=0,
		edge_type=next,
		label=Next];
	581	[contract_name=SKYBITToken,
		function_fullname="renouncePauser()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[750, 751, 752]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	582	[contract_name=SKYBITToken,
		function_fullname="renouncePauser()",
		label="Node Type: EXPRESSION

EXPRESSION:
_removePauser(msg.sender)

IRs:
INTERNAL_CALL, PauserRole._removePauser(address)(msg.sender)",
		node_expression="_removePauser(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, PauserRole._removePauser(address)(msg.sender)",
		node_source_code_lines="[751]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	581 -> 582	[key=0,
		edge_type=next,
		label=Next];
	583	[contract_name=SKYBITToken,
		function_fullname="renouncePauser()",
		label="buggy_30.sol_SKYBITToken_renouncePauser()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[750, 751, 752]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	583 -> 581	[key=0,
		edge_type=next,
		label=Next];
	584	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[753, 754, 755, 756]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	585	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_348(bool) = tx.origin == owner_txorigin38
\
TMP_349(None) = SOLIDITY_CALL require(bool)(TMP_348)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_348(bool) = tx.origin == owner_txorigin38
TMP_349(None) = SOLIDITY_CALL require(bool)(TMP_348)",
		node_source_code_lines="[754]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	584 -> 585	[key=0,
		edge_type=next,
		label=Next];
	586	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_350 = CONVERT this to address
REF_135 -> \
BALANCE TMP_350
Transfer dest:_recipient value:REF_135",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_350 = CONVERT this to address
REF_135 -> BALANCE TMP_350
Transfer dest:_recipient value:REF_135",
		node_source_code_lines="[755]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	585 -> 586	[key=0,
		edge_type=next,
		label=Next];
	587	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[753, 754, 755, 756]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	587 -> 584	[key=0,
		edge_type=next,
		label=Next];
	588	[contract_name=SKYBITToken,
		function_fullname="_addPauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[758, 759, 760, 761]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	589	[contract_name=SKYBITToken,
		function_fullname="_addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_pausers.add(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), \
arguments:['_pausers', 'account'] ",
		node_expression="_pausers.add(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), arguments:['_pausers', 'account'] ",
		node_source_code_lines="[759]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	588 -> 589	[key=0,
		edge_type=next,
		label=Next];
	590	[contract_name=SKYBITToken,
		function_fullname="_addPauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
PauserAdded(account)

IRs:
Emit PauserAdded(account)",
		node_expression="PauserAdded(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit PauserAdded(account)",
		node_source_code_lines="[760]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	589 -> 590	[key=0,
		edge_type=next,
		label=Next];
	591	[contract_name=SKYBITToken,
		function_fullname="_addPauser(address)",
		label="buggy_30.sol_SKYBITToken__addPauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[758, 759, 760, 761]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	591 -> 588	[key=0,
		edge_type=next,
		label=Next];
	592	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[762, 763, 764]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	593	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_354(bool) = tx.origin == owner_txorigin4
\
TMP_355(None) = SOLIDITY_CALL require(bool)(TMP_354)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_354(bool) = tx.origin == owner_txorigin4
TMP_355(None) = SOLIDITY_CALL require(bool)(TMP_354)",
		node_source_code_lines="[763]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	592 -> 593	[key=0,
		edge_type=next,
		label=Next];
	594	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin4(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[762, 763, 764]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	594 -> 592	[key=0,
		edge_type=next,
		label=Next];
	595	[contract_name=SKYBITToken,
		function_fullname="_removePauser(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[766, 767, 768, 769]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	596	[contract_name=SKYBITToken,
		function_fullname="_removePauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_pausers.remove(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), \
arguments:['_pausers', 'account'] ",
		node_expression="_pausers.remove(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), arguments:['_pausers', 'account'] ",
		node_source_code_lines="[767]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	595 -> 596	[key=0,
		edge_type=next,
		label=Next];
	597	[contract_name=SKYBITToken,
		function_fullname="_removePauser(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
PauserRemoved(account)

IRs:
Emit PauserRemoved(account)",
		node_expression="PauserRemoved(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit PauserRemoved(account)",
		node_source_code_lines="[768]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	596 -> 597	[key=0,
		edge_type=next,
		label=Next];
	598	[contract_name=SKYBITToken,
		function_fullname="_removePauser(address)",
		label="buggy_30.sol_SKYBITToken__removePauser(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[766, 767, 768, 769]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	598 -> 595	[key=0,
		edge_type=next,
		label=Next];
	599	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[770, 771, 772, 773]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	600	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_358(bool) = tx.origin == owner_txorigin7
\
TMP_359(None) = SOLIDITY_CALL require(bool)(TMP_358)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_358(bool) = tx.origin == owner_txorigin7
TMP_359(None) = SOLIDITY_CALL require(bool)(TMP_358)",
		node_source_code_lines="[771]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	599 -> 600	[key=0,
		edge_type=next,
		label=Next];
	601	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_138(None) -> to.call
REF_139(None) -> REF_138.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_138(None) -> to.call
REF_139(None) -> REF_138.value",
		node_source_code_lines="[772]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	600 -> 601	[key=0,
		edge_type=next,
		label=Next];
	602	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[770, 771, 772, 773]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	602 -> 599	[key=0,
		edge_type=next,
		label=Next];
	603	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[639, 640, 641, 642]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	604	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_361(bool) = tx.origin == owner_txorigin35
\
TMP_362(None) = SOLIDITY_CALL require(bool)(TMP_361)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_361(bool) = tx.origin == owner_txorigin35
TMP_362(None) = SOLIDITY_CALL require(bool)(TMP_361)",
		node_source_code_lines="[640]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	603 -> 604	[key=0,
		edge_type=next,
		label=Next];
	605	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_140(None) -> to.call
REF_141(None) -> REF_140.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_140(None) -> to.call
REF_141(None) -> REF_140.value",
		node_source_code_lines="[641]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	604 -> 605	[key=0,
		edge_type=next,
		label=Next];
	606	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[639, 640, 641, 642]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	606 -> 603	[key=0,
		edge_type=next,
		label=Next];
	607	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[644, 645, 646]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	608	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_364(bool) = tx.origin == owner_txorigin40
\
TMP_365(None) = SOLIDITY_CALL require(bool)(TMP_364)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_364(bool) = tx.origin == owner_txorigin40
TMP_365(None) = SOLIDITY_CALL require(bool)(TMP_364)",
		node_source_code_lines="[645]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	607 -> 608	[key=0,
		edge_type=next,
		label=Next];
	609	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin40(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[644, 645, 646]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	609 -> 607	[key=0,
		edge_type=next,
		label=Next];
	610	[contract_name=SKYBITToken,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[651, 652, 653]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	611	[contract_name=SKYBITToken,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
_addMinter(msg.sender)

IRs:
INTERNAL_CALL, MinterRole._addMinter(address)(msg.sender)",
		node_expression="_addMinter(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, MinterRole._addMinter(address)(msg.sender)",
		node_source_code_lines="[652]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	610 -> 611	[key=0,
		edge_type=next,
		label=Next];
	612	[contract_name=SKYBITToken,
		function_fullname="constructor()",
		label="buggy_30.sol_SKYBITToken_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[651, 652, 653]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	612 -> 610	[key=0,
		edge_type=next,
		label=Next];
	613	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[654, 655, 656, 657]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	614	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_367(bool) = tx.origin == owner_txorigin17
\
TMP_368(None) = SOLIDITY_CALL require(bool)(TMP_367)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_367(bool) = tx.origin == owner_txorigin17
TMP_368(None) = SOLIDITY_CALL require(bool)(TMP_367)",
		node_source_code_lines="[655]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	613 -> 614	[key=0,
		edge_type=next,
		label=Next];
	615	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[656]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	614 -> 615	[key=0,
		edge_type=next,
		label=Next];
	616	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[654, 655, 656, 657]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	616 -> 613	[key=0,
		edge_type=next,
		label=Next];
	617	[contract_name=SKYBITToken,
		function_fullname="isMinter(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[664, 665, 666]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	618	[contract_name=SKYBITToken,
		function_fullname="isMinter(address)",
		label="Node Type: RETURN

EXPRESSION:
_minters.has(account)

IRs:
TMP_370(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,\
address), arguments:['_minters', 'account'] 
RETURN TMP_370",
		node_expression="_minters.has(account)",
		node_info_vulnerabilities=None,
		node_irs="TMP_370(bool) = LIBRARY_CALL, dest:Roles, function:Roles.has(Roles.Role,address), arguments:['_minters', 'account'] 
RETURN TMP_\
370",
		node_source_code_lines="[665]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	617 -> 618	[key=0,
		edge_type=next,
		label=Next];
	619	[contract_name=SKYBITToken,
		function_fullname="isMinter(address)",
		label="buggy_30.sol_SKYBITToken_isMinter(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[664, 665, 666]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	619 -> 617	[key=0,
		edge_type=next,
		label=Next];
	620	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[667, 668, 669, 670]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	621	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_371(bool) = tx.origin == owner_txorigin37
\
TMP_372(None) = SOLIDITY_CALL require(bool)(TMP_371)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_371(bool) = tx.origin == owner_txorigin37
TMP_372(None) = SOLIDITY_CALL require(bool)(TMP_371)",
		node_source_code_lines="[668]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	620 -> 621	[key=0,
		edge_type=next,
		label=Next];
	622	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[669]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	621 -> 622	[key=0,
		edge_type=next,
		label=Next];
	623	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[667, 668, 669, 670]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	623 -> 620	[key=0,
		edge_type=next,
		label=Next];
	624	[contract_name=SKYBITToken,
		function_fullname="addMinter(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[672, 673, 674]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	626	[contract_name=SKYBITToken,
		function_fullname="addMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyMinter()

IRs:
MODIFIER_CALL, MinterRole.onlyMinter()()",
		node_expression="onlyMinter()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, MinterRole.onlyMinter()()",
		node_source_code_lines="[672]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	624 -> 626	[key=0,
		edge_type=next,
		label=Next];
	625	[contract_name=SKYBITToken,
		function_fullname="addMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_addMinter(account)

IRs:
INTERNAL_CALL, MinterRole._addMinter(address)(account)",
		node_expression="_addMinter(account)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, MinterRole._addMinter(address)(account)",
		node_source_code_lines="[673]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	626 -> 625	[key=0,
		edge_type=next,
		label=Next];
	627	[contract_name=SKYBITToken,
		function_fullname="addMinter(address)",
		label="buggy_30.sol_SKYBITToken_addMinter(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[672, 673, 674]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	627 -> 624	[key=0,
		edge_type=next,
		label=Next];
	628	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[675, 676, 677, 678]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	629	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_376(bool) = tx.origin == owner_txorigin3
\
TMP_377(None) = SOLIDITY_CALL require(bool)(TMP_376)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_376(bool) = tx.origin == owner_txorigin3
TMP_377(None) = SOLIDITY_CALL require(bool)(TMP_376)",
		node_source_code_lines="[676]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	628 -> 629	[key=0,
		edge_type=next,
		label=Next];
	630	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_145(None) -> to.call
REF_146(None) -> REF_145.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_145(None) -> to.call
REF_146(None) -> REF_145.value",
		node_source_code_lines="[677]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	629 -> 630	[key=0,
		edge_type=next,
		label=Next];
	631	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[675, 676, 677, 678]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	631 -> 628	[key=0,
		edge_type=next,
		label=Next];
	632	[contract_name=SKYBITToken,
		function_fullname="renounceMinter()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[680, 681, 682]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	633	[contract_name=SKYBITToken,
		function_fullname="renounceMinter()",
		label="Node Type: EXPRESSION

EXPRESSION:
_removeMinter(msg.sender)

IRs:
INTERNAL_CALL, MinterRole._removeMinter(address)(msg.sender)",
		node_expression="_removeMinter(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, MinterRole._removeMinter(address)(msg.sender)",
		node_source_code_lines="[681]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	632 -> 633	[key=0,
		edge_type=next,
		label=Next];
	634	[contract_name=SKYBITToken,
		function_fullname="renounceMinter()",
		label="buggy_30.sol_SKYBITToken_renounceMinter()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[680, 681, 682]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	634 -> 632	[key=0,
		edge_type=next,
		label=Next];
	635	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[683, 684, 685, 686]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	636	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_380(bool) = tx.origin == owner_txorigin9
\
TMP_381(None) = SOLIDITY_CALL require(bool)(TMP_380)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_380(bool) = tx.origin == owner_txorigin9
TMP_381(None) = SOLIDITY_CALL require(bool)(TMP_380)",
		node_source_code_lines="[684]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	635 -> 636	[key=0,
		edge_type=next,
		label=Next];
	637	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[685]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	636 -> 637	[key=0,
		edge_type=next,
		label=Next];
	638	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[683, 684, 685, 686]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	638 -> 635	[key=0,
		edge_type=next,
		label=Next];
	639	[contract_name=SKYBITToken,
		function_fullname="_addMinter(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[688, 689, 690, 691]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	640	[contract_name=SKYBITToken,
		function_fullname="_addMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_minters.add(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), \
arguments:['_minters', 'account'] ",
		node_expression="_minters.add(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.add(Roles.Role,address), arguments:['_minters', 'account'] ",
		node_source_code_lines="[689]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	639 -> 640	[key=0,
		edge_type=next,
		label=Next];
	641	[contract_name=SKYBITToken,
		function_fullname="_addMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
MinterAdded(account)

IRs:
Emit MinterAdded(account)",
		node_expression="MinterAdded(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit MinterAdded(account)",
		node_source_code_lines="[690]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	640 -> 641	[key=0,
		edge_type=next,
		label=Next];
	642	[contract_name=SKYBITToken,
		function_fullname="_addMinter(address)",
		label="buggy_30.sol_SKYBITToken__addMinter(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[688, 689, 690, 691]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	642 -> 639	[key=0,
		edge_type=next,
		label=Next];
	643	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[692, 693, 694, 695]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	644	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_385(bool) = tx.origin == owner_txorigin25
\
TMP_386(None) = SOLIDITY_CALL require(bool)(TMP_385)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_385(bool) = tx.origin == owner_txorigin25
TMP_386(None) = SOLIDITY_CALL require(bool)(TMP_385)",
		node_source_code_lines="[693]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	643 -> 644	[key=0,
		edge_type=next,
		label=Next];
	645	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[694]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	644 -> 645	[key=0,
		edge_type=next,
		label=Next];
	646	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[692, 693, 694, 695]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	646 -> 643	[key=0,
		edge_type=next,
		label=Next];
	647	[contract_name=SKYBITToken,
		function_fullname="_removeMinter(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[697, 698, 699, 700]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	648	[contract_name=SKYBITToken,
		function_fullname="_removeMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_minters.remove(account)

IRs:
LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), \
arguments:['_minters', 'account'] ",
		node_expression="_minters.remove(account)",
		node_info_vulnerabilities=None,
		node_irs="LIBRARY_CALL, dest:Roles, function:Roles.remove(Roles.Role,address), arguments:['_minters', 'account'] ",
		node_source_code_lines="[698]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	647 -> 648	[key=0,
		edge_type=next,
		label=Next];
	649	[contract_name=SKYBITToken,
		function_fullname="_removeMinter(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
MinterRemoved(account)

IRs:
Emit MinterRemoved(account)",
		node_expression="MinterRemoved(account)",
		node_info_vulnerabilities=None,
		node_irs="Emit MinterRemoved(account)",
		node_source_code_lines="[699]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	648 -> 649	[key=0,
		edge_type=next,
		label=Next];
	650	[contract_name=SKYBITToken,
		function_fullname="_removeMinter(address)",
		label="buggy_30.sol_SKYBITToken__removeMinter(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[697, 698, 699, 700]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	650 -> 647	[key=0,
		edge_type=next,
		label=Next];
	651	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[701, 702, 703, 704]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	652	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_390(bool) = tx.origin == owner_txorigin19
\
TMP_391(None) = SOLIDITY_CALL require(bool)(TMP_390)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_390(bool) = tx.origin == owner_txorigin19
TMP_391(None) = SOLIDITY_CALL require(bool)(TMP_390)",
		node_source_code_lines="[702]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	651 -> 652	[key=0,
		edge_type=next,
		label=Next];
	653	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_151(None) -> to.call
REF_152(None) -> REF_151.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_151(None) -> to.call
REF_152(None) -> REF_151.value",
		node_source_code_lines="[703]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	652 -> 653	[key=0,
		edge_type=next,
		label=Next];
	654	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[701, 702, 703, 704]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	654 -> 651	[key=0,
		edge_type=next,
		label=Next];
	655	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	656	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_name = name

IRs:
_name(string) := name(string)",
		node_expression="_name = name",
		node_info_vulnerabilities=None,
		node_irs="_name(string) := name(string)",
		node_source_code_lines="[263]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	655 -> 656	[key=0,
		edge_type=next,
		label=Next];
	657	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_symbol = symbol

IRs:
_symbol(string) := symbol(string)",
		node_expression="_symbol = symbol",
		node_info_vulnerabilities=None,
		node_irs="_symbol(string) := symbol(string)",
		node_source_code_lines="[264]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	656 -> 657	[key=0,
		edge_type=next,
		label=Next];
	658	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_defaultOperatorsArray = defaultOperators

IRs:
_defaultOperatorsArray(address[]) := defaultOperators(\
address[])",
		node_expression="_defaultOperatorsArray = defaultOperators",
		node_info_vulnerabilities=None,
		node_irs="_defaultOperatorsArray(address[]) := defaultOperators(address[])",
		node_source_code_lines="[266]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	657 -> 658	[key=0,
		edge_type=next,
		label=Next];
	661	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 0(uint256)",
		node_source_code_lines="[267]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	658 -> 661	[key=0,
		edge_type=next,
		label=Next];
	659	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269]",
		node_type=BEGIN_LOOP,
		source_file="buggy_30.sol"];
	662	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: IF_LOOP

EXPRESSION:
i < _defaultOperatorsArray.length

IRs:
REF_153 -> LENGTH _defaultOperatorsArray
TMP_393(bool) = \
i < REF_153
CONDITION TMP_393",
		node_expression="i < _defaultOperatorsArray.length",
		node_info_vulnerabilities=None,
		node_irs="REF_153 -> LENGTH _defaultOperatorsArray
TMP_393(bool) = i < REF_153
CONDITION TMP_393",
		node_source_code_lines="[267]",
		node_type=IF_LOOP,
		source_file="buggy_30.sol"];
	659 -> 662	[key=0,
		edge_type=next,
		label=Next];
	660	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[267, 268, 269]",
		node_type=END_LOOP,
		source_file="buggy_30.sol"];
	665	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_erc1820.setInterfaceImplementer(address(this),keccak256(bytes)(ERC777Token),address(this))

\
IRs:
TMP_395 = CONVERT this to address
TMP_396(bytes32) = SOLIDITY_CALL keccak256(bytes)(ERC777Token)
TMP_397 = CONVERT this to \
address
HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:setInterfaceImplementer, arguments:['TMP_395', 'TMP_396', 'TMP_\
397']  ",
		node_expression="_erc1820.setInterfaceImplementer(address(this),keccak256(bytes)(ERC777Token),address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_395 = CONVERT this to address
TMP_396(bytes32) = SOLIDITY_CALL keccak256(bytes)(ERC777Token)
TMP_397 = CONVERT this to address
\
HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:setInterfaceImplementer, arguments:['TMP_395', 'TMP_396', 'TMP_397']  ",
		node_source_code_lines="[272]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	660 -> 665	[key=0,
		edge_type=next,
		label=Next];
	661 -> 659	[key=0,
		edge_type=next,
		label=Next];
	662 -> 660	[key=0,
		edge_type=if_false,
		label=False];
	663	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_defaultOperators[_defaultOperatorsArray[i]] = true

IRs:
REF_154(address) -> _defaultOperatorsArray[\
i]
REF_155(bool) -> _defaultOperators[REF_154]
REF_155 (->_defaultOperators) := True(bool)",
		node_expression="_defaultOperators[_defaultOperatorsArray[i]] = true",
		node_info_vulnerabilities=None,
		node_irs="REF_154(address) -> _defaultOperatorsArray[i]
REF_155(bool) -> _defaultOperators[REF_154]
REF_155 (->_defaultOperators) := True(\
bool)",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	662 -> 663	[key=0,
		edge_type=if_true,
		label=True];
	664	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_394(uint256) := i(uint256)
i(uint256) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_394(uint256) := i(uint256)
i(uint256) = i + 1",
		node_source_code_lines="[267]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	663 -> 664	[key=0,
		edge_type=next,
		label=Next];
	664 -> 662	[key=0,
		edge_type=next,
		label=Next];
	666	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_erc1820.setInterfaceImplementer(address(this),keccak256(bytes)(ERC20Token),address(this))

IRs:
\
TMP_399 = CONVERT this to address
TMP_400(bytes32) = SOLIDITY_CALL keccak256(bytes)(ERC20Token)
TMP_401 = CONVERT this to address
\
HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:setInterfaceImplementer, arguments:['TMP_399', 'TMP_400', 'TMP_401']  ",
		node_expression="_erc1820.setInterfaceImplementer(address(this),keccak256(bytes)(ERC20Token),address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_399 = CONVERT this to address
TMP_400(bytes32) = SOLIDITY_CALL keccak256(bytes)(ERC20Token)
TMP_401 = CONVERT this to address
\
HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:setInterfaceImplementer, arguments:['TMP_399', 'TMP_400', 'TMP_401']  ",
		node_source_code_lines="[273]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	665 -> 666	[key=0,
		edge_type=next,
		label=Next];
	667	[contract_name=SKYBITToken,
		function_fullname="constructor(string,string,address[])",
		label="buggy_30.sol_SKYBITToken_constructor(string,string,address[])",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	667 -> 655	[key=0,
		edge_type=next,
		label=Next];
	668	[contract_name=SKYBITToken,
		function_fullname="name()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278, 279]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	669	[contract_name=SKYBITToken,
		function_fullname="name()",
		label="Node Type: RETURN

EXPRESSION:
_name

IRs:
RETURN _name",
		node_expression=_name,
		node_info_vulnerabilities=None,
		node_irs="RETURN _name",
		node_source_code_lines="[278]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	668 -> 669	[key=0,
		edge_type=next,
		label=Next];
	670	[contract_name=SKYBITToken,
		function_fullname="name()",
		label="buggy_30.sol_SKYBITToken_name()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278, 279]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	670 -> 668	[key=0,
		edge_type=next,
		label=Next];
	671	[contract_name=SKYBITToken,
		function_fullname="symbol()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[282, 283, 284]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	672	[contract_name=SKYBITToken,
		function_fullname="symbol()",
		label="Node Type: RETURN

EXPRESSION:
_symbol

IRs:
RETURN _symbol",
		node_expression=_symbol,
		node_info_vulnerabilities=None,
		node_irs="RETURN _symbol",
		node_source_code_lines="[283]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	671 -> 672	[key=0,
		edge_type=next,
		label=Next];
	673	[contract_name=SKYBITToken,
		function_fullname="symbol()",
		label="buggy_30.sol_SKYBITToken_symbol()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[282, 283, 284]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	673 -> 671	[key=0,
		edge_type=next,
		label=Next];
	674	[contract_name=SKYBITToken,
		function_fullname="decimals()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[287, 288, 289]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	675	[contract_name=SKYBITToken,
		function_fullname="decimals()",
		label="Node Type: RETURN

EXPRESSION:
18

IRs:
RETURN 18",
		node_expression=18,
		node_info_vulnerabilities=None,
		node_irs="RETURN 18",
		node_source_code_lines="[288]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	674 -> 675	[key=0,
		edge_type=next,
		label=Next];
	676	[contract_name=SKYBITToken,
		function_fullname="decimals()",
		label="buggy_30.sol_SKYBITToken_decimals()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[287, 288, 289]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	676 -> 674	[key=0,
		edge_type=next,
		label=Next];
	677	[contract_name=SKYBITToken,
		function_fullname="granularity()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[292, 293, 294]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	678	[contract_name=SKYBITToken,
		function_fullname="granularity()",
		label="Node Type: RETURN

EXPRESSION:
1

IRs:
RETURN 1",
		node_expression=1,
		node_info_vulnerabilities=None,
		node_irs="RETURN 1",
		node_source_code_lines="[293]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	677 -> 678	[key=0,
		edge_type=next,
		label=Next];
	679	[contract_name=SKYBITToken,
		function_fullname="granularity()",
		label="buggy_30.sol_SKYBITToken_granularity()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[292, 293, 294]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	679 -> 677	[key=0,
		edge_type=next,
		label=Next];
	680	[contract_name=SKYBITToken,
		function_fullname="totalSupply()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[297, 298, 299]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	681	[contract_name=SKYBITToken,
		function_fullname="totalSupply()",
		label="Node Type: RETURN

EXPRESSION:
_totalSupply

IRs:
RETURN _totalSupply",
		node_expression=_totalSupply,
		node_info_vulnerabilities=None,
		node_irs="RETURN _totalSupply",
		node_source_code_lines="[298]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	680 -> 681	[key=0,
		edge_type=next,
		label=Next];
	682	[contract_name=SKYBITToken,
		function_fullname="totalSupply()",
		label="buggy_30.sol_SKYBITToken_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[297, 298, 299]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	682 -> 680	[key=0,
		edge_type=next,
		label=Next];
	683	[contract_name=SKYBITToken,
		function_fullname="balanceOf(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	684	[contract_name=SKYBITToken,
		function_fullname="balanceOf(address)",
		label="Node Type: RETURN

EXPRESSION:
_balances[tokenHolder]

IRs:
REF_158(uint256) -> _balances[tokenHolder]
RETURN REF_158",
		node_expression="_balances[tokenHolder]",
		node_info_vulnerabilities=None,
		node_irs="REF_158(uint256) -> _balances[tokenHolder]
RETURN REF_158",
		node_source_code_lines="[303]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	683 -> 684	[key=0,
		edge_type=next,
		label=Next];
	685	[contract_name=SKYBITToken,
		function_fullname="balanceOf(address)",
		label="buggy_30.sol_SKYBITToken_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	685 -> 683	[key=0,
		edge_type=next,
		label=Next];
	686	[contract_name=SKYBITToken,
		function_fullname="send(address,uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	687	[contract_name=SKYBITToken,
		function_fullname="send(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_send(msg.sender,msg.sender,recipient,amount,data,,true)

IRs:
INTERNAL_CALL, ERC777._send(address,\
address,address,uint256,bytes,bytes,bool)(msg.sender,msg.sender,recipient,amount,data,,True)",
		node_expression="_send(msg.sender,msg.sender,recipient,amount,data,,true)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._send(address,address,address,uint256,bytes,bytes,bool)(msg.sender,msg.sender,recipient,amount,data,,True)",
		node_source_code_lines="[308]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	686 -> 687	[key=0,
		edge_type=next,
		label=Next];
	688	[contract_name=SKYBITToken,
		function_fullname="send(address,uint256,bytes)",
		label="buggy_30.sol_SKYBITToken_send(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	688 -> 686	[key=0,
		edge_type=next,
		label=Next];
	689	[contract_name=SKYBITToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	690	[contract_name=SKYBITToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(recipient != address(0),ERC777: transfer to the zero address)

IRs:
TMP_\
404 = CONVERT 0 to address
TMP_405(bool) = recipient != TMP_404
TMP_406(None) = SOLIDITY_CALL require(bool,string)(TMP_405,ERC777: \
transfer to the zero address)",
		node_expression="require(bool,string)(recipient != address(0),ERC777: transfer to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_404 = CONVERT 0 to address
TMP_405(bool) = recipient != TMP_404
TMP_406(None) = SOLIDITY_CALL require(bool,string)(TMP_405,ERC777: \
transfer to the zero address)",
		node_source_code_lines="[313]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	689 -> 690	[key=0,
		edge_type=next,
		label=Next];
	691	[contract_name=SKYBITToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
from = msg.sender

IRs:
from(address) := msg.sender(address)",
		node_expression="from = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="from(address) := msg.sender(address)",
		node_source_code_lines="[315]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	690 -> 691	[key=0,
		edge_type=next,
		label=Next];
	692	[contract_name=SKYBITToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensToSend(from,from,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._callTokensToSend(\
address,address,address,uint256,bytes,bytes)(from,from,recipient,amount,,)",
		node_expression="_callTokensToSend(from,from,recipient,amount,,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(from,from,recipient,amount,,)",
		node_source_code_lines="[317]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	691 -> 692	[key=0,
		edge_type=next,
		label=Next];
	693	[contract_name=SKYBITToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_move(from,from,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._move(address,address,address,\
uint256,bytes,bytes)(from,from,recipient,amount,,)",
		node_expression="_move(from,from,recipient,amount,,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._move(address,address,address,uint256,bytes,bytes)(from,from,recipient,amount,,)",
		node_source_code_lines="[319]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	692 -> 693	[key=0,
		edge_type=next,
		label=Next];
	694	[contract_name=SKYBITToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensReceived(from,from,recipient,amount,,,false)

IRs:
INTERNAL_CALL, ERC777._callTokensReceived(\
address,address,address,uint256,bytes,bytes,bool)(from,from,recipient,amount,,,False)",
		node_expression="_callTokensReceived(from,from,recipient,amount,,,false)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(from,from,recipient,amount,,,False)",
		node_source_code_lines="[321]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	693 -> 694	[key=0,
		edge_type=next,
		label=Next];
	695	[contract_name=SKYBITToken,
		function_fullname="transfer(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[323]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	694 -> 695	[key=0,
		edge_type=next,
		label=Next];
	696	[contract_name=SKYBITToken,
		function_fullname="transfer(address,uint256)",
		label="buggy_30.sol_SKYBITToken_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	696 -> 689	[key=0,
		edge_type=next,
		label=Next];
	697	[contract_name=SKYBITToken,
		function_fullname="burn(uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[327, 328, 329]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	698	[contract_name=SKYBITToken,
		function_fullname="burn(uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(msg.sender,msg.sender,amount,data,)

IRs:
INTERNAL_CALL, ERC777._burn(address,address,uint256,\
bytes,bytes)(msg.sender,msg.sender,amount,data,)",
		node_expression="_burn(msg.sender,msg.sender,amount,data,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._burn(address,address,uint256,bytes,bytes)(msg.sender,msg.sender,amount,data,)",
		node_source_code_lines="[328]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	697 -> 698	[key=0,
		edge_type=next,
		label=Next];
	699	[contract_name=SKYBITToken,
		function_fullname="burn(uint256,bytes)",
		label="buggy_30.sol_SKYBITToken_burn(uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[327, 328, 329]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	699 -> 697	[key=0,
		edge_type=next,
		label=Next];
	700	[contract_name=SKYBITToken,
		function_fullname="isOperatorFor(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[335, 336, 337, 338, 339]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	701	[contract_name=SKYBITToken,
		function_fullname="isOperatorFor(address,address)",
		label="Node Type: RETURN

EXPRESSION:
operator == tokenHolder || (_defaultOperators[operator] && ! _revokedDefaultOperators[tokenHolder][\
operator]) || _operators[tokenHolder][operator]

IRs:
TMP_411(bool) = operator == tokenHolder
REF_159(bool) -> _defaultOperators[\
operator]
REF_160(mapping(address => bool)) -> _revokedDefaultOperators[tokenHolder]
REF_161(bool) -> REF_160[operator]
TMP_412 = ! \
REF_161 
TMP_413(bool) = REF_159 && TMP_412
TMP_414(bool) = TMP_411 || TMP_413
REF_162(mapping(address => bool)) -> _operators[tokenHolder]
\
REF_163(bool) -> REF_162[operator]
TMP_415(bool) = TMP_414 || REF_163
RETURN TMP_415",
		node_expression="operator == tokenHolder || (_defaultOperators[operator] && ! _revokedDefaultOperators[tokenHolder][operator]) || _operators[tokenHolder][\
operator]",
		node_info_vulnerabilities=None,
		node_irs="TMP_411(bool) = operator == tokenHolder
REF_159(bool) -> _defaultOperators[operator]
REF_160(mapping(address => bool)) -> _revokedDefaultOperators[\
tokenHolder]
REF_161(bool) -> REF_160[operator]
TMP_412 = ! REF_161 
TMP_413(bool) = REF_159 && TMP_412
TMP_414(bool) = TMP_411 || \
TMP_413
REF_162(mapping(address => bool)) -> _operators[tokenHolder]
REF_163(bool) -> REF_162[operator]
TMP_415(bool) = TMP_414 || \
REF_163
RETURN TMP_415",
		node_source_code_lines="[336, 337, 338]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	700 -> 701	[key=0,
		edge_type=next,
		label=Next];
	702	[contract_name=SKYBITToken,
		function_fullname="isOperatorFor(address,address)",
		label="buggy_30.sol_SKYBITToken_isOperatorFor(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[332, 333, 334, 335, 336, 337, 338, 339]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	702 -> 700	[key=0,
		edge_type=next,
		label=Next];
	703	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	704	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin18)

IRs:
TMP_416(bool) = tx.origin == owner_txorigin18
\
TMP_417(None) = SOLIDITY_CALL require(bool)(TMP_416)",
		node_expression="require(bool)(tx.origin == owner_txorigin18)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_416(bool) = tx.origin == owner_txorigin18
TMP_417(None) = SOLIDITY_CALL require(bool)(TMP_416)",
		node_source_code_lines="[341]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	703 -> 704	[key=0,
		edge_type=next,
		label=Next];
	705	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_418 = CONVERT this to address
REF_165 -> \
BALANCE TMP_418
Transfer dest:_recipient value:REF_165",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_418 = CONVERT this to address
REF_165 -> BALANCE TMP_418
Transfer dest:_recipient value:REF_165",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	704 -> 705	[key=0,
		edge_type=next,
		label=Next];
	706	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin18(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin18(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	706 -> 703	[key=0,
		edge_type=next,
		label=Next];
	707	[contract_name=SKYBITToken,
		function_fullname="authorizeOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	708	[contract_name=SKYBITToken,
		function_fullname="authorizeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(msg.sender != operator,ERC777: authorizing self as operator)

IRs:
TMP_420(\
bool) = msg.sender != operator
TMP_421(None) = SOLIDITY_CALL require(bool,string)(TMP_420,ERC777: authorizing self as operator)",
		node_expression="require(bool,string)(msg.sender != operator,ERC777: authorizing self as operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_420(bool) = msg.sender != operator
TMP_421(None) = SOLIDITY_CALL require(bool,string)(TMP_420,ERC777: authorizing self as operator)",
		node_source_code_lines="[347]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	707 -> 708	[key=0,
		edge_type=next,
		label=Next];
	709	[contract_name=SKYBITToken,
		function_fullname="authorizeOperator(address)",
		label="Node Type: IF

EXPRESSION:
_defaultOperators[operator]

IRs:
REF_166(bool) -> _defaultOperators[operator]
CONDITION REF_166",
		node_expression="_defaultOperators[operator]",
		node_info_vulnerabilities=None,
		node_irs="REF_166(bool) -> _defaultOperators[operator]
CONDITION REF_166",
		node_source_code_lines="[349]",
		node_type=IF,
		source_file="buggy_30.sol"];
	708 -> 709	[key=0,
		edge_type=next,
		label=Next];
	710	[contract_name=SKYBITToken,
		function_fullname="authorizeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
delete _revokedDefaultOperators[msg.sender][operator]

IRs:
REF_167(mapping(address => bool)) \
-> _revokedDefaultOperators[msg.sender]
REF_168(bool) -> REF_167[operator]
REF_167 = delete REF_168 ",
		node_expression="delete _revokedDefaultOperators[msg.sender][operator]",
		node_info_vulnerabilities=None,
		node_irs="REF_167(mapping(address => bool)) -> _revokedDefaultOperators[msg.sender]
REF_168(bool) -> REF_167[operator]
REF_167 = delete REF_\
168 ",
		node_source_code_lines="[350]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	709 -> 710	[key=0,
		edge_type=if_true,
		label=True];
	711	[contract_name=SKYBITToken,
		function_fullname="authorizeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_operators[msg.sender][operator] = true

IRs:
REF_169(mapping(address => bool)) -> _operators[\
msg.sender]
REF_170(bool) -> REF_169[operator]
REF_170 (->_operators) := True(bool)",
		node_expression="_operators[msg.sender][operator] = true",
		node_info_vulnerabilities=None,
		node_irs="REF_169(mapping(address => bool)) -> _operators[msg.sender]
REF_170(bool) -> REF_169[operator]
REF_170 (->_operators) := True(bool)",
		node_source_code_lines="[352]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	709 -> 711	[key=0,
		edge_type=if_false,
		label=False];
	712	[contract_name=SKYBITToken,
		function_fullname="authorizeOperator(address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[349, 350, 351, 352, 353]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	710 -> 712	[key=0,
		edge_type=next,
		label=Next];
	711 -> 712	[key=0,
		edge_type=next,
		label=Next];
	713	[contract_name=SKYBITToken,
		function_fullname="authorizeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
AuthorizedOperator(operator,msg.sender)

IRs:
Emit AuthorizedOperator(operator.msg.sender)",
		node_expression="AuthorizedOperator(operator,msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit AuthorizedOperator(operator.msg.sender)",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	712 -> 713	[key=0,
		edge_type=next,
		label=Next];
	714	[contract_name=SKYBITToken,
		function_fullname="authorizeOperator(address)",
		label="buggy_30.sol_SKYBITToken_authorizeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	714 -> 707	[key=0,
		edge_type=next,
		label=Next];
	715	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[357, 358, 359, 360]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	716	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin29)

IRs:
TMP_423(bool) = tx.origin == owner_txorigin29
\
TMP_424(None) = SOLIDITY_CALL require(bool)(TMP_423)",
		node_expression="require(bool)(tx.origin == owner_txorigin29)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_423(bool) = tx.origin == owner_txorigin29
TMP_424(None) = SOLIDITY_CALL require(bool)(TMP_423)",
		node_source_code_lines="[358]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	715 -> 716	[key=0,
		edge_type=next,
		label=Next];
	717	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[359]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	716 -> 717	[key=0,
		edge_type=next,
		label=Next];
	718	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin29(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin29(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[357, 358, 359, 360]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	718 -> 715	[key=0,
		edge_type=next,
		label=Next];
	719	[contract_name=SKYBITToken,
		function_fullname="revokeOperator(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	720	[contract_name=SKYBITToken,
		function_fullname="revokeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(operator != msg.sender,ERC777: revoking self as operator)

IRs:
TMP_426(\
bool) = operator != msg.sender
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,ERC777: revoking self as operator)",
		node_expression="require(bool,string)(operator != msg.sender,ERC777: revoking self as operator)",
		node_info_vulnerabilities=None,
		node_irs="TMP_426(bool) = operator != msg.sender
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,ERC777: revoking self as operator)",
		node_source_code_lines="[364]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	719 -> 720	[key=0,
		edge_type=next,
		label=Next];
	721	[contract_name=SKYBITToken,
		function_fullname="revokeOperator(address)",
		label="Node Type: IF

EXPRESSION:
_defaultOperators[operator]

IRs:
REF_172(bool) -> _defaultOperators[operator]
CONDITION REF_172",
		node_expression="_defaultOperators[operator]",
		node_info_vulnerabilities=None,
		node_irs="REF_172(bool) -> _defaultOperators[operator]
CONDITION REF_172",
		node_source_code_lines="[366]",
		node_type=IF,
		source_file="buggy_30.sol"];
	720 -> 721	[key=0,
		edge_type=next,
		label=Next];
	722	[contract_name=SKYBITToken,
		function_fullname="revokeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_revokedDefaultOperators[msg.sender][operator] = true

IRs:
REF_173(mapping(address => bool)) \
-> _revokedDefaultOperators[msg.sender]
REF_174(bool) -> REF_173[operator]
REF_174 (->_revokedDefaultOperators) := True(bool)",
		node_expression="_revokedDefaultOperators[msg.sender][operator] = true",
		node_info_vulnerabilities=None,
		node_irs="REF_173(mapping(address => bool)) -> _revokedDefaultOperators[msg.sender]
REF_174(bool) -> REF_173[operator]
REF_174 (->_revokedDefaultOperators) := \
True(bool)",
		node_source_code_lines="[367]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	721 -> 722	[key=0,
		edge_type=if_true,
		label=True];
	723	[contract_name=SKYBITToken,
		function_fullname="revokeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
delete _operators[msg.sender][operator]

IRs:
REF_175(mapping(address => bool)) -> _operators[\
msg.sender]
REF_176(bool) -> REF_175[operator]
REF_175 = delete REF_176 ",
		node_expression="delete _operators[msg.sender][operator]",
		node_info_vulnerabilities=None,
		node_irs="REF_175(mapping(address => bool)) -> _operators[msg.sender]
REF_176(bool) -> REF_175[operator]
REF_175 = delete REF_176 ",
		node_source_code_lines="[369]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	721 -> 723	[key=0,
		edge_type=if_false,
		label=False];
	724	[contract_name=SKYBITToken,
		function_fullname="revokeOperator(address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[366, 367, 368, 369, 370]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	722 -> 724	[key=0,
		edge_type=next,
		label=Next];
	723 -> 724	[key=0,
		edge_type=next,
		label=Next];
	725	[contract_name=SKYBITToken,
		function_fullname="revokeOperator(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
RevokedOperator(operator,msg.sender)

IRs:
Emit RevokedOperator(operator.msg.sender)",
		node_expression="RevokedOperator(operator,msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="Emit RevokedOperator(operator.msg.sender)",
		node_source_code_lines="[372]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	724 -> 725	[key=0,
		edge_type=next,
		label=Next];
	726	[contract_name=SKYBITToken,
		function_fullname="revokeOperator(address)",
		label="buggy_30.sol_SKYBITToken_revokeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	726 -> 719	[key=0,
		edge_type=next,
		label=Next];
	727	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[374, 375, 376, 377]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	728	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin6)

IRs:
TMP_429(bool) = tx.origin == owner_txorigin6
\
TMP_430(None) = SOLIDITY_CALL require(bool)(TMP_429)",
		node_expression="require(bool)(tx.origin == owner_txorigin6)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_429(bool) = tx.origin == owner_txorigin6
TMP_430(None) = SOLIDITY_CALL require(bool)(TMP_429)",
		node_source_code_lines="[375]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	727 -> 728	[key=0,
		edge_type=next,
		label=Next];
	729	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_431 = CONVERT this to address
REF_178 -> \
BALANCE TMP_431
Transfer dest:_recipient value:REF_178",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_431 = CONVERT this to address
REF_178 -> BALANCE TMP_431
Transfer dest:_recipient value:REF_178",
		node_source_code_lines="[376]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	728 -> 729	[key=0,
		edge_type=next,
		label=Next];
	730	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin6(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin6(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[374, 375, 376, 377]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	730 -> 727	[key=0,
		edge_type=next,
		label=Next];
	731	[contract_name=SKYBITToken,
		function_fullname="defaultOperators()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[380, 381, 382]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	732	[contract_name=SKYBITToken,
		function_fullname="defaultOperators()",
		label="Node Type: RETURN

EXPRESSION:
_defaultOperatorsArray

IRs:
RETURN _defaultOperatorsArray",
		node_expression=_defaultOperatorsArray,
		node_info_vulnerabilities=None,
		node_irs="RETURN _defaultOperatorsArray",
		node_source_code_lines="[381]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	731 -> 732	[key=0,
		edge_type=next,
		label=Next];
	733	[contract_name=SKYBITToken,
		function_fullname="defaultOperators()",
		label="buggy_30.sol_SKYBITToken_defaultOperators()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[380, 381, 382]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	733 -> 731	[key=0,
		edge_type=next,
		label=Next];
	734	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[383, 384, 385]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	735	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin16(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin16)

IRs:
TMP_433(bool) = tx.origin == owner_txorigin16
\
TMP_434(None) = SOLIDITY_CALL require(bool)(TMP_433)",
		node_expression="require(bool)(tx.origin == owner_txorigin16)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_433(bool) = tx.origin == owner_txorigin16
TMP_434(None) = SOLIDITY_CALL require(bool)(TMP_433)",
		node_source_code_lines="[384]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	734 -> 735	[key=0,
		edge_type=next,
		label=Next];
	736	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin16(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin16(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[383, 384, 385]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	736 -> 734	[key=0,
		edge_type=next,
		label=Next];
	737	[contract_name=SKYBITToken,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[396, 397, 398, 399]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	738	[contract_name=SKYBITToken,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isOperatorFor(msg.sender,sender),ERC777: caller is not an operator for holder)

\
IRs:
TMP_435(bool) = INTERNAL_CALL, ERC777.isOperatorFor(address,address)(msg.sender,sender)
TMP_436(None) = SOLIDITY_CALL require(\
bool,string)(TMP_435,ERC777: caller is not an operator for holder)",
		node_expression="require(bool,string)(isOperatorFor(msg.sender,sender),ERC777: caller is not an operator for holder)",
		node_info_vulnerabilities=None,
		node_irs="TMP_435(bool) = INTERNAL_CALL, ERC777.isOperatorFor(address,address)(msg.sender,sender)
TMP_436(None) = SOLIDITY_CALL require(bool,\
string)(TMP_435,ERC777: caller is not an operator for holder)",
		node_source_code_lines="[397]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	737 -> 738	[key=0,
		edge_type=next,
		label=Next];
	739	[contract_name=SKYBITToken,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_send(msg.sender,sender,recipient,amount,data,operatorData,true)

IRs:
INTERNAL_CALL, ERC777._\
send(address,address,address,uint256,bytes,bytes,bool)(msg.sender,sender,recipient,amount,data,operatorData,True)",
		node_expression="_send(msg.sender,sender,recipient,amount,data,operatorData,true)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._send(address,address,address,uint256,bytes,bytes,bool)(msg.sender,sender,recipient,amount,data,operatorData,\
True)",
		node_source_code_lines="[398]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	738 -> 739	[key=0,
		edge_type=next,
		label=Next];
	740	[contract_name=SKYBITToken,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_SKYBITToken_operatorSend(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	740 -> 737	[key=0,
		edge_type=next,
		label=Next];
	741	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	742	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin24(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin24)

IRs:
TMP_438(bool) = tx.origin == owner_txorigin24
\
TMP_439(None) = SOLIDITY_CALL require(bool)(TMP_438)",
		node_expression="require(bool)(tx.origin == owner_txorigin24)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_438(bool) = tx.origin == owner_txorigin24
TMP_439(None) = SOLIDITY_CALL require(bool)(TMP_438)",
		node_source_code_lines="[401]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	741 -> 742	[key=0,
		edge_type=next,
		label=Next];
	743	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin24(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin24(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[400, 401, 402]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	743 -> 741	[key=0,
		edge_type=next,
		label=Next];
	744	[contract_name=SKYBITToken,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[405, 406, 407, 408]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	745	[contract_name=SKYBITToken,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isOperatorFor(msg.sender,account),ERC777: caller is not an operator for \
holder)

IRs:
TMP_440(bool) = INTERNAL_CALL, ERC777.isOperatorFor(address,address)(msg.sender,account)
TMP_441(None) = SOLIDITY_\
CALL require(bool,string)(TMP_440,ERC777: caller is not an operator for holder)",
		node_expression="require(bool,string)(isOperatorFor(msg.sender,account),ERC777: caller is not an operator for holder)",
		node_info_vulnerabilities=None,
		node_irs="TMP_440(bool) = INTERNAL_CALL, ERC777.isOperatorFor(address,address)(msg.sender,account)
TMP_441(None) = SOLIDITY_CALL require(bool,\
string)(TMP_440,ERC777: caller is not an operator for holder)",
		node_source_code_lines="[406]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	744 -> 745	[key=0,
		edge_type=next,
		label=Next];
	746	[contract_name=SKYBITToken,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_burn(msg.sender,account,amount,data,operatorData)

IRs:
INTERNAL_CALL, ERC777._burn(address,\
address,uint256,bytes,bytes)(msg.sender,account,amount,data,operatorData)",
		node_expression="_burn(msg.sender,account,amount,data,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._burn(address,address,uint256,bytes,bytes)(msg.sender,account,amount,data,operatorData)",
		node_source_code_lines="[407]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	745 -> 746	[key=0,
		edge_type=next,
		label=Next];
	747	[contract_name=SKYBITToken,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="buggy_30.sol_SKYBITToken_operatorBurn(address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[405, 406, 407, 408]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	747 -> 744	[key=0,
		edge_type=next,
		label=Next];
	748	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[409, 410, 411, 412]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	749	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin5)

IRs:
TMP_443(bool) = tx.origin == owner_txorigin5
\
TMP_444(None) = SOLIDITY_CALL require(bool)(TMP_443)",
		node_expression="require(bool)(tx.origin == owner_txorigin5)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_443(bool) = tx.origin == owner_txorigin5
TMP_444(None) = SOLIDITY_CALL require(bool)(TMP_443)",
		node_source_code_lines="[410]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	748 -> 749	[key=0,
		edge_type=next,
		label=Next];
	750	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[411]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	749 -> 750	[key=0,
		edge_type=next,
		label=Next];
	751	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin5(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin5(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[409, 410, 411, 412]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	751 -> 748	[key=0,
		edge_type=next,
		label=Next];
	752	[contract_name=SKYBITToken,
		function_fullname="allowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[415, 416, 417]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	753	[contract_name=SKYBITToken,
		function_fullname="allowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
_allowances[holder][spender]

IRs:
REF_180(mapping(address => uint256)) -> _allowances[holder]
REF_\
181(uint256) -> REF_180[spender]
RETURN REF_181",
		node_expression="_allowances[holder][spender]",
		node_info_vulnerabilities=None,
		node_irs="REF_180(mapping(address => uint256)) -> _allowances[holder]
REF_181(uint256) -> REF_180[spender]
RETURN REF_181",
		node_source_code_lines="[416]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	752 -> 753	[key=0,
		edge_type=next,
		label=Next];
	754	[contract_name=SKYBITToken,
		function_fullname="allowance(address,address)",
		label="buggy_30.sol_SKYBITToken_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[415, 416, 417]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	754 -> 752	[key=0,
		edge_type=next,
		label=Next];
	755	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[418, 419, 420, 421]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	756	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin15)

IRs:
TMP_446(bool) = tx.origin == owner_txorigin15
\
TMP_447(None) = SOLIDITY_CALL require(bool)(TMP_446)",
		node_expression="require(bool)(tx.origin == owner_txorigin15)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_446(bool) = tx.origin == owner_txorigin15
TMP_447(None) = SOLIDITY_CALL require(bool)(TMP_446)",
		node_source_code_lines="[419]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	755 -> 756	[key=0,
		edge_type=next,
		label=Next];
	757	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_182(None) -> to.call
REF_183(None) -> REF_182.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_182(None) -> to.call
REF_183(None) -> REF_182.value",
		node_source_code_lines="[420]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	756 -> 757	[key=0,
		edge_type=next,
		label=Next];
	758	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin15(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin15(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[418, 419, 420, 421]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	758 -> 755	[key=0,
		edge_type=next,
		label=Next];
	759	[contract_name=SKYBITToken,
		function_fullname="approve(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[424, 425, 426, 427, 428]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	760	[contract_name=SKYBITToken,
		function_fullname="approve(address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
holder = msg.sender

IRs:
holder(address) := msg.sender(address)",
		node_expression="holder = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="holder(address) := msg.sender(address)",
		node_source_code_lines="[425]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	759 -> 760	[key=0,
		edge_type=next,
		label=Next];
	761	[contract_name=SKYBITToken,
		function_fullname="approve(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(holder,spender,value)

IRs:
INTERNAL_CALL, ERC777._approve(address,address,uint256)(\
holder,spender,value)",
		node_expression="_approve(holder,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._approve(address,address,uint256)(holder,spender,value)",
		node_source_code_lines="[426]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	760 -> 761	[key=0,
		edge_type=next,
		label=Next];
	762	[contract_name=SKYBITToken,
		function_fullname="approve(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[427]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	761 -> 762	[key=0,
		edge_type=next,
		label=Next];
	763	[contract_name=SKYBITToken,
		function_fullname="approve(address,uint256)",
		label="buggy_30.sol_SKYBITToken_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[424, 425, 426, 427, 428]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	763 -> 759	[key=0,
		edge_type=next,
		label=Next];
	764	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[429, 430, 431]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	765	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin28(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin28)

IRs:
TMP_450(bool) = tx.origin == owner_txorigin28
\
TMP_451(None) = SOLIDITY_CALL require(bool)(TMP_450)",
		node_expression="require(bool)(tx.origin == owner_txorigin28)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_450(bool) = tx.origin == owner_txorigin28
TMP_451(None) = SOLIDITY_CALL require(bool)(TMP_450)",
		node_source_code_lines="[430]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	764 -> 765	[key=0,
		edge_type=next,
		label=Next];
	766	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin28(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin28(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[429, 430, 431]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	766 -> 764	[key=0,
		edge_type=next,
		label=Next];
	767	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	768	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(recipient != address(0),ERC777: transfer to the zero address)

IRs:
TMP_\
452 = CONVERT 0 to address
TMP_453(bool) = recipient != TMP_452
TMP_454(None) = SOLIDITY_CALL require(bool,string)(TMP_453,ERC777: \
transfer to the zero address)",
		node_expression="require(bool,string)(recipient != address(0),ERC777: transfer to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_452 = CONVERT 0 to address
TMP_453(bool) = recipient != TMP_452
TMP_454(None) = SOLIDITY_CALL require(bool,string)(TMP_453,ERC777: \
transfer to the zero address)",
		node_source_code_lines="[435]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	767 -> 768	[key=0,
		edge_type=next,
		label=Next];
	769	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(holder != address(0),ERC777: transfer from the zero address)

IRs:
TMP_455 = \
CONVERT 0 to address
TMP_456(bool) = holder != TMP_455
TMP_457(None) = SOLIDITY_CALL require(bool,string)(TMP_456,ERC777: transfer \
from the zero address)",
		node_expression="require(bool,string)(holder != address(0),ERC777: transfer from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_455 = CONVERT 0 to address
TMP_456(bool) = holder != TMP_455
TMP_457(None) = SOLIDITY_CALL require(bool,string)(TMP_456,ERC777: \
transfer from the zero address)",
		node_source_code_lines="[436]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	768 -> 769	[key=0,
		edge_type=next,
		label=Next];
	770	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
spender = msg.sender

IRs:
spender(address) := msg.sender(address)",
		node_expression="spender = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="spender(address) := msg.sender(address)",
		node_source_code_lines="[438]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	769 -> 770	[key=0,
		edge_type=next,
		label=Next];
	771	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensToSend(spender,holder,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._callTokensToSend(\
address,address,address,uint256,bytes,bytes)(spender,holder,recipient,amount,,)",
		node_expression="_callTokensToSend(spender,holder,recipient,amount,,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(spender,holder,recipient,amount,,)",
		node_source_code_lines="[440]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	770 -> 771	[key=0,
		edge_type=next,
		label=Next];
	772	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_move(spender,holder,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._move(address,address,address,\
uint256,bytes,bytes)(spender,holder,recipient,amount,,)",
		node_expression="_move(spender,holder,recipient,amount,,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._move(address,address,address,uint256,bytes,bytes)(spender,holder,recipient,amount,,)",
		node_source_code_lines="[442]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	771 -> 772	[key=0,
		edge_type=next,
		label=Next];
	773	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_approve(holder,spender,_allowances[holder][spender].sub(amount))

IRs:
REF_184(mapping(address => \
uint256)) -> _allowances[holder]
REF_185(uint256) -> REF_184[spender]
TMP_460(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_185', 'amount'] 
INTERNAL_CALL, ERC777._approve(address,address,uint256)(holder,spender,TMP_460)",
		node_expression="_approve(holder,spender,_allowances[holder][spender].sub(amount))",
		node_info_vulnerabilities=None,
		node_irs="REF_184(mapping(address => uint256)) -> _allowances[holder]
REF_185(uint256) -> REF_184[spender]
TMP_460(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_185', 'amount'] 
INTERNAL_CALL, ERC777._approve(address,address,\
uint256)(holder,spender,TMP_460)",
		node_source_code_lines="[443]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	772 -> 773	[key=0,
		edge_type=next,
		label=Next];
	774	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensReceived(spender,holder,recipient,amount,,,false)

IRs:
INTERNAL_CALL, ERC777._callTokensReceived(\
address,address,address,uint256,bytes,bytes,bool)(spender,holder,recipient,amount,,,False)",
		node_expression="_callTokensReceived(spender,holder,recipient,amount,,,false)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(spender,holder,recipient,amount,,,False)",
		node_source_code_lines="[445]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	773 -> 774	[key=0,
		edge_type=next,
		label=Next];
	775	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[447]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	774 -> 775	[key=0,
		edge_type=next,
		label=Next];
	776	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_30.sol_SKYBITToken_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	776 -> 767	[key=0,
		edge_type=next,
		label=Next];
	777	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[449, 450, 451, 452]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	778	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin34)

IRs:
TMP_463(bool) = tx.origin == owner_txorigin34
\
TMP_464(None) = SOLIDITY_CALL require(bool)(TMP_463)",
		node_expression="require(bool)(tx.origin == owner_txorigin34)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_463(bool) = tx.origin == owner_txorigin34
TMP_464(None) = SOLIDITY_CALL require(bool)(TMP_463)",
		node_source_code_lines="[450]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	777 -> 778	[key=0,
		edge_type=next,
		label=Next];
	779	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_465 = CONVERT this to address
REF_188 -> \
BALANCE TMP_465
Transfer dest:_recipient value:REF_188",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_465 = CONVERT this to address
REF_188 -> BALANCE TMP_465
Transfer dest:_recipient value:REF_188",
		node_source_code_lines="[451]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	778 -> 779	[key=0,
		edge_type=next,
		label=Next];
	780	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin34(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin34(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[449, 450, 451, 452]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	780 -> 777	[key=0,
		edge_type=next,
		label=Next];
	781	[contract_name=SKYBITToken,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	782	[contract_name=SKYBITToken,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(account != address(0),ERC777: mint to the zero address)

IRs:
TMP_467 = \
CONVERT 0 to address
TMP_468(bool) = account != TMP_467
TMP_469(None) = SOLIDITY_CALL require(bool,string)(TMP_468,ERC777: mint \
to the zero address)",
		node_expression="require(bool,string)(account != address(0),ERC777: mint to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_467 = CONVERT 0 to address
TMP_468(bool) = account != TMP_467
TMP_469(None) = SOLIDITY_CALL require(bool,string)(TMP_468,ERC777: \
mint to the zero address)",
		node_source_code_lines="[464]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	781 -> 782	[key=0,
		edge_type=next,
		label=Next];
	783	[contract_name=SKYBITToken,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.add(amount)

IRs:
TMP_470(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(uint256) := TMP_470(uint256)",
		node_expression="_totalSupply = _totalSupply.add(amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_470(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(\
uint256) := TMP_470(uint256)",
		node_source_code_lines="[467]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	782 -> 783	[key=0,
		edge_type=next,
		label=Next];
	784	[contract_name=SKYBITToken,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[account] = _balances[account].add(amount)

IRs:
REF_190(uint256) -> _balances[account]
\
REF_191(uint256) -> _balances[account]
TMP_471(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_191', 'amount'] 
REF_190 (->_balances) := TMP_471(uint256)",
		node_expression="_balances[account] = _balances[account].add(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_190(uint256) -> _balances[account]
REF_191(uint256) -> _balances[account]
TMP_471(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_191', 'amount'] 
REF_190 (->_balances) := TMP_471(uint256)",
		node_source_code_lines="[468]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	783 -> 784	[key=0,
		edge_type=next,
		label=Next];
	785	[contract_name=SKYBITToken,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensReceived(operator,address(0),account,amount,userData,operatorData,true)

IRs:
TMP_\
472 = CONVERT 0 to address
INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(operator,\
TMP_472,account,amount,userData,operatorData,True)",
		node_expression="_callTokensReceived(operator,address(0),account,amount,userData,operatorData,true)",
		node_info_vulnerabilities=None,
		node_irs="TMP_472 = CONVERT 0 to address
INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(operator,\
TMP_472,account,amount,userData,operatorData,True)",
		node_source_code_lines="[470]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	784 -> 785	[key=0,
		edge_type=next,
		label=Next];
	786	[contract_name=SKYBITToken,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Minted(operator,account,amount,userData,operatorData)

IRs:
Emit Minted(operator.account.amount.userData.operatorData)",
		node_expression="Minted(operator,account,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="Emit Minted(operator.account.amount.userData.operatorData)",
		node_source_code_lines="[472]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	785 -> 786	[key=0,
		edge_type=next,
		label=Next];
	787	[contract_name=SKYBITToken,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(address(0),account,amount)

IRs:
TMP_475 = CONVERT 0 to address
Emit Transfer(TMP_475.account.amount)",
		node_expression="Transfer(address(0),account,amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_475 = CONVERT 0 to address
Emit Transfer(TMP_475.account.amount)",
		node_source_code_lines="[473]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	786 -> 787	[key=0,
		edge_type=next,
		label=Next];
	788	[contract_name=SKYBITToken,
		function_fullname="_mint(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_SKYBITToken__mint(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	788 -> 781	[key=0,
		edge_type=next,
		label=Next];
	789	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[475, 476, 477, 478]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	790	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin21)

IRs:
TMP_477(bool) = tx.origin == owner_txorigin21
\
TMP_478(None) = SOLIDITY_CALL require(bool)(TMP_477)",
		node_expression="require(bool)(tx.origin == owner_txorigin21)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_477(bool) = tx.origin == owner_txorigin21
TMP_478(None) = SOLIDITY_CALL require(bool)(TMP_477)",
		node_source_code_lines="[476]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	789 -> 790	[key=0,
		edge_type=next,
		label=Next];
	791	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[477]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	790 -> 791	[key=0,
		edge_type=next,
		label=Next];
	792	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin21(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin21(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[475, 476, 477, 478]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	792 -> 789	[key=0,
		edge_type=next,
		label=Next];
	793	[contract_name=SKYBITToken,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[491, 492, 493, 494, 495, 496, 497, 498, 499, 500]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	794	[contract_name=SKYBITToken,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(from != address(0),ERC777: send from the zero address)

IRs:
TMP_480 = CONVERT \
0 to address
TMP_481(bool) = from != TMP_480
TMP_482(None) = SOLIDITY_CALL require(bool,string)(TMP_481,ERC777: send from the zero \
address)",
		node_expression="require(bool,string)(from != address(0),ERC777: send from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_480 = CONVERT 0 to address
TMP_481(bool) = from != TMP_480
TMP_482(None) = SOLIDITY_CALL require(bool,string)(TMP_481,ERC777: \
send from the zero address)",
		node_source_code_lines="[492]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	793 -> 794	[key=0,
		edge_type=next,
		label=Next];
	795	[contract_name=SKYBITToken,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(to != address(0),ERC777: send to the zero address)

IRs:
TMP_483 = CONVERT \
0 to address
TMP_484(bool) = to != TMP_483
TMP_485(None) = SOLIDITY_CALL require(bool,string)(TMP_484,ERC777: send to the zero address)",
		node_expression="require(bool,string)(to != address(0),ERC777: send to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_483 = CONVERT 0 to address
TMP_484(bool) = to != TMP_483
TMP_485(None) = SOLIDITY_CALL require(bool,string)(TMP_484,ERC777: \
send to the zero address)",
		node_source_code_lines="[493]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	794 -> 795	[key=0,
		edge_type=next,
		label=Next];
	796	[contract_name=SKYBITToken,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensToSend(operator,from,to,amount,userData,operatorData)

IRs:
INTERNAL_CALL, ERC777._\
callTokensToSend(address,address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)",
		node_expression="_callTokensToSend(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)",
		node_source_code_lines="[495]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	795 -> 796	[key=0,
		edge_type=next,
		label=Next];
	797	[contract_name=SKYBITToken,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
_move(operator,from,to,amount,userData,operatorData)

IRs:
INTERNAL_CALL, ERC777._move(address,\
address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)",
		node_expression="_move(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._move(address,address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)",
		node_source_code_lines="[497]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	796 -> 797	[key=0,
		edge_type=next,
		label=Next];
	798	[contract_name=SKYBITToken,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensReceived(operator,from,to,amount,userData,operatorData,requireReceptionAck)

IRs:
\
INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(operator,from,to,amount,userData,operatorData,\
requireReceptionAck)",
		node_expression="_callTokensReceived(operator,from,to,amount,userData,operatorData,requireReceptionAck)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(operator,from,to,amount,userData,operatorData,\
requireReceptionAck)",
		node_source_code_lines="[499]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	797 -> 798	[key=0,
		edge_type=next,
		label=Next];
	799	[contract_name=SKYBITToken,
		function_fullname="_send(address,address,address,uint256,bytes,bytes,bool)",
		label="buggy_30.sol_SKYBITToken__send(address,address,address,uint256,bytes,bytes,bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	799 -> 793	[key=0,
		edge_type=next,
		label=Next];
	800	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[501, 502, 503, 504]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	801	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin10)

IRs:
TMP_489(bool) = tx.origin == owner_txorigin10
\
TMP_490(None) = SOLIDITY_CALL require(bool)(TMP_489)",
		node_expression="require(bool)(tx.origin == owner_txorigin10)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_489(bool) = tx.origin == owner_txorigin10
TMP_490(None) = SOLIDITY_CALL require(bool)(TMP_489)",
		node_source_code_lines="[502]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	800 -> 801	[key=0,
		edge_type=next,
		label=Next];
	802	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_491 = CONVERT this to address
REF_195 -> \
BALANCE TMP_491
Transfer dest:_recipient value:REF_195",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_491 = CONVERT this to address
REF_195 -> BALANCE TMP_491
Transfer dest:_recipient value:REF_195",
		node_source_code_lines="[503]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	801 -> 802	[key=0,
		edge_type=next,
		label=Next];
	803	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin10(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin10(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[501, 502, 503, 504]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	803 -> 800	[key=0,
		edge_type=next,
		label=Next];
	804	[contract_name=SKYBITToken,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	805	[contract_name=SKYBITToken,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(from != address(0),ERC777: burn from the zero address)

IRs:
TMP_493 = CONVERT \
0 to address
TMP_494(bool) = from != TMP_493
TMP_495(None) = SOLIDITY_CALL require(bool,string)(TMP_494,ERC777: burn from the zero \
address)",
		node_expression="require(bool,string)(from != address(0),ERC777: burn from the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_493 = CONVERT 0 to address
TMP_494(bool) = from != TMP_493
TMP_495(None) = SOLIDITY_CALL require(bool,string)(TMP_494,ERC777: \
burn from the zero address)",
		node_source_code_lines="[516]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	804 -> 805	[key=0,
		edge_type=next,
		label=Next];
	806	[contract_name=SKYBITToken,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_callTokensToSend(operator,from,address(0),amount,data,operatorData)

IRs:
TMP_496 = CONVERT \
0 to address
INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(operator,from,TMP_496,amount,data,\
operatorData)",
		node_expression="_callTokensToSend(operator,from,address(0),amount,data,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="TMP_496 = CONVERT 0 to address
INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(operator,from,\
TMP_496,amount,data,operatorData)",
		node_source_code_lines="[518]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	805 -> 806	[key=0,
		edge_type=next,
		label=Next];
	807	[contract_name=SKYBITToken,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_totalSupply = _totalSupply.sub(amount)

IRs:
TMP_498(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(uint256) := TMP_498(uint256)",
		node_expression="_totalSupply = _totalSupply.sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_498(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'amount'] 
_totalSupply(\
uint256) := TMP_498(uint256)",
		node_source_code_lines="[521]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	806 -> 807	[key=0,
		edge_type=next,
		label=Next];
	808	[contract_name=SKYBITToken,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[from] = _balances[from].sub(amount)

IRs:
REF_197(uint256) -> _balances[from]
REF_198(\
uint256) -> _balances[from]
TMP_499(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_198', 'amount'] 
REF_197 (->_balances) := TMP_499(uint256)",
		node_expression="_balances[from] = _balances[from].sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_197(uint256) -> _balances[from]
REF_198(uint256) -> _balances[from]
TMP_499(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_198', 'amount'] 
REF_197 (->_balances) := TMP_499(uint256)",
		node_source_code_lines="[522]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	807 -> 808	[key=0,
		edge_type=next,
		label=Next];
	809	[contract_name=SKYBITToken,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Burned(operator,from,amount,data,operatorData)

IRs:
Emit Burned(operator.from.amount.data.operatorData)",
		node_expression="Burned(operator,from,amount,data,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="Emit Burned(operator.from.amount.data.operatorData)",
		node_source_code_lines="[524]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	808 -> 809	[key=0,
		edge_type=next,
		label=Next];
	810	[contract_name=SKYBITToken,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,address(0),amount)

IRs:
TMP_501 = CONVERT 0 to address
Emit Transfer(from.TMP_\
501.amount)",
		node_expression="Transfer(from,address(0),amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_501 = CONVERT 0 to address
Emit Transfer(from.TMP_501.amount)",
		node_source_code_lines="[525]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	809 -> 810	[key=0,
		edge_type=next,
		label=Next];
	811	[contract_name=SKYBITToken,
		function_fullname="_burn(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_SKYBITToken__burn(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	811 -> 804	[key=0,
		edge_type=next,
		label=Next];
	812	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[527, 528, 529, 530]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	813	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin22)

IRs:
TMP_503(bool) = tx.origin == owner_txorigin22
\
TMP_504(None) = SOLIDITY_CALL require(bool)(TMP_503)",
		node_expression="require(bool)(tx.origin == owner_txorigin22)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_503(bool) = tx.origin == owner_txorigin22
TMP_504(None) = SOLIDITY_CALL require(bool)(TMP_503)",
		node_source_code_lines="[528]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	812 -> 813	[key=0,
		edge_type=next,
		label=Next];
	814	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_505 = CONVERT this to address
REF_201 -> \
BALANCE TMP_505
Transfer dest:_recipient value:REF_201",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_505 = CONVERT this to address
REF_201 -> BALANCE TMP_505
Transfer dest:_recipient value:REF_201",
		node_source_code_lines="[529]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	813 -> 814	[key=0,
		edge_type=next,
		label=Next];
	815	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin22(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin22(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[527, 528, 529, 530]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	815 -> 812	[key=0,
		edge_type=next,
		label=Next];
	816	[contract_name=SKYBITToken,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[541, 542, 543, 544, 545, 546, 547]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	817	[contract_name=SKYBITToken,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[from] = _balances[from].sub(amount)

IRs:
REF_202(uint256) -> _balances[from]
REF_203(\
uint256) -> _balances[from]
TMP_507(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_203', 'amount'] 
REF_202 (->_balances) := TMP_507(uint256)",
		node_expression="_balances[from] = _balances[from].sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_202(uint256) -> _balances[from]
REF_203(uint256) -> _balances[from]
TMP_507(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_203', 'amount'] 
REF_202 (->_balances) := TMP_507(uint256)",
		node_source_code_lines="[542]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	816 -> 817	[key=0,
		edge_type=next,
		label=Next];
	818	[contract_name=SKYBITToken,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_balances[to] = _balances[to].add(amount)

IRs:
REF_205(uint256) -> _balances[to]
REF_206(uint256) \
-> _balances[to]
TMP_508(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_206', '\
amount'] 
REF_205 (->_balances) := TMP_508(uint256)",
		node_expression="_balances[to] = _balances[to].add(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_205(uint256) -> _balances[to]
REF_206(uint256) -> _balances[to]
TMP_508(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_206', 'amount'] 
REF_205 (->_balances) := TMP_508(uint256)",
		node_source_code_lines="[543]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	817 -> 818	[key=0,
		edge_type=next,
		label=Next];
	819	[contract_name=SKYBITToken,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Sent(operator,from,to,amount,userData,operatorData)

IRs:
Emit Sent(operator.from.to.amount.userData.operatorData)",
		node_expression="Sent(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="Emit Sent(operator.from.to.amount.userData.operatorData)",
		node_source_code_lines="[545]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	818 -> 819	[key=0,
		edge_type=next,
		label=Next];
	820	[contract_name=SKYBITToken,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
Transfer(from,to,amount)

IRs:
Emit Transfer(from.to.amount)",
		node_expression="Transfer(from,to,amount)",
		node_info_vulnerabilities=None,
		node_irs="Emit Transfer(from.to.amount)",
		node_source_code_lines="[546]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	819 -> 820	[key=0,
		edge_type=next,
		label=Next];
	821	[contract_name=SKYBITToken,
		function_fullname="_move(address,address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_SKYBITToken__move(address,address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	821 -> 816	[key=0,
		edge_type=next,
		label=Next];
	822	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[548, 549, 550]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	823	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin12(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin12)

IRs:
TMP_511(bool) = tx.origin == owner_txorigin12
\
TMP_512(None) = SOLIDITY_CALL require(bool)(TMP_511)",
		node_expression="require(bool)(tx.origin == owner_txorigin12)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_511(bool) = tx.origin == owner_txorigin12
TMP_512(None) = SOLIDITY_CALL require(bool)(TMP_511)",
		node_source_code_lines="[549]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	822 -> 823	[key=0,
		edge_type=next,
		label=Next];
	824	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin12(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin12(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[548, 549, 550]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	824 -> 822	[key=0,
		edge_type=next,
		label=Next];
	825	[contract_name=SKYBITToken,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[552, 553, 554, 555, 556, 557, 558, 559, 560]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	826	[contract_name=SKYBITToken,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(spender != address(0),ERC777: approve to the zero address)

IRs:
TMP_513 = \
CONVERT 0 to address
TMP_514(bool) = spender != TMP_513
TMP_515(None) = SOLIDITY_CALL require(bool,string)(TMP_514,ERC777: approve \
to the zero address)",
		node_expression="require(bool,string)(spender != address(0),ERC777: approve to the zero address)",
		node_info_vulnerabilities=None,
		node_irs="TMP_513 = CONVERT 0 to address
TMP_514(bool) = spender != TMP_513
TMP_515(None) = SOLIDITY_CALL require(bool,string)(TMP_514,ERC777: \
approve to the zero address)",
		node_source_code_lines="[556]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	825 -> 826	[key=0,
		edge_type=next,
		label=Next];
	827	[contract_name=SKYBITToken,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_allowances[holder][spender] = value

IRs:
REF_208(mapping(address => uint256)) -> _allowances[\
holder]
REF_209(uint256) -> REF_208[spender]
REF_209 (->_allowances) := value(uint256)",
		node_expression="_allowances[holder][spender] = value",
		node_info_vulnerabilities=None,
		node_irs="REF_208(mapping(address => uint256)) -> _allowances[holder]
REF_209(uint256) -> REF_208[spender]
REF_209 (->_allowances) := value(\
uint256)",
		node_source_code_lines="[558]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	826 -> 827	[key=0,
		edge_type=next,
		label=Next];
	828	[contract_name=SKYBITToken,
		function_fullname="_approve(address,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Approval(holder,spender,value)

IRs:
Emit Approval(holder.spender.value)",
		node_expression="Approval(holder,spender,value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Approval(holder.spender.value)",
		node_source_code_lines="[559]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	827 -> 828	[key=0,
		edge_type=next,
		label=Next];
	829	[contract_name=SKYBITToken,
		function_fullname="_approve(address,address,uint256)",
		label="buggy_30.sol_SKYBITToken__approve(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[552, 553, 554, 555, 556, 557, 558, 559, 560]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	829 -> 825	[key=0,
		edge_type=next,
		label=Next];
	830	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[561, 562, 563, 564]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	831	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_517(bool) = tx.origin == owner_txorigin11
\
TMP_518(None) = SOLIDITY_CALL require(bool)(TMP_517)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_517(bool) = tx.origin == owner_txorigin11
TMP_518(None) = SOLIDITY_CALL require(bool)(TMP_517)",
		node_source_code_lines="[562]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	830 -> 831	[key=0,
		edge_type=next,
		label=Next];
	832	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_210(None) -> to.call
REF_211(None) -> REF_210.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_210(None) -> to.call
REF_211(None) -> REF_210.value",
		node_source_code_lines="[563]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	831 -> 832	[key=0,
		edge_type=next,
		label=Next];
	833	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[561, 562, 563, 564]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	833 -> 830	[key=0,
		edge_type=next,
		label=Next];
	834	[contract_name=SKYBITToken,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[576, 577, 578, 579, 580, 581]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	835	[contract_name=SKYBITToken,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
implementer = _erc1820.getInterfaceImplementer(from,TOKENS_SENDER_INTERFACE_HASH)

IRs:
TMP_\
520(address) = HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:getInterfaceImplementer, arguments:['from', 'TOKENS_SENDER_\
INTERFACE_HASH']  
implementer(address) := TMP_520(address)",
		node_expression="implementer = _erc1820.getInterfaceImplementer(from,TOKENS_SENDER_INTERFACE_HASH)",
		node_info_vulnerabilities=None,
		node_irs="TMP_520(address) = HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:getInterfaceImplementer, arguments:['from', 'TOKENS_\
SENDER_INTERFACE_HASH']  
implementer(address) := TMP_520(address)",
		node_source_code_lines="[577]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	834 -> 835	[key=0,
		edge_type=next,
		label=Next];
	836	[contract_name=SKYBITToken,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: IF

EXPRESSION:
implementer != address(0)

IRs:
TMP_521 = CONVERT 0 to address
TMP_522(bool) = implementer != TMP_521
\
CONDITION TMP_522",
		node_expression="implementer != address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_521 = CONVERT 0 to address
TMP_522(bool) = implementer != TMP_521
CONDITION TMP_522",
		node_source_code_lines="[578]",
		node_type=IF,
		source_file="buggy_30.sol"];
	835 -> 836	[key=0,
		edge_type=next,
		label=Next];
	837	[contract_name=SKYBITToken,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData)

IRs:
\
TMP_523 = CONVERT implementer to IERC777Sender
HIGH_LEVEL_CALL, dest:TMP_523(IERC777Sender), function:tokensToSend, arguments:['\
operator', 'from', 'to', 'amount', 'userData', 'operatorData']  ",
		node_expression="IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="TMP_523 = CONVERT implementer to IERC777Sender
HIGH_LEVEL_CALL, dest:TMP_523(IERC777Sender), function:tokensToSend, arguments:['\
operator', 'from', 'to', 'amount', 'userData', 'operatorData']  ",
		node_source_code_lines="[579]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	836 -> 837	[key=0,
		edge_type=if_true,
		label=True];
	838	[contract_name=SKYBITToken,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[578, 579, 580]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	836 -> 838	[key=0,
		edge_type=if_false,
		label=False];
	837 -> 838	[key=0,
		edge_type=next,
		label=Next];
	839	[contract_name=SKYBITToken,
		function_fullname="_callTokensToSend(address,address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_SKYBITToken__callTokensToSend(address,address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	839 -> 834	[key=0,
		edge_type=next,
		label=Next];
	840	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[582, 583, 584, 585]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	841	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_525(bool) = tx.origin == owner_txorigin1
\
TMP_526(None) = SOLIDITY_CALL require(bool)(TMP_525)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_525(bool) = tx.origin == owner_txorigin1
TMP_526(None) = SOLIDITY_CALL require(bool)(TMP_525)",
		node_source_code_lines="[583]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	840 -> 841	[key=0,
		edge_type=next,
		label=Next];
	842	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[584]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	841 -> 842	[key=0,
		edge_type=next,
		label=Next];
	843	[contract_name=SKYBITToken,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[582, 583, 584, 585]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	843 -> 840	[key=0,
		edge_type=next,
		label=Next];
	844	[contract_name=SKYBITToken,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[598, 599, 600, 601, 602, 603, 604, 605]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	845	[contract_name=SKYBITToken,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
implementer = _erc1820.getInterfaceImplementer(to,TOKENS_RECIPIENT_INTERFACE_HASH)

IRs:
TMP_\
528(address) = HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:getInterfaceImplementer, arguments:['to', 'TOKENS_RECIPIENT_\
INTERFACE_HASH']  
implementer(address) := TMP_528(address)",
		node_expression="implementer = _erc1820.getInterfaceImplementer(to,TOKENS_RECIPIENT_INTERFACE_HASH)",
		node_info_vulnerabilities=None,
		node_irs="TMP_528(address) = HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:getInterfaceImplementer, arguments:['to', 'TOKENS_\
RECIPIENT_INTERFACE_HASH']  
implementer(address) := TMP_528(address)",
		node_source_code_lines="[599]",
		node_type="NEW VARIABLE",
		source_file="buggy_30.sol"];
	844 -> 845	[key=0,
		edge_type=next,
		label=Next];
	846	[contract_name=SKYBITToken,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: IF

EXPRESSION:
implementer != address(0)

IRs:
TMP_529 = CONVERT 0 to address
TMP_530(bool) = implementer != TMP_529
\
CONDITION TMP_530",
		node_expression="implementer != address(0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_529 = CONVERT 0 to address
TMP_530(bool) = implementer != TMP_529
CONDITION TMP_530",
		node_source_code_lines="[600]",
		node_type=IF,
		source_file="buggy_30.sol"];
	845 -> 846	[key=0,
		edge_type=next,
		label=Next];
	847	[contract_name=SKYBITToken,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
IERC777Recipient(implementer).tokensReceived(operator,from,to,amount,userData,operatorData)

\
IRs:
TMP_531 = CONVERT implementer to IERC777Recipient
HIGH_LEVEL_CALL, dest:TMP_531(IERC777Recipient), function:tokensReceived, \
arguments:['operator', 'from', 'to', 'amount', 'userData', 'operatorData']  ",
		node_expression="IERC777Recipient(implementer).tokensReceived(operator,from,to,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="TMP_531 = CONVERT implementer to IERC777Recipient
HIGH_LEVEL_CALL, dest:TMP_531(IERC777Recipient), function:tokensReceived, arguments:['\
operator', 'from', 'to', 'amount', 'userData', 'operatorData']  ",
		node_source_code_lines="[601]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	846 -> 847	[key=0,
		edge_type=if_true,
		label=True];
	848	[contract_name=SKYBITToken,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: IF

EXPRESSION:
requireReceptionAck

IRs:
CONDITION requireReceptionAck",
		node_expression=requireReceptionAck,
		node_info_vulnerabilities=None,
		node_irs="CONDITION requireReceptionAck",
		node_source_code_lines="[602]",
		node_type=IF,
		source_file="buggy_30.sol"];
	846 -> 848	[key=0,
		edge_type=if_false,
		label=False];
	851	[contract_name=SKYBITToken,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[600, 601, 602, 603, 604]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	847 -> 851	[key=0,
		edge_type=next,
		label=Next];
	849	[contract_name=SKYBITToken,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! to.isContract(),ERC777: token recipient contract has no implementer for \
ERC777TokensRecipient)

IRs:
TMP_533(bool) = LIBRARY_CALL, dest:Address, function:Address.isContract(address), arguments:['to'] 
\
TMP_534 = ! TMP_533 
TMP_535(None) = SOLIDITY_CALL require(bool,string)(TMP_534,ERC777: token recipient contract has no implementer \
for ERC777TokensRecipient)",
		node_expression="require(bool,string)(! to.isContract(),ERC777: token recipient contract has no implementer for ERC777TokensRecipient)",
		node_info_vulnerabilities=None,
		node_irs="TMP_533(bool) = LIBRARY_CALL, dest:Address, function:Address.isContract(address), arguments:['to'] 
TMP_534 = ! TMP_533 
TMP_535(\
None) = SOLIDITY_CALL require(bool,string)(TMP_534,ERC777: token recipient contract has no implementer for ERC777TokensRecipient)",
		node_source_code_lines="[603]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	848 -> 849	[key=0,
		edge_type=if_true,
		label=True];
	850	[contract_name=SKYBITToken,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[602, 603, 604]",
		node_type=END_IF,
		source_file="buggy_30.sol"];
	848 -> 850	[key=0,
		edge_type=if_false,
		label=False];
	849 -> 850	[key=0,
		edge_type=next,
		label=Next];
	850 -> 851	[key=0,
		edge_type=next,
		label=Next];
	852	[contract_name=SKYBITToken,
		function_fullname="_callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		label="buggy_30.sol_SKYBITToken__callTokensReceived(address,address,address,uint256,bytes,bytes,bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	852 -> 844	[key=0,
		edge_type=next,
		label=Next];
	853	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[606, 607, 608, 609]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	854	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_536(bool) = tx.origin == owner_txorigin2
\
TMP_537(None) = SOLIDITY_CALL require(bool)(TMP_536)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_536(bool) = tx.origin == owner_txorigin2
TMP_537(None) = SOLIDITY_CALL require(bool)(TMP_536)",
		node_source_code_lines="[607]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	853 -> 854	[key=0,
		edge_type=next,
		label=Next];
	855	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_538 = CONVERT this to address
REF_219 -> \
BALANCE TMP_538
Transfer dest:_recipient value:REF_219",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_538 = CONVERT this to address
REF_219 -> BALANCE TMP_538
Transfer dest:_recipient value:REF_219",
		node_source_code_lines="[608]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	854 -> 855	[key=0,
		edge_type=next,
		label=Next];
	856	[contract_name=SKYBITToken,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_30.sol_SKYBITToken_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[606, 607, 608, 609]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	856 -> 853	[key=0,
		edge_type=next,
		label=Next];
	857	[contract_name=SKYBITToken,
		function_fullname="totalSupply()",
		label="buggy_30.sol_SKYBITToken_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[103]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	858	[contract_name=SKYBITToken,
		function_fullname="balanceOf(address)",
		label="buggy_30.sol_SKYBITToken_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[106]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	859	[contract_name=SKYBITToken,
		function_fullname="transfer(address,uint256)",
		label="buggy_30.sol_SKYBITToken_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[109]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	860	[contract_name=SKYBITToken,
		function_fullname="allowance(address,address)",
		label="buggy_30.sol_SKYBITToken_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[112]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	861	[contract_name=SKYBITToken,
		function_fullname="approve(address,uint256)",
		label="buggy_30.sol_SKYBITToken_approve(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[115]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	862	[contract_name=SKYBITToken,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_30.sol_SKYBITToken_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	863	[contract_name=SKYBITToken,
		function_fullname="name()",
		label="buggy_30.sol_SKYBITToken_name()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[10]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	864	[contract_name=SKYBITToken,
		function_fullname="symbol()",
		label="buggy_30.sol_SKYBITToken_symbol()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	865	[contract_name=SKYBITToken,
		function_fullname="granularity()",
		label="buggy_30.sol_SKYBITToken_granularity()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	866	[contract_name=SKYBITToken,
		function_fullname="totalSupply()",
		label="buggy_30.sol_SKYBITToken_totalSupply()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	867	[contract_name=SKYBITToken,
		function_fullname="balanceOf(address)",
		label="buggy_30.sol_SKYBITToken_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	868	[contract_name=SKYBITToken,
		function_fullname="send(address,uint256,bytes)",
		label="buggy_30.sol_SKYBITToken_send(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[25]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	869	[contract_name=SKYBITToken,
		function_fullname="burn(uint256,bytes)",
		label="buggy_30.sol_SKYBITToken_burn(uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	870	[contract_name=SKYBITToken,
		function_fullname="isOperatorFor(address,address)",
		label="buggy_30.sol_SKYBITToken_isOperatorFor(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[31]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	871	[contract_name=SKYBITToken,
		function_fullname="authorizeOperator(address)",
		label="buggy_30.sol_SKYBITToken_authorizeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[34]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	872	[contract_name=SKYBITToken,
		function_fullname="revokeOperator(address)",
		label="buggy_30.sol_SKYBITToken_revokeOperator(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[37]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	873	[contract_name=SKYBITToken,
		function_fullname="defaultOperators()",
		label="buggy_30.sol_SKYBITToken_defaultOperators()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[40]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	874	[contract_name=SKYBITToken,
		function_fullname="operatorSend(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_SKYBITToken_operatorSend(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[43, 44, 45, 46, 47, 48, 49]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	875	[contract_name=SKYBITToken,
		function_fullname="operatorBurn(address,uint256,bytes,bytes)",
		label="buggy_30.sol_SKYBITToken_operatorBurn(address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[52, 53, 54, 55, 56, 57]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	876	[contract_name=SKYBITToken,
		function_fullname="constructor(uint256,address[])",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[850, 851, 852]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	878	[contract_name=SKYBITToken,
		function_fullname="constructor(uint256,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
ERC777(SKYBIT,SKYBIT,defaultOperators)

IRs:
INTERNAL_CALL, ERC777.constructor(string,string,\
address[])(SKYBIT,SKYBIT,defaultOperators)",
		node_expression="ERC777(SKYBIT,SKYBIT,defaultOperators)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777.constructor(string,string,address[])(SKYBIT,SKYBIT,defaultOperators)",
		node_source_code_lines="[849]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	876 -> 878	[key=0,
		edge_type=next,
		label=Next];
	877	[contract_name=SKYBITToken,
		function_fullname="constructor(uint256,address[])",
		label="Node Type: EXPRESSION

EXPRESSION:
_mint(msg.sender,msg.sender,initialSupply,,)

IRs:
INTERNAL_CALL, ERC777._mint(address,address,\
uint256,bytes,bytes)(msg.sender,msg.sender,initialSupply,,)",
		node_expression="_mint(msg.sender,msg.sender,initialSupply,,)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._mint(address,address,uint256,bytes,bytes)(msg.sender,msg.sender,initialSupply,,)",
		node_source_code_lines="[851]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	878 -> 877	[key=0,
		edge_type=next,
		label=Next];
	879	[contract_name=SKYBITToken,
		function_fullname="constructor(uint256,address[])",
		label="buggy_30.sol_SKYBITToken_constructor(uint256,address[])",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[844, 845, 846, 847, 848, 849, 850, 851, 852]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	879 -> 876	[key=0,
		edge_type=next,
		label=Next];
	880	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[853, 854, 855, 856]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	881	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_542(bool) = tx.origin == owner_txorigin39
\
TMP_543(None) = SOLIDITY_CALL require(bool)(TMP_542)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_542(bool) = tx.origin == owner_txorigin39
TMP_543(None) = SOLIDITY_CALL require(bool)(TMP_542)",
		node_source_code_lines="[854]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	880 -> 881	[key=0,
		edge_type=next,
		label=Next];
	882	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_220(None) -> to.call
REF_221(None) -> REF_220.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="REF_220(None) -> to.call
REF_221(None) -> REF_220.value",
		node_source_code_lines="[855]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	881 -> 882	[key=0,
		edge_type=next,
		label=Next];
	883	[contract_name=SKYBITToken,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_30.sol_SKYBITToken_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[853, 854, 855, 856]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	883 -> 880	[key=0,
		edge_type=next,
		label=Next];
	884	[contract_name=SKYBITToken,
		function_fullname="mint(address,address,uint256,bytes,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[858, 859, 860, 861]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	887	[contract_name=SKYBITToken,
		function_fullname="mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyMinter()

IRs:
MODIFIER_CALL, MinterRole.onlyMinter()()",
		node_expression="onlyMinter()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, MinterRole.onlyMinter()()",
		node_source_code_lines="[858]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	884 -> 887	[key=0,
		edge_type=next,
		label=Next];
	885	[contract_name=SKYBITToken,
		function_fullname="mint(address,address,uint256,bytes,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
_mint(operator,account,amount,userData,operatorData)

IRs:
INTERNAL_CALL, ERC777._mint(address,\
address,uint256,bytes,bytes)(operator,account,amount,userData,operatorData)",
		node_expression="_mint(operator,account,amount,userData,operatorData)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, ERC777._mint(address,address,uint256,bytes,bytes)(operator,account,amount,userData,operatorData)",
		node_source_code_lines="[859]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	886	[contract_name=SKYBITToken,
		function_fullname="mint(address,address,uint256,bytes,bytes)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[860]",
		node_type=RETURN,
		source_file="buggy_30.sol"];
	885 -> 886	[key=0,
		edge_type=next,
		label=Next];
	887 -> 885	[key=0,
		edge_type=next,
		label=Next];
	888	[contract_name=SKYBITToken,
		function_fullname="mint(address,address,uint256,bytes,bytes)",
		label="buggy_30.sol_SKYBITToken_mint(address,address,uint256,bytes,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[858, 859, 860, 861]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	888 -> 884	[key=0,
		edge_type=next,
		label=Next];
	889	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[862, 863, 864]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	890	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_547(bool) = tx.origin == owner_txorigin36
\
TMP_548(None) = SOLIDITY_CALL require(bool)(TMP_547)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs="TMP_547(bool) = tx.origin == owner_txorigin36
TMP_548(None) = SOLIDITY_CALL require(bool)(TMP_547)",
		node_source_code_lines="[863]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	889 -> 890	[key=0,
		edge_type=next,
		label=Next];
	891	[contract_name=SKYBITToken,
		function_fullname="bug_txorigin36(address)",
		label="buggy_30.sol_SKYBITToken_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[862, 863, 864]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	891 -> 889	[key=0,
		edge_type=next,
		label=Next];
	892	[contract_name=SKYBITToken,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
_erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24)

IRs:
TMP_549 = \
CONVERT 137743751162352440304869156374792304326613118244 to IERC1820Registry
_erc1820(IERC1820Registry) := TMP_549(IERC1820Registry)",
		node_expression="_erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24)",
		node_info_vulnerabilities=None,
		node_irs="TMP_549 = CONVERT 137743751162352440304869156374792304326613118244 to IERC1820Registry
_erc1820(IERC1820Registry) := TMP_549(IERC1820Registry)",
		node_source_code_lines="[224]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_30.sol"];
	893	[contract_name=SKYBITToken,
		function_fullname="slitherConstructorVariables()",
		label="buggy_30.sol_SKYBITToken_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	893 -> 892	[key=0,
		edge_type=next,
		label=Next];
	894	[contract_name=SKYBITToken,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
TOKENS_SENDER_INTERFACE_HASH = 0x29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895

\
IRs:
TOKENS_SENDER_INTERFACE_HASH(bytes32) := 18936552921575092301472466748482491067159488139731697543124572343800628504725(uint256)",
		node_expression="TOKENS_SENDER_INTERFACE_HASH = 0x29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
		node_info_vulnerabilities=None,
		node_irs="TOKENS_SENDER_INTERFACE_HASH(bytes32) := 18936552921575092301472466748482491067159488139731697543124572343800628504725(uint256)",
		node_source_code_lines="[237, 238]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_30.sol"];
	895	[contract_name=SKYBITToken,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
TOKENS_RECIPIENT_INTERFACE_HASH = 0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b

\
IRs:
TOKENS_RECIPIENT_INTERFACE_HASH(bytes32) := 80741353335606793576644178559265408063696393279619534167571325834855102858555(uint256)",
		node_expression="TOKENS_RECIPIENT_INTERFACE_HASH = 0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
		node_info_vulnerabilities=None,
		node_irs="TOKENS_RECIPIENT_INTERFACE_HASH(bytes32) := 80741353335606793576644178559265408063696393279619534167571325834855102858555(uint256)",
		node_source_code_lines="[241, 242]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_30.sol"];
	894 -> 895	[key=0,
		edge_type=next,
		label=Next];
	896	[contract_name=SKYBITToken,
		function_fullname="slitherConstructorConstantVariables()",
		label="buggy_30.sol_SKYBITToken_slitherConstructorConstantVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [340, 341, 342, 343, 357, 358, 359, 360, 374, 375, 376, 377, 383, 384, 385, 400, 401, 402, 409, 410, 411, 412, 418, 419, \
420, 421, 429, 430, 431, 449, 450, 451, 452, 475, 476, 477, 478, 501, 502, 503, 504, 527, 528, 529, 530, 548, 549, 550, 561, 562, \
563, 564, 582, 583, 584, 585, 606, 607, 608, 609, 639, 640, 641, 642, 644, 645, 646, 654, 655, 656, 657, 667, 668, 669, 670, 675, \
676, 677, 678, 683, 684, 685, 686, 692, 693, 694, 695, 701, 702, 703, 704, 710, 711, 712, 713, 715, 716, 717, 718, 726, 727, 728, \
729, 739, 740, 741, 746, 747, 748, 753, 754, 755, 756, 762, 763, 764, 770, 771, 772, 773, 778, 779, 780, 781, 785, 786, 787, 788, \
797, 798, 799, 800, 806, 807, 808, 809, 828, 829, 830, 831, 838, 839, 840, 853, 854, 855, 856, 862, 863, 864], 'category': 'access_\
control'}]",
		node_irs=None,
		node_source_code_lines="[843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	896 -> 894	[key=0,
		edge_type=next,
		label=Next];
	897	[contract_name=SKYBITToken,
		function_fullname="whenNotPaused()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[812, 813, 814, 815]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	898	[contract_name=SKYBITToken,
		function_fullname="whenNotPaused()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(! _paused,Pausable: paused)

IRs:
TMP_550 = ! _paused 
TMP_551(None) = SOLIDITY_\
CALL require(bool,string)(TMP_550,Pausable: paused)",
		node_expression="require(bool,string)(! _paused,Pausable: paused)",
		node_info_vulnerabilities=None,
		node_irs="TMP_550 = ! _paused 
TMP_551(None) = SOLIDITY_CALL require(bool,string)(TMP_550,Pausable: paused)",
		node_source_code_lines="[813]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	897 -> 898	[key=0,
		edge_type=next,
		label=Next];
	899	[contract_name=SKYBITToken,
		function_fullname="whenNotPaused()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[814]",
		node_type=_,
		source_file="buggy_30.sol"];
	898 -> 899	[key=0,
		edge_type=next,
		label=Next];
	900	[contract_name=SKYBITToken,
		function_fullname="whenNotPaused()",
		label="buggy_30.sol_SKYBITToken_whenNotPaused()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[812, 813, 814, 815]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	900 -> 897	[key=0,
		edge_type=next,
		label=Next];
	901	[contract_name=SKYBITToken,
		function_fullname="whenPaused()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[818, 819, 820, 821]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	902	[contract_name=SKYBITToken,
		function_fullname="whenPaused()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(_paused,Pausable: not paused)

IRs:
TMP_552(None) = SOLIDITY_CALL require(\
bool,string)(_paused,Pausable: not paused)",
		node_expression="require(bool,string)(_paused,Pausable: not paused)",
		node_info_vulnerabilities=None,
		node_irs="TMP_552(None) = SOLIDITY_CALL require(bool,string)(_paused,Pausable: not paused)",
		node_source_code_lines="[819]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	901 -> 902	[key=0,
		edge_type=next,
		label=Next];
	903	[contract_name=SKYBITToken,
		function_fullname="whenPaused()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[820]",
		node_type=_,
		source_file="buggy_30.sol"];
	902 -> 903	[key=0,
		edge_type=next,
		label=Next];
	904	[contract_name=SKYBITToken,
		function_fullname="whenPaused()",
		label="buggy_30.sol_SKYBITToken_whenPaused()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[818, 819, 820, 821]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	904 -> 901	[key=0,
		edge_type=next,
		label=Next];
	905	[contract_name=SKYBITToken,
		function_fullname="onlyPauser()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[731, 732, 733, 734]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	906	[contract_name=SKYBITToken,
		function_fullname="onlyPauser()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isPauser(msg.sender),PauserRole: caller does not have the Pauser role)

\
IRs:
TMP_553(bool) = INTERNAL_CALL, PauserRole.isPauser(address)(msg.sender)
TMP_554(None) = SOLIDITY_CALL require(bool,string)(\
TMP_553,PauserRole: caller does not have the Pauser role)",
		node_expression="require(bool,string)(isPauser(msg.sender),PauserRole: caller does not have the Pauser role)",
		node_info_vulnerabilities=None,
		node_irs="TMP_553(bool) = INTERNAL_CALL, PauserRole.isPauser(address)(msg.sender)
TMP_554(None) = SOLIDITY_CALL require(bool,string)(TMP_553,\
PauserRole: caller does not have the Pauser role)",
		node_source_code_lines="[732]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	905 -> 906	[key=0,
		edge_type=next,
		label=Next];
	907	[contract_name=SKYBITToken,
		function_fullname="onlyPauser()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[733]",
		node_type=_,
		source_file="buggy_30.sol"];
	906 -> 907	[key=0,
		edge_type=next,
		label=Next];
	908	[contract_name=SKYBITToken,
		function_fullname="onlyPauser()",
		label="buggy_30.sol_SKYBITToken_onlyPauser()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[731, 732, 733, 734]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	908 -> 905	[key=0,
		edge_type=next,
		label=Next];
	909	[contract_name=SKYBITToken,
		function_fullname="onlyMinter()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[659, 660, 661, 662]",
		node_type=ENTRY_POINT,
		source_file="buggy_30.sol"];
	910	[contract_name=SKYBITToken,
		function_fullname="onlyMinter()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool,string)(isMinter(msg.sender),MinterRole: caller does not have the Minter role)

\
IRs:
TMP_555(bool) = INTERNAL_CALL, MinterRole.isMinter(address)(msg.sender)
TMP_556(None) = SOLIDITY_CALL require(bool,string)(\
TMP_555,MinterRole: caller does not have the Minter role)",
		node_expression="require(bool,string)(isMinter(msg.sender),MinterRole: caller does not have the Minter role)",
		node_info_vulnerabilities=None,
		node_irs="TMP_555(bool) = INTERNAL_CALL, MinterRole.isMinter(address)(msg.sender)
TMP_556(None) = SOLIDITY_CALL require(bool,string)(TMP_555,\
MinterRole: caller does not have the Minter role)",
		node_source_code_lines="[660]",
		node_type=EXPRESSION,
		source_file="buggy_30.sol"];
	909 -> 910	[key=0,
		edge_type=next,
		label=Next];
	911	[contract_name=SKYBITToken,
		function_fullname="onlyMinter()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[661]",
		node_type=_,
		source_file="buggy_30.sol"];
	910 -> 911	[key=0,
		edge_type=next,
		label=Next];
	912	[contract_name=SKYBITToken,
		function_fullname="onlyMinter()",
		label="buggy_30.sol_SKYBITToken_onlyMinter()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[659, 660, 661, 662]",
		node_type=FUNCTION_NAME,
		source_file="buggy_30.sol"];
	912 -> 909	[key=0,
		edge_type=next,
		label=Next];
}
