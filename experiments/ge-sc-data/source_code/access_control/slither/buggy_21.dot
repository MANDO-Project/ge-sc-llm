digraph "" {
	node [label="\N"];
	0	[contract_name=Token,
		function_fullname="transfer(address,uint256)",
		label="buggy_21.sol_Token_transfer(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[4]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	1	[contract_name=Token,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[5, 6, 7]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	2	[contract_name=Token,
		function_fullname="bug_txorigin20(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin20)

IRs:
TMP_0(bool) = tx.origin == owner_txorigin20
\
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_expression="require(bool)(tx.origin == owner_txorigin20)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_0(bool) = tx.origin == owner_txorigin20
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[6]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=Token,
		function_fullname="bug_txorigin20(address)",
		label="buggy_21.sol_Token_bug_txorigin20(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[5, 6, 7]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	3 -> 1	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=Token,
		function_fullname="transferFrom(address,address,uint256)",
		label="buggy_21.sol_Token_transferFrom(address,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[8]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	5	[contract_name=Token,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[9, 10, 11]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	6	[contract_name=Token,
		function_fullname="bug_txorigin32(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin32)

IRs:
TMP_2(bool) = tx.origin == owner_txorigin32
\
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)",
		node_expression="require(bool)(tx.origin == owner_txorigin32)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_2(bool) = tx.origin == owner_txorigin32
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)",
		node_source_code_lines="[10]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=Token,
		function_fullname="bug_txorigin32(address)",
		label="buggy_21.sol_Token_bug_txorigin32(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[9, 10, 11]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	7 -> 5	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=Token,
		function_fullname="balanceOf(address)",
		label="buggy_21.sol_Token_balanceOf(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[12]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	9	[contract_name=Token,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	10	[contract_name=Token,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin38)

IRs:
TMP_4(bool) = tx.origin == owner_txorigin38
\
TMP_5(None) = SOLIDITY_CALL require(bool)(TMP_4)",
		node_expression="require(bool)(tx.origin == owner_txorigin38)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_4(bool) = tx.origin == owner_txorigin38
TMP_5(None) = SOLIDITY_CALL require(bool)(TMP_4)",
		node_source_code_lines="[14]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	9 -> 10	[key=0,
		edge_type=next,
		label=Next];
	11	[contract_name=Token,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_6 = CONVERT this to address
REF_1 -> BALANCE \
TMP_6
Transfer dest:_recipient value:REF_1",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_6 = CONVERT this to address
REF_1 -> BALANCE TMP_6
Transfer dest:_recipient value:REF_1",
		node_source_code_lines="[15]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	10 -> 11	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=Token,
		function_fullname="withdrawAll_txorigin38(address,address)",
		label="buggy_21.sol_Token_withdrawAll_txorigin38(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	12 -> 9	[key=0,
		edge_type=next,
		label=Next];
	13	[contract_name=Token,
		function_fullname="allowance(address,address)",
		label="buggy_21.sol_Token_allowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	14	[contract_name=Token,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[18, 19, 20]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	15	[contract_name=Token,
		function_fullname="bug_txorigin4(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin4)

IRs:
TMP_8(bool) = tx.origin == owner_txorigin4
\
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)",
		node_expression="require(bool)(tx.origin == owner_txorigin4)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_8(bool) = tx.origin == owner_txorigin4
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)",
		node_source_code_lines="[19]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	14 -> 15	[key=0,
		edge_type=next,
		label=Next];
	16	[contract_name=Token,
		function_fullname="bug_txorigin4(address)",
		label="buggy_21.sol_Token_bug_txorigin4(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[18, 19, 20]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	16 -> 14	[key=0,
		edge_type=next,
		label=Next];
	17	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[25, 26, 27, 28, 29, 30, 31]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	18	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
a == 0

IRs:
TMP_10(bool) = a == 0
CONDITION TMP_10",
		node_expression="a == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_10(bool) = a == 0
CONDITION TMP_10",
		node_source_code_lines="[26]",
		node_type=IF,
		source_file="buggy_21.sol"];
	17 -> 18	[key=0,
		edge_type=next,
		label=Next];
	19	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
0

IRs:
RETURN 0",
		node_expression=0,
		node_info_vulnerabilities=None,
		node_irs="RETURN 0",
		node_source_code_lines="[27]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	18 -> 19	[key=0,
		edge_type=if_true,
		label=True];
	20	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[26, 27]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	18 -> 20	[key=0,
		edge_type=if_false,
		label=False];
	21	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a * b

IRs:
TMP_11(uint256) = a * b
c(uint256) := TMP_11(uint256)",
		node_expression="c = a * b",
		node_info_vulnerabilities=None,
		node_irs="TMP_11(uint256) = a * b
c(uint256) := TMP_11(uint256)",
		node_source_code_lines="[28]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	20 -> 21	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(c / a == b)

IRs:
TMP_12(uint256) = c / a
TMP_13(bool) = TMP_12 == b
TMP_14(None) = \
SOLIDITY_CALL assert(bool)(TMP_13)",
		node_expression="assert(bool)(c / a == b)",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(uint256) = c / a
TMP_13(bool) = TMP_12 == b
TMP_14(None) = SOLIDITY_CALL assert(bool)(TMP_13)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	21 -> 22	[key=0,
		edge_type=next,
		label=Next];
	23	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[30]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	22 -> 23	[key=0,
		edge_type=next,
		label=Next];
	24	[contract_name=SafeMath,
		function_fullname="mul(uint256,uint256)",
		label="buggy_21.sol_SafeMath_mul(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24, 25, 26, 27, 28, 29, 30, 31]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	24 -> 17	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[34, 35, 36, 37]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	26	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a / b

IRs:
TMP_15(uint256) = a / b
c(uint256) := TMP_15(uint256)",
		node_expression="c = a / b",
		node_info_vulnerabilities=None,
		node_irs="TMP_15(uint256) = a / b
c(uint256) := TMP_15(uint256)",
		node_source_code_lines="[35]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	25 -> 26	[key=0,
		edge_type=next,
		label=Next];
	27	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[36]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	26 -> 27	[key=0,
		edge_type=next,
		label=Next];
	28	[contract_name=SafeMath,
		function_fullname="div(uint256,uint256)",
		label="buggy_21.sol_SafeMath_div(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[33, 34, 35, 36, 37]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	28 -> 25	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[40, 41, 42, 43]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	30	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(b <= a)

IRs:
TMP_16(bool) = b <= a
TMP_17(None) = SOLIDITY_CALL assert(bool)(TMP_\
16)",
		node_expression="assert(bool)(b <= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_16(bool) = b <= a
TMP_17(None) = SOLIDITY_CALL assert(bool)(TMP_16)",
		node_source_code_lines="[41]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	29 -> 30	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
a - b

IRs:
TMP_18(uint256) = a - b
RETURN TMP_18",
		node_expression="a - b",
		node_info_vulnerabilities=None,
		node_irs="TMP_18(uint256) = a - b
RETURN TMP_18",
		node_source_code_lines="[42]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	30 -> 31	[key=0,
		edge_type=next,
		label=Next];
	32	[contract_name=SafeMath,
		function_fullname="sub(uint256,uint256)",
		label="buggy_21.sol_SafeMath_sub(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[39, 40, 41, 42, 43]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	32 -> 29	[key=0,
		edge_type=next,
		label=Next];
	33	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49, 50]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	34	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
c = a + b

IRs:
TMP_19(uint256) = a + b
c(uint256) := TMP_19(uint256)",
		node_expression="c = a + b",
		node_info_vulnerabilities=None,
		node_irs="TMP_19(uint256) = a + b
c(uint256) := TMP_19(uint256)",
		node_source_code_lines="[47]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	33 -> 34	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(c >= a)

IRs:
TMP_20(bool) = c >= a
TMP_21(None) = SOLIDITY_CALL assert(bool)(TMP_\
20)",
		node_expression="assert(bool)(c >= a)",
		node_info_vulnerabilities=None,
		node_irs="TMP_20(bool) = c >= a
TMP_21(None) = SOLIDITY_CALL assert(bool)(TMP_20)",
		node_source_code_lines="[48]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	34 -> 35	[key=0,
		edge_type=next,
		label=Next];
	36	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="Node Type: RETURN

EXPRESSION:
c

IRs:
RETURN c",
		node_expression=c,
		node_info_vulnerabilities=None,
		node_irs="RETURN c",
		node_source_code_lines="[49]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	35 -> 36	[key=0,
		edge_type=next,
		label=Next];
	37	[contract_name=SafeMath,
		function_fullname="add(uint256,uint256)",
		label="buggy_21.sol_SafeMath_add(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[45, 46, 47, 48, 49, 50]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	37 -> 33	[key=0,
		edge_type=next,
		label=Next];
	38	[contract_name=StableDEX,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[57, 58, 59, 60]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	39	[contract_name=StableDEX,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin13)

IRs:
TMP_22(bool) = tx.origin == owner_txorigin13
\
TMP_23(None) = SOLIDITY_CALL require(bool)(TMP_22)",
		node_expression="require(bool)(tx.origin == owner_txorigin13)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_22(bool) = tx.origin == owner_txorigin13
TMP_23(None) = SOLIDITY_CALL require(bool)(TMP_22)",
		node_source_code_lines="[58]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	38 -> 39	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=StableDEX,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[59]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	39 -> 40	[key=0,
		edge_type=next,
		label=Next];
	41	[contract_name=StableDEX,
		function_fullname="sendto_txorigin13(address,uint256,address)",
		label="buggy_21.sol_StableDEX_sendto_txorigin13(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[57, 58, 59, 60]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	41 -> 38	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[63, 64, 65, 66]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	43	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin11)

IRs:
TMP_25(bool) = tx.origin == owner_txorigin11
\
TMP_26(None) = SOLIDITY_CALL require(bool)(TMP_25)",
		node_expression="require(bool)(tx.origin == owner_txorigin11)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_25(bool) = tx.origin == owner_txorigin11
TMP_26(None) = SOLIDITY_CALL require(bool)(TMP_25)",
		node_source_code_lines="[64]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	42 -> 43	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_3(None) -> to.call
REF_4(None) -> REF_3.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="REF_3(None) -> to.call
REF_4(None) -> REF_3.value",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	43 -> 44	[key=0,
		edge_type=next,
		label=Next];
	45	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin11(address,uint256,address)",
		label="buggy_21.sol_StableDEX_transferTo_txorigin11(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[63, 64, 65, 66]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	45 -> 42	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=StableDEX,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	47	[contract_name=StableDEX,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin1)

IRs:
TMP_28(bool) = tx.origin == owner_txorigin1
\
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_expression="require(bool)(tx.origin == owner_txorigin1)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_28(bool) = tx.origin == owner_txorigin1
TMP_29(None) = SOLIDITY_CALL require(bool)(TMP_28)",
		node_source_code_lines="[70]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	46 -> 47	[key=0,
		edge_type=next,
		label=Next];
	48	[contract_name=StableDEX,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[71]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	47 -> 48	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=StableDEX,
		function_fullname="sendto_txorigin1(address,uint256,address)",
		label="buggy_21.sol_StableDEX_sendto_txorigin1(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[69, 70, 71, 72]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	49 -> 46	[key=0,
		edge_type=next,
		label=Next];
	50	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	51	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin2)

IRs:
TMP_31(bool) = tx.origin == owner_txorigin2
\
TMP_32(None) = SOLIDITY_CALL require(bool)(TMP_31)",
		node_expression="require(bool)(tx.origin == owner_txorigin2)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_31(bool) = tx.origin == owner_txorigin2
TMP_32(None) = SOLIDITY_CALL require(bool)(TMP_31)",
		node_source_code_lines="[76]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	50 -> 51	[key=0,
		edge_type=next,
		label=Next];
	52	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_33 = CONVERT this to address
REF_7 -> BALANCE \
TMP_33
Transfer dest:_recipient value:REF_7",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_33 = CONVERT this to address
REF_7 -> BALANCE TMP_33
Transfer dest:_recipient value:REF_7",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	51 -> 52	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin2(address,address)",
		label="buggy_21.sol_StableDEX_withdrawAll_txorigin2(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[75, 76, 77, 78]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	53 -> 50	[key=0,
		edge_type=next,
		label=Next];
	54	[contract_name=StableDEX,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	55	[contract_name=StableDEX,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin17)

IRs:
TMP_35(bool) = tx.origin == owner_txorigin17
\
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_expression="require(bool)(tx.origin == owner_txorigin17)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_35(bool) = tx.origin == owner_txorigin17
TMP_36(None) = SOLIDITY_CALL require(bool)(TMP_35)",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	54 -> 55	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=StableDEX,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[83]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	55 -> 56	[key=0,
		edge_type=next,
		label=Next];
	57	[contract_name=StableDEX,
		function_fullname="sendto_txorigin17(address,uint256,address)",
		label="buggy_21.sol_StableDEX_sendto_txorigin17(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[81, 82, 83, 84]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	57 -> 54	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=StableDEX,
		function_fullname="constructor(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[109, 110, 111, 112, 113]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	59	[contract_name=StableDEX,
		function_fullname="constructor(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
admin = _admin

IRs:
admin(address) := _admin(address)",
		node_expression="admin = _admin",
		node_info_vulnerabilities=None,
		node_irs="admin(address) := _admin(address)",
		node_source_code_lines="[110]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	58 -> 59	[key=0,
		edge_type=next,
		label=Next];
	60	[contract_name=StableDEX,
		function_fullname="constructor(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
feeAddress = feeAddress_

IRs:
feeAddress(address) := feeAddress_(address)",
		node_expression="feeAddress = feeAddress_",
		node_info_vulnerabilities=None,
		node_irs="feeAddress(address) := feeAddress_(address)",
		node_source_code_lines="[111]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	59 -> 60	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=StableDEX,
		function_fullname="constructor(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
dexStatus = true

IRs:
dexStatus(bool) := True(bool)",
		node_expression="dexStatus = true",
		node_info_vulnerabilities=None,
		node_irs="dexStatus(bool) := True(bool)",
		node_source_code_lines="[112]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	60 -> 61	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=StableDEX,
		function_fullname="constructor(address,address)",
		label="buggy_21.sol_StableDEX_constructor(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[109, 110, 111, 112, 113]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	62 -> 58	[key=0,
		edge_type=next,
		label=Next];
	63	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[114, 115, 116, 117]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	64	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin7)

IRs:
TMP_38(bool) = tx.origin == owner_txorigin7
\
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_expression="require(bool)(tx.origin == owner_txorigin7)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_38(bool) = tx.origin == owner_txorigin7
TMP_39(None) = SOLIDITY_CALL require(bool)(TMP_38)",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	63 -> 64	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="REF_9(None) -> to.call
REF_10(None) -> REF_9.value",
		node_source_code_lines="[116]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	64 -> 65	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin7(address,uint256,address)",
		label="buggy_21.sol_StableDEX_transferTo_txorigin7(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[114, 115, 116, 117]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	66 -> 63	[key=0,
		edge_type=next,
		label=Next];
	67	[contract_name=StableDEX,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	68	[contract_name=StableDEX,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin37)

IRs:
TMP_41(bool) = tx.origin == owner_txorigin37
\
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_expression="require(bool)(tx.origin == owner_txorigin37)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_41(bool) = tx.origin == owner_txorigin37
TMP_42(None) = SOLIDITY_CALL require(bool)(TMP_41)",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	67 -> 68	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=StableDEX,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	68 -> 69	[key=0,
		edge_type=next,
		label=Next];
	70	[contract_name=StableDEX,
		function_fullname="sendto_txorigin37(address,uint256,address)",
		label="buggy_21.sol_StableDEX_sendto_txorigin37(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[120, 121, 122, 123]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	70 -> 67	[key=0,
		edge_type=next,
		label=Next];
	71	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	72	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin3)

IRs:
TMP_44(bool) = tx.origin == owner_txorigin3
\
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_expression="require(bool)(tx.origin == owner_txorigin3)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_44(bool) = tx.origin == owner_txorigin3
TMP_45(None) = SOLIDITY_CALL require(bool)(TMP_44)",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	71 -> 72	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_12(None) -> to.call
REF_13(None) -> REF_12.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="REF_12(None) -> to.call
REF_13(None) -> REF_12.value",
		node_source_code_lines="[128]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	72 -> 73	[key=0,
		edge_type=next,
		label=Next];
	74	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin3(address,uint256,address)",
		label="buggy_21.sol_StableDEX_transferTo_txorigin3(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	74 -> 71	[key=0,
		edge_type=next,
		label=Next];
	75	[contract_name=StableDEX,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	76	[contract_name=StableDEX,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin9)

IRs:
TMP_47(bool) = tx.origin == owner_txorigin9
\
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_expression="require(bool)(tx.origin == owner_txorigin9)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_47(bool) = tx.origin == owner_txorigin9
TMP_48(None) = SOLIDITY_CALL require(bool)(TMP_47)",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	75 -> 76	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=StableDEX,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	76 -> 77	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=StableDEX,
		function_fullname="sendto_txorigin9(address,uint256,address)",
		label="buggy_21.sol_StableDEX_sendto_txorigin9(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	78 -> 75	[key=0,
		edge_type=next,
		label=Next];
	79	[contract_name=StableDEX,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[138, 139, 140, 141]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	80	[contract_name=StableDEX,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin25)

IRs:
TMP_50(bool) = tx.origin == owner_txorigin25
\
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_expression="require(bool)(tx.origin == owner_txorigin25)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_50(bool) = tx.origin == owner_txorigin25
TMP_51(None) = SOLIDITY_CALL require(bool)(TMP_50)",
		node_source_code_lines="[139]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	79 -> 80	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=StableDEX,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[140]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	80 -> 81	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=StableDEX,
		function_fullname="sendto_txorigin25(address,uint256,address)",
		label="buggy_21.sol_StableDEX_sendto_txorigin25(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[138, 139, 140, 141]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	82 -> 79	[key=0,
		edge_type=next,
		label=Next];
	83	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	84	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin19)

IRs:
TMP_53(bool) = tx.origin == owner_txorigin19
\
TMP_54(None) = SOLIDITY_CALL require(bool)(TMP_53)",
		node_expression="require(bool)(tx.origin == owner_txorigin19)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_53(bool) = tx.origin == owner_txorigin19
TMP_54(None) = SOLIDITY_CALL require(bool)(TMP_53)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	83 -> 84	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_16(None) -> to.call
REF_17(None) -> REF_16.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="REF_16(None) -> to.call
REF_17(None) -> REF_16.value",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	84 -> 85	[key=0,
		edge_type=next,
		label=Next];
	86	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin19(address,uint256,address)",
		label="buggy_21.sol_StableDEX_transferTo_txorigin19(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[144, 145, 146, 147]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	86 -> 83	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[150, 151, 152, 153]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	88	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin26)

IRs:
TMP_56(bool) = tx.origin == owner_txorigin26
\
TMP_57(None) = SOLIDITY_CALL require(bool)(TMP_56)",
		node_expression="require(bool)(tx.origin == owner_txorigin26)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_56(bool) = tx.origin == owner_txorigin26
TMP_57(None) = SOLIDITY_CALL require(bool)(TMP_56)",
		node_source_code_lines="[151]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	87 -> 88	[key=0,
		edge_type=next,
		label=Next];
	89	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_58 = CONVERT this to address
REF_19 -> BALANCE \
TMP_58
Transfer dest:_recipient value:REF_19",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_58 = CONVERT this to address
REF_19 -> BALANCE TMP_58
Transfer dest:_recipient value:REF_19",
		node_source_code_lines="[152]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	88 -> 89	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin26(address,address)",
		label="buggy_21.sol_StableDEX_withdrawAll_txorigin26(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[150, 151, 152, 153]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	90 -> 87	[key=0,
		edge_type=next,
		label=Next];
	91	[contract_name=StableDEX,
		function_fullname="setDexStatus(bool)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161, 162, 163, 164, 165]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	92	[contract_name=StableDEX,
		function_fullname="setDexStatus(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == admin)

IRs:
TMP_60(bool) = msg.sender == admin
TMP_61(None) = SOLIDITY_\
CALL require(bool)(TMP_60)",
		node_expression="require(bool)(msg.sender == admin)",
		node_info_vulnerabilities=None,
		node_irs="TMP_60(bool) = msg.sender == admin
TMP_61(None) = SOLIDITY_CALL require(bool)(TMP_60)",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	91 -> 92	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=StableDEX,
		function_fullname="setDexStatus(bool)",
		label="Node Type: EXPRESSION

EXPRESSION:
dexStatus = status_

IRs:
dexStatus(bool) := status_(bool)",
		node_expression="dexStatus = status_",
		node_info_vulnerabilities=None,
		node_irs="dexStatus(bool) := status_(bool)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	92 -> 93	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=StableDEX,
		function_fullname="setDexStatus(bool)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[164]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	93 -> 94	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=StableDEX,
		function_fullname="setDexStatus(bool)",
		label="buggy_21.sol_StableDEX_setDexStatus(bool)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[161, 162, 163, 164, 165]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	95 -> 91	[key=0,
		edge_type=next,
		label=Next];
	96	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[166, 167, 168, 169]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	97	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin23)

IRs:
TMP_62(bool) = tx.origin == owner_txorigin23
\
TMP_63(None) = SOLIDITY_CALL require(bool)(TMP_62)",
		node_expression="require(bool)(tx.origin == owner_txorigin23)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_62(bool) = tx.origin == owner_txorigin23
TMP_63(None) = SOLIDITY_CALL require(bool)(TMP_62)",
		node_source_code_lines="[167]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	96 -> 97	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_20(None) -> to.call
REF_21(None) -> REF_20.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="REF_20(None) -> to.call
REF_21(None) -> REF_20.value",
		node_source_code_lines="[168]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	97 -> 98	[key=0,
		edge_type=next,
		label=Next];
	99	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin23(address,uint256,address)",
		label="buggy_21.sol_StableDEX_transferTo_txorigin23(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[166, 167, 168, 169]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	99 -> 96	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=StableDEX,
		function_fullname="addToken(address,string,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174, 175, 176, 177]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	101	[contract_name=StableDEX,
		function_fullname="addToken(address,string,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == feeAddress && tokendetails[tokenAddress].status == false)

IRs:
TMP_\
65(bool) = msg.sender == feeAddress
REF_22(StableDEX.tokens) -> tokendetails[tokenAddress]
REF_23(bool) -> REF_22.status
TMP_66(\
bool) = REF_23 == False
TMP_67(bool) = TMP_65 && TMP_66
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_expression="require(bool)(msg.sender == feeAddress && tokendetails[tokenAddress].status == false)",
		node_info_vulnerabilities=None,
		node_irs="TMP_65(bool) = msg.sender == feeAddress
REF_22(StableDEX.tokens) -> tokendetails[tokenAddress]
REF_23(bool) -> REF_22.status
TMP_\
66(bool) = REF_23 == False
TMP_67(bool) = TMP_65 && TMP_66
TMP_68(None) = SOLIDITY_CALL require(bool)(TMP_67)",
		node_source_code_lines="[172]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	100 -> 101	[key=0,
		edge_type=next,
		label=Next];
	102	[contract_name=StableDEX,
		function_fullname="addToken(address,string,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
tokendetails[tokenAddress].tokenSymbol = tokenSymbol

IRs:
REF_24(StableDEX.tokens) -> tokendetails[\
tokenAddress]
REF_25(string) -> REF_24.tokenSymbol
REF_25 (->tokendetails) := tokenSymbol(string)",
		node_expression="tokendetails[tokenAddress].tokenSymbol = tokenSymbol",
		node_info_vulnerabilities=None,
		node_irs="REF_24(StableDEX.tokens) -> tokendetails[tokenAddress]
REF_25(string) -> REF_24.tokenSymbol
REF_25 (->tokendetails) := tokenSymbol(\
string)",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	101 -> 102	[key=0,
		edge_type=next,
		label=Next];
	103	[contract_name=StableDEX,
		function_fullname="addToken(address,string,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
tokendetails[tokenAddress].decimals = decimal_

IRs:
REF_26(StableDEX.tokens) -> tokendetails[\
tokenAddress]
REF_27(uint256) -> REF_26.decimals
REF_27 (->tokendetails) := decimal_(uint256)",
		node_expression="tokendetails[tokenAddress].decimals = decimal_",
		node_info_vulnerabilities=None,
		node_irs="REF_26(StableDEX.tokens) -> tokendetails[tokenAddress]
REF_27(uint256) -> REF_26.decimals
REF_27 (->tokendetails) := decimal_(uint256)",
		node_source_code_lines="[174]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	102 -> 103	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=StableDEX,
		function_fullname="addToken(address,string,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
tokendetails[tokenAddress].status = true

IRs:
REF_28(StableDEX.tokens) -> tokendetails[tokenAddress]
\
REF_29(bool) -> REF_28.status
REF_29 (->tokendetails) := True(bool)",
		node_expression="tokendetails[tokenAddress].status = true",
		node_info_vulnerabilities=None,
		node_irs="REF_28(StableDEX.tokens) -> tokendetails[tokenAddress]
REF_29(bool) -> REF_28.status
REF_29 (->tokendetails) := True(bool)",
		node_source_code_lines="[175]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	103 -> 104	[key=0,
		edge_type=next,
		label=Next];
	105	[contract_name=StableDEX,
		function_fullname="addToken(address,string,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[176]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	104 -> 105	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=StableDEX,
		function_fullname="addToken(address,string,uint256)",
		label="buggy_21.sol_StableDEX_addToken(address,string,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[171, 172, 173, 174, 175, 176, 177]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	106 -> 100	[key=0,
		edge_type=next,
		label=Next];
	107	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	108	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin14)

IRs:
TMP_69(bool) = tx.origin == owner_txorigin14
\
TMP_70(None) = SOLIDITY_CALL require(bool)(TMP_69)",
		node_expression="require(bool)(tx.origin == owner_txorigin14)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_69(bool) = tx.origin == owner_txorigin14
TMP_70(None) = SOLIDITY_CALL require(bool)(TMP_69)",
		node_source_code_lines="[179]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	107 -> 108	[key=0,
		edge_type=next,
		label=Next];
	109	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_71 = CONVERT this to address
REF_31 -> BALANCE \
TMP_71
Transfer dest:_recipient value:REF_31",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_71 = CONVERT this to address
REF_31 -> BALANCE TMP_71
Transfer dest:_recipient value:REF_31",
		node_source_code_lines="[180]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	108 -> 109	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin14(address,address)",
		label="buggy_21.sol_StableDEX_withdrawAll_txorigin14(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	110 -> 107	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=StableDEX,
		function_fullname="deposit()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[183, 184, 185, 186, 187, 188]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	116	[contract_name=StableDEX,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
dexstatuscheck()

IRs:
MODIFIER_CALL, StableDEX.dexstatuscheck()()",
		node_expression="dexstatuscheck()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, StableDEX.dexstatuscheck()()",
		node_source_code_lines="[183]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	111 -> 116	[key=0,
		edge_type=next,
		label=Next];
	112	[contract_name=StableDEX,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.value > 0)

IRs:
TMP_73(bool) = msg.value > 0
TMP_74(None) = SOLIDITY_CALL \
require(bool)(TMP_73)",
		node_expression="require(bool)(msg.value > 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_73(bool) = msg.value > 0
TMP_74(None) = SOLIDITY_CALL require(bool)(TMP_73)",
		node_source_code_lines="[184]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	113	[contract_name=StableDEX,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[msg.sender][address(0)] = userDetails[msg.sender][address(0)].add(msg.value)

IRs:
\
REF_32(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_75 = CONVERT 0 to address
REF_33(uint256) -> REF_32[TMP_75]
REF_\
34(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_76 = CONVERT 0 to address
REF_35(uint256) -> REF_34[TMP_76]
TMP_77(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_35', 'msg.value'] 
REF_33 (->userDetails) := \
TMP_77(uint256)",
		node_expression="userDetails[msg.sender][address(0)] = userDetails[msg.sender][address(0)].add(msg.value)",
		node_info_vulnerabilities=None,
		node_irs="REF_32(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_75 = CONVERT 0 to address
REF_33(uint256) -> REF_32[TMP_75]
REF_\
34(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_76 = CONVERT 0 to address
REF_35(uint256) -> REF_34[TMP_76]
TMP_77(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_35', 'msg.value'] 
REF_33 (->userDetails) := \
TMP_77(uint256)",
		node_source_code_lines="[185]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	112 -> 113	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=StableDEX,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
DepositandWithdraw(msg.sender,address(0),msg.value,0)

IRs:
TMP_78 = CONVERT 0 to address
Emit \
DepositandWithdraw(msg.sender.TMP_78.msg.value.0)",
		node_expression="DepositandWithdraw(msg.sender,address(0),msg.value,0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_78 = CONVERT 0 to address
Emit DepositandWithdraw(msg.sender.TMP_78.msg.value.0)",
		node_source_code_lines="[186]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	113 -> 114	[key=0,
		edge_type=next,
		label=Next];
	115	[contract_name=StableDEX,
		function_fullname="deposit()",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[187]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	114 -> 115	[key=0,
		edge_type=next,
		label=Next];
	116 -> 112	[key=0,
		edge_type=next,
		label=Next];
	117	[contract_name=StableDEX,
		function_fullname="deposit()",
		label="buggy_21.sol_StableDEX_deposit()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[183, 184, 185, 186, 187, 188]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	117 -> 111	[key=0,
		edge_type=next,
		label=Next];
	118	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[189, 190, 191, 192]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	119	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin30)

IRs:
TMP_81(bool) = tx.origin == owner_txorigin30
\
TMP_82(None) = SOLIDITY_CALL require(bool)(TMP_81)",
		node_expression="require(bool)(tx.origin == owner_txorigin30)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_81(bool) = tx.origin == owner_txorigin30
TMP_82(None) = SOLIDITY_CALL require(bool)(TMP_81)",
		node_source_code_lines="[190]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	118 -> 119	[key=0,
		edge_type=next,
		label=Next];
	120	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(address(this).balance)

IRs:
TMP_83 = CONVERT this to address
REF_38 -> BALANCE \
TMP_83
Transfer dest:_recipient value:REF_38",
		node_expression="_recipient.transfer(address(this).balance)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_83 = CONVERT this to address
REF_38 -> BALANCE TMP_83
Transfer dest:_recipient value:REF_38",
		node_source_code_lines="[191]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	119 -> 120	[key=0,
		edge_type=next,
		label=Next];
	121	[contract_name=StableDEX,
		function_fullname="withdrawAll_txorigin30(address,address)",
		label="buggy_21.sol_StableDEX_withdrawAll_txorigin30(address,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[189, 190, 191, 192]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	121 -> 118	[key=0,
		edge_type=next,
		label=Next];
	122	[contract_name=StableDEX,
		function_fullname="tokenDeposit(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[195, 196, 197, 198, 199, 200, 201, 202, 203]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	129	[contract_name=StableDEX,
		function_fullname="tokenDeposit(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
dexstatuscheck()

IRs:
MODIFIER_CALL, StableDEX.dexstatuscheck()()",
		node_expression="dexstatuscheck()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, StableDEX.dexstatuscheck()()",
		node_source_code_lines="[194]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	122 -> 129	[key=0,
		edge_type=next,
		label=Next];
	123	[contract_name=StableDEX,
		function_fullname="tokenDeposit(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tokenAmount > 0 && tokendetails[tokenaddr].status == true)

IRs:
TMP_85(bool) = \
tokenAmount > 0
REF_39(StableDEX.tokens) -> tokendetails[tokenaddr]
REF_40(bool) -> REF_39.status
TMP_86(bool) = REF_40 == True
\
TMP_87(bool) = TMP_85 && TMP_86
TMP_88(None) = SOLIDITY_CALL require(bool)(TMP_87)",
		node_expression="require(bool)(tokenAmount > 0 && tokendetails[tokenaddr].status == true)",
		node_info_vulnerabilities=None,
		node_irs="TMP_85(bool) = tokenAmount > 0
REF_39(StableDEX.tokens) -> tokendetails[tokenaddr]
REF_40(bool) -> REF_39.status
TMP_86(bool) = \
REF_40 == True
TMP_87(bool) = TMP_85 && TMP_86
TMP_88(None) = SOLIDITY_CALL require(bool)(TMP_87)",
		node_source_code_lines="[196]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	124	[contract_name=StableDEX,
		function_fullname="tokenDeposit(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tokenallowance(tokenaddr,msg.sender) > 0)

IRs:
TMP_89(uint256) = INTERNAL_CALL, \
StableDEX.tokenallowance(address,address)(tokenaddr,msg.sender)
TMP_90(bool) = TMP_89 > 0
TMP_91(None) = SOLIDITY_CALL require(bool)(\
TMP_90)",
		node_expression="require(bool)(tokenallowance(tokenaddr,msg.sender) > 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_89(uint256) = INTERNAL_CALL, StableDEX.tokenallowance(address,address)(tokenaddr,msg.sender)
TMP_90(bool) = TMP_89 > 0
TMP_91(\
None) = SOLIDITY_CALL require(bool)(TMP_90)",
		node_source_code_lines="[197]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	123 -> 124	[key=0,
		edge_type=next,
		label=Next];
	125	[contract_name=StableDEX,
		function_fullname="tokenDeposit(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[msg.sender][tokenaddr] = userDetails[msg.sender][tokenaddr].add(tokenAmount)

IRs:
\
REF_41(mapping(address => uint256)) -> userDetails[msg.sender]
REF_42(uint256) -> REF_41[tokenaddr]
REF_43(mapping(address => uint256)) \
-> userDetails[msg.sender]
REF_44(uint256) -> REF_43[tokenaddr]
TMP_92(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_44', 'tokenAmount'] 
REF_42 (->userDetails) := TMP_92(uint256)",
		node_expression="userDetails[msg.sender][tokenaddr] = userDetails[msg.sender][tokenaddr].add(tokenAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_41(mapping(address => uint256)) -> userDetails[msg.sender]
REF_42(uint256) -> REF_41[tokenaddr]
REF_43(mapping(address => uint256)) \
-> userDetails[msg.sender]
REF_44(uint256) -> REF_43[tokenaddr]
TMP_92(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['REF_44', 'tokenAmount'] 
REF_42 (->userDetails) := TMP_92(uint256)",
		node_source_code_lines="[198]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	124 -> 125	[key=0,
		edge_type=next,
		label=Next];
	126	[contract_name=StableDEX,
		function_fullname="tokenDeposit(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Token(tokenaddr).transferFrom(msg.sender,address(this),tokenAmount)

IRs:
TMP_93 = CONVERT tokenaddr \
to Token
TMP_94 = CONVERT this to address
TMP_95(bool) = HIGH_LEVEL_CALL, dest:TMP_93(Token), function:transferFrom, arguments:['\
msg.sender', 'TMP_94', 'tokenAmount']  ",
		node_expression="Token(tokenaddr).transferFrom(msg.sender,address(this),tokenAmount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_93 = CONVERT tokenaddr to Token
TMP_94 = CONVERT this to address
TMP_95(bool) = HIGH_LEVEL_CALL, dest:TMP_93(Token), function:\
transferFrom, arguments:['msg.sender', 'TMP_94', 'tokenAmount']  ",
		node_source_code_lines="[199]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	125 -> 126	[key=0,
		edge_type=next,
		label=Next];
	127	[contract_name=StableDEX,
		function_fullname="tokenDeposit(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
DepositandWithdraw(msg.sender,tokenaddr,tokenAmount,0)

IRs:
Emit DepositandWithdraw(msg.sender.tokenaddr.tokenAmount.0)",
		node_expression="DepositandWithdraw(msg.sender,tokenaddr,tokenAmount,0)",
		node_info_vulnerabilities=None,
		node_irs="Emit DepositandWithdraw(msg.sender.tokenaddr.tokenAmount.0)",
		node_source_code_lines="[200]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=StableDEX,
		function_fullname="tokenDeposit(address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[201]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	127 -> 128	[key=0,
		edge_type=next,
		label=Next];
	129 -> 123	[key=0,
		edge_type=next,
		label=Next];
	130	[contract_name=StableDEX,
		function_fullname="tokenDeposit(address,uint256)",
		label="buggy_21.sol_StableDEX_tokenDeposit(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[194, 195, 196, 197, 198, 199, 200, 201, 202, 203]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	130 -> 122	[key=0,
		edge_type=next,
		label=Next];
	131	[contract_name=StableDEX,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[204, 205, 206]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	132	[contract_name=StableDEX,
		function_fullname="bug_txorigin8(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin8)

IRs:
TMP_98(bool) = tx.origin == owner_txorigin8
\
TMP_99(None) = SOLIDITY_CALL require(bool)(TMP_98)",
		node_expression="require(bool)(tx.origin == owner_txorigin8)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_98(bool) = tx.origin == owner_txorigin8
TMP_99(None) = SOLIDITY_CALL require(bool)(TMP_98)",
		node_source_code_lines="[205]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	131 -> 132	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=StableDEX,
		function_fullname="bug_txorigin8(address)",
		label="buggy_21.sol_StableDEX_bug_txorigin8(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[204, 205, 206]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	133 -> 131	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	151	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
dexstatuscheck()

IRs:
MODIFIER_CALL, StableDEX.dexstatuscheck()()",
		node_expression="dexstatuscheck()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, StableDEX.dexstatuscheck()()",
		node_source_code_lines="[208]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	134 -> 151	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(type_ == 0 || type_ == 1)

IRs:
TMP_100(bool) = type_ == 0
TMP_101(bool) = type_ == \
1
TMP_102(bool) = TMP_100 || TMP_101
TMP_103(None) = SOLIDITY_CALL require(bool)(TMP_102)",
		node_expression="require(bool)(type_ == 0 || type_ == 1)",
		node_info_vulnerabilities=None,
		node_irs="TMP_100(bool) = type_ == 0
TMP_101(bool) = type_ == 1
TMP_102(bool) = TMP_100 || TMP_101
TMP_103(None) = SOLIDITY_CALL require(bool)(\
TMP_102)",
		node_source_code_lines="[209]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	136	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: IF

EXPRESSION:
type_ == 0

IRs:
TMP_104(bool) = type_ == 0
CONDITION TMP_104",
		node_expression="type_ == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_104(bool) = type_ == 0
CONDITION TMP_104",
		node_source_code_lines="[210]",
		node_type=IF,
		source_file="buggy_21.sol"];
	135 -> 136	[key=0,
		edge_type=next,
		label=Next];
	137	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tokenaddr == address(0))

IRs:
TMP_105 = CONVERT 0 to address
TMP_106(bool) = tokenaddr == \
TMP_105
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_expression="require(bool)(tokenaddr == address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_105 = CONVERT 0 to address
TMP_106(bool) = tokenaddr == TMP_105
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)",
		node_source_code_lines="[211]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	136 -> 137	[key=0,
		edge_type=if_true,
		label=True];
	143	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tokenaddr != address(0) && tokendetails[tokenaddr].status == true)

IRs:
TMP_129 = \
CONVERT 0 to address
TMP_130(bool) = tokenaddr != TMP_129
REF_65(StableDEX.tokens) -> tokendetails[tokenaddr]
REF_66(bool) -> REF_\
65.status
TMP_131(bool) = REF_66 == True
TMP_132(bool) = TMP_130 && TMP_131
TMP_133(None) = SOLIDITY_CALL require(bool)(TMP_132)",
		node_expression="require(bool)(tokenaddr != address(0) && tokendetails[tokenaddr].status == true)",
		node_info_vulnerabilities=None,
		node_irs="TMP_129 = CONVERT 0 to address
TMP_130(bool) = tokenaddr != TMP_129
REF_65(StableDEX.tokens) -> tokendetails[tokenaddr]
REF_66(bool) \
-> REF_65.status
TMP_131(bool) = REF_66 == True
TMP_132(bool) = TMP_130 && TMP_131
TMP_133(None) = SOLIDITY_CALL require(bool)(TMP_\
132)",
		node_source_code_lines="[220]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	136 -> 143	[key=0,
		edge_type=if_false,
		label=False];
	138	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(amount > 0 && amount <= userDetails[msg.sender][address(0)] && withdrawfee[address(\
0)] < amount)

IRs:
TMP_108(bool) = amount > 0
REF_47(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_109 = CONVERT \
0 to address
REF_48(uint256) -> REF_47[TMP_109]
TMP_110(bool) = amount <= REF_48
TMP_111(bool) = TMP_108 && TMP_110
TMP_112 = CONVERT \
0 to address
REF_49(uint256) -> withdrawfee[TMP_112]
TMP_113(bool) = REF_49 < amount
TMP_114(bool) = TMP_111 && TMP_113
TMP_115(\
None) = SOLIDITY_CALL require(bool)(TMP_114)",
		node_expression="require(bool)(amount > 0 && amount <= userDetails[msg.sender][address(0)] && withdrawfee[address(0)] < amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_108(bool) = amount > 0
REF_47(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_109 = CONVERT 0 to address
REF_48(\
uint256) -> REF_47[TMP_109]
TMP_110(bool) = amount <= REF_48
TMP_111(bool) = TMP_108 && TMP_110
TMP_112 = CONVERT 0 to address
REF_\
49(uint256) -> withdrawfee[TMP_112]
TMP_113(bool) = REF_49 < amount
TMP_114(bool) = TMP_111 && TMP_113
TMP_115(None) = SOLIDITY_\
CALL require(bool)(TMP_114)",
		node_source_code_lines="[212]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(amount <= address(this).balance)

IRs:
TMP_116 = CONVERT this to address
REF_50 \
-> BALANCE TMP_116
TMP_117(bool) = amount <= REF_50
TMP_118(None) = SOLIDITY_CALL require(bool)(TMP_117)",
		node_expression="require(bool)(amount <= address(this).balance)",
		node_info_vulnerabilities=None,
		node_irs="TMP_116 = CONVERT this to address
REF_50 -> BALANCE TMP_116
TMP_117(bool) = amount <= REF_50
TMP_118(None) = SOLIDITY_CALL require(\
bool)(TMP_117)",
		node_source_code_lines="[213]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	138 -> 139	[key=0,
		edge_type=next,
		label=Next];
	140	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(amount.sub(withdrawfee[address(0)]))

IRs:
TMP_119 = CONVERT 0 to address
\
REF_53(uint256) -> withdrawfee[TMP_119]
TMP_120(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), \
arguments:['amount', 'REF_53'] 
Transfer dest:msg.sender value:TMP_120",
		node_expression="msg.sender.transfer(amount.sub(withdrawfee[address(0)]))",
		node_info_vulnerabilities=None,
		node_irs="TMP_119 = CONVERT 0 to address
REF_53(uint256) -> withdrawfee[TMP_119]
TMP_120(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['amount', 'REF_53'] 
Transfer dest:msg.sender value:TMP_120",
		node_source_code_lines="[214]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	139 -> 140	[key=0,
		edge_type=next,
		label=Next];
	141	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[msg.sender][address(0)] = userDetails[msg.sender][address(0)].sub(amount)

IRs:
REF_\
54(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_122 = CONVERT 0 to address
REF_55(uint256) -> REF_54[TMP_122]
REF_\
56(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_123 = CONVERT 0 to address
REF_57(uint256) -> REF_56[TMP_123]
TMP_\
124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_57', 'amount'] 
REF_55 (->userDetails) := \
TMP_124(uint256)",
		node_expression="userDetails[msg.sender][address(0)] = userDetails[msg.sender][address(0)].sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_54(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_122 = CONVERT 0 to address
REF_55(uint256) -> REF_54[TMP_122]
\
REF_56(mapping(address => uint256)) -> userDetails[msg.sender]
TMP_123 = CONVERT 0 to address
REF_57(uint256) -> REF_56[TMP_123]
\
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_57', 'amount'] 
REF_55 (\
->userDetails) := TMP_124(uint256)",
		node_source_code_lines="[215]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	140 -> 141	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
feeAmount[admin][address(0)] = feeAmount[admin][address(0)].add(withdrawfee[address(0)])

IRs:
\
REF_59(mapping(address => uint256)) -> feeAmount[admin]
TMP_125 = CONVERT 0 to address
REF_60(uint256) -> REF_59[TMP_125]
REF_61(\
mapping(address => uint256)) -> feeAmount[admin]
TMP_126 = CONVERT 0 to address
REF_62(uint256) -> REF_61[TMP_126]
TMP_127 = CONVERT \
0 to address
REF_64(uint256) -> withdrawfee[TMP_127]
TMP_128(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,\
uint256), arguments:['REF_62', 'REF_64'] 
REF_60 (->feeAmount) := TMP_128(uint256)",
		node_expression="feeAmount[admin][address(0)] = feeAmount[admin][address(0)].add(withdrawfee[address(0)])",
		node_info_vulnerabilities=None,
		node_irs="REF_59(mapping(address => uint256)) -> feeAmount[admin]
TMP_125 = CONVERT 0 to address
REF_60(uint256) -> REF_59[TMP_125]
REF_61(\
mapping(address => uint256)) -> feeAmount[admin]
TMP_126 = CONVERT 0 to address
REF_62(uint256) -> REF_61[TMP_126]
TMP_127 = CONVERT \
0 to address
REF_64(uint256) -> withdrawfee[TMP_127]
TMP_128(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,\
uint256), arguments:['REF_62', 'REF_64'] 
REF_60 (->feeAmount) := TMP_128(uint256)",
		node_source_code_lines="[216]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	141 -> 142	[key=0,
		edge_type=next,
		label=Next];
	148	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	142 -> 148	[key=0,
		edge_type=next,
		label=Next];
	144	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(amount > 0 && amount <= userDetails[msg.sender][tokenaddr] && withdrawfee[tokenaddr] < \
amount)

IRs:
TMP_134(bool) = amount > 0
REF_67(mapping(address => uint256)) -> userDetails[msg.sender]
REF_68(uint256) -> REF_67[\
tokenaddr]
TMP_135(bool) = amount <= REF_68
TMP_136(bool) = TMP_134 && TMP_135
REF_69(uint256) -> withdrawfee[tokenaddr]
TMP_137(\
bool) = REF_69 < amount
TMP_138(bool) = TMP_136 && TMP_137
TMP_139(None) = SOLIDITY_CALL require(bool)(TMP_138)",
		node_expression="require(bool)(amount > 0 && amount <= userDetails[msg.sender][tokenaddr] && withdrawfee[tokenaddr] < amount)",
		node_info_vulnerabilities=None,
		node_irs="TMP_134(bool) = amount > 0
REF_67(mapping(address => uint256)) -> userDetails[msg.sender]
REF_68(uint256) -> REF_67[tokenaddr]
TMP_\
135(bool) = amount <= REF_68
TMP_136(bool) = TMP_134 && TMP_135
REF_69(uint256) -> withdrawfee[tokenaddr]
TMP_137(bool) = REF_69 < \
amount
TMP_138(bool) = TMP_136 && TMP_137
TMP_139(None) = SOLIDITY_CALL require(bool)(TMP_138)",
		node_source_code_lines="[221]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Token(tokenaddr).transfer(msg.sender,(amount.sub(withdrawfee[tokenaddr])))

IRs:
TMP_140 = CONVERT \
tokenaddr to Token
REF_72(uint256) -> withdrawfee[tokenaddr]
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['amount', 'REF_72'] 
TMP_142(bool) = HIGH_LEVEL_CALL, dest:TMP_140(Token), function:transfer, arguments:['\
msg.sender', 'TMP_141']  ",
		node_expression="Token(tokenaddr).transfer(msg.sender,(amount.sub(withdrawfee[tokenaddr])))",
		node_info_vulnerabilities=None,
		node_irs="TMP_140 = CONVERT tokenaddr to Token
REF_72(uint256) -> withdrawfee[tokenaddr]
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['amount', 'REF_72'] 
TMP_142(bool) = HIGH_LEVEL_CALL, dest:TMP_140(Token), function:transfer, \
arguments:['msg.sender', 'TMP_141']  ",
		node_source_code_lines="[222]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	144 -> 145	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[msg.sender][tokenaddr] = userDetails[msg.sender][tokenaddr].sub(amount)

IRs:
REF_\
73(mapping(address => uint256)) -> userDetails[msg.sender]
REF_74(uint256) -> REF_73[tokenaddr]
REF_75(mapping(address => uint256)) \
-> userDetails[msg.sender]
REF_76(uint256) -> REF_75[tokenaddr]
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_76', 'amount'] 
REF_74 (->userDetails) := TMP_143(uint256)",
		node_expression="userDetails[msg.sender][tokenaddr] = userDetails[msg.sender][tokenaddr].sub(amount)",
		node_info_vulnerabilities=None,
		node_irs="REF_73(mapping(address => uint256)) -> userDetails[msg.sender]
REF_74(uint256) -> REF_73[tokenaddr]
REF_75(mapping(address => uint256)) \
-> userDetails[msg.sender]
REF_76(uint256) -> REF_75[tokenaddr]
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(\
uint256,uint256), arguments:['REF_76', 'amount'] 
REF_74 (->userDetails) := TMP_143(uint256)",
		node_source_code_lines="[223]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	145 -> 146	[key=0,
		edge_type=next,
		label=Next];
	147	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
feeAmount[admin][tokenaddr] = feeAmount[admin][tokenaddr].add(withdrawfee[tokenaddr])

IRs:
REF_\
78(mapping(address => uint256)) -> feeAmount[admin]
REF_79(uint256) -> REF_78[tokenaddr]
REF_80(mapping(address => uint256)) -> \
feeAmount[admin]
REF_81(uint256) -> REF_80[tokenaddr]
REF_83(uint256) -> withdrawfee[tokenaddr]
TMP_144(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_81', 'REF_83'] 
REF_79 (->feeAmount) := TMP_144(uint256)",
		node_expression="feeAmount[admin][tokenaddr] = feeAmount[admin][tokenaddr].add(withdrawfee[tokenaddr])",
		node_info_vulnerabilities=None,
		node_irs="REF_78(mapping(address => uint256)) -> feeAmount[admin]
REF_79(uint256) -> REF_78[tokenaddr]
REF_80(mapping(address => uint256)) \
-> feeAmount[admin]
REF_81(uint256) -> REF_80[tokenaddr]
REF_83(uint256) -> withdrawfee[tokenaddr]
TMP_144(uint256) = LIBRARY_CALL, \
dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_81', 'REF_83'] 
REF_79 (->feeAmount) := TMP_144(uint256)",
		node_source_code_lines="[224]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	146 -> 147	[key=0,
		edge_type=next,
		label=Next];
	147 -> 148	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
DepositandWithdraw(msg.sender,tokenaddr,amount,1)

IRs:
Emit DepositandWithdraw(msg.sender.tokenaddr.amount.1)",
		node_expression="DepositandWithdraw(msg.sender,tokenaddr,amount,1)",
		node_info_vulnerabilities=None,
		node_irs="Emit DepositandWithdraw(msg.sender.tokenaddr.amount.1)",
		node_source_code_lines="[226]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	148 -> 149	[key=0,
		edge_type=next,
		label=Next];
	150	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[227]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	149 -> 150	[key=0,
		edge_type=next,
		label=Next];
	151 -> 135	[key=0,
		edge_type=next,
		label=Next];
	152	[contract_name=StableDEX,
		function_fullname="withdraw(uint8,address,uint256)",
		label="buggy_21.sol_StableDEX_withdraw(uint8,address,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	152 -> 134	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[229, 230, 231, 232]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	154	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin39)

IRs:
TMP_147(bool) = tx.origin == owner_txorigin39
\
TMP_148(None) = SOLIDITY_CALL require(bool)(TMP_147)",
		node_expression="require(bool)(tx.origin == owner_txorigin39)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_147(bool) = tx.origin == owner_txorigin39
TMP_148(None) = SOLIDITY_CALL require(bool)(TMP_147)",
		node_source_code_lines="[230]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="REF_84(None) -> to.call
REF_85(None) -> REF_84.value",
		node_source_code_lines="[231]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	154 -> 155	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin39(address,uint256,address)",
		label="buggy_21.sol_StableDEX_transferTo_txorigin39(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[229, 230, 231, 232]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	156 -> 153	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	158	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == admin)

IRs:
TMP_150(bool) = msg.sender == admin
TMP_151(None) = \
SOLIDITY_CALL require(bool)(TMP_150)",
		node_expression="require(bool)(msg.sender == admin)",
		node_info_vulnerabilities=None,
		node_irs="TMP_150(bool) = msg.sender == admin
TMP_151(None) = SOLIDITY_CALL require(bool)(TMP_150)",
		node_source_code_lines="[235]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	157 -> 158	[key=0,
		edge_type=next,
		label=Next];
	159	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(type_ == 0 || type_ == 1)

IRs:
TMP_152(bool) = type_ == 0
TMP_153(bool) = type_ == \
1
TMP_154(bool) = TMP_152 || TMP_153
TMP_155(None) = SOLIDITY_CALL require(bool)(TMP_154)",
		node_expression="require(bool)(type_ == 0 || type_ == 1)",
		node_info_vulnerabilities=None,
		node_irs="TMP_152(bool) = type_ == 0
TMP_153(bool) = type_ == 1
TMP_154(bool) = TMP_152 || TMP_153
TMP_155(None) = SOLIDITY_CALL require(bool)(\
TMP_154)",
		node_source_code_lines="[236]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	158 -> 159	[key=0,
		edge_type=next,
		label=Next];
	160	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: IF

EXPRESSION:
type_ == 0

IRs:
TMP_156(bool) = type_ == 0
CONDITION TMP_156",
		node_expression="type_ == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_156(bool) = type_ == 0
CONDITION TMP_156",
		node_source_code_lines="[237]",
		node_type=IF,
		source_file="buggy_21.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
admin.transfer(feeAmount[admin][address(0)])

IRs:
REF_87(mapping(address => uint256)) -> feeAmount[\
admin]
TMP_157 = CONVERT 0 to address
REF_88(uint256) -> REF_87[TMP_157]
Transfer dest:admin value:REF_88",
		node_expression="admin.transfer(feeAmount[admin][address(0)])",
		node_info_vulnerabilities=None,
		node_irs="REF_87(mapping(address => uint256)) -> feeAmount[admin]
TMP_157 = CONVERT 0 to address
REF_88(uint256) -> REF_87[TMP_157]
Transfer \
dest:admin value:REF_88",
		node_source_code_lines="[238]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	160 -> 161	[key=0,
		edge_type=if_true,
		label=True];
	163	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tokenAddr != address(0))

IRs:
TMP_160 = CONVERT 0 to address
TMP_161(bool) = tokenAddr != \
TMP_160
TMP_162(None) = SOLIDITY_CALL require(bool)(TMP_161)",
		node_expression="require(bool)(tokenAddr != address(0))",
		node_info_vulnerabilities=None,
		node_irs="TMP_160 = CONVERT 0 to address
TMP_161(bool) = tokenAddr != TMP_160
TMP_162(None) = SOLIDITY_CALL require(bool)(TMP_161)",
		node_source_code_lines="[243]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	160 -> 163	[key=0,
		edge_type=if_false,
		label=False];
	162	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
feeAmount[admin][address(0)] = 0

IRs:
REF_89(mapping(address => uint256)) -> feeAmount[admin]
\
TMP_159 = CONVERT 0 to address
REF_90(uint256) -> REF_89[TMP_159]
REF_90 (->feeAmount) := 0(uint256)",
		node_expression="feeAmount[admin][address(0)] = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_89(mapping(address => uint256)) -> feeAmount[admin]
TMP_159 = CONVERT 0 to address
REF_90(uint256) -> REF_89[TMP_159]
REF_90 (\
->feeAmount) := 0(uint256)",
		node_source_code_lines="[239]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	161 -> 162	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[237, 238, 239, 240, 241, 242, 243, 244, 245, 246]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	162 -> 166	[key=0,
		edge_type=next,
		label=Next];
	164	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
Token(tokenAddr).transfer(admin,feeAmount[admin][tokenAddr])

IRs:
TMP_163 = CONVERT tokenAddr \
to Token
REF_92(mapping(address => uint256)) -> feeAmount[admin]
REF_93(uint256) -> REF_92[tokenAddr]
TMP_164(bool) = HIGH_LEVEL_\
CALL, dest:TMP_163(Token), function:transfer, arguments:['admin', 'REF_93']  ",
		node_expression="Token(tokenAddr).transfer(admin,feeAmount[admin][tokenAddr])",
		node_info_vulnerabilities=None,
		node_irs="TMP_163 = CONVERT tokenAddr to Token
REF_92(mapping(address => uint256)) -> feeAmount[admin]
REF_93(uint256) -> REF_92[tokenAddr]
\
TMP_164(bool) = HIGH_LEVEL_CALL, dest:TMP_163(Token), function:transfer, arguments:['admin', 'REF_93']  ",
		node_source_code_lines="[244]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
feeAmount[admin][tokenAddr] = 0

IRs:
REF_94(mapping(address => uint256)) -> feeAmount[admin]
\
REF_95(uint256) -> REF_94[tokenAddr]
REF_95 (->feeAmount) := 0(uint256)",
		node_expression="feeAmount[admin][tokenAddr] = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_94(mapping(address => uint256)) -> feeAmount[admin]
REF_95(uint256) -> REF_94[tokenAddr]
REF_95 (->feeAmount) := 0(uint256)",
		node_source_code_lines="[245]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	164 -> 165	[key=0,
		edge_type=next,
		label=Next];
	165 -> 166	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[249]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=StableDEX,
		function_fullname="adminProfitWithdraw(uint8,address)",
		label="buggy_21.sol_StableDEX_adminProfitWithdraw(uint8,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	168 -> 157	[key=0,
		edge_type=next,
		label=Next];
	169	[contract_name=StableDEX,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	170	[contract_name=StableDEX,
		function_fullname="bug_txorigin36(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin36)

IRs:
TMP_165(bool) = tx.origin == owner_txorigin36
\
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_expression="require(bool)(tx.origin == owner_txorigin36)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_165(bool) = tx.origin == owner_txorigin36
TMP_166(None) = SOLIDITY_CALL require(bool)(TMP_165)",
		node_source_code_lines="[252]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	169 -> 170	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=StableDEX,
		function_fullname="bug_txorigin36(address)",
		label="buggy_21.sol_StableDEX_bug_txorigin36(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[251, 252, 253]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	171 -> 169	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[257, 258, 259, 260, 261, 262, 263, 264, 265]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	173	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == admin)

IRs:
TMP_167(bool) = msg.sender == admin
TMP_168(None) = \
SOLIDITY_CALL require(bool)(TMP_167)",
		node_expression="require(bool)(msg.sender == admin)",
		node_info_vulnerabilities=None,
		node_irs="TMP_167(bool) = msg.sender == admin
TMP_168(None) = SOLIDITY_CALL require(bool)(TMP_167)",
		node_source_code_lines="[258]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	172 -> 173	[key=0,
		edge_type=next,
		label=Next];
	174	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(addr.length < 10 && feeamount.length < 10 && addr.length == feeamount.length)

\
IRs:
REF_96 -> LENGTH addr
TMP_169(bool) = REF_96 < 10
REF_97 -> LENGTH feeamount
TMP_170(bool) = REF_97 < 10
TMP_171(bool) = TMP_\
169 && TMP_170
REF_98 -> LENGTH addr
REF_99 -> LENGTH feeamount
TMP_172(bool) = REF_98 == REF_99
TMP_173(bool) = TMP_171 && TMP_\
172
TMP_174(None) = SOLIDITY_CALL require(bool)(TMP_173)",
		node_expression="require(bool)(addr.length < 10 && feeamount.length < 10 && addr.length == feeamount.length)",
		node_info_vulnerabilities=None,
		node_irs="REF_96 -> LENGTH addr
TMP_169(bool) = REF_96 < 10
REF_97 -> LENGTH feeamount
TMP_170(bool) = REF_97 < 10
TMP_171(bool) = TMP_169 && \
TMP_170
REF_98 -> LENGTH addr
REF_99 -> LENGTH feeamount
TMP_172(bool) = REF_98 == REF_99
TMP_173(bool) = TMP_171 && TMP_172
TMP_\
174(None) = SOLIDITY_CALL require(bool)(TMP_173)",
		node_source_code_lines="[260]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	173 -> 174	[key=0,
		edge_type=next,
		label=Next];
	177	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint8) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint8) := 0(uint256)",
		node_source_code_lines="[261]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	174 -> 177	[key=0,
		edge_type=next,
		label=Next];
	175	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[261, 262, 263]",
		node_type=BEGIN_LOOP,
		source_file="buggy_21.sol"];
	178	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: IF_LOOP

EXPRESSION:
i < addr.length

IRs:
REF_100 -> LENGTH addr
TMP_175(bool) = i < REF_100
CONDITION TMP_175",
		node_expression="i < addr.length",
		node_info_vulnerabilities=None,
		node_irs="REF_100 -> LENGTH addr
TMP_175(bool) = i < REF_100
CONDITION TMP_175",
		node_source_code_lines="[261]",
		node_type=IF_LOOP,
		source_file="buggy_21.sol"];
	175 -> 178	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[261, 262, 263]",
		node_type=END_LOOP,
		source_file="buggy_21.sol"];
	181	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[264]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	176 -> 181	[key=0,
		edge_type=next,
		label=Next];
	177 -> 175	[key=0,
		edge_type=next,
		label=Next];
	178 -> 176	[key=0,
		edge_type=if_false,
		label=False];
	179	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: EXPRESSION

EXPRESSION:
withdrawfee[addr[i]] = feeamount[i]

IRs:
REF_101(address) -> addr[i]
REF_102(uint256) -> withdrawfee[\
REF_101]
REF_103(uint256) -> feeamount[i]
REF_102 (->withdrawfee) := REF_103(uint256)",
		node_expression="withdrawfee[addr[i]] = feeamount[i]",
		node_info_vulnerabilities=None,
		node_irs="REF_101(address) -> addr[i]
REF_102(uint256) -> withdrawfee[REF_101]
REF_103(uint256) -> feeamount[i]
REF_102 (->withdrawfee) := \
REF_103(uint256)",
		node_source_code_lines="[262]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	178 -> 179	[key=0,
		edge_type=if_true,
		label=True];
	180	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="Node Type: EXPRESSION

EXPRESSION:
i ++

IRs:
TMP_176(uint8) := i(uint8)
i(uint8) = i + 1",
		node_expression="i ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_176(uint8) := i(uint8)
i(uint8) = i + 1",
		node_source_code_lines="[261]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	179 -> 180	[key=0,
		edge_type=next,
		label=Next];
	180 -> 178	[key=0,
		edge_type=next,
		label=Next];
	182	[contract_name=StableDEX,
		function_fullname="setwithdrawfee(address[],uint256[])",
		label="buggy_21.sol_StableDEX_setwithdrawfee(address[],uint256[])",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[256, 257, 258, 259, 260, 261, 262, 263, 264, 265]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	182 -> 172	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[266, 267, 268, 269]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	184	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin35)

IRs:
TMP_177(bool) = tx.origin == owner_txorigin35
\
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_expression="require(bool)(tx.origin == owner_txorigin35)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_177(bool) = tx.origin == owner_txorigin35
TMP_178(None) = SOLIDITY_CALL require(bool)(TMP_177)",
		node_source_code_lines="[267]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	183 -> 184	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_104(None) -> to.call
REF_105(None) -> REF_104.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="REF_104(None) -> to.call
REF_105(None) -> REF_104.value",
		node_source_code_lines="[268]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	184 -> 185	[key=0,
		edge_type=next,
		label=Next];
	186	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin35(address,uint256,address)",
		label="buggy_21.sol_StableDEX_transferTo_txorigin35(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[266, 267, 268, 269]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	186 -> 183	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, \
299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	188	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
header = Ethereum Signed Message:
000000

IRs:
header(string) := Ethereum Signed Message:
\
000000(string)",
		node_expression="header = Ethereum Signed Message:
000000",
		node_info_vulnerabilities=None,
		node_irs="header(string) := Ethereum Signed Message:
000000(string)",
		node_source_code_lines="[274]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	187 -> 188	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[275]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	188 -> 189	[key=0,
		edge_type=next,
		label=Next];
	190	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[276]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	189 -> 190	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[277, 278, 279, 280]",
		node_type="INLINE ASM",
		source_file="buggy_21.sol"];
	190 -> 191	[key=0,
		edge_type=next,
		label=Next];
	192	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(length <= 999999)

IRs:
TMP_180(bool) = length <= 999999
TMP_181(None) = SOLIDITY_\
CALL require(bool)(TMP_180)",
		node_expression="require(bool)(length <= 999999)",
		node_info_vulnerabilities=None,
		node_irs="TMP_180(bool) = length <= 999999
TMP_181(None) = SOLIDITY_CALL require(bool)(TMP_180)",
		node_source_code_lines="[281]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	191 -> 192	[key=0,
		edge_type=next,
		label=Next];
	193	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
lengthLength = 0

IRs:
lengthLength(uint256) := 0(uint256)",
		node_expression="lengthLength = 0",
		node_info_vulnerabilities=None,
		node_irs="lengthLength(uint256) := 0(uint256)",
		node_source_code_lines="[282]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	192 -> 193	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
divisor = 100000

IRs:
divisor(uint256) := 100000(uint256)",
		node_expression="divisor = 100000",
		node_info_vulnerabilities=None,
		node_irs="divisor(uint256) := 100000(uint256)",
		node_source_code_lines="[283]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	193 -> 194	[key=0,
		edge_type=next,
		label=Next];
	195	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301]",
		node_type=BEGIN_LOOP,
		source_file="buggy_21.sol"];
	194 -> 195	[key=0,
		edge_type=next,
		label=Next];
	196	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: IF_LOOP

EXPRESSION:
divisor != 0

IRs:
TMP_182(bool) = divisor != 0
CONDITION TMP_182",
		node_expression="divisor != 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_182(bool) = divisor != 0
CONDITION TMP_182",
		node_source_code_lines="[284]",
		node_type=IF_LOOP,
		source_file="buggy_21.sol"];
	195 -> 196	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
digit = length.div(divisor)

IRs:
TMP_183(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.div(uint256,uint256), arguments:['length', 'divisor'] 
digit(uint256) := TMP_183(uint256)",
		node_expression="digit = length.div(divisor)",
		node_info_vulnerabilities=None,
		node_irs="TMP_183(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['length', 'divisor'] 
digit(uint256) := \
TMP_183(uint256)",
		node_source_code_lines="[285]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	196 -> 197	[key=0,
		edge_type=if_true,
		label=True];
	210	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301]",
		node_type=END_LOOP,
		source_file="buggy_21.sol"];
	196 -> 210	[key=0,
		edge_type=if_false,
		label=False];
	198	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
digit == 0

IRs:
TMP_184(bool) = digit == 0
CONDITION TMP_184",
		node_expression="digit == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_184(bool) = digit == 0
CONDITION TMP_184",
		node_source_code_lines="[286]",
		node_type=IF,
		source_file="buggy_21.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
lengthLength == 0

IRs:
TMP_185(bool) = lengthLength == 0
CONDITION TMP_185",
		node_expression="lengthLength == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_185(bool) = lengthLength == 0
CONDITION TMP_185",
		node_source_code_lines="[288]",
		node_type=IF,
		source_file="buggy_21.sol"];
	198 -> 199	[key=0,
		edge_type=if_true,
		label=True];
	203	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286, 287, 288, 289, 290, 291, 292]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	198 -> 203	[key=0,
		edge_type=if_false,
		label=False];
	200	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
divisor = divisor.div(10)

IRs:
TMP_186(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(\
uint256,uint256), arguments:['divisor', '10'] 
divisor(uint256) := TMP_186(uint256)",
		node_expression="divisor = divisor.div(10)",
		node_info_vulnerabilities=None,
		node_irs="TMP_186(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['divisor', '10'] 
divisor(uint256) := \
TMP_186(uint256)",
		node_source_code_lines="[289]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	199 -> 200	[key=0,
		edge_type=if_true,
		label=True];
	202	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[288, 289, 290, 291]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	199 -> 202	[key=0,
		edge_type=if_false,
		label=False];
	201	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: CONTINUE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[290]",
		node_type=CONTINUE,
		source_file="buggy_21.sol"];
	200 -> 201	[key=0,
		edge_type=next,
		label=Next];
	201 -> 195	[key=0,
		edge_type=next,
		label=Next];
	202 -> 203	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
lengthLength ++

IRs:
TMP_187(uint256) := lengthLength(uint256)
lengthLength(uint256) = lengthLength + \
1",
		node_expression="lengthLength ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_187(uint256) := lengthLength(uint256)
lengthLength(uint256) = lengthLength + 1",
		node_source_code_lines="[293]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	203 -> 204	[key=0,
		edge_type=next,
		label=Next];
	205	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
length = length.sub(digit.mul(divisor))

IRs:
TMP_188(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.mul(uint256,uint256), arguments:['digit', 'divisor'] 
TMP_189(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['length', 'TMP_188'] 
length(uint256) := TMP_189(uint256)",
		node_expression="length = length.sub(digit.mul(divisor))",
		node_info_vulnerabilities=None,
		node_irs="TMP_188(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['digit', 'divisor'] 
TMP_189(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['length', 'TMP_188'] 
length(uint256) := \
TMP_189(uint256)",
		node_source_code_lines="[294]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	204 -> 205	[key=0,
		edge_type=next,
		label=Next];
	206	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
divisor = divisor.div(10)

IRs:
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(\
uint256,uint256), arguments:['divisor', '10'] 
divisor(uint256) := TMP_190(uint256)",
		node_expression="divisor = divisor.div(10)",
		node_info_vulnerabilities=None,
		node_irs="TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['divisor', '10'] 
divisor(uint256) := \
TMP_190(uint256)",
		node_source_code_lines="[295]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	205 -> 206	[key=0,
		edge_type=next,
		label=Next];
	207	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
digit = digit.add(0x30)

IRs:
TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(\
uint256,uint256), arguments:['digit', '48'] 
digit(uint256) := TMP_191(uint256)",
		node_expression="digit = digit.add(0x30)",
		node_info_vulnerabilities=None,
		node_irs="TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['digit', '48'] 
digit(uint256) := \
TMP_191(uint256)",
		node_source_code_lines="[296]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
lengthOffset ++

IRs:
TMP_192(uint256) := lengthOffset(uint256)
lengthOffset(uint256) = lengthOffset + \
1",
		node_expression="lengthOffset ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_192(uint256) := lengthOffset(uint256)
lengthOffset(uint256) = lengthOffset + 1",
		node_source_code_lines="[297]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	207 -> 208	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[298, 299, 300]",
		node_type="INLINE ASM",
		source_file="buggy_21.sol"];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	209 -> 196	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
lengthLength == 0

IRs:
TMP_193(bool) = lengthLength == 0
CONDITION TMP_193",
		node_expression="lengthLength == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_193(bool) = lengthLength == 0
CONDITION TMP_193",
		node_source_code_lines="[302]",
		node_type=IF,
		source_file="buggy_21.sol"];
	210 -> 211	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
lengthLength = 1 + 0x19 + 1

IRs:
TMP_194(uint256) = 1 + 25
TMP_195(uint256) = TMP_194 + 1
lengthLength(\
uint256) := TMP_195(uint256)",
		node_expression="lengthLength = 1 + 0x19 + 1",
		node_info_vulnerabilities=None,
		node_irs="TMP_194(uint256) = 1 + 25
TMP_195(uint256) = TMP_194 + 1
lengthLength(uint256) := TMP_195(uint256)",
		node_source_code_lines="[303]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	211 -> 212	[key=0,
		edge_type=if_true,
		label=True];
	213	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
lengthLength = lengthLength.add(1 + 0x19)

IRs:
TMP_196(uint256) = 1 + 25
TMP_197(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['lengthLength', 'TMP_196'] 
lengthLength(uint256) := \
TMP_197(uint256)",
		node_expression="lengthLength = lengthLength.add(1 + 0x19)",
		node_info_vulnerabilities=None,
		node_irs="TMP_196(uint256) = 1 + 25
TMP_197(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['lengthLength', '\
TMP_196'] 
lengthLength(uint256) := TMP_197(uint256)",
		node_source_code_lines="[305]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	211 -> 213	[key=0,
		edge_type=if_false,
		label=False];
	214	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[302, 303, 304, 305, 306]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	212 -> 214	[key=0,
		edge_type=next,
		label=Next];
	213 -> 214	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: INLINE ASM
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[307, 308, 309]",
		node_type="INLINE ASM",
		source_file="buggy_21.sol"];
	214 -> 215	[key=0,
		edge_type=next,
		label=Next];
	216	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
check = keccak256(bytes)(abi.encodePacked(header,message))

IRs:
TMP_198(bytes) = SOLIDITY_\
CALL abi.encodePacked()(header,message)
TMP_199(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_198)
check(bytes32) := TMP_199(bytes32)",
		node_expression="check = keccak256(bytes)(abi.encodePacked(header,message))",
		node_info_vulnerabilities=None,
		node_irs="TMP_198(bytes) = SOLIDITY_CALL abi.encodePacked()(header,message)
TMP_199(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_198)
check(\
bytes32) := TMP_199(bytes32)",
		node_source_code_lines="[310]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	215 -> 216	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="Node Type: RETURN

EXPRESSION:
ecrecover(bytes32,uint8,bytes32,bytes32)(check,v,r,s)

IRs:
TMP_200(address) = SOLIDITY_CALL ecrecover(\
bytes32,uint8,bytes32,bytes32)(check,v,r,s)
RETURN TMP_200",
		node_expression="ecrecover(bytes32,uint8,bytes32,bytes32)(check,v,r,s)",
		node_info_vulnerabilities=None,
		node_irs="TMP_200(address) = SOLIDITY_CALL ecrecover(bytes32,uint8,bytes32,bytes32)(check,v,r,s)
RETURN TMP_200",
		node_source_code_lines="[311]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	216 -> 217	[key=0,
		edge_type=next,
		label=Next];
	218	[contract_name=StableDEX,
		function_fullname="verify(string,uint8,bytes32,bytes32)",
		label="buggy_21.sol_StableDEX_verify(string,uint8,bytes32,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, \
299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	218 -> 187	[key=0,
		edge_type=next,
		label=Next];
	219	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, \
344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, \
370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, \
396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	278	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
dexstatuscheck()

IRs:
MODIFIER_CALL, StableDEX.dexstatuscheck()()",
		node_expression="dexstatuscheck()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, StableDEX.dexstatuscheck()()",
		node_source_code_lines="[318]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	219 -> 278	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == feeAddress)

IRs:
TMP_201(bool) = msg.sender == feeAddress
TMP_202(\
None) = SOLIDITY_CALL require(bool)(TMP_201)",
		node_expression="require(bool)(msg.sender == feeAddress)",
		node_info_vulnerabilities=None,
		node_irs="TMP_201(bool) = msg.sender == feeAddress
TMP_202(None) = SOLIDITY_CALL require(bool)(TMP_201)",
		node_source_code_lines="[319]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	221	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(verify((message),v,r,s) == traderAddresses[1])

IRs:
TMP_203(address) = INTERNAL_\
CALL, StableDEX.verify(string,uint8,bytes32,bytes32)(message,v,r,s)
REF_114(address) -> traderAddresses[1]
TMP_204(bool) = TMP_203 == \
REF_114
TMP_205(None) = SOLIDITY_CALL require(bool)(TMP_204)",
		node_expression="require(bool)(verify((message),v,r,s) == traderAddresses[1])",
		node_info_vulnerabilities=None,
		node_irs="TMP_203(address) = INTERNAL_CALL, StableDEX.verify(string,uint8,bytes32,bytes32)(message,v,r,s)
REF_114(address) -> traderAddresses[\
1]
TMP_204(bool) = TMP_203 == REF_114
TMP_205(None) = SOLIDITY_CALL require(bool)(TMP_204)",
		node_source_code_lines="[320]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[340]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	221 -> 222	[key=0,
		edge_type=next,
		label=Next];
	223	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
orderiD = tradeDetails[0]

IRs:
REF_115(uint256) -> tradeDetails[0]
orderiD(uint256) := REF_\
115(uint256)",
		node_expression="orderiD = tradeDetails[0]",
		node_info_vulnerabilities=None,
		node_irs="REF_115(uint256) -> tradeDetails[0]
orderiD(uint256) := REF_115(uint256)",
		node_source_code_lines="[342]",
		node_type="NEW VARIABLE",
		source_file="buggy_21.sol"];
	222 -> 223	[key=0,
		edge_type=next,
		label=Next];
	224	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
Order[orderiD].status == 0

IRs:
REF_116(StableDEX.orders) -> Order[orderiD]
REF_117(uint256) -> REF_\
116.status
TMP_206(bool) = REF_117 == 0
CONDITION TMP_206",
		node_expression="Order[orderiD].status == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_116(StableDEX.orders) -> Order[orderiD]
REF_117(uint256) -> REF_116.status
TMP_206(bool) = REF_117 == 0
CONDITION TMP_206",
		node_source_code_lines="[343]",
		node_type=IF,
		source_file="buggy_21.sol"];
	223 -> 224	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
tradeDetails[6] == 0

IRs:
REF_118(uint256) -> tradeDetails[6]
TMP_207(bool) = REF_118 == 0
CONDITION \
TMP_207",
		node_expression="tradeDetails[6] == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_118(uint256) -> tradeDetails[6]
TMP_207(bool) = REF_118 == 0
CONDITION TMP_207",
		node_source_code_lines="[345]",
		node_type=IF,
		source_file="buggy_21.sol"];
	224 -> 225	[key=0,
		edge_type=if_true,
		label=True];
	243	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
Order[orderiD].status == 1 && tradeDetails[8] == 0

IRs:
REF_164(StableDEX.orders) -> Order[orderiD]
\
REF_165(uint256) -> REF_164.status
TMP_214(bool) = REF_165 == 1
REF_166(uint256) -> tradeDetails[8]
TMP_215(bool) = REF_166 == 0
\
TMP_216(bool) = TMP_214 && TMP_215
CONDITION TMP_216",
		node_expression="Order[orderiD].status == 1 && tradeDetails[8] == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_164(StableDEX.orders) -> Order[orderiD]
REF_165(uint256) -> REF_164.status
TMP_214(bool) = REF_165 == 1
REF_166(uint256) -> \
tradeDetails[8]
TMP_215(bool) = REF_166 == 0
TMP_216(bool) = TMP_214 && TMP_215
CONDITION TMP_216",
		node_source_code_lines="[368]",
		node_type=IF,
		source_file="buggy_21.sol"];
	224 -> 243	[key=0,
		edge_type=if_false,
		label=False];
	226	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
amount__ = tradeDetails[3]

IRs:
REF_119(uint256) -> tradeDetails[3]
amount__(uint256) := REF_\
119(uint256)",
		node_expression="amount__ = tradeDetails[3]",
		node_info_vulnerabilities=None,
		node_irs="REF_119(uint256) -> tradeDetails[3]
amount__(uint256) := REF_119(uint256)",
		node_source_code_lines="[346]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	225 -> 226	[key=0,
		edge_type=if_true,
		label=True];
	227	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
tradeDetails[6] == 1

IRs:
REF_120(uint256) -> tradeDetails[6]
TMP_208(bool) = REF_120 == 1
CONDITION \
TMP_208",
		node_expression="tradeDetails[6] == 1",
		node_info_vulnerabilities=None,
		node_irs="REF_120(uint256) -> tradeDetails[6]
TMP_208(bool) = REF_120 == 1
CONDITION TMP_208",
		node_source_code_lines="[348]",
		node_type=IF,
		source_file="buggy_21.sol"];
	225 -> 227	[key=0,
		edge_type=if_false,
		label=False];
	230	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[345, 346, 347, 348, 349, 350]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	226 -> 230	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
amount__ = tradeDetails[1]

IRs:
REF_121(uint256) -> tradeDetails[1]
amount__(uint256) := REF_\
121(uint256)",
		node_expression="amount__ = tradeDetails[1]",
		node_info_vulnerabilities=None,
		node_irs="REF_121(uint256) -> tradeDetails[1]
amount__(uint256) := REF_121(uint256)",
		node_source_code_lines="[349]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	227 -> 228	[key=0,
		edge_type=if_true,
		label=True];
	229	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[348, 349, 350]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	227 -> 229	[key=0,
		edge_type=if_false,
		label=False];
	228 -> 229	[key=0,
		edge_type=next,
		label=Next];
	229 -> 230	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(amount__ > 0 && amount__ <= userDetails[traderAddresses[1]][traderAddresses[0]])

\
IRs:
TMP_209(bool) = amount__ > 0
REF_122(address) -> traderAddresses[1]
REF_123(mapping(address => uint256)) -> userDetails[REF_\
122]
REF_124(address) -> traderAddresses[0]
REF_125(uint256) -> REF_123[REF_124]
TMP_210(bool) = amount__ <= REF_125
TMP_211(bool) = \
TMP_209 && TMP_210
TMP_212(None) = SOLIDITY_CALL require(bool)(TMP_211)",
		node_expression="require(bool)(amount__ > 0 && amount__ <= userDetails[traderAddresses[1]][traderAddresses[0]])",
		node_info_vulnerabilities=None,
		node_irs="TMP_209(bool) = amount__ > 0
REF_122(address) -> traderAddresses[1]
REF_123(mapping(address => uint256)) -> userDetails[REF_122]
\
REF_124(address) -> traderAddresses[0]
REF_125(uint256) -> REF_123[REF_124]
TMP_210(bool) = amount__ <= REF_125
TMP_211(bool) = \
TMP_209 && TMP_210
TMP_212(None) = SOLIDITY_CALL require(bool)(TMP_211)",
		node_source_code_lines="[351]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	230 -> 231	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].userAddress = traderAddresses[1]

IRs:
REF_126(StableDEX.orders) -> Order[orderiD]
\
REF_127(address) -> REF_126.userAddress
REF_128(address) -> traderAddresses[1]
REF_127 (->Order) := REF_128(address)",
		node_expression="Order[orderiD].userAddress = traderAddresses[1]",
		node_info_vulnerabilities=None,
		node_irs="REF_126(StableDEX.orders) -> Order[orderiD]
REF_127(address) -> REF_126.userAddress
REF_128(address) -> traderAddresses[1]
REF_127 (\
->Order) := REF_128(address)",
		node_source_code_lines="[353]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	231 -> 232	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].type_ = tradeDetails[6]

IRs:
REF_129(StableDEX.orders) -> Order[orderiD]
REF_\
130(uint256) -> REF_129.type_
REF_131(uint256) -> tradeDetails[6]
REF_130 (->Order) := REF_131(uint256)",
		node_expression="Order[orderiD].type_ = tradeDetails[6]",
		node_info_vulnerabilities=None,
		node_irs="REF_129(StableDEX.orders) -> Order[orderiD]
REF_130(uint256) -> REF_129.type_
REF_131(uint256) -> tradeDetails[6]
REF_130 (->Order) := \
REF_131(uint256)",
		node_source_code_lines="[354]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	232 -> 233	[key=0,
		edge_type=next,
		label=Next];
	234	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].price = tradeDetails[2]

IRs:
REF_132(StableDEX.orders) -> Order[orderiD]
REF_\
133(uint256) -> REF_132.price
REF_134(uint256) -> tradeDetails[2]
REF_133 (->Order) := REF_134(uint256)",
		node_expression="Order[orderiD].price = tradeDetails[2]",
		node_info_vulnerabilities=None,
		node_irs="REF_132(StableDEX.orders) -> Order[orderiD]
REF_133(uint256) -> REF_132.price
REF_134(uint256) -> tradeDetails[2]
REF_133 (->Order) := \
REF_134(uint256)",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	233 -> 234	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].amount = tradeDetails[1]

IRs:
REF_135(StableDEX.orders) -> Order[orderiD]
REF_\
136(uint256) -> REF_135.amount
REF_137(uint256) -> tradeDetails[1]
REF_136 (->Order) := REF_137(uint256)",
		node_expression="Order[orderiD].amount = tradeDetails[1]",
		node_info_vulnerabilities=None,
		node_irs="REF_135(StableDEX.orders) -> Order[orderiD]
REF_136(uint256) -> REF_135.amount
REF_137(uint256) -> tradeDetails[1]
REF_136 (->Order) := \
REF_137(uint256)",
		node_source_code_lines="[356]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	234 -> 235	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].total = tradeDetails[3]

IRs:
REF_138(StableDEX.orders) -> Order[orderiD]
REF_\
139(uint256) -> REF_138.total
REF_140(uint256) -> tradeDetails[3]
REF_139 (->Order) := REF_140(uint256)",
		node_expression="Order[orderiD].total = tradeDetails[3]",
		node_info_vulnerabilities=None,
		node_irs="REF_138(StableDEX.orders) -> Order[orderiD]
REF_139(uint256) -> REF_138.total
REF_140(uint256) -> tradeDetails[3]
REF_139 (->Order) := \
REF_140(uint256)",
		node_source_code_lines="[357]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	235 -> 236	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].tradeTotal = tradeDetails[3]

IRs:
REF_141(StableDEX.orders) -> Order[orderiD]
\
REF_142(uint256) -> REF_141.tradeTotal
REF_143(uint256) -> tradeDetails[3]
REF_142 (->Order) := REF_143(uint256)",
		node_expression="Order[orderiD].tradeTotal = tradeDetails[3]",
		node_info_vulnerabilities=None,
		node_irs="REF_141(StableDEX.orders) -> Order[orderiD]
REF_142(uint256) -> REF_141.tradeTotal
REF_143(uint256) -> tradeDetails[3]
REF_142 (\
->Order) := REF_143(uint256)",
		node_source_code_lines="[358]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	236 -> 237	[key=0,
		edge_type=next,
		label=Next];
	238	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD]._decimal = tradeDetails[7]

IRs:
REF_144(StableDEX.orders) -> Order[orderiD]
REF_\
145(uint256) -> REF_144._decimal
REF_146(uint256) -> tradeDetails[7]
REF_145 (->Order) := REF_146(uint256)",
		node_expression="Order[orderiD]._decimal = tradeDetails[7]",
		node_info_vulnerabilities=None,
		node_irs="REF_144(StableDEX.orders) -> Order[orderiD]
REF_145(uint256) -> REF_144._decimal
REF_146(uint256) -> tradeDetails[7]
REF_145 (->\
Order) := REF_146(uint256)",
		node_source_code_lines="[359]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	237 -> 238	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].tokenAddress = traderAddresses[0]

IRs:
REF_147(StableDEX.orders) -> Order[orderiD]
\
REF_148(address) -> REF_147.tokenAddress
REF_149(address) -> traderAddresses[0]
REF_148 (->Order) := REF_149(address)",
		node_expression="Order[orderiD].tokenAddress = traderAddresses[0]",
		node_info_vulnerabilities=None,
		node_irs="REF_147(StableDEX.orders) -> Order[orderiD]
REF_148(address) -> REF_147.tokenAddress
REF_149(address) -> traderAddresses[0]
REF_\
148 (->Order) := REF_149(address)",
		node_source_code_lines="[360]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	238 -> 239	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[traderAddresses[1]][traderAddresses[0]] = userDetails[traderAddresses[1]][traderAddresses[\
0]].sub(amount__)

IRs:
REF_150(address) -> traderAddresses[1]
REF_151(mapping(address => uint256)) -> userDetails[REF_150]
REF_\
152(address) -> traderAddresses[0]
REF_153(uint256) -> REF_151[REF_152]
REF_154(address) -> traderAddresses[1]
REF_155(mapping(address => \
uint256)) -> userDetails[REF_154]
REF_156(address) -> traderAddresses[0]
REF_157(uint256) -> REF_155[REF_156]
TMP_213(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_157', 'amount__'] 
REF_153 (->userDetails) := \
TMP_213(uint256)",
		node_expression="userDetails[traderAddresses[1]][traderAddresses[0]] = userDetails[traderAddresses[1]][traderAddresses[0]].sub(amount__)",
		node_info_vulnerabilities=None,
		node_irs="REF_150(address) -> traderAddresses[1]
REF_151(mapping(address => uint256)) -> userDetails[REF_150]
REF_152(address) -> traderAddresses[\
0]
REF_153(uint256) -> REF_151[REF_152]
REF_154(address) -> traderAddresses[1]
REF_155(mapping(address => uint256)) -> userDetails[\
REF_154]
REF_156(address) -> traderAddresses[0]
REF_157(uint256) -> REF_155[REF_156]
TMP_213(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_157', 'amount__'] 
REF_153 (->userDetails) := TMP_213(uint256)",
		node_source_code_lines="[362]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	239 -> 240	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].tradeAmount = tradeDetails[1]

IRs:
REF_159(StableDEX.orders) -> Order[orderiD]
\
REF_160(uint256) -> REF_159.tradeAmount
REF_161(uint256) -> tradeDetails[1]
REF_160 (->Order) := REF_161(uint256)",
		node_expression="Order[orderiD].tradeAmount = tradeDetails[1]",
		node_info_vulnerabilities=None,
		node_irs="REF_159(StableDEX.orders) -> Order[orderiD]
REF_160(uint256) -> REF_159.tradeAmount
REF_161(uint256) -> tradeDetails[1]
REF_160 (\
->Order) := REF_161(uint256)",
		node_source_code_lines="[364]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	240 -> 241	[key=0,
		edge_type=next,
		label=Next];
	242	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].status = 1

IRs:
REF_162(StableDEX.orders) -> Order[orderiD]
REF_163(uint256) \
-> REF_162.status
REF_163 (->Order) := 1(uint256)",
		node_expression="Order[orderiD].status = 1",
		node_info_vulnerabilities=None,
		node_irs="REF_162(StableDEX.orders) -> Order[orderiD]
REF_163(uint256) -> REF_162.status
REF_163 (->Order) := 1(uint256)",
		node_source_code_lines="[365]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, \
369, 370]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	242 -> 246	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
cancelOrder(orderiD)

IRs:
TMP_217(bool) = INTERNAL_CALL, StableDEX.cancelOrder(uint256)(orderiD)",
		node_expression="cancelOrder(orderiD)",
		node_info_vulnerabilities=None,
		node_irs="TMP_217(bool) = INTERNAL_CALL, StableDEX.cancelOrder(uint256)(orderiD)",
		node_source_code_lines="[369]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	243 -> 244	[key=0,
		edge_type=if_true,
		label=True];
	245	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[368, 369, 370]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	243 -> 245	[key=0,
		edge_type=if_false,
		label=False];
	244 -> 245	[key=0,
		edge_type=next,
		label=Next];
	245 -> 246	[key=0,
		edge_type=next,
		label=Next];
	247	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
Order[orderiD].status == 1 && tradeDetails[1] > 0 && tradeDetails[8] > 0 && Order[tradeDetails[8]].status == \
1 && tradeDetails[3] > 0

IRs:
REF_167(StableDEX.orders) -> Order[orderiD]
REF_168(uint256) -> REF_167.status
TMP_218(bool) = REF_\
168 == 1
REF_169(uint256) -> tradeDetails[1]
TMP_219(bool) = REF_169 > 0
TMP_220(bool) = TMP_218 && TMP_219
REF_170(uint256) -> \
tradeDetails[8]
TMP_221(bool) = REF_170 > 0
TMP_222(bool) = TMP_220 && TMP_221
REF_171(uint256) -> tradeDetails[8]
REF_172(StableDEX.orders) \
-> Order[REF_171]
REF_173(uint256) -> REF_172.status
TMP_223(bool) = REF_173 == 1
TMP_224(bool) = TMP_222 && TMP_223
REF_174(uint256) \
-> tradeDetails[3]
TMP_225(bool) = REF_174 > 0
TMP_226(bool) = TMP_224 && TMP_225
CONDITION TMP_226",
		node_expression="Order[orderiD].status == 1 && tradeDetails[1] > 0 && tradeDetails[8] > 0 && Order[tradeDetails[8]].status == 1 && tradeDetails[3] > \
0",
		node_info_vulnerabilities=None,
		node_irs="REF_167(StableDEX.orders) -> Order[orderiD]
REF_168(uint256) -> REF_167.status
TMP_218(bool) = REF_168 == 1
REF_169(uint256) -> \
tradeDetails[1]
TMP_219(bool) = REF_169 > 0
TMP_220(bool) = TMP_218 && TMP_219
REF_170(uint256) -> tradeDetails[8]
TMP_221(bool) = \
REF_170 > 0
TMP_222(bool) = TMP_220 && TMP_221
REF_171(uint256) -> tradeDetails[8]
REF_172(StableDEX.orders) -> Order[REF_171]
REF_\
173(uint256) -> REF_172.status
TMP_223(bool) = REF_173 == 1
TMP_224(bool) = TMP_222 && TMP_223
REF_174(uint256) -> tradeDetails[\
3]
TMP_225(bool) = REF_174 > 0
TMP_226(bool) = TMP_224 && TMP_225
CONDITION TMP_226",
		node_source_code_lines="[371]",
		node_type=IF,
		source_file="buggy_21.sol"];
	246 -> 247	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].tradeAmount = Order[orderiD].tradeAmount.sub(tradeDetails[1])

IRs:
REF_175(StableDEX.orders) \
-> Order[orderiD]
REF_176(uint256) -> REF_175.tradeAmount
REF_177(StableDEX.orders) -> Order[orderiD]
REF_178(uint256) -> REF_177.tradeAmount
\
REF_180(uint256) -> tradeDetails[1]
TMP_227(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_178', 'REF_180'] 
REF_176 (->Order) := TMP_227(uint256)",
		node_expression="Order[orderiD].tradeAmount = Order[orderiD].tradeAmount.sub(tradeDetails[1])",
		node_info_vulnerabilities=None,
		node_irs="REF_175(StableDEX.orders) -> Order[orderiD]
REF_176(uint256) -> REF_175.tradeAmount
REF_177(StableDEX.orders) -> Order[orderiD]
\
REF_178(uint256) -> REF_177.tradeAmount
REF_180(uint256) -> tradeDetails[1]
TMP_227(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_178', 'REF_180'] 
REF_176 (->Order) := TMP_227(uint256)",
		node_source_code_lines="[373]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	247 -> 248	[key=0,
		edge_type=if_true,
		label=True];
	276	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, \
397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	247 -> 276	[key=0,
		edge_type=if_false,
		label=False];
	249	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[tradeDetails[8]].tradeAmount = Order[tradeDetails[8]].tradeAmount.sub(tradeDetails[1])

\
IRs:
REF_181(uint256) -> tradeDetails[8]
REF_182(StableDEX.orders) -> Order[REF_181]
REF_183(uint256) -> REF_182.tradeAmount
REF_\
184(uint256) -> tradeDetails[8]
REF_185(StableDEX.orders) -> Order[REF_184]
REF_186(uint256) -> REF_185.tradeAmount
REF_188(uint256) \
-> tradeDetails[1]
TMP_228(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_186', '\
REF_188'] 
REF_183 (->Order) := TMP_228(uint256)",
		node_expression="Order[tradeDetails[8]].tradeAmount = Order[tradeDetails[8]].tradeAmount.sub(tradeDetails[1])",
		node_info_vulnerabilities=None,
		node_irs="REF_181(uint256) -> tradeDetails[8]
REF_182(StableDEX.orders) -> Order[REF_181]
REF_183(uint256) -> REF_182.tradeAmount
REF_184(\
uint256) -> tradeDetails[8]
REF_185(StableDEX.orders) -> Order[REF_184]
REF_186(uint256) -> REF_185.tradeAmount
REF_188(uint256) \
-> tradeDetails[1]
TMP_228(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_186', '\
REF_188'] 
REF_183 (->Order) := TMP_228(uint256)",
		node_source_code_lines="[374]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	248 -> 249	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
tradeDetails[2] > 0

IRs:
REF_189(uint256) -> tradeDetails[2]
TMP_229(bool) = REF_189 > 0
CONDITION TMP_\
229",
		node_expression="tradeDetails[2] > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_189(uint256) -> tradeDetails[2]
TMP_229(bool) = REF_189 > 0
CONDITION TMP_229",
		node_source_code_lines="[375]",
		node_type=IF,
		source_file="buggy_21.sol"];
	249 -> 250	[key=0,
		edge_type=next,
		label=Next];
	251	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[Order[orderiD].userAddress][Order[orderiD].tokenAddress] = userDetails[Order[orderiD]\
.userAddress][Order[orderiD].tokenAddress].add(tradeDetails[2])

IRs:
REF_190(StableDEX.orders) -> Order[orderiD]
REF_191(address) \
-> REF_190.userAddress
REF_192(mapping(address => uint256)) -> userDetails[REF_191]
REF_193(StableDEX.orders) -> Order[orderiD]
\
REF_194(address) -> REF_193.tokenAddress
REF_195(uint256) -> REF_192[REF_194]
REF_196(StableDEX.orders) -> Order[orderiD]
REF_197(\
address) -> REF_196.userAddress
REF_198(mapping(address => uint256)) -> userDetails[REF_197]
REF_199(StableDEX.orders) -> Order[\
orderiD]
REF_200(address) -> REF_199.tokenAddress
REF_201(uint256) -> REF_198[REF_200]
REF_203(uint256) -> tradeDetails[2]
TMP_230(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_201', 'REF_203'] 
REF_195 (->userDetails) := \
TMP_230(uint256)",
		node_expression="userDetails[Order[orderiD].userAddress][Order[orderiD].tokenAddress] = userDetails[Order[orderiD].userAddress][Order[orderiD].tokenAddress]\
.add(tradeDetails[2])",
		node_info_vulnerabilities=None,
		node_irs="REF_190(StableDEX.orders) -> Order[orderiD]
REF_191(address) -> REF_190.userAddress
REF_192(mapping(address => uint256)) -> userDetails[\
REF_191]
REF_193(StableDEX.orders) -> Order[orderiD]
REF_194(address) -> REF_193.tokenAddress
REF_195(uint256) -> REF_192[REF_194]
\
REF_196(StableDEX.orders) -> Order[orderiD]
REF_197(address) -> REF_196.userAddress
REF_198(mapping(address => uint256)) -> userDetails[\
REF_197]
REF_199(StableDEX.orders) -> Order[orderiD]
REF_200(address) -> REF_199.tokenAddress
REF_201(uint256) -> REF_198[REF_200]
\
REF_203(uint256) -> tradeDetails[2]
TMP_230(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_201', 'REF_203'] 
REF_195 (->userDetails) := TMP_230(uint256)",
		node_source_code_lines="[376]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	250 -> 251	[key=0,
		edge_type=if_true,
		label=True];
	252	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[375, 376, 377]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	250 -> 252	[key=0,
		edge_type=if_false,
		label=False];
	251 -> 252	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].tradeTotal = Order[orderiD].tradeTotal.sub(((tradeDetails[1].mul(Order[orderiD]\
.price)).div(Order[orderiD]._decimal)))

IRs:
REF_204(StableDEX.orders) -> Order[orderiD]
REF_205(uint256) -> REF_204.tradeTotal
\
REF_206(StableDEX.orders) -> Order[orderiD]
REF_207(uint256) -> REF_206.tradeTotal
REF_209(uint256) -> tradeDetails[1]
REF_211(StableDEX.orders) \
-> Order[orderiD]
REF_212(uint256) -> REF_211.price
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,\
uint256), arguments:['REF_209', 'REF_212'] 
REF_214(StableDEX.orders) -> Order[orderiD]
REF_215(uint256) -> REF_214._decimal
TMP_\
232(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_231', 'REF_215'] 
TMP_233(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_207', 'TMP_232'] 
REF_205 (->Order) := TMP_\
233(uint256)",
		node_expression="Order[orderiD].tradeTotal = Order[orderiD].tradeTotal.sub(((tradeDetails[1].mul(Order[orderiD].price)).div(Order[orderiD]._decimal)))",
		node_info_vulnerabilities=None,
		node_irs="REF_204(StableDEX.orders) -> Order[orderiD]
REF_205(uint256) -> REF_204.tradeTotal
REF_206(StableDEX.orders) -> Order[orderiD]
REF_\
207(uint256) -> REF_206.tradeTotal
REF_209(uint256) -> tradeDetails[1]
REF_211(StableDEX.orders) -> Order[orderiD]
REF_212(uint256) \
-> REF_211.price
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_209', '\
REF_212'] 
REF_214(StableDEX.orders) -> Order[orderiD]
REF_215(uint256) -> REF_214._decimal
TMP_232(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_231', 'REF_215'] 
TMP_233(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.sub(uint256,uint256), arguments:['REF_207', 'TMP_232'] 
REF_205 (->Order) := TMP_233(uint256)",
		node_source_code_lines="[378]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	252 -> 253	[key=0,
		edge_type=next,
		label=Next];
	254	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[tradeDetails[8]].tradeTotal = Order[tradeDetails[8]].tradeTotal.sub(((tradeDetails[1].mul(\
Order[tradeDetails[8]].price)).div(Order[tradeDetails[8]]._decimal)))

IRs:
REF_216(uint256) -> tradeDetails[8]
REF_217(StableDEX.orders) \
-> Order[REF_216]
REF_218(uint256) -> REF_217.tradeTotal
REF_219(uint256) -> tradeDetails[8]
REF_220(StableDEX.orders) -> Order[\
REF_219]
REF_221(uint256) -> REF_220.tradeTotal
REF_223(uint256) -> tradeDetails[1]
REF_225(uint256) -> tradeDetails[8]
REF_226(\
StableDEX.orders) -> Order[REF_225]
REF_227(uint256) -> REF_226.price
TMP_234(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(\
uint256,uint256), arguments:['REF_223', 'REF_227'] 
REF_229(uint256) -> tradeDetails[8]
REF_230(StableDEX.orders) -> Order[REF_229]
\
REF_231(uint256) -> REF_230._decimal
TMP_235(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['\
TMP_234', 'REF_231'] 
TMP_236(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_221', '\
TMP_235'] 
REF_218 (->Order) := TMP_236(uint256)",
		node_expression="Order[tradeDetails[8]].tradeTotal = Order[tradeDetails[8]].tradeTotal.sub(((tradeDetails[1].mul(Order[tradeDetails[8]].price)).div(\
Order[tradeDetails[8]]._decimal)))",
		node_info_vulnerabilities=None,
		node_irs="REF_216(uint256) -> tradeDetails[8]
REF_217(StableDEX.orders) -> Order[REF_216]
REF_218(uint256) -> REF_217.tradeTotal
REF_219(uint256) \
-> tradeDetails[8]
REF_220(StableDEX.orders) -> Order[REF_219]
REF_221(uint256) -> REF_220.tradeTotal
REF_223(uint256) -> tradeDetails[\
1]
REF_225(uint256) -> tradeDetails[8]
REF_226(StableDEX.orders) -> Order[REF_225]
REF_227(uint256) -> REF_226.price
TMP_234(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_223', 'REF_227'] 
REF_229(uint256) -> tradeDetails[\
8]
REF_230(StableDEX.orders) -> Order[REF_229]
REF_231(uint256) -> REF_230._decimal
TMP_235(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.div(uint256,uint256), arguments:['TMP_234', 'REF_231'] 
TMP_236(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_221', 'TMP_235'] 
REF_218 (->Order) := TMP_236(uint256)",
		node_source_code_lines="[379]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	253 -> 254	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
tradeDetails[6] == 1 || tradeDetails[6] == 3

IRs:
REF_232(uint256) -> tradeDetails[6]
TMP_237(bool) = \
REF_232 == 1
REF_233(uint256) -> tradeDetails[6]
TMP_238(bool) = REF_233 == 3
TMP_239(bool) = TMP_237 || TMP_238
CONDITION TMP_239",
		node_expression="tradeDetails[6] == 1 || tradeDetails[6] == 3",
		node_info_vulnerabilities=None,
		node_irs="REF_232(uint256) -> tradeDetails[6]
TMP_237(bool) = REF_232 == 1
REF_233(uint256) -> tradeDetails[6]
TMP_238(bool) = REF_233 == \
3
TMP_239(bool) = TMP_237 || TMP_238
CONDITION TMP_239",
		node_source_code_lines="[382]",
		node_type=IF,
		source_file="buggy_21.sol"];
	254 -> 255	[key=0,
		edge_type=next,
		label=Next];
	256	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[Order[orderiD].userAddress][Order[tradeDetails[8]].tokenAddress] = userDetails[Order[\
orderiD].userAddress][Order[tradeDetails[8]].tokenAddress].add(tradeDetails[1])

IRs:
REF_234(StableDEX.orders) -> Order[orderiD]
\
REF_235(address) -> REF_234.userAddress
REF_236(mapping(address => uint256)) -> userDetails[REF_235]
REF_237(uint256) -> tradeDetails[\
8]
REF_238(StableDEX.orders) -> Order[REF_237]
REF_239(address) -> REF_238.tokenAddress
REF_240(uint256) -> REF_236[REF_239]
REF_\
241(StableDEX.orders) -> Order[orderiD]
REF_242(address) -> REF_241.userAddress
REF_243(mapping(address => uint256)) -> userDetails[\
REF_242]
REF_244(uint256) -> tradeDetails[8]
REF_245(StableDEX.orders) -> Order[REF_244]
REF_246(address) -> REF_245.tokenAddress
\
REF_247(uint256) -> REF_243[REF_246]
REF_249(uint256) -> tradeDetails[1]
TMP_240(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_247', 'REF_249'] 
REF_240 (->userDetails) := TMP_240(uint256)",
		node_expression="userDetails[Order[orderiD].userAddress][Order[tradeDetails[8]].tokenAddress] = userDetails[Order[orderiD].userAddress][Order[tradeDetails[\
8]].tokenAddress].add(tradeDetails[1])",
		node_info_vulnerabilities=None,
		node_irs="REF_234(StableDEX.orders) -> Order[orderiD]
REF_235(address) -> REF_234.userAddress
REF_236(mapping(address => uint256)) -> userDetails[\
REF_235]
REF_237(uint256) -> tradeDetails[8]
REF_238(StableDEX.orders) -> Order[REF_237]
REF_239(address) -> REF_238.tokenAddress
\
REF_240(uint256) -> REF_236[REF_239]
REF_241(StableDEX.orders) -> Order[orderiD]
REF_242(address) -> REF_241.userAddress
REF_243(\
mapping(address => uint256)) -> userDetails[REF_242]
REF_244(uint256) -> tradeDetails[8]
REF_245(StableDEX.orders) -> Order[REF_\
244]
REF_246(address) -> REF_245.tokenAddress
REF_247(uint256) -> REF_243[REF_246]
REF_249(uint256) -> tradeDetails[1]
TMP_240(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_247', 'REF_249'] 
REF_240 (->userDetails) := \
TMP_240(uint256)",
		node_source_code_lines="[384]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	255 -> 256	[key=0,
		edge_type=if_true,
		label=True];
	259	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[Order[orderiD].userAddress][Order[tradeDetails[8]].tokenAddress] = userDetails[Order[\
orderiD].userAddress][Order[tradeDetails[8]].tokenAddress].add(tradeDetails[1].sub(tradeDetails[4]))

IRs:
REF_270(StableDEX.orders) \
-> Order[orderiD]
REF_271(address) -> REF_270.userAddress
REF_272(mapping(address => uint256)) -> userDetails[REF_271]
REF_273(uint256) \
-> tradeDetails[8]
REF_274(StableDEX.orders) -> Order[REF_273]
REF_275(address) -> REF_274.tokenAddress
REF_276(uint256) -> REF_\
272[REF_275]
REF_277(StableDEX.orders) -> Order[orderiD]
REF_278(address) -> REF_277.userAddress
REF_279(mapping(address => uint256)) \
-> userDetails[REF_278]
REF_280(uint256) -> tradeDetails[8]
REF_281(StableDEX.orders) -> Order[REF_280]
REF_282(address) -> REF_\
281.tokenAddress
REF_283(uint256) -> REF_279[REF_282]
REF_285(uint256) -> tradeDetails[1]
REF_287(uint256) -> tradeDetails[4]
TMP_\
243(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_285', 'REF_287'] 
TMP_244(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_283', 'TMP_243'] 
REF_276 (->userDetails) := \
TMP_244(uint256)",
		node_expression="userDetails[Order[orderiD].userAddress][Order[tradeDetails[8]].tokenAddress] = userDetails[Order[orderiD].userAddress][Order[tradeDetails[\
8]].tokenAddress].add(tradeDetails[1].sub(tradeDetails[4]))",
		node_info_vulnerabilities=None,
		node_irs="REF_270(StableDEX.orders) -> Order[orderiD]
REF_271(address) -> REF_270.userAddress
REF_272(mapping(address => uint256)) -> userDetails[\
REF_271]
REF_273(uint256) -> tradeDetails[8]
REF_274(StableDEX.orders) -> Order[REF_273]
REF_275(address) -> REF_274.tokenAddress
\
REF_276(uint256) -> REF_272[REF_275]
REF_277(StableDEX.orders) -> Order[orderiD]
REF_278(address) -> REF_277.userAddress
REF_279(\
mapping(address => uint256)) -> userDetails[REF_278]
REF_280(uint256) -> tradeDetails[8]
REF_281(StableDEX.orders) -> Order[REF_\
280]
REF_282(address) -> REF_281.tokenAddress
REF_283(uint256) -> REF_279[REF_282]
REF_285(uint256) -> tradeDetails[1]
REF_287(uint256) \
-> tradeDetails[4]
TMP_243(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_285', '\
REF_287'] 
TMP_244(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_283', 'TMP_243'] 
\
REF_276 (->userDetails) := TMP_244(uint256)",
		node_source_code_lines="[390]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	255 -> 259	[key=0,
		edge_type=if_false,
		label=False];
	257	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[Order[orderiD].userAddress][traderAddresses[0]] = userDetails[Order[orderiD].userAddress][\
traderAddresses[0]].sub(tradeDetails[4])

IRs:
REF_250(StableDEX.orders) -> Order[orderiD]
REF_251(address) -> REF_250.userAddress
\
REF_252(mapping(address => uint256)) -> userDetails[REF_251]
REF_253(address) -> traderAddresses[0]
REF_254(uint256) -> REF_252[\
REF_253]
REF_255(StableDEX.orders) -> Order[orderiD]
REF_256(address) -> REF_255.userAddress
REF_257(mapping(address => uint256)) \
-> userDetails[REF_256]
REF_258(address) -> traderAddresses[0]
REF_259(uint256) -> REF_257[REF_258]
REF_261(uint256) -> tradeDetails[\
4]
TMP_241(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_259', 'REF_261'] 
REF_\
254 (->userDetails) := TMP_241(uint256)",
		node_expression="userDetails[Order[orderiD].userAddress][traderAddresses[0]] = userDetails[Order[orderiD].userAddress][traderAddresses[0]].sub(tradeDetails[\
4])",
		node_info_vulnerabilities=None,
		node_irs="REF_250(StableDEX.orders) -> Order[orderiD]
REF_251(address) -> REF_250.userAddress
REF_252(mapping(address => uint256)) -> userDetails[\
REF_251]
REF_253(address) -> traderAddresses[0]
REF_254(uint256) -> REF_252[REF_253]
REF_255(StableDEX.orders) -> Order[orderiD]
\
REF_256(address) -> REF_255.userAddress
REF_257(mapping(address => uint256)) -> userDetails[REF_256]
REF_258(address) -> traderAddresses[\
0]
REF_259(uint256) -> REF_257[REF_258]
REF_261(uint256) -> tradeDetails[4]
TMP_241(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.sub(uint256,uint256), arguments:['REF_259', 'REF_261'] 
REF_254 (->userDetails) := TMP_241(uint256)",
		node_source_code_lines="[385]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
feeAmount[admin][traderAddresses[0]] = feeAmount[admin][traderAddresses[0]].add(tradeDetails[\
4])

IRs:
REF_262(mapping(address => uint256)) -> feeAmount[admin]
REF_263(address) -> traderAddresses[0]
REF_264(uint256) -> REF_\
262[REF_263]
REF_265(mapping(address => uint256)) -> feeAmount[admin]
REF_266(address) -> traderAddresses[0]
REF_267(uint256) -> \
REF_265[REF_266]
REF_269(uint256) -> tradeDetails[4]
TMP_242(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,\
uint256), arguments:['REF_267', 'REF_269'] 
REF_264 (->feeAmount) := TMP_242(uint256)",
		node_expression="feeAmount[admin][traderAddresses[0]] = feeAmount[admin][traderAddresses[0]].add(tradeDetails[4])",
		node_info_vulnerabilities=None,
		node_irs="REF_262(mapping(address => uint256)) -> feeAmount[admin]
REF_263(address) -> traderAddresses[0]
REF_264(uint256) -> REF_262[REF_\
263]
REF_265(mapping(address => uint256)) -> feeAmount[admin]
REF_266(address) -> traderAddresses[0]
REF_267(uint256) -> REF_265[\
REF_266]
REF_269(uint256) -> tradeDetails[4]
TMP_242(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_267', 'REF_269'] 
REF_264 (->feeAmount) := TMP_242(uint256)",
		node_source_code_lines="[386]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	257 -> 258	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	258 -> 261	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
feeAmount[admin][Order[tradeDetails[8]].tokenAddress] = feeAmount[admin][Order[tradeDetails[8]]\
.tokenAddress].add(tradeDetails[4])

IRs:
REF_288(mapping(address => uint256)) -> feeAmount[admin]
REF_289(uint256) -> tradeDetails[\
8]
REF_290(StableDEX.orders) -> Order[REF_289]
REF_291(address) -> REF_290.tokenAddress
REF_292(uint256) -> REF_288[REF_291]
REF_\
293(mapping(address => uint256)) -> feeAmount[admin]
REF_294(uint256) -> tradeDetails[8]
REF_295(StableDEX.orders) -> Order[REF_\
294]
REF_296(address) -> REF_295.tokenAddress
REF_297(uint256) -> REF_293[REF_296]
REF_299(uint256) -> tradeDetails[4]
TMP_245(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_297', 'REF_299'] 
REF_292 (->feeAmount) := \
TMP_245(uint256)",
		node_expression="feeAmount[admin][Order[tradeDetails[8]].tokenAddress] = feeAmount[admin][Order[tradeDetails[8]].tokenAddress].add(tradeDetails[4])",
		node_info_vulnerabilities=None,
		node_irs="REF_288(mapping(address => uint256)) -> feeAmount[admin]
REF_289(uint256) -> tradeDetails[8]
REF_290(StableDEX.orders) -> Order[\
REF_289]
REF_291(address) -> REF_290.tokenAddress
REF_292(uint256) -> REF_288[REF_291]
REF_293(mapping(address => uint256)) -> feeAmount[\
admin]
REF_294(uint256) -> tradeDetails[8]
REF_295(StableDEX.orders) -> Order[REF_294]
REF_296(address) -> REF_295.tokenAddress
\
REF_297(uint256) -> REF_293[REF_296]
REF_299(uint256) -> tradeDetails[4]
TMP_245(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_297', 'REF_299'] 
REF_292 (->feeAmount) := TMP_245(uint256)",
		node_source_code_lines="[391]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	259 -> 260	[key=0,
		edge_type=next,
		label=Next];
	260 -> 261	[key=0,
		edge_type=next,
		label=Next];
	262	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
tradeDetails[6] == 2 || tradeDetails[6] == 3

IRs:
REF_300(uint256) -> tradeDetails[6]
TMP_246(bool) = \
REF_300 == 2
REF_301(uint256) -> tradeDetails[6]
TMP_247(bool) = REF_301 == 3
TMP_248(bool) = TMP_246 || TMP_247
CONDITION TMP_248",
		node_expression="tradeDetails[6] == 2 || tradeDetails[6] == 3",
		node_info_vulnerabilities=None,
		node_irs="REF_300(uint256) -> tradeDetails[6]
TMP_246(bool) = REF_300 == 2
REF_301(uint256) -> tradeDetails[6]
TMP_247(bool) = REF_301 == \
3
TMP_248(bool) = TMP_246 || TMP_247
CONDITION TMP_248",
		node_source_code_lines="[393]",
		node_type=IF,
		source_file="buggy_21.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[Order[tradeDetails[8]].userAddress][Order[orderiD].tokenAddress] = userDetails[Order[\
tradeDetails[8]].userAddress][Order[orderiD].tokenAddress].add(tradeDetails[3])

IRs:
REF_302(uint256) -> tradeDetails[8]
REF_303(\
StableDEX.orders) -> Order[REF_302]
REF_304(address) -> REF_303.userAddress
REF_305(mapping(address => uint256)) -> userDetails[\
REF_304]
REF_306(StableDEX.orders) -> Order[orderiD]
REF_307(address) -> REF_306.tokenAddress
REF_308(uint256) -> REF_305[REF_307]
\
REF_309(uint256) -> tradeDetails[8]
REF_310(StableDEX.orders) -> Order[REF_309]
REF_311(address) -> REF_310.userAddress
REF_312(\
mapping(address => uint256)) -> userDetails[REF_311]
REF_313(StableDEX.orders) -> Order[orderiD]
REF_314(address) -> REF_313.tokenAddress
\
REF_315(uint256) -> REF_312[REF_314]
REF_317(uint256) -> tradeDetails[3]
TMP_249(uint256) = LIBRARY_CALL, dest:SafeMath, function:\
SafeMath.add(uint256,uint256), arguments:['REF_315', 'REF_317'] 
REF_308 (->userDetails) := TMP_249(uint256)",
		node_expression="userDetails[Order[tradeDetails[8]].userAddress][Order[orderiD].tokenAddress] = userDetails[Order[tradeDetails[8]].userAddress][Order[\
orderiD].tokenAddress].add(tradeDetails[3])",
		node_info_vulnerabilities=None,
		node_irs="REF_302(uint256) -> tradeDetails[8]
REF_303(StableDEX.orders) -> Order[REF_302]
REF_304(address) -> REF_303.userAddress
REF_305(\
mapping(address => uint256)) -> userDetails[REF_304]
REF_306(StableDEX.orders) -> Order[orderiD]
REF_307(address) -> REF_306.tokenAddress
\
REF_308(uint256) -> REF_305[REF_307]
REF_309(uint256) -> tradeDetails[8]
REF_310(StableDEX.orders) -> Order[REF_309]
REF_311(address) \
-> REF_310.userAddress
REF_312(mapping(address => uint256)) -> userDetails[REF_311]
REF_313(StableDEX.orders) -> Order[orderiD]
\
REF_314(address) -> REF_313.tokenAddress
REF_315(uint256) -> REF_312[REF_314]
REF_317(uint256) -> tradeDetails[3]
TMP_249(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_315', 'REF_317'] 
REF_308 (->userDetails) := \
TMP_249(uint256)",
		node_source_code_lines="[395]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	262 -> 263	[key=0,
		edge_type=if_true,
		label=True];
	266	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[Order[tradeDetails[8]].userAddress][Order[orderiD].tokenAddress] = userDetails[Order[\
tradeDetails[8]].userAddress][Order[orderiD].tokenAddress].add(tradeDetails[3].sub(tradeDetails[5]))

IRs:
REF_340(uint256) -> tradeDetails[\
8]
REF_341(StableDEX.orders) -> Order[REF_340]
REF_342(address) -> REF_341.userAddress
REF_343(mapping(address => uint256)) -> userDetails[\
REF_342]
REF_344(StableDEX.orders) -> Order[orderiD]
REF_345(address) -> REF_344.tokenAddress
REF_346(uint256) -> REF_343[REF_345]
\
REF_347(uint256) -> tradeDetails[8]
REF_348(StableDEX.orders) -> Order[REF_347]
REF_349(address) -> REF_348.userAddress
REF_350(\
mapping(address => uint256)) -> userDetails[REF_349]
REF_351(StableDEX.orders) -> Order[orderiD]
REF_352(address) -> REF_351.tokenAddress
\
REF_353(uint256) -> REF_350[REF_352]
REF_355(uint256) -> tradeDetails[3]
REF_357(uint256) -> tradeDetails[5]
TMP_252(uint256) = \
LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_355', 'REF_357'] 
TMP_253(uint256) = LIBRARY_\
CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_353', 'TMP_252'] 
REF_346 (->userDetails) := TMP_253(\
uint256)",
		node_expression="userDetails[Order[tradeDetails[8]].userAddress][Order[orderiD].tokenAddress] = userDetails[Order[tradeDetails[8]].userAddress][Order[\
orderiD].tokenAddress].add(tradeDetails[3].sub(tradeDetails[5]))",
		node_info_vulnerabilities=None,
		node_irs="REF_340(uint256) -> tradeDetails[8]
REF_341(StableDEX.orders) -> Order[REF_340]
REF_342(address) -> REF_341.userAddress
REF_343(\
mapping(address => uint256)) -> userDetails[REF_342]
REF_344(StableDEX.orders) -> Order[orderiD]
REF_345(address) -> REF_344.tokenAddress
\
REF_346(uint256) -> REF_343[REF_345]
REF_347(uint256) -> tradeDetails[8]
REF_348(StableDEX.orders) -> Order[REF_347]
REF_349(address) \
-> REF_348.userAddress
REF_350(mapping(address => uint256)) -> userDetails[REF_349]
REF_351(StableDEX.orders) -> Order[orderiD]
\
REF_352(address) -> REF_351.tokenAddress
REF_353(uint256) -> REF_350[REF_352]
REF_355(uint256) -> tradeDetails[3]
REF_357(uint256) \
-> tradeDetails[5]
TMP_252(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_355', '\
REF_357'] 
TMP_253(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_353', 'TMP_252'] 
\
REF_346 (->userDetails) := TMP_253(uint256)",
		node_source_code_lines="[401]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	262 -> 266	[key=0,
		edge_type=if_false,
		label=False];
	264	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[Order[tradeDetails[8]].userAddress][traderAddresses[0]] = userDetails[Order[tradeDetails[\
8]].userAddress][traderAddresses[0]].sub(tradeDetails[5])

IRs:
REF_318(uint256) -> tradeDetails[8]
REF_319(StableDEX.orders) -> \
Order[REF_318]
REF_320(address) -> REF_319.userAddress
REF_321(mapping(address => uint256)) -> userDetails[REF_320]
REF_322(address) \
-> traderAddresses[0]
REF_323(uint256) -> REF_321[REF_322]
REF_324(uint256) -> tradeDetails[8]
REF_325(StableDEX.orders) -> Order[\
REF_324]
REF_326(address) -> REF_325.userAddress
REF_327(mapping(address => uint256)) -> userDetails[REF_326]
REF_328(address) -> \
traderAddresses[0]
REF_329(uint256) -> REF_327[REF_328]
REF_331(uint256) -> tradeDetails[5]
TMP_250(uint256) = LIBRARY_CALL, dest:\
SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_329', 'REF_331'] 
REF_323 (->userDetails) := TMP_250(uint256)",
		node_expression="userDetails[Order[tradeDetails[8]].userAddress][traderAddresses[0]] = userDetails[Order[tradeDetails[8]].userAddress][traderAddresses[\
0]].sub(tradeDetails[5])",
		node_info_vulnerabilities=None,
		node_irs="REF_318(uint256) -> tradeDetails[8]
REF_319(StableDEX.orders) -> Order[REF_318]
REF_320(address) -> REF_319.userAddress
REF_321(\
mapping(address => uint256)) -> userDetails[REF_320]
REF_322(address) -> traderAddresses[0]
REF_323(uint256) -> REF_321[REF_322]
\
REF_324(uint256) -> tradeDetails[8]
REF_325(StableDEX.orders) -> Order[REF_324]
REF_326(address) -> REF_325.userAddress
REF_327(\
mapping(address => uint256)) -> userDetails[REF_326]
REF_328(address) -> traderAddresses[0]
REF_329(uint256) -> REF_327[REF_328]
\
REF_331(uint256) -> tradeDetails[5]
TMP_250(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['\
REF_329', 'REF_331'] 
REF_323 (->userDetails) := TMP_250(uint256)",
		node_source_code_lines="[396]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	263 -> 264	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
feeAmount[admin][traderAddresses[0]] = feeAmount[admin][traderAddresses[0]].add(tradeDetails[\
5])

IRs:
REF_332(mapping(address => uint256)) -> feeAmount[admin]
REF_333(address) -> traderAddresses[0]
REF_334(uint256) -> REF_\
332[REF_333]
REF_335(mapping(address => uint256)) -> feeAmount[admin]
REF_336(address) -> traderAddresses[0]
REF_337(uint256) -> \
REF_335[REF_336]
REF_339(uint256) -> tradeDetails[5]
TMP_251(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,\
uint256), arguments:['REF_337', 'REF_339'] 
REF_334 (->feeAmount) := TMP_251(uint256)",
		node_expression="feeAmount[admin][traderAddresses[0]] = feeAmount[admin][traderAddresses[0]].add(tradeDetails[5])",
		node_info_vulnerabilities=None,
		node_irs="REF_332(mapping(address => uint256)) -> feeAmount[admin]
REF_333(address) -> traderAddresses[0]
REF_334(uint256) -> REF_332[REF_\
333]
REF_335(mapping(address => uint256)) -> feeAmount[admin]
REF_336(address) -> traderAddresses[0]
REF_337(uint256) -> REF_335[\
REF_336]
REF_339(uint256) -> tradeDetails[5]
TMP_251(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_337', 'REF_339'] 
REF_334 (->feeAmount) := TMP_251(uint256)",
		node_source_code_lines="[397]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	264 -> 265	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	265 -> 268	[key=0,
		edge_type=next,
		label=Next];
	267	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
feeAmount[admin][Order[orderiD].tokenAddress] = feeAmount[admin][Order[orderiD].tokenAddress]\
.add(tradeDetails[5])

IRs:
REF_358(mapping(address => uint256)) -> feeAmount[admin]
REF_359(StableDEX.orders) -> Order[orderiD]
\
REF_360(address) -> REF_359.tokenAddress
REF_361(uint256) -> REF_358[REF_360]
REF_362(mapping(address => uint256)) -> feeAmount[\
admin]
REF_363(StableDEX.orders) -> Order[orderiD]
REF_364(address) -> REF_363.tokenAddress
REF_365(uint256) -> REF_362[REF_364]
\
REF_367(uint256) -> tradeDetails[5]
TMP_254(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['\
REF_365', 'REF_367'] 
REF_361 (->feeAmount) := TMP_254(uint256)",
		node_expression="feeAmount[admin][Order[orderiD].tokenAddress] = feeAmount[admin][Order[orderiD].tokenAddress].add(tradeDetails[5])",
		node_info_vulnerabilities=None,
		node_irs="REF_358(mapping(address => uint256)) -> feeAmount[admin]
REF_359(StableDEX.orders) -> Order[orderiD]
REF_360(address) -> REF_359.tokenAddress
\
REF_361(uint256) -> REF_358[REF_360]
REF_362(mapping(address => uint256)) -> feeAmount[admin]
REF_363(StableDEX.orders) -> Order[\
orderiD]
REF_364(address) -> REF_363.tokenAddress
REF_365(uint256) -> REF_362[REF_364]
REF_367(uint256) -> tradeDetails[5]
TMP_254(\
uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_365', 'REF_367'] 
REF_361 (->feeAmount) := \
TMP_254(uint256)",
		node_source_code_lines="[402]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
Order[tradeDetails[8]].tradeAmount == 0

IRs:
REF_368(uint256) -> tradeDetails[8]
REF_369(StableDEX.orders) \
-> Order[REF_368]
REF_370(uint256) -> REF_369.tradeAmount
TMP_255(bool) = REF_370 == 0
CONDITION TMP_255",
		node_expression="Order[tradeDetails[8]].tradeAmount == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_368(uint256) -> tradeDetails[8]
REF_369(StableDEX.orders) -> Order[REF_368]
REF_370(uint256) -> REF_369.tradeAmount
TMP_255(\
bool) = REF_370 == 0
CONDITION TMP_255",
		node_source_code_lines="[406]",
		node_type=IF,
		source_file="buggy_21.sol"];
	268 -> 269	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[tradeDetails[8]].status = 2

IRs:
REF_371(uint256) -> tradeDetails[8]
REF_372(StableDEX.orders) \
-> Order[REF_371]
REF_373(uint256) -> REF_372.status
REF_373 (->Order) := 2(uint256)",
		node_expression="Order[tradeDetails[8]].status = 2",
		node_info_vulnerabilities=None,
		node_irs="REF_371(uint256) -> tradeDetails[8]
REF_372(StableDEX.orders) -> Order[REF_371]
REF_373(uint256) -> REF_372.status
REF_373 (->Order) := \
2(uint256)",
		node_source_code_lines="[407]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	269 -> 270	[key=0,
		edge_type=if_true,
		label=True];
	271	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[406, 407, 408]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	269 -> 271	[key=0,
		edge_type=if_false,
		label=False];
	270 -> 271	[key=0,
		edge_type=next,
		label=Next];
	272	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: IF

EXPRESSION:
Order[orderiD].tradeAmount == 0

IRs:
REF_374(StableDEX.orders) -> Order[orderiD]
REF_375(uint256) -> \
REF_374.tradeAmount
TMP_256(bool) = REF_375 == 0
CONDITION TMP_256",
		node_expression="Order[orderiD].tradeAmount == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_374(StableDEX.orders) -> Order[orderiD]
REF_375(uint256) -> REF_374.tradeAmount
TMP_256(bool) = REF_375 == 0
CONDITION TMP_256",
		node_source_code_lines="[409]",
		node_type=IF,
		source_file="buggy_21.sol"];
	271 -> 272	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderiD].status = 2

IRs:
REF_376(StableDEX.orders) -> Order[orderiD]
REF_377(uint256) \
-> REF_376.status
REF_377 (->Order) := 2(uint256)",
		node_expression="Order[orderiD].status = 2",
		node_info_vulnerabilities=None,
		node_irs="REF_376(StableDEX.orders) -> Order[orderiD]
REF_377(uint256) -> REF_376.status
REF_377 (->Order) := 2(uint256)",
		node_source_code_lines="[410]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	272 -> 273	[key=0,
		edge_type=if_true,
		label=True];
	274	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[409, 410, 411]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	272 -> 274	[key=0,
		edge_type=if_false,
		label=False];
	273 -> 274	[key=0,
		edge_type=next,
		label=Next];
	275	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
orderPairStatus[orderiD][tradeDetails[8]] = true

IRs:
REF_378(mapping(uint256 => bool)) -> orderPairStatus[\
orderiD]
REF_379(uint256) -> tradeDetails[8]
REF_380(bool) -> REF_378[REF_379]
REF_380 (->orderPairStatus) := True(bool)",
		node_expression="orderPairStatus[orderiD][tradeDetails[8]] = true",
		node_info_vulnerabilities=None,
		node_irs="REF_378(mapping(uint256 => bool)) -> orderPairStatus[orderiD]
REF_379(uint256) -> tradeDetails[8]
REF_380(bool) -> REF_378[REF_379]
\
REF_380 (->orderPairStatus) := True(bool)",
		node_source_code_lines="[412]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	274 -> 275	[key=0,
		edge_type=next,
		label=Next];
	275 -> 276	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[415]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	276 -> 277	[key=0,
		edge_type=next,
		label=Next];
	278 -> 220	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=StableDEX,
		function_fullname="makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		label="buggy_21.sol_StableDEX_makeOrder(uint256[9],address[2],string,uint8,bytes32,bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, \
344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, \
370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, \
396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	279 -> 219	[key=0,
		edge_type=next,
		label=Next];
	280	[contract_name=StableDEX,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[417, 418, 419]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	281	[contract_name=StableDEX,
		function_fullname="bug_txorigin40(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin40)

IRs:
TMP_258(bool) = tx.origin == owner_txorigin40
\
TMP_259(None) = SOLIDITY_CALL require(bool)(TMP_258)",
		node_expression="require(bool)(tx.origin == owner_txorigin40)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_258(bool) = tx.origin == owner_txorigin40
TMP_259(None) = SOLIDITY_CALL require(bool)(TMP_258)",
		node_source_code_lines="[418]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	280 -> 281	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=StableDEX,
		function_fullname="bug_txorigin40(address)",
		label="buggy_21.sol_StableDEX_bug_txorigin40(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[417, 418, 419]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	282 -> 280	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	284	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="Node Type: IF

EXPRESSION:
Order[orderid].status == 1

IRs:
REF_381(StableDEX.orders) -> Order[orderid]
REF_382(uint256) -> REF_\
381.status
TMP_260(bool) = REF_382 == 1
CONDITION TMP_260",
		node_expression="Order[orderid].status == 1",
		node_info_vulnerabilities=None,
		node_irs="REF_381(StableDEX.orders) -> Order[orderid]
REF_382(uint256) -> REF_381.status
TMP_260(bool) = REF_382 == 1
CONDITION TMP_260",
		node_source_code_lines="[422]",
		node_type=IF,
		source_file="buggy_21.sol"];
	283 -> 284	[key=0,
		edge_type=next,
		label=Next];
	285	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="Node Type: IF

EXPRESSION:
Order[orderid].type_ == 0

IRs:
REF_383(StableDEX.orders) -> Order[orderid]
REF_384(uint256) -> REF_383.type_
\
TMP_261(bool) = REF_384 == 0
CONDITION TMP_261",
		node_expression="Order[orderid].type_ == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_383(StableDEX.orders) -> Order[orderid]
REF_384(uint256) -> REF_383.type_
TMP_261(bool) = REF_384 == 0
CONDITION TMP_261",
		node_source_code_lines="[423]",
		node_type=IF,
		source_file="buggy_21.sol"];
	284 -> 285	[key=0,
		edge_type=if_true,
		label=True];
	290	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[422, 423, 424, 425, 426, 427, 428, 429, 430]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	284 -> 290	[key=0,
		edge_type=if_false,
		label=False];
	286	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress] = userDetails[Order[orderid]\
.userAddress][Order[orderid].tokenAddress].add(Order[orderid].tradeTotal)

IRs:
REF_385(StableDEX.orders) -> Order[orderid]
REF_\
386(address) -> REF_385.userAddress
REF_387(mapping(address => uint256)) -> userDetails[REF_386]
REF_388(StableDEX.orders) -> Order[\
orderid]
REF_389(address) -> REF_388.tokenAddress
REF_390(uint256) -> REF_387[REF_389]
REF_391(StableDEX.orders) -> Order[orderid]
\
REF_392(address) -> REF_391.userAddress
REF_393(mapping(address => uint256)) -> userDetails[REF_392]
REF_394(StableDEX.orders) -> \
Order[orderid]
REF_395(address) -> REF_394.tokenAddress
REF_396(uint256) -> REF_393[REF_395]
REF_398(StableDEX.orders) -> Order[\
orderid]
REF_399(uint256) -> REF_398.tradeTotal
TMP_262(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_396', 'REF_399'] 
REF_390 (->userDetails) := TMP_262(uint256)",
		node_expression="userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress] = userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress]\
.add(Order[orderid].tradeTotal)",
		node_info_vulnerabilities=None,
		node_irs="REF_385(StableDEX.orders) -> Order[orderid]
REF_386(address) -> REF_385.userAddress
REF_387(mapping(address => uint256)) -> userDetails[\
REF_386]
REF_388(StableDEX.orders) -> Order[orderid]
REF_389(address) -> REF_388.tokenAddress
REF_390(uint256) -> REF_387[REF_389]
\
REF_391(StableDEX.orders) -> Order[orderid]
REF_392(address) -> REF_391.userAddress
REF_393(mapping(address => uint256)) -> userDetails[\
REF_392]
REF_394(StableDEX.orders) -> Order[orderid]
REF_395(address) -> REF_394.tokenAddress
REF_396(uint256) -> REF_393[REF_395]
\
REF_398(StableDEX.orders) -> Order[orderid]
REF_399(uint256) -> REF_398.tradeTotal
TMP_262(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_396', 'REF_399'] 
REF_390 (->userDetails) := TMP_262(uint256)",
		node_source_code_lines="[424]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	285 -> 286	[key=0,
		edge_type=if_true,
		label=True];
	287	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress] = userDetails[Order[orderid]\
.userAddress][Order[orderid].tokenAddress].add(Order[orderid].tradeAmount)

IRs:
REF_400(StableDEX.orders) -> Order[orderid]
REF_\
401(address) -> REF_400.userAddress
REF_402(mapping(address => uint256)) -> userDetails[REF_401]
REF_403(StableDEX.orders) -> Order[\
orderid]
REF_404(address) -> REF_403.tokenAddress
REF_405(uint256) -> REF_402[REF_404]
REF_406(StableDEX.orders) -> Order[orderid]
\
REF_407(address) -> REF_406.userAddress
REF_408(mapping(address => uint256)) -> userDetails[REF_407]
REF_409(StableDEX.orders) -> \
Order[orderid]
REF_410(address) -> REF_409.tokenAddress
REF_411(uint256) -> REF_408[REF_410]
REF_413(StableDEX.orders) -> Order[\
orderid]
REF_414(uint256) -> REF_413.tradeAmount
TMP_263(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), \
arguments:['REF_411', 'REF_414'] 
REF_405 (->userDetails) := TMP_263(uint256)",
		node_expression="userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress] = userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress]\
.add(Order[orderid].tradeAmount)",
		node_info_vulnerabilities=None,
		node_irs="REF_400(StableDEX.orders) -> Order[orderid]
REF_401(address) -> REF_400.userAddress
REF_402(mapping(address => uint256)) -> userDetails[\
REF_401]
REF_403(StableDEX.orders) -> Order[orderid]
REF_404(address) -> REF_403.tokenAddress
REF_405(uint256) -> REF_402[REF_404]
\
REF_406(StableDEX.orders) -> Order[orderid]
REF_407(address) -> REF_406.userAddress
REF_408(mapping(address => uint256)) -> userDetails[\
REF_407]
REF_409(StableDEX.orders) -> Order[orderid]
REF_410(address) -> REF_409.tokenAddress
REF_411(uint256) -> REF_408[REF_410]
\
REF_413(StableDEX.orders) -> Order[orderid]
REF_414(uint256) -> REF_413.tradeAmount
TMP_263(uint256) = LIBRARY_CALL, dest:SafeMath, \
function:SafeMath.add(uint256,uint256), arguments:['REF_411', 'REF_414'] 
REF_405 (->userDetails) := TMP_263(uint256)",
		node_source_code_lines="[427]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	285 -> 287	[key=0,
		edge_type=if_false,
		label=False];
	288	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[423, 424, 425, 426, 427, 428]",
		node_type=END_IF,
		source_file="buggy_21.sol"];
	286 -> 288	[key=0,
		edge_type=next,
		label=Next];
	287 -> 288	[key=0,
		edge_type=next,
		label=Next];
	289	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Order[orderid].status = 3

IRs:
REF_415(StableDEX.orders) -> Order[orderid]
REF_416(uint256) \
-> REF_415.status
REF_416 (->Order) := 3(uint256)",
		node_expression="Order[orderid].status = 3",
		node_info_vulnerabilities=None,
		node_irs="REF_415(StableDEX.orders) -> Order[orderid]
REF_416(uint256) -> REF_415.status
REF_416 (->Order) := 3(uint256)",
		node_source_code_lines="[429]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	288 -> 289	[key=0,
		edge_type=next,
		label=Next];
	289 -> 290	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[431]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	290 -> 291	[key=0,
		edge_type=next,
		label=Next];
	292	[contract_name=StableDEX,
		function_fullname="cancelOrder(uint256)",
		label="buggy_21.sol_StableDEX_cancelOrder(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	292 -> 283	[key=0,
		edge_type=next,
		label=Next];
	293	[contract_name=StableDEX,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[433, 434, 435, 436]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	294	[contract_name=StableDEX,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin33)

IRs:
TMP_264(bool) = tx.origin == owner_txorigin33
\
TMP_265(None) = SOLIDITY_CALL require(bool)(TMP_264)",
		node_expression="require(bool)(tx.origin == owner_txorigin33)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_264(bool) = tx.origin == owner_txorigin33
TMP_265(None) = SOLIDITY_CALL require(bool)(TMP_264)",
		node_source_code_lines="[434]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	293 -> 294	[key=0,
		edge_type=next,
		label=Next];
	295	[contract_name=StableDEX,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[435]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	294 -> 295	[key=0,
		edge_type=next,
		label=Next];
	296	[contract_name=StableDEX,
		function_fullname="sendto_txorigin33(address,uint256,address)",
		label="buggy_21.sol_StableDEX_sendto_txorigin33(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[433, 434, 435, 436]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	296 -> 293	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=StableDEX,
		function_fullname="viewTokenBalance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[439, 440, 441]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	298	[contract_name=StableDEX,
		function_fullname="viewTokenBalance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
Token(tokenAddr).balanceOf(baladdr)

IRs:
TMP_267 = CONVERT tokenAddr to Token
TMP_268(uint256) = \
HIGH_LEVEL_CALL, dest:TMP_267(Token), function:balanceOf, arguments:['baladdr']  
RETURN TMP_268",
		node_expression="Token(tokenAddr).balanceOf(baladdr)",
		node_info_vulnerabilities=None,
		node_irs="TMP_267 = CONVERT tokenAddr to Token
TMP_268(uint256) = HIGH_LEVEL_CALL, dest:TMP_267(Token), function:balanceOf, arguments:['baladdr']  
\
RETURN TMP_268",
		node_source_code_lines="[440]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	297 -> 298	[key=0,
		edge_type=next,
		label=Next];
	299	[contract_name=StableDEX,
		function_fullname="viewTokenBalance(address,address)",
		label="buggy_21.sol_StableDEX_viewTokenBalance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[439, 440, 441]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	299 -> 297	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[442, 443, 444, 445]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	301	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin27)

IRs:
TMP_269(bool) = tx.origin == owner_txorigin27
\
TMP_270(None) = SOLIDITY_CALL require(bool)(TMP_269)",
		node_expression="require(bool)(tx.origin == owner_txorigin27)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_269(bool) = tx.origin == owner_txorigin27
TMP_270(None) = SOLIDITY_CALL require(bool)(TMP_269)",
		node_source_code_lines="[443]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	300 -> 301	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_419(None) -> to.call
REF_420(None) -> REF_419.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="REF_419(None) -> to.call
REF_420(None) -> REF_419.value",
		node_source_code_lines="[444]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	301 -> 302	[key=0,
		edge_type=next,
		label=Next];
	303	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin27(address,uint256,address)",
		label="buggy_21.sol_StableDEX_transferTo_txorigin27(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[442, 443, 444, 445]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	303 -> 300	[key=0,
		edge_type=next,
		label=Next];
	304	[contract_name=StableDEX,
		function_fullname="tokenallowance(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[447, 448, 449]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	305	[contract_name=StableDEX,
		function_fullname="tokenallowance(address,address)",
		label="Node Type: RETURN

EXPRESSION:
Token(tokenAddr).allowance(owner,address(this))

IRs:
TMP_272 = CONVERT tokenAddr to Token
TMP_273 = \
CONVERT this to address
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:TMP_272(Token), function:allowance, arguments:['owner', 'TMP_273']  
\
RETURN TMP_274",
		node_expression="Token(tokenAddr).allowance(owner,address(this))",
		node_info_vulnerabilities=None,
		node_irs="TMP_272 = CONVERT tokenAddr to Token
TMP_273 = CONVERT this to address
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:TMP_272(Token), \
function:allowance, arguments:['owner', 'TMP_273']  
RETURN TMP_274",
		node_source_code_lines="[448]",
		node_type=RETURN,
		source_file="buggy_21.sol"];
	304 -> 305	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=StableDEX,
		function_fullname="tokenallowance(address,address)",
		label="buggy_21.sol_StableDEX_tokenallowance(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[447, 448, 449]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	306 -> 304	[key=0,
		edge_type=next,
		label=Next];
	307	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[450, 451, 452, 453]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	308	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner_txorigin31)

IRs:
TMP_275(bool) = tx.origin == owner_txorigin31
\
TMP_276(None) = SOLIDITY_CALL require(bool)(TMP_275)",
		node_expression="require(bool)(tx.origin == owner_txorigin31)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="TMP_275(bool) = tx.origin == owner_txorigin31
TMP_276(None) = SOLIDITY_CALL require(bool)(TMP_275)",
		node_source_code_lines="[451]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.call.value(amount)

IRs:
REF_422(None) -> to.call
REF_423(None) -> REF_422.value",
		node_expression="to.call.value(amount)",
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs="REF_422(None) -> to.call
REF_423(None) -> REF_422.value",
		node_source_code_lines="[452]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	308 -> 309	[key=0,
		edge_type=next,
		label=Next];
	310	[contract_name=StableDEX,
		function_fullname="transferTo_txorigin31(address,uint256,address)",
		label="buggy_21.sol_StableDEX_transferTo_txorigin31(address,uint256,address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[450, 451, 452, 453]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	310 -> 307	[key=0,
		edge_type=next,
		label=Next];
	311	[contract_name=StableDEX,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
tokenId = 0

IRs:
tokenId(uint256) := 0(uint256)",
		node_expression="tokenId = 0",
		node_info_vulnerabilities=None,
		node_irs="tokenId(uint256) := 0(uint256)",
		node_source_code_lines="[85]",
		node_type=OTHER_ENTRYPOINT,
		source_file="buggy_21.sol"];
	312	[contract_name=StableDEX,
		function_fullname="slitherConstructorVariables()",
		label="buggy_21.sol_StableDEX_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, \
82, 83, 84, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, \
150, 151, 152, 153, 166, 167, 168, 169, 178, 179, 180, 181, 189, 190, 191, 192, 204, 205, 206, 229, 230, 231, 232, 251, 252, 253, \
266, 267, 268, 269, 417, 418, 419, 433, 434, 435, 436, 442, 443, 444, 445, 450, 451, 452, 453], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, \
86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, \
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, \
141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, \
167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, \
193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, \
219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, \
245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, \
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, \
297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, \
323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, \
349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, \
375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, \
401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, \
427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, \
453, 454, 455]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	312 -> 311	[key=0,
		edge_type=next,
		label=Next];
	313	[contract_name=StableDEX,
		function_fullname="dexstatuscheck()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[156, 157, 158, 159]",
		node_type=ENTRY_POINT,
		source_file="buggy_21.sol"];
	314	[contract_name=StableDEX,
		function_fullname="dexstatuscheck()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(dexStatus == true)

IRs:
TMP_278(bool) = dexStatus == True
TMP_279(None) = SOLIDITY_\
CALL require(bool)(TMP_278)",
		node_expression="require(bool)(dexStatus == true)",
		node_info_vulnerabilities=None,
		node_irs="TMP_278(bool) = dexStatus == True
TMP_279(None) = SOLIDITY_CALL require(bool)(TMP_278)",
		node_source_code_lines="[157]",
		node_type=EXPRESSION,
		source_file="buggy_21.sol"];
	313 -> 314	[key=0,
		edge_type=next,
		label=Next];
	315	[contract_name=StableDEX,
		function_fullname="dexstatuscheck()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[158]",
		node_type=_,
		source_file="buggy_21.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=StableDEX,
		function_fullname="dexstatuscheck()",
		label="buggy_21.sol_StableDEX_dexstatuscheck()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[156, 157, 158, 159]",
		node_type=FUNCTION_NAME,
		source_file="buggy_21.sol"];
	316 -> 313	[key=0,
		edge_type=next,
		label=Next];
}
