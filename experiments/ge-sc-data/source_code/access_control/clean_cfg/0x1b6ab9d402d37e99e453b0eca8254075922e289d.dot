digraph  {
12 [label="2_ transfer\n12-function_definition-3-3", type_label=function_definition];
27 [label="3_ approve\n27-function_definition-4-4", type_label=function_definition];
42 [label="4_ transferFrom\n42-function_definition-5-5", type_label=function_definition];
61 [label="5_ totalSupply\n61-function_definition-6-6", type_label=function_definition];
69 [label="6_ balanceOf\n69-function_definition-7-7", type_label=function_definition];
81 [label="7_ allowance\n81-function_definition-8-8", type_label=function_definition];
128 [label="12_ mul\n128-function_definition-13-20", type_label=function_definition];
145 [label="13_ if_a == 0\n145-if-14-16", type_label=if];
150 [label="14_ return 0;\n150-return-15-15", type_label=return];
152 [label="16_ uint256 c = a * b;\n152-new_variable-17-17", type_label=new_variable];
153 [label="16_ uint256 c\n153-new_variable-17-17", type_label=new_variable];
160 [label="17_ require(c / a == b);\n160-expression_statement-18-18", type_label=expression_statement];
169 [label="18_ return c;\n169-return-19-19", type_label=return];
171 [label="20_ div\n171-function_definition-21-25", type_label=function_definition];
188 [label="21_ require(b > 0);\n188-expression_statement-22-22", type_label=expression_statement];
195 [label="22_ uint256 c = a / b;\n195-new_variable-23-23", type_label=new_variable];
196 [label="22_ uint256 c\n196-new_variable-23-23", type_label=new_variable];
203 [label="23_ return c;\n203-return-24-24", type_label=return];
205 [label="25_ sub\n205-function_definition-26-30", type_label=function_definition];
222 [label="26_ require(b <= a);\n222-expression_statement-27-27", type_label=expression_statement];
229 [label="27_ uint256 c = a - b;\n229-new_variable-28-28", type_label=new_variable];
230 [label="27_ uint256 c\n230-new_variable-28-28", type_label=new_variable];
237 [label="28_ return c;\n237-return-29-29", type_label=return];
239 [label="30_ add\n239-function_definition-31-35", type_label=function_definition];
256 [label="31_ uint256 c = a + b;\n256-new_variable-32-32", type_label=new_variable];
257 [label="31_ uint256 c\n257-new_variable-32-32", type_label=new_variable];
264 [label="32_ require(c >= a);\n264-expression_statement-33-33", type_label=expression_statement];
271 [label="33_ return c;\n271-return-34-34", type_label=return];
273 [label="35_ mod\n273-function_definition-36-39", type_label=function_definition];
290 [label="36_ require(b != 0);\n290-expression_statement-37-37", type_label=expression_statement];
297 [label="37_ return a % b;\n297-return-38-38", type_label=return];
312 [label="42_ mapping (address => uint256) private _balances;\n312-new_variable-43-43", type_label=new_variable];
319 [label="43_ mapping (address => mapping (address => uint256)) private _allowed;\n319-new_variable-44-44", type_label=new_variable];
328 [label="44_ uint256 private _totalSupply;\n328-new_variable-45-45", type_label=new_variable];
333 [label="45_ totalSupply\n333-function_definition-46-48", type_label=function_definition];
342 [label="46_ return _totalSupply;\n342-return-47-47", type_label=return];
344 [label="48_ balanceOf\n344-function_definition-49-51", type_label=function_definition];
357 [label="49_ return _balances[owner];\n357-return-50-50", type_label=return];
361 [label="51_ allowance\n361-function_definition-52-54", type_label=function_definition];
378 [label="52_ return _allowed[owner][spender];\n378-return-53-53", type_label=return];
384 [label="54_ transfer\n384-function_definition-55-58", type_label=function_definition];
400 [label="55_ _transfer(msg.sender, to, value);\n400-expression_statement-56-56", type_label=expression_statement];
411 [label="56_ return true;\n411-return-57-57", type_label=return];
414 [label="58_ approve\n414-function_definition-59-64", type_label=function_definition];
430 [label="59_ require(spender != address(0));\n430-expression_statement-60-60", type_label=expression_statement];
439 [label="60_ _allowed[msg.sender][spender] = value;\n439-expression_statement-61-61", type_label=expression_statement];
459 [label="62_ return true;\n459-return-63-63", type_label=return];
462 [label="64_ transferFrom\n462-function_definition-65-70", type_label=function_definition];
482 [label="65_ _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n482-expression_statement-66-66", type_label=expression_statement];
503 [label="66_ _transfer(from, to, value);\n503-expression_statement-67-67", type_label=expression_statement];
528 [label="68_ return true;\n528-return-69-69", type_label=return];
531 [label="70_ increaseAllowance\n531-function_definition-71-76", type_label=function_definition];
547 [label="71_ require(spender != address(0));\n547-expression_statement-72-72", type_label=expression_statement];
556 [label="72_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].add(addedValue);\n556-expression_statement-73-73", type_label=expression_statement];
593 [label="74_ return true;\n593-return-75-75", type_label=return];
596 [label="76_ decreaseAllowance\n596-function_definition-77-82", type_label=function_definition];
612 [label="77_ require(spender != address(0));\n612-expression_statement-78-78", type_label=expression_statement];
621 [label="78_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].sub(subtractedValue);\n621-expression_statement-79-79", type_label=expression_statement];
658 [label="80_ return true;\n658-return-81-81", type_label=return];
661 [label="82_ _transfer\n661-function_definition-83-88", type_label=function_definition];
677 [label="83_ require(to != address(0));\n677-expression_statement-84-84", type_label=expression_statement];
686 [label="84_ _balances[from] = _balances[from].sub(value);\n686-expression_statement-85-85", type_label=expression_statement];
699 [label="85_ _balances[to] = _balances[to].add(value);\n699-expression_statement-86-86", type_label=expression_statement];
720 [label="88_ _mint\n720-function_definition-89-94", type_label=function_definition];
732 [label="89_ require(account != address(0));\n732-expression_statement-90-90", type_label=expression_statement];
741 [label="90_ _totalSupply = _totalSupply.add(value);\n741-expression_statement-91-91", type_label=expression_statement];
750 [label="91_ _balances[account] = _balances[account].add(value);\n750-expression_statement-92-92", type_label=expression_statement];
773 [label="94_ _burn\n773-function_definition-95-100", type_label=function_definition];
785 [label="95_ require(account != address(0));\n785-expression_statement-96-96", type_label=expression_statement];
794 [label="96_ _totalSupply = _totalSupply.sub(value);\n794-expression_statement-97-97", type_label=expression_statement];
803 [label="97_ _balances[account] = _balances[account].sub(value);\n803-expression_statement-98-98", type_label=expression_statement];
826 [label="100_ _burnFrom\n826-function_definition-101-105", type_label=function_definition];
838 [label="101_ _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(value);\n838-expression_statement-102-102", type_label=expression_statement];
859 [label="102_ _burn(account, value);\n859-expression_statement-103-103", type_label=expression_statement];
888 [label="107_ string public constant name = \"NACDAQ\";\n888-new_variable-108-108", type_label=new_variable];
895 [label="108_ string public constant symbol = \"NCQ\";\n895-new_variable-109-109", type_label=new_variable];
902 [label="109_ uint8 public constant decimals = 8;\n902-new_variable-110-110", type_label=new_variable];
910 [label="113_ address _account = 0x05157a9e6619Ad56398728F730cC5c23Af91629b;\n910-new_variable-114-114", type_label=new_variable];
911 [label="113_ address _account\n911-new_variable-114-114", type_label=new_variable];
916 [label="114_ uint256 _amount = 1000000000 * 100000000;\n916-new_variable-115-115", type_label=new_variable];
917 [label="114_ uint256 _amount\n917-new_variable-115-115", type_label=new_variable];
924 [label="115_ _mint(_account, _amount);\n924-expression_statement-116-116", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
128 -> 152  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
145 -> 150  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
145 -> 152  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
150 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
152 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 169  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
169 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
171 -> 188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
188 -> 195  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
195 -> 203  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
203 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
205 -> 222  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
222 -> 229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
229 -> 237  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
237 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
239 -> 256  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
256 -> 264  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
264 -> 271  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
271 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
273 -> 290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
290 -> 297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
297 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
312 -> 319  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
319 -> 328  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
333 -> 342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
342 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
344 -> 357  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
357 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
361 -> 378  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
378 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
384 -> 400  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
400 -> 411  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
411 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
414 -> 430  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
430 -> 439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
459 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
462 -> 482  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
482 -> 503  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
528 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
531 -> 547  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
547 -> 556  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
593 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
596 -> 612  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
612 -> 621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
658 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
661 -> 677  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
677 -> 686  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
686 -> 699  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
720 -> 732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
732 -> 741  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
741 -> 750  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
773 -> 785  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
785 -> 794  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
794 -> 803  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
826 -> 838  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
838 -> 859  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
888 -> 895  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
895 -> 902  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
910 -> 916  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
916 -> 924  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
