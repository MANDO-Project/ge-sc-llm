digraph  {
13 [label="2_ withdrawAll_txorigin2\n13-function_definition-3-6", type_label=function_definition];
25 [label="3_ require(tx.origin == owner_txorigin2);\n25-expression_statement-4-4", type_label=expression_statement];
34 [label="4_ _recipient.transfer(address(this).balance);\n34-expression_statement-5-5", type_label=expression_statement];
45 [label="6_ address public owner;\n45-new_variable-7-7", type_label=new_variable];
50 [label="7_ sendto_txorigin17\n50-function_definition-8-11", type_label=function_definition];
66 [label="8_ require (tx.origin == owner_txorigin17);\n66-expression_statement-9-9", type_label=expression_statement];
75 [label="9_ receiver.transfer(amount);\n75-expression_statement-10-10", type_label=expression_statement];
82 [label="11_ address public newOwner;\n82-new_variable-12-12", type_label=new_variable];
87 [label="12_ transferTo_txorigin27\n87-function_definition-13-16", type_label=function_definition];
103 [label="13_ require(tx.origin == owner_txorigin27);\n103-expression_statement-14-14", type_label=expression_statement];
112 [label="14_ to.call.value(amount);\n112-expression_statement-15-15", type_label=expression_statement];
133 [label="18_ owner = msg.sender;\n133-expression_statement-19-19", type_label=expression_statement];
139 [label="20_ bug_txorigin32\n139-function_definition-21-23", type_label=function_definition];
147 [label="21_ require(tx.origin == owner_txorigin32);\n147-expression_statement-22-22", type_label=expression_statement];
156 [label="23_ modifier onlyOwner {\n        require(msg.sender == owner || msg.sender == address(this));\n        _;\n    }\n156-expression_statement-24-27", type_label=expression_statement];
159 [label="24_ require(msg.sender == owner || msg.sender == address(this));\n159-expression_statement-25-25", type_label=expression_statement];
176 [label="25_ _;\n176-expression_statement-26-26", type_label=expression_statement];
178 [label="27_ transferOwnership\n178-function_definition-28-30", type_label=function_definition];
185 [label="27_ onlyOwner\n185-expression_statement-28-28", type_label=expression_statement];
188 [label="28_ newOwner = _newOwner;\n188-expression_statement-29-29", type_label=expression_statement];
192 [label="30_ withdrawAll_txorigin38\n192-function_definition-31-34", type_label=function_definition];
204 [label="31_ require(tx.origin == owner_txorigin38);\n204-expression_statement-32-32", type_label=expression_statement];
213 [label="32_ _recipient.transfer(address(this).balance);\n213-expression_statement-33-33", type_label=expression_statement];
227 [label="36_ mul\n227-function_definition-37-44", type_label=function_definition];
244 [label="37_ if_a == 0\n244-if-38-40", type_label=if];
1741 [label="37_ end_if", type_label=end_if];
249 [label="38_ return 0;\n249-return-39-39", type_label=return];
251 [label="40_ uint256 c = a * b;\n251-new_variable-41-41", type_label=new_variable];
252 [label="40_ uint256 c\n252-new_variable-41-41", type_label=new_variable];
259 [label="41_ assert(c / a == b);\n259-expression_statement-42-42", type_label=expression_statement];
268 [label="42_ return c;\n268-return-43-43", type_label=return];
270 [label="44_ div\n270-function_definition-45-48", type_label=function_definition];
287 [label="45_ uint256 c = a / b;\n287-new_variable-46-46", type_label=new_variable];
288 [label="45_ uint256 c\n288-new_variable-46-46", type_label=new_variable];
295 [label="46_ return c;\n295-return-47-47", type_label=return];
297 [label="48_ sub\n297-function_definition-49-52", type_label=function_definition];
314 [label="49_ assert(b <= a);\n314-expression_statement-50-50", type_label=expression_statement];
321 [label="50_ return a - b;\n321-return-51-51", type_label=return];
325 [label="52_ add\n325-function_definition-53-57", type_label=function_definition];
342 [label="53_ uint256 c = a + b;\n342-new_variable-54-54", type_label=new_variable];
343 [label="53_ uint256 c\n343-new_variable-54-54", type_label=new_variable];
350 [label="54_ assert(c >= a);\n350-expression_statement-55-55", type_label=expression_statement];
357 [label="55_ return c;\n357-return-56-56", type_label=return];
359 [label="57_ ceil\n359-function_definition-58-62", type_label=function_definition];
376 [label="58_ uint256 c = add(a,m);\n376-new_variable-59-59", type_label=new_variable];
377 [label="58_ uint256 c\n377-new_variable-59-59", type_label=new_variable];
387 [label="59_ uint256 d = sub(c,1);\n387-new_variable-60-60", type_label=new_variable];
388 [label="59_ uint256 d\n388-new_variable-60-60", type_label=new_variable];
398 [label="60_ return mul(div(d,m),m);\n398-return-61-61", type_label=return];
413 [label="64_ balanceOf\n413-function_definition-65-65", type_label=function_definition];
425 [label="65_ bug_txorigin4\n425-function_definition-66-68", type_label=function_definition];
433 [label="66_ require(tx.origin == owner_txorigin4);\n433-expression_statement-67-67", type_label=expression_statement];
442 [label="68_ transferFrom\n442-function_definition-69-69", type_label=function_definition];
461 [label="69_ transferTo_txorigin7\n461-function_definition-70-73", type_label=function_definition];
477 [label="70_ require(tx.origin == owner_txorigin7);\n477-expression_statement-71-71", type_label=expression_statement];
486 [label="71_ to.call.value(amount);\n486-expression_statement-72-72", type_label=expression_statement];
495 [label="73_ transfer\n495-function_definition-74-74", type_label=function_definition];
510 [label="74_ transferTo_txorigin23\n510-function_definition-75-78", type_label=function_definition];
526 [label="75_ require(tx.origin == owner_txorigin23);\n526-expression_statement-76-76", type_label=expression_statement];
535 [label="76_ to.call.value(amount);\n535-expression_statement-77-77", type_label=expression_statement];
550 [label="80_ sendto_txorigin37\n550-function_definition-81-84", type_label=function_definition];
566 [label="81_ require (tx.origin == owner_txorigin37);\n566-expression_statement-82-82", type_label=expression_statement];
575 [label="82_ receiver.transfer(amount);\n575-expression_statement-83-83", type_label=expression_statement];
582 [label="84_ Token public token;\n582-new_variable-85-85", type_label=new_variable];
588 [label="85_ transferTo_txorigin3\n588-function_definition-86-89", type_label=function_definition];
604 [label="86_ require(tx.origin == owner_txorigin3);\n604-expression_statement-87-87", type_label=expression_statement];
613 [label="87_ to.call.value(amount);\n613-expression_statement-88-88", type_label=expression_statement];
622 [label="89_ bool lock;\n622-new_variable-90-90", type_label=new_variable];
626 [label="90_ sendto_txorigin9\n626-function_definition-91-94", type_label=function_definition];
642 [label="91_ require (tx.origin == owner_txorigin9);\n642-expression_statement-92-92", type_label=expression_statement];
651 [label="92_ receiver.transfer(amount);\n651-expression_statement-93-93", type_label=expression_statement];
658 [label="94_ uint256 public minstakeTokens;\n658-new_variable-95-95", type_label=new_variable];
663 [label="95_ sendto_txorigin25\n663-function_definition-96-99", type_label=function_definition];
679 [label="96_ require (tx.origin == owner_txorigin25);\n679-expression_statement-97-97", type_label=expression_statement];
688 [label="97_ receiver.transfer(amount);\n688-expression_statement-98-98", type_label=expression_statement];
695 [label="99_ uint256 private basePercent = 200;\n695-new_variable-100-100", type_label=new_variable];
706 [label="101_ transferTo_txorigin19\n706-function_definition-102-105", type_label=function_definition];
722 [label="102_ require(tx.origin == owner_txorigin19);\n722-expression_statement-103-103", type_label=expression_statement];
731 [label="103_ to.call.value(amount);\n731-expression_statement-104-104", type_label=expression_statement];
740 [label="105_ uint256 public stakeTime = 1814400;\n740-new_variable-106-106", type_label=new_variable];
746 [label="106_ withdrawAll_txorigin26\n746-function_definition-107-110", type_label=function_definition];
758 [label="107_ require(tx.origin == owner_txorigin26);\n758-expression_statement-108-108", type_label=expression_statement];
767 [label="108_ _recipient.transfer(address(this).balance);\n767-expression_statement-109-109", type_label=expression_statement];
778 [label="110_ uint public stakePercentage = 30;\n778-new_variable-111-111", type_label=new_variable];
784 [label="111_ transferTo_txorigin31\n784-function_definition-112-115", type_label=function_definition];
800 [label="112_ require(tx.origin == owner_txorigin31);\n800-expression_statement-113-113", type_label=expression_statement];
809 [label="113_ to.call.value(amount);\n809-expression_statement-114-114", type_label=expression_statement];
832 [label="116_ sendto_txorigin13\n832-function_definition-117-120", type_label=function_definition];
848 [label="117_ require (tx.origin == owner_txorigin13);\n848-expression_statement-118-118", type_label=expression_statement];
857 [label="118_ receiver.transfer(amount);\n857-expression_statement-119-119", type_label=expression_statement];
878 [label="121_ struct stake{\n        uint256 time;\n        bool redeem;\n        uint256 tokens;\n    }\n878-expression_statement-122-126", type_label=expression_statement];
892 [label="126_ bug_txorigin20\n892-function_definition-127-129", type_label=function_definition];
900 [label="127_ require(tx.origin == owner_txorigin20);\n900-expression_statement-128-128", type_label=expression_statement];
909 [label="129_ mapping(address => stake) staker;\n909-new_variable-130-130", type_label=new_variable];
922 [label="131_ token = Token(tokenContractAddress);\n922-expression_statement-132-132", type_label=expression_statement];
929 [label="132_ owner = msg.sender;\n929-expression_statement-133-133", type_label=expression_statement];
935 [label="133_ minstakeTokens = 500 * 10 ** uint(10);\n935-expression_statement-134-134", type_label=expression_statement];
945 [label="135_ withdrawAll_txorigin14\n945-function_definition-136-139", type_label=function_definition];
957 [label="136_ require(tx.origin == owner_txorigin14);\n957-expression_statement-137-137", type_label=expression_statement];
966 [label="137_ _recipient.transfer(address(this).balance);\n966-expression_statement-138-138", type_label=expression_statement];
977 [label="139_ startStaking\n977-function_definition-140-147", type_label=function_definition];
985 [label="140_ require(stakeTokens >= minstakeTokens);\n985-expression_statement-141-141", type_label=expression_statement];
992 [label="141_ require(token.balanceOf(msg.sender) >= stakeTokens + findOnePercent(stakeTokens));\n992-expression_statement-142-142", type_label=expression_statement];
1011 [label="142_ require(token.transferFrom(msg.sender, address(this), stakeTokens  + findOnePercent(stakeTokens)));\n1011-expression_statement-143-143", type_label=expression_statement];
1034 [label="143_ staker[msg.sender].time = now;\n1034-expression_statement-144-144", type_label=expression_statement];
1044 [label="144_ staker[msg.sender].tokens =  staker[msg.sender].tokens + stakeTokens;\n1044-expression_statement-145-145", type_label=expression_statement];
1084 [label="147_ withdrawAll_txorigin30\n1084-function_definition-148-151", type_label=function_definition];
1096 [label="148_ require(tx.origin == owner_txorigin30);\n1096-expression_statement-149-149", type_label=expression_statement];
1105 [label="149_ _recipient.transfer(address(this).balance);\n1105-expression_statement-150-150", type_label=expression_statement];
1116 [label="151_ redeem\n1116-function_definition-152-161", type_label=function_definition];
1120 [label="152_ require(!lock);\n1120-expression_statement-153-153", type_label=expression_statement];
1126 [label="153_ require(!staker[msg.sender].redeem);\n1126-expression_statement-154-154", type_label=expression_statement];
1138 [label="154_ require(staker[msg.sender].time + stakeTime <= now);\n1138-expression_statement-155-155", type_label=expression_statement];
1153 [label="155_ require(token.transfer(msg.sender,staker[msg.sender].tokens));\n1153-expression_statement-156-156", type_label=expression_statement];
1173 [label="156_ require(token.transferFrom(owner, msg.sender ,staker[msg.sender].tokens * stakePercentage * 100 / 10000));\n1173-expression_statement-157-157", type_label=expression_statement];
1229 [label="158_ staker[msg.sender].redeem = true;\n1229-expression_statement-159-159", type_label=expression_statement];
1240 [label="159_ staker[msg.sender].tokens = 0;\n1240-expression_statement-160-160", type_label=expression_statement];
1250 [label="161_ bug_txorigin8\n1250-function_definition-162-164", type_label=function_definition];
1258 [label="162_ require(tx.origin == owner_txorigin8);\n1258-expression_statement-163-163", type_label=expression_statement];
1267 [label="164_ changeStakeTokens\n1267-function_definition-165-167", type_label=function_definition];
1274 [label="164_ onlyOwner\n1274-expression_statement-165-165", type_label=expression_statement];
1277 [label="165_ minstakeTokens = _NewTokensThreshold * 10 ** uint(10);\n1277-expression_statement-166-166", type_label=expression_statement];
1287 [label="167_ transferTo_txorigin39\n1287-function_definition-168-171", type_label=function_definition];
1303 [label="168_ require(tx.origin == owner_txorigin39);\n1303-expression_statement-169-169", type_label=expression_statement];
1312 [label="169_ to.call.value(amount);\n1312-expression_statement-170-170", type_label=expression_statement];
1321 [label="171_ changeStakeTime\n1321-function_definition-172-174", type_label=function_definition];
1328 [label="171_ onlyOwner\n1328-expression_statement-172-172", type_label=expression_statement];
1331 [label="172_ stakeTime = _newStakeTime;\n1331-expression_statement-173-173", type_label=expression_statement];
1335 [label="174_ bug_txorigin36\n1335-function_definition-175-177", type_label=function_definition];
1343 [label="175_ require(tx.origin == owner_txorigin36);\n1343-expression_statement-176-176", type_label=expression_statement];
1352 [label="177_ changeStakingPercentage\n1352-function_definition-178-180", type_label=function_definition];
1359 [label="177_ onlyOwner\n1359-expression_statement-178-178", type_label=expression_statement];
1362 [label="178_ stakePercentage = _newStakePercentage;\n1362-expression_statement-179-179", type_label=expression_statement];
1366 [label="180_ transferTo_txorigin35\n1366-function_definition-181-184", type_label=function_definition];
1382 [label="181_ require(tx.origin == owner_txorigin35);\n1382-expression_statement-182-182", type_label=expression_statement];
1391 [label="182_ to.call.value(amount);\n1391-expression_statement-183-183", type_label=expression_statement];
1400 [label="184_ lockWithdrawals\n1400-function_definition-185-187", type_label=function_definition];
1403 [label="184_ onlyOwner\n1403-expression_statement-185-185", type_label=expression_statement];
1406 [label="185_ lock = true;\n1406-expression_statement-186-186", type_label=expression_statement];
1411 [label="187_ bug_txorigin40\n1411-function_definition-188-190", type_label=function_definition];
1419 [label="188_ require(tx.origin == owner_txorigin40);\n1419-expression_statement-189-189", type_label=expression_statement];
1428 [label="190_ findOnePercent\n1428-function_definition-191-195", type_label=function_definition];
1441 [label="191_ uint256 roundValue = value.ceil(basePercent);\n1441-new_variable-192-192", type_label=new_variable];
1442 [label="191_ uint256 roundValue\n1442-new_variable-192-192", type_label=new_variable];
1452 [label="192_ uint256 onePercent = roundValue.mul(basePercent).div(10000);\n1452-new_variable-193-193", type_label=new_variable];
1453 [label="192_ uint256 onePercent\n1453-new_variable-193-193", type_label=new_variable];
1468 [label="193_ return onePercent;\n1468-return-194-194", type_label=return];
1470 [label="195_ sendto_txorigin33\n1470-function_definition-196-199", type_label=function_definition];
1486 [label="196_ require (tx.origin == owner_txorigin33);\n1486-expression_statement-197-197", type_label=expression_statement];
1495 [label="197_ receiver.transfer(amount);\n1495-expression_statement-198-198", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(1741, (37, 4), (39, 5))";
13 -> 25  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
25 -> 34  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
50 -> 66  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
66 -> 75  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 103  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
103 -> 112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
139 -> 147  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
159 -> 176  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
178 -> 188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
192 -> 204  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
204 -> 213  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
227 -> 244  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
244 -> 249  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
244 -> "(1741, (37, 4), (39, 5))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
249 -> "(1741, (37, 4), (39, 5))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
249 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
251 -> 259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
259 -> 268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
268 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
270 -> 287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
287 -> 295  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
295 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
297 -> 314  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
314 -> 321  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
321 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
325 -> 342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
342 -> 350  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
350 -> 357  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
357 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
359 -> 376  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
376 -> 387  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
387 -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
398 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
425 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
461 -> 477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
477 -> 486  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
510 -> 526  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
526 -> 535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
550 -> 566  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
566 -> 575  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
588 -> 604  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
604 -> 613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
626 -> 642  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
642 -> 651  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
663 -> 679  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
679 -> 688  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
706 -> 722  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
722 -> 731  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
746 -> 758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
758 -> 767  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
784 -> 800  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
800 -> 809  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
832 -> 848  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
848 -> 857  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
892 -> 900  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
922 -> 929  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
929 -> 935  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
945 -> 957  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
957 -> 966  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
977 -> 985  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
985 -> 992  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
992 -> 1011  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1011 -> 1034  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1034 -> 1044  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1084 -> 1096  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1096 -> 1105  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1116 -> 1120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1120 -> 1126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1126 -> 1138  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1138 -> 1153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1153 -> 1173  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1229 -> 1240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1250 -> 1258  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1267 -> 1277  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1287 -> 1303  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1303 -> 1312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1321 -> 1331  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1335 -> 1343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1352 -> 1362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1366 -> 1382  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1382 -> 1391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1400 -> 1406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1411 -> 1419  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1428 -> 1441  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1441 -> 1452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1452 -> 1468  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1468 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1470 -> 1486  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1486 -> 1495  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1741, (37, 4), (39, 5))" -> 251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1741, (37, 4), (39, 5))" -> 251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
}
