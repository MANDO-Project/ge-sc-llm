digraph  {
12 [label="3_ mul\n12-function_definition-4-8", type_label=function_definition];
29 [label="4_ uint256 c = a * b;\n29-new_variable-5-5", type_label=new_variable];
30 [label="4_ uint256 c\n30-new_variable-5-5", type_label=new_variable];
37 [label="5_ assert(a == 0 || c / a == b);\n37-expression_statement-6-6", type_label=expression_statement];
50 [label="6_ return c;\n50-return-7-7", type_label=return];
52 [label="8_ div\n52-function_definition-9-12", type_label=function_definition];
69 [label="9_ uint256 c = a / b;\n69-new_variable-10-10", type_label=new_variable];
70 [label="9_ uint256 c\n70-new_variable-10-10", type_label=new_variable];
77 [label="10_ return c;\n77-return-11-11", type_label=return];
79 [label="12_ sub\n79-function_definition-13-16", type_label=function_definition];
96 [label="13_ assert(b <= a);\n96-expression_statement-14-14", type_label=expression_statement];
103 [label="14_ return a - b;\n103-return-15-15", type_label=return];
107 [label="16_ add\n107-function_definition-17-21", type_label=function_definition];
124 [label="17_ uint256 c = a + b;\n124-new_variable-18-18", type_label=new_variable];
125 [label="17_ uint256 c\n125-new_variable-18-18", type_label=new_variable];
132 [label="18_ assert(c >= a);\n132-expression_statement-19-19", type_label=expression_statement];
139 [label="19_ return c;\n139-return-20-20", type_label=return];
144 [label="24_ uint256 public totalSupply;\n144-new_variable-25-25", type_label=new_variable];
149 [label="25_ balanceOf\n149-function_definition-26-26", type_label=function_definition];
156 [label="25_ constant\n156-expression_statement-26-26", type_label=expression_statement];
162 [label="26_ transfer\n162-function_definition-27-27", type_label=function_definition];
197 [label="31_ allowance\n197-function_definition-32-32", type_label=function_definition];
208 [label="31_ constant\n208-expression_statement-32-32", type_label=expression_statement];
214 [label="32_ transferFrom\n214-function_definition-33-33", type_label=function_definition];
233 [label="33_ approve\n233-function_definition-34-34", type_label=function_definition];
273 [label="39_ mapping(address => uint256) balances;\n273-new_variable-40-40", type_label=new_variable];
279 [label="40_ transfer\n279-function_definition-41-48", type_label=function_definition];
295 [label="41_ require(_to != address(0));\n295-expression_statement-42-42", type_label=expression_statement];
304 [label="42_ require(_value <= balances[msg.sender]);\n304-expression_statement-43-43", type_label=expression_statement];
315 [label="43_ balances[msg.sender] = balances[msg.sender].sub(_value);\n315-expression_statement-44-44", type_label=expression_statement];
332 [label="44_ balances[_to] = balances[_to].add(_value);\n332-expression_statement-45-45", type_label=expression_statement];
355 [label="46_ return true;\n355-return-47-47", type_label=return];
358 [label="48_ balanceOf\n358-function_definition-49-51", type_label=function_definition];
365 [label="48_ constant\n365-expression_statement-49-49", type_label=expression_statement];
373 [label="49_ return balances[_owner];\n373-return-50-50", type_label=return];
386 [label="54_ mapping (address => mapping (address => uint256)) internal allowed;\n386-new_variable-55-55", type_label=new_variable];
395 [label="55_ transferFrom\n395-function_definition-56-65", type_label=function_definition];
415 [label="56_ require(_to != address(0));\n415-expression_statement-57-57", type_label=expression_statement];
424 [label="57_ require(_value <= balances[_from]);\n424-expression_statement-58-58", type_label=expression_statement];
433 [label="58_ require(_value <= allowed[_from][msg.sender]);\n433-expression_statement-59-59", type_label=expression_statement];
446 [label="59_ balances[_from] = balances[_from].sub(_value);\n446-expression_statement-60-60", type_label=expression_statement];
459 [label="60_ balances[_to] = balances[_to].add(_value);\n459-expression_statement-61-61", type_label=expression_statement];
472 [label="61_ allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n472-expression_statement-62-62", type_label=expression_statement];
501 [label="63_ return true;\n501-return-64-64", type_label=return];
504 [label="65_ approve\n504-function_definition-66-70", type_label=function_definition];
520 [label="66_ allowed[msg.sender][_spender] = _value;\n520-expression_statement-67-67", type_label=expression_statement];
540 [label="68_ return true;\n540-return-69-69", type_label=return];
543 [label="70_ allowance\n543-function_definition-71-73", type_label=function_definition];
554 [label="70_ constant\n554-expression_statement-71-71", type_label=expression_statement];
562 [label="71_ return allowed[_owner][_spender];\n562-return-72-72", type_label=return];
568 [label="73_ increaseApproval\n568-function_definition-74-78", type_label=function_definition];
585 [label="74_ allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n585-expression_statement-75-75", type_label=expression_statement];
622 [label="76_ return true;\n622-return-77-77", type_label=return];
625 [label="78_ decreaseApproval\n625-function_definition-79-88", type_label=function_definition];
642 [label="79_ uint oldValue = allowed[msg.sender][_spender];\n642-new_variable-80-80", type_label=new_variable];
643 [label="79_ uint oldValue\n643-new_variable-80-80", type_label=new_variable];
654 [label="80_ if__subtractedValue > oldValue\n654-if-81-85", type_label=if];
659 [label="81_ allowed[msg.sender][_spender] = 0;\n659-expression_statement-82-82", type_label=expression_statement];
670 [label="83_ allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n670-expression_statement-84-84", type_label=expression_statement];
701 [label="86_ return true;\n701-return-87-87", type_label=return];
707 [label="91_ address public owner;\n707-new_variable-92-92", type_label=new_variable];
714 [label="93_ owner = msg.sender;\n714-expression_statement-94-94", type_label=expression_statement];
720 [label="95_ modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n720-expression_statement-96-99", type_label=expression_statement];
723 [label="96_ require(msg.sender == owner);\n723-expression_statement-97-97", type_label=expression_statement];
732 [label="97_ _;\n732-expression_statement-98-98", type_label=expression_statement];
734 [label="99_ transferOwnership\n734-function_definition-100-103", type_label=function_definition];
741 [label="99_ onlyOwner\n741-expression_statement-100-100", type_label=expression_statement];
744 [label="100_ require(newOwner != address(0));\n744-expression_statement-101-101", type_label=expression_statement];
753 [label="101_ owner = newOwner;\n753-expression_statement-102-102", type_label=expression_statement];
766 [label="106_ string public symbol = \"VIR\";\n766-new_variable-107-107", type_label=new_variable];
773 [label="107_ string public name = \"Virtual Reality Token\";\n773-new_variable-108-108", type_label=new_variable];
780 [label="108_ uint public decimals = 18;\n780-new_variable-109-109", type_label=new_variable];
786 [label="109_ uint private constant initialSupply = 25e9 * 1e18;\n786-new_variable-110-110", type_label=new_variable];
796 [label="112_ owner = msg.sender;\n796-expression_statement-113-113", type_label=expression_statement];
802 [label="113_ totalSupply = initialSupply;\n802-expression_statement-114-114", type_label=expression_statement];
806 [label="114_ balances[owner] = initialSupply;\n806-expression_statement-115-115", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
685;
12 -> 29  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
37 -> 50  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
50 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
52 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
69 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
79 -> 96  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
96 -> 103  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
103 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
107 -> 124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
124 -> 132  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
132 -> 139  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
139 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
279 -> 295  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
295 -> 304  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
304 -> 315  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
315 -> 332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
355 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
358 -> 373  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
373 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
395 -> 415  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
415 -> 424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
424 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
433 -> 446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
446 -> 459  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
459 -> 472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
501 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
504 -> 520  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
540 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
543 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
562 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
568 -> 585  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
622 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
625 -> 642  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
642 -> 654  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
654 -> 659  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
654 -> 670  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
659 -> 685  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
701 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
723 -> 732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
734 -> 744  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
744 -> 753  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
766 -> 773  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
773 -> 780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
780 -> 786  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
796 -> 802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
802 -> 806  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
