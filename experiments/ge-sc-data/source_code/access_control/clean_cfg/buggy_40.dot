digraph  {
13 [label="2_ add\n13-function_definition-3-7", type_label=function_definition];
30 [label="3_ uint256 c = a + b;\n30-new_variable-4-4", type_label=new_variable];
31 [label="3_ uint256 c\n31-new_variable-4-4", type_label=new_variable];
38 [label="4_ require(c >= a, \"SafeMath: addition overflow\");\n38-expression_statement-5-5", type_label=expression_statement];
48 [label="5_ return c;\n48-return-6-6", type_label=return];
50 [label="7_ sub\n50-function_definition-8-12", type_label=function_definition];
67 [label="8_ require(b <= a, \"SafeMath: subtraction overflow\");\n67-expression_statement-9-9", type_label=expression_statement];
77 [label="9_ uint256 c = a - b;\n77-new_variable-10-10", type_label=new_variable];
78 [label="9_ uint256 c\n78-new_variable-10-10", type_label=new_variable];
85 [label="10_ return c;\n85-return-11-11", type_label=return];
87 [label="12_ mul\n87-function_definition-13-20", type_label=function_definition];
104 [label="13_ if_a == 0\n104-if-14-16", type_label=if];
1787 [label="13_ end_if", type_label=end_if];
109 [label="14_ return 0;\n109-return-15-15", type_label=return];
111 [label="16_ uint256 c = a * b;\n111-new_variable-17-17", type_label=new_variable];
112 [label="16_ uint256 c\n112-new_variable-17-17", type_label=new_variable];
119 [label="17_ require(c / a == b, \"SafeMath: multiplication overflow\");\n119-expression_statement-18-18", type_label=expression_statement];
131 [label="18_ return c;\n131-return-19-19", type_label=return];
133 [label="20_ div\n133-function_definition-21-25", type_label=function_definition];
150 [label="21_ require(b > 0, \"SafeMath: division by zero\");\n150-expression_statement-22-22", type_label=expression_statement];
160 [label="22_ uint256 c = a / b;\n160-new_variable-23-23", type_label=new_variable];
161 [label="22_ uint256 c\n161-new_variable-23-23", type_label=new_variable];
168 [label="23_ return c;\n168-return-24-24", type_label=return];
170 [label="25_ mod\n170-function_definition-26-29", type_label=function_definition];
187 [label="26_ require(b != 0, \"SafeMath: modulo by zero\");\n187-expression_statement-27-27", type_label=expression_statement];
197 [label="27_ return a % b;\n197-return-28-28", type_label=return];
204 [label="31_ totalSupply\n204-function_definition-32-32", type_label=function_definition];
212 [label="32_ balanceOf\n212-function_definition-33-33", type_label=function_definition];
224 [label="33_ transfer\n224-function_definition-34-34", type_label=function_definition];
239 [label="34_ allowance\n239-function_definition-35-35", type_label=function_definition];
255 [label="35_ approve\n255-function_definition-36-36", type_label=function_definition];
270 [label="36_ transferFrom\n270-function_definition-37-37", type_label=function_definition];
328 [label="42_ sendto_txorigin17\n328-function_definition-43-46", type_label=function_definition];
344 [label="43_ require (tx.origin == owner_txorigin17);\n344-expression_statement-44-44", type_label=expression_statement];
353 [label="44_ receiver.transfer(amount);\n353-expression_statement-45-45", type_label=expression_statement];
360 [label="46_ mapping (address => uint256) private _balances;\n360-new_variable-47-47", type_label=new_variable];
367 [label="47_ sendto_txorigin37\n367-function_definition-48-51", type_label=function_definition];
383 [label="48_ require (tx.origin == owner_txorigin37);\n383-expression_statement-49-49", type_label=expression_statement];
392 [label="49_ receiver.transfer(amount);\n392-expression_statement-50-50", type_label=expression_statement];
399 [label="51_ mapping (address => mapping (address => uint256)) private _allowances;\n399-new_variable-52-52", type_label=new_variable];
408 [label="52_ transferTo_txorigin3\n408-function_definition-53-56", type_label=function_definition];
424 [label="53_ require(tx.origin == owner_txorigin3);\n424-expression_statement-54-54", type_label=expression_statement];
433 [label="54_ to.call.value(amount);\n433-expression_statement-55-55", type_label=expression_statement];
442 [label="56_ uint256 private _totalSupply;\n442-new_variable-57-57", type_label=new_variable];
447 [label="57_ totalSupply\n447-function_definition-58-60", type_label=function_definition];
456 [label="58_ return _totalSupply;\n456-return-59-59", type_label=return];
458 [label="60_ withdrawAll_txorigin26\n458-function_definition-61-64", type_label=function_definition];
470 [label="61_ require(tx.origin == owner_txorigin26);\n470-expression_statement-62-62", type_label=expression_statement];
479 [label="62_ _recipient.transfer(address(this).balance);\n479-expression_statement-63-63", type_label=expression_statement];
490 [label="64_ balanceOf\n490-function_definition-65-67", type_label=function_definition];
503 [label="65_ return _balances[account];\n503-return-66-66", type_label=return];
507 [label="67_ bug_txorigin20\n507-function_definition-68-70", type_label=function_definition];
515 [label="68_ require(tx.origin == owner_txorigin20);\n515-expression_statement-69-69", type_label=expression_statement];
524 [label="70_ transfer\n524-function_definition-71-74", type_label=function_definition];
540 [label="71_ _transfer(msg.sender, recipient, amount);\n540-expression_statement-72-72", type_label=expression_statement];
551 [label="72_ return true;\n551-return-73-73", type_label=return];
554 [label="74_ bug_txorigin32\n554-function_definition-75-77", type_label=function_definition];
562 [label="75_ require(tx.origin == owner_txorigin32);\n562-expression_statement-76-76", type_label=expression_statement];
571 [label="77_ allowance\n571-function_definition-78-80", type_label=function_definition];
588 [label="78_ return _allowances[owner][spender];\n588-return-79-79", type_label=return];
594 [label="80_ withdrawAll_txorigin38\n594-function_definition-81-84", type_label=function_definition];
606 [label="81_ require(tx.origin == owner_txorigin38);\n606-expression_statement-82-82", type_label=expression_statement];
615 [label="82_ _recipient.transfer(address(this).balance);\n615-expression_statement-83-83", type_label=expression_statement];
626 [label="84_ approve\n626-function_definition-85-88", type_label=function_definition];
642 [label="85_ _approve(msg.sender, spender, value);\n642-expression_statement-86-86", type_label=expression_statement];
653 [label="86_ return true;\n653-return-87-87", type_label=return];
656 [label="88_ bug_txorigin4\n656-function_definition-89-91", type_label=function_definition];
664 [label="89_ require(tx.origin == owner_txorigin4);\n664-expression_statement-90-90", type_label=expression_statement];
673 [label="91_ transferFrom\n673-function_definition-92-96", type_label=function_definition];
693 [label="92_ _transfer(sender, recipient, amount);\n693-expression_statement-93-93", type_label=expression_statement];
702 [label="93_ _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n702-expression_statement-94-94", type_label=expression_statement];
724 [label="94_ return true;\n724-return-95-95", type_label=return];
727 [label="96_ transferTo_txorigin7\n727-function_definition-97-100", type_label=function_definition];
743 [label="97_ require(tx.origin == owner_txorigin7);\n743-expression_statement-98-98", type_label=expression_statement];
752 [label="98_ to.call.value(amount);\n752-expression_statement-99-99", type_label=expression_statement];
761 [label="100_ increaseAllowance\n761-function_definition-101-104", type_label=function_definition];
777 [label="101_ _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n777-expression_statement-102-102", type_label=expression_statement];
799 [label="102_ return true;\n799-return-103-103", type_label=return];
802 [label="104_ transferTo_txorigin23\n802-function_definition-105-108", type_label=function_definition];
818 [label="105_ require(tx.origin == owner_txorigin23);\n818-expression_statement-106-106", type_label=expression_statement];
827 [label="106_ to.call.value(amount);\n827-expression_statement-107-107", type_label=expression_statement];
836 [label="108_ decreaseAllowance\n836-function_definition-109-112", type_label=function_definition];
852 [label="109_ _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n852-expression_statement-110-110", type_label=expression_statement];
874 [label="110_ return true;\n874-return-111-111", type_label=return];
877 [label="112_ withdrawAll_txorigin14\n877-function_definition-113-116", type_label=function_definition];
889 [label="113_ require(tx.origin == owner_txorigin14);\n889-expression_statement-114-114", type_label=expression_statement];
898 [label="114_ _recipient.transfer(address(this).balance);\n898-expression_statement-115-115", type_label=expression_statement];
909 [label="116_ _transfer\n909-function_definition-117-123", type_label=function_definition];
925 [label="117_ require(sender != address(0), \"ERC20: transfer from the zero address\");\n925-expression_statement-118-118", type_label=expression_statement];
937 [label="118_ require(recipient != address(0), \"ERC20: transfer to the zero address\");\n937-expression_statement-119-119", type_label=expression_statement];
949 [label="119_ _balances[sender] = _balances[sender].sub(amount);\n949-expression_statement-120-120", type_label=expression_statement];
962 [label="120_ _balances[recipient] = _balances[recipient].add(amount);\n962-expression_statement-121-121", type_label=expression_statement];
983 [label="123_ withdrawAll_txorigin30\n983-function_definition-124-127", type_label=function_definition];
995 [label="124_ require(tx.origin == owner_txorigin30);\n995-expression_statement-125-125", type_label=expression_statement];
1004 [label="125_ _recipient.transfer(address(this).balance);\n1004-expression_statement-126-126", type_label=expression_statement];
1015 [label="127_ _mint\n1015-function_definition-128-133", type_label=function_definition];
1027 [label="128_ require(account != address(0), \"ERC20: mint to the zero address\");\n1027-expression_statement-129-129", type_label=expression_statement];
1039 [label="129_ _totalSupply = _totalSupply.add(amount);\n1039-expression_statement-130-130", type_label=expression_statement];
1048 [label="130_ _balances[account] = _balances[account].add(amount);\n1048-expression_statement-131-131", type_label=expression_statement];
1071 [label="133_ bug_txorigin8\n1071-function_definition-134-136", type_label=function_definition];
1079 [label="134_ require(tx.origin == owner_txorigin8);\n1079-expression_statement-135-135", type_label=expression_statement];
1088 [label="136_ _burn\n1088-function_definition-137-142", type_label=function_definition];
1100 [label="137_ require(account != address(0), \"ERC20: burn from the zero address\");\n1100-expression_statement-138-138", type_label=expression_statement];
1112 [label="138_ _totalSupply = _totalSupply.sub(value);\n1112-expression_statement-139-139", type_label=expression_statement];
1121 [label="139_ _balances[account] = _balances[account].sub(value);\n1121-expression_statement-140-140", type_label=expression_statement];
1144 [label="142_ transferTo_txorigin39\n1144-function_definition-143-146", type_label=function_definition];
1160 [label="143_ require(tx.origin == owner_txorigin39);\n1160-expression_statement-144-144", type_label=expression_statement];
1169 [label="144_ to.call.value(amount);\n1169-expression_statement-145-145", type_label=expression_statement];
1178 [label="146_ _approve\n1178-function_definition-147-152", type_label=function_definition];
1194 [label="147_ require(owner != address(0), \"ERC20: approve from the zero address\");\n1194-expression_statement-148-148", type_label=expression_statement];
1206 [label="148_ require(spender != address(0), \"ERC20: approve to the zero address\");\n1206-expression_statement-149-149", type_label=expression_statement];
1218 [label="149_ _allowances[owner][spender] = value;\n1218-expression_statement-150-150", type_label=expression_statement];
1234 [label="152_ bug_txorigin36\n1234-function_definition-153-155", type_label=function_definition];
1242 [label="153_ require(tx.origin == owner_txorigin36);\n1242-expression_statement-154-154", type_label=expression_statement];
1251 [label="155_ _burnFrom\n1251-function_definition-156-159", type_label=function_definition];
1263 [label="156_ _burn(account, amount);\n1263-expression_statement-157-157", type_label=expression_statement];
1270 [label="157_ _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n1270-expression_statement-158-158", type_label=expression_statement];
1292 [label="159_ transferTo_txorigin35\n1292-function_definition-160-163", type_label=function_definition];
1308 [label="160_ require(tx.origin == owner_txorigin35);\n1308-expression_statement-161-161", type_label=expression_statement];
1317 [label="161_ to.call.value(amount);\n1317-expression_statement-162-162", type_label=expression_statement];
1332 [label="165_ sendto_txorigin9\n1332-function_definition-166-169", type_label=function_definition];
1348 [label="166_ require (tx.origin == owner_txorigin9);\n1348-expression_statement-167-167", type_label=expression_statement];
1357 [label="167_ receiver.transfer(amount);\n1357-expression_statement-168-168", type_label=expression_statement];
1364 [label="169_ string private _name;\n1364-new_variable-170-170", type_label=new_variable];
1369 [label="170_ sendto_txorigin25\n1369-function_definition-171-174", type_label=function_definition];
1385 [label="171_ require (tx.origin == owner_txorigin25);\n1385-expression_statement-172-172", type_label=expression_statement];
1394 [label="172_ receiver.transfer(amount);\n1394-expression_statement-173-173", type_label=expression_statement];
1401 [label="174_ string private _symbol;\n1401-new_variable-175-175", type_label=new_variable];
1406 [label="175_ transferTo_txorigin19\n1406-function_definition-176-179", type_label=function_definition];
1422 [label="176_ require(tx.origin == owner_txorigin19);\n1422-expression_statement-177-177", type_label=expression_statement];
1431 [label="177_ to.call.value(amount);\n1431-expression_statement-178-178", type_label=expression_statement];
1440 [label="179_ uint8 private _decimals;\n1440-new_variable-180-180", type_label=new_variable];
1459 [label="181_ _name = name;\n1459-expression_statement-182-182", type_label=expression_statement];
1463 [label="182_ _symbol = symbol;\n1463-expression_statement-183-183", type_label=expression_statement];
1467 [label="183_ _decimals = decimals;\n1467-expression_statement-184-184", type_label=expression_statement];
1471 [label="185_ bug_txorigin40\n1471-function_definition-186-188", type_label=function_definition];
1479 [label="186_ require(tx.origin == owner_txorigin40);\n1479-expression_statement-187-187", type_label=expression_statement];
1488 [label="188_ name\n1488-function_definition-189-191", type_label=function_definition];
1497 [label="189_ return _name;\n1497-return-190-190", type_label=return];
1499 [label="191_ sendto_txorigin33\n1499-function_definition-192-195", type_label=function_definition];
1515 [label="192_ require (tx.origin == owner_txorigin33);\n1515-expression_statement-193-193", type_label=expression_statement];
1524 [label="193_ receiver.transfer(amount);\n1524-expression_statement-194-194", type_label=expression_statement];
1531 [label="195_ symbol\n1531-function_definition-196-198", type_label=function_definition];
1540 [label="196_ return _symbol;\n1540-return-197-197", type_label=return];
1542 [label="198_ transferTo_txorigin27\n1542-function_definition-199-202", type_label=function_definition];
1558 [label="199_ require(tx.origin == owner_txorigin27);\n1558-expression_statement-200-200", type_label=expression_statement];
1567 [label="200_ to.call.value(amount);\n1567-expression_statement-201-201", type_label=expression_statement];
1576 [label="202_ decimals\n1576-function_definition-203-205", type_label=function_definition];
1585 [label="203_ return _decimals;\n1585-return-204-204", type_label=return];
1587 [label="205_ transferTo_txorigin31\n1587-function_definition-206-209", type_label=function_definition];
1603 [label="206_ require(tx.origin == owner_txorigin31);\n1603-expression_statement-207-207", type_label=expression_statement];
1612 [label="207_ to.call.value(amount);\n1612-expression_statement-208-208", type_label=expression_statement];
1631 [label="211_ ERC20Detailed(\"SimpleSwap Coin\", \"SWAP\", 8)\n1631-expression_statement-212-212", type_label=expression_statement];
1642 [label="212_ _mint(msg.sender, 100000000 * (10 ** 8));\n1642-expression_statement-213-213", type_label=expression_statement];
1656 [label="214_ sendto_txorigin13\n1656-function_definition-215-218", type_label=function_definition];
1672 [label="215_ require (tx.origin == owner_txorigin13);\n1672-expression_statement-216-216", type_label=expression_statement];
1681 [label="216_ receiver.transfer(amount);\n1681-expression_statement-217-217", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(1787, (13, 8), (15, 9))";
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
50 -> 67  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
67 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 85  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
85 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
87 -> 104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
104 -> 109  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
104 -> "(1787, (13, 8), (15, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
109 -> "(1787, (13, 8), (15, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
109 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
111 -> 119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
119 -> 131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
131 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
133 -> 150  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
150 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
168 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
170 -> 187  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
187 -> 197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
197 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
328 -> 344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
344 -> 353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
367 -> 383  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
383 -> 392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
408 -> 424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
424 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
447 -> 456  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
456 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
458 -> 470  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
470 -> 479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
490 -> 503  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
503 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
507 -> 515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
524 -> 540  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
540 -> 551  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
551 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
554 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
571 -> 588  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
588 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
594 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
606 -> 615  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
626 -> 642  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
642 -> 653  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
653 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
656 -> 664  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
673 -> 693  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
693 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
702 -> 724  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
724 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
727 -> 743  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
743 -> 752  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
761 -> 777  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
777 -> 799  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
799 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
802 -> 818  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
818 -> 827  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
836 -> 852  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
852 -> 874  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
874 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
877 -> 889  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
889 -> 898  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
909 -> 925  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
925 -> 937  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
937 -> 949  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
949 -> 962  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
983 -> 995  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
995 -> 1004  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1015 -> 1027  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1027 -> 1039  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1039 -> 1048  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1071 -> 1079  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1088 -> 1100  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1100 -> 1112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1112 -> 1121  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1144 -> 1160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1160 -> 1169  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1178 -> 1194  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1194 -> 1206  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1206 -> 1218  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1234 -> 1242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1251 -> 1263  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1263 -> 1270  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1292 -> 1308  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1308 -> 1317  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1332 -> 1348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1348 -> 1357  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1369 -> 1385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1385 -> 1394  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1406 -> 1422  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1422 -> 1431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1459 -> 1463  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1463 -> 1467  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1471 -> 1479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1488 -> 1497  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1497 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1499 -> 1515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1515 -> 1524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1531 -> 1540  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1540 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1542 -> 1558  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1558 -> 1567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1576 -> 1585  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1585 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1587 -> 1603  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1603 -> 1612  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1656 -> 1672  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1672 -> 1681  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1787, (13, 8), (15, 9))" -> 111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1787, (13, 8), (15, 9))" -> 111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
}
