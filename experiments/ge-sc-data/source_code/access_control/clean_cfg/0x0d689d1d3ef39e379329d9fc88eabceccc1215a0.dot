digraph  {
13 [label="2_ add\n13-function_definition-3-6", type_label=function_definition];
31 [label="3_ c = a + b;\n31-expression_statement-4-4", type_label=expression_statement];
37 [label="4_ require(c >= a);\n37-expression_statement-5-5", type_label=expression_statement];
44 [label="6_ sub\n44-function_definition-7-10", type_label=function_definition];
62 [label="7_ require(b <= a);\n62-expression_statement-8-8", type_label=expression_statement];
69 [label="8_ c = a - b;\n69-expression_statement-9-9", type_label=expression_statement];
75 [label="10_ mul\n75-function_definition-11-14", type_label=function_definition];
93 [label="11_ c = a * b;\n93-expression_statement-12-12", type_label=expression_statement];
99 [label="12_ require(a == 0 || c / a == b);\n99-expression_statement-13-13", type_label=expression_statement];
112 [label="14_ div\n112-function_definition-15-18", type_label=function_definition];
130 [label="15_ require(b > 0);\n130-expression_statement-16-16", type_label=expression_statement];
137 [label="16_ c = a / b;\n137-expression_statement-17-17", type_label=expression_statement];
146 [label="20_ name\n146-function_definition-21-21", type_label=function_definition];
149 [label="20_ constant\n149-expression_statement-21-21", type_label=expression_statement];
155 [label="21_ symbol\n155-function_definition-22-22", type_label=function_definition];
158 [label="21_ constant\n158-expression_statement-22-22", type_label=expression_statement];
164 [label="22_ decimals\n164-function_definition-23-23", type_label=function_definition];
167 [label="22_ constant\n167-expression_statement-23-23", type_label=expression_statement];
173 [label="23_ totalSupply\n173-function_definition-24-24", type_label=function_definition];
176 [label="23_ constant\n176-expression_statement-24-24", type_label=expression_statement];
182 [label="24_ balanceOf\n182-function_definition-25-25", type_label=function_definition];
189 [label="24_ constant\n189-expression_statement-25-25", type_label=expression_statement];
196 [label="25_ allowance\n196-function_definition-26-26", type_label=function_definition];
207 [label="25_ constant\n207-expression_statement-26-26", type_label=expression_statement];
214 [label="26_ transfer\n214-function_definition-27-27", type_label=function_definition];
230 [label="27_ approve\n230-function_definition-28-28", type_label=function_definition];
246 [label="28_ transferFrom\n246-function_definition-29-29", type_label=function_definition];
297 [label="33_ address public owner;\n297-new_variable-34-34", type_label=new_variable];
302 [label="34_ address public newOwner;\n302-new_variable-35-35", type_label=new_variable];
317 [label="36_ Owned\n317-function_definition-37-39", type_label=function_definition];
321 [label="37_ owner = msg.sender;\n321-expression_statement-38-38", type_label=expression_statement];
327 [label="39_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n327-expression_statement-40-43", type_label=expression_statement];
330 [label="40_ require(msg.sender == owner);\n330-expression_statement-41-41", type_label=expression_statement];
339 [label="41_ _;\n339-expression_statement-42-42", type_label=expression_statement];
341 [label="43_ transferOwnership\n341-function_definition-44-46", type_label=function_definition];
348 [label="43_ onlyOwner\n348-expression_statement-44-44", type_label=expression_statement];
351 [label="44_ newOwner = _newOwner;\n351-expression_statement-45-45", type_label=expression_statement];
355 [label="46_ acceptOwnership\n355-function_definition-47-52", type_label=function_definition];
359 [label="47_ require(msg.sender == newOwner);\n359-expression_statement-48-48", type_label=expression_statement];
368 [label="48_ OwnershipTransferred(owner, newOwner);\n368-expression_statement-49-49", type_label=expression_statement];
375 [label="49_ owner = newOwner;\n375-expression_statement-50-50", type_label=expression_statement];
379 [label="50_ newOwner = address(0);\n379-expression_statement-51-51", type_label=expression_statement];
391 [label="54_ bool public stopped = false;\n391-new_variable-55-55", type_label=new_variable];
398 [label="55_ modifier stoppable {\n        assert (!stopped);\n        _;\n    }\n398-expression_statement-56-59", type_label=expression_statement];
401 [label="56_ assert (!stopped);\n401-expression_statement-57-57", type_label=expression_statement];
407 [label="57_ _;\n407-expression_statement-58-58", type_label=expression_statement];
409 [label="59_ stop\n409-function_definition-60-62", type_label=function_definition];
412 [label="59_ onlyOwner\n412-expression_statement-60-60", type_label=expression_statement];
415 [label="60_ stopped = true;\n415-expression_statement-61-61", type_label=expression_statement];
420 [label="62_ start\n420-function_definition-63-65", type_label=function_definition];
423 [label="62_ onlyOwner\n423-expression_statement-63-63", type_label=expression_statement];
426 [label="63_ stopped = false;\n426-expression_statement-64-64", type_label=expression_statement];
434 [label="67_ Utils\n434-function_definition-68-69", type_label=function_definition];
438 [label="69_ modifier validAddress(address _address) {\n        require(_address != 0x0);\n        _;\n    }\n438-expression_statement-70-73", type_label=expression_statement];
445 [label="70_ require(_address != 0x0);\n445-expression_statement-71-71", type_label=expression_statement];
452 [label="71_ _;\n452-expression_statement-72-72", type_label=expression_statement];
454 [label="73_ modifier notThis(address _address) {\n        require(_address != address(this));\n        _;\n    }\n454-expression_statement-74-77", type_label=expression_statement];
461 [label="74_ require(_address != address(this));\n461-expression_statement-75-75", type_label=expression_statement];
470 [label="75_ _;\n470-expression_statement-76-76", type_label=expression_statement];
489 [label="80_ ERC20Interface public zygomaAddress;\n489-new_variable-81-81", type_label=new_variable];
495 [label="81_ BuyZygoma\n495-function_definition-82-84", type_label=function_definition];
504 [label="82_ zygomaAddress = _zygomaAddress;\n504-expression_statement-83-83", type_label=expression_statement];
508 [label="84_ withdrawTo\n508-function_definition-85-91", type_label=function_definition];
519 [label="85_ onlyOwner\n519-expression_statement-86-86", type_label=expression_statement];
521 [label="86_ notThis(to)\n521-expression_statement-87-87", type_label=expression_statement];
526 [label="88_ require(amount <= this.balance);\n526-expression_statement-89-89", type_label=expression_statement];
535 [label="89_ to.transfer(amount);\n535-expression_statement-90-90", type_label=expression_statement];
542 [label="91_ withdrawERC20TokenTo\n542-function_definition-92-99", type_label=function_definition];
558 [label="92_ onlyOwner\n558-expression_statement-93-93", type_label=expression_statement];
560 [label="93_ validAddress(token)\n560-expression_statement-94-94", type_label=expression_statement];
564 [label="94_ validAddress(to)\n564-expression_statement-95-95", type_label=expression_statement];
568 [label="95_ notThis(to)\n568-expression_statement-96-96", type_label=expression_statement];
573 [label="97_ assert(token.transfer(to, amount));\n573-expression_statement-98-98", type_label=expression_statement];
585 [label="99_ buyToken\n585-function_definition-100-105", type_label=function_definition];
589 [label="101_ require(!stopped && msg.value >= 0.001 ether);\n589-expression_statement-102-102", type_label=expression_statement];
602 [label="102_ uint amount = msg.value * 350000;\n602-new_variable-103-103", type_label=new_variable];
603 [label="102_ uint amount\n603-new_variable-103-103", type_label=new_variable];
612 [label="103_ assert(zygomaAddress.transfer(msg.sender, amount));\n612-expression_statement-104-104", type_label=expression_statement];
629 [label="105_ stoppable\n629-expression_statement-106-106", type_label=expression_statement];
632 [label="106_ buyToken();\n632-expression_statement-107-107", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
297 -> 302  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
317 -> 321  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
330 -> 339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
341 -> 351  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
355 -> 359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
359 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
368 -> 375  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
375 -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
391 -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 407  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
409 -> 415  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
420 -> 426  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
445 -> 452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
461 -> 470  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
495 -> 504  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
508 -> 526  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
519 -> 521  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
526 -> 535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
542 -> 573  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
558 -> 560  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
560 -> 564  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
564 -> 568  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
585 -> 589  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
589 -> 602  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
602 -> 612  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
