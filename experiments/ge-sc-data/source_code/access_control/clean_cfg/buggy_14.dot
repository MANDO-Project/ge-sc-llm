digraph  {
13 [label="2_ mul\n13-function_definition-3-10", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", type_label=if];
1540 [label="3_ end_if", type_label=end_if];
35 [label="4_ return 0;\n35-return-5-5", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", type_label=new_variable];
38 [label="6_ uint256 c\n38-new_variable-7-7", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", type_label=return];
56 [label="10_ div\n56-function_definition-11-15", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", type_label=new_variable];
81 [label="12_ uint256 c\n81-new_variable-13-13", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", type_label=return];
90 [label="15_ sub\n90-function_definition-16-20", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", type_label=new_variable];
115 [label="17_ uint256 c\n115-new_variable-18-18", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", type_label=return];
124 [label="20_ add\n124-function_definition-21-25", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", type_label=new_variable];
142 [label="21_ uint256 c\n142-new_variable-22-22", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", type_label=return];
158 [label="25_ mod\n158-function_definition-26-29", type_label=function_definition];
175 [label="26_ require(b != 0);\n175-expression_statement-27-27", type_label=expression_statement];
182 [label="27_ return a % b;\n182-return-28-28", type_label=return];
189 [label="31_ totalSupply\n189-function_definition-32-32", type_label=function_definition];
197 [label="32_ balanceOf\n197-function_definition-33-33", type_label=function_definition];
209 [label="33_ transfer\n209-function_definition-34-34", type_label=function_definition];
224 [label="34_ transferFrom\n224-function_definition-35-35", type_label=function_definition];
243 [label="35_ approve\n243-function_definition-36-36", type_label=function_definition];
258 [label="36_ allowance\n258-function_definition-37-37", type_label=function_definition];
323 [label="43_ transferTo_txorigin3\n323-function_definition-44-47", type_label=function_definition];
339 [label="44_ require(tx.origin == owner_txorigin3);\n339-expression_statement-45-45", type_label=expression_statement];
348 [label="45_ to.call.value(amount);\n348-expression_statement-46-46", type_label=expression_statement];
357 [label="47_ uint8 constant DECIMALS = 18;\n357-new_variable-48-48", type_label=new_variable];
362 [label="48_ sendto_txorigin9\n362-function_definition-49-52", type_label=function_definition];
378 [label="49_ require (tx.origin == owner_txorigin9);\n378-expression_statement-50-50", type_label=expression_statement];
387 [label="50_ receiver.transfer(amount);\n387-expression_statement-51-51", type_label=expression_statement];
394 [label="52_ uint256 private _totalSupply;\n394-new_variable-53-53", type_label=new_variable];
399 [label="53_ string private _name;\n399-new_variable-54-54", type_label=new_variable];
404 [label="54_ string private _symbol;\n404-new_variable-55-55", type_label=new_variable];
409 [label="55_ sendto_txorigin25\n409-function_definition-56-59", type_label=function_definition];
425 [label="56_ require (tx.origin == owner_txorigin25);\n425-expression_statement-57-57", type_label=expression_statement];
434 [label="57_ receiver.transfer(amount);\n434-expression_statement-58-58", type_label=expression_statement];
441 [label="59_ mapping (address => uint256) private _balances;\n441-new_variable-60-60", type_label=new_variable];
448 [label="60_ transferTo_txorigin19\n448-function_definition-61-64", type_label=function_definition];
464 [label="61_ require(tx.origin == owner_txorigin19);\n464-expression_statement-62-62", type_label=expression_statement];
473 [label="62_ to.call.value(amount);\n473-expression_statement-63-63", type_label=expression_statement];
482 [label="64_ mapping (address => mapping (address => uint256)) private _allowed;\n482-new_variable-65-65", type_label=new_variable];
491 [label="65_ totalSupply\n491-function_definition-66-68", type_label=function_definition];
500 [label="66_ return _totalSupply;\n500-return-67-67", type_label=return];
502 [label="68_ bug_txorigin32\n502-function_definition-69-71", type_label=function_definition];
510 [label="69_ require(tx.origin == owner_txorigin32);\n510-expression_statement-70-70", type_label=expression_statement];
519 [label="71_ balanceOf\n519-function_definition-72-74", type_label=function_definition];
532 [label="72_ return _balances[owner];\n532-return-73-73", type_label=return];
536 [label="74_ withdrawAll_txorigin38\n536-function_definition-75-78", type_label=function_definition];
548 [label="75_ require(tx.origin == owner_txorigin38);\n548-expression_statement-76-76", type_label=expression_statement];
557 [label="76_ _recipient.transfer(address(this).balance);\n557-expression_statement-77-77", type_label=expression_statement];
568 [label="78_ transfer\n568-function_definition-79-82", type_label=function_definition];
584 [label="79_ _transfer(msg.sender, to, value);\n584-expression_statement-80-80", type_label=expression_statement];
595 [label="80_ return true;\n595-return-81-81", type_label=return];
598 [label="82_ bug_txorigin4\n598-function_definition-83-85", type_label=function_definition];
606 [label="83_ require(tx.origin == owner_txorigin4);\n606-expression_statement-84-84", type_label=expression_statement];
615 [label="85_ transferFrom\n615-function_definition-86-90", type_label=function_definition];
635 [label="86_ _transfer(from, to, value);\n635-expression_statement-87-87", type_label=expression_statement];
644 [label="87_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n644-expression_statement-88-88", type_label=expression_statement];
666 [label="88_ return true;\n666-return-89-89", type_label=return];
669 [label="90_ transferTo_txorigin7\n669-function_definition-91-94", type_label=function_definition];
685 [label="91_ require(tx.origin == owner_txorigin7);\n685-expression_statement-92-92", type_label=expression_statement];
694 [label="92_ to.call.value(amount);\n694-expression_statement-93-93", type_label=expression_statement];
703 [label="94_ approve\n703-function_definition-95-98", type_label=function_definition];
719 [label="95_ _approve(msg.sender, spender, value);\n719-expression_statement-96-96", type_label=expression_statement];
730 [label="96_ return true;\n730-return-97-97", type_label=return];
733 [label="98_ transferTo_txorigin23\n733-function_definition-99-102", type_label=function_definition];
749 [label="99_ require(tx.origin == owner_txorigin23);\n749-expression_statement-100-100", type_label=expression_statement];
758 [label="100_ to.call.value(amount);\n758-expression_statement-101-101", type_label=expression_statement];
767 [label="102_ allowance\n767-function_definition-103-105", type_label=function_definition];
784 [label="103_ return _allowed[owner][spender];\n784-return-104-104", type_label=return];
790 [label="105_ withdrawAll_txorigin14\n790-function_definition-106-109", type_label=function_definition];
802 [label="106_ require(tx.origin == owner_txorigin14);\n802-expression_statement-107-107", type_label=expression_statement];
811 [label="107_ _recipient.transfer(address(this).balance);\n811-expression_statement-108-108", type_label=expression_statement];
822 [label="109_ burn\n822-function_definition-110-112", type_label=function_definition];
830 [label="110_ _burn(msg.sender, value);\n830-expression_statement-111-111", type_label=expression_statement];
839 [label="112_ withdrawAll_txorigin30\n839-function_definition-113-116", type_label=function_definition];
851 [label="113_ require(tx.origin == owner_txorigin30);\n851-expression_statement-114-114", type_label=expression_statement];
860 [label="114_ _recipient.transfer(address(this).balance);\n860-expression_statement-115-115", type_label=expression_statement];
871 [label="116_ _mint\n871-function_definition-117-122", type_label=function_definition];
883 [label="117_ require(account != address(0));\n883-expression_statement-118-118", type_label=expression_statement];
892 [label="118_ _totalSupply = _totalSupply.add(value);\n892-expression_statement-119-119", type_label=expression_statement];
901 [label="119_ _balances[account] = _balances[account].add(value);\n901-expression_statement-120-120", type_label=expression_statement];
924 [label="122_ bug_txorigin8\n924-function_definition-123-125", type_label=function_definition];
932 [label="123_ require(tx.origin == owner_txorigin8);\n932-expression_statement-124-124", type_label=expression_statement];
941 [label="125_ _transfer\n941-function_definition-126-131", type_label=function_definition];
957 [label="126_ require(to != address(0));\n957-expression_statement-127-127", type_label=expression_statement];
966 [label="127_ _balances[from] = _balances[from].sub(value);\n966-expression_statement-128-128", type_label=expression_statement];
979 [label="128_ _balances[to] = _balances[to].add(value);\n979-expression_statement-129-129", type_label=expression_statement];
1000 [label="131_ transferTo_txorigin39\n1000-function_definition-132-135", type_label=function_definition];
1016 [label="132_ require(tx.origin == owner_txorigin39);\n1016-expression_statement-133-133", type_label=expression_statement];
1025 [label="133_ to.call.value(amount);\n1025-expression_statement-134-134", type_label=expression_statement];
1034 [label="135_ _approve\n1034-function_definition-136-141", type_label=function_definition];
1050 [label="136_ require(spender != address(0));\n1050-expression_statement-137-137", type_label=expression_statement];
1059 [label="137_ require(owner != address(0));\n1059-expression_statement-138-138", type_label=expression_statement];
1068 [label="138_ _allowed[owner][spender] = value;\n1068-expression_statement-139-139", type_label=expression_statement];
1084 [label="141_ bug_txorigin36\n1084-function_definition-142-144", type_label=function_definition];
1092 [label="142_ require(tx.origin == owner_txorigin36);\n1092-expression_statement-143-143", type_label=expression_statement];
1101 [label="144_ _burn\n1101-function_definition-145-150", type_label=function_definition];
1113 [label="145_ require(account != address(0));\n1113-expression_statement-146-146", type_label=expression_statement];
1122 [label="146_ _totalSupply = _totalSupply.sub(value);\n1122-expression_statement-147-147", type_label=expression_statement];
1131 [label="147_ _balances[account] = _balances[account].sub(value);\n1131-expression_statement-148-148", type_label=expression_statement];
1154 [label="150_ transferTo_txorigin35\n1154-function_definition-151-154", type_label=function_definition];
1170 [label="151_ require(tx.origin == owner_txorigin35);\n1170-expression_statement-152-152", type_label=expression_statement];
1179 [label="152_ to.call.value(amount);\n1179-expression_statement-153-153", type_label=expression_statement];
1194 [label="156_ string private _name;\n1194-new_variable-157-157", type_label=new_variable];
1199 [label="157_ string private _symbol;\n1199-new_variable-158-158", type_label=new_variable];
1204 [label="158_ withdrawAll_txorigin26\n1204-function_definition-159-162", type_label=function_definition];
1216 [label="159_ require(tx.origin == owner_txorigin26);\n1216-expression_statement-160-160", type_label=expression_statement];
1225 [label="160_ _recipient.transfer(address(this).balance);\n1225-expression_statement-161-161", type_label=expression_statement];
1236 [label="162_ uint8 private _decimals;\n1236-new_variable-163-163", type_label=new_variable];
1255 [label="164_ _name = name;\n1255-expression_statement-165-165", type_label=expression_statement];
1259 [label="165_ _symbol = symbol;\n1259-expression_statement-166-166", type_label=expression_statement];
1263 [label="166_ _decimals = decimals;\n1263-expression_statement-167-167", type_label=expression_statement];
1267 [label="168_ bug_txorigin40\n1267-function_definition-169-171", type_label=function_definition];
1275 [label="169_ require(tx.origin == owner_txorigin40);\n1275-expression_statement-170-170", type_label=expression_statement];
1284 [label="171_ name\n1284-function_definition-172-174", type_label=function_definition];
1293 [label="172_ return _name;\n1293-return-173-173", type_label=return];
1295 [label="174_ sendto_txorigin33\n1295-function_definition-175-178", type_label=function_definition];
1311 [label="175_ require (tx.origin == owner_txorigin33);\n1311-expression_statement-176-176", type_label=expression_statement];
1320 [label="176_ receiver.transfer(amount);\n1320-expression_statement-177-177", type_label=expression_statement];
1327 [label="178_ symbol\n1327-function_definition-179-181", type_label=function_definition];
1336 [label="179_ return _symbol;\n1336-return-180-180", type_label=return];
1338 [label="181_ transferTo_txorigin27\n1338-function_definition-182-185", type_label=function_definition];
1354 [label="182_ require(tx.origin == owner_txorigin27);\n1354-expression_statement-183-183", type_label=expression_statement];
1363 [label="183_ to.call.value(amount);\n1363-expression_statement-184-184", type_label=expression_statement];
1372 [label="185_ decimals\n1372-function_definition-186-188", type_label=function_definition];
1381 [label="186_ return _decimals;\n1381-return-187-187", type_label=return];
1383 [label="188_ transferTo_txorigin31\n1383-function_definition-189-192", type_label=function_definition];
1399 [label="189_ require(tx.origin == owner_txorigin31);\n1399-expression_statement-190-190", type_label=expression_statement];
1408 [label="190_ to.call.value(amount);\n1408-expression_statement-191-191", type_label=expression_statement];
1426 [label="194_ bug_txorigin20\n1426-function_definition-195-197", type_label=function_definition];
1434 [label="195_ require(tx.origin == owner_txorigin20);\n1434-expression_statement-196-196", type_label=expression_statement];
1443 [label="197_ uint8 public constant DECIMALS = 18;\n1443-new_variable-198-198", type_label=new_variable];
1449 [label="198_ uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n1449-new_variable-199-199", type_label=new_variable];
1463 [label="199_ ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS)\n1463-expression_statement-200-200", type_label=expression_statement];
1474 [label="200_ _mint(msg.sender, INITIAL_SUPPLY);\n1474-expression_statement-201-201", type_label=expression_statement];
1483 [label="202_ sendto_txorigin13\n1483-function_definition-203-206", type_label=function_definition];
1499 [label="203_ require (tx.origin == owner_txorigin13);\n1499-expression_statement-204-204", type_label=expression_statement];
1508 [label="204_ receiver.transfer(amount);\n1508-expression_statement-205-205", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(1540, (3, 8), (5, 9))";
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> "(1540, (3, 8), (5, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
35 -> "(1540, (3, 8), (5, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
323 -> 339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
339 -> 348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
362 -> 378  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
378 -> 387  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
394 -> 399  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
399 -> 404  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
409 -> 425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
448 -> 464  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
464 -> 473  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
491 -> 500  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
500 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
502 -> 510  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
519 -> 532  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
532 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
536 -> 548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
548 -> 557  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
568 -> 584  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
584 -> 595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
595 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
598 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
615 -> 635  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
635 -> 644  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
644 -> 666  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
666 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
669 -> 685  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
685 -> 694  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
703 -> 719  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
719 -> 730  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
730 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
733 -> 749  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
749 -> 758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
767 -> 784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
784 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
790 -> 802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
802 -> 811  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
822 -> 830  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
839 -> 851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
851 -> 860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
871 -> 883  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
883 -> 892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
892 -> 901  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
924 -> 932  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
941 -> 957  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
957 -> 966  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
966 -> 979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1000 -> 1016  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1016 -> 1025  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1034 -> 1050  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1050 -> 1059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1059 -> 1068  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1084 -> 1092  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1101 -> 1113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1113 -> 1122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1122 -> 1131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1154 -> 1170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1170 -> 1179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1194 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1204 -> 1216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1216 -> 1225  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1255 -> 1259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1259 -> 1263  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1267 -> 1275  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1284 -> 1293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1293 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1295 -> 1311  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1311 -> 1320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1327 -> 1336  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1336 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1338 -> 1354  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1354 -> 1363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1372 -> 1381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1381 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1383 -> 1399  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1399 -> 1408  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1426 -> 1434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1443 -> 1449  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1483 -> 1499  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1499 -> 1508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1540, (3, 8), (5, 9))" -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1540, (3, 8), (5, 9))" -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
}
