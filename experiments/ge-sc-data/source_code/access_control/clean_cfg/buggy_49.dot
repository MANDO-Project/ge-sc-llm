digraph  {
13 [label="2_ withdrawAll_txorigin14\n13-function_definition-3-6", type_label=function_definition];
25 [label="3_ require(tx.origin == owner_txorigin14);\n25-expression_statement-4-4", type_label=expression_statement];
34 [label="4_ _recipient.transfer(address(this).balance);\n34-expression_statement-5-5", type_label=expression_statement];
45 [label="6_ mapping (address => uint256) public balanceOf;\n45-new_variable-7-7", type_label=new_variable];
52 [label="7_ withdrawAll_txorigin30\n52-function_definition-8-11", type_label=function_definition];
64 [label="8_ require(tx.origin == owner_txorigin30);\n64-expression_statement-9-9", type_label=expression_statement];
73 [label="9_ _recipient.transfer(address(this).balance);\n73-expression_statement-10-10", type_label=expression_statement];
84 [label="11_ string public name = \"TAMC\";\n84-new_variable-12-12", type_label=new_variable];
91 [label="12_ bug_txorigin8\n91-function_definition-13-15", type_label=function_definition];
99 [label="13_ require(tx.origin == owner_txorigin8);\n99-expression_statement-14-14", type_label=expression_statement];
108 [label="15_ string public symbol = \"TAMC\";\n108-new_variable-16-16", type_label=new_variable];
115 [label="16_ transferTo_txorigin39\n115-function_definition-17-20", type_label=function_definition];
131 [label="17_ require(tx.origin == owner_txorigin39);\n131-expression_statement-18-18", type_label=expression_statement];
140 [label="18_ to.call.value(amount);\n140-expression_statement-19-19", type_label=expression_statement];
149 [label="20_ uint8 public decimals = 18;\n149-new_variable-21-21", type_label=new_variable];
155 [label="21_ uint256 public totalSupply = 1000000000 * (uint256(10) ** decimals);\n155-new_variable-22-22", type_label=new_variable];
168 [label="22_ transferTo_txorigin31\n168-function_definition-23-26", type_label=function_definition];
184 [label="23_ require(tx.origin == owner_txorigin31);\n184-expression_statement-24-24", type_label=expression_statement];
193 [label="24_ to.call.value(amount);\n193-expression_statement-25-25", type_label=expression_statement];
218 [label="28_ balanceOf[msg.sender] = totalSupply;\n218-expression_statement-29-29", type_label=expression_statement];
238 [label="31_ transferTo_txorigin35\n238-function_definition-32-35", type_label=function_definition];
254 [label="32_ require(tx.origin == owner_txorigin35);\n254-expression_statement-33-33", type_label=expression_statement];
263 [label="33_ to.call.value(amount);\n263-expression_statement-34-34", type_label=expression_statement];
272 [label="35_ transfer\n272-function_definition-36-42", type_label=function_definition];
289 [label="36_ require(balanceOf[msg.sender] >= value);\n289-expression_statement-37-37", type_label=expression_statement];
300 [label="37_ balanceOf[msg.sender] -= value;\n300-expression_statement-38-38", type_label=expression_statement];
301 [label="37_ balanceOf[msg.sender] -= value\n301-expression_statement-38-38", type_label=expression_statement];
308 [label="38_ balanceOf[to] += value;\n308-expression_statement-39-39", type_label=expression_statement];
309 [label="38_ balanceOf[to] += value\n309-expression_statement-39-39", type_label=expression_statement];
324 [label="40_ return true;\n324-return-41-41", type_label=return];
327 [label="42_ bug_txorigin40\n327-function_definition-43-45", type_label=function_definition];
335 [label="43_ require(tx.origin == owner_txorigin40);\n335-expression_statement-44-44", type_label=expression_statement];
344 [label="45_ sendto_txorigin13\n344-function_definition-46-49", type_label=function_definition];
360 [label="46_ require (tx.origin == owner_txorigin13);\n360-expression_statement-47-47", type_label=expression_statement];
369 [label="47_ receiver.transfer(amount);\n369-expression_statement-48-48", type_label=expression_statement];
390 [label="50_ bug_txorigin36\n390-function_definition-51-53", type_label=function_definition];
398 [label="51_ require(tx.origin == owner_txorigin36);\n398-expression_statement-52-52", type_label=expression_statement];
407 [label="53_ mapping(address => mapping(address => uint256)) public allowance;\n407-new_variable-54-54", type_label=new_variable];
416 [label="54_ approve\n416-function_definition-55-62", type_label=function_definition];
433 [label="58_ allowance[msg.sender][spender] = value;\n433-expression_statement-59-59", type_label=expression_statement];
453 [label="60_ return true;\n453-return-61-61", type_label=return];
456 [label="62_ sendto_txorigin33\n456-function_definition-63-66", type_label=function_definition];
472 [label="63_ require (tx.origin == owner_txorigin33);\n472-expression_statement-64-64", type_label=expression_statement];
481 [label="64_ receiver.transfer(amount);\n481-expression_statement-65-65", type_label=expression_statement];
488 [label="66_ transferFrom\n488-function_definition-67-78", type_label=function_definition];
509 [label="70_ require(value <= balanceOf[from]);\n509-expression_statement-71-71", type_label=expression_statement];
518 [label="71_ require(value <= allowance[from][msg.sender]);\n518-expression_statement-72-72", type_label=expression_statement];
531 [label="72_ balanceOf[from] -= value;\n531-expression_statement-73-73", type_label=expression_statement];
532 [label="72_ balanceOf[from] -= value\n532-expression_statement-73-73", type_label=expression_statement];
537 [label="73_ balanceOf[to] += value;\n537-expression_statement-74-74", type_label=expression_statement];
538 [label="73_ balanceOf[to] += value\n538-expression_statement-74-74", type_label=expression_statement];
543 [label="74_ allowance[from][msg.sender] -= value;\n543-expression_statement-75-75", type_label=expression_statement];
544 [label="74_ allowance[from][msg.sender] -= value\n544-expression_statement-75-75", type_label=expression_statement];
561 [label="76_ return true;\n561-return-77-77", type_label=return];
564 [label="78_ transferTo_txorigin27\n564-function_definition-79-82", type_label=function_definition];
580 [label="79_ require(tx.origin == owner_txorigin27);\n580-expression_statement-80-80", type_label=expression_statement];
589 [label="80_ to.call.value(amount);\n589-expression_statement-81-81", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 25  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
25 -> 34  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
52 -> 64  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
64 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
91 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
115 -> 131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
131 -> 140  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 155  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
168 -> 184  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
184 -> 193  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
238 -> 254  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
254 -> 263  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
272 -> 289  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
289 -> 300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
300 -> 308  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
324 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
327 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
344 -> 360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
360 -> 369  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
390 -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
416 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
453 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
456 -> 472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
472 -> 481  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
488 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
509 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
518 -> 531  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
531 -> 537  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
537 -> 543  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
561 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
564 -> 580  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
580 -> 589  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
