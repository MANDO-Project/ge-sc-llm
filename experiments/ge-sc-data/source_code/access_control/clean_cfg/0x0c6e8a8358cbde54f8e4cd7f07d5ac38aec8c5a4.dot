digraph  {
12 [label="3_ mul\n12-function_definition-4-13", type_label=function_definition];
30 [label="5_ if_a == 0\n30-if-6-9", type_label=if];
35 [label="7_ return 0;\n35-return-8-8", type_label=return];
37 [label="9_ c = a * b;\n37-expression_statement-10-10", type_label=expression_statement];
43 [label="10_ assert(c / a == b);\n43-expression_statement-11-11", type_label=expression_statement];
52 [label="11_ return c;\n52-return-12-12", type_label=return];
54 [label="13_ div\n54-function_definition-14-17", type_label=function_definition];
71 [label="15_ return a / b;\n71-return-16-16", type_label=return];
75 [label="17_ sub\n75-function_definition-18-22", type_label=function_definition];
92 [label="19_ assert(b <= a);\n92-expression_statement-20-20", type_label=expression_statement];
99 [label="20_ return a - b;\n99-return-21-21", type_label=return];
103 [label="22_ add\n103-function_definition-23-28", type_label=function_definition];
121 [label="24_ c = a + b;\n121-expression_statement-25-25", type_label=expression_statement];
127 [label="25_ assert(c >= a);\n127-expression_statement-26-26", type_label=expression_statement];
134 [label="26_ return c;\n134-return-27-27", type_label=return];
139 [label="31_ totalSupply\n139-function_definition-32-32", type_label=function_definition];
147 [label="32_ balanceOf\n147-function_definition-33-33", type_label=function_definition];
159 [label="33_ transfer\n159-function_definition-34-34", type_label=function_definition];
174 [label="34_ allowance\n174-function_definition-35-35", type_label=function_definition];
190 [label="35_ transferFrom\n190-function_definition-36-36", type_label=function_definition];
209 [label="36_ approve\n209-function_definition-37-37", type_label=function_definition];
263 [label="43_ uint256 constant public TOKEN_DECIMALS = 10 ** 18;\n263-new_variable-44-44", type_label=new_variable];
271 [label="44_ string public constant name            = \"PlatonCoin\";\n271-new_variable-45-45", type_label=new_variable];
278 [label="45_ string public constant symbol          = \"PLTC\";\n278-new_variable-46-46", type_label=new_variable];
285 [label="46_ uint256 public totalTokenSupply        = 21000000 * TOKEN_DECIMALS;\n285-new_variable-47-47", type_label=new_variable];
293 [label="47_ uint256 public totalSaleSupply         = 13860000 * TOKEN_DECIMALS;\n293-new_variable-48-48", type_label=new_variable];
301 [label="48_ uint256 public totalTeamSupply         =  2310000 * TOKEN_DECIMALS;\n301-new_variable-49-49", type_label=new_variable];
309 [label="49_ uint256 public totalAdvisorsSupply     =   840000 * TOKEN_DECIMALS;\n309-new_variable-50-50", type_label=new_variable];
317 [label="50_ uint256 public totalBountySupply       =   840000 * TOKEN_DECIMALS;\n317-new_variable-51-51", type_label=new_variable];
325 [label="51_ uint256 public totalEarlyInvSupply     =  3150000 * TOKEN_DECIMALS;\n325-new_variable-52-52", type_label=new_variable];
333 [label="52_ uint8 public constant decimals         = 18;\n333-new_variable-53-53", type_label=new_variable];
339 [label="53_ address public owner;\n339-new_variable-54-54", type_label=new_variable];
344 [label="54_ uint256 public totalBurned;\n344-new_variable-55-55", type_label=new_variable];
349 [label="55_ bool stopped = false;\n349-new_variable-56-56", type_label=new_variable];
381 [label="59_ mapping(address => uint256) public  balances;\n381-new_variable-60-60", type_label=new_variable];
388 [label="60_ mapping(address => mapping(address => uint256)) internal  allowed;\n388-new_variable-61-61", type_label=new_variable];
397 [label="61_ modifier onlyOwner() \n    {\n       require(msg.sender == owner);\n       _;\n    }\n397-expression_statement-62-66", type_label=expression_statement];
400 [label="63_ require(msg.sender == owner);\n400-expression_statement-64-64", type_label=expression_statement];
409 [label="64_ _;\n409-expression_statement-65-65", type_label=expression_statement];
413 [label="68_ owner = msg.sender;\n413-expression_statement-69-69", type_label=expression_statement];
419 [label="69_ balances[owner] = totalSaleSupply;\n419-expression_statement-70-70", type_label=expression_statement];
437 [label="72_ pauseCrowdSale\n437-function_definition-73-76", type_label=function_definition];
440 [label="72_ onlyOwner\n440-expression_statement-73-73", type_label=expression_statement];
443 [label="74_ stopped = true;\n443-expression_statement-75-75", type_label=expression_statement];
448 [label="76_ resumeCrowdSale\n448-function_definition-77-80", type_label=function_definition];
451 [label="76_ onlyOwner\n451-expression_statement-77-77", type_label=expression_statement];
454 [label="78_ stopped = false;\n454-expression_statement-79-79", type_label=expression_statement];
459 [label="80_ initWallets\n459-function_definition-81-93", type_label=function_definition];
478 [label="80_ onlyOwner\n478-expression_statement-81-81", type_label=expression_statement];
481 [label="82_ require(!stopped);\n481-expression_statement-83-83", type_label=expression_statement];
487 [label="83_ require( _teamWallet != address(0x0) && _advisorWallet != address(0x0) && _bountyWallet != address(0x0) && _earlyInvWallet != address(0x0));\n487-expression_statement-84-84", type_label=expression_statement];
514 [label="84_ balances[_teamWallet]     = totalTeamSupply;\n514-expression_statement-85-85", type_label=expression_statement];
520 [label="85_ balances[_advisorWallet]  = totalAdvisorsSupply;\n520-expression_statement-86-86", type_label=expression_statement];
526 [label="86_ balances[_bountyWallet]   = totalBountySupply;\n526-expression_statement-87-87", type_label=expression_statement];
532 [label="87_ balances[_earlyInvWallet] = totalEarlyInvSupply;\n532-expression_statement-88-88", type_label=expression_statement];
586 [label="93_ burn\n586-function_definition-94-105", type_label=function_definition];
592 [label="93_ onlyOwner\n592-expression_statement-94-94", type_label=expression_statement];
600 [label="95_ require(!stopped);\n600-expression_statement-96-96", type_label=expression_statement];
606 [label="96_ require(_value <= balances[msg.sender]);\n606-expression_statement-97-97", type_label=expression_statement];
617 [label="97_ address burner = msg.sender;\n617-new_variable-98-98", type_label=new_variable];
618 [label="97_ address burner\n618-new_variable-98-98", type_label=new_variable];
625 [label="98_ balances[burner] = balances[burner].sub(_value);\n625-expression_statement-99-99", type_label=expression_statement];
638 [label="99_ totalTokenSupply = totalTokenSupply.sub(_value);\n638-expression_statement-100-100", type_label=expression_statement];
647 [label="100_ totalBurned      = totalBurned.add(_value);\n647-expression_statement-101-101", type_label=expression_statement];
672 [label="103_ return true;\n672-return-104-104", type_label=return];
675 [label="105_ totalSupply\n675-function_definition-106-110", type_label=function_definition];
685 [label="107_ _totalSupply = totalTokenSupply;\n685-expression_statement-108-108", type_label=expression_statement];
689 [label="108_ return _totalSupply;\n689-return-109-109", type_label=return];
691 [label="110_ balanceOf\n691-function_definition-111-114", type_label=function_definition];
704 [label="112_ return balances[_owner];\n704-return-113-113", type_label=return];
708 [label="114_ transferFrom\n708-function_definition-115-130", type_label=function_definition];
728 [label="116_ require(!stopped);\n728-expression_statement-117-117", type_label=expression_statement];
734 [label="117_ if__value == 0\n734-if-118-122", type_label=if];
747 [label="120_ return true;\n747-return-121-121", type_label=return];
750 [label="122_ require(_to != address(0x0));\n750-expression_statement-123-123", type_label=expression_statement];
759 [label="123_ require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value >= 0);\n759-expression_statement-124-124", type_label=expression_statement];
782 [label="124_ balances[_from] = balances[_from].sub(_value);\n782-expression_statement-125-125", type_label=expression_statement];
795 [label="125_ allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n795-expression_statement-126-126", type_label=expression_statement];
816 [label="126_ balances[_to] = balances[_to].add(_value);\n816-expression_statement-127-127", type_label=expression_statement];
837 [label="128_ return true;\n837-return-129-129", type_label=return];
840 [label="130_ approve\n840-function_definition-131-138", type_label=function_definition];
856 [label="132_ require(!stopped);\n856-expression_statement-133-133", type_label=expression_statement];
862 [label="133_ require(_spender != address(0x0));\n862-expression_statement-134-134", type_label=expression_statement];
871 [label="134_ allowed[msg.sender][_spender] = _tokens;\n871-expression_statement-135-135", type_label=expression_statement];
891 [label="136_ return true;\n891-return-137-137", type_label=return];
894 [label="138_ allowance\n894-function_definition-139-144", type_label=function_definition];
911 [label="140_ require(!stopped);\n911-expression_statement-141-141", type_label=expression_statement];
917 [label="141_ require(_owner != address(0x0) && _spender != address(0x0));\n917-expression_statement-142-142", type_label=expression_statement];
932 [label="142_ return allowed[_owner][_spender];\n932-return-143-143", type_label=return];
938 [label="144_ transfer\n938-function_definition-145-159", type_label=function_definition];
954 [label="146_ require(!stopped);\n954-expression_statement-147-147", type_label=expression_statement];
960 [label="147_ if__tokens == 0\n960-if-148-152", type_label=if];
975 [label="150_ return true;\n975-return-151-151", type_label=return];
978 [label="152_ require(_address != address(0x0));\n978-expression_statement-153-153", type_label=expression_statement];
987 [label="153_ require(balances[msg.sender] >= _tokens);\n987-expression_statement-154-154", type_label=expression_statement];
998 [label="154_ balances[msg.sender] = (balances[msg.sender]).sub(_tokens);\n998-expression_statement-155-155", type_label=expression_statement];
1016 [label="155_ balances[_address] = (balances[_address]).add(_tokens);\n1016-expression_statement-156-156", type_label=expression_statement];
1040 [label="157_ return true;\n1040-return-158-158", type_label=return];
1043 [label="159_ transferOwnership\n1043-function_definition-160-168", type_label=function_definition];
1050 [label="159_ onlyOwner\n1050-expression_statement-160-160", type_label=expression_statement];
1053 [label="161_ require(!stopped);\n1053-expression_statement-162-162", type_label=expression_statement];
1059 [label="162_ require( _newOwner != address(0x0));\n1059-expression_statement-163-163", type_label=expression_statement];
1068 [label="163_ balances[_newOwner] = (balances[_newOwner]).add(balances[owner]);\n1068-expression_statement-164-164", type_label=expression_statement];
1084 [label="164_ balances[owner] = 0;\n1084-expression_statement-165-165", type_label=expression_statement];
1090 [label="165_ owner = _newOwner;\n1090-expression_statement-166-166", type_label=expression_statement];
1106 [label="168_ renounceOwnership\n1106-function_definition-169-174", type_label=function_definition];
1109 [label="168_ onlyOwner\n1109-expression_statement-169-169", type_label=expression_statement];
1112 [label="170_ require(!stopped);\n1112-expression_statement-171-171", type_label=expression_statement];
1118 [label="171_ owner = address(0x0);\n1118-expression_statement-172-172", type_label=expression_statement];
1128 [label="174_ increaseApproval\n1128-function_definition-175-181", type_label=function_definition];
1144 [label="176_ require(!stopped);\n1144-expression_statement-177-177", type_label=expression_statement];
1150 [label="177_ allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n1150-expression_statement-178-178", type_label=expression_statement];
1187 [label="179_ return true;\n1187-return-180-180", type_label=return];
1190 [label="181_ decreaseApproval\n1190-function_definition-182-196", type_label=function_definition];
1206 [label="183_ uint256 oldValue = allowed[msg.sender][_spender];\n1206-new_variable-184-184", type_label=new_variable];
1207 [label="183_ uint256 oldValue\n1207-new_variable-184-184", type_label=new_variable];
1218 [label="184_ require(!stopped);\n1218-expression_statement-185-185", type_label=expression_statement];
1224 [label="185_ if__subtractedValue > oldValue\n1224-if-186-193", type_label=if];
1229 [label="187_ allowed[msg.sender][_spender] = 0;\n1229-expression_statement-188-188", type_label=expression_statement];
1240 [label="191_ allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n1240-expression_statement-192-192", type_label=expression_statement];
1271 [label="194_ return true;\n1271-return-195-195", type_label=return];
1274 [label="196_ transferAnyERC20Token\n1274-function_definition-197-201", type_label=function_definition];
1284 [label="196_ onlyOwner\n1284-expression_statement-197-197", type_label=expression_statement];
1292 [label="198_ require(!stopped);\n1292-expression_statement-199-199", type_label=expression_statement];
1298 [label="199_ return ERC20Interface(_tokenAddress).transfer(owner, _tokens);\n1298-return-200-200", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
1255;
12 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 37  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 43  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
43 -> 52  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
52 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
54 -> 71  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
71 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
75 -> 92  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
92 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
99 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
103 -> 121  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
121 -> 127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
127 -> 134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
134 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
263 -> 271  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
271 -> 278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
278 -> 285  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
285 -> 293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
293 -> 301  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
301 -> 309  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
309 -> 317  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
317 -> 325  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
325 -> 333  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
333 -> 339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
339 -> 344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
344 -> 349  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
381 -> 388  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
388 -> 397  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
400 -> 409  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
413 -> 419  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
437 -> 443  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
448 -> 454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
459 -> 481  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
481 -> 487  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
487 -> 514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
514 -> 520  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
520 -> 526  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
526 -> 532  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
586 -> 600  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
600 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
606 -> 617  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
617 -> 625  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
625 -> 638  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
638 -> 647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
672 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
675 -> 685  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
685 -> 689  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
689 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
691 -> 704  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
704 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
708 -> 728  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
728 -> 734  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
734 -> 750  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
747 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
750 -> 759  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
759 -> 782  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
782 -> 795  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
795 -> 816  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
837 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
840 -> 856  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
856 -> 862  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
862 -> 871  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
891 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
894 -> 911  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
911 -> 917  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
917 -> 932  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
932 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
938 -> 954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
954 -> 960  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
960 -> 978  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
975 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
978 -> 987  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
987 -> 998  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
998 -> 1016  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1040 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1043 -> 1053  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1053 -> 1059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1059 -> 1068  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1068 -> 1084  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1084 -> 1090  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1106 -> 1112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1112 -> 1118  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1128 -> 1144  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1144 -> 1150  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1187 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1190 -> 1206  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1206 -> 1218  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1218 -> 1224  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1224 -> 1229  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1224 -> 1240  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1229 -> 1255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1271 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1274 -> 1292  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1292 -> 1298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1298 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
