digraph  {
13 [label="2_ mul\n13-function_definition-3-10", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", type_label=if];
35 [label="4_ return 0;\n35-return-5-5", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", type_label=new_variable];
38 [label="6_ uint256 c\n38-new_variable-7-7", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", type_label=return];
56 [label="10_ div\n56-function_definition-11-15", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", type_label=new_variable];
81 [label="12_ uint256 c\n81-new_variable-13-13", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", type_label=return];
90 [label="15_ sub\n90-function_definition-16-20", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", type_label=new_variable];
115 [label="17_ uint256 c\n115-new_variable-18-18", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", type_label=return];
124 [label="20_ add\n124-function_definition-21-25", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", type_label=new_variable];
142 [label="21_ uint256 c\n142-new_variable-22-22", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", type_label=return];
166 [label="28_ mapping (address => uint256) private balances;\n166-new_variable-29-29", type_label=new_variable];
173 [label="29_ mapping (address => mapping (address => uint256)) private allowed;\n173-new_variable-30-30", type_label=new_variable];
182 [label="30_ uint256 private _totalSupply = 8235000;\n182-new_variable-31-31", type_label=new_variable];
188 [label="31_ string public constant name = \"Mono\";\n188-new_variable-32-32", type_label=new_variable];
195 [label="32_ string public constant symbol = \"MMONO\";\n195-new_variable-33-33", type_label=new_variable];
202 [label="33_ uint8 public constant decimals = 6;\n202-new_variable-34-34", type_label=new_variable];
208 [label="34_ totalSupply\n208-function_definition-35-37", type_label=function_definition];
217 [label="35_ return _totalSupply;\n217-return-36-36", type_label=return];
219 [label="37_ balanceOf\n219-function_definition-38-40", type_label=function_definition];
232 [label="38_ return balances[owner];\n232-return-39-39", type_label=return];
236 [label="40_ allowance\n236-function_definition-41-43", type_label=function_definition];
253 [label="41_ return allowed[owner][spender];\n253-return-42-42", type_label=return];
273 [label="44_ _transfer\n273-function_definition-45-50", type_label=function_definition];
289 [label="45_ require(to != address(0));\n289-expression_statement-46-46", type_label=expression_statement];
298 [label="46_ balances[from] = balances[from].sub(value);\n298-expression_statement-47-47", type_label=expression_statement];
311 [label="47_ balances[to] = balances[to].add(value);\n311-expression_statement-48-48", type_label=expression_statement];
332 [label="50_ transfer\n332-function_definition-51-54", type_label=function_definition];
348 [label="51_ _transfer(msg.sender, to, value);\n348-expression_statement-52-52", type_label=expression_statement];
359 [label="52_ return true;\n359-return-53-53", type_label=return];
376 [label="55_ approve\n376-function_definition-56-61", type_label=function_definition];
392 [label="56_ require(spender != address(0));\n392-expression_statement-57-57", type_label=expression_statement];
401 [label="57_ allowed[msg.sender][spender] = value;\n401-expression_statement-58-58", type_label=expression_statement];
421 [label="59_ return true;\n421-return-60-60", type_label=return];
424 [label="61_ transferFrom\n424-function_definition-62-67", type_label=function_definition];
444 [label="62_ allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);\n444-expression_statement-63-63", type_label=expression_statement];
465 [label="63_ _transfer(from, to, value);\n465-expression_statement-64-64", type_label=expression_statement];
490 [label="65_ return true;\n490-return-66-66", type_label=return];
495 [label="68_ balances[0x4b09b4aeA5f9C616ebB6Ee0097B62998Cb332275] = 8235000000000;\n495-expression_statement-69-69", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 37  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
166 -> 173  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
173 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
188 -> 195  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
195 -> 202  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
208 -> 217  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
217 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
219 -> 232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
232 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
236 -> 253  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
253 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
273 -> 289  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
289 -> 298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
298 -> 311  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
332 -> 348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
348 -> 359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
359 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
376 -> 392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
392 -> 401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
421 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
424 -> 444  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
444 -> 465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
490 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
