digraph  {
12 [label="2_ address public owner;\n12-new_variable-3-3", type_label=new_variable];
29 [label="5_ owner = msg.sender;\n29-expression_statement-6-6", type_label=expression_statement];
35 [label="7_ modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n35-expression_statement-8-11", type_label=expression_statement];
38 [label="8_ require(msg.sender == owner);\n38-expression_statement-9-9", type_label=expression_statement];
47 [label="9_ _;\n47-expression_statement-10-10", type_label=expression_statement];
49 [label="11_ transferOwnership\n49-function_definition-12-16", type_label=function_definition];
56 [label="11_ onlyOwner\n56-expression_statement-12-12", type_label=expression_statement];
59 [label="12_ require(newOwner != address(0));\n59-expression_statement-13-13", type_label=expression_statement];
74 [label="14_ owner = newOwner;\n74-expression_statement-15-15", type_label=expression_statement];
81 [label="18_ struct Role {\n    mapping (address => bool) bearer;\n  }\n81-expression_statement-19-21", type_label=expression_statement];
89 [label="21_ add\n89-function_definition-22-24", type_label=function_definition];
102 [label="22_ role.bearer[addr] = true;\n102-expression_statement-23-23", type_label=expression_statement];
111 [label="24_ remove\n111-function_definition-25-27", type_label=function_definition];
124 [label="25_ role.bearer[addr] = false;\n124-expression_statement-26-26", type_label=expression_statement];
133 [label="27_ check\n133-function_definition-28-30", type_label=function_definition];
147 [label="28_ require(has(role, addr));\n147-expression_statement-29-29", type_label=expression_statement];
157 [label="30_ has\n157-function_definition-31-33", type_label=function_definition];
175 [label="31_ return role.bearer[addr];\n175-return-32-32", type_label=return];
194 [label="36_ mapping (string => Roles.Role) private roles;\n194-new_variable-37-37", type_label=new_variable];
223 [label="39_ string public constant ROLE_CEO = \"ceo\";\n223-new_variable-40-40", type_label=new_variable];
230 [label="40_ string public constant ROLE_COO = \"coo\";\n230-new_variable-41-41", type_label=new_variable];
237 [label="41_ string public constant ROLE_CRO = \"cro\";\n237-new_variable-42-42", type_label=new_variable];
244 [label="42_ string public constant ROLE_MANAGER = \"manager\";\n244-new_variable-43-43", type_label=new_variable];
251 [label="43_ string public constant ROLE_REVIEWER = \"reviewer\";\n251-new_variable-44-44", type_label=new_variable];
260 [label="45_ addRole(msg.sender, ROLE_CEO);\n260-expression_statement-46-46", type_label=expression_statement];
269 [label="47_ checkRole\n269-function_definition-48-50", type_label=function_definition];
282 [label="48_ roles[roleName].check(addr);\n282-expression_statement-49-49", type_label=expression_statement];
291 [label="50_ hasRole\n291-function_definition-51-53", type_label=function_definition];
308 [label="51_ return roles[roleName].has(addr);\n308-return-52-52", type_label=return];
317 [label="53_ ownerAddCeo\n317-function_definition-54-56", type_label=function_definition];
323 [label="53_ onlyOwner\n323-expression_statement-54-54", type_label=expression_statement];
327 [label="54_ addRole(addr, ROLE_CEO);\n327-expression_statement-55-55", type_label=expression_statement];
334 [label="56_ ownerRemoveCeo\n334-function_definition-57-59", type_label=function_definition];
340 [label="56_ onlyOwner\n340-expression_statement-57-57", type_label=expression_statement];
344 [label="57_ removeRole(addr, ROLE_CEO);\n344-expression_statement-58-58", type_label=expression_statement];
351 [label="59_ ceoAddCoo\n351-function_definition-60-62", type_label=function_definition];
357 [label="59_ onlyCEO\n357-expression_statement-60-60", type_label=expression_statement];
361 [label="60_ addRole(addr, ROLE_COO);\n361-expression_statement-61-61", type_label=expression_statement];
368 [label="62_ ceoRemoveCoo\n368-function_definition-63-65", type_label=function_definition];
374 [label="62_ onlyCEO\n374-expression_statement-63-63", type_label=expression_statement];
378 [label="63_ removeRole(addr, ROLE_COO);\n378-expression_statement-64-64", type_label=expression_statement];
385 [label="65_ cooAddManager\n385-function_definition-66-68", type_label=function_definition];
391 [label="65_ onlyCOO\n391-expression_statement-66-66", type_label=expression_statement];
395 [label="66_ addRole(addr, ROLE_MANAGER);\n395-expression_statement-67-67", type_label=expression_statement];
402 [label="68_ cooRemoveManager\n402-function_definition-69-71", type_label=function_definition];
408 [label="68_ onlyCOO\n408-expression_statement-69-69", type_label=expression_statement];
412 [label="69_ removeRole(addr, ROLE_MANAGER);\n412-expression_statement-70-70", type_label=expression_statement];
419 [label="71_ cooAddReviewer\n419-function_definition-72-74", type_label=function_definition];
425 [label="71_ onlyCOO\n425-expression_statement-72-72", type_label=expression_statement];
429 [label="72_ addRole(addr, ROLE_REVIEWER);\n429-expression_statement-73-73", type_label=expression_statement];
436 [label="74_ cooRemoveReviewer\n436-function_definition-75-77", type_label=function_definition];
442 [label="74_ onlyCOO\n442-expression_statement-75-75", type_label=expression_statement];
446 [label="75_ removeRole(addr, ROLE_REVIEWER);\n446-expression_statement-76-76", type_label=expression_statement];
453 [label="77_ cooAddCro\n453-function_definition-78-80", type_label=function_definition];
459 [label="77_ onlyCOO\n459-expression_statement-78-78", type_label=expression_statement];
463 [label="78_ addRole(addr, ROLE_CRO);\n463-expression_statement-79-79", type_label=expression_statement];
470 [label="80_ cooRemoveCro\n470-function_definition-81-83", type_label=function_definition];
476 [label="80_ onlyCOO\n476-expression_statement-81-81", type_label=expression_statement];
480 [label="81_ removeRole(addr, ROLE_CRO);\n480-expression_statement-82-82", type_label=expression_statement];
487 [label="83_ addRole\n487-function_definition-84-87", type_label=function_definition];
499 [label="84_ roles[roleName].add(addr);\n499-expression_statement-85-85", type_label=expression_statement];
514 [label="87_ removeRole\n514-function_definition-88-91", type_label=function_definition];
526 [label="88_ roles[roleName].remove(addr);\n526-expression_statement-89-89", type_label=expression_statement];
541 [label="91_ modifier onlyCEO() {\n    checkRole(msg.sender, ROLE_CEO);\n    _;\n  }\n541-expression_statement-92-95", type_label=expression_statement];
544 [label="92_ checkRole(msg.sender, ROLE_CEO);\n544-expression_statement-93-93", type_label=expression_statement];
553 [label="93_ _;\n553-expression_statement-94-94", type_label=expression_statement];
555 [label="95_ modifier onlyCOO() {\n    checkRole(msg.sender, ROLE_COO);\n    _;\n  }\n555-expression_statement-96-99", type_label=expression_statement];
558 [label="96_ checkRole(msg.sender, ROLE_COO);\n558-expression_statement-97-97", type_label=expression_statement];
567 [label="97_ _;\n567-expression_statement-98-98", type_label=expression_statement];
569 [label="99_ modifier onlyCRO() {\n    checkRole(msg.sender, ROLE_CRO);\n    _;\n  }\n569-expression_statement-100-103", type_label=expression_statement];
572 [label="100_ checkRole(msg.sender, ROLE_CRO);\n572-expression_statement-101-101", type_label=expression_statement];
581 [label="101_ _;\n581-expression_statement-102-102", type_label=expression_statement];
583 [label="103_ modifier onlyMANAGER() {\n    checkRole(msg.sender, ROLE_MANAGER);\n    _;\n  }\n583-expression_statement-104-107", type_label=expression_statement];
586 [label="104_ checkRole(msg.sender, ROLE_MANAGER);\n586-expression_statement-105-105", type_label=expression_statement];
595 [label="105_ _;\n595-expression_statement-106-106", type_label=expression_statement];
597 [label="107_ modifier onlyREVIEWER() {\n    checkRole(msg.sender, ROLE_REVIEWER);\n    _;\n  }\n597-expression_statement-108-111", type_label=expression_statement];
600 [label="108_ checkRole(msg.sender, ROLE_REVIEWER);\n600-expression_statement-109-109", type_label=expression_statement];
609 [label="109_ _;\n609-expression_statement-110-110", type_label=expression_statement];
614 [label="113_ mul\n614-function_definition-114-121", type_label=function_definition];
631 [label="114_ if_a == 0\n631-if-115-117", type_label=if];
636 [label="115_ return 0;\n636-return-116-116", type_label=return];
638 [label="117_ uint256 c = a * b;\n638-new_variable-118-118", type_label=new_variable];
639 [label="117_ uint256 c\n639-new_variable-118-118", type_label=new_variable];
646 [label="118_ assert(c / a == b);\n646-expression_statement-119-119", type_label=expression_statement];
655 [label="119_ return c;\n655-return-120-120", type_label=return];
657 [label="121_ div\n657-function_definition-122-125", type_label=function_definition];
674 [label="122_ uint256 c = a / b;\n674-new_variable-123-123", type_label=new_variable];
675 [label="122_ uint256 c\n675-new_variable-123-123", type_label=new_variable];
682 [label="123_ return c;\n682-return-124-124", type_label=return];
684 [label="125_ sub\n684-function_definition-126-129", type_label=function_definition];
701 [label="126_ assert(b <= a);\n701-expression_statement-127-127", type_label=expression_statement];
708 [label="127_ return a - b;\n708-return-128-128", type_label=return];
712 [label="129_ add\n712-function_definition-130-134", type_label=function_definition];
729 [label="130_ uint256 c = a + b;\n729-new_variable-131-131", type_label=new_variable];
730 [label="130_ uint256 c\n730-new_variable-131-131", type_label=new_variable];
737 [label="131_ assert(c >= a);\n737-expression_statement-132-132", type_label=expression_statement];
744 [label="132_ return c;\n744-return-133-133", type_label=return];
749 [label="136_ totalSupply\n749-function_definition-137-137", type_label=function_definition];
757 [label="137_ balanceOf\n757-function_definition-138-138", type_label=function_definition];
769 [label="138_ transfer\n769-function_definition-139-139", type_label=function_definition];
804 [label="142_ allowance\n804-function_definition-143-143", type_label=function_definition];
820 [label="143_ transferFrom\n820-function_definition-144-144", type_label=function_definition];
839 [label="144_ approve\n839-function_definition-145-145", type_label=function_definition];
882 [label="149_ mapping(address => uint256) balances;\n882-new_variable-150-150", type_label=new_variable];
888 [label="150_ uint256 totalSupply_;\n888-new_variable-151-151", type_label=new_variable];
892 [label="151_ uint256 public basisPointsRate;\n892-new_variable-152-152", type_label=new_variable];
897 [label="152_ uint256 public maximumFee;\n897-new_variable-153-153", type_label=new_variable];
902 [label="153_ address public assetOwner;\n902-new_variable-154-154", type_label=new_variable];
907 [label="154_ totalSupply\n907-function_definition-155-157", type_label=function_definition];
916 [label="155_ return totalSupply_;\n916-return-156-156", type_label=return];
918 [label="157_ transfer\n918-function_definition-158-174", type_label=function_definition];
934 [label="158_ require(_to != address(0));\n934-expression_statement-159-159", type_label=expression_statement];
943 [label="159_ require(_value <= balances[msg.sender]);\n943-expression_statement-160-160", type_label=expression_statement];
954 [label="160_ uint256 fee = (_value.mul(basisPointsRate)).div(10000);\n954-new_variable-161-161", type_label=new_variable];
955 [label="160_ uint256 fee\n955-new_variable-161-161", type_label=new_variable];
971 [label="161_ if_fee > maximumFee\n971-if-162-164", type_label=if];
976 [label="162_ fee = maximumFee;\n976-expression_statement-163-163", type_label=expression_statement];
980 [label="164_ uint256 sendAmount = _value.sub(fee);\n980-new_variable-165-165", type_label=new_variable];
981 [label="164_ uint256 sendAmount\n981-new_variable-165-165", type_label=new_variable];
991 [label="165_ balances[msg.sender] = balances[msg.sender].sub(_value);\n991-expression_statement-166-166", type_label=expression_statement];
1008 [label="166_ balances[_to] = balances[_to].add(sendAmount);\n1008-expression_statement-167-167", type_label=expression_statement];
1021 [label="167_ if_fee > 0\n1021-if-168-171", type_label=if];
1026 [label="168_ balances[assetOwner] = balances[assetOwner].add(fee);\n1026-expression_statement-169-169", type_label=expression_statement];
1059 [label="172_ return true;\n1059-return-173-173", type_label=return];
1062 [label="174_ balanceOf\n1062-function_definition-175-177", type_label=function_definition];
1076 [label="175_ return balances[_owner];\n1076-return-176-176", type_label=return];
1089 [label="179_ mapping (address => mapping (address => uint256)) internal allowed;\n1089-new_variable-180-180", type_label=new_variable];
1098 [label="180_ transferFrom\n1098-function_definition-181-199", type_label=function_definition];
1118 [label="181_ require(_to != address(0));\n1118-expression_statement-182-182", type_label=expression_statement];
1127 [label="182_ require(_value <= balances[_from]);\n1127-expression_statement-183-183", type_label=expression_statement];
1136 [label="183_ require(_value <= allowed[_from][msg.sender]);\n1136-expression_statement-184-184", type_label=expression_statement];
1149 [label="184_ uint256 fee = (_value.mul(basisPointsRate)).div(10000);\n1149-new_variable-185-185", type_label=new_variable];
1150 [label="184_ uint256 fee\n1150-new_variable-185-185", type_label=new_variable];
1166 [label="185_ if_fee > maximumFee\n1166-if-186-188", type_label=if];
1171 [label="186_ fee = maximumFee;\n1171-expression_statement-187-187", type_label=expression_statement];
1175 [label="188_ uint256 sendAmount = _value.sub(fee);\n1175-new_variable-189-189", type_label=new_variable];
1176 [label="188_ uint256 sendAmount\n1176-new_variable-189-189", type_label=new_variable];
1186 [label="189_ balances[_from] = balances[_from].sub(_value);\n1186-expression_statement-190-190", type_label=expression_statement];
1199 [label="190_ balances[_to] = balances[_to].add(sendAmount);\n1199-expression_statement-191-191", type_label=expression_statement];
1212 [label="191_ allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n1212-expression_statement-192-192", type_label=expression_statement];
1233 [label="192_ if_fee > 0\n1233-if-193-196", type_label=if];
1238 [label="193_ balances[assetOwner] = balances[assetOwner].add(fee);\n1238-expression_statement-194-194", type_label=expression_statement];
1267 [label="197_ return true;\n1267-return-198-198", type_label=return];
1270 [label="199_ approve\n1270-function_definition-200-204", type_label=function_definition];
1286 [label="200_ allowed[msg.sender][_spender] = _value;\n1286-expression_statement-201-201", type_label=expression_statement];
1306 [label="202_ return true;\n1306-return-203-203", type_label=return];
1309 [label="204_ allowance\n1309-function_definition-205-207", type_label=function_definition];
1326 [label="205_ return allowed[_owner][_spender];\n1326-return-206-206", type_label=return];
1332 [label="207_ increaseApproval\n1332-function_definition-208-212", type_label=function_definition];
1348 [label="208_ allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n1348-expression_statement-209-209", type_label=expression_statement];
1385 [label="210_ return true;\n1385-return-211-211", type_label=return];
1388 [label="212_ decreaseApproval\n1388-function_definition-213-222", type_label=function_definition];
1404 [label="213_ uint oldValue = allowed[msg.sender][_spender];\n1404-new_variable-214-214", type_label=new_variable];
1405 [label="213_ uint oldValue\n1405-new_variable-214-214", type_label=new_variable];
1416 [label="214_ if__subtractedValue > oldValue\n1416-if-215-219", type_label=if];
1421 [label="215_ allowed[msg.sender][_spender] = 0;\n1421-expression_statement-216-216", type_label=expression_statement];
1432 [label="217_ allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n1432-expression_statement-218-218", type_label=expression_statement];
1463 [label="220_ return true;\n1463-return-221-221", type_label=return];
1476 [label="226_ bool public paused = false;\n1476-new_variable-227-227", type_label=new_variable];
1483 [label="227_ modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n1483-expression_statement-228-231", type_label=expression_statement];
1486 [label="228_ require(!paused);\n1486-expression_statement-229-229", type_label=expression_statement];
1492 [label="229_ _;\n1492-expression_statement-230-230", type_label=expression_statement];
1494 [label="231_ modifier whenPaused() {\n    require(paused);\n    _;\n  }\n1494-expression_statement-232-235", type_label=expression_statement];
1497 [label="232_ require(paused);\n1497-expression_statement-233-233", type_label=expression_statement];
1502 [label="233_ _;\n1502-expression_statement-234-234", type_label=expression_statement];
1504 [label="235_ pause\n1504-function_definition-236-239", type_label=function_definition];
1506 [label="235_ onlyCEO\n1506-expression_statement-236-236", type_label=expression_statement];
1508 [label="235_ whenNotPaused\n1508-expression_statement-236-236", type_label=expression_statement];
1512 [label="236_ paused = true;\n1512-expression_statement-237-237", type_label=expression_statement];
1519 [label="239_ unpause\n1519-function_definition-240-243", type_label=function_definition];
1521 [label="239_ onlyCEO\n1521-expression_statement-240-240", type_label=expression_statement];
1523 [label="239_ whenPaused\n1523-expression_statement-240-240", type_label=expression_statement];
1527 [label="240_ paused = false;\n1527-expression_statement-241-241", type_label=expression_statement];
1543 [label="245_ transfer\n1543-function_definition-246-248", type_label=function_definition];
1554 [label="245_ whenNotPaused\n1554-expression_statement-246-246", type_label=expression_statement];
1561 [label="246_ return super.transfer(_to, _value);\n1561-return-247-247", type_label=return];
1570 [label="248_ transferFrom\n1570-function_definition-249-251", type_label=function_definition];
1585 [label="248_ whenNotPaused\n1585-expression_statement-249-249", type_label=expression_statement];
1592 [label="249_ return super.transferFrom(_from, _to, _value);\n1592-return-250-250", type_label=return];
1603 [label="251_ approve\n1603-function_definition-252-254", type_label=function_definition];
1614 [label="251_ whenNotPaused\n1614-expression_statement-252-252", type_label=expression_statement];
1621 [label="252_ return super.approve(_spender, _value);\n1621-return-253-253", type_label=return];
1630 [label="254_ increaseApproval\n1630-function_definition-255-257", type_label=function_definition];
1641 [label="254_ whenNotPaused\n1641-expression_statement-255-255", type_label=expression_statement];
1649 [label="255_ return super.increaseApproval(_spender, _addedValue);\n1649-return-256-256", type_label=return];
1658 [label="257_ decreaseApproval\n1658-function_definition-258-260", type_label=function_definition];
1669 [label="257_ whenNotPaused\n1669-expression_statement-258-258", type_label=expression_statement];
1677 [label="258_ return super.decreaseApproval(_spender, _subtractedValue);\n1677-return-259-259", type_label=return];
1692 [label="262_ getBlackListStatus\n1692-function_definition-263-265", type_label=function_definition];
1705 [label="263_ return isBlackListed[_maker];\n1705-return-264-264", type_label=return];
1709 [label="265_ mapping (address => bool) public isBlackListed;\n1709-new_variable-266-266", type_label=new_variable];
1716 [label="266_ addBlackList\n1716-function_definition-267-270", type_label=function_definition];
1723 [label="266_ onlyCRO\n1723-expression_statement-267-267", type_label=expression_statement];
1726 [label="267_ isBlackListed[_evilUser] = true;\n1726-expression_statement-268-268", type_label=expression_statement];
1737 [label="270_ removeBlackList\n1737-function_definition-271-274", type_label=function_definition];
1744 [label="270_ onlyCRO\n1744-expression_statement-271-271", type_label=expression_statement];
1747 [label="271_ isBlackListed[_clearedUser] = false;\n1747-expression_statement-272-272", type_label=expression_statement];
1758 [label="274_ destroyBlackFunds\n1758-function_definition-275-281", type_label=function_definition];
1765 [label="274_ onlyCEO\n1765-expression_statement-275-275", type_label=expression_statement];
1768 [label="275_ require(isBlackListed[_blackListedUser]);\n1768-expression_statement-276-276", type_label=expression_statement];
1775 [label="276_ uint dirtyFunds = balanceOf(_blackListedUser);\n1775-new_variable-277-277", type_label=new_variable];
1776 [label="276_ uint dirtyFunds\n1776-new_variable-277-277", type_label=new_variable];
1784 [label="277_ balances[_blackListedUser] = 0;\n1784-expression_statement-278-278", type_label=expression_statement];
1790 [label="278_ totalSupply_ = totalSupply_.sub(dirtyFunds);\n1790-expression_statement-279-279", type_label=expression_statement];
1833 [label="286_ struct MethodParam {\n        string method;  \n        uint value;   \n        bool state;   \n    }\n1833-expression_statement-287-291", type_label=expression_statement];
1847 [label="291_ mapping (string => MethodParam) params;\n1847-new_variable-292-292", type_label=new_variable];
1854 [label="292_ string public constant ISSUE_METHOD = \"issue\";\n1854-new_variable-293-293", type_label=new_variable];
1861 [label="293_ string public constant REDEEM_METHOD = \"redeem\";\n1861-new_variable-294-294", type_label=new_variable];
1868 [label="294_ submitIssue\n1868-function_definition-295-298", type_label=function_definition];
1875 [label="294_ onlyMANAGER\n1875-expression_statement-295-295", type_label=expression_statement];
1878 [label="295_ params[ISSUE_METHOD] = MethodParam(ISSUE_METHOD, _value, true);\n1878-expression_statement-296-296", type_label=expression_statement];
1900 [label="298_ comfirmIsses\n1900-function_definition-299-306", type_label=function_definition];
1907 [label="298_ onlyREVIEWER\n1907-expression_statement-299-299", type_label=expression_statement];
1910 [label="299_ require(params[ISSUE_METHOD].value == _value);\n1910-expression_statement-300-300", type_label=expression_statement];
1921 [label="300_ require(params[ISSUE_METHOD].state == true);\n1921-expression_statement-301-301", type_label=expression_statement];
1933 [label="301_ balances[assetOwner]=balances[assetOwner].add(_value);\n1933-expression_statement-302-302", type_label=expression_statement];
1946 [label="302_ totalSupply_ = totalSupply_.add(_value);\n1946-expression_statement-303-303", type_label=expression_statement];
1955 [label="303_ params[ISSUE_METHOD].state=false;\n1955-expression_statement-304-304", type_label=expression_statement];
1972 [label="306_ submitRedeem\n1972-function_definition-307-310", type_label=function_definition];
1979 [label="306_ onlyMANAGER\n1979-expression_statement-307-307", type_label=expression_statement];
1982 [label="307_ params[REDEEM_METHOD] = MethodParam(REDEEM_METHOD, _value, true);\n1982-expression_statement-308-308", type_label=expression_statement];
2004 [label="310_ comfirmRedeem\n2004-function_definition-311-318", type_label=function_definition];
2011 [label="310_ onlyREVIEWER\n2011-expression_statement-311-311", type_label=expression_statement];
2014 [label="311_ require(params[REDEEM_METHOD].value == _value);\n2014-expression_statement-312-312", type_label=expression_statement];
2025 [label="312_ require(params[REDEEM_METHOD].state == true);\n2025-expression_statement-313-313", type_label=expression_statement];
2037 [label="313_ balances[assetOwner]=balances[assetOwner].sub(_value);\n2037-expression_statement-314-314", type_label=expression_statement];
2050 [label="314_ totalSupply_ = totalSupply_.sub(_value);\n2050-expression_statement-315-315", type_label=expression_statement];
2059 [label="315_ params[REDEEM_METHOD].state=false;\n2059-expression_statement-316-316", type_label=expression_statement];
2076 [label="318_ getMethodValue\n2076-function_definition-319-321", type_label=function_definition];
2089 [label="319_ return params[_method].value;\n2089-return-320-320", type_label=return];
2095 [label="321_ getMethodState\n2095-function_definition-322-324", type_label=function_definition];
2108 [label="322_ return params[_method].state;\n2108-return-323-323", type_label=return];
2157 [label="330_ totalSupplyByLegacy\n2157-function_definition-331-331", type_label=function_definition];
2165 [label="331_ balanceOfByLegacy\n2165-function_definition-332-332", type_label=function_definition];
2177 [label="332_ transferByLegacy\n2177-function_definition-333-333", type_label=function_definition];
2196 [label="333_ allowanceByLegacy\n2196-function_definition-334-334", type_label=function_definition];
2212 [label="334_ transferFromByLegacy\n2212-function_definition-335-335", type_label=function_definition];
2235 [label="335_ approveByLegacy\n2235-function_definition-336-336", type_label=function_definition];
2254 [label="336_ increaseApprovalByLegacy\n2254-function_definition-337-337", type_label=function_definition];
2273 [label="337_ decreaseApprovalByLegacy\n2273-function_definition-338-338", type_label=function_definition];
2298 [label="340_ string  public  constant name = \"Wealth in Token\";\n2298-new_variable-341-341", type_label=new_variable];
2305 [label="341_ string  public  constant symbol = \"WIT\";\n2305-new_variable-342-342", type_label=new_variable];
2312 [label="342_ uint8   public  constant decimals = 18;\n2312-new_variable-343-343", type_label=new_variable];
2318 [label="343_ address public upgradedAddress;\n2318-new_variable-344-344", type_label=new_variable];
2323 [label="344_ bool public deprecated;\n2323-new_variable-345-345", type_label=new_variable];
2328 [label="345_ modifier validDestination( address to ) {\n        require(to != address(0x0));\n        require(to != address(this));\n        _;\n    }\n2328-expression_statement-346-350", type_label=expression_statement];
2335 [label="346_ require(to != address(0x0));\n2335-expression_statement-347-347", type_label=expression_statement];
2344 [label="347_ require(to != address(this));\n2344-expression_statement-348-348", type_label=expression_statement];
2353 [label="348_ _;\n2353-expression_statement-349-349", type_label=expression_statement];
2361 [label="351_ basisPointsRate = 0;\n2361-expression_statement-352-352", type_label=expression_statement];
2365 [label="352_ maximumFee = 0;\n2365-expression_statement-353-353", type_label=expression_statement];
2369 [label="353_ totalSupply_ = _totalTokenAmount;\n2369-expression_statement-354-354", type_label=expression_statement];
2373 [label="354_ balances[msg.sender] = _totalTokenAmount;\n2373-expression_statement-355-355", type_label=expression_statement];
2381 [label="355_ deprecated = false;\n2381-expression_statement-356-356", type_label=expression_statement];
2386 [label="356_ assetOwner = msg.sender;\n2386-expression_statement-357-357", type_label=expression_statement];
2404 [label="359_ totalSupply\n2404-function_definition-360-366", type_label=function_definition];
2413 [label="360_ if\n2413-if-361-365", type_label=if];
2416 [label="361_ return UpgradedStandardToken(upgradedAddress).totalSupplyByLegacy();\n2416-return-362-362", type_label=return];
2425 [label="363_ return totalSupply_;\n2425-return-364-364", type_label=return];
2427 [label="366_ balanceOf\n2427-function_definition-367-373", type_label=function_definition];
2441 [label="367_ if\n2441-if-368-372", type_label=if];
2444 [label="368_ return UpgradedStandardToken(upgradedAddress).balanceOfByLegacy( _owner);\n2444-return-369-369", type_label=return];
2455 [label="370_ return super.balanceOf(_owner);\n2455-return-371-371", type_label=return];
2462 [label="373_ transfer\n2462-function_definition-374-381", type_label=function_definition];
2473 [label="373_ validDestination(_to)\n2473-expression_statement-374-374", type_label=expression_statement];
2482 [label="374_ require(!isBlackListed[msg.sender]);\n2482-expression_statement-375-375", type_label=expression_statement];
2492 [label="375_ if\n2492-if-376-380", type_label=if];
2495 [label="376_ return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\n2495-return-377-377", type_label=return];
2512 [label="378_ return super.transfer(_to, _value);\n2512-return-379-379", type_label=return];
2521 [label="381_ allowance\n2521-function_definition-382-388", type_label=function_definition];
2538 [label="382_ if\n2538-if-383-387", type_label=if];
2541 [label="383_ return UpgradedStandardToken(upgradedAddress).allowanceByLegacy(_owner, _spender);\n2541-return-384-384", type_label=return];
2554 [label="385_ return super.allowance(_owner, _spender);\n2554-return-386-386", type_label=return];
2563 [label="388_ transferFrom\n2563-function_definition-389-396", type_label=function_definition];
2578 [label="388_ validDestination(_to)\n2578-expression_statement-389-389", type_label=expression_statement];
2587 [label="389_ require(!isBlackListed[_from]);\n2587-expression_statement-390-390", type_label=expression_statement];
2595 [label="390_ if\n2595-if-391-395", type_label=if];
2598 [label="391_ return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n2598-return-392-392", type_label=return];
2617 [label="393_ return super.transferFrom(_from, _to, _value);\n2617-return-394-394", type_label=return];
2628 [label="396_ approve\n2628-function_definition-397-403", type_label=function_definition];
2644 [label="397_ if\n2644-if-398-402", type_label=if];
2647 [label="398_ return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\n2647-return-399-399", type_label=return];
2664 [label="400_ return super.approve(_spender, _value);\n2664-return-401-401", type_label=return];
2673 [label="403_ increaseApproval\n2673-function_definition-404-410", type_label=function_definition];
2689 [label="404_ if\n2689-if-405-409", type_label=if];
2692 [label="405_ return UpgradedStandardToken(upgradedAddress).increaseApprovalByLegacy(msg.sender, _spender, _value);\n2692-return-406-406", type_label=return];
2709 [label="407_ return super.increaseApproval(_spender, _value);\n2709-return-408-408", type_label=return];
2718 [label="410_ decreaseApproval\n2718-function_definition-411-417", type_label=function_definition];
2734 [label="411_ if\n2734-if-412-416", type_label=if];
2737 [label="412_ return UpgradedStandardToken(upgradedAddress).decreaseApprovalByLegacy(msg.sender, _spender, _value);\n2737-return-413-413", type_label=return];
2754 [label="414_ return super.decreaseApproval(_spender, _value);\n2754-return-415-415", type_label=return];
2763 [label="417_ deprecate\n2763-function_definition-418-422", type_label=function_definition];
2770 [label="417_ onlyCEO\n2770-expression_statement-418-418", type_label=expression_statement];
2772 [label="417_ whenPaused\n2772-expression_statement-418-418", type_label=expression_statement];
2775 [label="418_ deprecated = true;\n2775-expression_statement-419-419", type_label=expression_statement];
2780 [label="419_ upgradedAddress = _upgradedAddress;\n2780-expression_statement-420-420", type_label=expression_statement];
2794 [label="423_ setFeeParams\n2794-function_definition-424-428", type_label=function_definition];
2805 [label="423_ onlyCEO\n2805-expression_statement-424-424", type_label=expression_statement];
2808 [label="424_ basisPointsRate = newBasisPoints;\n2808-expression_statement-425-425", type_label=expression_statement];
2812 [label="425_ maximumFee = newMaxFee.mul(uint(10)**decimals);\n2812-expression_statement-426-426", type_label=expression_statement];
2831 [label="428_ transferAssetOwner\n2831-function_definition-429-433", type_label=function_definition];
2838 [label="428_ onlyCEO\n2838-expression_statement-429-429", type_label=expression_statement];
2841 [label="429_ require(newAssetOwner != address(0));\n2841-expression_statement-430-430", type_label=expression_statement];
2850 [label="430_ assetOwner = newAssetOwner;\n2850-expression_statement-431-431", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
1049;
1259;
1447;
38 -> 47  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
49 -> 59  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
89 -> 102  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
111 -> 124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
133 -> 147  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
157 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
223 -> 230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 237  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
237 -> 244  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
244 -> 251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
269 -> 282  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
291 -> 308  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
308 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
317 -> 327  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
334 -> 344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 361  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
368 -> 378  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
385 -> 395  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
402 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
419 -> 429  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
436 -> 446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
453 -> 463  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
470 -> 480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
487 -> 499  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
514 -> 526  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
541 -> 555  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
544 -> 553  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
555 -> 569  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
558 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
569 -> 583  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
572 -> 581  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
583 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
586 -> 595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
600 -> 609  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
614 -> 638  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
631 -> 636  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
631 -> 638  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
636 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
638 -> 646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
646 -> 655  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
655 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
657 -> 674  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
674 -> 682  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
682 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
684 -> 701  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
701 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
712 -> 729  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
729 -> 737  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
737 -> 744  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
744 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
882 -> 888  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
888 -> 892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
892 -> 897  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
897 -> 902  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
907 -> 916  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
916 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
918 -> 934  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
934 -> 943  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
943 -> 954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
954 -> 971  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
971 -> 976  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
971 -> 980  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
976 -> 980  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
980 -> 991  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
991 -> 1008  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1008 -> 1021  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1021 -> 1026  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1021 -> 1049  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1059 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1062 -> 1076  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1076 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1098 -> 1118  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1118 -> 1127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1127 -> 1136  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1136 -> 1149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1149 -> 1166  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1166 -> 1171  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1166 -> 1175  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1171 -> 1175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1175 -> 1186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1186 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1199 -> 1212  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1212 -> 1233  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1233 -> 1238  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1233 -> 1259  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1267 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1270 -> 1286  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1306 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1309 -> 1326  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1326 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1332 -> 1348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1385 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1388 -> 1404  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1404 -> 1416  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1416 -> 1421  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1416 -> 1432  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1421 -> 1447  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1463 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1476 -> 1483  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1483 -> 1494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1486 -> 1492  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1497 -> 1502  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1504 -> 1512  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1506 -> 1508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1519 -> 1527  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1521 -> 1523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1543 -> 1561  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1561 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1570 -> 1592  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1592 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1603 -> 1621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1621 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1630 -> 1649  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1649 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1658 -> 1677  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1677 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1692 -> 1705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1705 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1716 -> 1726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1737 -> 1747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1758 -> 1768  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1768 -> 1775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1775 -> 1784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1784 -> 1790  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1833 -> 1847  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1847 -> 1854  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1854 -> 1861  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1868 -> 1878  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1900 -> 1910  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1910 -> 1921  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1921 -> 1933  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1933 -> 1946  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1946 -> 1955  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1972 -> 1982  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2004 -> 2014  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2014 -> 2025  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2025 -> 2037  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2037 -> 2050  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2050 -> 2059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2076 -> 2089  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2089 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2095 -> 2108  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2108 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2298 -> 2305  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2305 -> 2312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2312 -> 2318  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2318 -> 2323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2323 -> 2328  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2335 -> 2344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2344 -> 2353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2361 -> 2365  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2365 -> 2369  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2369 -> 2373  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2373 -> 2381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2381 -> 2386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2413 -> 2416  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2413 -> 2425  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2416 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2425 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2441 -> 2444  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2441 -> 2455  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2444 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2455 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2462 -> 2482  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2482 -> 2492  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2492 -> 2495  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2492 -> 2512  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2495 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2512 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2538 -> 2541  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2538 -> 2554  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2541 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2554 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2563 -> 2587  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2587 -> 2595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2595 -> 2598  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2595 -> 2617  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2598 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2617 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2644 -> 2647  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2644 -> 2664  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2647 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2664 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2689 -> 2692  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2689 -> 2709  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2692 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2709 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2734 -> 2737  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2734 -> 2754  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2737 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2754 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2763 -> 2775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2770 -> 2772  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2775 -> 2780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2794 -> 2808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2808 -> 2812  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2831 -> 2841  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2841 -> 2850  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
