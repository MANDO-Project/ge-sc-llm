digraph  {
13 [label="2_ transferTo_txorigin27\n13-function_definition-3-6", type_label=function_definition];
29 [label="3_ require(tx.origin == owner_txorigin27);\n29-expression_statement-4-4", type_label=expression_statement];
38 [label="4_ to.call.value(amount);\n38-expression_statement-5-5", type_label=expression_statement];
61 [label="7_ transferTo_txorigin31\n61-function_definition-8-11", type_label=function_definition];
77 [label="8_ require(tx.origin == owner_txorigin31);\n77-expression_statement-9-9", type_label=expression_statement];
86 [label="9_ to.call.value(amount);\n86-expression_statement-10-10", type_label=expression_statement];
109 [label="12_ sendto_txorigin13\n109-function_definition-13-16", type_label=function_definition];
125 [label="13_ require (tx.origin == owner_txorigin13);\n125-expression_statement-14-14", type_label=expression_statement];
134 [label="14_ receiver.transfer(amount);\n134-expression_statement-15-15", type_label=expression_statement];
155 [label="17_ sendto_txorigin9\n155-function_definition-18-21", type_label=function_definition];
171 [label="18_ require (tx.origin == owner_txorigin9);\n171-expression_statement-19-19", type_label=expression_statement];
180 [label="19_ receiver.transfer(amount);\n180-expression_statement-20-20", type_label=expression_statement];
187 [label="21_ uint256 public totalSupply;\n187-new_variable-22-22", type_label=new_variable];
192 [label="22_ sendto_txorigin25\n192-function_definition-23-26", type_label=function_definition];
208 [label="23_ require (tx.origin == owner_txorigin25);\n208-expression_statement-24-24", type_label=expression_statement];
217 [label="24_ receiver.transfer(amount);\n217-expression_statement-25-25", type_label=expression_statement];
224 [label="26_ string public name;\n224-new_variable-27-27", type_label=new_variable];
229 [label="27_ transferTo_txorigin19\n229-function_definition-28-31", type_label=function_definition];
245 [label="28_ require(tx.origin == owner_txorigin19);\n245-expression_statement-29-29", type_label=expression_statement];
254 [label="29_ to.call.value(amount);\n254-expression_statement-30-30", type_label=expression_statement];
263 [label="31_ uint8 public decimals;\n263-new_variable-32-32", type_label=new_variable];
268 [label="32_ withdrawAll_txorigin26\n268-function_definition-33-36", type_label=function_definition];
280 [label="33_ require(tx.origin == owner_txorigin26);\n280-expression_statement-34-34", type_label=expression_statement];
289 [label="34_ _recipient.transfer(address(this).balance);\n289-expression_statement-35-35", type_label=expression_statement];
300 [label="36_ string public symbol;\n300-new_variable-37-37", type_label=new_variable];
305 [label="37_ bug_txorigin20\n305-function_definition-38-40", type_label=function_definition];
313 [label="38_ require(tx.origin == owner_txorigin20);\n313-expression_statement-39-39", type_label=expression_statement];
322 [label="40_ address public owner;\n322-new_variable-41-41", type_label=new_variable];
327 [label="41_ bug_txorigin32\n327-function_definition-42-44", type_label=function_definition];
335 [label="42_ require(tx.origin == owner_txorigin32);\n335-expression_statement-43-43", type_label=expression_statement];
344 [label="44_ mapping (address => uint256) internal balances;\n344-new_variable-45-45", type_label=new_variable];
351 [label="45_ withdrawAll_txorigin38\n351-function_definition-46-49", type_label=function_definition];
363 [label="46_ require(tx.origin == owner_txorigin38);\n363-expression_statement-47-47", type_label=expression_statement];
372 [label="47_ _recipient.transfer(address(this).balance);\n372-expression_statement-48-48", type_label=expression_statement];
383 [label="49_ mapping (address => mapping (address => uint256)) internal allowed;\n383-new_variable-50-50", type_label=new_variable];
392 [label="50_ bug_txorigin4\n392-function_definition-51-53", type_label=function_definition];
400 [label="51_ require(tx.origin == owner_txorigin4);\n400-expression_statement-52-52", type_label=expression_statement];
409 [label="53_ bool isTransPaused=false;\n409-new_variable-54-54", type_label=new_variable];
425 [label="58_ owner=msg.sender;\n425-expression_statement-59-59", type_label=expression_statement];
431 [label="59_ if__initialAmount<=0\n431-if-60-66", type_label=if];
1595 [label="59_ end_if", type_label=end_if];
436 [label="60_ totalSupply = 100000000000000000;\n436-expression_statement-61-61", type_label=expression_statement];
440 [label="61_ balances[owner]=totalSupply;\n440-expression_statement-62-62", type_label=expression_statement];
447 [label="63_ totalSupply = _initialAmount;\n447-expression_statement-64-64", type_label=expression_statement];
451 [label="64_ balances[owner]=_initialAmount;\n451-expression_statement-65-65", type_label=expression_statement];
457 [label="66_ if__decimalUnits<=0\n457-if-67-71", type_label=if];
1621 [label="66_ end_if", type_label=end_if];
462 [label="67_ decimals=2;\n462-expression_statement-68-68", type_label=expression_statement];
467 [label="69_ decimals = _decimalUnits;\n467-expression_statement-70-70", type_label=expression_statement];
471 [label="71_ name = \"CareerOn Chain Token\";\n471-expression_statement-72-72", type_label=expression_statement];
476 [label="72_ symbol = \"COT\";\n476-expression_statement-73-73", type_label=expression_statement];
481 [label="74_ transferTo_txorigin7\n481-function_definition-75-78", type_label=function_definition];
497 [label="75_ require(tx.origin == owner_txorigin7);\n497-expression_statement-76-76", type_label=expression_statement];
506 [label="76_ to.call.value(amount);\n506-expression_statement-77-77", type_label=expression_statement];
515 [label="78_ transfer\n515-function_definition-79-96", type_label=function_definition];
532 [label="82_ assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to]\n        );\n532-expression_statement-83-87", type_label=expression_statement];
562 [label="87_ balances[msg.sender] -= _value;\n562-expression_statement-88-88", type_label=expression_statement];
563 [label="87_ balances[msg.sender] -= _value\n563-expression_statement-88-88", type_label=expression_statement];
570 [label="88_ balances[_to] += _value;\n570-expression_statement-89-89", type_label=expression_statement];
571 [label="88_ balances[_to] += _value\n571-expression_statement-89-89", type_label=expression_statement];
576 [label="89_ if_msg.sender==owner\n576-if-90-94", type_label=if];
1740 [label="89_ end_if", type_label=end_if];
604 [label="94_ return true;\n604-return-95-95", type_label=return];
607 [label="96_ transferTo_txorigin23\n607-function_definition-97-100", type_label=function_definition];
623 [label="97_ require(tx.origin == owner_txorigin23);\n623-expression_statement-98-98", type_label=expression_statement];
632 [label="98_ to.call.value(amount);\n632-expression_statement-99-99", type_label=expression_statement];
641 [label="100_ transferFrom\n641-function_definition-101-121", type_label=function_definition];
662 [label="105_ assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to] &&\n                allowed[_from][msg.sender] >= _value\n        );\n662-expression_statement-106-111", type_label=expression_statement];
702 [label="111_ balances[_to] += _value;\n702-expression_statement-112-112", type_label=expression_statement];
703 [label="111_ balances[_to] += _value\n703-expression_statement-112-112", type_label=expression_statement];
708 [label="112_ balances[_from] -= _value;\n708-expression_statement-113-113", type_label=expression_statement];
709 [label="112_ balances[_from] -= _value\n709-expression_statement-113-113", type_label=expression_statement];
714 [label="113_ allowed[_from][msg.sender] -= _value;\n714-expression_statement-114-114", type_label=expression_statement];
715 [label="113_ allowed[_from][msg.sender] -= _value\n715-expression_statement-114-114", type_label=expression_statement];
724 [label="114_ if__from==owner\n724-if-115-119", type_label=if];
1888 [label="114_ end_if", type_label=end_if];
748 [label="119_ return true;\n748-return-120-120", type_label=return];
751 [label="121_ withdrawAll_txorigin14\n751-function_definition-122-125", type_label=function_definition];
763 [label="122_ require(tx.origin == owner_txorigin14);\n763-expression_statement-123-123", type_label=expression_statement];
772 [label="123_ _recipient.transfer(address(this).balance);\n772-expression_statement-124-124", type_label=expression_statement];
783 [label="125_ approve\n783-function_definition-126-132", type_label=function_definition];
800 [label="127_ assert(msg.sender!=_spender && _value>0);\n800-expression_statement-128-128", type_label=expression_statement];
813 [label="128_ allowed[msg.sender][_spender] = _value;\n813-expression_statement-129-129", type_label=expression_statement];
833 [label="130_ return true;\n833-return-131-131", type_label=return];
836 [label="132_ withdrawAll_txorigin30\n836-function_definition-133-136", type_label=function_definition];
848 [label="133_ require(tx.origin == owner_txorigin30);\n848-expression_statement-134-134", type_label=expression_statement];
857 [label="134_ _recipient.transfer(address(this).balance);\n857-expression_statement-135-135", type_label=expression_statement];
868 [label="136_ allowance\n868-function_definition-137-142", type_label=function_definition];
886 [label="140_ return allowed[_owner][_spender];\n886-return-141-141", type_label=return];
892 [label="142_ bug_txorigin8\n892-function_definition-143-145", type_label=function_definition];
900 [label="143_ require(tx.origin == owner_txorigin8);\n900-expression_statement-144-144", type_label=expression_statement];
909 [label="145_ balanceOf\n909-function_definition-146-148", type_label=function_definition];
922 [label="146_ return balances[accountAddr];\n922-return-147-147", type_label=return];
926 [label="148_ transferTo_txorigin39\n926-function_definition-149-152", type_label=function_definition];
942 [label="149_ require(tx.origin == owner_txorigin39);\n942-expression_statement-150-150", type_label=expression_statement];
951 [label="150_ to.call.value(amount);\n951-expression_statement-151-151", type_label=expression_statement];
960 [label="152_ changeOwner\n960-function_definition-153-159", type_label=function_definition];
968 [label="153_ assert(msg.sender==owner && msg.sender!=newOwner);\n968-expression_statement-154-154", type_label=expression_statement];
983 [label="154_ balances[newOwner]=balances[owner];\n983-expression_statement-155-155", type_label=expression_statement];
991 [label="155_ balances[owner]=0;\n991-expression_statement-156-156", type_label=expression_statement];
997 [label="156_ owner=newOwner;\n997-expression_statement-157-157", type_label=expression_statement];
1013 [label="159_ bug_txorigin36\n1013-function_definition-160-162", type_label=function_definition];
1021 [label="160_ require(tx.origin == owner_txorigin36);\n1021-expression_statement-161-161", type_label=expression_statement];
1030 [label="162_ setPauseStatus\n1030-function_definition-163-166", type_label=function_definition];
1038 [label="163_ assert(msg.sender==owner);\n1038-expression_statement-164-164", type_label=expression_statement];
1047 [label="164_ isTransPaused=isPaused;\n1047-expression_statement-165-165", type_label=expression_statement];
1051 [label="166_ transferTo_txorigin35\n1051-function_definition-167-170", type_label=function_definition];
1067 [label="167_ require(tx.origin == owner_txorigin35);\n1067-expression_statement-168-168", type_label=expression_statement];
1076 [label="168_ to.call.value(amount);\n1076-expression_statement-169-169", type_label=expression_statement];
1085 [label="170_ changeContractName\n1085-function_definition-171-175", type_label=function_definition];
1097 [label="171_ assert(msg.sender==owner);\n1097-expression_statement-172-172", type_label=expression_statement];
1106 [label="172_ name=_newName;\n1106-expression_statement-173-173", type_label=expression_statement];
1110 [label="173_ symbol=_newSymbol;\n1110-expression_statement-174-174", type_label=expression_statement];
1114 [label="175_ bug_txorigin40\n1114-function_definition-176-178", type_label=function_definition];
1122 [label="176_ require(tx.origin == owner_txorigin40);\n1122-expression_statement-177-177", type_label=expression_statement];
1137 [label="181_ sendto_txorigin33\n1137-function_definition-182-185", type_label=function_definition];
1153 [label="182_ require (tx.origin == owner_txorigin33);\n1153-expression_statement-183-183", type_label=expression_statement];
1162 [label="183_ receiver.transfer(amount);\n1162-expression_statement-184-184", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(1595, (59, 2), (65, 3))";
"(1621, (66, 2), (70, 3))";
594;
"(1740, (89, 2), (93, 3))";
740;
"(1888, (114, 8), (118, 3))";
13 -> 29  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
61 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 86  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
125 -> 134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
155 -> 171  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
171 -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
192 -> 208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
208 -> 217  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
229 -> 245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
245 -> 254  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
268 -> 280  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
280 -> 289  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
305 -> 313  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
327 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
363 -> 372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
392 -> 400  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
431 -> 436  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
431 -> 447  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
436 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
440 -> "(1595, (59, 2), (65, 3))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
447 -> 451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
451 -> "(1595, (59, 2), (65, 3))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
457 -> 462  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
457 -> 467  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
462 -> "(1621, (66, 2), (70, 3))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
467 -> "(1621, (66, 2), (70, 3))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
471 -> 476  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
481 -> 497  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
497 -> 506  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 532  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
532 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
562 -> 570  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
570 -> 576  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
604 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
607 -> 623  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
623 -> 632  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
641 -> 662  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
662 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
702 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 724  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
748 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
751 -> 763  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
763 -> 772  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
783 -> 800  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
800 -> 813  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
833 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
836 -> 848  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
848 -> 857  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
868 -> 886  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
886 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
892 -> 900  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
909 -> 922  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
922 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
926 -> 942  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
942 -> 951  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
960 -> 968  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
968 -> 983  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
983 -> 991  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
991 -> 997  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1013 -> 1021  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1030 -> 1038  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1038 -> 1047  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1051 -> 1067  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1067 -> 1076  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1085 -> 1097  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1097 -> 1106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1106 -> 1110  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1114 -> 1122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1137 -> 1153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1153 -> 1162  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1595, (59, 2), (65, 3))" -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1621, (66, 2), (70, 3))" -> 471  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
594 -> "(1740, (89, 2), (93, 3))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
740 -> "(1888, (114, 8), (118, 3))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
}
