digraph  {
12 [label="2_ address public owner;\n12-new_variable-3-3", type_label=new_variable];
27 [label="4_ Ownable\n27-function_definition-5-7", type_label=function_definition];
31 [label="5_ owner = msg.sender;\n31-expression_statement-6-6", type_label=expression_statement];
37 [label="7_ modifier onlyOwner() {\n		require(msg.sender == owner);\n		_;\n	}\n37-expression_statement-8-11", type_label=expression_statement];
40 [label="8_ require(msg.sender == owner);\n40-expression_statement-9-9", type_label=expression_statement];
49 [label="9_ _;\n49-expression_statement-10-10", type_label=expression_statement];
51 [label="11_ transferOwnership\n51-function_definition-12-16", type_label=function_definition];
58 [label="11_ onlyOwner\n58-expression_statement-12-12", type_label=expression_statement];
61 [label="12_ require(newOwner != address(0) && newOwner != owner);\n61-expression_statement-13-13", type_label=expression_statement];
80 [label="14_ owner = newOwner;\n80-expression_statement-15-15", type_label=expression_statement];
87 [label="18_ mul\n87-function_definition-19-23", type_label=function_definition];
104 [label="19_ uint256 c = a * b;\n104-new_variable-20-20", type_label=new_variable];
105 [label="19_ uint256 c\n105-new_variable-20-20", type_label=new_variable];
112 [label="20_ assert(a == 0 || c / a == b);\n112-expression_statement-21-21", type_label=expression_statement];
125 [label="21_ return c;\n125-return-22-22", type_label=return];
127 [label="23_ div\n127-function_definition-24-28", type_label=function_definition];
144 [label="24_ assert(b > 0);\n144-expression_statement-25-25", type_label=expression_statement];
151 [label="25_ uint256 c = a / b;\n151-new_variable-26-26", type_label=new_variable];
152 [label="25_ uint256 c\n152-new_variable-26-26", type_label=new_variable];
159 [label="26_ return c;\n159-return-27-27", type_label=return];
161 [label="28_ sub\n161-function_definition-29-32", type_label=function_definition];
178 [label="29_ assert(b <= a);\n178-expression_statement-30-30", type_label=expression_statement];
185 [label="30_ return a - b;\n185-return-31-31", type_label=return];
189 [label="32_ add\n189-function_definition-33-37", type_label=function_definition];
206 [label="33_ uint256 c = a + b;\n206-new_variable-34-34", type_label=new_variable];
207 [label="33_ uint256 c\n207-new_variable-34-34", type_label=new_variable];
214 [label="34_ assert(c >= a);\n214-expression_statement-35-35", type_label=expression_statement];
221 [label="35_ return c;\n221-return-36-36", type_label=return];
226 [label="39_ tokenFallback\n226-function_definition-40-44", type_label=function_definition];
243 [label="40_ _from;\n243-expression_statement-41-41", type_label=expression_statement];
245 [label="41_ _value;\n245-expression_statement-42-42", type_label=expression_statement];
247 [label="42_ _data;\n247-expression_statement-43-43", type_label=expression_statement];
299 [label="52_ uint256 public totalSupply;\n299-new_variable-53-53", type_label=new_variable];
309 [label="54_ mapping(address => uint256) balances;\n309-new_variable-55-55", type_label=new_variable];
315 [label="55_ transferToAddress\n315-function_definition-56-62", type_label=function_definition];
335 [label="56_ balances[msg.sender] = balances[msg.sender].sub(_value);\n335-expression_statement-57-57", type_label=expression_statement];
352 [label="57_ balances[_to] = balances[_to].add(_value);\n352-expression_statement-58-58", type_label=expression_statement];
387 [label="60_ return true;\n387-return-61-61", type_label=return];
390 [label="62_ transferToContract\n390-function_definition-63-71", type_label=function_definition];
410 [label="63_ balances[msg.sender] = balances[msg.sender].sub(_value);\n410-expression_statement-64-64", type_label=expression_statement];
427 [label="64_ balances[_to] = balances[_to].add(_value);\n427-expression_statement-65-65", type_label=expression_statement];
440 [label="65_ ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n440-new_variable-66-66", type_label=new_variable];
441 [label="65_ ERC223ReceivingContract receiver\n441-new_variable-66-66", type_label=new_variable];
450 [label="66_ receiver.tokenFallback(msg.sender, _value, _data);\n450-expression_statement-67-67", type_label=expression_statement];
485 [label="69_ return true;\n485-return-70-70", type_label=return];
488 [label="71_ transfer\n488-function_definition-72-85", type_label=function_definition];
508 [label="72_ require(_to != address(0));\n508-expression_statement-73-73", type_label=expression_statement];
517 [label="73_ require(_value <= balances[msg.sender]);\n517-expression_statement-74-74", type_label=expression_statement];
528 [label="74_ require(_value > 0);\n528-expression_statement-75-75", type_label=expression_statement];
535 [label="75_ uint256 codeLength;\n535-new_variable-76-76", type_label=new_variable];
536 [label="75_ uint256 codeLength\n536-new_variable-76-76", type_label=new_variable];
550 [label="79_ if_codeLength > 0\n550-if-80-84", type_label=if];
555 [label="80_ return transferToContract(_to, _value, _data);\n555-return-81-81", type_label=return];
565 [label="82_ return transferToAddress(_to, _value, _data);\n565-return-83-83", type_label=return];
574 [label="85_ transfer\n574-function_definition-86-100", type_label=function_definition];
590 [label="86_ require(_to != address(0));\n590-expression_statement-87-87", type_label=expression_statement];
599 [label="87_ require(_value <= balances[msg.sender]);\n599-expression_statement-88-88", type_label=expression_statement];
610 [label="88_ require(_value > 0);\n610-expression_statement-89-89", type_label=expression_statement];
617 [label="89_ uint256 codeLength;\n617-new_variable-90-90", type_label=new_variable];
618 [label="89_ uint256 codeLength\n618-new_variable-90-90", type_label=new_variable];
622 [label="90_ bytes memory empty;\n622-new_variable-91-91", type_label=new_variable];
623 [label="90_ bytes memory empty\n623-new_variable-91-91", type_label=new_variable];
637 [label="94_ if_codeLength > 0\n637-if-95-99", type_label=if];
642 [label="95_ return transferToContract(_to, _value, empty);\n642-return-96-96", type_label=return];
652 [label="97_ return transferToAddress(_to, _value, empty);\n652-return-98-98", type_label=return];
661 [label="100_ balanceOf\n661-function_definition-101-103", type_label=function_definition];
668 [label="100_ constant\n668-expression_statement-101-101", type_label=expression_statement];
676 [label="101_ return balances[_address];\n676-return-102-102", type_label=return];
686 [label="105_ mapping (address => mapping (address => uint256)) internal allowed;\n686-new_variable-106-106", type_label=new_variable];
701 [label="108_ string public constant name = \"NOMIDMAN\";\n701-new_variable-109-109", type_label=new_variable];
708 [label="109_ uint public constant decimals = 18;\n708-new_variable-110-110", type_label=new_variable];
714 [label="110_ string public constant symbol = \"MANO\";\n714-new_variable-111-111", type_label=new_variable];
721 [label="111_ Nomid\n721-function_definition-112-116", type_label=function_definition];
725 [label="112_ totalSupply=901000000 *(10**decimals);\n725-expression_statement-113-113", type_label=expression_statement];
734 [label="113_ owner = msg.sender;\n734-expression_statement-114-114", type_label=expression_statement];
740 [label="114_ balances[msg.sender] = 901000000 * (10**decimals);\n740-expression_statement-115-115", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
27 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
40 -> 49  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
51 -> 61  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
104 -> 112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
125 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
127 -> 144  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
144 -> 151  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 159  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
159 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
161 -> 178  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
178 -> 185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
185 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
189 -> 206  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
206 -> 214  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
214 -> 221  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
221 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
226 -> 243  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
243 -> 245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
245 -> 247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
315 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
335 -> 352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
387 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
390 -> 410  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
410 -> 427  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
427 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
440 -> 450  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
485 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
488 -> 508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
508 -> 517  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
517 -> 528  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
528 -> 535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
550 -> 555  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
550 -> 565  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
555 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
565 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
574 -> 590  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
590 -> 599  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
599 -> 610  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
610 -> 617  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
617 -> 622  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
637 -> 642  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
637 -> 652  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
642 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
652 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
661 -> 676  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
676 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
701 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
721 -> 725  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
725 -> 734  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
734 -> 740  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
