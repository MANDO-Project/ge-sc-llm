digraph  {
13 [label="2_ mul\n13-function_definition-3-10", type_label=function_definition];
30 [label="3_ if_a == 0\n30-if-4-6", type_label=if];
35 [label="4_ return 0;\n35-return-5-5", type_label=return];
37 [label="6_ uint256 c = a * b;\n37-new_variable-7-7", type_label=new_variable];
38 [label="6_ uint256 c\n38-new_variable-7-7", type_label=new_variable];
45 [label="7_ require(c / a == b);\n45-expression_statement-8-8", type_label=expression_statement];
54 [label="8_ return c;\n54-return-9-9", type_label=return];
56 [label="10_ div\n56-function_definition-11-15", type_label=function_definition];
73 [label="11_ require(b > 0);\n73-expression_statement-12-12", type_label=expression_statement];
80 [label="12_ uint256 c = a / b;\n80-new_variable-13-13", type_label=new_variable];
81 [label="12_ uint256 c\n81-new_variable-13-13", type_label=new_variable];
88 [label="13_ return c;\n88-return-14-14", type_label=return];
90 [label="15_ sub\n90-function_definition-16-20", type_label=function_definition];
107 [label="16_ require(b <= a);\n107-expression_statement-17-17", type_label=expression_statement];
114 [label="17_ uint256 c = a - b;\n114-new_variable-18-18", type_label=new_variable];
115 [label="17_ uint256 c\n115-new_variable-18-18", type_label=new_variable];
122 [label="18_ return c;\n122-return-19-19", type_label=return];
124 [label="20_ add\n124-function_definition-21-25", type_label=function_definition];
141 [label="21_ uint256 c = a + b;\n141-new_variable-22-22", type_label=new_variable];
142 [label="21_ uint256 c\n142-new_variable-22-22", type_label=new_variable];
149 [label="22_ require(c >= a);\n149-expression_statement-23-23", type_label=expression_statement];
156 [label="23_ return c;\n156-return-24-24", type_label=return];
158 [label="25_ mod\n158-function_definition-26-29", type_label=function_definition];
175 [label="26_ require(b != 0);\n175-expression_statement-27-27", type_label=expression_statement];
182 [label="27_ return a % b;\n182-return-28-28", type_label=return];
189 [label="31_ transfer\n189-function_definition-32-32", type_label=function_definition];
204 [label="32_ approve\n204-function_definition-33-33", type_label=function_definition];
219 [label="33_ transferFrom\n219-function_definition-34-34", type_label=function_definition];
238 [label="34_ totalSupply\n238-function_definition-35-35", type_label=function_definition];
246 [label="35_ balanceOf\n246-function_definition-36-36", type_label=function_definition];
258 [label="36_ allowance\n258-function_definition-37-37", type_label=function_definition];
313 [label="42_ mapping (address => uint256) private _balances;\n313-new_variable-43-43", type_label=new_variable];
320 [label="43_ mapping (address => mapping (address => uint256)) private _allowed;\n320-new_variable-44-44", type_label=new_variable];
329 [label="44_ uint256 private _totalSupply;\n329-new_variable-45-45", type_label=new_variable];
334 [label="45_ totalSupply\n334-function_definition-46-48", type_label=function_definition];
343 [label="46_ return _totalSupply;\n343-return-47-47", type_label=return];
345 [label="48_ balanceOf\n345-function_definition-49-51", type_label=function_definition];
358 [label="49_ return _balances[owner];\n358-return-50-50", type_label=return];
362 [label="51_ allowance\n362-function_definition-52-54", type_label=function_definition];
379 [label="52_ return _allowed[owner][spender];\n379-return-53-53", type_label=return];
385 [label="54_ transfer\n385-function_definition-55-58", type_label=function_definition];
401 [label="55_ _transfer(msg.sender, to, value);\n401-expression_statement-56-56", type_label=expression_statement];
412 [label="56_ return true;\n412-return-57-57", type_label=return];
415 [label="58_ approve\n415-function_definition-59-64", type_label=function_definition];
431 [label="59_ require(spender != address(0));\n431-expression_statement-60-60", type_label=expression_statement];
440 [label="60_ _allowed[msg.sender][spender] = value;\n440-expression_statement-61-61", type_label=expression_statement];
460 [label="62_ return true;\n460-return-63-63", type_label=return];
463 [label="64_ transferFrom\n463-function_definition-65-70", type_label=function_definition];
483 [label="65_ _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n483-expression_statement-66-66", type_label=expression_statement];
504 [label="66_ _transfer(from, to, value);\n504-expression_statement-67-67", type_label=expression_statement];
529 [label="68_ return true;\n529-return-69-69", type_label=return];
532 [label="70_ increaseAllowance\n532-function_definition-71-76", type_label=function_definition];
548 [label="71_ require(spender != address(0));\n548-expression_statement-72-72", type_label=expression_statement];
557 [label="72_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].add(addedValue);\n557-expression_statement-73-73", type_label=expression_statement];
594 [label="74_ return true;\n594-return-75-75", type_label=return];
597 [label="76_ decreaseAllowance\n597-function_definition-77-82", type_label=function_definition];
613 [label="77_ require(spender != address(0));\n613-expression_statement-78-78", type_label=expression_statement];
622 [label="78_ _allowed[msg.sender][spender] = _allowed[msg.sender][spender].sub(subtractedValue);\n622-expression_statement-79-79", type_label=expression_statement];
659 [label="80_ return true;\n659-return-81-81", type_label=return];
662 [label="82_ _transfer\n662-function_definition-83-88", type_label=function_definition];
678 [label="83_ require(to != address(0));\n678-expression_statement-84-84", type_label=expression_statement];
687 [label="84_ _balances[from] = _balances[from].sub(value);\n687-expression_statement-85-85", type_label=expression_statement];
700 [label="85_ _balances[to] = _balances[to].add(value);\n700-expression_statement-86-86", type_label=expression_statement];
721 [label="88_ _mint\n721-function_definition-89-94", type_label=function_definition];
733 [label="89_ require(account != address(0));\n733-expression_statement-90-90", type_label=expression_statement];
742 [label="90_ _totalSupply = _totalSupply.add(value);\n742-expression_statement-91-91", type_label=expression_statement];
751 [label="91_ _balances[account] = _balances[account].add(value);\n751-expression_statement-92-92", type_label=expression_statement];
774 [label="94_ _burn\n774-function_definition-95-100", type_label=function_definition];
786 [label="95_ require(account != address(0));\n786-expression_statement-96-96", type_label=expression_statement];
795 [label="96_ _totalSupply = _totalSupply.sub(value);\n795-expression_statement-97-97", type_label=expression_statement];
804 [label="97_ _balances[account] = _balances[account].sub(value);\n804-expression_statement-98-98", type_label=expression_statement];
827 [label="100_ _burnFrom\n827-function_definition-101-105", type_label=function_definition];
839 [label="101_ _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(value);\n839-expression_statement-102-102", type_label=expression_statement];
860 [label="102_ _burn(account, value);\n860-expression_statement-103-103", type_label=expression_statement];
889 [label="107_ string private _name;\n889-new_variable-108-108", type_label=new_variable];
894 [label="108_ string private _symbol;\n894-new_variable-109-109", type_label=new_variable];
899 [label="109_ uint8 private _decimals;\n899-new_variable-110-110", type_label=new_variable];
918 [label="111_ _name = name;\n918-expression_statement-112-112", type_label=expression_statement];
922 [label="112_ _symbol = symbol;\n922-expression_statement-113-113", type_label=expression_statement];
926 [label="113_ _decimals = decimals;\n926-expression_statement-114-114", type_label=expression_statement];
930 [label="115_ name\n930-function_definition-116-118", type_label=function_definition];
939 [label="116_ return _name;\n939-return-117-117", type_label=return];
941 [label="118_ symbol\n941-function_definition-119-121", type_label=function_definition];
950 [label="119_ return _symbol;\n950-return-120-120", type_label=return];
952 [label="121_ decimals\n952-function_definition-122-124", type_label=function_definition];
961 [label="122_ return _decimals;\n961-return-123-123", type_label=return];
993 [label="133_ ERC20Detailed(_name, _symbol, _decimals)\n993-expression_statement-134-134", type_label=expression_statement];
1001 [label="134_ ERC20()\n1001-expression_statement-135-135", type_label=expression_statement];
1004 [label="137_ require(_amount > 0, \"amount has to be greater than 0\");\n1004-expression_statement-138-138", type_label=expression_statement];
1014 [label="138_ uint256 toMint = _amount.mul(10 ** uint256(_decimals));\n1014-new_variable-139-139", type_label=new_variable];
1015 [label="138_ uint256 toMint\n1015-new_variable-139-139", type_label=new_variable];
1029 [label="139_ _mint(_initialWallet, toMint);\n1029-expression_statement-140-140", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 37  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
313 -> 320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
334 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
343 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
345 -> 358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
358 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
362 -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
379 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
385 -> 401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
415 -> 431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
431 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
460 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
463 -> 483  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
483 -> 504  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
529 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
532 -> 548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
548 -> 557  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
594 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
597 -> 613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
613 -> 622  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
659 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
662 -> 678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
678 -> 687  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 700  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
721 -> 733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
733 -> 742  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
742 -> 751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
774 -> 786  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
786 -> 795  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
795 -> 804  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
827 -> 839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
839 -> 860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
889 -> 894  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
894 -> 899  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
918 -> 922  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
922 -> 926  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
930 -> 939  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
939 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
941 -> 950  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
950 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
952 -> 961  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
961 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
993 -> 1001  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1004 -> 1014  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1014 -> 1029  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
