digraph  {
12 [label="2_ mul\n12-function_definition-3-10", type_label=function_definition];
29 [label="3_ if_a == 0\n29-if-4-6", type_label=if];
34 [label="4_ return 0;\n34-return-5-5", type_label=return];
36 [label="6_ uint256 c = a * b;\n36-new_variable-7-7", type_label=new_variable];
37 [label="6_ uint256 c\n37-new_variable-7-7", type_label=new_variable];
44 [label="7_ assert(c / a == b);\n44-expression_statement-8-8", type_label=expression_statement];
53 [label="8_ return c;\n53-return-9-9", type_label=return];
55 [label="10_ div\n55-function_definition-11-14", type_label=function_definition];
72 [label="11_ uint256 c = a / b;\n72-new_variable-12-12", type_label=new_variable];
73 [label="11_ uint256 c\n73-new_variable-12-12", type_label=new_variable];
80 [label="12_ return c;\n80-return-13-13", type_label=return];
82 [label="14_ sub\n82-function_definition-15-18", type_label=function_definition];
99 [label="15_ assert(b <= a);\n99-expression_statement-16-16", type_label=expression_statement];
106 [label="16_ return a - b;\n106-return-17-17", type_label=return];
110 [label="18_ add\n110-function_definition-19-23", type_label=function_definition];
127 [label="19_ uint256 c = a + b;\n127-new_variable-20-20", type_label=new_variable];
128 [label="19_ uint256 c\n128-new_variable-20-20", type_label=new_variable];
135 [label="20_ assert(c >= a);\n135-expression_statement-21-21", type_label=expression_statement];
142 [label="21_ return c;\n142-return-22-22", type_label=return];
147 [label="25_ balanceOf\n147-function_definition-26-26", type_label=function_definition];
160 [label="26_ ownerOf\n160-function_definition-27-27", type_label=function_definition];
173 [label="27_ transfer\n173-function_definition-28-28", type_label=function_definition];
188 [label="28_ approve\n188-function_definition-29-29", type_label=function_definition];
203 [label="29_ takeOwnership\n203-function_definition-30-30", type_label=function_definition];
210 [label="30_ totalSupply\n210-function_definition-31-31", type_label=function_definition];
218 [label="31_ owns\n218-function_definition-32-32", type_label=function_definition];
234 [label="32_ allowance\n234-function_definition-33-33", type_label=function_definition];
250 [label="33_ transferFrom\n250-function_definition-34-34", type_label=function_definition];
269 [label="34_ createLand\n269-function_definition-35-35", type_label=function_definition];
283 [label="37_ allowance\n283-function_definition-38-38", type_label=function_definition];
299 [label="38_ transferFrom\n299-function_definition-39-39", type_label=function_definition];
318 [label="39_ approve\n318-function_definition-40-40", type_label=function_definition];
333 [label="40_ totalSupply\n333-function_definition-41-41", type_label=function_definition];
341 [label="41_ balanceOf\n341-function_definition-42-42", type_label=function_definition];
353 [label="42_ transfer\n353-function_definition-43-43", type_label=function_definition];
399 [label="47_ address public owner;\n399-new_variable-48-48", type_label=new_variable];
404 [label="48_ mapping(address => bool) admins;\n404-new_variable-49-49", type_label=new_variable];
434 [label="53_ owner = msg.sender;\n434-expression_statement-54-54", type_label=expression_statement];
440 [label="55_ modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n440-expression_statement-56-59", type_label=expression_statement];
443 [label="56_ require(msg.sender == owner);\n443-expression_statement-57-57", type_label=expression_statement];
452 [label="57_ _;\n452-expression_statement-58-58", type_label=expression_statement];
454 [label="59_ modifier onlyAdmin() {\n        require(isAdmin(msg.sender));\n        _;\n    }\n454-expression_statement-60-63", type_label=expression_statement];
457 [label="60_ require(isAdmin(msg.sender));\n457-expression_statement-61-61", type_label=expression_statement];
467 [label="61_ _;\n467-expression_statement-62-62", type_label=expression_statement];
469 [label="63_ addAdmin\n469-function_definition-64-68", type_label=function_definition];
476 [label="63_ onlyOwner\n476-expression_statement-64-64", type_label=expression_statement];
479 [label="64_ require(_adminAddress != address(0));\n479-expression_statement-65-65", type_label=expression_statement];
488 [label="65_ admins[_adminAddress] = true;\n488-expression_statement-66-66", type_label=expression_statement];
499 [label="68_ delAdmin\n499-function_definition-69-73", type_label=function_definition];
506 [label="68_ onlyOwner\n506-expression_statement-69-69", type_label=expression_statement];
509 [label="69_ require(admins[_adminAddress]);\n509-expression_statement-70-70", type_label=expression_statement];
516 [label="70_ admins[_adminAddress] = false;\n516-expression_statement-71-71", type_label=expression_statement];
527 [label="73_ isAdmin\n527-function_definition-74-76", type_label=function_definition];
540 [label="74_ return admins[_adminAddress];\n540-return-75-75", type_label=return];
544 [label="76_ transferOwnership\n544-function_definition-77-81", type_label=function_definition];
551 [label="76_ onlyOwner\n551-expression_statement-77-77", type_label=expression_statement];
554 [label="77_ require(_newOwner != address(0));\n554-expression_statement-78-78", type_label=expression_statement];
569 [label="79_ owner = _newOwner;\n569-expression_statement-80-80", type_label=expression_statement];
576 [label="83_ receiveAuction\n576-function_definition-84-84", type_label=function_definition];
610 [label="87_ ERC20 public arconaToken;\n610-new_variable-88-88", type_label=new_variable];
616 [label="88_ struct Auction {\n        address owner;\n        address token;\n        uint tokenId;\n        uint startPrice;\n        uint stopTime;\n        address winner;\n        uint executeTime;\n        uint finalPrice;\n        bool executed;\n        bool exists;\n    }\n616-expression_statement-89-100", type_label=expression_statement];
658 [label="100_ mapping(address => bool) public acceptedTokens;\n658-new_variable-101-101", type_label=new_variable];
665 [label="101_ mapping(address => bool) public whiteList;\n665-new_variable-102-102", type_label=new_variable];
672 [label="102_ mapping (address => bool) public users;\n672-new_variable-103-103", type_label=new_variable];
679 [label="103_ mapping(uint256 => Auction) public auctions;\n679-new_variable-104-104", type_label=new_variable];
687 [label="104_ mapping (address => mapping (uint => uint)) public auctionIndex;\n687-new_variable-105-105", type_label=new_variable];
696 [label="105_ mapping(address => uint256[]) private ownedAuctions;\n696-new_variable-106-106", type_label=new_variable];
704 [label="106_ uint private lastAuctionId;\n704-new_variable-107-107", type_label=new_variable];
709 [label="107_ uint defaultExecuteTime = 24 hours;\n709-new_variable-108-108", type_label=new_variable];
715 [label="108_ uint public auctionFee = 300;\n715-new_variable-109-109", type_label=new_variable];
721 [label="109_ uint public gasInTokens = 1000000000000000000;\n721-new_variable-110-110", type_label=new_variable];
727 [label="110_ uint public minDuration = 1;\n727-new_variable-111-111", type_label=new_variable];
733 [label="111_ uint public maxDuration = 20160;\n733-new_variable-112-112", type_label=new_variable];
739 [label="112_ address public profitAddress;\n739-new_variable-113-113", type_label=new_variable];
852 [label="125_ arconaToken = ERC20(_token);\n852-expression_statement-126-126", type_label=expression_statement];
859 [label="126_ profitAddress = _profitAddress;\n859-expression_statement-127-127", type_label=expression_statement];
867 [label="129_ if\n867-if-130-133", type_label=if];
875 [label="130_ users[msg.sender] = true;\n875-expression_statement-131-131", type_label=expression_statement];
890 [label="134_ receiveCreateAuction\n890-function_definition-135-141", type_label=function_definition];
918 [label="135_ require(isAcceptedToken(_token));\n918-expression_statement-136-136", type_label=expression_statement];
926 [label="136_ require(_duration >= minDuration && _duration <= maxDuration);\n926-expression_statement-137-137", type_label=expression_statement];
937 [label="137_ _createAuction(_from, _token, _tokenId, _startPrice, _duration);\n937-expression_statement-138-138", type_label=expression_statement];
958 [label="139_ return true;\n958-return-140-140", type_label=return];
961 [label="141_ createAuction\n961-function_definition-142-147", type_label=function_definition];
985 [label="142_ require(isAcceptedToken(_token));\n985-expression_statement-143-143", type_label=expression_statement];
993 [label="143_ require(_duration >= minDuration && _duration <= maxDuration);\n993-expression_statement-144-144", type_label=expression_statement];
1004 [label="144_ _createAuction(msg.sender, _token, _tokenId, _startPrice, _duration);\n1004-expression_statement-145-145", type_label=expression_statement];
1019 [label="145_ return true;\n1019-return-146-146", type_label=return];
1022 [label="147_ _createAuction\n1022-function_definition-148-166", type_label=function_definition];
1050 [label="148_ require(ERC721Interface(_token).transferFrom(_from, this, _tokenId));\n1050-expression_statement-149-149", type_label=expression_statement];
1067 [label="149_ auctions[++lastAuctionId] = Auction({\n            owner : _from,\n            token : _token,\n            tokenId : _tokenId,\n            startPrice : _startPrice,\n            stopTime : now + (_duration * 1 minutes),\n            winner : address(0),\n            executeTime : now + (_duration * 1 minutes) + defaultExecuteTime,\n            finalPrice : 0,\n            executed : false,\n            exists: true\n            });\n1067-expression_statement-150-161", type_label=expression_statement];
1071 [label="149_ ++lastAuctionId\n1071-expression_statement-150-150", type_label=expression_statement];
1124 [label="161_ auctionIndex[_token][_tokenId] = lastAuctionId;\n1124-expression_statement-162-162", type_label=expression_statement];
1132 [label="162_ ownedAuctions[_from].push(lastAuctionId);\n1132-expression_statement-163-163", type_label=expression_statement];
1149 [label="164_ return lastAuctionId;\n1149-return-165-165", type_label=return];
1151 [label="166_ setWinner\n1151-function_definition-167-178", type_label=function_definition];
1169 [label="166_ onlyAdmin\n1169-expression_statement-167-167", type_label=expression_statement];
1173 [label="167_ require(auctions[_auctionId].exists);\n1173-expression_statement-168-168", type_label=expression_statement];
1182 [label="168_ require(!auctions[_auctionId].executed);\n1182-expression_statement-169-169", type_label=expression_statement];
1192 [label="169_ require(now > auctions[_auctionId].stopTime);\n1192-expression_statement-170-170", type_label=expression_statement];
1203 [label="170_ require(_finalPrice >= auctions[_auctionId].startPrice);\n1203-expression_statement-171-171", type_label=expression_statement];
1214 [label="171_ auctions[_auctionId].winner = _winner;\n1214-expression_statement-172-172", type_label=expression_statement];
1222 [label="172_ auctions[_auctionId].finalPrice = _finalPrice;\n1222-expression_statement-173-173", type_label=expression_statement];
1230 [label="173_ if__executeTime > 0\n1230-if-174-176", type_label=if];
1235 [label="174_ auctions[_auctionId].executeTime = now + (_executeTime * 1 minutes);\n1235-expression_statement-175-175", type_label=expression_statement];
1259 [label="178_ getToken\n1259-function_definition-179-194", type_label=function_definition];
1267 [label="179_ require(auctions[_auctionId].exists);\n1267-expression_statement-180-180", type_label=expression_statement];
1276 [label="180_ require(!auctions[_auctionId].executed);\n1276-expression_statement-181-181", type_label=expression_statement];
1286 [label="181_ require(now <= auctions[_auctionId].executeTime);\n1286-expression_statement-182-182", type_label=expression_statement];
1297 [label="182_ require(msg.sender == auctions[_auctionId].winner);\n1297-expression_statement-183-183", type_label=expression_statement];
1310 [label="183_ uint fullPrice = auctions[_auctionId].finalPrice;\n1310-new_variable-184-184", type_label=new_variable];
1311 [label="183_ uint fullPrice\n1311-new_variable-184-184", type_label=new_variable];
1320 [label="184_ require(arconaToken.transferFrom(msg.sender, this, fullPrice));\n1320-expression_statement-185-185", type_label=expression_statement];
1336 [label="185_ if\n1336-if-186-189", type_label=if];
1347 [label="186_ uint fee = valueFromPercent(fullPrice, auctionFee);\n1347-new_variable-187-187", type_label=new_variable];
1348 [label="186_ uint fee\n1348-new_variable-187-187", type_label=new_variable];
1358 [label="187_ fullPrice = fullPrice.sub(fee).sub(gasInTokens);\n1358-expression_statement-188-188", type_label=expression_statement];
1372 [label="189_ arconaToken.transfer(auctions[_auctionId].owner, fullPrice);\n1372-expression_statement-190-190", type_label=expression_statement];
1385 [label="190_ require(ERC721Interface(auctions[_auctionId].token).transfer(auctions[_auctionId].winner, auctions[_auctionId].tokenId));\n1385-expression_statement-191-191", type_label=expression_statement];
1412 [label="191_ auctions[_auctionId].executed = true;\n1412-expression_statement-192-192", type_label=expression_statement];
1429 [label="194_ cancelAuction\n1429-function_definition-195-202", type_label=function_definition];
1437 [label="195_ require(auctions[_auctionId].exists);\n1437-expression_statement-196-196", type_label=expression_statement];
1446 [label="196_ require(!auctions[_auctionId].executed);\n1446-expression_statement-197-197", type_label=expression_statement];
1456 [label="197_ require(msg.sender == auctions[_auctionId].owner);\n1456-expression_statement-198-198", type_label=expression_statement];
1469 [label="198_ require(now > auctions[_auctionId].executeTime);\n1469-expression_statement-199-199", type_label=expression_statement];
1480 [label="199_ require(ERC721Interface(auctions[_auctionId].token).transfer(auctions[_auctionId].owner, auctions[_auctionId].tokenId));\n1480-expression_statement-200-200", type_label=expression_statement];
1511 [label="202_ restartAuction\n1511-function_definition-203-212", type_label=function_definition];
1527 [label="203_ require(auctions[_auctionId].exists);\n1527-expression_statement-204-204", type_label=expression_statement];
1536 [label="204_ require(!auctions[_auctionId].executed);\n1536-expression_statement-205-205", type_label=expression_statement];
1546 [label="205_ require(msg.sender == auctions[_auctionId].owner);\n1546-expression_statement-206-206", type_label=expression_statement];
1559 [label="206_ require(now > auctions[_auctionId].executeTime);\n1559-expression_statement-207-207", type_label=expression_statement];
1570 [label="207_ auctions[_auctionId].startPrice = _startPrice;\n1570-expression_statement-208-208", type_label=expression_statement];
1578 [label="208_ auctions[_auctionId].stopTime = now + (_duration * 1 minutes);\n1578-expression_statement-209-209", type_label=expression_statement];
1592 [label="209_ auctions[_auctionId].executeTime = now + (_duration * 1 minutes) + defaultExecuteTime;\n1592-expression_statement-210-210", type_label=expression_statement];
1612 [label="212_ migrateAuction\n1612-function_definition-213-225", type_label=function_definition];
1624 [label="213_ require(auctions[_auctionId].exists);\n1624-expression_statement-214-214", type_label=expression_statement];
1633 [label="214_ require(!auctions[_auctionId].executed);\n1633-expression_statement-215-215", type_label=expression_statement];
1643 [label="215_ require(msg.sender == auctions[_auctionId].owner);\n1643-expression_statement-216-216", type_label=expression_statement];
1656 [label="216_ require(now > auctions[_auctionId].executeTime);\n1656-expression_statement-217-217", type_label=expression_statement];
1667 [label="217_ require(ERC721Interface(auctions[_auctionId].token).approve(_newAuction, auctions[_auctionId].tokenId));\n1667-expression_statement-218-218", type_label=expression_statement];
1690 [label="218_ require(NewAuctionContract(_newAuction).receiveAuction(\n                auctions[_auctionId].token,\n                auctions[_auctionId].tokenId,\n                auctions[_auctionId].startPrice,\n                auctions[_auctionId].stopTime\n            ));\n1690-expression_statement-219-224", type_label=expression_statement];
1725 [label="225_ ownerAuctionCount\n1725-function_definition-226-228", type_label=function_definition];
1738 [label="226_ return ownedAuctions[_owner].length;\n1738-return-227-227", type_label=return];
1744 [label="228_ auctionsOf\n1744-function_definition-229-231", type_label=function_definition];
1758 [label="229_ return ownedAuctions[_owner];\n1758-return-230-230", type_label=return];
1762 [label="231_ addAcceptedToken\n1762-function_definition-232-236", type_label=function_definition];
1768 [label="231_ onlyAdmin\n1768-expression_statement-232-232", type_label=expression_statement];
1772 [label="232_ require(_token != address(0));\n1772-expression_statement-233-233", type_label=expression_statement];
1781 [label="233_ acceptedTokens[_token] = true;\n1781-expression_statement-234-234", type_label=expression_statement];
1792 [label="236_ delAcceptedToken\n1792-function_definition-237-241", type_label=function_definition];
1798 [label="236_ onlyAdmin\n1798-expression_statement-237-237", type_label=expression_statement];
1802 [label="237_ require(acceptedTokens[_token]);\n1802-expression_statement-238-238", type_label=expression_statement];
1809 [label="238_ acceptedTokens[_token] = false;\n1809-expression_statement-239-239", type_label=expression_statement];
1820 [label="241_ addWhiteList\n1820-function_definition-242-246", type_label=function_definition];
1826 [label="241_ onlyAdmin\n1826-expression_statement-242-242", type_label=expression_statement];
1830 [label="242_ require(_address != address(0));\n1830-expression_statement-243-243", type_label=expression_statement];
1839 [label="243_ whiteList[_address] = true;\n1839-expression_statement-244-244", type_label=expression_statement];
1850 [label="246_ delWhiteList\n1850-function_definition-247-251", type_label=function_definition];
1856 [label="246_ onlyAdmin\n1856-expression_statement-247-247", type_label=expression_statement];
1860 [label="247_ require(whiteList[_address]);\n1860-expression_statement-248-248", type_label=expression_statement];
1867 [label="248_ whiteList[_address] = false;\n1867-expression_statement-249-249", type_label=expression_statement];
1878 [label="251_ setDefaultExecuteTime\n1878-function_definition-252-254", type_label=function_definition];
1884 [label="251_ onlyAdmin\n1884-expression_statement-252-252", type_label=expression_statement];
1888 [label="252_ defaultExecuteTime = _hours * 1 hours;\n1888-expression_statement-253-253", type_label=expression_statement];
1895 [label="254_ setAuctionFee\n1895-function_definition-255-257", type_label=function_definition];
1901 [label="254_ onlyAdmin\n1901-expression_statement-255-255", type_label=expression_statement];
1905 [label="255_ auctionFee = _fee;\n1905-expression_statement-256-256", type_label=expression_statement];
1909 [label="257_ setGasInTokens\n1909-function_definition-258-260", type_label=function_definition];
1915 [label="257_ onlyAdmin\n1915-expression_statement-258-258", type_label=expression_statement];
1919 [label="258_ gasInTokens = _gasInTokens;\n1919-expression_statement-259-259", type_label=expression_statement];
1923 [label="260_ setMinDuration\n1923-function_definition-261-263", type_label=function_definition];
1929 [label="260_ onlyAdmin\n1929-expression_statement-261-261", type_label=expression_statement];
1933 [label="261_ minDuration = _minDuration;\n1933-expression_statement-262-262", type_label=expression_statement];
1937 [label="263_ setMaxDuration\n1937-function_definition-264-266", type_label=function_definition];
1943 [label="263_ onlyAdmin\n1943-expression_statement-264-264", type_label=expression_statement];
1947 [label="264_ maxDuration = _maxDuration;\n1947-expression_statement-265-265", type_label=expression_statement];
1951 [label="266_ setProfitAddress\n1951-function_definition-267-270", type_label=function_definition];
1957 [label="266_ onlyOwner\n1957-expression_statement-267-267", type_label=expression_statement];
1961 [label="267_ require(_profitAddress != address(0));\n1961-expression_statement-268-268", type_label=expression_statement];
1970 [label="268_ profitAddress = _profitAddress;\n1970-expression_statement-269-269", type_label=expression_statement];
1974 [label="270_ isAcceptedToken\n1974-function_definition-271-273", type_label=function_definition];
1987 [label="271_ return acceptedTokens[_token];\n1987-return-272-272", type_label=return];
1991 [label="273_ inWhiteList\n1991-function_definition-274-276", type_label=function_definition];
2004 [label="274_ return whiteList[_address];\n2004-return-275-275", type_label=return];
2008 [label="276_ withdrawTokens\n2008-function_definition-277-280", type_label=function_definition];
2010 [label="276_ onlyAdmin\n2010-expression_statement-277-277", type_label=expression_statement];
2014 [label="277_ require(arconaToken.balanceOf(this) > 0);\n2014-expression_statement-278-278", type_label=expression_statement];
2026 [label="278_ arconaToken.transfer(profitAddress, arconaToken.balanceOf(this));\n2026-expression_statement-279-279", type_label=expression_statement];
2040 [label="280_ valueFromPercent\n2040-function_definition-281-284", type_label=function_definition];
2058 [label="281_ uint _amount = _value.mul(_percent).div(10000);\n2058-new_variable-282-282", type_label=new_variable];
2059 [label="281_ uint _amount\n2059-new_variable-282-282", type_label=new_variable];
2074 [label="282_ return (_amount);\n2074-return-283-283", type_label=return];
2077 [label="284_ destruct\n2077-function_definition-285-287", type_label=function_definition];
2079 [label="284_ onlyOwner\n2079-expression_statement-285-285", type_label=expression_statement];
2083 [label="285_ selfdestruct(owner);\n2083-expression_statement-286-286", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
1249;
12 -> 36  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 34  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
29 -> 36  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
34 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
36 -> 44  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 53  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
53 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
55 -> 72  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
72 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
82 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
99 -> 106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
106 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
110 -> 127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
127 -> 135  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
135 -> 142  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
142 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
399 -> 404  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
440 -> 454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
443 -> 452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
457 -> 467  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
469 -> 479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
479 -> 488  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
499 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
509 -> 516  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
527 -> 540  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
540 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
544 -> 554  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
610 -> 616  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
616 -> 658  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
658 -> 665  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
665 -> 672  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
672 -> 679  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
679 -> 687  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 696  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
696 -> 704  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
704 -> 709  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
709 -> 715  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
715 -> 721  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
721 -> 727  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
727 -> 733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
733 -> 739  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
852 -> 859  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
867 -> 875  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
867 -> 890  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
890 -> 918  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
918 -> 926  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
926 -> 937  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
958 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
961 -> 985  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
985 -> 993  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
993 -> 1004  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1004 -> 1019  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1019 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1022 -> 1050  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1050 -> 1067  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1067 -> 1124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1124 -> 1132  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1149 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1151 -> 1173  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1173 -> 1182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1182 -> 1192  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1192 -> 1203  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1203 -> 1214  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1214 -> 1222  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1222 -> 1230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1230 -> 1235  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1230 -> 1249  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1235 -> 1249  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1259 -> 1267  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1267 -> 1276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1276 -> 1286  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1286 -> 1297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1297 -> 1310  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1310 -> 1320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1320 -> 1336  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1336 -> 1347  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1336 -> 1372  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1347 -> 1358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1358 -> 1372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1372 -> 1385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1385 -> 1412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1429 -> 1437  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1437 -> 1446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1446 -> 1456  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1456 -> 1469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1469 -> 1480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1511 -> 1527  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1527 -> 1536  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1536 -> 1546  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1546 -> 1559  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1559 -> 1570  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1570 -> 1578  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1578 -> 1592  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1612 -> 1624  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1624 -> 1633  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1633 -> 1643  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1643 -> 1656  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1656 -> 1667  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1667 -> 1690  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1725 -> 1738  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1738 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1744 -> 1758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1758 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1762 -> 1772  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1772 -> 1781  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1792 -> 1802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1802 -> 1809  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1820 -> 1830  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1830 -> 1839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1850 -> 1860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1860 -> 1867  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1878 -> 1888  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1895 -> 1905  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1909 -> 1919  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1923 -> 1933  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1937 -> 1947  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1951 -> 1961  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1961 -> 1970  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1974 -> 1987  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1987 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1991 -> 2004  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2004 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2008 -> 2014  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2014 -> 2026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2040 -> 2058  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2058 -> 2074  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2074 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2077 -> 2083  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
