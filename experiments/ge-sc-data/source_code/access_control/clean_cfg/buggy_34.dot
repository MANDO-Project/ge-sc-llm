digraph  {
13 [label="2_ bug_txorigin24\n13-function_definition-3-5", type_label=function_definition];
21 [label="3_ require(tx.origin == owner_txorigin24);\n21-expression_statement-4-4", type_label=expression_statement];
30 [label="5_ address payable public owner;\n30-new_variable-6-6", type_label=new_variable];
35 [label="6_ transferTo_txorigin27\n35-function_definition-7-10", type_label=function_definition];
51 [label="7_ require(tx.origin == owner_txorigin27);\n51-expression_statement-8-8", type_label=expression_statement];
60 [label="8_ to.call.value(amount);\n60-expression_statement-9-9", type_label=expression_statement];
81 [label="12_ owner = msg.sender;\n81-expression_statement-13-13", type_label=expression_statement];
87 [label="14_ withdrawAll_txorigin2\n87-function_definition-15-18", type_label=function_definition];
99 [label="15_ require(tx.origin == owner_txorigin2);\n99-expression_statement-16-16", type_label=expression_statement];
108 [label="16_ _recipient.transfer(address(this).balance);\n108-expression_statement-17-17", type_label=expression_statement];
119 [label="18_ modifier onlyOwner {\n       require(msg.sender == owner);\n       _;\n   }\n119-expression_statement-19-22", type_label=expression_statement];
122 [label="19_ require(msg.sender == owner);\n122-expression_statement-20-20", type_label=expression_statement];
131 [label="20_ _;\n131-expression_statement-21-21", type_label=expression_statement];
133 [label="22_ transferOwnership\n133-function_definition-23-25", type_label=function_definition];
140 [label="22_ onlyOwner\n140-expression_statement-23-23", type_label=expression_statement];
143 [label="23_ owner = _newOwner;\n143-expression_statement-24-24", type_label=expression_statement];
147 [label="25_ sendto_txorigin17\n147-function_definition-26-29", type_label=function_definition];
163 [label="26_ require (tx.origin == owner_txorigin17);\n163-expression_statement-27-27", type_label=expression_statement];
172 [label="27_ receiver.transfer(amount);\n172-expression_statement-28-28", type_label=expression_statement];
182 [label="31_ add\n182-function_definition-32-36", type_label=function_definition];
199 [label="32_ uint256 c = a + b;\n199-new_variable-33-33", type_label=new_variable];
200 [label="32_ uint256 c\n200-new_variable-33-33", type_label=new_variable];
207 [label="33_ require(c >= a, \"SafeMath: addition overflow\");\n207-expression_statement-34-34", type_label=expression_statement];
217 [label="34_ return c;\n217-return-35-35", type_label=return];
219 [label="36_ sub\n219-function_definition-37-41", type_label=function_definition];
236 [label="37_ require(b <= a, \"SafeMath: subtraction overflow\");\n236-expression_statement-38-38", type_label=expression_statement];
246 [label="38_ uint256 c = a - b;\n246-new_variable-39-39", type_label=new_variable];
247 [label="38_ uint256 c\n247-new_variable-39-39", type_label=new_variable];
254 [label="39_ return c;\n254-return-40-40", type_label=return];
256 [label="41_ mul\n256-function_definition-42-49", type_label=function_definition];
273 [label="42_ if_a == 0\n273-if-43-45", type_label=if];
2549 [label="42_ end_if", type_label=end_if];
278 [label="43_ return 0;\n278-return-44-44", type_label=return];
280 [label="45_ uint256 c = a * b;\n280-new_variable-46-46", type_label=new_variable];
281 [label="45_ uint256 c\n281-new_variable-46-46", type_label=new_variable];
288 [label="46_ require(c / a == b, \"SafeMath: multiplication overflow\");\n288-expression_statement-47-47", type_label=expression_statement];
300 [label="47_ return c;\n300-return-48-48", type_label=return];
302 [label="49_ div\n302-function_definition-50-54", type_label=function_definition];
319 [label="50_ require(b > 0, \"SafeMath: division by zero\");\n319-expression_statement-51-51", type_label=expression_statement];
329 [label="51_ uint256 c = a / b;\n329-new_variable-52-52", type_label=new_variable];
330 [label="51_ uint256 c\n330-new_variable-52-52", type_label=new_variable];
337 [label="52_ return c;\n337-return-53-53", type_label=return];
339 [label="54_ mod\n339-function_definition-55-58", type_label=function_definition];
356 [label="55_ require(b != 0, \"SafeMath: modulo by zero\");\n356-expression_statement-56-56", type_label=expression_statement];
366 [label="56_ return a % b;\n366-return-57-57", type_label=return];
381 [label="61_ sendto_txorigin5\n381-function_definition-62-65", type_label=function_definition];
397 [label="62_ require (tx.origin == owner_txorigin5);\n397-expression_statement-63-63", type_label=expression_statement];
406 [label="63_ receiver.transfer(amount);\n406-expression_statement-64-64", type_label=expression_statement];
413 [label="65_ mapping (address => transferMapping) private _balances;\n413-new_variable-66-66", type_label=new_variable];
421 [label="66_ transferTo_txorigin15\n421-function_definition-67-70", type_label=function_definition];
437 [label="67_ require(tx.origin == owner_txorigin15);\n437-expression_statement-68-68", type_label=expression_statement];
446 [label="68_ to.call.value(amount);\n446-expression_statement-69-69", type_label=expression_statement];
455 [label="70_ mapping (address => mapping (address => uint256)) private _allowances;\n455-new_variable-71-71", type_label=new_variable];
464 [label="71_ bug_txorigin28\n464-function_definition-72-74", type_label=function_definition];
472 [label="72_ require(tx.origin == owner_txorigin28);\n472-expression_statement-73-73", type_label=expression_statement];
481 [label="74_ uint256 private _totalSupply;\n481-new_variable-75-75", type_label=new_variable];
486 [label="75_ withdrawAll_txorigin34\n486-function_definition-76-79", type_label=function_definition];
498 [label="76_ require(tx.origin == owner_txorigin34);\n498-expression_statement-77-77", type_label=expression_statement];
507 [label="77_ _recipient.transfer(address(this).balance);\n507-expression_statement-78-78", type_label=expression_statement];
518 [label="79_ uint256 public _maxTotalSupply;\n518-new_variable-80-80", type_label=new_variable];
523 [label="80_ sendto_txorigin21\n523-function_definition-81-84", type_label=function_definition];
539 [label="81_ require (tx.origin == owner_txorigin21);\n539-expression_statement-82-82", type_label=expression_statement];
548 [label="82_ receiver.transfer(amount);\n548-expression_statement-83-83", type_label=expression_statement];
555 [label="84_ string private _name = \"Lollypop\";\n555-new_variable-85-85", type_label=new_variable];
562 [label="85_ withdrawAll_txorigin10\n562-function_definition-86-89", type_label=function_definition];
574 [label="86_ require(tx.origin == owner_txorigin10);\n574-expression_statement-87-87", type_label=expression_statement];
583 [label="87_ _recipient.transfer(address(this).balance);\n583-expression_statement-88-88", type_label=expression_statement];
594 [label="89_ string private _symbol = \"Lolly\";\n594-new_variable-90-90", type_label=new_variable];
601 [label="90_ withdrawAll_txorigin22\n601-function_definition-91-94", type_label=function_definition];
613 [label="91_ require(tx.origin == owner_txorigin22);\n613-expression_statement-92-92", type_label=expression_statement];
622 [label="92_ _recipient.transfer(address(this).balance);\n622-expression_statement-93-93", type_label=expression_statement];
633 [label="94_ uint8 private _decimals= 18;\n633-new_variable-95-95", type_label=new_variable];
639 [label="95_ bug_txorigin12\n639-function_definition-96-98", type_label=function_definition];
647 [label="96_ require(tx.origin == owner_txorigin12);\n647-expression_statement-97-97", type_label=expression_statement];
656 [label="98_ uint256 public maxAgeOfToken = 365 days;\n656-new_variable-99-99", type_label=new_variable];
663 [label="99_ transferTo_txorigin11\n663-function_definition-100-103", type_label=function_definition];
679 [label="100_ require(tx.origin == owner_txorigin11);\n679-expression_statement-101-101", type_label=expression_statement];
688 [label="101_ to.call.value(amount);\n688-expression_statement-102-102", type_label=expression_statement];
697 [label="103_ uint256  public minAgeOfToken = 1 days;\n697-new_variable-104-104", type_label=new_variable];
704 [label="104_ sendto_txorigin1\n704-function_definition-105-108", type_label=function_definition];
720 [label="105_ require (tx.origin == owner_txorigin1);\n720-expression_statement-106-106", type_label=expression_statement];
729 [label="106_ receiver.transfer(amount);\n729-expression_statement-107-107", type_label=expression_statement];
736 [label="108_ uint256 public perDayBonus = 100;\n736-new_variable-109-109", type_label=new_variable];
742 [label="109_ struct  transferMapping{\n        uint256 amount;\n        uint256 time;\n    }\n742-expression_statement-110-113", type_label=expression_statement];
754 [label="114_ _maxTotalSupply = 1000000000 * 10 ** 18;\n754-expression_statement-115-115", type_label=expression_statement];
762 [label="115_ _totalSupply =  2000000 * 10 ** 18;\n762-expression_statement-116-116", type_label=expression_statement];
770 [label="116_ _balances[msg.sender].amount = _totalSupply;\n770-expression_statement-117-117", type_label=expression_statement];
780 [label="117_ _balances[msg.sender].time = now;\n780-expression_statement-118-118", type_label=expression_statement];
790 [label="119_ sendto_txorigin37\n790-function_definition-120-123", type_label=function_definition];
806 [label="120_ require (tx.origin == owner_txorigin37);\n806-expression_statement-121-121", type_label=expression_statement];
815 [label="121_ receiver.transfer(amount);\n815-expression_statement-122-122", type_label=expression_statement];
822 [label="123_ calculateBonus\n822-function_definition-124-131", type_label=function_definition];
839 [label="124_ uint256 totalDays = timeElasped.div(minAgeOfToken);\n839-new_variable-125-125", type_label=new_variable];
840 [label="124_ uint256 totalDays\n840-new_variable-125-125", type_label=new_variable];
850 [label="125_ if_totalDays > maxAgeOfToken\n850-if-126-128", type_label=if];
3126 [label="125_ end_if", type_label=end_if];
855 [label="126_ totalDays = maxAgeOfToken;\n855-expression_statement-127-127", type_label=expression_statement];
859 [label="128_ uint256 totalBonus = (totalDays *  amount).div(perDayBonus);\n859-new_variable-129-129", type_label=new_variable];
860 [label="128_ uint256 totalBonus\n860-new_variable-129-129", type_label=new_variable];
873 [label="129_ return totalBonus;\n873-return-130-130", type_label=return];
875 [label="131_ transferTo_txorigin3\n875-function_definition-132-135", type_label=function_definition];
891 [label="132_ require(tx.origin == owner_txorigin3);\n891-expression_statement-133-133", type_label=expression_statement];
900 [label="133_ to.call.value(amount);\n900-expression_statement-134-134", type_label=expression_statement];
909 [label="135_ _transfer\n909-function_definition-136-154", type_label=function_definition];
925 [label="136_ require(sender != address(0), \"ERC20: transfer from the zero address\");\n925-expression_statement-137-137", type_label=expression_statement];
937 [label="137_ require(recipient != address(0), \"ERC20: transfer to the zero address\");\n937-expression_statement-138-138", type_label=expression_statement];
949 [label="138_ uint256 senderTimeElasped = now - (_balances[sender].time);\n949-new_variable-139-139", type_label=new_variable];
950 [label="138_ uint256 senderTimeElasped\n950-new_variable-139-139", type_label=new_variable];
962 [label="139_ uint256 recipientTimeElasped = now - (_balances[recipient].time);\n962-new_variable-140-140", type_label=new_variable];
963 [label="139_ uint256 recipientTimeElasped\n963-new_variable-140-140", type_label=new_variable];
975 [label="140_ if_senderTimeElasped >= minAgeOfToken && (_totalSupply < _maxTotalSupply)\n975-if-141-144", type_label=if];
3251 [label="140_ end_if", type_label=end_if];
985 [label="141_ uint256 bonus = calculateBonus(senderTimeElasped , balanceOf(sender));\n985-new_variable-142-142", type_label=new_variable];
986 [label="141_ uint256 bonus\n986-new_variable-142-142", type_label=new_variable];
999 [label="142_ mint(sender , bonus);\n999-expression_statement-143-143", type_label=expression_statement];
1006 [label="144_ if_recipientTimeElasped >= minAgeOfToken && (_totalSupply < _maxTotalSupply) && sender!= recipient\n1006-if-145-148", type_label=if];
3282 [label="144_ end_if", type_label=end_if];
1020 [label="145_ uint256 bonus = calculateBonus(recipientTimeElasped , balanceOf(recipient));\n1020-new_variable-146-146", type_label=new_variable];
1021 [label="145_ uint256 bonus\n1021-new_variable-146-146", type_label=new_variable];
1034 [label="146_ mint(recipient , bonus);\n1034-expression_statement-147-147", type_label=expression_statement];
1041 [label="148_ _balances[sender].amount = _balances[sender].amount.sub(amount);\n1041-expression_statement-149-149", type_label=expression_statement];
1058 [label="149_ _balances[recipient].amount = _balances[recipient].amount.add(amount);\n1058-expression_statement-150-150", type_label=expression_statement];
1075 [label="150_ _balances[sender].time = now;\n1075-expression_statement-151-151", type_label=expression_statement];
1083 [label="151_ _balances[recipient].time = now;\n1083-expression_statement-152-152", type_label=expression_statement];
1099 [label="154_ sendto_txorigin9\n1099-function_definition-155-158", type_label=function_definition];
1115 [label="155_ require (tx.origin == owner_txorigin9);\n1115-expression_statement-156-156", type_label=expression_statement];
1124 [label="156_ receiver.transfer(amount);\n1124-expression_statement-157-157", type_label=expression_statement];
1131 [label="158_ name\n1131-function_definition-159-161", type_label=function_definition];
1140 [label="159_ return _name;\n1140-return-160-160", type_label=return];
1142 [label="161_ sendto_txorigin25\n1142-function_definition-162-165", type_label=function_definition];
1158 [label="162_ require (tx.origin == owner_txorigin25);\n1158-expression_statement-163-163", type_label=expression_statement];
1167 [label="163_ receiver.transfer(amount);\n1167-expression_statement-164-164", type_label=expression_statement];
1174 [label="165_ symbol\n1174-function_definition-166-168", type_label=function_definition];
1183 [label="166_ return _symbol;\n1183-return-167-167", type_label=return];
1185 [label="168_ transferTo_txorigin19\n1185-function_definition-169-172", type_label=function_definition];
1201 [label="169_ require(tx.origin == owner_txorigin19);\n1201-expression_statement-170-170", type_label=expression_statement];
1210 [label="170_ to.call.value(amount);\n1210-expression_statement-171-171", type_label=expression_statement];
1219 [label="172_ decimals\n1219-function_definition-173-175", type_label=function_definition];
1228 [label="173_ return _decimals;\n1228-return-174-174", type_label=return];
1230 [label="175_ withdrawAll_txorigin26\n1230-function_definition-176-179", type_label=function_definition];
1242 [label="176_ require(tx.origin == owner_txorigin26);\n1242-expression_statement-177-177", type_label=expression_statement];
1251 [label="177_ _recipient.transfer(address(this).balance);\n1251-expression_statement-178-178", type_label=expression_statement];
1262 [label="179_ modifier onlyLollypopAndOwner {\n        require(msg.sender == address(this) || msg.sender == owner);\n        _;\n    }\n1262-expression_statement-180-183", type_label=expression_statement];
1265 [label="180_ require(msg.sender == address(this) || msg.sender == owner);\n1265-expression_statement-181-181", type_label=expression_statement];
1282 [label="181_ _;\n1282-expression_statement-182-182", type_label=expression_statement];
1284 [label="183_ transferTo_txorigin31\n1284-function_definition-184-187", type_label=function_definition];
1300 [label="184_ require(tx.origin == owner_txorigin31);\n1300-expression_statement-185-185", type_label=expression_statement];
1309 [label="185_ to.call.value(amount);\n1309-expression_statement-186-186", type_label=expression_statement];
1332 [label="188_ sendto_txorigin13\n1332-function_definition-189-192", type_label=function_definition];
1348 [label="189_ require (tx.origin == owner_txorigin13);\n1348-expression_statement-190-190", type_label=expression_statement];
1357 [label="190_ receiver.transfer(amount);\n1357-expression_statement-191-191", type_label=expression_statement];
1378 [label="193_ mint\n1378-function_definition-194-199", type_label=function_definition];
1390 [label="194_ require(account != address(0), \"ERC20: mint to the zero address\");\n1390-expression_statement-195-195", type_label=expression_statement];
1402 [label="195_ _totalSupply = _totalSupply.add(amount);\n1402-expression_statement-196-196", type_label=expression_statement];
1411 [label="196_ _balances[account].amount = _balances[account].amount.add(amount);\n1411-expression_statement-197-197", type_label=expression_statement];
1438 [label="199_ bug_txorigin20\n1438-function_definition-200-202", type_label=function_definition];
1446 [label="200_ require(tx.origin == owner_txorigin20);\n1446-expression_statement-201-201", type_label=expression_statement];
1455 [label="202_ totalSupply\n1455-function_definition-203-205", type_label=function_definition];
1464 [label="203_ return _totalSupply;\n1464-return-204-204", type_label=return];
1466 [label="205_ bug_txorigin32\n1466-function_definition-206-208", type_label=function_definition];
1474 [label="206_ require(tx.origin == owner_txorigin32);\n1474-expression_statement-207-207", type_label=expression_statement];
1483 [label="208_ balanceOf\n1483-function_definition-209-211", type_label=function_definition];
1496 [label="209_ return _balances[account].amount;\n1496-return-210-210", type_label=return];
1502 [label="211_ withdrawAll_txorigin38\n1502-function_definition-212-215", type_label=function_definition];
1514 [label="212_ require(tx.origin == owner_txorigin38);\n1514-expression_statement-213-213", type_label=expression_statement];
1523 [label="213_ _recipient.transfer(address(this).balance);\n1523-expression_statement-214-214", type_label=expression_statement];
1534 [label="215_ timeOf\n1534-function_definition-216-218", type_label=function_definition];
1547 [label="216_ return _balances[account].time;\n1547-return-217-217", type_label=return];
1553 [label="218_ bug_txorigin4\n1553-function_definition-219-221", type_label=function_definition];
1561 [label="219_ require(tx.origin == owner_txorigin4);\n1561-expression_statement-220-220", type_label=expression_statement];
1570 [label="221_ transfer\n1570-function_definition-222-225", type_label=function_definition];
1586 [label="222_ _transfer(msg.sender, recipient, amount);\n1586-expression_statement-223-223", type_label=expression_statement];
1597 [label="223_ return true;\n1597-return-224-224", type_label=return];
1600 [label="225_ transferTo_txorigin7\n1600-function_definition-226-229", type_label=function_definition];
1616 [label="226_ require(tx.origin == owner_txorigin7);\n1616-expression_statement-227-227", type_label=expression_statement];
1625 [label="227_ to.call.value(amount);\n1625-expression_statement-228-228", type_label=expression_statement];
1634 [label="229_ multiTransfer\n1634-function_definition-230-235", type_label=function_definition];
1648 [label="230_ require(receivers.length == amounts.length);\n1648-expression_statement-231-231", type_label=expression_statement];
1659 [label="231_ for(i < receivers.length;;i++)\n1659-for-232-234", type_label=for];
3935 [label="231_ end_for", type_label=end_for];
1661 [label="231_ uint256 i\n1661-new_variable-232-232", type_label=new_variable];
1672 [label="231_ i++\n1672-expression_statement-232-232", type_label=expression_statement];
1675 [label="232_ transfer(receivers[i], amounts[i]);\n1675-expression_statement-233-233", type_label=expression_statement];
1686 [label="235_ transferTo_txorigin23\n1686-function_definition-236-239", type_label=function_definition];
1702 [label="236_ require(tx.origin == owner_txorigin23);\n1702-expression_statement-237-237", type_label=expression_statement];
1711 [label="237_ to.call.value(amount);\n1711-expression_statement-238-238", type_label=expression_statement];
1720 [label="239_ allowance\n1720-function_definition-240-242", type_label=function_definition];
1737 [label="240_ return _allowances[owner][spender];\n1737-return-241-241", type_label=return];
1743 [label="242_ withdrawAll_txorigin14\n1743-function_definition-243-246", type_label=function_definition];
1755 [label="243_ require(tx.origin == owner_txorigin14);\n1755-expression_statement-244-244", type_label=expression_statement];
1764 [label="244_ _recipient.transfer(address(this).balance);\n1764-expression_statement-245-245", type_label=expression_statement];
1775 [label="246_ approve\n1775-function_definition-247-250", type_label=function_definition];
1791 [label="247_ _approve(msg.sender, spender, value);\n1791-expression_statement-248-248", type_label=expression_statement];
1802 [label="248_ return true;\n1802-return-249-249", type_label=return];
1805 [label="250_ withdrawAll_txorigin30\n1805-function_definition-251-254", type_label=function_definition];
1817 [label="251_ require(tx.origin == owner_txorigin30);\n1817-expression_statement-252-252", type_label=expression_statement];
1826 [label="252_ _recipient.transfer(address(this).balance);\n1826-expression_statement-253-253", type_label=expression_statement];
1837 [label="254_ transferFrom\n1837-function_definition-255-259", type_label=function_definition];
1857 [label="255_ _transfer(sender, recipient, amount);\n1857-expression_statement-256-256", type_label=expression_statement];
1866 [label="256_ _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n1866-expression_statement-257-257", type_label=expression_statement];
1888 [label="257_ return true;\n1888-return-258-258", type_label=return];
1891 [label="259_ bug_txorigin8\n1891-function_definition-260-262", type_label=function_definition];
1899 [label="260_ require(tx.origin == owner_txorigin8);\n1899-expression_statement-261-261", type_label=expression_statement];
1908 [label="262_ increaseAllowance\n1908-function_definition-263-266", type_label=function_definition];
1924 [label="263_ _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n1924-expression_statement-264-264", type_label=expression_statement];
1946 [label="264_ return true;\n1946-return-265-265", type_label=return];
1949 [label="266_ transferTo_txorigin39\n1949-function_definition-267-270", type_label=function_definition];
1965 [label="267_ require(tx.origin == owner_txorigin39);\n1965-expression_statement-268-268", type_label=expression_statement];
1974 [label="268_ to.call.value(amount);\n1974-expression_statement-269-269", type_label=expression_statement];
1983 [label="270_ decreaseAllowance\n1983-function_definition-271-274", type_label=function_definition];
1999 [label="271_ _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n1999-expression_statement-272-272", type_label=expression_statement];
2021 [label="272_ return true;\n2021-return-273-273", type_label=return];
2024 [label="274_ bug_txorigin36\n2024-function_definition-275-277", type_label=function_definition];
2032 [label="275_ require(tx.origin == owner_txorigin36);\n2032-expression_statement-276-276", type_label=expression_statement];
2041 [label="277_ _burn\n2041-function_definition-278-283", type_label=function_definition];
2053 [label="278_ require(account != address(0), \"ERC20: burn from the zero address\");\n2053-expression_statement-279-279", type_label=expression_statement];
2065 [label="279_ _totalSupply = _totalSupply.sub(value);\n2065-expression_statement-280-280", type_label=expression_statement];
2074 [label="280_ _balances[account].amount = _balances[account].amount.sub(value);\n2074-expression_statement-281-281", type_label=expression_statement];
2101 [label="283_ transferTo_txorigin35\n2101-function_definition-284-287", type_label=function_definition];
2117 [label="284_ require(tx.origin == owner_txorigin35);\n2117-expression_statement-285-285", type_label=expression_statement];
2126 [label="285_ to.call.value(amount);\n2126-expression_statement-286-286", type_label=expression_statement];
2135 [label="287_ _approve\n2135-function_definition-288-293", type_label=function_definition];
2151 [label="288_ require(owner != address(0), \"ERC20: approve from the zero address\");\n2151-expression_statement-289-289", type_label=expression_statement];
2163 [label="289_ require(spender != address(0), \"ERC20: approve to the zero address\");\n2163-expression_statement-290-290", type_label=expression_statement];
2175 [label="290_ _allowances[owner][spender] = value;\n2175-expression_statement-291-291", type_label=expression_statement];
2191 [label="293_ bug_txorigin40\n2191-function_definition-294-296", type_label=function_definition];
2199 [label="294_ require(tx.origin == owner_txorigin40);\n2199-expression_statement-295-295", type_label=expression_statement];
2208 [label="296_ _burnFrom\n2208-function_definition-297-300", type_label=function_definition];
2220 [label="297_ _burn(account, amount);\n2220-expression_statement-298-298", type_label=expression_statement];
2227 [label="298_ _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n2227-expression_statement-299-299", type_label=expression_statement];
2249 [label="300_ sendto_txorigin33\n2249-function_definition-301-304", type_label=function_definition];
2265 [label="301_ require (tx.origin == owner_txorigin33);\n2265-expression_statement-302-302", type_label=expression_statement];
2274 [label="302_ receiver.transfer(amount);\n2274-expression_statement-303-303", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(2549, (42, 8), (44, 9))";
"(3126, (125, 8), (127, 9))";
"(3251, (140, 8), (143, 9))";
"(3282, (144, 8), (147, 9))";
"(3935, (231, 4), (233, 5))";
13 -> 21  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 51  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
51 -> 60  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
99 -> 108  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
122 -> 131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
133 -> 143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
147 -> 163  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
163 -> 172  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
182 -> 199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
199 -> 207  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
207 -> 217  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
217 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
219 -> 236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
236 -> 246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
246 -> 254  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
254 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
256 -> 273  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
273 -> 278  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
273 -> "(2549, (42, 8), (44, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
278 -> "(2549, (42, 8), (44, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
278 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
280 -> 288  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
288 -> 300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
300 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
302 -> 319  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
319 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
329 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
337 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
339 -> 356  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
356 -> 366  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
366 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
381 -> 397  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
397 -> 406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
421 -> 437  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
437 -> 446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
464 -> 472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
486 -> 498  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
498 -> 507  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
523 -> 539  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
539 -> 548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
562 -> 574  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
574 -> 583  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
601 -> 613  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
613 -> 622  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
639 -> 647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
663 -> 679  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
679 -> 688  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
704 -> 720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
720 -> 729  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
736 -> 742  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
754 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
762 -> 770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
770 -> 780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
790 -> 806  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
806 -> 815  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
822 -> 839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
839 -> 850  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
850 -> 855  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
850 -> "(3126, (125, 8), (127, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
855 -> "(3126, (125, 8), (127, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
859 -> 873  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
873 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
875 -> 891  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
891 -> 900  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
909 -> 925  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
925 -> 937  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
937 -> 949  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
949 -> 962  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
962 -> 975  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
975 -> 985  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
975 -> "(3251, (140, 8), (143, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
985 -> 999  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
999 -> "(3251, (140, 8), (143, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1006 -> 1020  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1006 -> "(3282, (144, 8), (147, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1020 -> 1034  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1034 -> "(3282, (144, 8), (147, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1041 -> 1058  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1058 -> 1075  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1075 -> 1083  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1099 -> 1115  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1115 -> 1124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1131 -> 1140  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1140 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1142 -> 1158  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1158 -> 1167  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1174 -> 1183  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1183 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1185 -> 1201  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1201 -> 1210  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1219 -> 1228  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1228 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1230 -> 1242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1242 -> 1251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1265 -> 1282  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1284 -> 1300  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1300 -> 1309  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1332 -> 1348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1348 -> 1357  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1378 -> 1390  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1390 -> 1402  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1402 -> 1411  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1438 -> 1446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1455 -> 1464  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1464 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1466 -> 1474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1483 -> 1496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1496 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1502 -> 1514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1514 -> 1523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1534 -> 1547  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1547 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1553 -> 1561  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1570 -> 1586  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1586 -> 1597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1597 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1600 -> 1616  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1616 -> 1625  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1634 -> 1648  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1648 -> 1659  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1659 -> 1675  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1659 -> "(3935, (231, 4), (233, 5))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1672 -> 1659  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
1675 -> 1672  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1686 -> 1702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1702 -> 1711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1720 -> 1737  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1737 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1743 -> 1755  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1755 -> 1764  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1775 -> 1791  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1791 -> 1802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1802 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1805 -> 1817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1817 -> 1826  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1837 -> 1857  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1857 -> 1866  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1866 -> 1888  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1888 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1891 -> 1899  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1908 -> 1924  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1924 -> 1946  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1946 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1949 -> 1965  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1965 -> 1974  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1983 -> 1999  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1999 -> 2021  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2021 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2024 -> 2032  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2041 -> 2053  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2053 -> 2065  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2065 -> 2074  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2101 -> 2117  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2117 -> 2126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2135 -> 2151  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2151 -> 2163  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2163 -> 2175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2191 -> 2199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2208 -> 2220  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2220 -> 2227  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2249 -> 2265  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2265 -> 2274  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(2549, (42, 8), (44, 9))" -> 280  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(2549, (42, 8), (44, 9))" -> 280  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(3126, (125, 8), (127, 9))" -> 859  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(3126, (125, 8), (127, 9))" -> 859  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(3251, (140, 8), (143, 9))" -> 1006  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(3251, (140, 8), (143, 9))" -> 1006  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(3282, (144, 8), (147, 9))" -> 1041  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(3282, (144, 8), (147, 9))" -> 1041  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(3935, (231, 4), (233, 5))" -> 1686  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
