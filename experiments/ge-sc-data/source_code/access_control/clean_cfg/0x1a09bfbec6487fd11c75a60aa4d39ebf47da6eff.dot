digraph  {
13 [label="2_ address public owner;\n13-new_variable-3-3", type_label=new_variable];
28 [label="4_ Ownable\n28-function_definition-5-7", type_label=function_definition];
31 [label="5_ owner = msg.sender;\n31-expression_statement-6-6", type_label=expression_statement];
37 [label="7_ modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n37-expression_statement-8-11", type_label=expression_statement];
40 [label="8_ require(msg.sender == owner);\n40-expression_statement-9-9", type_label=expression_statement];
49 [label="9_ _;\n49-expression_statement-10-10", type_label=expression_statement];
51 [label="11_ transferOwnership\n51-function_definition-12-16", type_label=function_definition];
57 [label="11_ onlyOwner\n57-expression_statement-12-12", type_label=expression_statement];
61 [label="12_ require(newOwner != address(0));\n61-expression_statement-13-13", type_label=expression_statement];
70 [label="13_ OwnershipTransferred(owner, newOwner);\n70-expression_statement-14-14", type_label=expression_statement];
77 [label="14_ owner = newOwner;\n77-expression_statement-15-15", type_label=expression_statement];
87 [label="18_ uint public last_completed_migration;\n87-new_variable-19-19", type_label=new_variable];
92 [label="19_ setCompleted\n92-function_definition-20-22", type_label=function_definition];
98 [label="19_ onlyOwner\n98-expression_statement-20-20", type_label=expression_statement];
101 [label="20_ last_completed_migration = completed;\n101-expression_statement-21-21", type_label=expression_statement];
105 [label="22_ upgrade\n105-function_definition-23-26", type_label=function_definition];
111 [label="22_ onlyOwner\n111-expression_statement-23-23", type_label=expression_statement];
114 [label="23_ Migrations upgraded = Migrations(new_address);\n114-new_variable-24-24", type_label=new_variable];
115 [label="23_ Migrations upgraded\n115-new_variable-24-24", type_label=new_variable];
124 [label="24_ upgraded.setCompleted(last_completed_migration);\n124-expression_statement-25-25", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
28 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
40 -> 49  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
51 -> 61  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
61 -> 70  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
70 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
92 -> 101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
105 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
