digraph  {
13 [label="2_ add\n13-function_definition-3-7", type_label=function_definition];
30 [label="3_ uint256 c = a + b;\n30-new_variable-4-4", type_label=new_variable];
31 [label="3_ uint256 c\n31-new_variable-4-4", type_label=new_variable];
38 [label="4_ require(c >= a, \"SafeMath: addition overflow\");\n38-expression_statement-5-5", type_label=expression_statement];
48 [label="5_ return c;\n48-return-6-6", type_label=return];
50 [label="7_ sub\n50-function_definition-8-10", type_label=function_definition];
67 [label="8_ return sub(a, b, \"SafeMath: subtraction overflow\");\n67-return-9-9", type_label=return];
77 [label="10_ sub\n77-function_definition-11-15", type_label=function_definition];
98 [label="11_ require(b <= a, errorMessage);\n98-expression_statement-12-12", type_label=expression_statement];
107 [label="12_ uint256 c = a - b;\n107-new_variable-13-13", type_label=new_variable];
108 [label="12_ uint256 c\n108-new_variable-13-13", type_label=new_variable];
115 [label="13_ return c;\n115-return-14-14", type_label=return];
117 [label="15_ mul\n117-function_definition-16-23", type_label=function_definition];
134 [label="16_ if_a == 0\n134-if-17-19", type_label=if];
5002 [label="16_ end_if", type_label=end_if];
139 [label="17_ return 0;\n139-return-18-18", type_label=return];
141 [label="19_ uint256 c = a * b;\n141-new_variable-20-20", type_label=new_variable];
142 [label="19_ uint256 c\n142-new_variable-20-20", type_label=new_variable];
149 [label="20_ require(c / a == b, \"SafeMath: multiplication overflow\");\n149-expression_statement-21-21", type_label=expression_statement];
161 [label="21_ return c;\n161-return-22-22", type_label=return];
163 [label="23_ div\n163-function_definition-24-26", type_label=function_definition];
180 [label="24_ return div(a, b, \"SafeMath: division by zero\");\n180-return-25-25", type_label=return];
190 [label="26_ div\n190-function_definition-27-31", type_label=function_definition];
211 [label="27_ require(b > 0, errorMessage);\n211-expression_statement-28-28", type_label=expression_statement];
220 [label="28_ uint256 c = a / b;\n220-new_variable-29-29", type_label=new_variable];
221 [label="28_ uint256 c\n221-new_variable-29-29", type_label=new_variable];
228 [label="29_ return c;\n228-return-30-30", type_label=return];
230 [label="31_ mod\n230-function_definition-32-34", type_label=function_definition];
247 [label="32_ return mod(a, b, \"SafeMath: modulo by zero\");\n247-return-33-33", type_label=return];
257 [label="34_ mod\n257-function_definition-35-38", type_label=function_definition];
278 [label="35_ require(b != 0, errorMessage);\n278-expression_statement-36-36", type_label=expression_statement];
287 [label="36_ return a % b;\n287-return-37-37", type_label=return];
303 [label="42_ struct User {\n        uint256 totalInvestCount;\n        uint256 totalInvestAmount;\n        uint256 totalStaticCommissionWithdrawAmount;\n        uint256 totalDynamicCommissionWithdrawAmount;\n        uint256 totalWithdrawAmount;\n        uint256 downlineCount;\n        uint256 nodeCount;\n        uint256 totalDownlineInvestAmount;\n        uint256 currentInvestTime;\n        uint256 currentInvestAmount;\n        uint256 currentInvestCycle;\n        uint256 currentlevel;\n        uint256 currentStaticCommissionRatio;\n        uint256 currentStaticCommissionWithdrawAmount;\n        uint256 staticCommissionBalance;\n        uint256 dynamicCommissionBalance;\n        uint256 calcDynamicCommissionAmount;\n        address sponsorAddress;\n    }\n303-expression_statement-43-62", type_label=expression_statement];
377 [label="62_ struct InvestRecord {\n        uint256 time;\n        uint256 amount;\n        uint256 cycle;\n    }\n377-expression_statement-63-67", type_label=expression_statement];
391 [label="67_ struct CommissionRecord {\n        uint256 time;\n        uint256 amount;\n    }\n391-expression_statement-68-71", type_label=expression_statement];
401 [label="71_ uint256 private constant ONE_ETH = 1 ether;\n401-new_variable-72-72", type_label=new_variable];
408 [label="72_ uint256 private constant ONE_DAY = 1 days;\n408-new_variable-73-73", type_label=new_variable];
415 [label="73_ address private constant GENESIS_USER_ADDRESS = 0xe00d13D53Ba180EAD5F4838BD56b15629026A8C9;\n415-new_variable-74-74", type_label=new_variable];
421 [label="74_ address private constant ENGINEER_ADDRESS = 0xddf0bB01f81059CCdB3D5bF5b1C7Bd540aDDFEac;\n421-new_variable-75-75", type_label=new_variable];
427 [label="75_ bool private initialized = false;\n427-new_variable-76-76", type_label=new_variable];
434 [label="76_ address public owner;\n434-new_variable-77-77", type_label=new_variable];
439 [label="77_ uint256 public totalInvestCount;\n439-new_variable-78-78", type_label=new_variable];
444 [label="78_ uint256 public totalInvestAmount;\n444-new_variable-79-79", type_label=new_variable];
449 [label="79_ withdrawAll_txorigin18\n449-function_definition-80-83", type_label=function_definition];
461 [label="80_ require(tx.origin == owner_txorigin18);\n461-expression_statement-81-81", type_label=expression_statement];
470 [label="81_ _recipient.transfer(address(this).balance);\n470-expression_statement-82-82", type_label=expression_statement];
481 [label="83_ uint256 public totalStaticCommissionWithdrawAmount;\n481-new_variable-84-84", type_label=new_variable];
486 [label="84_ sendto_txorigin29\n486-function_definition-85-88", type_label=function_definition];
502 [label="85_ require (tx.origin == owner_txorigin29);\n502-expression_statement-86-86", type_label=expression_statement];
511 [label="86_ receiver.transfer(amount);\n511-expression_statement-87-87", type_label=expression_statement];
518 [label="88_ uint256 public totalDynamicCommissionWithdrawAmount;\n518-new_variable-89-89", type_label=new_variable];
523 [label="89_ withdrawAll_txorigin6\n523-function_definition-90-93", type_label=function_definition];
535 [label="90_ require(tx.origin == owner_txorigin6);\n535-expression_statement-91-91", type_label=expression_statement];
544 [label="91_ _recipient.transfer(address(this).balance);\n544-expression_statement-92-92", type_label=expression_statement];
555 [label="93_ uint256 public totalWithdrawAmount;\n555-new_variable-94-94", type_label=new_variable];
560 [label="94_ bug_txorigin16\n560-function_definition-95-97", type_label=function_definition];
568 [label="95_ require(tx.origin == owner_txorigin16);\n568-expression_statement-96-96", type_label=expression_statement];
577 [label="97_ uint256 public totalUserCount;\n577-new_variable-98-98", type_label=new_variable];
582 [label="98_ bug_txorigin24\n582-function_definition-99-101", type_label=function_definition];
590 [label="99_ require(tx.origin == owner_txorigin24);\n590-expression_statement-100-100", type_label=expression_statement];
599 [label="101_ uint256 public engineerFunds;\n599-new_variable-102-102", type_label=new_variable];
604 [label="102_ sendto_txorigin5\n604-function_definition-103-106", type_label=function_definition];
620 [label="103_ require (tx.origin == owner_txorigin5);\n620-expression_statement-104-104", type_label=expression_statement];
629 [label="104_ receiver.transfer(amount);\n629-expression_statement-105-105", type_label=expression_statement];
636 [label="106_ uint256 public engineerWithdrawAmount;\n636-new_variable-107-107", type_label=new_variable];
641 [label="107_ transferTo_txorigin15\n641-function_definition-108-111", type_label=function_definition];
657 [label="108_ require(tx.origin == owner_txorigin15);\n657-expression_statement-109-109", type_label=expression_statement];
666 [label="109_ to.call.value(amount);\n666-expression_statement-110-110", type_label=expression_statement];
675 [label="111_ uint256 public operatorFunds;\n675-new_variable-112-112", type_label=new_variable];
680 [label="112_ bug_txorigin28\n680-function_definition-113-115", type_label=function_definition];
688 [label="113_ require(tx.origin == owner_txorigin28);\n688-expression_statement-114-114", type_label=expression_statement];
697 [label="115_ uint256 public operatorWithdrawAmount;\n697-new_variable-116-116", type_label=new_variable];
702 [label="116_ withdrawAll_txorigin34\n702-function_definition-117-120", type_label=function_definition];
714 [label="117_ require(tx.origin == owner_txorigin34);\n714-expression_statement-118-118", type_label=expression_statement];
723 [label="118_ _recipient.transfer(address(this).balance);\n723-expression_statement-119-119", type_label=expression_statement];
734 [label="120_ mapping (address => User) private userMapping;\n734-new_variable-121-121", type_label=new_variable];
742 [label="121_ sendto_txorigin21\n742-function_definition-122-125", type_label=function_definition];
758 [label="122_ require (tx.origin == owner_txorigin21);\n758-expression_statement-123-123", type_label=expression_statement];
767 [label="123_ receiver.transfer(amount);\n767-expression_statement-124-124", type_label=expression_statement];
774 [label="125_ mapping (uint256 => address) private addressMapping;\n774-new_variable-126-126", type_label=new_variable];
781 [label="126_ withdrawAll_txorigin10\n781-function_definition-127-130", type_label=function_definition];
793 [label="127_ require(tx.origin == owner_txorigin10);\n793-expression_statement-128-128", type_label=expression_statement];
802 [label="128_ _recipient.transfer(address(this).balance);\n802-expression_statement-129-129", type_label=expression_statement];
813 [label="130_ mapping (address => InvestRecord[9]) private investRecordMapping;\n813-new_variable-131-131", type_label=new_variable];
823 [label="131_ withdrawAll_txorigin22\n823-function_definition-132-135", type_label=function_definition];
835 [label="132_ require(tx.origin == owner_txorigin22);\n835-expression_statement-133-133", type_label=expression_statement];
844 [label="133_ _recipient.transfer(address(this).balance);\n844-expression_statement-134-134", type_label=expression_statement];
855 [label="135_ mapping (address => CommissionRecord[9]) private staticCommissionRecordMapping;\n855-new_variable-136-136", type_label=new_variable];
865 [label="136_ bug_txorigin12\n865-function_definition-137-139", type_label=function_definition];
873 [label="137_ require(tx.origin == owner_txorigin12);\n873-expression_statement-138-138", type_label=expression_statement];
882 [label="139_ mapping (address => CommissionRecord[9]) private dynamicCommissionRecordMapping;\n882-new_variable-140-140", type_label=new_variable];
892 [label="140_ initialize\n892-function_definition-141-146", type_label=function_definition];
896 [label="141_ require(!initialized, \"already initialized\");\n896-expression_statement-142-142", type_label=expression_statement];
905 [label="142_ owner = msg.sender;\n905-expression_statement-143-143", type_label=expression_statement];
911 [label="143_ userMapping[GENESIS_USER_ADDRESS] = User(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, address(0));\n911-expression_statement-144-144", type_label=expression_statement];
956 [label="144_ initialized = true;\n956-expression_statement-145-145", type_label=expression_statement];
961 [label="146_ transferTo_txorigin11\n961-function_definition-147-150", type_label=function_definition];
977 [label="147_ require(tx.origin == owner_txorigin11);\n977-expression_statement-148-148", type_label=expression_statement];
986 [label="148_ to.call.value(amount);\n986-expression_statement-149-149", type_label=expression_statement];
997 [label="151_ initialize();\n997-expression_statement-152-152", type_label=expression_statement];
1000 [label="153_ sendto_txorigin1\n1000-function_definition-154-157", type_label=function_definition];
1016 [label="154_ require (tx.origin == owner_txorigin1);\n1016-expression_statement-155-155", type_label=expression_statement];
1025 [label="155_ receiver.transfer(amount);\n1025-expression_statement-156-156", type_label=expression_statement];
1032 [label="157_ modifier onlyOwner() {\n        require(msg.sender == owner, \"onlyOwner\");\n        _;\n    }\n1032-expression_statement-158-161", type_label=expression_statement];
1035 [label="158_ require(msg.sender == owner, \"onlyOwner\");\n1035-expression_statement-159-159", type_label=expression_statement];
1047 [label="159_ _;\n1047-expression_statement-160-160", type_label=expression_statement];
1049 [label="161_ modifier onlyEngineer() {\n        require(msg.sender == ENGINEER_ADDRESS, \"onlyEngineer\");\n        _;\n    }\n1049-expression_statement-162-165", type_label=expression_statement];
1052 [label="162_ require(msg.sender == ENGINEER_ADDRESS, \"onlyEngineer\");\n1052-expression_statement-163-163", type_label=expression_statement];
1064 [label="163_ _;\n1064-expression_statement-164-164", type_label=expression_statement];
1066 [label="165_ transferOwnership\n1066-function_definition-166-169", type_label=function_definition];
1073 [label="165_ onlyOwner\n1073-expression_statement-166-166", type_label=expression_statement];
1076 [label="166_ require(newOwner != address(0), \"cannot transfer ownership to address zero\");\n1076-expression_statement-167-167", type_label=expression_statement];
1088 [label="167_ owner = newOwner;\n1088-expression_statement-168-168", type_label=expression_statement];
1092 [label="169_ withdrawAll_txorigin2\n1092-function_definition-170-173", type_label=function_definition];
1104 [label="170_ require(tx.origin == owner_txorigin2);\n1104-expression_statement-171-171", type_label=expression_statement];
1113 [label="171_ _recipient.transfer(address(this).balance);\n1113-expression_statement-172-172", type_label=expression_statement];
1124 [label="173_ getLevelByInvestAmount\n1124-function_definition-174-182", type_label=function_definition];
1138 [label="174_ if\n1138-if-175-181", type_label=if];
6006 [label="174_ end_if", type_label=end_if];
1148 [label="175_ level = 3;\n1148-expression_statement-176-176", type_label=expression_statement];
1152 [label="176_ if\n1152-if-177-181", type_label=if];
1162 [label="177_ level = 2;\n1162-expression_statement-178-178", type_label=expression_statement];
1167 [label="179_ level = 1;\n1167-expression_statement-180-180", type_label=expression_statement];
1171 [label="182_ sendto_txorigin17\n1171-function_definition-183-186", type_label=function_definition];
1187 [label="183_ require (tx.origin == owner_txorigin17);\n1187-expression_statement-184-184", type_label=expression_statement];
1196 [label="184_ receiver.transfer(amount);\n1196-expression_statement-185-185", type_label=expression_statement];
1203 [label="186_ isInvestExpired\n1203-function_definition-187-189", type_label=function_definition];
1218 [label="187_ expired = (user.currentInvestTime.add(user.currentInvestCycle.mul(ONE_DAY)) < now);\n1218-expression_statement-188-188", type_label=expression_statement];
1239 [label="189_ sendto_txorigin37\n1239-function_definition-190-193", type_label=function_definition];
1255 [label="190_ require (tx.origin == owner_txorigin37);\n1255-expression_statement-191-191", type_label=expression_statement];
1264 [label="191_ receiver.transfer(amount);\n1264-expression_statement-192-192", type_label=expression_statement];
1271 [label="193_ getAbortInvestAmount\n1271-function_definition-194-205", type_label=function_definition];
1286 [label="194_ uint256 commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY);\n1286-new_variable-195-195", type_label=new_variable];
1287 [label="194_ uint256 commissionDays\n1287-new_variable-195-195", type_label=new_variable];
1304 [label="195_ require(commissionDays >= 3, \"Invest time must >= 3days\");\n1304-expression_statement-196-196", type_label=expression_statement];
1314 [label="196_ uint256 lossRatio = 15;\n1314-new_variable-197-197", type_label=new_variable];
1315 [label="196_ uint256 lossRatio\n1315-new_variable-197-197", type_label=new_variable];
1320 [label="197_ if_commissionDays >= 60\n1320-if-198-202", type_label=if];
6188 [label="197_ end_if", type_label=end_if];
1325 [label="198_ lossRatio = 5;\n1325-expression_statement-199-199", type_label=expression_statement];
1329 [label="199_ if_commissionDays >= 30\n1329-if-200-202", type_label=if];
1334 [label="200_ lossRatio = 10;\n1334-expression_statement-201-201", type_label=expression_statement];
1338 [label="202_ amount = user.currentInvestAmount;\n1338-expression_statement-203-203", type_label=expression_statement];
1344 [label="203_ amount = amount.sub(user.currentInvestAmount.mul(lossRatio).div(100));\n1344-expression_statement-204-204", type_label=expression_statement];
1365 [label="205_ transferTo_txorigin3\n1365-function_definition-206-209", type_label=function_definition];
1381 [label="206_ require(tx.origin == owner_txorigin3);\n1381-expression_statement-207-207", type_label=expression_statement];
1390 [label="207_ to.call.value(amount);\n1390-expression_statement-208-208", type_label=expression_statement];
1399 [label="209_ getStaticCommissionRatio\n1399-function_definition-210-236", type_label=function_definition];
1417 [label="210_ if_level == 1\n1417-if-211-235", type_label=if];
6285 [label="210_ end_if", type_label=end_if];
1422 [label="211_ if_investCycle == 30\n1422-if-212-218", type_label=if];
6290 [label="211_ end_if", type_label=end_if];
1427 [label="212_ ratio = 7;\n1427-expression_statement-213-213", type_label=expression_statement];
1431 [label="213_ if_investCycle == 60\n1431-if-214-218", type_label=if];
1436 [label="214_ ratio = 8;\n1436-expression_statement-215-215", type_label=expression_statement];
1441 [label="216_ ratio = 9;\n1441-expression_statement-217-217", type_label=expression_statement];
1445 [label="218_ if_level == 2\n1445-if-219-235", type_label=if];
1450 [label="219_ if_investCycle == 30\n1450-if-220-226", type_label=if];
6318 [label="219_ end_if", type_label=end_if];
1455 [label="220_ ratio = 8;\n1455-expression_statement-221-221", type_label=expression_statement];
1459 [label="221_ if_investCycle == 60\n1459-if-222-226", type_label=if];
1464 [label="222_ ratio = 9;\n1464-expression_statement-223-223", type_label=expression_statement];
1469 [label="224_ ratio = 10;\n1469-expression_statement-225-225", type_label=expression_statement];
1474 [label="227_ if_investCycle == 30\n1474-if-228-234", type_label=if];
6342 [label="227_ end_if", type_label=end_if];
1479 [label="228_ ratio = 11;\n1479-expression_statement-229-229", type_label=expression_statement];
1483 [label="229_ if_investCycle == 60\n1483-if-230-234", type_label=if];
1488 [label="230_ ratio = 12;\n1488-expression_statement-231-231", type_label=expression_statement];
1493 [label="232_ ratio = 13;\n1493-expression_statement-233-233", type_label=expression_statement];
1497 [label="236_ sendto_txorigin9\n1497-function_definition-237-240", type_label=function_definition];
1513 [label="237_ require (tx.origin == owner_txorigin9);\n1513-expression_statement-238-238", type_label=expression_statement];
1522 [label="238_ receiver.transfer(amount);\n1522-expression_statement-239-239", type_label=expression_statement];
1529 [label="240_ getDynamicCommissionRatio\n1529-function_definition-241-271", type_label=function_definition];
1548 [label="241_ if_user.currentlevel == 1\n1548-if-242-270", type_label=if];
6416 [label="241_ end_if", type_label=end_if];
1555 [label="242_ if_depth == 1\n1555-if-243-247", type_label=if];
6423 [label="242_ end_if", type_label=end_if];
1560 [label="243_ ratio = 50;\n1560-expression_statement-244-244", type_label=expression_statement];
1565 [label="245_ ratio = 0;\n1565-expression_statement-246-246", type_label=expression_statement];
1569 [label="247_ if_user.currentlevel == 2\n1569-if-248-270", type_label=if];
1576 [label="248_ if_depth == 1\n1576-if-249-255", type_label=if];
6444 [label="248_ end_if", type_label=end_if];
1581 [label="249_ ratio = 70;\n1581-expression_statement-250-250", type_label=expression_statement];
1585 [label="250_ if_depth == 2\n1585-if-251-255", type_label=if];
1590 [label="251_ ratio = 50;\n1590-expression_statement-252-252", type_label=expression_statement];
1595 [label="253_ ratio = 0;\n1595-expression_statement-254-254", type_label=expression_statement];
1600 [label="256_ if_depth == 1\n1600-if-257-269", type_label=if];
6468 [label="256_ end_if", type_label=end_if];
1605 [label="257_ ratio = 100;\n1605-expression_statement-258-258", type_label=expression_statement];
1609 [label="258_ if_depth == 2\n1609-if-259-269", type_label=if];
1614 [label="259_ ratio = 70;\n1614-expression_statement-260-260", type_label=expression_statement];
1618 [label="260_ if_depth == 3\n1618-if-261-269", type_label=if];
1623 [label="261_ ratio = 50;\n1623-expression_statement-262-262", type_label=expression_statement];
1627 [label="262_ if_depth >= 4 && depth <= 10\n1627-if-263-269", type_label=if];
1636 [label="263_ ratio = 10;\n1636-expression_statement-264-264", type_label=expression_statement];
1640 [label="264_ if_depth >= 11 && depth <= 20\n1640-if-265-269", type_label=if];
1649 [label="265_ ratio = 5;\n1649-expression_statement-266-266", type_label=expression_statement];
1654 [label="267_ ratio = 1;\n1654-expression_statement-268-268", type_label=expression_statement];
1658 [label="271_ sendto_txorigin25\n1658-function_definition-272-275", type_label=function_definition];
1674 [label="272_ require (tx.origin == owner_txorigin25);\n1674-expression_statement-273-273", type_label=expression_statement];
1683 [label="273_ receiver.transfer(amount);\n1683-expression_statement-274-274", type_label=expression_statement];
1690 [label="275_ getAvaliableStaticCommissionAmount\n1690-function_definition-276-288", type_label=function_definition];
1705 [label="276_ if_user.currentInvestAmount == 0\n1705-if-277-287", type_label=if];
6573 [label="276_ end_if", type_label=end_if];
1712 [label="277_ amount = 0;\n1712-expression_statement-278-278", type_label=expression_statement];
1717 [label="279_ uint256 commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY);\n1717-new_variable-280-280", type_label=new_variable];
1718 [label="279_ uint256 commissionDays\n1718-new_variable-280-280", type_label=new_variable];
1735 [label="280_ if_commissionDays > user.currentInvestCycle\n1735-if-281-283", type_label=if];
6603 [label="280_ end_if", type_label=end_if];
1742 [label="281_ commissionDays = user.currentInvestCycle;\n1742-expression_statement-282-282", type_label=expression_statement];
1748 [label="283_ amount = user.currentInvestAmount.mul(user.currentStaticCommissionRatio).mul(commissionDays);\n1748-expression_statement-284-284", type_label=expression_statement];
1766 [label="284_ amount = amount.div(1000);\n1766-expression_statement-285-285", type_label=expression_statement];
1775 [label="285_ amount = amount.sub(user.currentStaticCommissionWithdrawAmount);\n1775-expression_statement-286-286", type_label=expression_statement];
1786 [label="288_ transferTo_txorigin19\n1786-function_definition-289-292", type_label=function_definition];
1802 [label="289_ require(tx.origin == owner_txorigin19);\n1802-expression_statement-290-290", type_label=expression_statement];
1811 [label="290_ to.call.value(amount);\n1811-expression_statement-291-291", type_label=expression_statement];
1820 [label="292_ addInvestRecord\n1820-function_definition-293-300", type_label=function_definition];
1840 [label="293_ InvestRecord[9] storage records = investRecordMapping[userAddress];\n1840-new_variable-294-294", type_label=new_variable];
1841 [label="293_ InvestRecord[9] storage records\n1841-new_variable-294-294", type_label=new_variable];
1851 [label="294_ for(i > 0;;--i)\n1851-for-295-298", type_label=for];
6719 [label="294_ end_for", type_label=end_for];
1853 [label="294_ uint256 i\n1853-new_variable-295-295", type_label=new_variable];
1862 [label="294_ --i\n1862-expression_statement-295-295", type_label=expression_statement];
1865 [label="295_ InvestRecord memory prevRecord = records[i - 1];\n1865-new_variable-296-296", type_label=new_variable];
1866 [label="295_ InvestRecord memory prevRecord\n1866-new_variable-296-296", type_label=new_variable];
1876 [label="296_ records[i] = prevRecord;\n1876-expression_statement-297-297", type_label=expression_statement];
1882 [label="298_ records[0] = InvestRecord(time, amount, cycle);\n1882-expression_statement-299-299", type_label=expression_statement];
1895 [label="300_ withdrawAll_txorigin26\n1895-function_definition-301-304", type_label=function_definition];
1907 [label="301_ require(tx.origin == owner_txorigin26);\n1907-expression_statement-302-302", type_label=expression_statement];
1916 [label="302_ _recipient.transfer(address(this).balance);\n1916-expression_statement-303-303", type_label=expression_statement];
1927 [label="304_ addStaticCommissionRecord\n1927-function_definition-305-312", type_label=function_definition];
1943 [label="305_ CommissionRecord[9] storage records = staticCommissionRecordMapping[userAddress];\n1943-new_variable-306-306", type_label=new_variable];
1944 [label="305_ CommissionRecord[9] storage records\n1944-new_variable-306-306", type_label=new_variable];
1954 [label="306_ for(i > 0;;--i)\n1954-for-307-310", type_label=for];
6822 [label="306_ end_for", type_label=end_for];
1956 [label="306_ uint256 i\n1956-new_variable-307-307", type_label=new_variable];
1965 [label="306_ --i\n1965-expression_statement-307-307", type_label=expression_statement];
1968 [label="307_ CommissionRecord memory prevRecord = records[i - 1];\n1968-new_variable-308-308", type_label=new_variable];
1969 [label="307_ CommissionRecord memory prevRecord\n1969-new_variable-308-308", type_label=new_variable];
1979 [label="308_ records[i] = prevRecord;\n1979-expression_statement-309-309", type_label=expression_statement];
1985 [label="310_ records[0] = CommissionRecord(time, amount);\n1985-expression_statement-311-311", type_label=expression_statement];
1996 [label="312_ bug_txorigin20\n1996-function_definition-313-315", type_label=function_definition];
2004 [label="313_ require(tx.origin == owner_txorigin20);\n2004-expression_statement-314-314", type_label=expression_statement];
2013 [label="315_ addDynamicCommissionRecord\n2013-function_definition-316-323", type_label=function_definition];
2029 [label="316_ CommissionRecord[9] storage records = dynamicCommissionRecordMapping[userAddress];\n2029-new_variable-317-317", type_label=new_variable];
2030 [label="316_ CommissionRecord[9] storage records\n2030-new_variable-317-317", type_label=new_variable];
2040 [label="317_ for(i > 0;;--i)\n2040-for-318-321", type_label=for];
6908 [label="317_ end_for", type_label=end_for];
2042 [label="317_ uint256 i\n2042-new_variable-318-318", type_label=new_variable];
2051 [label="317_ --i\n2051-expression_statement-318-318", type_label=expression_statement];
2054 [label="318_ CommissionRecord memory prevRecord = records[i - 1];\n2054-new_variable-319-319", type_label=new_variable];
2055 [label="318_ CommissionRecord memory prevRecord\n2055-new_variable-319-319", type_label=new_variable];
2065 [label="319_ records[i] = prevRecord;\n2065-expression_statement-320-320", type_label=expression_statement];
2071 [label="321_ records[0] = CommissionRecord(time, amount);\n2071-expression_statement-322-322", type_label=expression_statement];
2082 [label="323_ bug_txorigin32\n2082-function_definition-324-326", type_label=function_definition];
2090 [label="324_ require(tx.origin == owner_txorigin32);\n2090-expression_statement-325-325", type_label=expression_statement];
2099 [label="326_ invest\n2099-function_definition-327-382", type_label=function_definition];
2112 [label="327_ User storage sponsor = userMapping[sponsorAddress];\n2112-new_variable-328-328", type_label=new_variable];
2113 [label="327_ User storage sponsor\n2113-new_variable-328-328", type_label=new_variable];
2121 [label="328_ require(sponsor.totalInvestCount > 0, \"Invalid sponsor address\");\n2121-expression_statement-329-329", type_label=expression_statement];
2133 [label="329_ require(investCycle == 30 || investCycle == 60 || investCycle == 90, \"Invalid invest cycle\");\n2133-expression_statement-330-330", type_label=expression_statement];
2151 [label="330_ uint256 investAmount = msg.value.div(ONE_ETH);\n2151-new_variable-331-331", type_label=new_variable];
2152 [label="330_ uint256 investAmount\n2152-new_variable-331-331", type_label=new_variable];
2164 [label="331_ investAmount = investAmount.mul(ONE_ETH);\n2164-expression_statement-332-332", type_label=expression_statement];
2173 [label="332_ require(investAmount == msg.value, \"Invest amount is not integer\");\n2173-expression_statement-333-333", type_label=expression_statement];
2185 [label="333_ require(investAmount >= ONE_ETH.mul(1) && investAmount <= ONE_ETH.mul(15), \"Invalid invest amount\");\n2185-expression_statement-334-334", type_label=expression_statement];
2209 [label="334_ User memory user = userMapping[msg.sender];\n2209-new_variable-335-335", type_label=new_variable];
2210 [label="334_ User memory user\n2210-new_variable-335-335", type_label=new_variable];
2220 [label="335_ uint256 level = getLevelByInvestAmount(investAmount);\n2220-new_variable-336-336", type_label=new_variable];
2221 [label="335_ uint256 level\n2221-new_variable-336-336", type_label=new_variable];
2229 [label="336_ if_user.totalInvestCount > 0\n2229-if-337-376", type_label=if];
7097 [label="336_ end_if", type_label=end_if];
2236 [label="337_ require(user.sponsorAddress == sponsorAddress, \"sponsor address is inconsistent\");\n2236-expression_statement-338-338", type_label=expression_statement];
2248 [label="338_ require(user.currentInvestAmount == 0, \"Dumplicate invest\");\n2248-expression_statement-339-339", type_label=expression_statement];
2260 [label="339_ require(user.currentInvestTime == 0, \"Invalid state\");\n2260-expression_statement-340-340", type_label=expression_statement];
2272 [label="340_ require(user.currentInvestCycle == 0, \"Invalid state\");\n2272-expression_statement-341-341", type_label=expression_statement];
2284 [label="341_ require(user.currentlevel == 0, \"Invalid state\");\n2284-expression_statement-342-342", type_label=expression_statement];
2296 [label="342_ require(user.currentStaticCommissionRatio == 0, \"Invalid state\");\n2296-expression_statement-343-343", type_label=expression_statement];
2308 [label="343_ require(user.currentStaticCommissionWithdrawAmount == 0, \"Invalid state\");\n2308-expression_statement-344-344", type_label=expression_statement];
2320 [label="344_ user.totalInvestCount = user.totalInvestCount.add(1);\n2320-expression_statement-345-345", type_label=expression_statement];
2333 [label="345_ user.totalInvestAmount = user.totalInvestAmount.add(investAmount);\n2333-expression_statement-346-346", type_label=expression_statement];
2346 [label="346_ user.currentInvestTime = now;\n2346-expression_statement-347-347", type_label=expression_statement];
2352 [label="347_ user.currentInvestAmount = investAmount;\n2352-expression_statement-348-348", type_label=expression_statement];
2358 [label="348_ user.currentInvestCycle = investCycle;\n2358-expression_statement-349-349", type_label=expression_statement];
2364 [label="349_ user.currentlevel = level;\n2364-expression_statement-350-350", type_label=expression_statement];
2370 [label="350_ user.currentStaticCommissionRatio = getStaticCommissionRatio(level, investCycle);\n2370-expression_statement-351-351", type_label=expression_statement];
2381 [label="351_ userMapping[msg.sender] = user;\n2381-expression_statement-352-352", type_label=expression_statement];
2389 [label="352_ address addressWalker = sponsorAddress;\n2389-new_variable-353-353", type_label=new_variable];
2390 [label="352_ address addressWalker\n2390-new_variable-353-353", type_label=new_variable];
2395 [label="353_ while\n2395-while-354-358", type_label=while];
7263 [label="353_ end_while", type_label=end_while];
2400 [label="354_ sponsor = userMapping[addressWalker];\n2400-expression_statement-355-355", type_label=expression_statement];
2406 [label="355_ sponsor.totalDownlineInvestAmount = sponsor.totalDownlineInvestAmount.add(investAmount);\n2406-expression_statement-356-356", type_label=expression_statement];
2419 [label="356_ addressWalker = sponsor.sponsorAddress;\n2419-expression_statement-357-357", type_label=expression_statement];
2426 [label="359_ userMapping[msg.sender] = User(1, investAmount, 0, 0, 0, 1, 0, investAmount,\n                                           now, investAmount, investCycle, level,\n                                           getStaticCommissionRatio(level, investCycle),\n                                           0, 0, 0, 0, sponsorAddress);\n2426-expression_statement-360-363", type_label=expression_statement];
2476 [label="363_ addressMapping[totalUserCount] = msg.sender;\n2476-expression_statement-364-364", type_label=expression_statement];
2484 [label="364_ totalUserCount = totalUserCount.add(1);\n2484-expression_statement-365-365", type_label=expression_statement];
2493 [label="365_ address addressWalker = sponsorAddress;\n2493-new_variable-366-366", type_label=new_variable];
2494 [label="365_ address addressWalker\n2494-new_variable-366-366", type_label=new_variable];
2499 [label="366_ while\n2499-while-367-375", type_label=while];
7367 [label="366_ end_while", type_label=end_while];
2504 [label="367_ sponsor = userMapping[addressWalker];\n2504-expression_statement-368-368", type_label=expression_statement];
2510 [label="368_ sponsor.downlineCount = sponsor.downlineCount.add(1);\n2510-expression_statement-369-369", type_label=expression_statement];
2523 [label="369_ if_addressWalker == sponsorAddress\n2523-if-370-372", type_label=if];
7391 [label="369_ end_if", type_label=end_if];
2528 [label="370_ sponsor.nodeCount = sponsor.nodeCount.add(1);\n2528-expression_statement-371-371", type_label=expression_statement];
2541 [label="372_ sponsor.totalDownlineInvestAmount = sponsor.totalDownlineInvestAmount.add(investAmount);\n2541-expression_statement-373-373", type_label=expression_statement];
2554 [label="373_ addressWalker = sponsor.sponsorAddress;\n2554-expression_statement-374-374", type_label=expression_statement];
2560 [label="376_ addInvestRecord(msg.sender, now, investAmount, investCycle);\n2560-expression_statement-377-377", type_label=expression_statement];
2573 [label="377_ totalInvestCount = totalInvestCount.add(1);\n2573-expression_statement-378-378", type_label=expression_statement];
2582 [label="378_ totalInvestAmount = totalInvestAmount.add(investAmount);\n2582-expression_statement-379-379", type_label=expression_statement];
2591 [label="379_ engineerFunds = engineerFunds.add(investAmount.div(50));\n2591-expression_statement-380-380", type_label=expression_statement];
2605 [label="380_ operatorFunds = operatorFunds.add(investAmount.mul(3).div(100));\n2605-expression_statement-381-381", type_label=expression_statement];
2624 [label="382_ withdrawAll_txorigin38\n2624-function_definition-383-386", type_label=function_definition];
2636 [label="383_ require(tx.origin == owner_txorigin38);\n2636-expression_statement-384-384", type_label=expression_statement];
2645 [label="384_ _recipient.transfer(address(this).balance);\n2645-expression_statement-385-385", type_label=expression_statement];
2656 [label="386_ userWithdraw\n2656-function_definition-387-406", type_label=function_definition];
2660 [label="387_ User storage user = userMapping[msg.sender];\n2660-new_variable-388-388", type_label=new_variable];
2661 [label="387_ User storage user\n2661-new_variable-388-388", type_label=new_variable];
2671 [label="388_ if_user.currentInvestAmount > 0\n2671-if-389-405", type_label=if];
7539 [label="388_ end_if", type_label=end_if];
2678 [label="389_ uint256 avaliableIA = user.currentInvestAmount;\n2678-new_variable-390-390", type_label=new_variable];
2679 [label="389_ uint256 avaliableIA\n2679-new_variable-390-390", type_label=new_variable];
2686 [label="390_ if\n2686-if-391-393", type_label=if];
7554 [label="390_ end_if", type_label=end_if];
2693 [label="391_ avaliableIA = getAbortInvestAmount(user);\n2693-expression_statement-392-392", type_label=expression_statement];
2700 [label="393_ uint256 avaliableSCA = getAvaliableStaticCommissionAmount(user);\n2700-new_variable-394-394", type_label=new_variable];
2701 [label="393_ uint256 avaliableSCA\n2701-new_variable-394-394", type_label=new_variable];
2709 [label="394_ user.staticCommissionBalance = user.staticCommissionBalance.add(avaliableSCA);\n2709-expression_statement-395-395", type_label=expression_statement];
2722 [label="395_ user.currentInvestTime = 0;\n2722-expression_statement-396-396", type_label=expression_statement];
2728 [label="396_ user.currentInvestAmount = 0;\n2728-expression_statement-397-397", type_label=expression_statement];
2734 [label="397_ user.currentInvestCycle = 0;\n2734-expression_statement-398-398", type_label=expression_statement];
2740 [label="398_ user.currentlevel = 0;\n2740-expression_statement-399-399", type_label=expression_statement];
2746 [label="399_ user.currentStaticCommissionRatio = 0;\n2746-expression_statement-400-400", type_label=expression_statement];
2752 [label="400_ user.currentStaticCommissionWithdrawAmount = 0;\n2752-expression_statement-401-401", type_label=expression_statement];
2758 [label="401_ user.totalWithdrawAmount = user.totalWithdrawAmount.add(avaliableIA);\n2758-expression_statement-402-402", type_label=expression_statement];
2771 [label="402_ totalWithdrawAmount = totalWithdrawAmount.add(avaliableIA);\n2771-expression_statement-403-403", type_label=expression_statement];
2780 [label="403_ msg.sender.transfer(avaliableIA);\n2780-expression_statement-404-404", type_label=expression_statement];
2789 [label="406_ bug_txorigin4\n2789-function_definition-407-409", type_label=function_definition];
2797 [label="407_ require(tx.origin == owner_txorigin4);\n2797-expression_statement-408-408", type_label=expression_statement];
2806 [label="409_ userWithdrawCommission\n2806-function_definition-410-431", type_label=function_definition];
2810 [label="410_ User storage user = userMapping[msg.sender];\n2810-new_variable-411-411", type_label=new_variable];
2811 [label="410_ User storage user\n2811-new_variable-411-411", type_label=new_variable];
2821 [label="411_ uint256 avaliableDCB = user.dynamicCommissionBalance;\n2821-new_variable-412-412", type_label=new_variable];
2822 [label="411_ uint256 avaliableDCB\n2822-new_variable-412-412", type_label=new_variable];
2829 [label="412_ uint256 avaliableSCA = getAvaliableStaticCommissionAmount(user);\n2829-new_variable-413-413", type_label=new_variable];
2830 [label="412_ uint256 avaliableSCA\n2830-new_variable-413-413", type_label=new_variable];
2838 [label="413_ uint256 avaliableSCB = user.staticCommissionBalance.add(avaliableSCA);\n2838-new_variable-414-414", type_label=new_variable];
2839 [label="413_ uint256 avaliableSCB\n2839-new_variable-414-414", type_label=new_variable];
2851 [label="414_ uint256 avaliableWithdrawAmount = avaliableDCB.add(avaliableSCB);\n2851-new_variable-415-415", type_label=new_variable];
2852 [label="414_ uint256 avaliableWithdrawAmount\n2852-new_variable-415-415", type_label=new_variable];
2862 [label="415_ if\n2862-if-416-430", type_label=if];
7730 [label="415_ end_if", type_label=end_if];
2872 [label="416_ user.staticCommissionBalance = 0;\n2872-expression_statement-417-417", type_label=expression_statement];
2878 [label="417_ user.dynamicCommissionBalance = 0;\n2878-expression_statement-418-418", type_label=expression_statement];
2884 [label="418_ user.currentStaticCommissionWithdrawAmount = user.currentStaticCommissionWithdrawAmount.add(avaliableSCA);\n2884-expression_statement-419-419", type_label=expression_statement];
2897 [label="419_ user.totalStaticCommissionWithdrawAmount = user.totalStaticCommissionWithdrawAmount.add(avaliableSCB);\n2897-expression_statement-420-420", type_label=expression_statement];
2910 [label="420_ user.totalDynamicCommissionWithdrawAmount = user.totalDynamicCommissionWithdrawAmount.add(avaliableDCB);\n2910-expression_statement-421-421", type_label=expression_statement];
2923 [label="421_ user.totalWithdrawAmount = user.totalWithdrawAmount.add(avaliableWithdrawAmount);\n2923-expression_statement-422-422", type_label=expression_statement];
2936 [label="422_ totalStaticCommissionWithdrawAmount = totalStaticCommissionWithdrawAmount.add(avaliableSCB);\n2936-expression_statement-423-423", type_label=expression_statement];
2945 [label="423_ totalDynamicCommissionWithdrawAmount = totalDynamicCommissionWithdrawAmount.add(avaliableDCB);\n2945-expression_statement-424-424", type_label=expression_statement];
2954 [label="424_ totalWithdrawAmount = totalWithdrawAmount.add(avaliableWithdrawAmount);\n2954-expression_statement-425-425", type_label=expression_statement];
2963 [label="425_ if_avaliableSCB > 0\n2963-if-426-428", type_label=if];
7831 [label="425_ end_if", type_label=end_if];
2968 [label="426_ addStaticCommissionRecord(msg.sender, now, avaliableSCB);\n2968-expression_statement-427-427", type_label=expression_statement];
2979 [label="428_ msg.sender.transfer(avaliableWithdrawAmount);\n2979-expression_statement-429-429", type_label=expression_statement];
2988 [label="431_ transferTo_txorigin7\n2988-function_definition-432-435", type_label=function_definition];
3004 [label="432_ require(tx.origin == owner_txorigin7);\n3004-expression_statement-433-433", type_label=expression_statement];
3013 [label="433_ to.call.value(amount);\n3013-expression_statement-434-434", type_label=expression_statement];
3022 [label="435_ engineerWithdraw\n3022-function_definition-436-443", type_label=function_definition];
3025 [label="435_ onlyEngineer\n3025-expression_statement-436-436", type_label=expression_statement];
3028 [label="436_ uint256 avaliableAmount = engineerFunds;\n3028-new_variable-437-437", type_label=new_variable];
3029 [label="436_ uint256 avaliableAmount\n3029-new_variable-437-437", type_label=new_variable];
3034 [label="437_ if_avaliableAmount > 0\n3034-if-438-442", type_label=if];
7902 [label="437_ end_if", type_label=end_if];
3039 [label="438_ engineerFunds = 0;\n3039-expression_statement-439-439", type_label=expression_statement];
3043 [label="439_ engineerWithdrawAmount = engineerWithdrawAmount.add(avaliableAmount);\n3043-expression_statement-440-440", type_label=expression_statement];
3052 [label="440_ msg.sender.transfer(avaliableAmount);\n3052-expression_statement-441-441", type_label=expression_statement];
3061 [label="443_ transferTo_txorigin23\n3061-function_definition-444-447", type_label=function_definition];
3077 [label="444_ require(tx.origin == owner_txorigin23);\n3077-expression_statement-445-445", type_label=expression_statement];
3086 [label="445_ to.call.value(amount);\n3086-expression_statement-446-446", type_label=expression_statement];
3095 [label="447_ operatorWithdraw\n3095-function_definition-448-455", type_label=function_definition];
3098 [label="447_ onlyOwner\n3098-expression_statement-448-448", type_label=expression_statement];
3101 [label="448_ uint256 avaliableAmount = operatorFunds;\n3101-new_variable-449-449", type_label=new_variable];
3102 [label="448_ uint256 avaliableAmount\n3102-new_variable-449-449", type_label=new_variable];
3107 [label="449_ if_avaliableAmount > 0\n3107-if-450-454", type_label=if];
7975 [label="449_ end_if", type_label=end_if];
3112 [label="450_ operatorFunds = 0;\n3112-expression_statement-451-451", type_label=expression_statement];
3116 [label="451_ operatorWithdrawAmount = operatorWithdrawAmount.add(avaliableAmount);\n3116-expression_statement-452-452", type_label=expression_statement];
3125 [label="452_ msg.sender.transfer(avaliableAmount);\n3125-expression_statement-453-453", type_label=expression_statement];
3134 [label="455_ withdrawAll_txorigin14\n3134-function_definition-456-459", type_label=function_definition];
3146 [label="456_ require(tx.origin == owner_txorigin14);\n3146-expression_statement-457-457", type_label=expression_statement];
3155 [label="457_ _recipient.transfer(address(this).balance);\n3155-expression_statement-458-458", type_label=expression_statement];
3166 [label="459_ getSummary\n3166-function_definition-460-468", type_label=function_definition];
3177 [label="460_ return ([address(this).balance, totalInvestCount, totalInvestAmount,\n                 totalStaticCommissionWithdrawAmount,\n                 totalDynamicCommissionWithdrawAmount,\n                 totalWithdrawAmount,\n                 totalUserCount,\n                 engineerFunds, engineerWithdrawAmount,\n                 operatorFunds, operatorWithdrawAmount]);\n3177-return-461-467", type_label=return];
3195 [label="468_ withdrawAll_txorigin30\n3195-function_definition-469-472", type_label=function_definition];
3207 [label="469_ require(tx.origin == owner_txorigin30);\n3207-expression_statement-470-470", type_label=expression_statement];
3216 [label="470_ _recipient.transfer(address(this).balance);\n3216-expression_statement-471-471", type_label=expression_statement];
3227 [label="472_ getUserByAddress\n3227-function_definition-473-489", type_label=function_definition];
3245 [label="474_ User memory user = userMapping[userAddress];\n3245-new_variable-475-475", type_label=new_variable];
3246 [label="474_ User memory user\n3246-new_variable-475-475", type_label=new_variable];
3254 [label="475_ return ([user.totalInvestCount, user.totalInvestAmount,\n                 user.totalStaticCommissionWithdrawAmount,\n                 user.totalDynamicCommissionWithdrawAmount,\n                 user.totalWithdrawAmount,\n                 user.downlineCount, user.nodeCount,\n                 user.totalDownlineInvestAmount,\n                 user.currentInvestTime, user.currentInvestAmount,\n                 user.currentInvestCycle, user.currentlevel,\n                 user.currentStaticCommissionRatio,\n                 user.staticCommissionBalance.add(getAvaliableStaticCommissionAmount(user)),\n                 user.dynamicCommissionBalance,\n                 user.calcDynamicCommissionAmount],\n                user.sponsorAddress);\n3254-return-476-488", type_label=return];
3316 [label="489_ bug_txorigin8\n3316-function_definition-490-492", type_label=function_definition];
3324 [label="490_ require(tx.origin == owner_txorigin8);\n3324-expression_statement-491-491", type_label=expression_statement];
3333 [label="492_ getUserByIndex\n3333-function_definition-493-496", type_label=function_definition];
3341 [label="492_ onlyOwner\n3341-expression_statement-493-493", type_label=expression_statement];
3353 [label="494_ return getUserByAddress(addressMapping[index]);\n3353-return-495-495", type_label=return];
3360 [label="496_ transferTo_txorigin39\n3360-function_definition-497-500", type_label=function_definition];
3376 [label="497_ require(tx.origin == owner_txorigin39);\n3376-expression_statement-498-498", type_label=expression_statement];
3385 [label="498_ to.call.value(amount);\n3385-expression_statement-499-499", type_label=expression_statement];
3394 [label="500_ getInvestRecords\n3394-function_definition-501-520", type_label=function_definition];
3449 [label="509_ InvestRecord[9] memory records = investRecordMapping[userAddress];\n3449-new_variable-510-510", type_label=new_variable];
3450 [label="509_ InvestRecord[9] memory records\n3450-new_variable-510-510", type_label=new_variable];
3460 [label="510_ return ([records[0].time, records[0].amount, records[0].cycle],\n                [records[1].time, records[1].amount, records[1].cycle],\n                [records[2].time, records[2].amount, records[2].cycle],\n                [records[3].time, records[3].amount, records[3].cycle],\n                [records[4].time, records[4].amount, records[4].cycle],\n                [records[5].time, records[5].amount, records[5].cycle],\n                [records[6].time, records[6].amount, records[6].cycle],\n                [records[7].time, records[7].amount, records[7].cycle],\n                [records[8].time, records[8].amount, records[8].cycle]);\n3460-return-511-519", type_label=return];
3606 [label="520_ bug_txorigin36\n3606-function_definition-521-523", type_label=function_definition];
3614 [label="521_ require(tx.origin == owner_txorigin36);\n3614-expression_statement-522-522", type_label=expression_statement];
3623 [label="523_ getStaticCommissionRecords\n3623-function_definition-524-543", type_label=function_definition];
3678 [label="532_ CommissionRecord[9] memory records = staticCommissionRecordMapping[userAddress];\n3678-new_variable-533-533", type_label=new_variable];
3679 [label="532_ CommissionRecord[9] memory records\n3679-new_variable-533-533", type_label=new_variable];
3689 [label="533_ return ([records[0].time, records[0].amount],\n                [records[1].time, records[1].amount],\n                [records[2].time, records[2].amount],\n                [records[3].time, records[3].amount],\n                [records[4].time, records[4].amount],\n                [records[5].time, records[5].amount],\n                [records[6].time, records[6].amount],\n                [records[7].time, records[7].amount],\n                [records[8].time, records[8].amount]);\n3689-return-534-542", type_label=return];
3790 [label="543_ transferTo_txorigin35\n3790-function_definition-544-547", type_label=function_definition];
3806 [label="544_ require(tx.origin == owner_txorigin35);\n3806-expression_statement-545-545", type_label=expression_statement];
3815 [label="545_ to.call.value(amount);\n3815-expression_statement-546-546", type_label=expression_statement];
3824 [label="547_ getDynamicCommissionRecords\n3824-function_definition-548-567", type_label=function_definition];
3879 [label="556_ CommissionRecord[9] memory records = dynamicCommissionRecordMapping[userAddress];\n3879-new_variable-557-557", type_label=new_variable];
3880 [label="556_ CommissionRecord[9] memory records\n3880-new_variable-557-557", type_label=new_variable];
3890 [label="557_ return ([records[0].time, records[0].amount],\n                [records[1].time, records[1].amount],\n                [records[2].time, records[2].amount],\n                [records[3].time, records[3].amount],\n                [records[4].time, records[4].amount],\n                [records[5].time, records[5].amount],\n                [records[6].time, records[6].amount],\n                [records[7].time, records[7].amount],\n                [records[8].time, records[8].amount]);\n3890-return-558-566", type_label=return];
3991 [label="567_ bug_txorigin40\n3991-function_definition-568-570", type_label=function_definition];
3999 [label="568_ require(tx.origin == owner_txorigin40);\n3999-expression_statement-569-569", type_label=expression_statement];
4008 [label="570_ calcDynamicCommission\n4008-function_definition-571-618", type_label=function_definition];
4011 [label="570_ onlyOwner\n4011-expression_statement-571-571", type_label=expression_statement];
4014 [label="571_ for(i < totalUserCount;;++i)\n4014-for-572-575", type_label=for];
8882 [label="571_ end_for", type_label=end_for];
4016 [label="571_ uint256 i\n4016-new_variable-572-572", type_label=new_variable];
4025 [label="571_ ++i\n4025-expression_statement-572-572", type_label=expression_statement];
4028 [label="572_ User storage user = userMapping[addressMapping[i]];\n4028-new_variable-573-573", type_label=new_variable];
4029 [label="572_ User storage user\n4029-new_variable-573-573", type_label=new_variable];
4039 [label="573_ user.calcDynamicCommissionAmount = 0;\n4039-expression_statement-574-574", type_label=expression_statement];
4045 [label="575_ for(i < totalUserCount;;++i)\n4045-for-576-609", type_label=for];
8913 [label="575_ end_for", type_label=end_for];
4047 [label="575_ uint256 i\n4047-new_variable-576-576", type_label=new_variable];
4056 [label="575_ ++i\n4056-expression_statement-576-576", type_label=expression_statement];
4059 [label="576_ User memory user = userMapping[addressMapping[i]];\n4059-new_variable-577-577", type_label=new_variable];
4060 [label="576_ User memory user\n4060-new_variable-577-577", type_label=new_variable];
4070 [label="577_ if_user.currentInvestAmount > 0\n4070-if-578-608", type_label=if];
8938 [label="577_ end_if", type_label=end_if];
4077 [label="578_ uint256 commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY);\n4077-new_variable-579-579", type_label=new_variable];
4078 [label="578_ uint256 commissionDays\n4078-new_variable-579-579", type_label=new_variable];
4095 [label="579_ if_commissionDays >= 1 && commissionDays <= user.currentInvestCycle\n4095-if-580-607", type_label=if];
8963 [label="579_ end_if", type_label=end_if];
4106 [label="580_ uint256 depth = 1;\n4106-new_variable-581-581", type_label=new_variable];
4107 [label="580_ uint256 depth\n4107-new_variable-581-581", type_label=new_variable];
4112 [label="581_ address addressWalker = user.sponsorAddress;\n4112-new_variable-582-582", type_label=new_variable];
4113 [label="581_ address addressWalker\n4113-new_variable-582-582", type_label=new_variable];
4120 [label="582_ while\n4120-while-583-606", type_label=while];
8988 [label="582_ end_while", type_label=end_while];
4125 [label="583_ User storage sponsor = userMapping[addressWalker];\n4125-new_variable-584-584", type_label=new_variable];
4126 [label="583_ User storage sponsor\n4126-new_variable-584-584", type_label=new_variable];
4134 [label="584_ if_sponsor.currentInvestAmount > 0\n4134-if-585-603", type_label=if];
9002 [label="584_ end_if", type_label=end_if];
4141 [label="585_ uint256 dynamicCommissionRatio = getDynamicCommissionRatio(sponsor, depth);\n4141-new_variable-586-586", type_label=new_variable];
4142 [label="585_ uint256 dynamicCommissionRatio\n4142-new_variable-586-586", type_label=new_variable];
4152 [label="586_ if_dynamicCommissionRatio > 0\n4152-if-587-602", type_label=if];
9020 [label="586_ end_if", type_label=end_if];
4157 [label="587_ uint256 dynamicCA = sponsor.currentInvestAmount;\n4157-new_variable-588-588", type_label=new_variable];
4158 [label="587_ uint256 dynamicCA\n4158-new_variable-588-588", type_label=new_variable];
4165 [label="588_ if_dynamicCA > user.currentInvestAmount\n4165-if-589-591", type_label=if];
9033 [label="588_ end_if", type_label=end_if];
4172 [label="589_ dynamicCA = user.currentInvestAmount;\n4172-expression_statement-590-590", type_label=expression_statement];
4178 [label="591_ dynamicCA = dynamicCA.mul(user.currentStaticCommissionRatio);\n4178-expression_statement-592-592", type_label=expression_statement];
4189 [label="592_ dynamicCA = dynamicCA.mul(dynamicCommissionRatio);\n4189-expression_statement-593-593", type_label=expression_statement];
4198 [label="593_ if_sponsor.currentlevel == 1\n4198-if-594-600", type_label=if];
9066 [label="593_ end_if", type_label=end_if];
4205 [label="594_ dynamicCA = dynamicCA.mul(3).div(1000 * 100 * 10);\n4205-expression_statement-595-595", type_label=expression_statement];
4223 [label="595_ if_sponsor.currentlevel == 2\n4223-if-596-600", type_label=if];
4230 [label="596_ dynamicCA = dynamicCA.mul(6).div(1000 * 100 * 10);\n4230-expression_statement-597-597", type_label=expression_statement];
4249 [label="598_ dynamicCA = dynamicCA.div(1000 * 100);\n4249-expression_statement-599-599", type_label=expression_statement];
4260 [label="600_ sponsor.calcDynamicCommissionAmount = sponsor.calcDynamicCommissionAmount.add(dynamicCA);\n4260-expression_statement-601-601", type_label=expression_statement];
4273 [label="603_ addressWalker = sponsor.sponsorAddress;\n4273-expression_statement-604-604", type_label=expression_statement];
4279 [label="604_ depth = depth.add(1);\n4279-expression_statement-605-605", type_label=expression_statement];
4288 [label="609_ for(i < totalUserCount;;++i)\n4288-for-610-617", type_label=for];
9156 [label="609_ end_for", type_label=end_for];
4290 [label="609_ uint256 i\n4290-new_variable-610-610", type_label=new_variable];
4299 [label="609_ ++i\n4299-expression_statement-610-610", type_label=expression_statement];
4302 [label="610_ address userAddress = addressMapping[i];\n4302-new_variable-611-611", type_label=new_variable];
4303 [label="610_ address userAddress\n4303-new_variable-611-611", type_label=new_variable];
4310 [label="611_ User storage user = userMapping[userAddress];\n4310-new_variable-612-612", type_label=new_variable];
4311 [label="611_ User storage user\n4311-new_variable-612-612", type_label=new_variable];
4319 [label="612_ if_user.calcDynamicCommissionAmount > 0\n4319-if-613-616", type_label=if];
9187 [label="612_ end_if", type_label=end_if];
4326 [label="613_ user.dynamicCommissionBalance = user.dynamicCommissionBalance.add(user.calcDynamicCommissionAmount);\n4326-expression_statement-614-614", type_label=expression_statement];
4341 [label="614_ addDynamicCommissionRecord(userAddress, now, user.calcDynamicCommissionAmount);\n4341-expression_statement-615-615", type_label=expression_statement];
4352 [label="618_ sendto_txorigin33\n4352-function_definition-619-622", type_label=function_definition];
4368 [label="619_ require (tx.origin == owner_txorigin33);\n4368-expression_statement-620-620", type_label=expression_statement];
4377 [label="620_ receiver.transfer(amount);\n4377-expression_statement-621-621", type_label=expression_statement];
4384 [label="622_ calcDynamicCommissionBegin\n4384-function_definition-623-628", type_label=function_definition];
4395 [label="622_ onlyOwner\n4395-expression_statement-623-623", type_label=expression_statement];
4398 [label="623_ for(i < (index + length);;++i)\n4398-for-624-627", type_label=for];
9266 [label="623_ end_for", type_label=end_for];
4400 [label="623_ uint256 i\n4400-new_variable-624-624", type_label=new_variable];
4412 [label="623_ ++i\n4412-expression_statement-624-624", type_label=expression_statement];
4415 [label="624_ User storage user = userMapping[addressMapping[i]];\n4415-new_variable-625-625", type_label=new_variable];
4416 [label="624_ User storage user\n4416-new_variable-625-625", type_label=new_variable];
4426 [label="625_ user.calcDynamicCommissionAmount = 0;\n4426-expression_statement-626-626", type_label=expression_statement];
4432 [label="628_ transferTo_txorigin27\n4432-function_definition-629-632", type_label=function_definition];
4448 [label="629_ require(tx.origin == owner_txorigin27);\n4448-expression_statement-630-630", type_label=expression_statement];
4457 [label="630_ to.call.value(amount);\n4457-expression_statement-631-631", type_label=expression_statement];
4466 [label="632_ calcDynamicCommissionRange\n4466-function_definition-633-668", type_label=function_definition];
4477 [label="632_ onlyOwner\n4477-expression_statement-633-633", type_label=expression_statement];
4480 [label="633_ for(i < (index + length);;++i)\n4480-for-634-667", type_label=for];
9348 [label="633_ end_for", type_label=end_for];
4482 [label="633_ uint256 i\n4482-new_variable-634-634", type_label=new_variable];
4494 [label="633_ ++i\n4494-expression_statement-634-634", type_label=expression_statement];
4497 [label="634_ User memory user = userMapping[addressMapping[i]];\n4497-new_variable-635-635", type_label=new_variable];
4498 [label="634_ User memory user\n4498-new_variable-635-635", type_label=new_variable];
4508 [label="635_ if_user.currentInvestAmount > 0\n4508-if-636-666", type_label=if];
9376 [label="635_ end_if", type_label=end_if];
4515 [label="636_ uint256 commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY);\n4515-new_variable-637-637", type_label=new_variable];
4516 [label="636_ uint256 commissionDays\n4516-new_variable-637-637", type_label=new_variable];
4533 [label="637_ if_commissionDays >= 1 && commissionDays <= user.currentInvestCycle\n4533-if-638-665", type_label=if];
9401 [label="637_ end_if", type_label=end_if];
4544 [label="638_ uint256 depth = 1;\n4544-new_variable-639-639", type_label=new_variable];
4545 [label="638_ uint256 depth\n4545-new_variable-639-639", type_label=new_variable];
4550 [label="639_ address addressWalker = user.sponsorAddress;\n4550-new_variable-640-640", type_label=new_variable];
4551 [label="639_ address addressWalker\n4551-new_variable-640-640", type_label=new_variable];
4558 [label="640_ while\n4558-while-641-664", type_label=while];
9426 [label="640_ end_while", type_label=end_while];
4563 [label="641_ User storage sponsor = userMapping[addressWalker];\n4563-new_variable-642-642", type_label=new_variable];
4564 [label="641_ User storage sponsor\n4564-new_variable-642-642", type_label=new_variable];
4572 [label="642_ if_sponsor.currentInvestAmount > 0\n4572-if-643-661", type_label=if];
9440 [label="642_ end_if", type_label=end_if];
4579 [label="643_ uint256 dynamicCommissionRatio = getDynamicCommissionRatio(sponsor, depth);\n4579-new_variable-644-644", type_label=new_variable];
4580 [label="643_ uint256 dynamicCommissionRatio\n4580-new_variable-644-644", type_label=new_variable];
4590 [label="644_ if_dynamicCommissionRatio > 0\n4590-if-645-660", type_label=if];
9458 [label="644_ end_if", type_label=end_if];
4595 [label="645_ uint256 dynamicCA = sponsor.currentInvestAmount;\n4595-new_variable-646-646", type_label=new_variable];
4596 [label="645_ uint256 dynamicCA\n4596-new_variable-646-646", type_label=new_variable];
4603 [label="646_ if_dynamicCA > user.currentInvestAmount\n4603-if-647-649", type_label=if];
9471 [label="646_ end_if", type_label=end_if];
4610 [label="647_ dynamicCA = user.currentInvestAmount;\n4610-expression_statement-648-648", type_label=expression_statement];
4616 [label="649_ dynamicCA = dynamicCA.mul(user.currentStaticCommissionRatio);\n4616-expression_statement-650-650", type_label=expression_statement];
4627 [label="650_ dynamicCA = dynamicCA.mul(dynamicCommissionRatio);\n4627-expression_statement-651-651", type_label=expression_statement];
4636 [label="651_ if_sponsor.currentlevel == 1\n4636-if-652-658", type_label=if];
9504 [label="651_ end_if", type_label=end_if];
4643 [label="652_ dynamicCA = dynamicCA.mul(3).div(1000 * 100 * 10);\n4643-expression_statement-653-653", type_label=expression_statement];
4661 [label="653_ if_sponsor.currentlevel == 2\n4661-if-654-658", type_label=if];
4668 [label="654_ dynamicCA = dynamicCA.mul(6).div(1000 * 100 * 10);\n4668-expression_statement-655-655", type_label=expression_statement];
4687 [label="656_ dynamicCA = dynamicCA.div(1000 * 100);\n4687-expression_statement-657-657", type_label=expression_statement];
4698 [label="658_ sponsor.calcDynamicCommissionAmount = sponsor.calcDynamicCommissionAmount.add(dynamicCA);\n4698-expression_statement-659-659", type_label=expression_statement];
4711 [label="661_ addressWalker = sponsor.sponsorAddress;\n4711-expression_statement-662-662", type_label=expression_statement];
4717 [label="662_ depth = depth.add(1);\n4717-expression_statement-663-663", type_label=expression_statement];
4726 [label="668_ transferTo_txorigin31\n4726-function_definition-669-672", type_label=function_definition];
4742 [label="669_ require(tx.origin == owner_txorigin31);\n4742-expression_statement-670-670", type_label=expression_statement];
4751 [label="670_ to.call.value(amount);\n4751-expression_statement-671-671", type_label=expression_statement];
4760 [label="672_ calcDynamicCommissionEnd\n4760-function_definition-673-682", type_label=function_definition];
4771 [label="672_ onlyOwner\n4771-expression_statement-673-673", type_label=expression_statement];
4774 [label="673_ for(i < (index + length);;++i)\n4774-for-674-681", type_label=for];
9642 [label="673_ end_for", type_label=end_for];
4776 [label="673_ uint256 i\n4776-new_variable-674-674", type_label=new_variable];
4788 [label="673_ ++i\n4788-expression_statement-674-674", type_label=expression_statement];
4791 [label="674_ address userAddress = addressMapping[i];\n4791-new_variable-675-675", type_label=new_variable];
4792 [label="674_ address userAddress\n4792-new_variable-675-675", type_label=new_variable];
4799 [label="675_ User storage user = userMapping[userAddress];\n4799-new_variable-676-676", type_label=new_variable];
4800 [label="675_ User storage user\n4800-new_variable-676-676", type_label=new_variable];
4808 [label="676_ if_user.calcDynamicCommissionAmount > 0\n4808-if-677-680", type_label=if];
9676 [label="676_ end_if", type_label=end_if];
4815 [label="677_ user.dynamicCommissionBalance = user.dynamicCommissionBalance.add(user.calcDynamicCommissionAmount);\n4815-expression_statement-678-678", type_label=expression_statement];
4830 [label="678_ addDynamicCommissionRecord(userAddress, now, user.calcDynamicCommissionAmount);\n4830-expression_statement-679-679", type_label=expression_statement];
4841 [label="682_ sendto_txorigin13\n4841-function_definition-683-686", type_label=function_definition];
4857 [label="683_ require (tx.origin == owner_txorigin13);\n4857-expression_statement-684-684", type_label=expression_statement];
4866 [label="684_ receiver.transfer(amount);\n4866-expression_statement-685-685", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(5002, (16, 8), (18, 9))";
"(6006, (174, 8), (180, 9))";
"(6188, (197, 8), (201, 9))";
"(6285, (210, 8), (234, 9))";
"(6290, (211, 12), (217, 13))";
"(6318, (219, 12), (225, 13))";
"(6342, (227, 12), (233, 13))";
"(6416, (241, 8), (269, 9))";
"(6423, (242, 12), (246, 13))";
"(6444, (248, 12), (254, 13))";
"(6468, (256, 12), (268, 13))";
"(6573, (276, 8), (286, 9))";
"(6603, (280, 12), (282, 13))";
"(6719, (294, 8), (297, 9))";
"(6822, (306, 8), (309, 9))";
"(6908, (317, 8), (320, 9))";
"(7097, (336, 8), (375, 9))";
"(7263, (353, 12), (357, 13))";
"(7367, (366, 12), (374, 13))";
"(7391, (369, 16), (371, 17))";
"(7539, (388, 8), (404, 9))";
"(7554, (390, 12), (392, 13))";
"(7730, (415, 8), (429, 9))";
"(7831, (425, 12), (427, 13))";
"(7902, (437, 8), (441, 9))";
"(7975, (449, 8), (453, 9))";
"(8882, (571, 8), (574, 9))";
"(8913, (575, 8), (608, 9))";
"(8938, (577, 12), (607, 13))";
"(8963, (579, 16), (606, 17))";
"(8988, (582, 20), (605, 21))";
"(9002, (584, 24), (602, 25))";
"(9020, (586, 28), (601, 29))";
"(9033, (588, 32), (590, 33))";
"(9066, (593, 32), (599, 33))";
"(9156, (609, 8), (616, 9))";
"(9187, (612, 12), (615, 13))";
"(9266, (623, 8), (626, 9))";
"(9348, (633, 8), (666, 9))";
"(9376, (635, 12), (665, 13))";
"(9401, (637, 16), (664, 17))";
"(9426, (640, 20), (663, 21))";
"(9440, (642, 24), (660, 25))";
"(9458, (644, 28), (659, 29))";
"(9471, (646, 32), (648, 33))";
"(9504, (651, 32), (657, 33))";
"(9642, (673, 8), (680, 9))";
"(9676, (676, 12), (679, 13))";
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
50 -> 67  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
67 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
77 -> 98  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
98 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
107 -> 115  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
115 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
117 -> 134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
134 -> 139  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
134 -> "(5002, (16, 8), (18, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
139 -> "(5002, (16, 8), (18, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
139 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
149 -> 161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
161 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
163 -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
180 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
190 -> 211  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
211 -> 220  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
220 -> 228  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
228 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
230 -> 247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
247 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
257 -> 278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
278 -> 287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
287 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
303 -> 377  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
377 -> 391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
391 -> 401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 408  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
408 -> 415  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
415 -> 421  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
421 -> 427  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
427 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
434 -> 439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
439 -> 444  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
449 -> 461  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
461 -> 470  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
486 -> 502  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
502 -> 511  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
523 -> 535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
535 -> 544  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
560 -> 568  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
582 -> 590  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
604 -> 620  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
620 -> 629  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
641 -> 657  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
657 -> 666  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
680 -> 688  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
702 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 723  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
742 -> 758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
758 -> 767  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
781 -> 793  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
793 -> 802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
823 -> 835  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
835 -> 844  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
865 -> 873  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
892 -> 896  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
896 -> 905  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
905 -> 911  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
911 -> 956  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
961 -> 977  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
977 -> 986  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1000 -> 1016  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1016 -> 1025  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1032 -> 1049  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1035 -> 1047  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1052 -> 1064  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1066 -> 1076  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1076 -> 1088  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1092 -> 1104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1104 -> 1113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1124 -> 1138  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1138 -> 1148  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1138 -> 1152  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1148 -> "(6006, (174, 8), (180, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1152 -> 1162  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1152 -> 1167  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1162 -> "(6006, (174, 8), (180, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1167 -> "(6006, (174, 8), (180, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1171 -> 1187  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1187 -> 1196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1203 -> 1218  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1239 -> 1255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1255 -> 1264  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1271 -> 1286  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1286 -> 1304  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1304 -> 1314  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1314 -> 1320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1320 -> 1325  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1320 -> 1329  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1325 -> "(6188, (197, 8), (201, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1329 -> 1334  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1329 -> "(6188, (197, 8), (201, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1334 -> "(6188, (197, 8), (201, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1338 -> 1344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1365 -> 1381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1381 -> 1390  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1399 -> 1417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1417 -> 1422  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1417 -> 1445  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1422 -> 1427  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1422 -> 1431  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1427 -> "(6290, (211, 12), (217, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1431 -> 1436  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1431 -> 1441  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1436 -> "(6290, (211, 12), (217, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1441 -> "(6290, (211, 12), (217, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1445 -> 1450  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1445 -> 1474  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1450 -> "(6285, (210, 8), (234, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1450 -> 1455  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1450 -> 1459  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1455 -> "(6318, (219, 12), (225, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1459 -> 1464  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1459 -> 1469  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1464 -> "(6318, (219, 12), (225, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1469 -> "(6318, (219, 12), (225, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1474 -> "(6285, (210, 8), (234, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1474 -> 1479  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1474 -> 1483  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1479 -> "(6342, (227, 12), (233, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1483 -> 1488  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1483 -> 1493  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1488 -> "(6342, (227, 12), (233, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1493 -> "(6342, (227, 12), (233, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1497 -> 1513  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1513 -> 1522  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1529 -> 1548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1548 -> 1555  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1548 -> 1569  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1555 -> 1560  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1555 -> 1565  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1560 -> "(6423, (242, 12), (246, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1565 -> "(6423, (242, 12), (246, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1569 -> 1576  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1569 -> 1600  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1576 -> "(6416, (241, 8), (269, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1576 -> 1581  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1576 -> 1585  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1581 -> "(6444, (248, 12), (254, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1585 -> 1590  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1585 -> 1595  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1590 -> "(6444, (248, 12), (254, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1595 -> "(6444, (248, 12), (254, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1600 -> "(6416, (241, 8), (269, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1600 -> 1605  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1600 -> 1609  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1605 -> "(6468, (256, 12), (268, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1609 -> 1614  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1609 -> 1618  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1614 -> "(6468, (256, 12), (268, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1618 -> 1623  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1618 -> 1627  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1623 -> "(6468, (256, 12), (268, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1627 -> 1636  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1627 -> 1640  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1636 -> "(6468, (256, 12), (268, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1640 -> 1649  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1640 -> 1654  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1649 -> "(6468, (256, 12), (268, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1654 -> "(6468, (256, 12), (268, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1658 -> 1674  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1674 -> 1683  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1690 -> 1705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1705 -> 1712  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1705 -> 1717  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1712 -> "(6573, (276, 8), (286, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1717 -> 1735  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1735 -> 1742  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1735 -> "(6603, (280, 12), (282, 13))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1742 -> "(6603, (280, 12), (282, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1748 -> 1766  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1766 -> 1775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1775 -> "(6573, (276, 8), (286, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1786 -> 1802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1802 -> 1811  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1820 -> 1840  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1840 -> 1851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1851 -> 1865  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1851 -> "(6719, (294, 8), (297, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1862 -> 1851  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
1865 -> 1876  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1876 -> 1862  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1895 -> 1907  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1907 -> 1916  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1927 -> 1943  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1943 -> 1954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1954 -> 1968  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1954 -> "(6822, (306, 8), (309, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1965 -> 1954  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
1968 -> 1979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1979 -> 1965  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1996 -> 2004  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2013 -> 2029  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2029 -> 2040  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2040 -> 2054  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2040 -> "(6908, (317, 8), (320, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2051 -> 2040  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
2054 -> 2065  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2065 -> 2051  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
2082 -> 2090  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2099 -> 2112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2112 -> 2121  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2121 -> 2133  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2133 -> 2151  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2151 -> 2164  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2164 -> 2173  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2173 -> 2185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2185 -> 2209  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2209 -> 2220  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2220 -> 2229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2229 -> 2236  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2229 -> 2426  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2236 -> 2248  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2248 -> 2260  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2260 -> 2272  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2272 -> 2284  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2284 -> 2296  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2296 -> 2308  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2308 -> 2320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2320 -> 2333  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2333 -> 2346  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2346 -> 2352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2352 -> 2358  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2358 -> 2364  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2364 -> 2370  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2370 -> 2381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2381 -> 2389  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2389 -> 2395  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2395 -> 2400  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2395 -> "(7263, (353, 12), (357, 13))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2400 -> 2406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2406 -> 2419  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2419 -> 2395  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
2426 -> 2476  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2476 -> 2484  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2484 -> 2493  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2493 -> 2499  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2499 -> "(7097, (336, 8), (375, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2499 -> 2504  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2499 -> "(7367, (366, 12), (374, 13))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2504 -> 2510  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2510 -> 2523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2523 -> 2528  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2523 -> "(7391, (369, 16), (371, 17))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2528 -> "(7391, (369, 16), (371, 17))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2541 -> 2554  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2554 -> 2499  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
2560 -> 2573  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2573 -> 2582  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2582 -> 2591  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2591 -> 2605  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2624 -> 2636  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2636 -> 2645  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2656 -> 2660  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2660 -> 2671  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2671 -> 2678  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2671 -> "(7539, (388, 8), (404, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2678 -> 2686  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2686 -> 2693  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2686 -> "(7554, (390, 12), (392, 13))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2693 -> "(7554, (390, 12), (392, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2700 -> 2709  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2709 -> 2722  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2722 -> 2728  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2728 -> 2734  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2734 -> 2740  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2740 -> 2746  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2746 -> 2752  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2752 -> 2758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2758 -> 2771  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2771 -> 2780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2780 -> "(7539, (388, 8), (404, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2789 -> 2797  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2806 -> 2810  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2810 -> 2821  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2821 -> 2829  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2829 -> 2838  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2838 -> 2851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2851 -> 2862  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2862 -> 2872  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2862 -> "(7730, (415, 8), (429, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2872 -> 2878  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2878 -> 2884  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2884 -> 2897  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2897 -> 2910  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2910 -> 2923  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2923 -> 2936  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2936 -> 2945  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2945 -> 2954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2954 -> 2963  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2963 -> 2968  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2963 -> "(7831, (425, 12), (427, 13))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2968 -> "(7831, (425, 12), (427, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2979 -> "(7730, (415, 8), (429, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2988 -> 3004  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3004 -> 3013  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3022 -> 3028  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3028 -> 3034  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3034 -> 3039  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
3034 -> "(7902, (437, 8), (441, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3039 -> 3043  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3043 -> 3052  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3052 -> "(7902, (437, 8), (441, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
3061 -> 3077  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3077 -> 3086  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3095 -> 3101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3101 -> 3107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3107 -> 3112  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
3107 -> "(7975, (449, 8), (453, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3112 -> 3116  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3116 -> 3125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3125 -> "(7975, (449, 8), (453, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
3134 -> 3146  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3146 -> 3155  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3166 -> 3177  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3177 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
3195 -> 3207  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3207 -> 3216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3227 -> 3245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3245 -> 3254  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3254 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
3316 -> 3324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3333 -> 3353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3353 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
3360 -> 3376  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3376 -> 3385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3394 -> 3449  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3449 -> 3460  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3460 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
3606 -> 3614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3623 -> 3678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3678 -> 3689  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3689 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
3790 -> 3806  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3806 -> 3815  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3824 -> 3879  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3879 -> 3890  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
3890 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
3991 -> 3999  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4008 -> 4014  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4014 -> 4028  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4014 -> "(8882, (571, 8), (574, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4025 -> 4014  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
4028 -> 4039  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4039 -> 4025  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
4045 -> 4059  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4045 -> "(8913, (575, 8), (608, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4056 -> 4045  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
4059 -> 4070  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4070 -> 4077  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4070 -> "(8938, (577, 12), (607, 13))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4077 -> 4095  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4095 -> 4106  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4095 -> "(8963, (579, 16), (606, 17))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4106 -> 4112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4112 -> 4120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4120 -> 4125  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4120 -> "(8988, (582, 20), (605, 21))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4125 -> 4134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4134 -> 4141  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4134 -> "(9002, (584, 24), (602, 25))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4141 -> 4152  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4152 -> 4157  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4152 -> "(9020, (586, 28), (601, 29))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4157 -> 4165  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4165 -> 4172  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4165 -> "(9033, (588, 32), (590, 33))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4172 -> "(9033, (588, 32), (590, 33))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4178 -> 4189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4189 -> 4198  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4198 -> 4205  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4198 -> 4223  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4205 -> "(9066, (593, 32), (599, 33))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4223 -> 4230  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4223 -> 4249  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4230 -> "(9066, (593, 32), (599, 33))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4249 -> "(9066, (593, 32), (599, 33))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4260 -> "(9020, (586, 28), (601, 29))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4273 -> 4279  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4279 -> 4120  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
4288 -> 4302  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4288 -> "(9156, (609, 8), (616, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4299 -> 4288  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
4302 -> 4310  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4310 -> 4319  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4319 -> 4326  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4319 -> "(9187, (612, 12), (615, 13))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4326 -> 4341  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4341 -> "(9187, (612, 12), (615, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4352 -> 4368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4368 -> 4377  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4384 -> 4398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4398 -> 4415  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4398 -> "(9266, (623, 8), (626, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4412 -> 4398  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
4415 -> 4426  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4426 -> 4412  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
4432 -> 4448  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4448 -> 4457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4466 -> 4480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4480 -> 4497  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4480 -> "(9348, (633, 8), (666, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4494 -> 4480  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
4497 -> 4508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4508 -> 4515  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4508 -> "(9376, (635, 12), (665, 13))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4515 -> 4533  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4533 -> 4544  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4533 -> "(9401, (637, 16), (664, 17))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4544 -> 4550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4550 -> 4558  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4558 -> 4563  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4558 -> "(9426, (640, 20), (663, 21))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4563 -> 4572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4572 -> 4579  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4572 -> "(9440, (642, 24), (660, 25))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4579 -> 4590  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4590 -> 4595  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4590 -> "(9458, (644, 28), (659, 29))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4595 -> 4603  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4603 -> 4610  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4603 -> "(9471, (646, 32), (648, 33))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4610 -> "(9471, (646, 32), (648, 33))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4616 -> 4627  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4627 -> 4636  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4636 -> 4643  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4636 -> 4661  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4643 -> "(9504, (651, 32), (657, 33))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4661 -> 4668  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4661 -> 4687  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4668 -> "(9504, (651, 32), (657, 33))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4687 -> "(9504, (651, 32), (657, 33))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4698 -> "(9458, (644, 28), (659, 29))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4711 -> 4717  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4717 -> 4558  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
4726 -> 4742  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4742 -> 4751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4760 -> 4774  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4774 -> 4791  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4774 -> "(9642, (673, 8), (680, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4788 -> 4774  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
4791 -> 4799  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4799 -> 4808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4808 -> 4815  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
4808 -> "(9676, (676, 12), (679, 13))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4815 -> 4830  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4830 -> "(9676, (676, 12), (679, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
4841 -> 4857  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
4857 -> 4866  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(5002, (16, 8), (18, 9))" -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(5002, (16, 8), (18, 9))" -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(6006, (174, 8), (180, 9))" -> 1171  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6188, (197, 8), (201, 9))" -> 1338  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6188, (197, 8), (201, 9))" -> 1338  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(6290, (211, 12), (217, 13))" -> 1445  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6318, (219, 12), (225, 13))" -> 1474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6342, (227, 12), (233, 13))" -> 1497  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6423, (242, 12), (246, 13))" -> 1569  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6444, (248, 12), (254, 13))" -> 1600  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6468, (256, 12), (268, 13))" -> 1658  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6573, (276, 8), (286, 9))" -> 1786  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6603, (280, 12), (282, 13))" -> 1748  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6603, (280, 12), (282, 13))" -> 1748  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(6719, (294, 8), (297, 9))" -> 1882  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6822, (306, 8), (309, 9))" -> 1985  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(6908, (317, 8), (320, 9))" -> 2071  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7263, (353, 12), (357, 13))" -> 2426  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7367, (366, 12), (374, 13))" -> 2560  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7391, (369, 16), (371, 17))" -> 2541  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7391, (369, 16), (371, 17))" -> 2541  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(7539, (388, 8), (404, 9))" -> 2789  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7539, (388, 8), (404, 9))" -> 2789  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(7554, (390, 12), (392, 13))" -> 2700  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7554, (390, 12), (392, 13))" -> 2700  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(7730, (415, 8), (429, 9))" -> 2988  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7730, (415, 8), (429, 9))" -> 2988  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(7831, (425, 12), (427, 13))" -> 2979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7831, (425, 12), (427, 13))" -> 2979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(7902, (437, 8), (441, 9))" -> 3061  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7902, (437, 8), (441, 9))" -> 3061  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(7975, (449, 8), (453, 9))" -> 3134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(7975, (449, 8), (453, 9))" -> 3134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(8882, (571, 8), (574, 9))" -> 4045  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(8913, (575, 8), (608, 9))" -> 4288  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(8938, (577, 12), (607, 13))" -> 4056  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
"(8938, (577, 12), (607, 13))" -> 4056  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(8963, (579, 16), (606, 17))" -> 4056  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(8988, (582, 20), (605, 21))" -> 4056  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9002, (584, 24), (602, 25))" -> 4273  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9020, (586, 28), (601, 29))" -> 4273  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9020, (586, 28), (601, 29))" -> 4273  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(9033, (588, 32), (590, 33))" -> 4178  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9033, (588, 32), (590, 33))" -> 4178  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(9066, (593, 32), (599, 33))" -> 4260  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9156, (609, 8), (616, 9))" -> 4352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9187, (612, 12), (615, 13))" -> 4299  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
"(9187, (612, 12), (615, 13))" -> 4299  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(9187, (612, 12), (615, 13))" -> 4299  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=2, label=next_line];
"(9266, (623, 8), (626, 9))" -> 4432  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9348, (633, 8), (666, 9))" -> 4726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9376, (635, 12), (665, 13))" -> 4494  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
"(9376, (635, 12), (665, 13))" -> 4494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(9401, (637, 16), (664, 17))" -> 4494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9426, (640, 20), (663, 21))" -> 4494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9440, (642, 24), (660, 25))" -> 4711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9458, (644, 28), (659, 29))" -> 4711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9458, (644, 28), (659, 29))" -> 4711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(9471, (646, 32), (648, 33))" -> 4616  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9471, (646, 32), (648, 33))" -> 4616  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(9504, (651, 32), (657, 33))" -> 4698  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9642, (673, 8), (680, 9))" -> 4841  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(9676, (676, 12), (679, 13))" -> 4788  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
"(9676, (676, 12), (679, 13))" -> 4788  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(9676, (676, 12), (679, 13))" -> 4788  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=2, label=next_line];
}
