digraph  {
9 [label="1_ totalSupply\n9-function_definition-2-2", type_label=function_definition];
17 [label="2_ balanceOf\n17-function_definition-3-3", type_label=function_definition];
29 [label="3_ allowance\n29-function_definition-4-5", type_label=function_definition];
45 [label="5_ transfer\n45-function_definition-6-6", type_label=function_definition];
60 [label="6_ approve\n60-function_definition-7-8", type_label=function_definition];
75 [label="8_ transferFrom\n75-function_definition-9-10", type_label=function_definition];
125 [label="22_ mul\n125-function_definition-23-30", type_label=function_definition];
142 [label="23_ if_a == 0\n142-if-24-26", type_label=if];
147 [label="24_ return 0;\n147-return-25-25", type_label=return];
149 [label="26_ uint256 c = a * b;\n149-new_variable-27-27", type_label=new_variable];
150 [label="26_ uint256 c\n150-new_variable-27-27", type_label=new_variable];
157 [label="27_ require(c / a == b);\n157-expression_statement-28-28", type_label=expression_statement];
166 [label="28_ return c;\n166-return-29-29", type_label=return];
168 [label="30_ div\n168-function_definition-31-35", type_label=function_definition];
185 [label="31_ require(b > 0);\n185-expression_statement-32-32", type_label=expression_statement];
192 [label="32_ uint256 c = a / b;\n192-new_variable-33-33", type_label=new_variable];
193 [label="32_ uint256 c\n193-new_variable-33-33", type_label=new_variable];
200 [label="33_ return c;\n200-return-34-34", type_label=return];
202 [label="35_ sub\n202-function_definition-36-40", type_label=function_definition];
219 [label="36_ require(b <= a);\n219-expression_statement-37-37", type_label=expression_statement];
226 [label="37_ uint256 c = a - b;\n226-new_variable-38-38", type_label=new_variable];
227 [label="37_ uint256 c\n227-new_variable-38-38", type_label=new_variable];
234 [label="38_ return c;\n234-return-39-39", type_label=return];
236 [label="40_ add\n236-function_definition-41-45", type_label=function_definition];
253 [label="41_ uint256 c = a + b;\n253-new_variable-42-42", type_label=new_variable];
254 [label="41_ uint256 c\n254-new_variable-42-42", type_label=new_variable];
261 [label="42_ require(c >= a);\n261-expression_statement-43-43", type_label=expression_statement];
268 [label="43_ return c;\n268-return-44-44", type_label=return];
270 [label="45_ mod\n270-function_definition-46-49", type_label=function_definition];
287 [label="46_ require(b != 0);\n287-expression_statement-47-47", type_label=expression_statement];
294 [label="47_ return a % b;\n294-return-48-48", type_label=return];
309 [label="52_ mapping (address => uint256) private _balances;\n309-new_variable-53-53", type_label=new_variable];
316 [label="53_ mapping (address => mapping (address => uint256)) private _allowed;\n316-new_variable-54-54", type_label=new_variable];
325 [label="54_ uint256 private _totalSupply;\n325-new_variable-55-55", type_label=new_variable];
330 [label="55_ totalSupply\n330-function_definition-56-58", type_label=function_definition];
339 [label="56_ return _totalSupply;\n339-return-57-57", type_label=return];
341 [label="58_ balanceOf\n341-function_definition-59-61", type_label=function_definition];
354 [label="59_ return _balances[owner];\n354-return-60-60", type_label=return];
358 [label="61_ allowance\n358-function_definition-62-71", type_label=function_definition];
375 [label="69_ return _allowed[owner][spender];\n375-return-70-70", type_label=return];
381 [label="71_ transfer\n381-function_definition-72-79", type_label=function_definition];
397 [label="72_ require(value <= _balances[msg.sender]);\n397-expression_statement-73-73", type_label=expression_statement];
408 [label="73_ require(to != address(0));\n408-expression_statement-74-74", type_label=expression_statement];
417 [label="74_ _balances[msg.sender] = _balances[msg.sender].sub(value);\n417-expression_statement-75-75", type_label=expression_statement];
434 [label="75_ _balances[to] = _balances[to].add(value);\n434-expression_statement-76-76", type_label=expression_statement];
457 [label="77_ return true;\n457-return-78-78", type_label=return];
460 [label="79_ approve\n460-function_definition-80-85", type_label=function_definition];
476 [label="80_ require(spender != address(0));\n476-expression_statement-81-81", type_label=expression_statement];
485 [label="81_ _allowed[msg.sender][spender] = value;\n485-expression_statement-82-82", type_label=expression_statement];
505 [label="83_ return true;\n505-return-84-84", type_label=return];
508 [label="85_ transferFrom\n508-function_definition-86-102", type_label=function_definition];
528 [label="93_ require(value <= _balances[from]);\n528-expression_statement-94-94", type_label=expression_statement];
537 [label="94_ require(value <= _allowed[from][msg.sender]);\n537-expression_statement-95-95", type_label=expression_statement];
550 [label="95_ require(to != address(0));\n550-expression_statement-96-96", type_label=expression_statement];
559 [label="96_ _balances[from] = _balances[from].sub(value);\n559-expression_statement-97-97", type_label=expression_statement];
572 [label="97_ _balances[to] = _balances[to].add(value);\n572-expression_statement-98-98", type_label=expression_statement];
585 [label="98_ _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n585-expression_statement-99-99", type_label=expression_statement];
614 [label="100_ return true;\n614-return-101-101", type_label=return];
617 [label="102_ increaseAllowance\n617-function_definition-103-115", type_label=function_definition];
633 [label="109_ require(spender != address(0));\n633-expression_statement-110-110", type_label=expression_statement];
642 [label="110_ _allowed[msg.sender][spender] = (\n      _allowed[msg.sender][spender].add(addedValue));\n642-expression_statement-111-112", type_label=expression_statement];
680 [label="113_ return true;\n680-return-114-114", type_label=return];
683 [label="115_ decreaseAllowance\n683-function_definition-116-128", type_label=function_definition];
699 [label="122_ require(spender != address(0));\n699-expression_statement-123-123", type_label=expression_statement];
708 [label="123_ _allowed[msg.sender][spender] = (\n      _allowed[msg.sender][spender].sub(subtractedValue));\n708-expression_statement-124-125", type_label=expression_statement];
746 [label="126_ return true;\n746-return-127-127", type_label=return];
749 [label="128_ _mint\n749-function_definition-129-134", type_label=function_definition];
761 [label="129_ require(account != 0);\n761-expression_statement-130-130", type_label=expression_statement];
768 [label="130_ _totalSupply = _totalSupply.add(amount);\n768-expression_statement-131-131", type_label=expression_statement];
777 [label="131_ _balances[account] = _balances[account].add(amount);\n777-expression_statement-132-132", type_label=expression_statement];
806 [label="136_ string public constant name = \"Remitano Token\";\n806-new_variable-137-137", type_label=new_variable];
813 [label="137_ string public constant symbol = \"RET\";\n813-new_variable-138-138", type_label=new_variable];
820 [label="138_ uint8 public constant decimals = 18;\n820-new_variable-139-139", type_label=new_variable];
826 [label="139_ uint256 public constant INITIAL_SUPPLY = 1000000 * (10 ** uint256(decimals));\n826-new_variable-140-140", type_label=new_variable];
841 [label="141_ _mint(msg.sender, INITIAL_SUPPLY);\n841-expression_statement-142-142", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
125 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
142 -> 147  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
142 -> 149  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
147 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
149 -> 157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
157 -> 166  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
166 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
168 -> 185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
185 -> 192  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
192 -> 200  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
200 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
202 -> 219  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
219 -> 226  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
226 -> 234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
234 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
236 -> 253  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
253 -> 261  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
261 -> 268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
268 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
270 -> 287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
287 -> 294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
294 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
309 -> 316  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
316 -> 325  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
330 -> 339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
339 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
341 -> 354  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
354 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
358 -> 375  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
375 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
381 -> 397  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
397 -> 408  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
408 -> 417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
417 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
457 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
460 -> 476  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
476 -> 485  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
505 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
508 -> 528  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
528 -> 537  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
537 -> 550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
550 -> 559  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
559 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
572 -> 585  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
614 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
617 -> 633  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
633 -> 642  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
680 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
683 -> 699  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
699 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
746 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
749 -> 761  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
761 -> 768  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
768 -> 777  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
806 -> 813  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
813 -> 820  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
820 -> 826  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
