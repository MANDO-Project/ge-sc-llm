digraph  {
13 [label="2_ add\n13-function_definition-3-6", type_label=function_definition];
31 [label="3_ c = a + b;\n31-expression_statement-4-4", type_label=expression_statement];
37 [label="4_ require(c >= a);\n37-expression_statement-5-5", type_label=expression_statement];
44 [label="6_ sub\n44-function_definition-7-10", type_label=function_definition];
62 [label="7_ require(b <= a);\n62-expression_statement-8-8", type_label=expression_statement];
69 [label="8_ c = a - b;\n69-expression_statement-9-9", type_label=expression_statement];
75 [label="10_ mul\n75-function_definition-11-14", type_label=function_definition];
93 [label="11_ c = a * b;\n93-expression_statement-12-12", type_label=expression_statement];
99 [label="12_ require(a == 0 || c / a == b);\n99-expression_statement-13-13", type_label=expression_statement];
112 [label="14_ div\n112-function_definition-15-18", type_label=function_definition];
130 [label="15_ require(b > 0);\n130-expression_statement-16-16", type_label=expression_statement];
137 [label="16_ c = a / b;\n137-expression_statement-17-17", type_label=expression_statement];
146 [label="20_ totalSupply\n146-function_definition-21-21", type_label=function_definition];
154 [label="21_ balanceOf\n154-function_definition-22-22", type_label=function_definition];
167 [label="22_ allowance\n167-function_definition-23-23", type_label=function_definition];
184 [label="23_ transfer\n184-function_definition-24-24", type_label=function_definition];
200 [label="24_ approve\n200-function_definition-25-25", type_label=function_definition];
216 [label="25_ transferFrom\n216-function_definition-26-26", type_label=function_definition];
267 [label="30_ receiveApproval\n267-function_definition-31-31", type_label=function_definition];
289 [label="33_ address public owner;\n289-new_variable-34-34", type_label=new_variable];
294 [label="34_ address public newOwner;\n294-new_variable-35-35", type_label=new_variable];
311 [label="37_ owner = msg.sender;\n311-expression_statement-38-38", type_label=expression_statement];
317 [label="39_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n317-expression_statement-40-43", type_label=expression_statement];
320 [label="40_ require(msg.sender == owner);\n320-expression_statement-41-41", type_label=expression_statement];
329 [label="41_ _;\n329-expression_statement-42-42", type_label=expression_statement];
331 [label="43_ transferOwnership\n331-function_definition-44-46", type_label=function_definition];
338 [label="43_ onlyOwner\n338-expression_statement-44-44", type_label=expression_statement];
341 [label="44_ newOwner = _newOwner;\n341-expression_statement-45-45", type_label=expression_statement];
345 [label="46_ acceptOwnership\n345-function_definition-47-52", type_label=function_definition];
349 [label="47_ require(msg.sender == newOwner);\n349-expression_statement-48-48", type_label=expression_statement];
364 [label="49_ owner = newOwner;\n364-expression_statement-50-50", type_label=expression_statement];
368 [label="50_ newOwner = address(0);\n368-expression_statement-51-51", type_label=expression_statement];
388 [label="55_ string public symbol;\n388-new_variable-56-56", type_label=new_variable];
393 [label="56_ string public  name;\n393-new_variable-57-57", type_label=new_variable];
398 [label="57_ uint8 public decimals;\n398-new_variable-58-58", type_label=new_variable];
403 [label="58_ uint _totalSupply;\n403-new_variable-59-59", type_label=new_variable];
407 [label="59_ mapping(address => uint) balances;\n407-new_variable-60-60", type_label=new_variable];
413 [label="60_ mapping(address => mapping(address => uint)) allowed;\n413-new_variable-61-61", type_label=new_variable];
423 [label="62_ symbol = \"FRCN\";\n423-expression_statement-63-63", type_label=expression_statement];
428 [label="63_ name = \"FreeCoin\";\n428-expression_statement-64-64", type_label=expression_statement];
433 [label="64_ decimals = 18;\n433-expression_statement-65-65", type_label=expression_statement];
437 [label="65_ _totalSupply = 300000000 * 10**uint(decimals);\n437-expression_statement-66-66", type_label=expression_statement];
447 [label="66_ balances[0xA56c93A69e570Ba51B7b14360a61Fa3Eb23c84d8] = 300000000 * 10**uint(decimals);\n447-expression_statement-67-67", type_label=expression_statement];
475 [label="69_ totalSupply\n475-function_definition-70-72", type_label=function_definition];
484 [label="70_ return _totalSupply.sub(balances[address(0)]);\n484-return-71-71", type_label=return];
495 [label="72_ balanceOf\n495-function_definition-73-75", type_label=function_definition];
509 [label="73_ return balances[tokenOwner];\n509-return-74-74", type_label=return];
513 [label="75_ transfer\n513-function_definition-76-81", type_label=function_definition];
530 [label="76_ balances[msg.sender] = balances[msg.sender].sub(tokens);\n530-expression_statement-77-77", type_label=expression_statement];
547 [label="77_ balances[to] = balances[to].add(tokens);\n547-expression_statement-78-78", type_label=expression_statement];
570 [label="79_ return true;\n570-return-80-80", type_label=return];
573 [label="81_ approve\n573-function_definition-82-86", type_label=function_definition];
590 [label="82_ allowed[msg.sender][spender] = tokens;\n590-expression_statement-83-83", type_label=expression_statement];
610 [label="84_ return true;\n610-return-85-85", type_label=return];
613 [label="86_ transferFrom\n613-function_definition-87-93", type_label=function_definition];
634 [label="87_ balances[from] = balances[from].sub(tokens);\n634-expression_statement-88-88", type_label=expression_statement];
647 [label="88_ allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n647-expression_statement-89-89", type_label=expression_statement];
668 [label="89_ balances[to] = balances[to].add(tokens);\n668-expression_statement-90-90", type_label=expression_statement];
689 [label="91_ return true;\n689-return-92-92", type_label=return];
692 [label="93_ allowance\n692-function_definition-94-96", type_label=function_definition];
710 [label="94_ return allowed[tokenOwner][spender];\n710-return-95-95", type_label=return];
716 [label="96_ approveAndCall\n716-function_definition-97-102", type_label=function_definition];
737 [label="97_ allowed[msg.sender][spender] = tokens;\n737-expression_statement-98-98", type_label=expression_statement];
757 [label="99_ ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n757-expression_statement-100-100", type_label=expression_statement];
777 [label="100_ return true;\n777-return-101-101", type_label=return];
786 [label="105_ transferAnyERC20Token\n786-function_definition-106-108", type_label=function_definition];
797 [label="105_ onlyOwner\n797-expression_statement-106-106", type_label=expression_statement];
805 [label="106_ return ERC20Interface(tokenAddress).transfer(owner, tokens);\n805-return-107-107", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
289 -> 294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
320 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
331 -> 341  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
345 -> 349  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
388 -> 393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
393 -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
398 -> 403  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
403 -> 407  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
407 -> 413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
423 -> 428  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
428 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
433 -> 437  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
437 -> 447  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
475 -> 484  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
484 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
495 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
509 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
513 -> 530  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
530 -> 547  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
570 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
573 -> 590  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
610 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
613 -> 634  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
634 -> 647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
647 -> 668  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
689 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
692 -> 710  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
710 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
716 -> 737  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
757 -> 777  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
777 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
786 -> 805  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
805 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
