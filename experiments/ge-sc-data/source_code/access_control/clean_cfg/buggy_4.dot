digraph  {
15 [label="2_ totalSupply\n15-function_definition-3-3", type_label=function_definition];
23 [label="3_ balanceOf\n23-function_definition-4-4", type_label=function_definition];
35 [label="4_ transfer\n35-function_definition-5-5", type_label=function_definition];
70 [label="8_ withdrawAll_txorigin26\n70-function_definition-9-12", type_label=function_definition];
82 [label="9_ require(tx.origin == owner_txorigin26);\n82-expression_statement-10-10", type_label=expression_statement];
91 [label="10_ _recipient.transfer(address(this).balance);\n91-expression_statement-11-11", type_label=expression_statement];
102 [label="12_ string public name = \"PHO\";\n102-new_variable-13-13", type_label=new_variable];
109 [label="13_ bug_txorigin20\n109-function_definition-14-16", type_label=function_definition];
117 [label="14_ require(tx.origin == owner_txorigin20);\n117-expression_statement-15-15", type_label=expression_statement];
126 [label="16_ string public symbol = \"PHO\";\n126-new_variable-17-17", type_label=new_variable];
133 [label="17_ bug_txorigin32\n133-function_definition-18-20", type_label=function_definition];
141 [label="18_ require(tx.origin == owner_txorigin32);\n141-expression_statement-19-19", type_label=expression_statement];
150 [label="20_ uint8 public decimals = 18;\n150-new_variable-21-21", type_label=new_variable];
156 [label="21_ withdrawAll_txorigin38\n156-function_definition-22-25", type_label=function_definition];
168 [label="22_ require(tx.origin == owner_txorigin38);\n168-expression_statement-23-23", type_label=expression_statement];
177 [label="23_ _recipient.transfer(address(this).balance);\n177-expression_statement-24-24", type_label=expression_statement];
188 [label="25_ uint256 saleAmount;\n188-new_variable-26-26", type_label=new_variable];
192 [label="26_ bug_txorigin4\n192-function_definition-27-29", type_label=function_definition];
200 [label="27_ require(tx.origin == owner_txorigin4);\n200-expression_statement-28-28", type_label=expression_statement];
209 [label="29_ uint256 evtAmount;\n209-new_variable-30-30", type_label=new_variable];
213 [label="30_ transferTo_txorigin7\n213-function_definition-31-34", type_label=function_definition];
229 [label="31_ require(tx.origin == owner_txorigin7);\n229-expression_statement-32-32", type_label=expression_statement];
238 [label="32_ to.call.value(amount);\n238-expression_statement-33-33", type_label=expression_statement];
247 [label="34_ uint256 teamAmount;\n247-new_variable-35-35", type_label=new_variable];
251 [label="35_ transferTo_txorigin23\n251-function_definition-36-39", type_label=function_definition];
267 [label="36_ require(tx.origin == owner_txorigin23);\n267-expression_statement-37-37", type_label=expression_statement];
276 [label="37_ to.call.value(amount);\n276-expression_statement-38-38", type_label=expression_statement];
285 [label="39_ uint256 _totalSupply;\n285-new_variable-40-40", type_label=new_variable];
289 [label="40_ withdrawAll_txorigin14\n289-function_definition-41-44", type_label=function_definition];
301 [label="41_ require(tx.origin == owner_txorigin14);\n301-expression_statement-42-42", type_label=expression_statement];
310 [label="42_ _recipient.transfer(address(this).balance);\n310-expression_statement-43-43", type_label=expression_statement];
321 [label="44_ mapping(address => uint256) balances;\n321-new_variable-45-45", type_label=new_variable];
327 [label="45_ withdrawAll_txorigin30\n327-function_definition-46-49", type_label=function_definition];
339 [label="46_ require(tx.origin == owner_txorigin30);\n339-expression_statement-47-47", type_label=expression_statement];
348 [label="47_ _recipient.transfer(address(this).balance);\n348-expression_statement-48-48", type_label=expression_statement];
359 [label="49_ address public owner;\n359-new_variable-50-50", type_label=new_variable];
364 [label="50_ bug_txorigin8\n364-function_definition-51-53", type_label=function_definition];
372 [label="51_ require(tx.origin == owner_txorigin8);\n372-expression_statement-52-52", type_label=expression_statement];
381 [label="53_ address public sale;\n381-new_variable-54-54", type_label=new_variable];
386 [label="54_ transferTo_txorigin39\n386-function_definition-55-58", type_label=function_definition];
402 [label="55_ require(tx.origin == owner_txorigin39);\n402-expression_statement-56-56", type_label=expression_statement];
411 [label="56_ to.call.value(amount);\n411-expression_statement-57-57", type_label=expression_statement];
420 [label="58_ address public evt;\n420-new_variable-59-59", type_label=new_variable];
425 [label="59_ bug_txorigin36\n425-function_definition-60-62", type_label=function_definition];
433 [label="60_ require(tx.origin == owner_txorigin36);\n433-expression_statement-61-61", type_label=expression_statement];
442 [label="62_ address public team;\n442-new_variable-63-63", type_label=new_variable];
447 [label="63_ modifier isOwner {\n        require(owner == msg.sender);\n        _;\n    }\n447-expression_statement-64-67", type_label=expression_statement];
450 [label="64_ require(owner == msg.sender);\n450-expression_statement-65-65", type_label=expression_statement];
459 [label="65_ _;\n459-expression_statement-66-66", type_label=expression_statement];
463 [label="68_ owner   = msg.sender;\n463-expression_statement-69-69", type_label=expression_statement];
469 [label="69_ sale    = 0x071F73f4D0befd4406901AACE6D5FFD6D297c561;\n469-expression_statement-70-70", type_label=expression_statement];
473 [label="70_ evt     = 0x76535ca5BF1d33434A302e5A464Df433BB1F80F6;\n473-expression_statement-71-71", type_label=expression_statement];
477 [label="71_ team    = 0xD7EC5D8697e4c83Dc33D781d19dc2910fB165D5C;\n477-expression_statement-72-72", type_label=expression_statement];
481 [label="72_ saleAmount    = toWei(1000000000);\n481-expression_statement-73-73", type_label=expression_statement];
488 [label="73_ evtAmount     = toWei(200000000);\n488-expression_statement-74-74", type_label=expression_statement];
495 [label="74_ teamAmount    = toWei(800000000);\n495-expression_statement-75-75", type_label=expression_statement];
502 [label="75_ _totalSupply  = toWei(2000000000);\n502-expression_statement-76-76", type_label=expression_statement];
509 [label="76_ require(_totalSupply == saleAmount + evtAmount + teamAmount );\n509-expression_statement-77-77", type_label=expression_statement];
520 [label="77_ balances[owner] = _totalSupply;\n520-expression_statement-78-78", type_label=expression_statement];
538 [label="79_ transfer(sale, saleAmount);\n538-expression_statement-80-80", type_label=expression_statement];
545 [label="80_ transfer(evt, evtAmount);\n545-expression_statement-81-81", type_label=expression_statement];
552 [label="81_ transfer(team, teamAmount);\n552-expression_statement-82-82", type_label=expression_statement];
559 [label="82_ require(balances[owner] == 0);\n559-expression_statement-83-83", type_label=expression_statement];
568 [label="84_ transferTo_txorigin35\n568-function_definition-85-88", type_label=function_definition];
584 [label="85_ require(tx.origin == owner_txorigin35);\n584-expression_statement-86-86", type_label=expression_statement];
593 [label="86_ to.call.value(amount);\n593-expression_statement-87-87", type_label=expression_statement];
602 [label="88_ totalSupply\n602-function_definition-89-91", type_label=function_definition];
611 [label="89_ return _totalSupply;\n611-return-90-90", type_label=return];
613 [label="91_ bug_txorigin40\n613-function_definition-92-94", type_label=function_definition];
621 [label="92_ require(tx.origin == owner_txorigin40);\n621-expression_statement-93-93", type_label=expression_statement];
630 [label="94_ balanceOf\n630-function_definition-95-97", type_label=function_definition];
643 [label="95_ return balances[who];\n643-return-96-96", type_label=return];
647 [label="97_ sendto_txorigin33\n647-function_definition-98-101", type_label=function_definition];
663 [label="98_ require (tx.origin == owner_txorigin33);\n663-expression_statement-99-99", type_label=expression_statement];
672 [label="99_ receiver.transfer(amount);\n672-expression_statement-100-100", type_label=expression_statement];
679 [label="101_ transfer\n679-function_definition-102-120", type_label=function_definition];
696 [label="102_ require(msg.sender != to);\n696-expression_statement-103-103", type_label=expression_statement];
705 [label="103_ require(value > 0);\n705-expression_statement-104-104", type_label=expression_statement];
712 [label="104_ require( balances[msg.sender] >= value );\n712-expression_statement-105-105", type_label=expression_statement];
723 [label="105_ require( balances[to] + value >= balances[to] );\n723-expression_statement-106-106", type_label=expression_statement];
736 [label="106_ if_msg.sender == team\n736-if-107-115", type_label=if];
1740 [label="106_ end_if", type_label=end_if];
743 [label="107_ require(now >= 1589036400);\n743-expression_statement-108-108", type_label=expression_statement];
750 [label="108_ if\n750-if-109-110", type_label=if];
1754 [label="108_ end_if", type_label=end_if];
763 [label="109_ require(now >= 1620572400);\n763-expression_statement-110-110", type_label=expression_statement];
770 [label="110_ if\n770-if-111-112", type_label=if];
1774 [label="110_ end_if", type_label=end_if];
783 [label="111_ require(now >= 1652108400);\n783-expression_statement-112-112", type_label=expression_statement];
790 [label="112_ if\n790-if-113-114", type_label=if];
1794 [label="112_ end_if", type_label=end_if];
803 [label="113_ require(now >= 1683644400);\n803-expression_statement-114-114", type_label=expression_statement];
810 [label="115_ balances[msg.sender] -= value;\n810-expression_statement-116-116", type_label=expression_statement];
811 [label="115_ balances[msg.sender] -= value\n811-expression_statement-116-116", type_label=expression_statement];
818 [label="116_ balances[to] += value;\n818-expression_statement-117-117", type_label=expression_statement];
819 [label="116_ balances[to] += value\n819-expression_statement-117-117", type_label=expression_statement];
834 [label="118_ return true;\n834-return-119-119", type_label=return];
837 [label="120_ transferTo_txorigin27\n837-function_definition-121-124", type_label=function_definition];
853 [label="121_ require(tx.origin == owner_txorigin27);\n853-expression_statement-122-122", type_label=expression_statement];
862 [label="122_ to.call.value(amount);\n862-expression_statement-123-123", type_label=expression_statement];
871 [label="124_ burnCoins\n871-function_definition-125-131", type_label=function_definition];
879 [label="125_ require(balances[msg.sender] >= value);\n879-expression_statement-126-126", type_label=expression_statement];
890 [label="126_ require(_totalSupply >= value);\n890-expression_statement-127-127", type_label=expression_statement];
897 [label="127_ balances[msg.sender] -= value;\n897-expression_statement-128-128", type_label=expression_statement];
898 [label="127_ balances[msg.sender] -= value\n898-expression_statement-128-128", type_label=expression_statement];
905 [label="128_ _totalSupply -= value;\n905-expression_statement-129-129", type_label=expression_statement];
906 [label="128_ _totalSupply -= value\n906-expression_statement-129-129", type_label=expression_statement];
921 [label="131_ transferTo_txorigin31\n921-function_definition-132-135", type_label=function_definition];
937 [label="132_ require(tx.origin == owner_txorigin31);\n937-expression_statement-133-133", type_label=expression_statement];
946 [label="133_ to.call.value(amount);\n946-expression_statement-134-134", type_label=expression_statement];
955 [label="135_ toWei\n955-function_definition-136-138", type_label=function_definition];
968 [label="136_ return value * (10 ** uint256(decimals));\n968-return-137-137", type_label=return];
977 [label="138_ sendto_txorigin13\n977-function_definition-139-142", type_label=function_definition];
993 [label="139_ require (tx.origin == owner_txorigin13);\n993-expression_statement-140-140", type_label=expression_statement];
1002 [label="140_ receiver.transfer(amount);\n1002-expression_statement-141-141", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(1740, (106, 8), (114, 9))";
"(1754, (108, 12), (109, 43))";
"(1774, (110, 12), (111, 43))";
"(1794, (112, 12), (113, 43))";
70 -> 82  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
82 -> 91  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 117  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
133 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
168 -> 177  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
192 -> 200  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
213 -> 229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
229 -> 238  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
251 -> 267  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
267 -> 276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
289 -> 301  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
301 -> 310  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
327 -> 339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
339 -> 348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
386 -> 402  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
402 -> 411  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
442 -> 447  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
450 -> 459  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
463 -> 469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
469 -> 473  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
473 -> 477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
477 -> 481  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
481 -> 488  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
488 -> 495  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
495 -> 502  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
502 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
509 -> 520  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
538 -> 545  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
545 -> 552  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
552 -> 559  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
568 -> 584  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
584 -> 593  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
602 -> 611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
611 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
613 -> 621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
630 -> 643  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
643 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
647 -> 663  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
663 -> 672  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
679 -> 696  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
696 -> 705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
705 -> 712  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
712 -> 723  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
723 -> 736  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
736 -> 743  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
736 -> "(1740, (106, 8), (114, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
743 -> 750  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
750 -> 763  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
750 -> "(1754, (108, 12), (109, 43))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
763 -> "(1754, (108, 12), (109, 43))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
770 -> 783  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
770 -> "(1774, (110, 12), (111, 43))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
783 -> "(1774, (110, 12), (111, 43))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
790 -> 803  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
790 -> "(1794, (112, 12), (113, 43))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
803 -> "(1794, (112, 12), (113, 43))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
810 -> 818  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
834 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
837 -> 853  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
853 -> 862  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
871 -> 879  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
879 -> 890  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
890 -> 897  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
897 -> 905  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
921 -> 937  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
937 -> 946  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
955 -> 968  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
968 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
977 -> 993  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
993 -> 1002  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1740, (106, 8), (114, 9))" -> 810  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1754, (108, 12), (109, 43))" -> 770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1754, (108, 12), (109, 43))" -> 770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(1774, (110, 12), (111, 43))" -> 790  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1774, (110, 12), (111, 43))" -> 790  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(1794, (112, 12), (113, 43))" -> 810  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1794, (112, 12), (113, 43))" -> 810  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
}
