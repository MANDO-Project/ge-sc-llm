digraph  {
13 [label="2_ add\n13-function_definition-3-7", type_label=function_definition];
30 [label="3_ uint256 c = a + b;\n30-new_variable-4-4", type_label=new_variable];
31 [label="3_ uint256 c\n31-new_variable-4-4", type_label=new_variable];
38 [label="4_ require(c >= a, \"SafeMath: addition overflow\");\n38-expression_statement-5-5", type_label=expression_statement];
48 [label="5_ return c;\n48-return-6-6", type_label=return];
50 [label="7_ sub\n50-function_definition-8-12", type_label=function_definition];
67 [label="8_ require(b <= a, \"SafeMath: subtraction overflow\");\n67-expression_statement-9-9", type_label=expression_statement];
77 [label="9_ uint256 c = a - b;\n77-new_variable-10-10", type_label=new_variable];
78 [label="9_ uint256 c\n78-new_variable-10-10", type_label=new_variable];
85 [label="10_ return c;\n85-return-11-11", type_label=return];
87 [label="12_ mul\n87-function_definition-13-20", type_label=function_definition];
104 [label="13_ if_a == 0\n104-if-14-16", type_label=if];
1596 [label="13_ end_if", type_label=end_if];
109 [label="14_ return 0;\n109-return-15-15", type_label=return];
111 [label="16_ uint256 c = a * b;\n111-new_variable-17-17", type_label=new_variable];
112 [label="16_ uint256 c\n112-new_variable-17-17", type_label=new_variable];
119 [label="17_ require(c / a == b, \"SafeMath: multiplication overflow\");\n119-expression_statement-18-18", type_label=expression_statement];
131 [label="18_ return c;\n131-return-19-19", type_label=return];
133 [label="20_ div\n133-function_definition-21-25", type_label=function_definition];
150 [label="21_ require(b > 0, \"SafeMath: division by zero\");\n150-expression_statement-22-22", type_label=expression_statement];
160 [label="22_ uint256 c = a / b;\n160-new_variable-23-23", type_label=new_variable];
161 [label="22_ uint256 c\n161-new_variable-23-23", type_label=new_variable];
168 [label="23_ return c;\n168-return-24-24", type_label=return];
170 [label="25_ mod\n170-function_definition-26-29", type_label=function_definition];
187 [label="26_ require(b != 0, \"SafeMath: modulo by zero\");\n187-expression_statement-27-27", type_label=expression_statement];
197 [label="27_ return a % b;\n197-return-28-28", type_label=return];
204 [label="31_ totalSupply\n204-function_definition-32-32", type_label=function_definition];
212 [label="32_ balanceOf\n212-function_definition-33-33", type_label=function_definition];
224 [label="33_ transfer\n224-function_definition-34-34", type_label=function_definition];
239 [label="34_ allowance\n239-function_definition-35-35", type_label=function_definition];
255 [label="35_ approve\n255-function_definition-36-36", type_label=function_definition];
270 [label="36_ transferFrom\n270-function_definition-37-37", type_label=function_definition];
328 [label="42_ sendto_txorigin37\n328-function_definition-43-46", type_label=function_definition];
344 [label="43_ require (tx.origin == owner_txorigin37);\n344-expression_statement-44-44", type_label=expression_statement];
353 [label="44_ receiver.transfer(amount);\n353-expression_statement-45-45", type_label=expression_statement];
360 [label="46_ mapping (address => uint256) private _balances;\n360-new_variable-47-47", type_label=new_variable];
367 [label="47_ transferTo_txorigin3\n367-function_definition-48-51", type_label=function_definition];
383 [label="48_ require(tx.origin == owner_txorigin3);\n383-expression_statement-49-49", type_label=expression_statement];
392 [label="49_ to.call.value(amount);\n392-expression_statement-50-50", type_label=expression_statement];
401 [label="51_ mapping (address => mapping (address => uint256)) private _allowances;\n401-new_variable-52-52", type_label=new_variable];
410 [label="52_ sendto_txorigin9\n410-function_definition-53-56", type_label=function_definition];
426 [label="53_ require (tx.origin == owner_txorigin9);\n426-expression_statement-54-54", type_label=expression_statement];
435 [label="54_ receiver.transfer(amount);\n435-expression_statement-55-55", type_label=expression_statement];
442 [label="56_ uint256 private _totalSupply;\n442-new_variable-57-57", type_label=new_variable];
447 [label="57_ sendto_txorigin25\n447-function_definition-58-61", type_label=function_definition];
463 [label="58_ require (tx.origin == owner_txorigin25);\n463-expression_statement-59-59", type_label=expression_statement];
472 [label="59_ receiver.transfer(amount);\n472-expression_statement-60-60", type_label=expression_statement];
479 [label="61_ string private _name;\n479-new_variable-62-62", type_label=new_variable];
484 [label="62_ transferTo_txorigin19\n484-function_definition-63-66", type_label=function_definition];
500 [label="63_ require(tx.origin == owner_txorigin19);\n500-expression_statement-64-64", type_label=expression_statement];
509 [label="64_ to.call.value(amount);\n509-expression_statement-65-65", type_label=expression_statement];
518 [label="66_ string private _symbol;\n518-new_variable-67-67", type_label=new_variable];
523 [label="67_ withdrawAll_txorigin26\n523-function_definition-68-71", type_label=function_definition];
535 [label="68_ require(tx.origin == owner_txorigin26);\n535-expression_statement-69-69", type_label=expression_statement];
544 [label="69_ _recipient.transfer(address(this).balance);\n544-expression_statement-70-70", type_label=expression_statement];
555 [label="71_ uint8 private _decimals;\n555-new_variable-72-72", type_label=new_variable];
562 [label="73_ _name = \"UBBC Token\";\n562-expression_statement-74-74", type_label=expression_statement];
567 [label="74_ _symbol = \"UBBC\";\n567-expression_statement-75-75", type_label=expression_statement];
572 [label="75_ _decimals = 18;\n572-expression_statement-76-76", type_label=expression_statement];
576 [label="76_ _totalSupply = 260000000 ether;\n576-expression_statement-77-77", type_label=expression_statement];
581 [label="77_ _balances[0x0e475cd2c1f8222868cf85B4f97D7EB70fB3ffD3] = _totalSupply;\n581-expression_statement-78-78", type_label=expression_statement];
587 [label="79_ bug_txorigin20\n587-function_definition-80-82", type_label=function_definition];
595 [label="80_ require(tx.origin == owner_txorigin20);\n595-expression_statement-81-81", type_label=expression_statement];
604 [label="82_ transferTo_txorigin31\n604-function_definition-83-86", type_label=function_definition];
620 [label="83_ require(tx.origin == owner_txorigin31);\n620-expression_statement-84-84", type_label=expression_statement];
629 [label="84_ to.call.value(amount);\n629-expression_statement-85-85", type_label=expression_statement];
652 [label="87_ sendto_txorigin13\n652-function_definition-88-91", type_label=function_definition];
668 [label="88_ require (tx.origin == owner_txorigin13);\n668-expression_statement-89-89", type_label=expression_statement];
677 [label="89_ receiver.transfer(amount);\n677-expression_statement-90-90", type_label=expression_statement];
698 [label="92_ name\n698-function_definition-93-95", type_label=function_definition];
707 [label="93_ return _name;\n707-return-94-94", type_label=return];
709 [label="95_ bug_txorigin32\n709-function_definition-96-98", type_label=function_definition];
717 [label="96_ require(tx.origin == owner_txorigin32);\n717-expression_statement-97-97", type_label=expression_statement];
726 [label="98_ symbol\n726-function_definition-99-101", type_label=function_definition];
735 [label="99_ return _symbol;\n735-return-100-100", type_label=return];
737 [label="101_ withdrawAll_txorigin38\n737-function_definition-102-105", type_label=function_definition];
749 [label="102_ require(tx.origin == owner_txorigin38);\n749-expression_statement-103-103", type_label=expression_statement];
758 [label="103_ _recipient.transfer(address(this).balance);\n758-expression_statement-104-104", type_label=expression_statement];
769 [label="105_ decimals\n769-function_definition-106-108", type_label=function_definition];
778 [label="106_ return _decimals;\n778-return-107-107", type_label=return];
780 [label="108_ bug_txorigin4\n780-function_definition-109-111", type_label=function_definition];
788 [label="109_ require(tx.origin == owner_txorigin4);\n788-expression_statement-110-110", type_label=expression_statement];
797 [label="111_ totalSupply\n797-function_definition-112-114", type_label=function_definition];
806 [label="112_ return _totalSupply;\n806-return-113-113", type_label=return];
808 [label="114_ transferTo_txorigin7\n808-function_definition-115-118", type_label=function_definition];
824 [label="115_ require(tx.origin == owner_txorigin7);\n824-expression_statement-116-116", type_label=expression_statement];
833 [label="116_ to.call.value(amount);\n833-expression_statement-117-117", type_label=expression_statement];
842 [label="118_ balanceOf\n842-function_definition-119-121", type_label=function_definition];
855 [label="119_ return _balances[account];\n855-return-120-120", type_label=return];
859 [label="121_ transferTo_txorigin23\n859-function_definition-122-125", type_label=function_definition];
875 [label="122_ require(tx.origin == owner_txorigin23);\n875-expression_statement-123-123", type_label=expression_statement];
884 [label="123_ to.call.value(amount);\n884-expression_statement-124-124", type_label=expression_statement];
893 [label="125_ transfer\n893-function_definition-126-129", type_label=function_definition];
909 [label="126_ _transfer(msg.sender, recipient, amount);\n909-expression_statement-127-127", type_label=expression_statement];
920 [label="127_ return true;\n920-return-128-128", type_label=return];
923 [label="129_ withdrawAll_txorigin14\n923-function_definition-130-133", type_label=function_definition];
935 [label="130_ require(tx.origin == owner_txorigin14);\n935-expression_statement-131-131", type_label=expression_statement];
944 [label="131_ _recipient.transfer(address(this).balance);\n944-expression_statement-132-132", type_label=expression_statement];
955 [label="133_ allowance\n955-function_definition-134-136", type_label=function_definition];
972 [label="134_ return _allowances[owner][spender];\n972-return-135-135", type_label=return];
978 [label="136_ withdrawAll_txorigin30\n978-function_definition-137-140", type_label=function_definition];
990 [label="137_ require(tx.origin == owner_txorigin30);\n990-expression_statement-138-138", type_label=expression_statement];
999 [label="138_ _recipient.transfer(address(this).balance);\n999-expression_statement-139-139", type_label=expression_statement];
1010 [label="140_ approve\n1010-function_definition-141-144", type_label=function_definition];
1026 [label="141_ _approve(msg.sender, spender, value);\n1026-expression_statement-142-142", type_label=expression_statement];
1037 [label="142_ return true;\n1037-return-143-143", type_label=return];
1040 [label="144_ bug_txorigin8\n1040-function_definition-145-147", type_label=function_definition];
1048 [label="145_ require(tx.origin == owner_txorigin8);\n1048-expression_statement-146-146", type_label=expression_statement];
1057 [label="147_ transferFrom\n1057-function_definition-148-152", type_label=function_definition];
1077 [label="148_ _transfer(sender, recipient, amount);\n1077-expression_statement-149-149", type_label=expression_statement];
1086 [label="149_ _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n1086-expression_statement-150-150", type_label=expression_statement];
1108 [label="150_ return true;\n1108-return-151-151", type_label=return];
1111 [label="152_ transferTo_txorigin39\n1111-function_definition-153-156", type_label=function_definition];
1127 [label="153_ require(tx.origin == owner_txorigin39);\n1127-expression_statement-154-154", type_label=expression_statement];
1136 [label="154_ to.call.value(amount);\n1136-expression_statement-155-155", type_label=expression_statement];
1145 [label="156_ increaseAllowance\n1145-function_definition-157-160", type_label=function_definition];
1161 [label="157_ _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n1161-expression_statement-158-158", type_label=expression_statement];
1183 [label="158_ return true;\n1183-return-159-159", type_label=return];
1186 [label="160_ bug_txorigin36\n1186-function_definition-161-163", type_label=function_definition];
1194 [label="161_ require(tx.origin == owner_txorigin36);\n1194-expression_statement-162-162", type_label=expression_statement];
1203 [label="163_ decreaseAllowance\n1203-function_definition-164-167", type_label=function_definition];
1219 [label="164_ _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n1219-expression_statement-165-165", type_label=expression_statement];
1241 [label="165_ return true;\n1241-return-166-166", type_label=return];
1244 [label="167_ transferTo_txorigin35\n1244-function_definition-168-171", type_label=function_definition];
1260 [label="168_ require(tx.origin == owner_txorigin35);\n1260-expression_statement-169-169", type_label=expression_statement];
1269 [label="169_ to.call.value(amount);\n1269-expression_statement-170-170", type_label=expression_statement];
1278 [label="171_ _transfer\n1278-function_definition-172-178", type_label=function_definition];
1294 [label="172_ require(sender != address(0), \"ERC20: transfer from the zero address\");\n1294-expression_statement-173-173", type_label=expression_statement];
1306 [label="173_ require(recipient != address(0), \"ERC20: transfer to the zero address\");\n1306-expression_statement-174-174", type_label=expression_statement];
1318 [label="174_ _balances[sender] = _balances[sender].sub(amount);\n1318-expression_statement-175-175", type_label=expression_statement];
1331 [label="175_ _balances[recipient] = _balances[recipient].add(amount);\n1331-expression_statement-176-176", type_label=expression_statement];
1352 [label="178_ bug_txorigin40\n1352-function_definition-179-181", type_label=function_definition];
1360 [label="179_ require(tx.origin == owner_txorigin40);\n1360-expression_statement-180-180", type_label=expression_statement];
1369 [label="181_ _approve\n1369-function_definition-182-187", type_label=function_definition];
1385 [label="182_ require(owner != address(0), \"ERC20: approve from the zero address\");\n1385-expression_statement-183-183", type_label=expression_statement];
1397 [label="183_ require(spender != address(0), \"ERC20: approve to the zero address\");\n1397-expression_statement-184-184", type_label=expression_statement];
1409 [label="184_ _allowances[owner][spender] = value;\n1409-expression_statement-185-185", type_label=expression_statement];
1425 [label="187_ sendto_txorigin33\n1425-function_definition-188-191", type_label=function_definition];
1441 [label="188_ require (tx.origin == owner_txorigin33);\n1441-expression_statement-189-189", type_label=expression_statement];
1450 [label="189_ receiver.transfer(amount);\n1450-expression_statement-190-190", type_label=expression_statement];
1463 [label="194_ transferTo_txorigin27\n1463-function_definition-195-198", type_label=function_definition];
1479 [label="195_ require(tx.origin == owner_txorigin27);\n1479-expression_statement-196-196", type_label=expression_statement];
1488 [label="196_ to.call.value(amount);\n1488-expression_statement-197-197", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(1596, (13, 8), (15, 9))";
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
50 -> 67  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
67 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 85  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
85 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
87 -> 104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
104 -> 109  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
104 -> "(1596, (13, 8), (15, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
109 -> "(1596, (13, 8), (15, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
109 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
111 -> 119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
119 -> 131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
131 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
133 -> 150  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
150 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
168 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
170 -> 187  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
187 -> 197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
197 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
328 -> 344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
344 -> 353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
367 -> 383  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
383 -> 392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
410 -> 426  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
426 -> 435  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
447 -> 463  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
463 -> 472  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
484 -> 500  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
500 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
523 -> 535  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
535 -> 544  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
562 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
567 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
572 -> 576  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
576 -> 581  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
587 -> 595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
604 -> 620  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
620 -> 629  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
652 -> 668  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
668 -> 677  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
698 -> 707  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
707 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
709 -> 717  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
726 -> 735  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
735 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
737 -> 749  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
749 -> 758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
769 -> 778  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
778 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
780 -> 788  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
797 -> 806  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
806 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
808 -> 824  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
824 -> 833  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
842 -> 855  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
855 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
859 -> 875  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
875 -> 884  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
893 -> 909  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
909 -> 920  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
920 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
923 -> 935  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
935 -> 944  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
955 -> 972  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
972 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
978 -> 990  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
990 -> 999  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1010 -> 1026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1026 -> 1037  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1037 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1040 -> 1048  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1057 -> 1077  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1077 -> 1086  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1086 -> 1108  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1108 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1111 -> 1127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1127 -> 1136  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1145 -> 1161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1161 -> 1183  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1183 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1186 -> 1194  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1203 -> 1219  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1219 -> 1241  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1241 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1244 -> 1260  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1260 -> 1269  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1278 -> 1294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1294 -> 1306  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1306 -> 1318  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1318 -> 1331  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1352 -> 1360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1369 -> 1385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1385 -> 1397  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1397 -> 1409  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1425 -> 1441  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1441 -> 1450  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1463 -> 1479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1479 -> 1488  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1596, (13, 8), (15, 9))" -> 111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1596, (13, 8), (15, 9))" -> 111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
}
