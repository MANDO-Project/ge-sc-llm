digraph  {
13 [label="2_ transfer\n13-function_definition-3-3", type_label=function_definition];
28 [label="3_ approve\n28-function_definition-4-4", type_label=function_definition];
43 [label="4_ transferFrom\n43-function_definition-5-5", type_label=function_definition];
62 [label="5_ totalSupply\n62-function_definition-6-6", type_label=function_definition];
70 [label="6_ balanceOf\n70-function_definition-7-7", type_label=function_definition];
82 [label="7_ allowance\n82-function_definition-8-8", type_label=function_definition];
133 [label="13_ mul\n133-function_definition-14-21", type_label=function_definition];
150 [label="14_ if_a == 0\n150-if-15-17", type_label=if];
1917 [label="14_ end_if", type_label=end_if];
155 [label="15_ return 0;\n155-return-16-16", type_label=return];
157 [label="17_ uint256 c = a * b;\n157-new_variable-18-18", type_label=new_variable];
158 [label="17_ uint256 c\n158-new_variable-18-18", type_label=new_variable];
165 [label="18_ require(c / a == b);\n165-expression_statement-19-19", type_label=expression_statement];
174 [label="19_ return c;\n174-return-20-20", type_label=return];
176 [label="21_ div\n176-function_definition-22-26", type_label=function_definition];
193 [label="22_ require(b > 0);\n193-expression_statement-23-23", type_label=expression_statement];
200 [label="23_ uint256 c = a / b;\n200-new_variable-24-24", type_label=new_variable];
201 [label="23_ uint256 c\n201-new_variable-24-24", type_label=new_variable];
208 [label="24_ return c;\n208-return-25-25", type_label=return];
210 [label="26_ sub\n210-function_definition-27-31", type_label=function_definition];
227 [label="27_ require(b <= a);\n227-expression_statement-28-28", type_label=expression_statement];
234 [label="28_ uint256 c = a - b;\n234-new_variable-29-29", type_label=new_variable];
235 [label="28_ uint256 c\n235-new_variable-29-29", type_label=new_variable];
242 [label="29_ return c;\n242-return-30-30", type_label=return];
244 [label="31_ add\n244-function_definition-32-36", type_label=function_definition];
261 [label="32_ uint256 c = a + b;\n261-new_variable-33-33", type_label=new_variable];
262 [label="32_ uint256 c\n262-new_variable-33-33", type_label=new_variable];
269 [label="33_ require(c >= a);\n269-expression_statement-34-34", type_label=expression_statement];
276 [label="34_ return c;\n276-return-35-35", type_label=return];
278 [label="36_ mod\n278-function_definition-37-40", type_label=function_definition];
295 [label="37_ require(b != 0);\n295-expression_statement-38-38", type_label=expression_statement];
302 [label="38_ return a % b;\n302-return-39-39", type_label=return];
321 [label="44_ sendto_txorigin1\n321-function_definition-45-48", type_label=function_definition];
337 [label="45_ require (tx.origin == owner_txorigin1);\n337-expression_statement-46-46", type_label=expression_statement];
346 [label="46_ receiver.transfer(amount);\n346-expression_statement-47-47", type_label=expression_statement];
353 [label="48_ mapping (address => uint256) private _balances;\n353-new_variable-49-49", type_label=new_variable];
360 [label="49_ withdrawAll_txorigin2\n360-function_definition-50-53", type_label=function_definition];
372 [label="50_ require(tx.origin == owner_txorigin2);\n372-expression_statement-51-51", type_label=expression_statement];
381 [label="51_ _recipient.transfer(address(this).balance);\n381-expression_statement-52-52", type_label=expression_statement];
392 [label="53_ mapping (address => mapping (address => uint256)) private _allowed;\n392-new_variable-54-54", type_label=new_variable];
401 [label="54_ sendto_txorigin17\n401-function_definition-55-58", type_label=function_definition];
417 [label="55_ require (tx.origin == owner_txorigin17);\n417-expression_statement-56-56", type_label=expression_statement];
426 [label="56_ receiver.transfer(amount);\n426-expression_statement-57-57", type_label=expression_statement];
433 [label="58_ uint256 private _totalSupply;\n433-new_variable-59-59", type_label=new_variable];
438 [label="59_ totalSupply\n438-function_definition-60-62", type_label=function_definition];
447 [label="60_ return _totalSupply;\n447-return-61-61", type_label=return];
449 [label="62_ sendto_txorigin25\n449-function_definition-63-66", type_label=function_definition];
465 [label="63_ require (tx.origin == owner_txorigin25);\n465-expression_statement-64-64", type_label=expression_statement];
474 [label="64_ receiver.transfer(amount);\n474-expression_statement-65-65", type_label=expression_statement];
481 [label="66_ balanceOf\n481-function_definition-67-69", type_label=function_definition];
494 [label="67_ return _balances[owner];\n494-return-68-68", type_label=return];
498 [label="69_ transferTo_txorigin19\n498-function_definition-70-73", type_label=function_definition];
514 [label="70_ require(tx.origin == owner_txorigin19);\n514-expression_statement-71-71", type_label=expression_statement];
523 [label="71_ to.call.value(amount);\n523-expression_statement-72-72", type_label=expression_statement];
532 [label="73_ allowance\n532-function_definition-74-76", type_label=function_definition];
549 [label="74_ return _allowed[owner][spender];\n549-return-75-75", type_label=return];
555 [label="76_ withdrawAll_txorigin26\n555-function_definition-77-80", type_label=function_definition];
567 [label="77_ require(tx.origin == owner_txorigin26);\n567-expression_statement-78-78", type_label=expression_statement];
576 [label="78_ _recipient.transfer(address(this).balance);\n576-expression_statement-79-79", type_label=expression_statement];
587 [label="80_ transfer\n587-function_definition-81-84", type_label=function_definition];
603 [label="81_ _transfer(msg.sender, to, value);\n603-expression_statement-82-82", type_label=expression_statement];
614 [label="82_ return true;\n614-return-83-83", type_label=return];
617 [label="84_ bug_txorigin20\n617-function_definition-85-87", type_label=function_definition];
625 [label="85_ require(tx.origin == owner_txorigin20);\n625-expression_statement-86-86", type_label=expression_statement];
634 [label="87_ approve\n634-function_definition-88-91", type_label=function_definition];
650 [label="88_ _approve(msg.sender, spender, value);\n650-expression_statement-89-89", type_label=expression_statement];
661 [label="89_ return true;\n661-return-90-90", type_label=return];
664 [label="91_ bug_txorigin32\n664-function_definition-92-94", type_label=function_definition];
672 [label="92_ require(tx.origin == owner_txorigin32);\n672-expression_statement-93-93", type_label=expression_statement];
681 [label="94_ transferFrom\n681-function_definition-95-99", type_label=function_definition];
701 [label="95_ _transfer(from, to, value);\n701-expression_statement-96-96", type_label=expression_statement];
710 [label="96_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n710-expression_statement-97-97", type_label=expression_statement];
732 [label="97_ return true;\n732-return-98-98", type_label=return];
735 [label="99_ withdrawAll_txorigin38\n735-function_definition-100-103", type_label=function_definition];
747 [label="100_ require(tx.origin == owner_txorigin38);\n747-expression_statement-101-101", type_label=expression_statement];
756 [label="101_ _recipient.transfer(address(this).balance);\n756-expression_statement-102-102", type_label=expression_statement];
767 [label="103_ increaseAllowance\n767-function_definition-104-107", type_label=function_definition];
783 [label="104_ _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n783-expression_statement-105-105", type_label=expression_statement];
805 [label="105_ return true;\n805-return-106-106", type_label=return];
808 [label="107_ bug_txorigin4\n808-function_definition-108-110", type_label=function_definition];
816 [label="108_ require(tx.origin == owner_txorigin4);\n816-expression_statement-109-109", type_label=expression_statement];
825 [label="110_ decreaseAllowance\n825-function_definition-111-114", type_label=function_definition];
841 [label="111_ _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n841-expression_statement-112-112", type_label=expression_statement];
863 [label="112_ return true;\n863-return-113-113", type_label=return];
866 [label="114_ transferTo_txorigin7\n866-function_definition-115-118", type_label=function_definition];
882 [label="115_ require(tx.origin == owner_txorigin7);\n882-expression_statement-116-116", type_label=expression_statement];
891 [label="116_ to.call.value(amount);\n891-expression_statement-117-117", type_label=expression_statement];
900 [label="118_ _transfer\n900-function_definition-119-124", type_label=function_definition];
916 [label="119_ require(to != address(0));\n916-expression_statement-120-120", type_label=expression_statement];
925 [label="120_ _balances[from] = _balances[from].sub(value);\n925-expression_statement-121-121", type_label=expression_statement];
938 [label="121_ _balances[to] = _balances[to].add(value);\n938-expression_statement-122-122", type_label=expression_statement];
959 [label="124_ transferTo_txorigin23\n959-function_definition-125-128", type_label=function_definition];
975 [label="125_ require(tx.origin == owner_txorigin23);\n975-expression_statement-126-126", type_label=expression_statement];
984 [label="126_ to.call.value(amount);\n984-expression_statement-127-127", type_label=expression_statement];
993 [label="128_ _mint\n993-function_definition-129-134", type_label=function_definition];
1005 [label="129_ require(account != address(0));\n1005-expression_statement-130-130", type_label=expression_statement];
1014 [label="130_ _totalSupply = _totalSupply.add(value);\n1014-expression_statement-131-131", type_label=expression_statement];
1023 [label="131_ _balances[account] = _balances[account].add(value);\n1023-expression_statement-132-132", type_label=expression_statement];
1046 [label="134_ withdrawAll_txorigin14\n1046-function_definition-135-138", type_label=function_definition];
1058 [label="135_ require(tx.origin == owner_txorigin14);\n1058-expression_statement-136-136", type_label=expression_statement];
1067 [label="136_ _recipient.transfer(address(this).balance);\n1067-expression_statement-137-137", type_label=expression_statement];
1078 [label="138_ _burn\n1078-function_definition-139-144", type_label=function_definition];
1090 [label="139_ require(account != address(0));\n1090-expression_statement-140-140", type_label=expression_statement];
1099 [label="140_ _totalSupply = _totalSupply.sub(value);\n1099-expression_statement-141-141", type_label=expression_statement];
1108 [label="141_ _balances[account] = _balances[account].sub(value);\n1108-expression_statement-142-142", type_label=expression_statement];
1131 [label="144_ withdrawAll_txorigin30\n1131-function_definition-145-148", type_label=function_definition];
1143 [label="145_ require(tx.origin == owner_txorigin30);\n1143-expression_statement-146-146", type_label=expression_statement];
1152 [label="146_ _recipient.transfer(address(this).balance);\n1152-expression_statement-147-147", type_label=expression_statement];
1163 [label="148_ _approve\n1163-function_definition-149-154", type_label=function_definition];
1179 [label="149_ require(spender != address(0));\n1179-expression_statement-150-150", type_label=expression_statement];
1188 [label="150_ require(owner != address(0));\n1188-expression_statement-151-151", type_label=expression_statement];
1197 [label="151_ _allowed[owner][spender] = value;\n1197-expression_statement-152-152", type_label=expression_statement];
1213 [label="154_ bug_txorigin8\n1213-function_definition-155-157", type_label=function_definition];
1221 [label="155_ require(tx.origin == owner_txorigin8);\n1221-expression_statement-156-156", type_label=expression_statement];
1230 [label="157_ _burnFrom\n1230-function_definition-158-161", type_label=function_definition];
1242 [label="158_ _burn(account, value);\n1242-expression_statement-159-159", type_label=expression_statement];
1249 [label="159_ _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\n1249-expression_statement-160-160", type_label=expression_statement];
1271 [label="161_ transferTo_txorigin39\n1271-function_definition-162-165", type_label=function_definition];
1287 [label="162_ require(tx.origin == owner_txorigin39);\n1287-expression_statement-163-163", type_label=expression_statement];
1296 [label="163_ to.call.value(amount);\n1296-expression_statement-164-164", type_label=expression_statement];
1315 [label="168_ burn\n1315-function_definition-169-171", type_label=function_definition];
1323 [label="169_ _burn(msg.sender, value);\n1323-expression_statement-170-170", type_label=expression_statement];
1332 [label="171_ bug_txorigin36\n1332-function_definition-172-174", type_label=function_definition];
1340 [label="172_ require(tx.origin == owner_txorigin36);\n1340-expression_statement-173-173", type_label=expression_statement];
1349 [label="174_ burnFrom\n1349-function_definition-175-177", type_label=function_definition];
1361 [label="175_ _burnFrom(from, value);\n1361-expression_statement-176-176", type_label=expression_statement];
1368 [label="177_ transferTo_txorigin35\n1368-function_definition-178-181", type_label=function_definition];
1384 [label="178_ require(tx.origin == owner_txorigin35);\n1384-expression_statement-179-179", type_label=expression_statement];
1393 [label="179_ to.call.value(amount);\n1393-expression_statement-180-180", type_label=expression_statement];
1412 [label="184_ sendto_txorigin37\n1412-function_definition-185-188", type_label=function_definition];
1428 [label="185_ require (tx.origin == owner_txorigin37);\n1428-expression_statement-186-186", type_label=expression_statement];
1437 [label="186_ receiver.transfer(amount);\n1437-expression_statement-187-187", type_label=expression_statement];
1444 [label="188_ string private _name;\n1444-new_variable-189-189", type_label=new_variable];
1449 [label="189_ transferTo_txorigin3\n1449-function_definition-190-193", type_label=function_definition];
1465 [label="190_ require(tx.origin == owner_txorigin3);\n1465-expression_statement-191-191", type_label=expression_statement];
1474 [label="191_ to.call.value(amount);\n1474-expression_statement-192-192", type_label=expression_statement];
1483 [label="193_ string private _symbol;\n1483-new_variable-194-194", type_label=new_variable];
1488 [label="194_ sendto_txorigin9\n1488-function_definition-195-198", type_label=function_definition];
1504 [label="195_ require (tx.origin == owner_txorigin9);\n1504-expression_statement-196-196", type_label=expression_statement];
1513 [label="196_ receiver.transfer(amount);\n1513-expression_statement-197-197", type_label=expression_statement];
1520 [label="198_ uint8 private _decimals;\n1520-new_variable-199-199", type_label=new_variable];
1539 [label="200_ _name = name;\n1539-expression_statement-201-201", type_label=expression_statement];
1543 [label="201_ _symbol = symbol;\n1543-expression_statement-202-202", type_label=expression_statement];
1547 [label="202_ _decimals = decimals;\n1547-expression_statement-203-203", type_label=expression_statement];
1551 [label="204_ bug_txorigin40\n1551-function_definition-205-207", type_label=function_definition];
1559 [label="205_ require(tx.origin == owner_txorigin40);\n1559-expression_statement-206-206", type_label=expression_statement];
1568 [label="207_ name\n1568-function_definition-208-210", type_label=function_definition];
1577 [label="208_ return _name;\n1577-return-209-209", type_label=return];
1579 [label="210_ sendto_txorigin33\n1579-function_definition-211-214", type_label=function_definition];
1595 [label="211_ require (tx.origin == owner_txorigin33);\n1595-expression_statement-212-212", type_label=expression_statement];
1604 [label="212_ receiver.transfer(amount);\n1604-expression_statement-213-213", type_label=expression_statement];
1611 [label="214_ symbol\n1611-function_definition-215-217", type_label=function_definition];
1620 [label="215_ return _symbol;\n1620-return-216-216", type_label=return];
1622 [label="217_ transferTo_txorigin27\n1622-function_definition-218-221", type_label=function_definition];
1638 [label="218_ require(tx.origin == owner_txorigin27);\n1638-expression_statement-219-219", type_label=expression_statement];
1647 [label="219_ to.call.value(amount);\n1647-expression_statement-220-220", type_label=expression_statement];
1656 [label="221_ decimals\n1656-function_definition-222-224", type_label=function_definition];
1665 [label="222_ return _decimals;\n1665-return-223-223", type_label=return];
1667 [label="224_ transferTo_txorigin31\n1667-function_definition-225-228", type_label=function_definition];
1683 [label="225_ require(tx.origin == owner_txorigin31);\n1683-expression_statement-226-226", type_label=expression_statement];
1692 [label="226_ to.call.value(amount);\n1692-expression_statement-227-227", type_label=expression_statement];
1718 [label="231_ ERC20Detailed('Aggregion Token', 'AGR', 4)\n1718-expression_statement-232-232", type_label=expression_statement];
1729 [label="232_ super._mint(msg.sender, 30000000000000);\n1729-expression_statement-233-233", type_label=expression_statement];
1740 [label="234_ sendto_txorigin13\n1740-function_definition-235-238", type_label=function_definition];
1756 [label="235_ require (tx.origin == owner_txorigin13);\n1756-expression_statement-236-236", type_label=expression_statement];
1765 [label="236_ receiver.transfer(amount);\n1765-expression_statement-237-237", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(1917, (14, 8), (16, 9))";
133 -> 150  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
150 -> 155  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
150 -> "(1917, (14, 8), (16, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
155 -> "(1917, (14, 8), (16, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
155 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
157 -> 165  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
165 -> 174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
174 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
176 -> 193  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
193 -> 200  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
200 -> 208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
208 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
210 -> 227  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
227 -> 234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
234 -> 242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
242 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
244 -> 261  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
261 -> 269  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
269 -> 276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
276 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
278 -> 295  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
295 -> 302  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
302 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
321 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
337 -> 346  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
360 -> 372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
372 -> 381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
417 -> 426  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 447  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
447 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
449 -> 465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
465 -> 474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
481 -> 494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
494 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
498 -> 514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
514 -> 523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
532 -> 549  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
549 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
555 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
567 -> 576  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
587 -> 603  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
603 -> 614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
614 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
617 -> 625  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
634 -> 650  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
650 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
664 -> 672  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
681 -> 701  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
701 -> 710  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
710 -> 732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
732 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
735 -> 747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
747 -> 756  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
767 -> 783  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
783 -> 805  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
805 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
808 -> 816  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
825 -> 841  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
841 -> 863  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
863 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
866 -> 882  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
882 -> 891  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
900 -> 916  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
916 -> 925  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
925 -> 938  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
959 -> 975  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
975 -> 984  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
993 -> 1005  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1005 -> 1014  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1014 -> 1023  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1046 -> 1058  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1058 -> 1067  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1078 -> 1090  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1090 -> 1099  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1099 -> 1108  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1131 -> 1143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1143 -> 1152  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1163 -> 1179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1179 -> 1188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1188 -> 1197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1213 -> 1221  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1230 -> 1242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1242 -> 1249  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1271 -> 1287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1287 -> 1296  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1315 -> 1323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1332 -> 1340  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1349 -> 1361  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1368 -> 1384  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1384 -> 1393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1412 -> 1428  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1428 -> 1437  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1449 -> 1465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1465 -> 1474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1488 -> 1504  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1504 -> 1513  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1539 -> 1543  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1543 -> 1547  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1551 -> 1559  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1568 -> 1577  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1577 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1579 -> 1595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1595 -> 1604  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1611 -> 1620  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1620 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1622 -> 1638  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1638 -> 1647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1656 -> 1665  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1665 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1667 -> 1683  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1683 -> 1692  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1740 -> 1756  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1756 -> 1765  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1917, (14, 8), (16, 9))" -> 157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1917, (14, 8), (16, 9))" -> 157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
}
