digraph  {
13 [label="2_ transferTo_txorigin39\n13-function_definition-3-6", type_label=function_definition];
29 [label="3_ require(tx.origin == owner_txorigin39);\n29-expression_statement-4-4", type_label=expression_statement];
38 [label="4_ to.call.value(amount);\n38-expression_statement-5-5", type_label=expression_statement];
53 [label="7_ bug_txorigin36\n53-function_definition-8-10", type_label=function_definition];
61 [label="8_ require(tx.origin == owner_txorigin36);\n61-expression_statement-9-9", type_label=expression_statement];
76 [label="11_ transferTo_txorigin35\n76-function_definition-12-15", type_label=function_definition];
92 [label="12_ require(tx.origin == owner_txorigin35);\n92-expression_statement-13-13", type_label=expression_statement];
101 [label="13_ to.call.value(amount);\n101-expression_statement-14-14", type_label=expression_statement];
112 [label="16_ bug_txorigin40\n112-function_definition-17-19", type_label=function_definition];
120 [label="17_ require(tx.origin == owner_txorigin40);\n120-expression_statement-18-18", type_label=expression_statement];
135 [label="20_ sendto_txorigin33\n135-function_definition-21-24", type_label=function_definition];
151 [label="21_ require (tx.origin == owner_txorigin33);\n151-expression_statement-22-22", type_label=expression_statement];
160 [label="22_ receiver.transfer(amount);\n160-expression_statement-23-23", type_label=expression_statement];
173 [label="25_ transferTo_txorigin27\n173-function_definition-26-29", type_label=function_definition];
189 [label="26_ require(tx.origin == owner_txorigin27);\n189-expression_statement-27-27", type_label=expression_statement];
198 [label="27_ to.call.value(amount);\n198-expression_statement-28-28", type_label=expression_statement];
217 [label="30_ transferTo_txorigin31\n217-function_definition-31-34", type_label=function_definition];
233 [label="31_ require(tx.origin == owner_txorigin31);\n233-expression_statement-32-32", type_label=expression_statement];
242 [label="32_ to.call.value(amount);\n242-expression_statement-33-33", type_label=expression_statement];
261 [label="35_ sendto_txorigin13\n261-function_definition-36-39", type_label=function_definition];
277 [label="36_ require (tx.origin == owner_txorigin13);\n277-expression_statement-37-37", type_label=expression_statement];
286 [label="37_ receiver.transfer(amount);\n286-expression_statement-38-38", type_label=expression_statement];
312 [label="48_ struct Guess {\n        mapping (address => PaidStatus) players;\n        uint guesses_number;\n    }\n312-expression_statement-49-52", type_label=expression_statement];
325 [label="52_ bug_txorigin12\n325-function_definition-53-55", type_label=function_definition];
333 [label="53_ require(tx.origin == owner_txorigin12);\n333-expression_statement-54-54", type_label=expression_statement];
342 [label="55_ address payable public owner;\n342-new_variable-56-56", type_label=new_variable];
347 [label="56_ transferTo_txorigin11\n347-function_definition-57-60", type_label=function_definition];
363 [label="57_ require(tx.origin == owner_txorigin11);\n363-expression_statement-58-58", type_label=expression_statement];
372 [label="58_ to.call.value(amount);\n372-expression_statement-59-59", type_label=expression_statement];
381 [label="60_ address public oracle;\n381-new_variable-61-61", type_label=new_variable];
386 [label="61_ sendto_txorigin1\n386-function_definition-62-65", type_label=function_definition];
402 [label="62_ require (tx.origin == owner_txorigin1);\n402-expression_statement-63-63", type_label=expression_statement];
411 [label="63_ receiver.transfer(amount);\n411-expression_statement-64-64", type_label=expression_statement];
418 [label="65_ State public state;\n418-new_variable-66-66", type_label=new_variable];
424 [label="66_ withdrawAll_txorigin2\n424-function_definition-67-70", type_label=function_definition];
436 [label="67_ require(tx.origin == owner_txorigin2);\n436-expression_statement-68-68", type_label=expression_statement];
445 [label="68_ _recipient.transfer(address(this).balance);\n445-expression_statement-69-69", type_label=expression_statement];
456 [label="70_ mapping (uint => Guess) public guesses;\n456-new_variable-71-71", type_label=new_variable];
464 [label="71_ sendto_txorigin17\n464-function_definition-72-75", type_label=function_definition];
480 [label="72_ require (tx.origin == owner_txorigin17);\n480-expression_statement-73-73", type_label=expression_statement];
489 [label="73_ receiver.transfer(amount);\n489-expression_statement-74-74", type_label=expression_statement];
496 [label="75_ uint256 public bet;\n496-new_variable-76-76", type_label=new_variable];
501 [label="76_ uint256 splitJackpot;\n501-new_variable-77-77", type_label=new_variable];
505 [label="77_ sendto_txorigin37\n505-function_definition-78-81", type_label=function_definition];
521 [label="78_ require (tx.origin == owner_txorigin37);\n521-expression_statement-79-79", type_label=expression_statement];
530 [label="79_ receiver.transfer(amount);\n530-expression_statement-80-80", type_label=expression_statement];
537 [label="81_ uint public result;\n537-new_variable-82-82", type_label=new_variable];
542 [label="82_ transferTo_txorigin3\n542-function_definition-83-86", type_label=function_definition];
558 [label="83_ require(tx.origin == owner_txorigin3);\n558-expression_statement-84-84", type_label=expression_statement];
567 [label="84_ to.call.value(amount);\n567-expression_statement-85-85", type_label=expression_statement];
576 [label="86_ uint256 public initialPrice;\n576-new_variable-87-87", type_label=new_variable];
581 [label="87_ sendto_txorigin9\n581-function_definition-88-91", type_label=function_definition];
597 [label="88_ require (tx.origin == owner_txorigin9);\n597-expression_statement-89-89", type_label=expression_statement];
606 [label="89_ receiver.transfer(amount);\n606-expression_statement-90-90", type_label=expression_statement];
613 [label="91_ uint256 public finalPrice;\n613-new_variable-92-92", type_label=new_variable];
618 [label="92_ sendto_txorigin25\n618-function_definition-93-96", type_label=function_definition];
634 [label="93_ require (tx.origin == owner_txorigin25);\n634-expression_statement-94-94", type_label=expression_statement];
643 [label="94_ receiver.transfer(amount);\n643-expression_statement-95-95", type_label=expression_statement];
650 [label="96_ uint constant UP = 1;\n650-new_variable-97-97", type_label=new_variable];
655 [label="97_ transferTo_txorigin19\n655-function_definition-98-101", type_label=function_definition];
671 [label="98_ require(tx.origin == owner_txorigin19);\n671-expression_statement-99-99", type_label=expression_statement];
680 [label="99_ to.call.value(amount);\n680-expression_statement-100-100", type_label=expression_statement];
689 [label="101_ uint constant DOWN = 0;\n689-new_variable-102-102", type_label=new_variable];
694 [label="102_ modifier byPlayer(){\n        require(msg.sender != oracle);\n        _;\n    }\n694-expression_statement-103-106", type_label=expression_statement];
697 [label="103_ require(msg.sender != oracle);\n697-expression_statement-104-104", type_label=expression_statement];
706 [label="104_ _;\n706-expression_statement-105-105", type_label=expression_statement];
708 [label="106_ modifier byOwner(){\n        require(msg.sender == owner);\n        _;\n    }\n708-expression_statement-107-110", type_label=expression_statement];
711 [label="107_ require(msg.sender == owner);\n711-expression_statement-108-108", type_label=expression_statement];
720 [label="108_ _;\n720-expression_statement-109-109", type_label=expression_statement];
722 [label="110_ modifier byOracle(){\n        require(msg.sender == oracle);\n        _;\n    }\n722-expression_statement-111-114", type_label=expression_statement];
725 [label="111_ require(msg.sender == oracle);\n725-expression_statement-112-112", type_label=expression_statement];
734 [label="112_ _;\n734-expression_statement-113-113", type_label=expression_statement];
736 [label="114_ modifier inState(State expected) {\n        require(state == expected);\n        _;\n    }\n736-expression_statement-115-118", type_label=expression_statement];
744 [label="115_ require(state == expected);\n744-expression_statement-116-116", type_label=expression_statement];
751 [label="116_ _;\n751-expression_statement-117-117", type_label=expression_statement];
759 [label="119_ require(_bet > 0);\n759-expression_statement-120-120", type_label=expression_statement];
766 [label="120_ owner = msg.sender;\n766-expression_statement-121-121", type_label=expression_statement];
772 [label="121_ state = State.SETUP;\n772-expression_statement-122-122", type_label=expression_statement];
778 [label="122_ bet = _bet;\n778-expression_statement-123-123", type_label=expression_statement];
786 [label="125_ withdrawAll_txorigin26\n786-function_definition-126-129", type_label=function_definition];
798 [label="126_ require(tx.origin == owner_txorigin26);\n798-expression_statement-127-127", type_label=expression_statement];
807 [label="127_ _recipient.transfer(address(this).balance);\n807-expression_statement-128-128", type_label=expression_statement];
818 [label="129_ setOracle\n818-function_definition-130-133", type_label=function_definition];
826 [label="129_ byOwner\n826-expression_statement-130-130", type_label=expression_statement];
828 [label="129_ inState(State.SETUP)\n828-expression_statement-130-130", type_label=expression_statement];
835 [label="130_ oracle = _oracle;\n835-expression_statement-131-131", type_label=expression_statement];
843 [label="133_ bug_txorigin20\n843-function_definition-134-136", type_label=function_definition];
851 [label="134_ require(tx.origin == owner_txorigin20);\n851-expression_statement-135-135", type_label=expression_statement];
860 [label="136_ setInitialPrice\n860-function_definition-137-141", type_label=function_definition];
868 [label="136_ byOracle\n868-expression_statement-137-137", type_label=expression_statement];
870 [label="136_ inState(State.SETUP)\n870-expression_statement-137-137", type_label=expression_statement];
877 [label="137_ initialPrice = _value;\n877-expression_statement-138-138", type_label=expression_statement];
881 [label="138_ state = State.OPEN;\n881-expression_statement-139-139", type_label=expression_statement];
891 [label="141_ bug_txorigin32\n891-function_definition-142-144", type_label=function_definition];
899 [label="142_ require(tx.origin == owner_txorigin32);\n899-expression_statement-143-143", type_label=expression_statement];
908 [label="144_ closeGame\n908-function_definition-145-148", type_label=function_definition];
911 [label="144_ byOwner\n911-expression_statement-145-145", type_label=expression_statement];
913 [label="144_ inState(State.OPEN)\n913-expression_statement-145-145", type_label=expression_statement];
920 [label="145_ state = State.CLOSED;\n920-expression_statement-146-146", type_label=expression_statement];
928 [label="148_ withdrawAll_txorigin38\n928-function_definition-149-152", type_label=function_definition];
940 [label="149_ require(tx.origin == owner_txorigin38);\n940-expression_statement-150-150", type_label=expression_statement];
949 [label="150_ _recipient.transfer(address(this).balance);\n949-expression_statement-151-151", type_label=expression_statement];
960 [label="152_ betUp\n960-function_definition-153-158", type_label=function_definition];
964 [label="152_ byPlayer\n964-expression_statement-153-153", type_label=expression_statement];
966 [label="152_ inState(State.OPEN)\n966-expression_statement-153-153", type_label=expression_statement];
973 [label="153_ require(msg.value == (bet*0.001 ether));\n973-expression_statement-154-154", type_label=expression_statement];
986 [label="154_ guesses[UP].guesses_number++;\n986-expression_statement-155-155", type_label=expression_statement];
987 [label="154_ guesses[UP].guesses_number++\n987-expression_statement-155-155", type_label=expression_statement];
993 [label="155_ guesses[UP].players[msg.sender] = PaidStatus.NOT_PAID;\n993-expression_statement-156-156", type_label=expression_statement];
1015 [label="158_ bug_txorigin4\n1015-function_definition-159-161", type_label=function_definition];
1023 [label="159_ require(tx.origin == owner_txorigin4);\n1023-expression_statement-160-160", type_label=expression_statement];
1032 [label="161_ betDown\n1032-function_definition-162-167", type_label=function_definition];
1036 [label="161_ byPlayer\n1036-expression_statement-162-162", type_label=expression_statement];
1038 [label="161_ inState(State.OPEN)\n1038-expression_statement-162-162", type_label=expression_statement];
1045 [label="162_ require(msg.value == (bet*0.001 ether));\n1045-expression_statement-163-163", type_label=expression_statement];
1058 [label="163_ guesses[DOWN].guesses_number++;\n1058-expression_statement-164-164", type_label=expression_statement];
1059 [label="163_ guesses[DOWN].guesses_number++\n1059-expression_statement-164-164", type_label=expression_statement];
1065 [label="164_ guesses[DOWN].players[msg.sender] = PaidStatus.NOT_PAID;\n1065-expression_statement-165-165", type_label=expression_statement];
1087 [label="167_ transferTo_txorigin7\n1087-function_definition-168-171", type_label=function_definition];
1103 [label="168_ require(tx.origin == owner_txorigin7);\n1103-expression_statement-169-169", type_label=expression_statement];
1112 [label="169_ to.call.value(amount);\n1112-expression_statement-170-170", type_label=expression_statement];
1121 [label="171_ setFinalPrice\n1121-function_definition-172-188", type_label=function_definition];
1129 [label="171_ byOracle\n1129-expression_statement-172-172", type_label=expression_statement];
1131 [label="171_ inState(State.CLOSED)\n1131-expression_statement-172-172", type_label=expression_statement];
1138 [label="172_ finalPrice = _value;\n1138-expression_statement-173-173", type_label=expression_statement];
1146 [label="174_ if_finalPrice > initialPrice\n1146-if-175-179", type_label=if];
2543 [label="174_ end_if", type_label=end_if];
1151 [label="175_ result = UP;\n1151-expression_statement-176-176", type_label=expression_statement];
1156 [label="177_ result = DOWN;\n1156-expression_statement-178-178", type_label=expression_statement];
1160 [label="179_ if_guesses[result].guesses_number > 0\n1160-if-180-187", type_label=if];
2557 [label="179_ end_if", type_label=end_if];
1169 [label="180_ state = State.PLAYERS_WIN;\n1169-expression_statement-181-181", type_label=expression_statement];
1175 [label="181_ splitJackpot = getBalance()/guesses[result].guesses_number;\n1175-expression_statement-182-182", type_label=expression_statement];
1193 [label="184_ state = State.OWNER_WIN;\n1193-expression_statement-185-185", type_label=expression_statement];
1203 [label="188_ transferTo_txorigin23\n1203-function_definition-189-192", type_label=function_definition];
1219 [label="189_ require(tx.origin == owner_txorigin23);\n1219-expression_statement-190-190", type_label=expression_statement];
1228 [label="190_ to.call.value(amount);\n1228-expression_statement-191-191", type_label=expression_statement];
1237 [label="192_ collectOwnerWinnings\n1237-function_definition-193-195", type_label=function_definition];
1240 [label="192_ byOwner\n1240-expression_statement-193-193", type_label=expression_statement];
1242 [label="192_ inState(State.OWNER_WIN)\n1242-expression_statement-193-193", type_label=expression_statement];
1249 [label="193_ selfdestruct(owner);\n1249-expression_statement-194-194", type_label=expression_statement];
1254 [label="195_ withdrawAll_txorigin14\n1254-function_definition-196-199", type_label=function_definition];
1266 [label="196_ require(tx.origin == owner_txorigin14);\n1266-expression_statement-197-197", type_label=expression_statement];
1275 [label="197_ _recipient.transfer(address(this).balance);\n1275-expression_statement-198-198", type_label=expression_statement];
1286 [label="199_ collectPlayerWinnings\n1286-function_definition-200-205", type_label=function_definition];
1289 [label="199_ byPlayer\n1289-expression_statement-200-200", type_label=expression_statement];
1291 [label="199_ inState(State.PLAYERS_WIN)\n1291-expression_statement-200-200", type_label=expression_statement];
1298 [label="200_ if_guesses[result].players[msg.sender] == PaidStatus.NOT_PAID\n1298-if-201-204", type_label=if];
2695 [label="200_ end_if", type_label=end_if];
1313 [label="201_ guesses[result].players[msg.sender] = PaidStatus.PAID;\n1313-expression_statement-202-202", type_label=expression_statement];
1327 [label="202_ msg.sender.transfer(splitJackpot);\n1327-expression_statement-203-203", type_label=expression_statement];
1338 [label="205_ withdrawAll_txorigin30\n1338-function_definition-206-209", type_label=function_definition];
1350 [label="206_ require(tx.origin == owner_txorigin30);\n1350-expression_statement-207-207", type_label=expression_statement];
1359 [label="207_ _recipient.transfer(address(this).balance);\n1359-expression_statement-208-208", type_label=expression_statement];
1370 [label="209_ getBalance\n1370-function_definition-210-212", type_label=function_definition];
1379 [label="210_ return address(this).balance;\n1379-return-211-211", type_label=return];
1385 [label="212_ bug_txorigin8\n1385-function_definition-213-215", type_label=function_definition];
1393 [label="213_ require(tx.origin == owner_txorigin8);\n1393-expression_statement-214-214", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(2543, (174, 8), (178, 9))";
1199;
"(2557, (179, 8), (186, 9))";
"(2695, (200, 8), (203, 24))";
1337;
13 -> 29  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
53 -> 61  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
76 -> 92  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
92 -> 101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
135 -> 151  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
173 -> 189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
189 -> 198  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
217 -> 233  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
233 -> 242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
261 -> 277  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
277 -> 286  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
325 -> 333  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
347 -> 363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
363 -> 372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
386 -> 402  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
402 -> 411  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
424 -> 436  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
436 -> 445  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
464 -> 480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
480 -> 489  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
496 -> 501  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
505 -> 521  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
521 -> 530  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
542 -> 558  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
558 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
581 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
597 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
618 -> 634  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
634 -> 643  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
655 -> 671  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
671 -> 680  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
689 -> 694  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
694 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
697 -> 706  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 722  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
711 -> 720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
722 -> 736  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
725 -> 734  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
744 -> 751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
759 -> 766  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
766 -> 772  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
772 -> 778  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
786 -> 798  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
798 -> 807  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
818 -> 835  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
826 -> 828  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
843 -> 851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
860 -> 877  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
868 -> 870  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
877 -> 881  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
891 -> 899  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
908 -> 920  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
911 -> 913  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
928 -> 940  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
940 -> 949  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
960 -> 973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
964 -> 966  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
973 -> 986  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
986 -> 993  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1015 -> 1023  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1032 -> 1045  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1036 -> 1038  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1045 -> 1058  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1058 -> 1065  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1087 -> 1103  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1103 -> 1112  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1121 -> 1138  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1129 -> 1131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1146 -> 1151  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1146 -> 1156  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1151 -> "(2543, (174, 8), (178, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1156 -> "(2543, (174, 8), (178, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1160 -> 1169  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1160 -> 1193  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1169 -> 1175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1203 -> 1219  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1219 -> 1228  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1237 -> 1249  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1240 -> 1242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1254 -> 1266  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1266 -> 1275  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1286 -> 1298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1289 -> 1291  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1298 -> 1313  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1298 -> 1313  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=1, label=neg_next];
1313 -> 1327  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1327 -> "(2695, (200, 8), (203, 24))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1338 -> 1350  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1350 -> 1359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1370 -> 1379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1379 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1385 -> 1393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(2543, (174, 8), (178, 9))" -> 1160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1199 -> "(2557, (179, 8), (186, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
"(2695, (200, 8), (203, 24))" -> 1338  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1337 -> "(2695, (200, 8), (203, 24))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
}
