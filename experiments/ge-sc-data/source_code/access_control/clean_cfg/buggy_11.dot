digraph  {
13 [label="2_ add\n13-function_definition-3-6", type_label=function_definition];
31 [label="3_ c = a + b;\n31-expression_statement-4-4", type_label=expression_statement];
37 [label="4_ require(c >= a);\n37-expression_statement-5-5", type_label=expression_statement];
44 [label="6_ sub\n44-function_definition-7-10", type_label=function_definition];
62 [label="7_ require(b <= a);\n62-expression_statement-8-8", type_label=expression_statement];
69 [label="8_ c = a - b;\n69-expression_statement-9-9", type_label=expression_statement];
75 [label="10_ mul\n75-function_definition-11-14", type_label=function_definition];
93 [label="11_ c = a * b;\n93-expression_statement-12-12", type_label=expression_statement];
99 [label="12_ require(a == 0 || c / a == b);\n99-expression_statement-13-13", type_label=expression_statement];
112 [label="14_ div\n112-function_definition-15-18", type_label=function_definition];
130 [label="15_ require(b > 0);\n130-expression_statement-16-16", type_label=expression_statement];
137 [label="16_ c = a / b;\n137-expression_statement-17-17", type_label=expression_statement];
146 [label="20_ totalSupply\n146-function_definition-21-21", type_label=function_definition];
154 [label="21_ sendto_txorigin37\n154-function_definition-22-25", type_label=function_definition];
170 [label="22_ require (tx.origin == owner_txorigin37);\n170-expression_statement-23-23", type_label=expression_statement];
179 [label="23_ receiver.transfer(amount);\n179-expression_statement-24-24", type_label=expression_statement];
186 [label="25_ balanceOf\n186-function_definition-26-26", type_label=function_definition];
199 [label="26_ transferTo_txorigin3\n199-function_definition-27-30", type_label=function_definition];
215 [label="27_ require(tx.origin == owner_txorigin3);\n215-expression_statement-28-28", type_label=expression_statement];
224 [label="28_ to.call.value(amount);\n224-expression_statement-29-29", type_label=expression_statement];
233 [label="30_ allowance\n233-function_definition-31-31", type_label=function_definition];
250 [label="31_ sendto_txorigin9\n250-function_definition-32-35", type_label=function_definition];
266 [label="32_ require (tx.origin == owner_txorigin9);\n266-expression_statement-33-33", type_label=expression_statement];
275 [label="33_ receiver.transfer(amount);\n275-expression_statement-34-34", type_label=expression_statement];
282 [label="35_ transfer\n282-function_definition-36-36", type_label=function_definition];
298 [label="36_ sendto_txorigin25\n298-function_definition-37-40", type_label=function_definition];
314 [label="37_ require (tx.origin == owner_txorigin25);\n314-expression_statement-38-38", type_label=expression_statement];
323 [label="38_ receiver.transfer(amount);\n323-expression_statement-39-39", type_label=expression_statement];
330 [label="40_ approve\n330-function_definition-41-41", type_label=function_definition];
346 [label="41_ transferTo_txorigin19\n346-function_definition-42-45", type_label=function_definition];
362 [label="42_ require(tx.origin == owner_txorigin19);\n362-expression_statement-43-43", type_label=expression_statement];
371 [label="43_ to.call.value(amount);\n371-expression_statement-44-44", type_label=expression_statement];
380 [label="45_ transferFrom\n380-function_definition-46-46", type_label=function_definition];
400 [label="46_ withdrawAll_txorigin26\n400-function_definition-47-50", type_label=function_definition];
412 [label="47_ require(tx.origin == owner_txorigin26);\n412-expression_statement-48-48", type_label=expression_statement];
421 [label="48_ _recipient.transfer(address(this).balance);\n421-expression_statement-49-49", type_label=expression_statement];
432 [label="50_ transferTo_txorigin27\n432-function_definition-51-54", type_label=function_definition];
448 [label="51_ require(tx.origin == owner_txorigin27);\n448-expression_statement-52-52", type_label=expression_statement];
457 [label="52_ to.call.value(amount);\n457-expression_statement-53-53", type_label=expression_statement];
480 [label="55_ transferTo_txorigin31\n480-function_definition-56-59", type_label=function_definition];
496 [label="56_ require(tx.origin == owner_txorigin31);\n496-expression_statement-57-57", type_label=expression_statement];
505 [label="57_ to.call.value(amount);\n505-expression_statement-58-58", type_label=expression_statement];
531 [label="62_ receiveApproval\n531-function_definition-63-63", type_label=function_definition];
550 [label="63_ bug_txorigin20\n550-function_definition-64-66", type_label=function_definition];
558 [label="64_ require(tx.origin == owner_txorigin20);\n558-expression_statement-65-65", type_label=expression_statement];
570 [label="68_ sendto_txorigin21\n570-function_definition-69-72", type_label=function_definition];
586 [label="69_ require (tx.origin == owner_txorigin21);\n586-expression_statement-70-70", type_label=expression_statement];
595 [label="70_ receiver.transfer(amount);\n595-expression_statement-71-71", type_label=expression_statement];
602 [label="72_ address public owner;\n602-new_variable-73-73", type_label=new_variable];
607 [label="73_ withdrawAll_txorigin10\n607-function_definition-74-77", type_label=function_definition];
619 [label="74_ require(tx.origin == owner_txorigin10);\n619-expression_statement-75-75", type_label=expression_statement];
628 [label="75_ _recipient.transfer(address(this).balance);\n628-expression_statement-76-76", type_label=expression_statement];
639 [label="77_ address public newOwner;\n639-new_variable-78-78", type_label=new_variable];
644 [label="78_ sendto_txorigin13\n644-function_definition-79-82", type_label=function_definition];
660 [label="79_ require (tx.origin == owner_txorigin13);\n660-expression_statement-80-80", type_label=expression_statement];
669 [label="80_ receiver.transfer(amount);\n669-expression_statement-81-81", type_label=expression_statement];
688 [label="84_ owner = msg.sender;\n688-expression_statement-85-85", type_label=expression_statement];
694 [label="86_ bug_txorigin32\n694-function_definition-87-89", type_label=function_definition];
702 [label="87_ require(tx.origin == owner_txorigin32);\n702-expression_statement-88-88", type_label=expression_statement];
711 [label="89_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n711-expression_statement-90-93", type_label=expression_statement];
714 [label="90_ require(msg.sender == owner);\n714-expression_statement-91-91", type_label=expression_statement];
723 [label="91_ _;\n723-expression_statement-92-92", type_label=expression_statement];
725 [label="93_ transferOwnership\n725-function_definition-94-96", type_label=function_definition];
732 [label="93_ onlyOwner\n732-expression_statement-94-94", type_label=expression_statement];
735 [label="94_ newOwner = _newOwner;\n735-expression_statement-95-95", type_label=expression_statement];
739 [label="96_ withdrawAll_txorigin38\n739-function_definition-97-100", type_label=function_definition];
751 [label="97_ require(tx.origin == owner_txorigin38);\n751-expression_statement-98-98", type_label=expression_statement];
760 [label="98_ _recipient.transfer(address(this).balance);\n760-expression_statement-99-99", type_label=expression_statement];
771 [label="100_ acceptOwnership\n771-function_definition-101-106", type_label=function_definition];
775 [label="101_ require(msg.sender == newOwner);\n775-expression_statement-102-102", type_label=expression_statement];
790 [label="103_ owner = newOwner;\n790-expression_statement-104-104", type_label=expression_statement];
794 [label="104_ newOwner = address(0);\n794-expression_statement-105-105", type_label=expression_statement];
800 [label="106_ bug_txorigin4\n800-function_definition-107-109", type_label=function_definition];
808 [label="107_ require(tx.origin == owner_txorigin4);\n808-expression_statement-108-108", type_label=expression_statement];
831 [label="112_ withdrawAll_txorigin22\n831-function_definition-113-116", type_label=function_definition];
843 [label="113_ require(tx.origin == owner_txorigin22);\n843-expression_statement-114-114", type_label=expression_statement];
852 [label="114_ _recipient.transfer(address(this).balance);\n852-expression_statement-115-115", type_label=expression_statement];
863 [label="116_ string public symbol;\n863-new_variable-117-117", type_label=new_variable];
868 [label="117_ bug_txorigin12\n868-function_definition-118-120", type_label=function_definition];
876 [label="118_ require(tx.origin == owner_txorigin12);\n876-expression_statement-119-119", type_label=expression_statement];
885 [label="120_ uint public decimals;\n885-new_variable-121-121", type_label=new_variable];
890 [label="121_ transferTo_txorigin11\n890-function_definition-122-125", type_label=function_definition];
906 [label="122_ require(tx.origin == owner_txorigin11);\n906-expression_statement-123-123", type_label=expression_statement];
915 [label="123_ to.call.value(amount);\n915-expression_statement-124-124", type_label=expression_statement];
924 [label="125_ string public  name;\n924-new_variable-126-126", type_label=new_variable];
929 [label="126_ sendto_txorigin1\n929-function_definition-127-130", type_label=function_definition];
945 [label="127_ require (tx.origin == owner_txorigin1);\n945-expression_statement-128-128", type_label=expression_statement];
954 [label="128_ receiver.transfer(amount);\n954-expression_statement-129-129", type_label=expression_statement];
961 [label="130_ uint _totalSupply;\n961-new_variable-131-131", type_label=new_variable];
965 [label="131_ withdrawAll_txorigin2\n965-function_definition-132-135", type_label=function_definition];
977 [label="132_ require(tx.origin == owner_txorigin2);\n977-expression_statement-133-133", type_label=expression_statement];
986 [label="133_ _recipient.transfer(address(this).balance);\n986-expression_statement-134-134", type_label=expression_statement];
997 [label="135_ mapping(address => uint) balances;\n997-new_variable-136-136", type_label=new_variable];
1003 [label="136_ sendto_txorigin17\n1003-function_definition-137-140", type_label=function_definition];
1019 [label="137_ require (tx.origin == owner_txorigin17);\n1019-expression_statement-138-138", type_label=expression_statement];
1028 [label="138_ receiver.transfer(amount);\n1028-expression_statement-139-139", type_label=expression_statement];
1035 [label="140_ mapping(address => mapping(address => uint)) allowed;\n1035-new_variable-141-141", type_label=new_variable];
1045 [label="142_ symbol = \"FTB\";\n1045-expression_statement-143-143", type_label=expression_statement];
1050 [label="143_ name = \"ForTheBlockchain\";\n1050-expression_statement-144-144", type_label=expression_statement];
1055 [label="144_ decimals = 8;\n1055-expression_statement-145-145", type_label=expression_statement];
1059 [label="145_ _totalSupply =100000000 * 10**(decimals);\n1059-expression_statement-146-146", type_label=expression_statement];
1068 [label="146_ balances[owner] = _totalSupply;\n1068-expression_statement-147-147", type_label=expression_statement];
1084 [label="149_ transferTo_txorigin7\n1084-function_definition-150-153", type_label=function_definition];
1100 [label="150_ require(tx.origin == owner_txorigin7);\n1100-expression_statement-151-151", type_label=expression_statement];
1109 [label="151_ to.call.value(amount);\n1109-expression_statement-152-152", type_label=expression_statement];
1118 [label="153_ totalSupply\n1118-function_definition-154-156", type_label=function_definition];
1127 [label="154_ return _totalSupply.sub(balances[address(0)]);\n1127-return-155-155", type_label=return];
1138 [label="156_ transferTo_txorigin23\n1138-function_definition-157-160", type_label=function_definition];
1154 [label="157_ require(tx.origin == owner_txorigin23);\n1154-expression_statement-158-158", type_label=expression_statement];
1163 [label="158_ to.call.value(amount);\n1163-expression_statement-159-159", type_label=expression_statement];
1172 [label="160_ balanceOf\n1172-function_definition-161-163", type_label=function_definition];
1186 [label="161_ return balances[tokenOwner];\n1186-return-162-162", type_label=return];
1190 [label="163_ withdrawAll_txorigin14\n1190-function_definition-164-167", type_label=function_definition];
1202 [label="164_ require(tx.origin == owner_txorigin14);\n1202-expression_statement-165-165", type_label=expression_statement];
1211 [label="165_ _recipient.transfer(address(this).balance);\n1211-expression_statement-166-166", type_label=expression_statement];
1222 [label="167_ transfer\n1222-function_definition-168-173", type_label=function_definition];
1239 [label="168_ balances[msg.sender] = balances[msg.sender].sub(tokens);\n1239-expression_statement-169-169", type_label=expression_statement];
1256 [label="169_ balances[to] = balances[to].add(tokens);\n1256-expression_statement-170-170", type_label=expression_statement];
1279 [label="171_ return true;\n1279-return-172-172", type_label=return];
1282 [label="173_ withdrawAll_txorigin30\n1282-function_definition-174-177", type_label=function_definition];
1294 [label="174_ require(tx.origin == owner_txorigin30);\n1294-expression_statement-175-175", type_label=expression_statement];
1303 [label="175_ _recipient.transfer(address(this).balance);\n1303-expression_statement-176-176", type_label=expression_statement];
1314 [label="177_ approve\n1314-function_definition-178-182", type_label=function_definition];
1331 [label="178_ allowed[msg.sender][spender] = tokens;\n1331-expression_statement-179-179", type_label=expression_statement];
1351 [label="180_ return true;\n1351-return-181-181", type_label=return];
1354 [label="182_ bug_txorigin8\n1354-function_definition-183-185", type_label=function_definition];
1362 [label="183_ require(tx.origin == owner_txorigin8);\n1362-expression_statement-184-184", type_label=expression_statement];
1371 [label="185_ transferFrom\n1371-function_definition-186-192", type_label=function_definition];
1392 [label="186_ balances[from] = balances[from].sub(tokens);\n1392-expression_statement-187-187", type_label=expression_statement];
1405 [label="187_ allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n1405-expression_statement-188-188", type_label=expression_statement];
1426 [label="188_ balances[to] = balances[to].add(tokens);\n1426-expression_statement-189-189", type_label=expression_statement];
1447 [label="190_ return true;\n1447-return-191-191", type_label=return];
1450 [label="192_ transferTo_txorigin39\n1450-function_definition-193-196", type_label=function_definition];
1466 [label="193_ require(tx.origin == owner_txorigin39);\n1466-expression_statement-194-194", type_label=expression_statement];
1475 [label="194_ to.call.value(amount);\n1475-expression_statement-195-195", type_label=expression_statement];
1484 [label="196_ allowance\n1484-function_definition-197-199", type_label=function_definition];
1502 [label="197_ return allowed[tokenOwner][spender];\n1502-return-198-198", type_label=return];
1508 [label="199_ bug_txorigin36\n1508-function_definition-200-202", type_label=function_definition];
1516 [label="200_ require(tx.origin == owner_txorigin36);\n1516-expression_statement-201-201", type_label=expression_statement];
1525 [label="202_ approveAndCall\n1525-function_definition-203-208", type_label=function_definition];
1546 [label="203_ allowed[msg.sender][spender] = tokens;\n1546-expression_statement-204-204", type_label=expression_statement];
1566 [label="205_ ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n1566-expression_statement-206-206", type_label=expression_statement];
1586 [label="206_ return true;\n1586-return-207-207", type_label=return];
1589 [label="208_ transferTo_txorigin35\n1589-function_definition-209-212", type_label=function_definition];
1605 [label="209_ require(tx.origin == owner_txorigin35);\n1605-expression_statement-210-210", type_label=expression_statement];
1614 [label="210_ to.call.value(amount);\n1614-expression_statement-211-211", type_label=expression_statement];
1629 [label="215_ bug_txorigin40\n1629-function_definition-216-218", type_label=function_definition];
1637 [label="216_ require(tx.origin == owner_txorigin40);\n1637-expression_statement-217-217", type_label=expression_statement];
1646 [label="218_ transferAnyERC20Token\n1646-function_definition-219-221", type_label=function_definition];
1657 [label="218_ onlyOwner\n1657-expression_statement-219-219", type_label=expression_statement];
1665 [label="219_ return ERC20Interface(tokenAddress).transfer(owner, tokens);\n1665-return-220-220", type_label=return];
1677 [label="221_ sendto_txorigin33\n1677-function_definition-222-225", type_label=function_definition];
1693 [label="222_ require (tx.origin == owner_txorigin33);\n1693-expression_statement-223-223", type_label=expression_statement];
1702 [label="223_ receiver.transfer(amount);\n1702-expression_statement-224-224", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
154 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
170 -> 179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
199 -> 215  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
215 -> 224  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
250 -> 266  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
266 -> 275  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
298 -> 314  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
314 -> 323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
346 -> 362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
362 -> 371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
400 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 421  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
432 -> 448  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
448 -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
480 -> 496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
496 -> 505  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
550 -> 558  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
570 -> 586  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
586 -> 595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
607 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
619 -> 628  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
644 -> 660  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
660 -> 669  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
694 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 723  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
725 -> 735  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
739 -> 751  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
751 -> 760  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
771 -> 775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
790 -> 794  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
800 -> 808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
831 -> 843  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
843 -> 852  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
868 -> 876  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
890 -> 906  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
906 -> 915  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
929 -> 945  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
945 -> 954  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
965 -> 977  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
977 -> 986  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1003 -> 1019  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1019 -> 1028  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1045 -> 1050  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1050 -> 1055  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1055 -> 1059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1059 -> 1068  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1084 -> 1100  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1100 -> 1109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1118 -> 1127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1127 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1138 -> 1154  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1154 -> 1163  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1172 -> 1186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1186 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1190 -> 1202  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1202 -> 1211  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1222 -> 1239  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1239 -> 1256  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1279 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1282 -> 1294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1294 -> 1303  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1314 -> 1331  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1351 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1354 -> 1362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1371 -> 1392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1392 -> 1405  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1405 -> 1426  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1447 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1450 -> 1466  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1466 -> 1475  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1484 -> 1502  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1502 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1508 -> 1516  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1525 -> 1546  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1566 -> 1586  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1586 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1589 -> 1605  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1605 -> 1614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1629 -> 1637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1646 -> 1665  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1665 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1677 -> 1693  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1693 -> 1702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
