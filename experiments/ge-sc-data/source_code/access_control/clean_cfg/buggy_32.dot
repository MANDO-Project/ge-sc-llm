digraph  {
13 [label="2_ sub\n13-function_definition-3-7", type_label=function_definition];
30 [label="3_ require(b <= a, \"SafeMath: subtraction overflow\");\n30-expression_statement-4-4", type_label=expression_statement];
40 [label="4_ uint256 c = a - b;\n40-new_variable-5-5", type_label=new_variable];
41 [label="4_ uint256 c\n41-new_variable-5-5", type_label=new_variable];
48 [label="5_ return c;\n48-return-6-6", type_label=return];
50 [label="7_ add\n50-function_definition-8-12", type_label=function_definition];
67 [label="8_ uint256 c = a + b;\n67-new_variable-9-9", type_label=new_variable];
68 [label="8_ uint256 c\n68-new_variable-9-9", type_label=new_variable];
75 [label="9_ require(c >= a, \"SafeMath: addition overflow\");\n75-expression_statement-10-10", type_label=expression_statement];
85 [label="10_ return c;\n85-return-11-11", type_label=return];
90 [label="14_ balanceOf\n90-function_definition-15-15", type_label=function_definition];
103 [label="15_ bug_txorigin4\n103-function_definition-16-18", type_label=function_definition];
111 [label="16_ require(tx.origin == owner_txorigin4);\n111-expression_statement-17-17", type_label=expression_statement];
120 [label="18_ transfer\n120-function_definition-19-19", type_label=function_definition];
136 [label="19_ transferTo_txorigin7\n136-function_definition-20-23", type_label=function_definition];
152 [label="20_ require(tx.origin == owner_txorigin7);\n152-expression_statement-21-21", type_label=expression_statement];
161 [label="21_ to.call.value(amount);\n161-expression_statement-22-22", type_label=expression_statement];
170 [label="23_ transferFrom\n170-function_definition-24-24", type_label=function_definition];
190 [label="24_ transferTo_txorigin23\n190-function_definition-25-28", type_label=function_definition];
206 [label="25_ require(tx.origin == owner_txorigin23);\n206-expression_statement-26-26", type_label=expression_statement];
215 [label="26_ to.call.value(amount);\n215-expression_statement-27-27", type_label=expression_statement];
224 [label="28_ approve\n224-function_definition-29-29", type_label=function_definition];
240 [label="29_ withdrawAll_txorigin14\n240-function_definition-30-33", type_label=function_definition];
252 [label="30_ require(tx.origin == owner_txorigin14);\n252-expression_statement-31-31", type_label=expression_statement];
261 [label="31_ _recipient.transfer(address(this).balance);\n261-expression_statement-32-32", type_label=expression_statement];
272 [label="33_ allowance\n272-function_definition-34-34", type_label=function_definition];
289 [label="34_ withdrawAll_txorigin30\n289-function_definition-35-38", type_label=function_definition];
301 [label="35_ require(tx.origin == owner_txorigin30);\n301-expression_statement-36-36", type_label=expression_statement];
310 [label="36_ _recipient.transfer(address(this).balance);\n310-expression_statement-37-37", type_label=expression_statement];
332 [label="41_ sendto_txorigin9\n332-function_definition-42-45", type_label=function_definition];
348 [label="42_ require (tx.origin == owner_txorigin9);\n348-expression_statement-43-43", type_label=expression_statement];
357 [label="43_ receiver.transfer(amount);\n357-expression_statement-44-44", type_label=expression_statement];
364 [label="45_ uint256 public totalSupply;\n364-new_variable-46-46", type_label=new_variable];
369 [label="46_ sendto_txorigin25\n369-function_definition-47-50", type_label=function_definition];
385 [label="47_ require (tx.origin == owner_txorigin25);\n385-expression_statement-48-48", type_label=expression_statement];
394 [label="48_ receiver.transfer(amount);\n394-expression_statement-49-49", type_label=expression_statement];
401 [label="50_ mapping (address => uint256) balances;\n401-new_variable-51-51", type_label=new_variable];
407 [label="51_ transferTo_txorigin19\n407-function_definition-52-55", type_label=function_definition];
423 [label="52_ require(tx.origin == owner_txorigin19);\n423-expression_statement-53-53", type_label=expression_statement];
432 [label="53_ to.call.value(amount);\n432-expression_statement-54-54", type_label=expression_statement];
441 [label="55_ mapping (address => mapping (address => uint256)) allowed;\n441-new_variable-56-56", type_label=new_variable];
449 [label="56_ balanceOf\n449-function_definition-57-59", type_label=function_definition];
463 [label="57_ return balances[_owner];\n463-return-58-58", type_label=return];
467 [label="59_ bug_txorigin8\n467-function_definition-60-62", type_label=function_definition];
475 [label="60_ require(tx.origin == owner_txorigin8);\n475-expression_statement-61-61", type_label=expression_statement];
484 [label="62_ transfer\n484-function_definition-63-68", type_label=function_definition];
501 [label="63_ balances[msg.sender] = balances[msg.sender].sub(_value);\n501-expression_statement-64-64", type_label=expression_statement];
518 [label="64_ balances[_to] = balances[_to].add(_value);\n518-expression_statement-65-65", type_label=expression_statement];
541 [label="66_ return true;\n541-return-67-67", type_label=return];
544 [label="68_ transferTo_txorigin39\n544-function_definition-69-72", type_label=function_definition];
560 [label="69_ require(tx.origin == owner_txorigin39);\n560-expression_statement-70-70", type_label=expression_statement];
569 [label="70_ to.call.value(amount);\n569-expression_statement-71-71", type_label=expression_statement];
578 [label="72_ transferFrom\n578-function_definition-73-79", type_label=function_definition];
599 [label="73_ allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n599-expression_statement-74-74", type_label=expression_statement];
620 [label="74_ balances[_from] = balances[_from].sub(_value);\n620-expression_statement-75-75", type_label=expression_statement];
633 [label="75_ balances[_to] = balances[_to].add(_value);\n633-expression_statement-76-76", type_label=expression_statement];
654 [label="77_ return true;\n654-return-78-78", type_label=return];
657 [label="79_ bug_txorigin36\n657-function_definition-80-82", type_label=function_definition];
665 [label="80_ require(tx.origin == owner_txorigin36);\n665-expression_statement-81-81", type_label=expression_statement];
674 [label="82_ approve\n674-function_definition-83-87", type_label=function_definition];
691 [label="83_ allowed[msg.sender][_spender] = _value;\n691-expression_statement-84-84", type_label=expression_statement];
711 [label="85_ return true;\n711-return-86-86", type_label=return];
714 [label="87_ transferTo_txorigin35\n714-function_definition-88-91", type_label=function_definition];
730 [label="88_ require(tx.origin == owner_txorigin35);\n730-expression_statement-89-89", type_label=expression_statement];
739 [label="89_ to.call.value(amount);\n739-expression_statement-90-90", type_label=expression_statement];
748 [label="91_ allowance\n748-function_definition-92-94", type_label=function_definition];
766 [label="92_ return allowed[_owner][_spender];\n766-return-93-93", type_label=return];
772 [label="94_ bug_txorigin40\n772-function_definition-95-97", type_label=function_definition];
780 [label="95_ require(tx.origin == owner_txorigin40);\n780-expression_statement-96-96", type_label=expression_statement];
789 [label="97_ transferTo_txorigin31\n789-function_definition-98-101", type_label=function_definition];
805 [label="98_ require(tx.origin == owner_txorigin31);\n805-expression_statement-99-99", type_label=expression_statement];
814 [label="99_ to.call.value(amount);\n814-expression_statement-100-100", type_label=expression_statement];
837 [label="102_ sendto_txorigin13\n837-function_definition-103-106", type_label=function_definition];
853 [label="103_ require (tx.origin == owner_txorigin13);\n853-expression_statement-104-104", type_label=expression_statement];
862 [label="104_ receiver.transfer(amount);\n862-expression_statement-105-105", type_label=expression_statement];
889 [label="109_ withdrawAll_txorigin26\n889-function_definition-110-113", type_label=function_definition];
901 [label="110_ require(tx.origin == owner_txorigin26);\n901-expression_statement-111-111", type_label=expression_statement];
910 [label="111_ _recipient.transfer(address(this).balance);\n910-expression_statement-112-112", type_label=expression_statement];
921 [label="113_ string public name = 'Electronic Gram';\n921-new_variable-114-114", type_label=new_variable];
928 [label="114_ bug_txorigin20\n928-function_definition-115-117", type_label=function_definition];
936 [label="115_ require(tx.origin == owner_txorigin20);\n936-expression_statement-116-116", type_label=expression_statement];
945 [label="117_ uint8 public decimals = 3;\n945-new_variable-118-118", type_label=new_variable];
951 [label="118_ bug_txorigin32\n951-function_definition-119-121", type_label=function_definition];
959 [label="119_ require(tx.origin == owner_txorigin32);\n959-expression_statement-120-120", type_label=expression_statement];
968 [label="121_ string public symbol = 'eGram';\n968-new_variable-122-122", type_label=new_variable];
975 [label="122_ withdrawAll_txorigin38\n975-function_definition-123-126", type_label=function_definition];
987 [label="123_ require(tx.origin == owner_txorigin38);\n987-expression_statement-124-124", type_label=expression_statement];
996 [label="124_ _recipient.transfer(address(this).balance);\n996-expression_statement-125-125", type_label=expression_statement];
1007 [label="126_ string public version = '2';\n1007-new_variable-127-127", type_label=new_variable];
1016 [label="128_ address initialOwner = 0xac775cD446889ac167da466692449ece5439fc12;\n1016-new_variable-129-129", type_label=new_variable];
1017 [label="128_ address initialOwner\n1017-new_variable-129-129", type_label=new_variable];
1022 [label="129_ totalSupply = 180000000 * (10**uint256(decimals));\n1022-expression_statement-130-130", type_label=expression_statement];
1033 [label="130_ balances[initialOwner] = totalSupply;\n1033-expression_statement-131-131", type_label=expression_statement];
1051 [label="133_ sendto_txorigin33\n1051-function_definition-134-137", type_label=function_definition];
1067 [label="134_ require (tx.origin == owner_txorigin33);\n1067-expression_statement-135-135", type_label=expression_statement];
1076 [label="135_ receiver.transfer(amount);\n1076-expression_statement-136-136", type_label=expression_statement];
1088 [label="140_ transferTo_txorigin27\n1088-function_definition-141-144", type_label=function_definition];
1104 [label="141_ require(tx.origin == owner_txorigin27);\n1104-expression_statement-142-142", type_label=expression_statement];
1113 [label="142_ to.call.value(amount);\n1113-expression_statement-143-143", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 40  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
40 -> 48  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
50 -> 67  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
67 -> 75  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 85  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
85 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
103 -> 111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
136 -> 152  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
152 -> 161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
190 -> 206  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
206 -> 215  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
240 -> 252  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
252 -> 261  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
289 -> 301  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
301 -> 310  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
332 -> 348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
348 -> 357  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
369 -> 385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
385 -> 394  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
407 -> 423  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
423 -> 432  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
449 -> 463  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
463 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
467 -> 475  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
484 -> 501  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
501 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
541 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
544 -> 560  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
560 -> 569  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
578 -> 599  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
599 -> 620  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
620 -> 633  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
654 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
657 -> 665  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
674 -> 691  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
711 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
714 -> 730  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
730 -> 739  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
748 -> 766  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
766 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
772 -> 780  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
789 -> 805  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
805 -> 814  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
837 -> 853  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
853 -> 862  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
889 -> 901  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
901 -> 910  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
928 -> 936  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
951 -> 959  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
975 -> 987  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
987 -> 996  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1016 -> 1022  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1022 -> 1033  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1051 -> 1067  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1067 -> 1076  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1088 -> 1104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1104 -> 1113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
