digraph  {
13 [label="2_ uint private balance = 0;\n13-new_variable-3-3", type_label=new_variable];
19 [label="3_ uint private collectedFees = 0;\n19-new_variable-4-4", type_label=new_variable];
25 [label="4_ uint private feePercent = 10;\n25-new_variable-5-5", type_label=new_variable];
31 [label="5_ uint private pyramidMultiplier = 300;\n31-new_variable-6-6", type_label=new_variable];
37 [label="6_ uint private payoutOrder = 0;\n37-new_variable-7-7", type_label=new_variable];
43 [label="7_ address private creator;\n43-new_variable-8-8", type_label=new_variable];
48 [label="8_ DynamicPyramid\n48-function_definition-9-11", type_label=function_definition];
51 [label="9_ creator = msg.sender;\n51-expression_statement-10-10", type_label=expression_statement];
57 [label="11_ modifier onlyowner {\n                 if (msg.sender == creator) _;\n         }\n57-expression_statement-12-14", type_label=expression_statement];
60 [label="12_ if_msg.sender == creator\n60-if-13-13", type_label=if];
645 [label="12_ end_if", type_label=end_if];
66 [label="12_ _;\n66-expression_statement-13-13", type_label=expression_statement];
68 [label="14_ struct Participant {\n                 address etherAddress;\n                 uint payout;\n         }\n68-expression_statement-15-18", type_label=expression_statement];
78 [label="18_ Participant[] private participants;\n78-new_variable-19-19", type_label=new_variable];
87 [label="20_ init();\n87-expression_statement-21-21", type_label=expression_statement];
90 [label="22_ init\n90-function_definition-23-31", type_label=function_definition];
94 [label="23_ if_msg.value < 1 ether\n94-if-24-27", type_label=if];
679 [label="23_ end_if", type_label=end_if];
102 [label="24_ collectedFees += msg.value;\n102-expression_statement-25-25", type_label=expression_statement];
103 [label="24_ collectedFees += msg.value\n103-expression_statement-25-25", type_label=expression_statement];
108 [label="25_ return;\n108-return-26-26", type_label=return];
109 [label="27_ uint _fee = feePercent;\n109-new_variable-28-28", type_label=new_variable];
110 [label="27_ uint _fee\n110-new_variable-28-28", type_label=new_variable];
115 [label="28_ if_msg.value >= 50 ether\n115-if-29-29", type_label=if];
700 [label="28_ end_if", type_label=end_if];
122 [label="28_ _fee /= 2;\n122-expression_statement-29-29", type_label=expression_statement];
123 [label="28_ _fee /= 2\n123-expression_statement-29-29", type_label=expression_statement];
126 [label="29_ addPayout(_fee);\n126-expression_statement-30-30", type_label=expression_statement];
131 [label="31_ addPayout\n131-function_definition-32-44", type_label=function_definition];
139 [label="32_ participants.push(Participant(msg.sender, (msg.value * pyramidMultiplier) / 100));\n139-expression_statement-33-33", type_label=expression_statement];
160 [label="33_ if_participants.length == 10\n160-if-34-35", type_label=if];
745 [label="33_ end_if", type_label=end_if];
166 [label="33_ pyramidMultiplier = 200;\n166-expression_statement-34-34", type_label=expression_statement];
170 [label="34_ if_participants.length == 25\n170-if-35-35", type_label=if];
176 [label="34_ pyramidMultiplier = 150;\n176-expression_statement-35-35", type_label=expression_statement];
180 [label="35_ balance += (msg.value * (100 - _fee)) / 100;\n180-expression_statement-36-36", type_label=expression_statement];
181 [label="35_ balance += (msg.value * (100 - _fee)) / 100\n181-expression_statement-36-36", type_label=expression_statement];
194 [label="36_ collectedFees += (msg.value * _fee) / 100;\n194-expression_statement-37-37", type_label=expression_statement];
195 [label="36_ collectedFees += (msg.value * _fee) / 100\n195-expression_statement-37-37", type_label=expression_statement];
205 [label="37_ while\n205-while-38-43", type_label=while];
790 [label="37_ end_while", type_label=end_while];
214 [label="38_ uint payoutToSend = participants[payoutOrder].payout;\n214-new_variable-39-39", type_label=new_variable];
215 [label="38_ uint payoutToSend\n215-new_variable-39-39", type_label=new_variable];
224 [label="39_ participants[payoutOrder].etherAddress.send(payoutToSend);\n224-expression_statement-40-40", type_label=expression_statement];
235 [label="40_ balance -= participants[payoutOrder].payout;\n235-expression_statement-41-41", type_label=expression_statement];
236 [label="40_ balance -= participants[payoutOrder].payout\n236-expression_statement-41-41", type_label=expression_statement];
243 [label="41_ payoutOrder += 1;\n243-expression_statement-42-42", type_label=expression_statement];
244 [label="41_ payoutOrder += 1\n244-expression_statement-42-42", type_label=expression_statement];
247 [label="44_ collectAllFees\n247-function_definition-45-49", type_label=function_definition];
249 [label="44_ onlyowner\n249-expression_statement-45-45", type_label=expression_statement];
252 [label="45_ if_collectedFees == 0\n252-if-46-46", type_label=if];
837 [label="45_ end_if", type_label=end_if];
256 [label="45_ throw;\n256-expression_statement-46-46", type_label=expression_statement];
258 [label="46_ creator.send(collectedFees);\n258-expression_statement-47-47", type_label=expression_statement];
265 [label="47_ collectedFees = 0;\n265-expression_statement-48-48", type_label=expression_statement];
269 [label="49_ collectFeesInEther\n269-function_definition-50-56", type_label=function_definition];
275 [label="49_ onlyowner\n275-expression_statement-50-50", type_label=expression_statement];
278 [label="50_ _amt *= 1 ether;\n278-expression_statement-51-51", type_label=expression_statement];
279 [label="50_ _amt *= 1 ether\n279-expression_statement-51-51", type_label=expression_statement];
283 [label="51_ if__amt > collectedFees\n283-if-52-52", type_label=if];
868 [label="51_ end_if", type_label=end_if];
287 [label="51_ collectAllFees();\n287-expression_statement-52-52", type_label=expression_statement];
290 [label="52_ if_collectedFees == 0\n290-if-53-53", type_label=if];
875 [label="52_ end_if", type_label=end_if];
294 [label="52_ throw;\n294-expression_statement-53-53", type_label=expression_statement];
296 [label="53_ creator.send(_amt);\n296-expression_statement-54-54", type_label=expression_statement];
303 [label="54_ collectedFees -= _amt;\n303-expression_statement-55-55", type_label=expression_statement];
304 [label="54_ collectedFees -= _amt\n304-expression_statement-55-55", type_label=expression_statement];
307 [label="56_ collectPercentOfFees\n307-function_definition-57-62", type_label=function_definition];
313 [label="56_ onlyowner\n313-expression_statement-57-57", type_label=expression_statement];
316 [label="57_ if_collectedFees == 0 || _pcent > 100\n316-if-58-58", type_label=if];
901 [label="57_ end_if", type_label=end_if];
324 [label="57_ throw;\n324-expression_statement-58-58", type_label=expression_statement];
326 [label="58_ uint feesToCollect = collectedFees / 100 * _pcent;\n326-new_variable-59-59", type_label=new_variable];
327 [label="58_ uint feesToCollect\n327-new_variable-59-59", type_label=new_variable];
336 [label="59_ creator.send(feesToCollect);\n336-expression_statement-60-60", type_label=expression_statement];
343 [label="60_ collectedFees -= feesToCollect;\n343-expression_statement-61-61", type_label=expression_statement];
344 [label="60_ collectedFees -= feesToCollect\n344-expression_statement-61-61", type_label=expression_statement];
347 [label="62_ changeOwner\n347-function_definition-63-65", type_label=function_definition];
353 [label="62_ onlyowner\n353-expression_statement-63-63", type_label=expression_statement];
356 [label="63_ creator = _owner;\n356-expression_statement-64-64", type_label=expression_statement];
360 [label="65_ changeMultiplier\n360-function_definition-66-69", type_label=function_definition];
366 [label="65_ onlyowner\n366-expression_statement-66-66", type_label=expression_statement];
369 [label="66_ if__mult > 300 || _mult < 120\n369-if-67-67", type_label=if];
954 [label="66_ end_if", type_label=end_if];
377 [label="66_ throw;\n377-expression_statement-67-67", type_label=expression_statement];
379 [label="67_ pyramidMultiplier = _mult;\n379-expression_statement-68-68", type_label=expression_statement];
383 [label="69_ changeFeePercentage\n383-function_definition-70-73", type_label=function_definition];
389 [label="69_ onlyowner\n389-expression_statement-70-70", type_label=expression_statement];
392 [label="70_ if__fee > 10\n392-if-71-71", type_label=if];
977 [label="70_ end_if", type_label=end_if];
396 [label="70_ throw;\n396-expression_statement-71-71", type_label=expression_statement];
398 [label="71_ feePercent = _fee;\n398-expression_statement-72-72", type_label=expression_statement];
402 [label="73_ currentMultiplier\n402-function_definition-74-77", type_label=function_definition];
404 [label="73_ constant\n404-expression_statement-74-74", type_label=expression_statement];
416 [label="74_ multiplier = pyramidMultiplier;\n416-expression_statement-75-75", type_label=expression_statement];
420 [label="75_ info = 'This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.';\n420-expression_statement-76-76", type_label=expression_statement];
425 [label="77_ currentFeePercentage\n425-function_definition-78-81", type_label=function_definition];
427 [label="77_ constant\n427-expression_statement-78-78", type_label=expression_statement];
439 [label="78_ fee = feePercent;\n439-expression_statement-79-79", type_label=expression_statement];
443 [label="79_ info = 'Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum of 10%)';\n443-expression_statement-80-80", type_label=expression_statement];
448 [label="81_ currentPyramidBalanceApproximately\n448-function_definition-82-85", type_label=function_definition];
450 [label="81_ constant\n450-expression_statement-82-82", type_label=expression_statement];
462 [label="82_ pyramidBalance = balance / 1 ether;\n462-expression_statement-83-83", type_label=expression_statement];
469 [label="83_ info = 'All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to';\n469-expression_statement-84-84", type_label=expression_statement];
474 [label="85_ nextPayoutWhenPyramidBalanceTotalsApproximately\n474-function_definition-86-88", type_label=function_definition];
476 [label="85_ constant\n476-expression_statement-86-86", type_label=expression_statement];
484 [label="86_ balancePayout = participants[payoutOrder].payout / 1 ether;\n484-expression_statement-87-87", type_label=expression_statement];
495 [label="88_ feesSeperateFromBalanceApproximately\n495-function_definition-89-91", type_label=function_definition];
497 [label="88_ constant\n497-expression_statement-89-89", type_label=expression_statement];
505 [label="89_ fees = collectedFees / 1 ether;\n505-expression_statement-90-90", type_label=expression_statement];
512 [label="91_ totalParticipants\n512-function_definition-92-94", type_label=function_definition];
514 [label="91_ constant\n514-expression_statement-92-92", type_label=expression_statement];
522 [label="92_ count = participants.length;\n522-expression_statement-93-93", type_label=expression_statement];
528 [label="94_ numberOfParticipantsWaitingForPayout\n528-function_definition-95-97", type_label=function_definition];
530 [label="94_ constant\n530-expression_statement-95-95", type_label=expression_statement];
538 [label="95_ count = participants.length - payoutOrder;\n538-expression_statement-96-96", type_label=expression_statement];
546 [label="97_ participantDetails\n546-function_definition-98-103", type_label=function_definition];
552 [label="97_ constant\n552-expression_statement-98-98", type_label=expression_statement];
564 [label="98_ if_orderInPyramid <= participants.length\n564-if-99-102", type_label=if];
1149 [label="98_ end_if", type_label=end_if];
571 [label="99_ Address = participants[orderInPyramid].etherAddress;\n571-expression_statement-100-100", type_label=expression_statement];
579 [label="100_ Payout = participants[orderInPyramid].payout / 1 ether;\n579-expression_statement-101-101", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(645, (12, 17), (12, 46))";
"(679, (23, 17), (26, 18))";
"(700, (28, 17), (28, 54))";
"(745, (33, 17), (34, 77))";
"(790, (37, 17), (42, 18))";
"(837, (45, 17), (45, 47))";
"(868, (51, 17), (51, 60))";
"(875, (52, 17), (52, 47))";
"(901, (57, 17), (57, 63))";
"(954, (66, 17), (66, 55))";
"(977, (70, 17), (70, 38))";
"(1149, (98, 17), (101, 18))";
13 -> 19  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
19 -> 25  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
25 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
37 -> 43  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
48 -> 51  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
57 -> 68  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
60 -> 66  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
60 -> "(645, (12, 17), (12, 46))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
66 -> "(645, (12, 17), (12, 46))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
68 -> 78  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
90 -> 94  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
94 -> 102  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
94 -> "(679, (23, 17), (26, 18))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
102 -> 108  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
108 -> "(679, (23, 17), (26, 18))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
108 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
109 -> 115  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
115 -> 122  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
115 -> "(700, (28, 17), (28, 54))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
122 -> "(700, (28, 17), (28, 54))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
131 -> 139  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
139 -> 160  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 166  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
160 -> 170  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
166 -> "(745, (33, 17), (34, 77))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
170 -> 176  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
170 -> "(745, (33, 17), (34, 77))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
176 -> "(745, (33, 17), (34, 77))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
180 -> 194  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
194 -> 205  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
205 -> 214  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
205 -> "(790, (37, 17), (42, 18))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
214 -> 224  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
224 -> 235  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
235 -> 243  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
243 -> 205  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
247 -> 252  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
252 -> 256  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
252 -> "(837, (45, 17), (45, 47))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
256 -> "(837, (45, 17), (45, 47))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
258 -> 265  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
269 -> 278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
278 -> 283  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
283 -> 287  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
283 -> "(868, (51, 17), (51, 60))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
287 -> "(868, (51, 17), (51, 60))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
290 -> 294  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
290 -> "(875, (52, 17), (52, 47))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
294 -> "(875, (52, 17), (52, 47))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
296 -> 303  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
307 -> 316  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
316 -> 324  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
316 -> "(901, (57, 17), (57, 63))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
324 -> "(901, (57, 17), (57, 63))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
326 -> 336  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
336 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
347 -> 356  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
360 -> 369  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
369 -> 377  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
369 -> "(954, (66, 17), (66, 55))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
377 -> "(954, (66, 17), (66, 55))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
383 -> 392  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
392 -> 396  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
392 -> "(977, (70, 17), (70, 38))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
396 -> "(977, (70, 17), (70, 38))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
402 -> 416  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
416 -> 420  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
439 -> 443  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
448 -> 462  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
462 -> 469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
474 -> 484  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
495 -> 505  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
512 -> 522  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
528 -> 538  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
546 -> 564  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
564 -> 571  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
564 -> "(1149, (98, 17), (101, 18))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
571 -> 579  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
579 -> "(1149, (98, 17), (101, 18))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
"(645, (12, 17), (12, 46))" -> 68  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(645, (12, 17), (12, 46))" -> 68  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(679, (23, 17), (26, 18))" -> 109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(679, (23, 17), (26, 18))" -> 109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(700, (28, 17), (28, 54))" -> 126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(700, (28, 17), (28, 54))" -> 126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(745, (33, 17), (34, 77))" -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(745, (33, 17), (34, 77))" -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(790, (37, 17), (42, 18))" -> 247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(837, (45, 17), (45, 47))" -> 258  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(837, (45, 17), (45, 47))" -> 258  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(868, (51, 17), (51, 60))" -> 290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(868, (51, 17), (51, 60))" -> 290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(875, (52, 17), (52, 47))" -> 296  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(875, (52, 17), (52, 47))" -> 296  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(901, (57, 17), (57, 63))" -> 326  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(901, (57, 17), (57, 63))" -> 326  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(954, (66, 17), (66, 55))" -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(954, (66, 17), (66, 55))" -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(977, (70, 17), (70, 38))" -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(977, (70, 17), (70, 38))" -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(1149, (98, 17), (101, 18))" -> 2  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1149, (98, 17), (101, 18))" -> 2  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
}
