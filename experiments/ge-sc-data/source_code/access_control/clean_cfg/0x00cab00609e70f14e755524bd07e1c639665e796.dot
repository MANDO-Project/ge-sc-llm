digraph  {
12 [label="1_ receiveApproval\n12-function_definition-2-2", type_label=function_definition];
34 [label="3_ address public owner;\n34-new_variable-4-4", type_label=new_variable];
41 [label="5_ owner = msg.sender;\n41-expression_statement-6-6", type_label=expression_statement];
47 [label="7_ modifier onlyOwner {\n        require (msg.sender == owner);\n        _;\n    }\n47-expression_statement-8-11", type_label=expression_statement];
50 [label="8_ require (msg.sender == owner);\n50-expression_statement-9-9", type_label=expression_statement];
59 [label="9_ _;\n59-expression_statement-10-10", type_label=expression_statement];
61 [label="11_ transferOwnership\n61-function_definition-12-16", type_label=function_definition];
67 [label="11_ onlyOwner\n67-expression_statement-12-12", type_label=expression_statement];
71 [label="12_ if_newOwner != address(0)\n71-if-13-15", type_label=if];
78 [label="13_ owner = newOwner;\n78-expression_statement-14-14", type_label=expression_statement];
85 [label="18_ string public name;\n85-new_variable-19-19", type_label=new_variable];
90 [label="19_ string public symbol;\n90-new_variable-20-20", type_label=new_variable];
95 [label="20_ uint8 public decimals = 8;\n95-new_variable-21-21", type_label=new_variable];
101 [label="21_ uint256 public totalSupply;\n101-new_variable-22-22", type_label=new_variable];
106 [label="22_ mapping (address => uint256) public balances;\n106-new_variable-23-23", type_label=new_variable];
113 [label="23_ mapping (address => mapping (address => uint256)) public allowance;\n113-new_variable-24-24", type_label=new_variable];
160 [label="27_ totalSupply = initialSupply * 10 ** uint256(decimals);\n160-expression_statement-28-28", type_label=expression_statement];
170 [label="28_ balances[msg.sender] = totalSupply;\n170-expression_statement-29-29", type_label=expression_statement];
178 [label="29_ name = tokenName;\n178-expression_statement-30-30", type_label=expression_statement];
182 [label="30_ symbol = tokenSymbol;\n182-expression_statement-31-31", type_label=expression_statement];
186 [label="32_ balanceOf\n186-function_definition-33-35", type_label=function_definition];
193 [label="32_ constant\n193-expression_statement-33-33", type_label=expression_statement];
201 [label="33_ return balances[_owner];\n201-return-34-34", type_label=return];
205 [label="35_ _transfer\n205-function_definition-36-45", type_label=function_definition];
221 [label="36_ require(_to != 0x0);\n221-expression_statement-37-37", type_label=expression_statement];
228 [label="37_ require(balances[_from] >= _value);\n228-expression_statement-38-38", type_label=expression_statement];
237 [label="38_ require(balances[_to] + _value > balances[_to]);\n237-expression_statement-39-39", type_label=expression_statement];
250 [label="39_ uint previousBalances = balances[_from] + balances[_to];\n250-new_variable-40-40", type_label=new_variable];
251 [label="39_ uint previousBalances\n251-new_variable-40-40", type_label=new_variable];
262 [label="40_ balances[_from] -= _value;\n262-expression_statement-41-41", type_label=expression_statement];
263 [label="40_ balances[_from] -= _value\n263-expression_statement-41-41", type_label=expression_statement];
268 [label="41_ balances[_to] += _value;\n268-expression_statement-42-42", type_label=expression_statement];
269 [label="41_ balances[_to] += _value\n269-expression_statement-42-42", type_label=expression_statement];
282 [label="43_ assert(balances[_from] + balances[_to] == previousBalances);\n282-expression_statement-44-44", type_label=expression_statement];
295 [label="45_ transfer\n295-function_definition-46-48", type_label=function_definition];
307 [label="46_ _transfer(msg.sender, _to, _value);\n307-expression_statement-47-47", type_label=expression_statement];
318 [label="48_ transferFrom\n318-function_definition-49-54", type_label=function_definition];
339 [label="49_ require(_value <= allowance[_from][msg.sender]);\n339-expression_statement-50-50", type_label=expression_statement];
352 [label="50_ allowance[_from][msg.sender] -= _value;\n352-expression_statement-51-51", type_label=expression_statement];
353 [label="50_ allowance[_from][msg.sender] -= _value\n353-expression_statement-51-51", type_label=expression_statement];
362 [label="51_ _transfer(_from, _to, _value);\n362-expression_statement-52-52", type_label=expression_statement];
371 [label="52_ return true;\n371-return-53-53", type_label=return];
374 [label="54_ approve\n374-function_definition-55-58", type_label=function_definition];
391 [label="55_ allowance[msg.sender][_spender] = _value;\n391-expression_statement-56-56", type_label=expression_statement];
401 [label="56_ return true;\n401-return-57-57", type_label=return];
404 [label="58_ approveAndCall\n404-function_definition-59-65", type_label=function_definition];
425 [label="59_ tokenRecipient spender = tokenRecipient(_spender);\n425-new_variable-60-60", type_label=new_variable];
426 [label="59_ tokenRecipient spender\n426-new_variable-60-60", type_label=new_variable];
435 [label="60_ if\n435-if-61-64", type_label=if];
443 [label="61_ spender.receiveApproval(msg.sender, _value, this, _extraData);\n443-expression_statement-62-62", type_label=expression_statement];
458 [label="62_ return true;\n458-return-63-63", type_label=return];
461 [label="65_ burn\n461-function_definition-66-72", type_label=function_definition];
474 [label="66_ require(balances[msg.sender] >= _value);\n474-expression_statement-67-67", type_label=expression_statement];
485 [label="67_ balances[msg.sender] -= _value;\n485-expression_statement-68-68", type_label=expression_statement];
486 [label="67_ balances[msg.sender] -= _value\n486-expression_statement-68-68", type_label=expression_statement];
493 [label="68_ totalSupply -= _value;\n493-expression_statement-69-69", type_label=expression_statement];
494 [label="68_ totalSupply -= _value\n494-expression_statement-69-69", type_label=expression_statement];
505 [label="70_ return true;\n505-return-71-71", type_label=return];
508 [label="72_ burnFrom\n508-function_definition-73-81", type_label=function_definition];
525 [label="73_ require(balances[_from] >= _value);\n525-expression_statement-74-74", type_label=expression_statement];
534 [label="74_ require(_value <= allowance[_from][msg.sender]);\n534-expression_statement-75-75", type_label=expression_statement];
547 [label="75_ balances[_from] -= _value;\n547-expression_statement-76-76", type_label=expression_statement];
548 [label="75_ balances[_from] -= _value\n548-expression_statement-76-76", type_label=expression_statement];
553 [label="76_ allowance[_from][msg.sender] -= _value;\n553-expression_statement-77-77", type_label=expression_statement];
554 [label="76_ allowance[_from][msg.sender] -= _value\n554-expression_statement-77-77", type_label=expression_statement];
563 [label="77_ totalSupply -= _value;\n563-expression_statement-78-78", type_label=expression_statement];
564 [label="77_ totalSupply -= _value\n564-expression_statement-78-78", type_label=expression_statement];
573 [label="79_ return true;\n573-return-80-80", type_label=return];
585 [label="83_ mapping (address => bool) public frozenAccount;\n585-new_variable-84-84", type_label=new_variable];
615 [label="89_ token (initialSupply, tokenName, tokenSymbol)\n615-expression_statement-90-90", type_label=expression_statement];
624 [label="90_ _transfer\n624-function_definition-91-100", type_label=function_definition];
640 [label="91_ require (_to != 0x0);\n640-expression_statement-92-92", type_label=expression_statement];
647 [label="92_ require (balances[_from] > _value);\n647-expression_statement-93-93", type_label=expression_statement];
656 [label="93_ require (balances[_to] + _value > balances[_to]);\n656-expression_statement-94-94", type_label=expression_statement];
669 [label="94_ require(!frozenAccount[_from]);\n669-expression_statement-95-95", type_label=expression_statement];
677 [label="95_ require(!frozenAccount[_to]);\n677-expression_statement-96-96", type_label=expression_statement];
685 [label="96_ balances[_from] -= _value;\n685-expression_statement-97-97", type_label=expression_statement];
686 [label="96_ balances[_from] -= _value\n686-expression_statement-97-97", type_label=expression_statement];
691 [label="97_ balances[_to] += _value;\n691-expression_statement-98-98", type_label=expression_statement];
692 [label="97_ balances[_to] += _value\n692-expression_statement-98-98", type_label=expression_statement];
705 [label="100_ mintToken\n705-function_definition-101-106", type_label=function_definition];
715 [label="100_ onlyOwner\n715-expression_statement-101-101", type_label=expression_statement];
719 [label="101_ balances[target] += mintedAmount;\n719-expression_statement-102-102", type_label=expression_statement];
720 [label="101_ balances[target] += mintedAmount\n720-expression_statement-102-102", type_label=expression_statement];
725 [label="102_ totalSupply += mintedAmount;\n725-expression_statement-103-103", type_label=expression_statement];
726 [label="102_ totalSupply += mintedAmount\n726-expression_statement-103-103", type_label=expression_statement];
745 [label="106_ freezeAccount\n745-function_definition-107-110", type_label=function_definition];
755 [label="106_ onlyOwner\n755-expression_statement-107-107", type_label=expression_statement];
759 [label="107_ frozenAccount[target] = freeze;\n759-expression_statement-108-108", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
82;
50 -> 59  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
71 -> 78  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
71 -> 82  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
78 -> 82  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
85 -> 90  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
90 -> 95  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
95 -> 101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
101 -> 106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
106 -> 113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
170 -> 178  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
178 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
186 -> 201  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
201 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
205 -> 221  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
221 -> 228  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
228 -> 237  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
237 -> 250  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
250 -> 262  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
262 -> 268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
295 -> 307  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
318 -> 339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
339 -> 352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
352 -> 362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
362 -> 371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
371 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
374 -> 391  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
391 -> 401  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
404 -> 425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 435  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
435 -> 443  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
435 -> 461  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
443 -> 458  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
458 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
461 -> 474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
474 -> 485  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
485 -> 493  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
505 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
508 -> 525  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
525 -> 534  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
534 -> 547  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
547 -> 553  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
553 -> 563  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
573 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
624 -> 640  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
640 -> 647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
647 -> 656  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
656 -> 669  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
669 -> 677  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
677 -> 685  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
685 -> 691  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
705 -> 719  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
719 -> 725  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
745 -> 759  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
