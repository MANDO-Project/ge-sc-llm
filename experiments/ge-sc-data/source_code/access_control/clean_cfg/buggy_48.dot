digraph  {
13 [label="2_ add\n13-function_definition-3-6", type_label=function_definition];
31 [label="3_ c = a + b;\n31-expression_statement-4-4", type_label=expression_statement];
37 [label="4_ require(c >= a);\n37-expression_statement-5-5", type_label=expression_statement];
44 [label="6_ sub\n44-function_definition-7-10", type_label=function_definition];
62 [label="7_ require(b <= a);\n62-expression_statement-8-8", type_label=expression_statement];
69 [label="8_ c = a - b;\n69-expression_statement-9-9", type_label=expression_statement];
75 [label="10_ mul\n75-function_definition-11-14", type_label=function_definition];
93 [label="11_ c = a * b;\n93-expression_statement-12-12", type_label=expression_statement];
99 [label="12_ require(a == 0 || c / a == b);\n99-expression_statement-13-13", type_label=expression_statement];
112 [label="14_ div\n112-function_definition-15-18", type_label=function_definition];
130 [label="15_ require(b > 0);\n130-expression_statement-16-16", type_label=expression_statement];
137 [label="16_ c = a / b;\n137-expression_statement-17-17", type_label=expression_statement];
146 [label="20_ totalSupply\n146-function_definition-21-21", type_label=function_definition];
154 [label="21_ sendto_txorigin17\n154-function_definition-22-25", type_label=function_definition];
170 [label="22_ require (tx.origin == owner_txorigin17);\n170-expression_statement-23-23", type_label=expression_statement];
179 [label="23_ receiver.transfer(amount);\n179-expression_statement-24-24", type_label=expression_statement];
186 [label="25_ balanceOf\n186-function_definition-26-26", type_label=function_definition];
199 [label="26_ sendto_txorigin37\n199-function_definition-27-30", type_label=function_definition];
215 [label="27_ require (tx.origin == owner_txorigin37);\n215-expression_statement-28-28", type_label=expression_statement];
224 [label="28_ receiver.transfer(amount);\n224-expression_statement-29-29", type_label=expression_statement];
231 [label="30_ allowance\n231-function_definition-31-31", type_label=function_definition];
248 [label="31_ transferTo_txorigin3\n248-function_definition-32-35", type_label=function_definition];
264 [label="32_ require(tx.origin == owner_txorigin3);\n264-expression_statement-33-33", type_label=expression_statement];
273 [label="33_ to.call.value(amount);\n273-expression_statement-34-34", type_label=expression_statement];
282 [label="35_ transfer\n282-function_definition-36-36", type_label=function_definition];
298 [label="36_ sendto_txorigin9\n298-function_definition-37-40", type_label=function_definition];
314 [label="37_ require (tx.origin == owner_txorigin9);\n314-expression_statement-38-38", type_label=expression_statement];
323 [label="38_ receiver.transfer(amount);\n323-expression_statement-39-39", type_label=expression_statement];
330 [label="40_ approve\n330-function_definition-41-41", type_label=function_definition];
346 [label="41_ sendto_txorigin25\n346-function_definition-42-45", type_label=function_definition];
362 [label="42_ require (tx.origin == owner_txorigin25);\n362-expression_statement-43-43", type_label=expression_statement];
371 [label="43_ receiver.transfer(amount);\n371-expression_statement-44-44", type_label=expression_statement];
378 [label="45_ transferFrom\n378-function_definition-46-46", type_label=function_definition];
398 [label="46_ transferTo_txorigin19\n398-function_definition-47-50", type_label=function_definition];
414 [label="47_ require(tx.origin == owner_txorigin19);\n414-expression_statement-48-48", type_label=expression_statement];
423 [label="48_ to.call.value(amount);\n423-expression_statement-49-49", type_label=expression_statement];
432 [label="50_ transferTo_txorigin27\n432-function_definition-51-54", type_label=function_definition];
448 [label="51_ require(tx.origin == owner_txorigin27);\n448-expression_statement-52-52", type_label=expression_statement];
457 [label="52_ to.call.value(amount);\n457-expression_statement-53-53", type_label=expression_statement];
480 [label="55_ transferTo_txorigin31\n480-function_definition-56-59", type_label=function_definition];
496 [label="56_ require(tx.origin == owner_txorigin31);\n496-expression_statement-57-57", type_label=expression_statement];
505 [label="57_ to.call.value(amount);\n505-expression_statement-58-58", type_label=expression_statement];
531 [label="62_ receiveApproval\n531-function_definition-63-63", type_label=function_definition];
550 [label="63_ withdrawAll_txorigin26\n550-function_definition-64-67", type_label=function_definition];
562 [label="64_ require(tx.origin == owner_txorigin26);\n562-expression_statement-65-65", type_label=expression_statement];
571 [label="65_ _recipient.transfer(address(this).balance);\n571-expression_statement-66-66", type_label=expression_statement];
585 [label="69_ withdrawAll_txorigin34\n585-function_definition-70-73", type_label=function_definition];
597 [label="70_ require(tx.origin == owner_txorigin34);\n597-expression_statement-71-71", type_label=expression_statement];
606 [label="71_ _recipient.transfer(address(this).balance);\n606-expression_statement-72-72", type_label=expression_statement];
617 [label="73_ address public owner;\n617-new_variable-74-74", type_label=new_variable];
622 [label="74_ sendto_txorigin21\n622-function_definition-75-78", type_label=function_definition];
638 [label="75_ require (tx.origin == owner_txorigin21);\n638-expression_statement-76-76", type_label=expression_statement];
647 [label="76_ receiver.transfer(amount);\n647-expression_statement-77-77", type_label=expression_statement];
654 [label="78_ address public newOwner;\n654-new_variable-79-79", type_label=new_variable];
659 [label="79_ sendto_txorigin13\n659-function_definition-80-83", type_label=function_definition];
675 [label="80_ require (tx.origin == owner_txorigin13);\n675-expression_statement-81-81", type_label=expression_statement];
684 [label="81_ receiver.transfer(amount);\n684-expression_statement-82-82", type_label=expression_statement];
703 [label="85_ owner = msg.sender;\n703-expression_statement-86-86", type_label=expression_statement];
709 [label="87_ bug_txorigin20\n709-function_definition-88-90", type_label=function_definition];
717 [label="88_ require(tx.origin == owner_txorigin20);\n717-expression_statement-89-89", type_label=expression_statement];
726 [label="90_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n726-expression_statement-91-94", type_label=expression_statement];
729 [label="91_ require(msg.sender == owner);\n729-expression_statement-92-92", type_label=expression_statement];
738 [label="92_ _;\n738-expression_statement-93-93", type_label=expression_statement];
740 [label="94_ transferOwnership\n740-function_definition-95-97", type_label=function_definition];
747 [label="94_ onlyOwner\n747-expression_statement-95-95", type_label=expression_statement];
750 [label="95_ newOwner = _newOwner;\n750-expression_statement-96-96", type_label=expression_statement];
754 [label="97_ bug_txorigin32\n754-function_definition-98-100", type_label=function_definition];
762 [label="98_ require(tx.origin == owner_txorigin32);\n762-expression_statement-99-99", type_label=expression_statement];
771 [label="100_ acceptOwnership\n771-function_definition-101-106", type_label=function_definition];
775 [label="101_ require(msg.sender == newOwner);\n775-expression_statement-102-102", type_label=expression_statement];
790 [label="103_ owner = newOwner;\n790-expression_statement-104-104", type_label=expression_statement];
794 [label="104_ newOwner = address(0);\n794-expression_statement-105-105", type_label=expression_statement];
800 [label="106_ withdrawAll_txorigin38\n800-function_definition-107-110", type_label=function_definition];
812 [label="107_ require(tx.origin == owner_txorigin38);\n812-expression_statement-108-108", type_label=expression_statement];
821 [label="108_ _recipient.transfer(address(this).balance);\n821-expression_statement-109-109", type_label=expression_statement];
846 [label="113_ withdrawAll_txorigin10\n846-function_definition-114-117", type_label=function_definition];
858 [label="114_ require(tx.origin == owner_txorigin10);\n858-expression_statement-115-115", type_label=expression_statement];
867 [label="115_ _recipient.transfer(address(this).balance);\n867-expression_statement-116-116", type_label=expression_statement];
878 [label="117_ string public symbol;\n878-new_variable-118-118", type_label=new_variable];
883 [label="118_ withdrawAll_txorigin22\n883-function_definition-119-122", type_label=function_definition];
895 [label="119_ require(tx.origin == owner_txorigin22);\n895-expression_statement-120-120", type_label=expression_statement];
904 [label="120_ _recipient.transfer(address(this).balance);\n904-expression_statement-121-121", type_label=expression_statement];
915 [label="122_ string public  name;\n915-new_variable-123-123", type_label=new_variable];
920 [label="123_ bug_txorigin12\n920-function_definition-124-126", type_label=function_definition];
928 [label="124_ require(tx.origin == owner_txorigin12);\n928-expression_statement-125-125", type_label=expression_statement];
937 [label="126_ uint8 public decimals;\n937-new_variable-127-127", type_label=new_variable];
942 [label="127_ transferTo_txorigin11\n942-function_definition-128-131", type_label=function_definition];
958 [label="128_ require(tx.origin == owner_txorigin11);\n958-expression_statement-129-129", type_label=expression_statement];
967 [label="129_ to.call.value(amount);\n967-expression_statement-130-130", type_label=expression_statement];
976 [label="131_ uint _totalSupply;\n976-new_variable-132-132", type_label=new_variable];
980 [label="132_ sendto_txorigin1\n980-function_definition-133-136", type_label=function_definition];
996 [label="133_ require (tx.origin == owner_txorigin1);\n996-expression_statement-134-134", type_label=expression_statement];
1005 [label="134_ receiver.transfer(amount);\n1005-expression_statement-135-135", type_label=expression_statement];
1012 [label="136_ mapping(address => uint) balances;\n1012-new_variable-137-137", type_label=new_variable];
1018 [label="137_ withdrawAll_txorigin2\n1018-function_definition-138-141", type_label=function_definition];
1030 [label="138_ require(tx.origin == owner_txorigin2);\n1030-expression_statement-139-139", type_label=expression_statement];
1039 [label="139_ _recipient.transfer(address(this).balance);\n1039-expression_statement-140-140", type_label=expression_statement];
1050 [label="141_ mapping(address => mapping(address => uint)) allowed;\n1050-new_variable-142-142", type_label=new_variable];
1060 [label="143_ symbol = \"XQC\";\n1060-expression_statement-144-144", type_label=expression_statement];
1065 [label="144_ name = \"Quras Token\";\n1065-expression_statement-145-145", type_label=expression_statement];
1070 [label="145_ decimals = 8;\n1070-expression_statement-146-146", type_label=expression_statement];
1074 [label="146_ _totalSupply = 88888888800000000;\n1074-expression_statement-147-147", type_label=expression_statement];
1078 [label="147_ balances[owner] = _totalSupply;\n1078-expression_statement-148-148", type_label=expression_statement];
1094 [label="150_ bug_txorigin4\n1094-function_definition-151-153", type_label=function_definition];
1102 [label="151_ require(tx.origin == owner_txorigin4);\n1102-expression_statement-152-152", type_label=expression_statement];
1111 [label="153_ totalSupply\n1111-function_definition-154-156", type_label=function_definition];
1120 [label="154_ return _totalSupply.sub(balances[address(0)]);\n1120-return-155-155", type_label=return];
1131 [label="156_ transferTo_txorigin7\n1131-function_definition-157-160", type_label=function_definition];
1147 [label="157_ require(tx.origin == owner_txorigin7);\n1147-expression_statement-158-158", type_label=expression_statement];
1156 [label="158_ to.call.value(amount);\n1156-expression_statement-159-159", type_label=expression_statement];
1165 [label="160_ balanceOf\n1165-function_definition-161-163", type_label=function_definition];
1179 [label="161_ return balances[tokenOwner];\n1179-return-162-162", type_label=return];
1183 [label="163_ transferTo_txorigin23\n1183-function_definition-164-167", type_label=function_definition];
1199 [label="164_ require(tx.origin == owner_txorigin23);\n1199-expression_statement-165-165", type_label=expression_statement];
1208 [label="165_ to.call.value(amount);\n1208-expression_statement-166-166", type_label=expression_statement];
1217 [label="167_ transfer\n1217-function_definition-168-173", type_label=function_definition];
1234 [label="168_ balances[msg.sender] = balances[msg.sender].sub(tokens);\n1234-expression_statement-169-169", type_label=expression_statement];
1251 [label="169_ balances[to] = balances[to].add(tokens);\n1251-expression_statement-170-170", type_label=expression_statement];
1274 [label="171_ return true;\n1274-return-172-172", type_label=return];
1277 [label="173_ withdrawAll_txorigin14\n1277-function_definition-174-177", type_label=function_definition];
1289 [label="174_ require(tx.origin == owner_txorigin14);\n1289-expression_statement-175-175", type_label=expression_statement];
1298 [label="175_ _recipient.transfer(address(this).balance);\n1298-expression_statement-176-176", type_label=expression_statement];
1309 [label="177_ increaseApproval\n1309-function_definition-178-182", type_label=function_definition];
1325 [label="178_ allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n1325-expression_statement-179-179", type_label=expression_statement];
1362 [label="180_ return true;\n1362-return-181-181", type_label=return];
1365 [label="182_ withdrawAll_txorigin30\n1365-function_definition-183-186", type_label=function_definition];
1377 [label="183_ require(tx.origin == owner_txorigin30);\n1377-expression_statement-184-184", type_label=expression_statement];
1386 [label="184_ _recipient.transfer(address(this).balance);\n1386-expression_statement-185-185", type_label=expression_statement];
1397 [label="186_ decreaseApproval\n1397-function_definition-187-196", type_label=function_definition];
1413 [label="187_ uint oldValue = allowed[msg.sender][_spender];\n1413-new_variable-188-188", type_label=new_variable];
1414 [label="187_ uint oldValue\n1414-new_variable-188-188", type_label=new_variable];
1425 [label="188_ if__subtractedValue > oldValue\n1425-if-189-193", type_label=if];
3284 [label="188_ end_if", type_label=end_if];
1430 [label="189_ allowed[msg.sender][_spender] = 0;\n1430-expression_statement-190-190", type_label=expression_statement];
1441 [label="191_ allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n1441-expression_statement-192-192", type_label=expression_statement];
1472 [label="194_ return true;\n1472-return-195-195", type_label=return];
1475 [label="196_ bug_txorigin8\n1475-function_definition-197-199", type_label=function_definition];
1483 [label="197_ require(tx.origin == owner_txorigin8);\n1483-expression_statement-198-198", type_label=expression_statement];
1492 [label="199_ approve\n1492-function_definition-200-204", type_label=function_definition];
1509 [label="200_ allowed[msg.sender][spender] = tokens;\n1509-expression_statement-201-201", type_label=expression_statement];
1529 [label="202_ return true;\n1529-return-203-203", type_label=return];
1532 [label="204_ transferTo_txorigin39\n1532-function_definition-205-208", type_label=function_definition];
1548 [label="205_ require(tx.origin == owner_txorigin39);\n1548-expression_statement-206-206", type_label=expression_statement];
1557 [label="206_ to.call.value(amount);\n1557-expression_statement-207-207", type_label=expression_statement];
1566 [label="208_ transferFrom\n1566-function_definition-209-215", type_label=function_definition];
1587 [label="209_ balances[from] = balances[from].sub(tokens);\n1587-expression_statement-210-210", type_label=expression_statement];
1600 [label="210_ allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n1600-expression_statement-211-211", type_label=expression_statement];
1621 [label="211_ balances[to] = balances[to].add(tokens);\n1621-expression_statement-212-212", type_label=expression_statement];
1642 [label="213_ return true;\n1642-return-214-214", type_label=return];
1645 [label="215_ bug_txorigin36\n1645-function_definition-216-218", type_label=function_definition];
1653 [label="216_ require(tx.origin == owner_txorigin36);\n1653-expression_statement-217-217", type_label=expression_statement];
1662 [label="218_ allowance\n1662-function_definition-219-221", type_label=function_definition];
1680 [label="219_ return allowed[tokenOwner][spender];\n1680-return-220-220", type_label=return];
1686 [label="221_ transferTo_txorigin35\n1686-function_definition-222-225", type_label=function_definition];
1702 [label="222_ require(tx.origin == owner_txorigin35);\n1702-expression_statement-223-223", type_label=expression_statement];
1711 [label="223_ to.call.value(amount);\n1711-expression_statement-224-224", type_label=expression_statement];
1720 [label="225_ approveAndCall\n1720-function_definition-226-231", type_label=function_definition];
1741 [label="226_ allowed[msg.sender][spender] = tokens;\n1741-expression_statement-227-227", type_label=expression_statement];
1761 [label="228_ ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n1761-expression_statement-229-229", type_label=expression_statement];
1781 [label="229_ return true;\n1781-return-230-230", type_label=return];
1784 [label="231_ bug_txorigin40\n1784-function_definition-232-234", type_label=function_definition];
1792 [label="232_ require(tx.origin == owner_txorigin40);\n1792-expression_statement-233-233", type_label=expression_statement];
1801 [label="234_ transferAnyERC20Token\n1801-function_definition-235-237", type_label=function_definition];
1812 [label="234_ onlyOwner\n1812-expression_statement-235-235", type_label=expression_statement];
1820 [label="235_ return ERC20Interface(tokenAddress).transfer(owner, tokens);\n1820-return-236-236", type_label=return];
1832 [label="237_ sendto_txorigin33\n1832-function_definition-238-241", type_label=function_definition];
1848 [label="238_ require (tx.origin == owner_txorigin33);\n1848-expression_statement-239-239", type_label=expression_statement];
1857 [label="239_ receiver.transfer(amount);\n1857-expression_statement-240-240", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(3284, (188, 8), (192, 9))";
1456;
13 -> 31  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 69  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
112 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
154 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
170 -> 179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
199 -> 215  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
215 -> 224  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
248 -> 264  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
264 -> 273  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
298 -> 314  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
314 -> 323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
346 -> 362  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
362 -> 371  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
398 -> 414  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
414 -> 423  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
432 -> 448  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
448 -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
480 -> 496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
496 -> 505  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
550 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
562 -> 571  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
585 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
597 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
622 -> 638  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
638 -> 647  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
659 -> 675  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
675 -> 684  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
709 -> 717  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
729 -> 738  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
740 -> 750  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
754 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
771 -> 775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
790 -> 794  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
800 -> 812  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
812 -> 821  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
846 -> 858  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
858 -> 867  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
883 -> 895  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
895 -> 904  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
920 -> 928  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
942 -> 958  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
958 -> 967  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
980 -> 996  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
996 -> 1005  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1018 -> 1030  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1030 -> 1039  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1060 -> 1065  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1065 -> 1070  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1070 -> 1074  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1074 -> 1078  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1094 -> 1102  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1111 -> 1120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1120 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1131 -> 1147  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1147 -> 1156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1165 -> 1179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1179 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1183 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1199 -> 1208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1217 -> 1234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1234 -> 1251  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1274 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1277 -> 1289  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1289 -> 1298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1309 -> 1325  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1362 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1365 -> 1377  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1377 -> 1386  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1397 -> 1413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1413 -> 1425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1425 -> 1430  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1425 -> 1441  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1430 -> "(3284, (188, 8), (192, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1441 -> "(3284, (188, 8), (192, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1472 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1475 -> 1483  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1492 -> 1509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1529 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1532 -> 1548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1548 -> 1557  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1566 -> 1587  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1587 -> 1600  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1600 -> 1621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1642 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1645 -> 1653  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1662 -> 1680  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1680 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1686 -> 1702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1702 -> 1711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1720 -> 1741  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1761 -> 1781  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1781 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1784 -> 1792  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1801 -> 1820  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1820 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1832 -> 1848  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1848 -> 1857  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(3284, (188, 8), (192, 9))" -> 1456  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
