digraph  {
13 [label="3_ sendto_txorigin21\n13-function_definition-4-7", type_label=function_definition];
29 [label="4_ require (tx.origin == owner_txorigin21);\n29-expression_statement-5-5", type_label=expression_statement];
38 [label="5_ receiver.transfer(amount);\n38-expression_statement-6-6", type_label=expression_statement];
45 [label="7_ bool private stopped;\n45-new_variable-8-8", type_label=new_variable];
50 [label="8_ withdrawAll_txorigin10\n50-function_definition-9-12", type_label=function_definition];
62 [label="9_ require(tx.origin == owner_txorigin10);\n62-expression_statement-10-10", type_label=expression_statement];
71 [label="10_ _recipient.transfer(address(this).balance);\n71-expression_statement-11-11", type_label=expression_statement];
82 [label="12_ address private _owner;\n82-new_variable-13-13", type_label=new_variable];
87 [label="13_ withdrawAll_txorigin22\n87-function_definition-14-17", type_label=function_definition];
99 [label="14_ require(tx.origin == owner_txorigin22);\n99-expression_statement-15-15", type_label=expression_statement];
108 [label="15_ _recipient.transfer(address(this).balance);\n108-expression_statement-16-16", type_label=expression_statement];
119 [label="17_ address private _master;\n119-new_variable-18-18", type_label=new_variable];
124 [label="18_ bug_txorigin36\n124-function_definition-19-21", type_label=function_definition];
132 [label="19_ require(tx.origin == owner_txorigin36);\n132-expression_statement-20-20", type_label=expression_statement];
143 [label="22_ transferTo_txorigin35\n143-function_definition-23-26", type_label=function_definition];
159 [label="23_ require(tx.origin == owner_txorigin35);\n159-expression_statement-24-24", type_label=expression_statement];
168 [label="24_ to.call.value(amount);\n168-expression_statement-25-25", type_label=expression_statement];
179 [label="27_ bug_txorigin40\n179-function_definition-28-30", type_label=function_definition];
187 [label="28_ require(tx.origin == owner_txorigin40);\n187-expression_statement-29-29", type_label=expression_statement];
206 [label="31_ sendto_txorigin33\n206-function_definition-32-35", type_label=function_definition];
222 [label="32_ require (tx.origin == owner_txorigin33);\n222-expression_statement-33-33", type_label=expression_statement];
231 [label="33_ receiver.transfer(amount);\n231-expression_statement-34-34", type_label=expression_statement];
250 [label="38_ stopped = false;\n250-expression_statement-39-39", type_label=expression_statement];
255 [label="39_ _owner = msg.sender;\n255-expression_statement-40-40", type_label=expression_statement];
261 [label="40_ _master = msg.sender;\n261-expression_statement-41-41", type_label=expression_statement];
283 [label="44_ sendto_txorigin1\n283-function_definition-45-48", type_label=function_definition];
299 [label="45_ require (tx.origin == owner_txorigin1);\n299-expression_statement-46-46", type_label=expression_statement];
308 [label="46_ receiver.transfer(amount);\n308-expression_statement-47-47", type_label=expression_statement];
315 [label="48_ owner\n315-function_definition-49-52", type_label=function_definition];
324 [label="50_ return _owner;\n324-return-51-51", type_label=return];
326 [label="52_ withdrawAll_txorigin2\n326-function_definition-53-56", type_label=function_definition];
338 [label="53_ require(tx.origin == owner_txorigin2);\n338-expression_statement-54-54", type_label=expression_statement];
347 [label="54_ _recipient.transfer(address(this).balance);\n347-expression_statement-55-55", type_label=expression_statement];
358 [label="56_ master\n358-function_definition-57-60", type_label=function_definition];
367 [label="58_ return _master;\n367-return-59-59", type_label=return];
369 [label="60_ sendto_txorigin17\n369-function_definition-61-64", type_label=function_definition];
385 [label="61_ require (tx.origin == owner_txorigin17);\n385-expression_statement-62-62", type_label=expression_statement];
394 [label="62_ receiver.transfer(amount);\n394-expression_statement-63-63", type_label=expression_statement];
401 [label="64_ modifier onlyOwner()\n    {\n        require(isOwner());\n        _;\n    }\n401-expression_statement-65-69", type_label=expression_statement];
404 [label="66_ require(isOwner());\n404-expression_statement-67-67", type_label=expression_statement];
410 [label="67_ _;\n410-expression_statement-68-68", type_label=expression_statement];
412 [label="69_ modifier onlyMaster()\n    {\n        require(isMaster() || isOwner());\n        _;\n    }\n412-expression_statement-70-74", type_label=expression_statement];
415 [label="71_ require(isMaster() || isOwner());\n415-expression_statement-72-72", type_label=expression_statement];
424 [label="72_ _;\n424-expression_statement-73-73", type_label=expression_statement];
426 [label="74_ modifier onlyWhenNotStopped()\n    {\n        require(!isStopped());\n        _;\n    }\n426-expression_statement-75-79", type_label=expression_statement];
429 [label="76_ require(!isStopped());\n429-expression_statement-77-77", type_label=expression_statement];
436 [label="77_ _;\n436-expression_statement-78-78", type_label=expression_statement];
438 [label="79_ isOwner\n438-function_definition-80-83", type_label=function_definition];
447 [label="81_ return msg.sender == _owner;\n447-return-82-82", type_label=return];
453 [label="83_ sendto_txorigin37\n453-function_definition-84-87", type_label=function_definition];
469 [label="84_ require (tx.origin == owner_txorigin37);\n469-expression_statement-85-85", type_label=expression_statement];
478 [label="85_ receiver.transfer(amount);\n478-expression_statement-86-86", type_label=expression_statement];
485 [label="87_ isMaster\n485-function_definition-88-91", type_label=function_definition];
494 [label="89_ return msg.sender == _master;\n494-return-90-90", type_label=return];
500 [label="91_ transferTo_txorigin3\n500-function_definition-92-95", type_label=function_definition];
516 [label="92_ require(tx.origin == owner_txorigin3);\n516-expression_statement-93-93", type_label=expression_statement];
525 [label="93_ to.call.value(amount);\n525-expression_statement-94-94", type_label=expression_statement];
534 [label="95_ transferOwnership\n534-function_definition-96-99", type_label=function_definition];
541 [label="95_ onlyOwner\n541-expression_statement-96-96", type_label=expression_statement];
544 [label="97_ _transferOwnership(newOwner);\n544-expression_statement-98-98", type_label=expression_statement];
549 [label="99_ sendto_txorigin9\n549-function_definition-100-103", type_label=function_definition];
565 [label="100_ require (tx.origin == owner_txorigin9);\n565-expression_statement-101-101", type_label=expression_statement];
574 [label="101_ receiver.transfer(amount);\n574-expression_statement-102-102", type_label=expression_statement];
581 [label="103_ transferMasterRole\n581-function_definition-104-107", type_label=function_definition];
588 [label="103_ onlyOwner\n588-expression_statement-104-104", type_label=expression_statement];
591 [label="105_ _transferMasterRole(newMaster);\n591-expression_statement-106-106", type_label=expression_statement];
596 [label="107_ sendto_txorigin25\n596-function_definition-108-111", type_label=function_definition];
612 [label="108_ require (tx.origin == owner_txorigin25);\n612-expression_statement-109-109", type_label=expression_statement];
621 [label="109_ receiver.transfer(amount);\n621-expression_statement-110-110", type_label=expression_statement];
628 [label="111_ isStopped\n628-function_definition-112-115", type_label=function_definition];
637 [label="113_ return stopped;\n637-return-114-114", type_label=return];
639 [label="115_ transferTo_txorigin19\n639-function_definition-116-119", type_label=function_definition];
655 [label="116_ require(tx.origin == owner_txorigin19);\n655-expression_statement-117-117", type_label=expression_statement];
664 [label="117_ to.call.value(amount);\n664-expression_statement-118-118", type_label=expression_statement];
673 [label="119_ stop\n673-function_definition-120-123", type_label=function_definition];
676 [label="119_ onlyOwner\n676-expression_statement-120-120", type_label=expression_statement];
679 [label="121_ _stop();\n679-expression_statement-122-122", type_label=expression_statement];
682 [label="123_ withdrawAll_txorigin26\n682-function_definition-124-127", type_label=function_definition];
694 [label="124_ require(tx.origin == owner_txorigin26);\n694-expression_statement-125-125", type_label=expression_statement];
703 [label="125_ _recipient.transfer(address(this).balance);\n703-expression_statement-126-126", type_label=expression_statement];
714 [label="127_ start\n714-function_definition-128-131", type_label=function_definition];
717 [label="127_ onlyOwner\n717-expression_statement-128-128", type_label=expression_statement];
720 [label="129_ _start();\n720-expression_statement-130-130", type_label=expression_statement];
723 [label="131_ bug_txorigin20\n723-function_definition-132-134", type_label=function_definition];
731 [label="132_ require(tx.origin == owner_txorigin20);\n731-expression_statement-133-133", type_label=expression_statement];
740 [label="134_ _transferOwnership\n740-function_definition-135-140", type_label=function_definition];
748 [label="136_ require(newOwner != address(0));\n748-expression_statement-137-137", type_label=expression_statement];
763 [label="138_ _owner = newOwner;\n763-expression_statement-139-139", type_label=expression_statement];
767 [label="140_ bug_txorigin32\n767-function_definition-141-143", type_label=function_definition];
775 [label="141_ require(tx.origin == owner_txorigin32);\n775-expression_statement-142-142", type_label=expression_statement];
784 [label="143_ _transferMasterRole\n784-function_definition-144-149", type_label=function_definition];
792 [label="145_ require(newMaster != address(0));\n792-expression_statement-146-146", type_label=expression_statement];
807 [label="147_ _master = newMaster;\n807-expression_statement-148-148", type_label=expression_statement];
811 [label="149_ withdrawAll_txorigin38\n811-function_definition-150-153", type_label=function_definition];
823 [label="150_ require(tx.origin == owner_txorigin38);\n823-expression_statement-151-151", type_label=expression_statement];
832 [label="151_ _recipient.transfer(address(this).balance);\n832-expression_statement-152-152", type_label=expression_statement];
843 [label="153_ _stop\n843-function_definition-154-158", type_label=function_definition];
849 [label="156_ stopped = true;\n849-expression_statement-157-157", type_label=expression_statement];
854 [label="158_ bug_txorigin4\n854-function_definition-159-161", type_label=function_definition];
862 [label="159_ require(tx.origin == owner_txorigin4);\n862-expression_statement-160-160", type_label=expression_statement];
871 [label="161_ _start\n871-function_definition-162-166", type_label=function_definition];
877 [label="164_ stopped = false;\n877-expression_statement-165-165", type_label=expression_statement];
882 [label="166_ transferTo_txorigin7\n882-function_definition-167-170", type_label=function_definition];
898 [label="167_ require(tx.origin == owner_txorigin7);\n898-expression_statement-168-168", type_label=expression_statement];
907 [label="168_ to.call.value(amount);\n907-expression_statement-169-169", type_label=expression_statement];
922 [label="173_ bug_txorigin12\n922-function_definition-174-176", type_label=function_definition];
930 [label="174_ require(tx.origin == owner_txorigin12);\n930-expression_statement-175-175", type_label=expression_statement];
939 [label="176_ mapping(string => string) private btc;\n939-new_variable-177-177", type_label=new_variable];
946 [label="177_ transferTo_txorigin11\n946-function_definition-178-181", type_label=function_definition];
962 [label="178_ require(tx.origin == owner_txorigin11);\n962-expression_statement-179-179", type_label=expression_statement];
971 [label="179_ to.call.value(amount);\n971-expression_statement-180-180", type_label=expression_statement];
980 [label="181_ mapping(string => address) private eth;\n980-new_variable-182-182", type_label=new_variable];
987 [label="182_ transferTo_txorigin27\n987-function_definition-183-186", type_label=function_definition];
1003 [label="183_ require(tx.origin == owner_txorigin27);\n1003-expression_statement-184-184", type_label=expression_statement];
1012 [label="184_ to.call.value(amount);\n1012-expression_statement-185-185", type_label=expression_statement];
1035 [label="187_ transferTo_txorigin31\n1035-function_definition-188-191", type_label=function_definition];
1051 [label="188_ require(tx.origin == owner_txorigin31);\n1051-expression_statement-189-189", type_label=expression_statement];
1060 [label="189_ to.call.value(amount);\n1060-expression_statement-190-190", type_label=expression_statement];
1079 [label="192_ sendto_txorigin13\n1079-function_definition-193-196", type_label=function_definition];
1095 [label="193_ require (tx.origin == owner_txorigin13);\n1095-expression_statement-194-194", type_label=expression_statement];
1104 [label="194_ receiver.transfer(amount);\n1104-expression_statement-195-195", type_label=expression_statement];
1117 [label="197_ version\n1117-function_definition-198-201", type_label=function_definition];
1126 [label="199_ return '1.0.0';\n1126-return-200-200", type_label=return];
1129 [label="201_ transferTo_txorigin23\n1129-function_definition-202-205", type_label=function_definition];
1145 [label="202_ require(tx.origin == owner_txorigin23);\n1145-expression_statement-203-203", type_label=expression_statement];
1154 [label="203_ to.call.value(amount);\n1154-expression_statement-204-204", type_label=expression_statement];
1163 [label="205_ getAddress\n1163-function_definition-206-209", type_label=function_definition];
1179 [label="207_ return (btc[account], eth[account]);\n1179-return-208-208", type_label=return];
1187 [label="209_ withdrawAll_txorigin14\n1187-function_definition-210-213", type_label=function_definition];
1199 [label="210_ require(tx.origin == owner_txorigin14);\n1199-expression_statement-211-211", type_label=expression_statement];
1208 [label="211_ _recipient.transfer(address(this).balance);\n1208-expression_statement-212-212", type_label=expression_statement];
1219 [label="213_ setAddress\n1219-function_definition-214-220", type_label=function_definition];
1234 [label="213_ onlyMaster\n1234-expression_statement-214-214", type_label=expression_statement];
1236 [label="213_ onlyWhenNotStopped\n1236-expression_statement-214-214", type_label=expression_statement];
1239 [label="215_ require(bytes(account).length > 0);\n1239-expression_statement-216-216", type_label=expression_statement];
1250 [label="216_ btc[account] = btcAddress;\n1250-expression_statement-217-217", type_label=expression_statement];
1256 [label="217_ eth[account] = ethAddress;\n1256-expression_statement-218-218", type_label=expression_statement];
1270 [label="220_ withdrawAll_txorigin30\n1270-function_definition-221-224", type_label=function_definition];
1282 [label="221_ require(tx.origin == owner_txorigin30);\n1282-expression_statement-222-222", type_label=expression_statement];
1291 [label="222_ _recipient.transfer(address(this).balance);\n1291-expression_statement-223-223", type_label=expression_statement];
1302 [label="224_ updateAccount\n1302-function_definition-225-234", type_label=function_definition];
1313 [label="224_ onlyMaster\n1313-expression_statement-225-225", type_label=expression_statement];
1315 [label="224_ onlyWhenNotStopped\n1315-expression_statement-225-225", type_label=expression_statement];
1318 [label="226_ require(bytes(from).length > 0);\n1318-expression_statement-227-227", type_label=expression_statement];
1329 [label="227_ require(bytes(to).length > 0);\n1329-expression_statement-228-228", type_label=expression_statement];
1340 [label="228_ btc[to] = btc[from];\n1340-expression_statement-229-229", type_label=expression_statement];
1348 [label="229_ eth[to] = eth[from];\n1348-expression_statement-230-230", type_label=expression_statement];
1356 [label="230_ btc[from] = '';\n1356-expression_statement-231-231", type_label=expression_statement];
1363 [label="231_ eth[from] = address(0);\n1363-expression_statement-232-232", type_label=expression_statement];
1377 [label="234_ bug_txorigin8\n1377-function_definition-235-237", type_label=function_definition];
1385 [label="235_ require(tx.origin == owner_txorigin8);\n1385-expression_statement-236-236", type_label=expression_statement];
1394 [label="237_ deleteAccount\n1394-function_definition-238-244", type_label=function_definition];
1401 [label="237_ onlyMaster\n1401-expression_statement-238-238", type_label=expression_statement];
1403 [label="237_ onlyWhenNotStopped\n1403-expression_statement-238-238", type_label=expression_statement];
1406 [label="239_ require(bytes(account).length > 0);\n1406-expression_statement-240-240", type_label=expression_statement];
1417 [label="240_ btc[account] = '';\n1417-expression_statement-241-241", type_label=expression_statement];
1424 [label="241_ eth[account] = address(0);\n1424-expression_statement-242-242", type_label=expression_statement];
1436 [label="244_ transferTo_txorigin39\n1436-function_definition-245-248", type_label=function_definition];
1452 [label="245_ require(tx.origin == owner_txorigin39);\n1452-expression_statement-246-246", type_label=expression_statement];
1461 [label="246_ to.call.value(amount);\n1461-expression_statement-247-247", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 29  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
50 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 71  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
99 -> 108  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
124 -> 132  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
143 -> 159  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
159 -> 168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
179 -> 187  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
206 -> 222  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
222 -> 231  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
250 -> 255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
255 -> 261  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
283 -> 299  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
299 -> 308  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
315 -> 324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
324 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
326 -> 338  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
338 -> 347  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
358 -> 367  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
367 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
369 -> 385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
385 -> 394  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
401 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
404 -> 410  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 426  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
415 -> 424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
429 -> 436  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 447  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
447 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
453 -> 469  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
469 -> 478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
485 -> 494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
494 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
500 -> 516  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
516 -> 525  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
534 -> 544  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
549 -> 565  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
565 -> 574  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
581 -> 591  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
596 -> 612  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
612 -> 621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
628 -> 637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
637 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
639 -> 655  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
655 -> 664  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
673 -> 679  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
682 -> 694  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
694 -> 703  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
723 -> 731  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
740 -> 748  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
767 -> 775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
784 -> 792  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
811 -> 823  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
823 -> 832  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
843 -> 849  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
854 -> 862  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
871 -> 877  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
882 -> 898  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
898 -> 907  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
922 -> 930  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
946 -> 962  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
962 -> 971  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
987 -> 1003  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1003 -> 1012  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1035 -> 1051  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1051 -> 1060  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1079 -> 1095  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1095 -> 1104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1117 -> 1126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1126 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1129 -> 1145  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1145 -> 1154  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1163 -> 1179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1179 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1187 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1199 -> 1208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1219 -> 1239  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1234 -> 1236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1239 -> 1250  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1250 -> 1256  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1270 -> 1282  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1282 -> 1291  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1302 -> 1318  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1313 -> 1315  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1318 -> 1329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1329 -> 1340  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1340 -> 1348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1348 -> 1356  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1356 -> 1363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1377 -> 1385  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1394 -> 1406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1401 -> 1403  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1406 -> 1417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1417 -> 1424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1436 -> 1452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1452 -> 1461  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
