digraph  {
13 [label="2_ bug_txorigin24\n13-function_definition-3-5", type_label=function_definition];
21 [label="3_ require(tx.origin == owner_txorigin24);\n21-expression_statement-4-4", type_label=expression_statement];
30 [label="5_ address public owner;\n30-new_variable-6-6", type_label=new_variable];
37 [label="7_ owner = msg.sender;\n37-expression_statement-8-8", type_label=expression_statement];
43 [label="9_ transferTo_txorigin11\n43-function_definition-10-13", type_label=function_definition];
59 [label="10_ require(tx.origin == owner_txorigin11);\n59-expression_statement-11-11", type_label=expression_statement];
68 [label="11_ to.call.value(amount);\n68-expression_statement-12-12", type_label=expression_statement];
77 [label="13_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n77-expression_statement-14-17", type_label=expression_statement];
80 [label="14_ require(msg.sender == owner);\n80-expression_statement-15-15", type_label=expression_statement];
89 [label="15_ _;\n89-expression_statement-16-16", type_label=expression_statement];
91 [label="17_ transferOwnership\n91-function_definition-18-20", type_label=function_definition];
97 [label="17_ onlyOwner\n97-expression_statement-18-18", type_label=expression_statement];
101 [label="18_ owner = newOwner;\n101-expression_statement-19-19", type_label=expression_statement];
105 [label="20_ sendto_txorigin1\n105-function_definition-21-24", type_label=function_definition];
121 [label="21_ require (tx.origin == owner_txorigin1);\n121-expression_statement-22-22", type_label=expression_statement];
130 [label="22_ receiver.transfer(amount);\n130-expression_statement-23-23", type_label=expression_statement];
140 [label="26_ transferTo_txorigin39\n140-function_definition-27-30", type_label=function_definition];
156 [label="27_ require(tx.origin == owner_txorigin39);\n156-expression_statement-28-28", type_label=expression_statement];
165 [label="28_ to.call.value(amount);\n165-expression_statement-29-29", type_label=expression_statement];
184 [label="31_ bug_txorigin36\n184-function_definition-32-34", type_label=function_definition];
192 [label="32_ require(tx.origin == owner_txorigin36);\n192-expression_statement-33-33", type_label=expression_statement];
219 [label="35_ receiveApproval\n219-function_definition-36-40", type_label=function_definition];
239 [label="36_ Token t = Token(_token);\n239-new_variable-37-37", type_label=new_variable];
240 [label="36_ Token t\n240-new_variable-37-37", type_label=new_variable];
249 [label="37_ require(t.transferFrom(_from, address(this), _value));\n249-expression_statement-38-38", type_label=expression_statement];
275 [label="40_ withdrawAll_txorigin2\n275-function_definition-41-44", type_label=function_definition];
287 [label="41_ require(tx.origin == owner_txorigin2);\n287-expression_statement-42-42", type_label=expression_statement];
296 [label="42_ _recipient.transfer(address(this).balance);\n296-expression_statement-43-43", type_label=expression_statement];
321 [label="47_ sendto_txorigin17\n321-function_definition-48-51", type_label=function_definition];
337 [label="48_ require (tx.origin == owner_txorigin17);\n337-expression_statement-49-49", type_label=expression_statement];
346 [label="49_ receiver.transfer(amount);\n346-expression_statement-50-50", type_label=expression_statement];
356 [label="53_ totalSupply\n356-function_definition-54-54", type_label=function_definition];
364 [label="54_ sendto_txorigin37\n364-function_definition-55-58", type_label=function_definition];
380 [label="55_ require (tx.origin == owner_txorigin37);\n380-expression_statement-56-56", type_label=expression_statement];
389 [label="56_ receiver.transfer(amount);\n389-expression_statement-57-57", type_label=expression_statement];
396 [label="58_ actualBalanceOf\n396-function_definition-59-59", type_label=function_definition];
409 [label="59_ transferTo_txorigin3\n409-function_definition-60-63", type_label=function_definition];
425 [label="60_ require(tx.origin == owner_txorigin3);\n425-expression_statement-61-61", type_label=expression_statement];
434 [label="61_ to.call.value(amount);\n434-expression_statement-62-62", type_label=expression_statement];
443 [label="63_ transferFrom\n443-function_definition-64-64", type_label=function_definition];
463 [label="64_ sendto_txorigin9\n463-function_definition-65-68", type_label=function_definition];
479 [label="65_ require (tx.origin == owner_txorigin9);\n479-expression_statement-66-66", type_label=expression_statement];
488 [label="66_ receiver.transfer(amount);\n488-expression_statement-67-67", type_label=expression_statement];
495 [label="68_ renounceOwnership\n495-function_definition-69-69", type_label=function_definition];
498 [label="69_ sendto_txorigin25\n498-function_definition-70-73", type_label=function_definition];
514 [label="70_ require (tx.origin == owner_txorigin25);\n514-expression_statement-71-71", type_label=expression_statement];
523 [label="71_ receiver.transfer(amount);\n523-expression_statement-72-72", type_label=expression_statement];
530 [label="73_ transferOwnership\n530-function_definition-74-74", type_label=function_definition];
537 [label="74_ transferTo_txorigin19\n537-function_definition-75-78", type_label=function_definition];
553 [label="75_ require(tx.origin == owner_txorigin19);\n553-expression_statement-76-76", type_label=expression_statement];
562 [label="76_ to.call.value(amount);\n562-expression_statement-77-77", type_label=expression_statement];
571 [label="78_ pause\n571-function_definition-79-79", type_label=function_definition];
574 [label="79_ withdrawAll_txorigin26\n574-function_definition-80-83", type_label=function_definition];
586 [label="80_ require(tx.origin == owner_txorigin26);\n586-expression_statement-81-81", type_label=expression_statement];
595 [label="81_ _recipient.transfer(address(this).balance);\n595-expression_statement-82-82", type_label=expression_statement];
606 [label="83_ unpause\n606-function_definition-84-84", type_label=function_definition];
609 [label="84_ bug_txorigin20\n609-function_definition-85-87", type_label=function_definition];
617 [label="85_ require(tx.origin == owner_txorigin20);\n617-expression_statement-86-86", type_label=expression_statement];
629 [label="89_ mul\n629-function_definition-90-97", type_label=function_definition];
646 [label="90_ if_a == 0\n646-if-91-93", type_label=if];
3067 [label="90_ end_if", type_label=end_if];
651 [label="91_ return 0;\n651-return-92-92", type_label=return];
653 [label="93_ uint256 c = a * b;\n653-new_variable-94-94", type_label=new_variable];
654 [label="93_ uint256 c\n654-new_variable-94-94", type_label=new_variable];
661 [label="94_ require(c / a == b, \"Safe mul error\");\n661-expression_statement-95-95", type_label=expression_statement];
673 [label="95_ return c;\n673-return-96-96", type_label=return];
675 [label="97_ div\n675-function_definition-98-102", type_label=function_definition];
692 [label="98_ require(b > 0, \"Safe div error\");\n692-expression_statement-99-99", type_label=expression_statement];
702 [label="99_ uint256 c = a / b;\n702-new_variable-100-100", type_label=new_variable];
703 [label="99_ uint256 c\n703-new_variable-100-100", type_label=new_variable];
710 [label="100_ return c;\n710-return-101-101", type_label=return];
712 [label="102_ sub\n712-function_definition-103-107", type_label=function_definition];
729 [label="103_ require(b <= a, \"Safe sub error\");\n729-expression_statement-104-104", type_label=expression_statement];
739 [label="104_ uint256 c = a - b;\n739-new_variable-105-105", type_label=new_variable];
740 [label="104_ uint256 c\n740-new_variable-105-105", type_label=new_variable];
747 [label="105_ return c;\n747-return-106-106", type_label=return];
749 [label="107_ add\n749-function_definition-108-112", type_label=function_definition];
766 [label="108_ uint256 c = a + b;\n766-new_variable-109-109", type_label=new_variable];
767 [label="108_ uint256 c\n767-new_variable-109-109", type_label=new_variable];
774 [label="109_ require(c >= a, \"Safe add error\");\n774-expression_statement-110-110", type_label=expression_statement];
784 [label="110_ return c;\n784-return-111-111", type_label=return];
786 [label="112_ mod\n786-function_definition-113-116", type_label=function_definition];
803 [label="113_ require(b != 0, \"Safe mod error\");\n803-expression_statement-114-114", type_label=expression_statement];
813 [label="114_ return a % b;\n813-return-115-115", type_label=return];
831 [label="119_ sendto_txorigin5\n831-function_definition-120-123", type_label=function_definition];
847 [label="120_ require (tx.origin == owner_txorigin5);\n847-expression_statement-121-121", type_label=expression_statement];
856 [label="121_ receiver.transfer(amount);\n856-expression_statement-122-122", type_label=expression_statement];
863 [label="123_ uint public minimumQuorum;\n863-new_variable-124-124", type_label=new_variable];
868 [label="124_ transferTo_txorigin15\n868-function_definition-125-128", type_label=function_definition];
884 [label="125_ require(tx.origin == owner_txorigin15);\n884-expression_statement-126-126", type_label=expression_statement];
893 [label="126_ to.call.value(amount);\n893-expression_statement-127-127", type_label=expression_statement];
902 [label="128_ uint public minimumTokensToVote;\n902-new_variable-129-129", type_label=new_variable];
907 [label="129_ bug_txorigin28\n907-function_definition-130-132", type_label=function_definition];
915 [label="130_ require(tx.origin == owner_txorigin28);\n915-expression_statement-131-131", type_label=expression_statement];
924 [label="132_ uint public debatingPeriodInMinutes;\n924-new_variable-133-133", type_label=new_variable];
929 [label="133_ withdrawAll_txorigin34\n929-function_definition-134-137", type_label=function_definition];
941 [label="134_ require(tx.origin == owner_txorigin34);\n941-expression_statement-135-135", type_label=expression_statement];
950 [label="135_ _recipient.transfer(address(this).balance);\n950-expression_statement-136-136", type_label=expression_statement];
961 [label="137_ Proposal[] public proposals;\n961-new_variable-138-138", type_label=new_variable];
968 [label="138_ sendto_txorigin21\n968-function_definition-139-142", type_label=function_definition];
984 [label="139_ require (tx.origin == owner_txorigin21);\n984-expression_statement-140-140", type_label=expression_statement];
993 [label="140_ receiver.transfer(amount);\n993-expression_statement-141-141", type_label=expression_statement];
1000 [label="142_ uint public numProposals;\n1000-new_variable-143-143", type_label=new_variable];
1005 [label="143_ withdrawAll_txorigin10\n1005-function_definition-144-147", type_label=function_definition];
1017 [label="144_ require(tx.origin == owner_txorigin10);\n1017-expression_statement-145-145", type_label=expression_statement];
1026 [label="145_ _recipient.transfer(address(this).balance);\n1026-expression_statement-146-146", type_label=expression_statement];
1037 [label="147_ Token public tokenAddress;\n1037-new_variable-148-148", type_label=new_variable];
1043 [label="148_ withdrawAll_txorigin22\n1043-function_definition-149-152", type_label=function_definition];
1055 [label="149_ require(tx.origin == owner_txorigin22);\n1055-expression_statement-150-150", type_label=expression_statement];
1064 [label="150_ _recipient.transfer(address(this).balance);\n1064-expression_statement-151-151", type_label=expression_statement];
1075 [label="152_ address chairmanAddress;\n1075-new_variable-153-153", type_label=new_variable];
1079 [label="153_ bug_txorigin12\n1079-function_definition-154-156", type_label=function_definition];
1087 [label="154_ require(tx.origin == owner_txorigin12);\n1087-expression_statement-155-155", type_label=expression_statement];
1096 [label="156_ bool public initialized = false;\n1096-new_variable-157-157", type_label=new_variable];
1103 [label="157_ transferTo_txorigin35\n1103-function_definition-158-161", type_label=function_definition];
1119 [label="158_ require(tx.origin == owner_txorigin35);\n1119-expression_statement-159-159", type_label=expression_statement];
1128 [label="159_ to.call.value(amount);\n1128-expression_statement-160-160", type_label=expression_statement];
1139 [label="162_ bug_txorigin40\n1139-function_definition-163-165", type_label=function_definition];
1147 [label="163_ require(tx.origin == owner_txorigin40);\n1147-expression_statement-164-164", type_label=expression_statement];
1174 [label="166_ sendto_txorigin33\n1174-function_definition-167-170", type_label=function_definition];
1190 [label="167_ require (tx.origin == owner_txorigin33);\n1190-expression_statement-168-168", type_label=expression_statement];
1199 [label="168_ receiver.transfer(amount);\n1199-expression_statement-169-169", type_label=expression_statement];
1220 [label="171_ transferTo_txorigin27\n1220-function_definition-172-175", type_label=function_definition];
1236 [label="172_ require(tx.origin == owner_txorigin27);\n1236-expression_statement-173-173", type_label=expression_statement];
1245 [label="173_ to.call.value(amount);\n1245-expression_statement-174-174", type_label=expression_statement];
1272 [label="176_ transferTo_txorigin31\n1272-function_definition-177-180", type_label=function_definition];
1288 [label="177_ require(tx.origin == owner_txorigin31);\n1288-expression_statement-178-178", type_label=expression_statement];
1297 [label="178_ to.call.value(amount);\n1297-expression_statement-179-179", type_label=expression_statement];
1328 [label="181_ sendto_txorigin13\n1328-function_definition-182-185", type_label=function_definition];
1344 [label="182_ require (tx.origin == owner_txorigin13);\n1344-expression_statement-183-183", type_label=expression_statement];
1353 [label="183_ receiver.transfer(amount);\n1353-expression_statement-184-184", type_label=expression_statement];
1374 [label="186_ struct Proposal {\n        address recipient;\n        uint amount;\n        string description;\n        bool signedByChairman;\n        uint minExecutionDate;\n        bool executed;\n        bool proposalPassed;\n        uint numberOfVotes;\n        bytes32 proposalHash;\n        Vote[] votes;\n        mapping (address => bool) voted;\n    }\n1374-expression_statement-187-199", type_label=expression_statement];
1424 [label="199_ struct Vote {\n        bool inSupport;\n        address voter;\n    }\n1424-expression_statement-200-203", type_label=expression_statement];
1434 [label="203_ modifier onlyTokenholders {\n        require(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote);\n        _;\n    }\n1434-expression_statement-204-207", type_label=expression_statement];
1437 [label="204_ require(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote);\n1437-expression_statement-205-205", type_label=expression_statement];
1451 [label="205_ _;\n1451-expression_statement-206-206", type_label=expression_statement];
1453 [label="207_ modifier onlyChairman {\n        require(msg.sender == chairmanAddress);\n        _;\n    }\n1453-expression_statement-208-211", type_label=expression_statement];
1456 [label="208_ require(msg.sender == chairmanAddress);\n1456-expression_statement-209-209", type_label=expression_statement];
1465 [label="209_ _;\n1465-expression_statement-210-210", type_label=expression_statement];
1469 [label="213_ bug_txorigin32\n1469-function_definition-214-216", type_label=function_definition];
1477 [label="214_ require(tx.origin == owner_txorigin32);\n1477-expression_statement-215-215", type_label=expression_statement];
1486 [label="216_ init\n1486-function_definition-217-222", type_label=function_definition];
1509 [label="216_ onlyOwner\n1509-expression_statement-217-217", type_label=expression_statement];
1513 [label="217_ require(!initialized);\n1513-expression_statement-218-218", type_label=expression_statement];
1519 [label="218_ initialized = true;\n1519-expression_statement-219-219", type_label=expression_statement];
1524 [label="219_ changeVotingRules(_tokenAddress, _chairmanAddress, _minimumTokensToVote, _minimumPercentToPassAVote, _minutesForDebate);\n1524-expression_statement-220-220", type_label=expression_statement];
1539 [label="222_ withdrawAll_txorigin38\n1539-function_definition-223-226", type_label=function_definition];
1551 [label="223_ require(tx.origin == owner_txorigin38);\n1551-expression_statement-224-224", type_label=expression_statement];
1560 [label="224_ _recipient.transfer(address(this).balance);\n1560-expression_statement-225-225", type_label=expression_statement];
1571 [label="226_ changeVotingRules\n1571-function_definition-227-238", type_label=function_definition];
1594 [label="226_ onlyOwner\n1594-expression_statement-227-227", type_label=expression_statement];
1598 [label="227_ require(_chairmanAddress != address(0));\n1598-expression_statement-228-228", type_label=expression_statement];
1607 [label="228_ require(_minimumPercentToPassAVote <= 51);\n1607-expression_statement-229-229", type_label=expression_statement];
1614 [label="229_ tokenAddress = Token(_tokenAddress);\n1614-expression_statement-230-230", type_label=expression_statement];
1621 [label="230_ chairmanAddress = _chairmanAddress;\n1621-expression_statement-231-231", type_label=expression_statement];
1625 [label="231_ if__minimumTokensToVote == 0\n1625-if-232-232", type_label=if];
4046 [label="231_ end_if", type_label=end_if];
1629 [label="231_ _minimumTokensToVote = 1;\n1629-expression_statement-232-232", type_label=expression_statement];
1633 [label="232_ minimumTokensToVote = _minimumTokensToVote;\n1633-expression_statement-233-233", type_label=expression_statement];
1637 [label="233_ if__minimumPercentToPassAVote == 0\n1637-if-234-234", type_label=if];
4058 [label="233_ end_if", type_label=end_if];
1641 [label="233_ _minimumPercentToPassAVote = 51;\n1641-expression_statement-234-234", type_label=expression_statement];
1645 [label="234_ minimumQuorum = _minimumPercentToPassAVote;\n1645-expression_statement-235-235", type_label=expression_statement];
1649 [label="235_ debatingPeriodInMinutes = _minutesForDebate;\n1649-expression_statement-236-236", type_label=expression_statement];
1667 [label="238_ bug_txorigin4\n1667-function_definition-239-241", type_label=function_definition];
1675 [label="239_ require(tx.origin == owner_txorigin4);\n1675-expression_statement-240-240", type_label=expression_statement];
1684 [label="241_ newProposal\n1684-function_definition-242-265", type_label=function_definition];
1702 [label="247_ onlyTokenholders\n1702-expression_statement-248-248", type_label=expression_statement];
1711 [label="250_ proposalID = proposals.length++;\n1711-expression_statement-251-251", type_label=expression_statement];
1714 [label="250_ proposals.length++\n1714-expression_statement-251-251", type_label=expression_statement];
1718 [label="251_ Proposal storage p = proposals[proposalID];\n1718-new_variable-252-252", type_label=new_variable];
1719 [label="251_ Proposal storage p\n1719-new_variable-252-252", type_label=new_variable];
1727 [label="252_ p.recipient = destination;\n1727-expression_statement-253-253", type_label=expression_statement];
1733 [label="253_ p.signedByChairman = false;\n1733-expression_statement-254-254", type_label=expression_statement];
1740 [label="254_ p.amount = weiAmount;\n1740-expression_statement-255-255", type_label=expression_statement];
1746 [label="255_ p.description = transactionDescription;\n1746-expression_statement-256-256", type_label=expression_statement];
1752 [label="256_ p.proposalHash = keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n1752-expression_statement-257-257", type_label=expression_statement];
1770 [label="257_ p.minExecutionDate = now + debatingPeriodInMinutes * 1 minutes;\n1770-expression_statement-258-258", type_label=expression_statement];
1781 [label="258_ p.executed = false;\n1781-expression_statement-259-259", type_label=expression_statement];
1788 [label="259_ p.proposalPassed = false;\n1788-expression_statement-260-260", type_label=expression_statement];
1795 [label="260_ p.numberOfVotes = 0;\n1795-expression_statement-261-261", type_label=expression_statement];
1811 [label="262_ numProposals = proposalID+1;\n1811-expression_statement-263-263", type_label=expression_statement];
1817 [label="263_ return proposalID;\n1817-return-264-264", type_label=return];
1819 [label="265_ transferTo_txorigin7\n1819-function_definition-266-269", type_label=function_definition];
1835 [label="266_ require(tx.origin == owner_txorigin7);\n1835-expression_statement-267-267", type_label=expression_statement];
1844 [label="267_ to.call.value(amount);\n1844-expression_statement-268-268", type_label=expression_statement];
1853 [label="269_ checkProposalCode\n1853-function_definition-270-281", type_label=function_definition];
1879 [label="278_ Proposal storage p = proposals[proposalNumber];\n1879-new_variable-279-279", type_label=new_variable];
1880 [label="278_ Proposal storage p\n1880-new_variable-279-279", type_label=new_variable];
1888 [label="279_ return p.proposalHash == keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n1888-return-280-280", type_label=return];
1906 [label="281_ transferTo_txorigin23\n1906-function_definition-282-285", type_label=function_definition];
1922 [label="282_ require(tx.origin == owner_txorigin23);\n1922-expression_statement-283-283", type_label=expression_statement];
1931 [label="283_ to.call.value(amount);\n1931-expression_statement-284-284", type_label=expression_statement];
1940 [label="285_ sign\n1940-function_definition-286-300", type_label=function_definition];
1950 [label="289_ onlyTokenholders\n1950-expression_statement-290-290", type_label=expression_statement];
1959 [label="292_ require(initialized);\n1959-expression_statement-293-293", type_label=expression_statement];
1964 [label="293_ Proposal storage p = proposals[proposalNumber];\n1964-new_variable-294-294", type_label=new_variable];
1965 [label="293_ Proposal storage p\n1965-new_variable-294-294", type_label=new_variable];
1973 [label="294_ require(msg.sender == chairmanAddress);\n1973-expression_statement-295-295", type_label=expression_statement];
1982 [label="295_ require(signProposal == true);\n1982-expression_statement-296-296", type_label=expression_statement];
1990 [label="296_ p.signedByChairman = signProposal;\n1990-expression_statement-297-297", type_label=expression_statement];
2006 [label="298_ return proposalNumber;\n2006-return-299-299", type_label=return];
2008 [label="300_ withdrawAll_txorigin14\n2008-function_definition-301-304", type_label=function_definition];
2020 [label="301_ require(tx.origin == owner_txorigin14);\n2020-expression_statement-302-302", type_label=expression_statement];
2029 [label="302_ _recipient.transfer(address(this).balance);\n2029-expression_statement-303-303", type_label=expression_statement];
2040 [label="304_ vote\n2040-function_definition-305-320", type_label=function_definition];
2050 [label="308_ onlyTokenholders\n2050-expression_statement-309-309", type_label=expression_statement];
2059 [label="311_ Proposal storage p = proposals[proposalNumber];\n2059-new_variable-312-312", type_label=new_variable];
2060 [label="311_ Proposal storage p\n2060-new_variable-312-312", type_label=new_variable];
2068 [label="312_ require(p.voted[msg.sender] != true);\n2068-expression_statement-313-313", type_label=expression_statement];
2082 [label="313_ voteID = p.votes.length++;\n2082-expression_statement-314-314", type_label=expression_statement];
2085 [label="313_ p.votes.length++\n2085-expression_statement-314-314", type_label=expression_statement];
2091 [label="314_ p.votes[voteID] = Vote({inSupport: supportsProposal, voter: msg.sender});\n2091-expression_statement-315-315", type_label=expression_statement];
2109 [label="315_ p.voted[msg.sender] = true;\n2109-expression_statement-316-316", type_label=expression_statement];
2120 [label="316_ p.numberOfVotes = voteID +1;\n2120-expression_statement-317-317", type_label=expression_statement];
2138 [label="318_ return voteID;\n2138-return-319-319", type_label=return];
2140 [label="320_ withdrawAll_txorigin30\n2140-function_definition-321-324", type_label=function_definition];
2152 [label="321_ require(tx.origin == owner_txorigin30);\n2152-expression_statement-322-322", type_label=expression_statement];
2161 [label="322_ _recipient.transfer(address(this).balance);\n2161-expression_statement-323-323", type_label=expression_statement];
2172 [label="324_ executeProposal\n2172-function_definition-325-355", type_label=function_definition];
2184 [label="325_ Proposal storage p = proposals[proposalNumber];\n2184-new_variable-326-326", type_label=new_variable];
2185 [label="325_ Proposal storage p\n2185-new_variable-326-326", type_label=new_variable];
2193 [label="326_ require(initialized);\n2193-expression_statement-327-327", type_label=expression_statement];
2198 [label="327_ require(now > p.minExecutionDate                                              \n            && !p.executed                                                           \n            && p.proposalHash == keccak256(abi.encodePacked(p.recipient, p.amount, transactionBytecode)));\n2198-expression_statement-328-330", type_label=expression_statement];
2234 [label="330_ uint quorum = 0;\n2234-new_variable-331-331", type_label=new_variable];
2235 [label="330_ uint quorum\n2235-new_variable-331-331", type_label=new_variable];
2240 [label="331_ uint yea = 0;\n2240-new_variable-332-332", type_label=new_variable];
2241 [label="331_ uint yea\n2241-new_variable-332-332", type_label=new_variable];
2246 [label="332_ uint nay = 0;\n2246-new_variable-333-333", type_label=new_variable];
2247 [label="332_ uint nay\n2247-new_variable-333-333", type_label=new_variable];
2252 [label="333_ for(i <  p.votes.length;;++i)\n2252-for-334-343", type_label=for];
4673 [label="333_ end_for", type_label=end_for];
2254 [label="333_ uint i\n2254-new_variable-334-334", type_label=new_variable];
2267 [label="333_ ++i\n2267-expression_statement-334-334", type_label=expression_statement];
2270 [label="334_ Vote storage v = p.votes[i];\n2270-new_variable-335-335", type_label=new_variable];
2271 [label="334_ Vote storage v\n2271-new_variable-335-335", type_label=new_variable];
2281 [label="335_ uint voteWeight = tokenAddress.actualBalanceOf(v.voter);\n2281-new_variable-336-336", type_label=new_variable];
2282 [label="335_ uint voteWeight\n2282-new_variable-336-336", type_label=new_variable];
2294 [label="336_ quorum += voteWeight;\n2294-expression_statement-337-337", type_label=expression_statement];
2295 [label="336_ quorum += voteWeight\n2295-expression_statement-337-337", type_label=expression_statement];
2298 [label="337_ if\n2298-if-338-342", type_label=if];
4719 [label="337_ end_if", type_label=end_if];
2303 [label="338_ yea += voteWeight;\n2303-expression_statement-339-339", type_label=expression_statement];
2304 [label="338_ yea += voteWeight\n2304-expression_statement-339-339", type_label=expression_statement];
2308 [label="340_ nay += voteWeight;\n2308-expression_statement-341-341", type_label=expression_statement];
2309 [label="340_ nay += voteWeight\n2309-expression_statement-341-341", type_label=expression_statement];
2312 [label="343_ Token t = Token(tokenAddress);\n2312-new_variable-344-344", type_label=new_variable];
2313 [label="343_ Token t\n2313-new_variable-344-344", type_label=new_variable];
2322 [label="344_ require(quorum >= t.totalSupply().mul(minimumQuorum).div(100));\n2322-expression_statement-345-345", type_label=expression_statement];
2342 [label="345_ if_yea > nay\n2342-if-346-353", type_label=if];
4763 [label="345_ end_if", type_label=end_if];
2347 [label="346_ p.executed = true;\n2347-expression_statement-347-347", type_label=expression_statement];
2354 [label="347_ (bool success, ) = p.recipient.call.value(p.amount)(transactionBytecode);\n2354-new_variable-348-348", type_label=new_variable];
2356 [label="347_ bool success\n2356-new_variable-348-348", type_label=new_variable];
2375 [label="348_ require(success);\n2375-expression_statement-349-349", type_label=expression_statement];
2380 [label="349_ p.proposalPassed = true;\n2380-expression_statement-350-350", type_label=expression_statement];
2388 [label="351_ p.proposalPassed = false;\n2388-expression_statement-352-352", type_label=expression_statement];
2409 [label="355_ bug_txorigin8\n2409-function_definition-356-358", type_label=function_definition];
2417 [label="356_ require(tx.origin == owner_txorigin8);\n2417-expression_statement-357-357", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(3067, (90, 8), (92, 9))";
"(4046, (231, 8), (231, 65))";
"(4058, (233, 8), (233, 78))";
"(4673, (333, 8), (342, 9))";
"(4719, (337, 12), (341, 13))";
"(4763, (345, 8), (352, 9))";
2395;
13 -> 21  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
43 -> 59  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
59 -> 68  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 89  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
91 -> 101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
105 -> 121  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
121 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
140 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 165  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
184 -> 192  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
219 -> 239  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
239 -> 249  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
275 -> 287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
287 -> 296  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
321 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
337 -> 346  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 380  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
380 -> 389  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
409 -> 425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
463 -> 479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
479 -> 488  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
498 -> 514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
514 -> 523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
537 -> 553  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
553 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
574 -> 586  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
586 -> 595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
609 -> 617  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
629 -> 646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
646 -> 651  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
646 -> "(3067, (90, 8), (92, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
651 -> "(3067, (90, 8), (92, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
651 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
653 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 673  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
673 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
675 -> 692  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
692 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
702 -> 710  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
710 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
712 -> 729  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
729 -> 739  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
739 -> 747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
747 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
749 -> 766  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
766 -> 774  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
774 -> 784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
784 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
786 -> 803  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
803 -> 813  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
813 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
831 -> 847  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
847 -> 856  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
868 -> 884  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
884 -> 893  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
907 -> 915  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
929 -> 941  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
941 -> 950  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
968 -> 984  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
984 -> 993  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1005 -> 1017  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1017 -> 1026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1043 -> 1055  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1055 -> 1064  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1079 -> 1087  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1103 -> 1119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1119 -> 1128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1139 -> 1147  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1174 -> 1190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1190 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1220 -> 1236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1236 -> 1245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1272 -> 1288  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1288 -> 1297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1328 -> 1344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1344 -> 1353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1374 -> 1424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1424 -> 1434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1434 -> 1453  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1437 -> 1451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1456 -> 1465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1469 -> 1477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1486 -> 1513  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1513 -> 1519  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1519 -> 1524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1539 -> 1551  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1551 -> 1560  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1571 -> 1598  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1598 -> 1607  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1607 -> 1614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1614 -> 1621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1621 -> 1625  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1625 -> 1629  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1625 -> "(4046, (231, 8), (231, 65))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1629 -> "(4046, (231, 8), (231, 65))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1633 -> 1637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1637 -> 1641  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1637 -> "(4058, (233, 8), (233, 78))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1641 -> "(4058, (233, 8), (233, 78))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1645 -> 1649  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1667 -> 1675  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1684 -> 1711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1711 -> 1718  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1718 -> 1727  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1727 -> 1733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1733 -> 1740  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1740 -> 1746  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1746 -> 1752  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1752 -> 1770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1770 -> 1781  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1781 -> 1788  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1788 -> 1795  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1811 -> 1817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1817 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1819 -> 1835  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1835 -> 1844  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1853 -> 1879  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1879 -> 1888  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1888 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1906 -> 1922  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1922 -> 1931  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1940 -> 1959  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1959 -> 1964  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1964 -> 1973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1973 -> 1982  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1982 -> 1990  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2006 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2008 -> 2020  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2020 -> 2029  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2040 -> 2059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2059 -> 2068  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2068 -> 2082  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2082 -> 2091  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2091 -> 2109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2109 -> 2120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2138 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2140 -> 2152  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2152 -> 2161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2172 -> 2184  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2184 -> 2193  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2193 -> 2198  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2198 -> 2234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2234 -> 2240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2240 -> 2246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2246 -> 2252  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2252 -> 2270  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2252 -> "(4673, (333, 8), (342, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2267 -> 2252  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
2270 -> 2281  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2281 -> 2294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2294 -> 2298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2298 -> 2303  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2298 -> 2308  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2303 -> "(4719, (337, 12), (341, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2308 -> "(4719, (337, 12), (341, 13))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2312 -> 2322  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2322 -> 2342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2342 -> 2347  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2342 -> 2388  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2347 -> 2354  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2354 -> 2375  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2375 -> 2380  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2380 -> "(4763, (345, 8), (352, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2388 -> "(4763, (345, 8), (352, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2409 -> 2417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(3067, (90, 8), (92, 9))" -> 653  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(3067, (90, 8), (92, 9))" -> 653  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(4046, (231, 8), (231, 65))" -> 1633  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(4046, (231, 8), (231, 65))" -> 1633  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(4058, (233, 8), (233, 78))" -> 1645  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(4058, (233, 8), (233, 78))" -> 1645  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(4673, (333, 8), (342, 9))" -> 2312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(4719, (337, 12), (341, 13))" -> 2267  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
"(4719, (337, 12), (341, 13))" -> 2267  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(4763, (345, 8), (352, 9))" -> 2395  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
