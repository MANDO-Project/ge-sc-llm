digraph  {
13 [label="2_ transfer\n13-function_definition-3-3", type_label=function_definition];
28 [label="3_ approve\n28-function_definition-4-4", type_label=function_definition];
43 [label="4_ transferFrom\n43-function_definition-5-5", type_label=function_definition];
62 [label="5_ totalSupply\n62-function_definition-6-6", type_label=function_definition];
70 [label="6_ balanceOf\n70-function_definition-7-7", type_label=function_definition];
82 [label="7_ allowance\n82-function_definition-8-8", type_label=function_definition];
133 [label="13_ mul\n133-function_definition-14-21", type_label=function_definition];
150 [label="14_ if_a == 0\n150-if-15-17", type_label=if];
155 [label="15_ return 0;\n155-return-16-16", type_label=return];
157 [label="17_ uint256 c = a * b;\n157-new_variable-18-18", type_label=new_variable];
158 [label="17_ uint256 c\n158-new_variable-18-18", type_label=new_variable];
165 [label="18_ require(c / a == b);\n165-expression_statement-19-19", type_label=expression_statement];
174 [label="19_ return c;\n174-return-20-20", type_label=return];
176 [label="21_ div\n176-function_definition-22-26", type_label=function_definition];
193 [label="22_ require(b > 0);\n193-expression_statement-23-23", type_label=expression_statement];
200 [label="23_ uint256 c = a / b;\n200-new_variable-24-24", type_label=new_variable];
201 [label="23_ uint256 c\n201-new_variable-24-24", type_label=new_variable];
208 [label="24_ return c;\n208-return-25-25", type_label=return];
210 [label="26_ sub\n210-function_definition-27-31", type_label=function_definition];
227 [label="27_ require(b <= a);\n227-expression_statement-28-28", type_label=expression_statement];
234 [label="28_ uint256 c = a - b;\n234-new_variable-29-29", type_label=new_variable];
235 [label="28_ uint256 c\n235-new_variable-29-29", type_label=new_variable];
242 [label="29_ return c;\n242-return-30-30", type_label=return];
244 [label="31_ add\n244-function_definition-32-36", type_label=function_definition];
261 [label="32_ uint256 c = a + b;\n261-new_variable-33-33", type_label=new_variable];
262 [label="32_ uint256 c\n262-new_variable-33-33", type_label=new_variable];
269 [label="33_ require(c >= a);\n269-expression_statement-34-34", type_label=expression_statement];
276 [label="34_ return c;\n276-return-35-35", type_label=return];
278 [label="36_ mod\n278-function_definition-37-40", type_label=function_definition];
295 [label="37_ require(b != 0);\n295-expression_statement-38-38", type_label=expression_statement];
302 [label="38_ return a % b;\n302-return-39-39", type_label=return];
321 [label="44_ mapping (address => uint256) private _balances;\n321-new_variable-45-45", type_label=new_variable];
328 [label="45_ mapping (address => mapping (address => uint256)) private _allowed;\n328-new_variable-46-46", type_label=new_variable];
337 [label="46_ uint256 private _totalSupply;\n337-new_variable-47-47", type_label=new_variable];
342 [label="47_ totalSupply\n342-function_definition-48-50", type_label=function_definition];
351 [label="48_ return _totalSupply;\n351-return-49-49", type_label=return];
353 [label="50_ balanceOf\n353-function_definition-51-53", type_label=function_definition];
366 [label="51_ return _balances[owner];\n366-return-52-52", type_label=return];
370 [label="53_ allowance\n370-function_definition-54-56", type_label=function_definition];
387 [label="54_ return _allowed[owner][spender];\n387-return-55-55", type_label=return];
393 [label="56_ transfer\n393-function_definition-57-60", type_label=function_definition];
409 [label="57_ _transfer(msg.sender, to, value);\n409-expression_statement-58-58", type_label=expression_statement];
420 [label="58_ return true;\n420-return-59-59", type_label=return];
423 [label="60_ approve\n423-function_definition-61-64", type_label=function_definition];
439 [label="61_ _approve(msg.sender, spender, value);\n439-expression_statement-62-62", type_label=expression_statement];
450 [label="62_ return true;\n450-return-63-63", type_label=return];
453 [label="64_ transferFrom\n453-function_definition-65-69", type_label=function_definition];
473 [label="65_ _transfer(from, to, value);\n473-expression_statement-66-66", type_label=expression_statement];
482 [label="66_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n482-expression_statement-67-67", type_label=expression_statement];
504 [label="67_ return true;\n504-return-68-68", type_label=return];
507 [label="69_ increaseAllowance\n507-function_definition-70-73", type_label=function_definition];
523 [label="70_ _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n523-expression_statement-71-71", type_label=expression_statement];
545 [label="71_ return true;\n545-return-72-72", type_label=return];
548 [label="73_ decreaseAllowance\n548-function_definition-74-77", type_label=function_definition];
564 [label="74_ _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n564-expression_statement-75-75", type_label=expression_statement];
586 [label="75_ return true;\n586-return-76-76", type_label=return];
589 [label="77_ _transfer\n589-function_definition-78-83", type_label=function_definition];
605 [label="78_ require(to != address(0));\n605-expression_statement-79-79", type_label=expression_statement];
614 [label="79_ _balances[from] = _balances[from].sub(value);\n614-expression_statement-80-80", type_label=expression_statement];
627 [label="80_ _balances[to] = _balances[to].add(value);\n627-expression_statement-81-81", type_label=expression_statement];
648 [label="83_ _mint\n648-function_definition-84-89", type_label=function_definition];
660 [label="84_ require(account != address(0));\n660-expression_statement-85-85", type_label=expression_statement];
669 [label="85_ _totalSupply = _totalSupply.add(value);\n669-expression_statement-86-86", type_label=expression_statement];
678 [label="86_ _balances[account] = _balances[account].add(value);\n678-expression_statement-87-87", type_label=expression_statement];
701 [label="89_ _burn\n701-function_definition-90-95", type_label=function_definition];
713 [label="90_ require(account != address(0));\n713-expression_statement-91-91", type_label=expression_statement];
722 [label="91_ _totalSupply = _totalSupply.sub(value);\n722-expression_statement-92-92", type_label=expression_statement];
731 [label="92_ _balances[account] = _balances[account].sub(value);\n731-expression_statement-93-93", type_label=expression_statement];
754 [label="95_ _approve\n754-function_definition-96-101", type_label=function_definition];
770 [label="96_ require(spender != address(0));\n770-expression_statement-97-97", type_label=expression_statement];
779 [label="97_ require(owner != address(0));\n779-expression_statement-98-98", type_label=expression_statement];
788 [label="98_ _allowed[owner][spender] = value;\n788-expression_statement-99-99", type_label=expression_statement];
804 [label="101_ _burnFrom\n804-function_definition-102-105", type_label=function_definition];
816 [label="102_ _burn(account, value);\n816-expression_statement-103-103", type_label=expression_statement];
823 [label="103_ _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\n823-expression_statement-104-104", type_label=expression_statement];
855 [label="108_ string private _name;\n855-new_variable-109-109", type_label=new_variable];
860 [label="109_ string private _symbol;\n860-new_variable-110-110", type_label=new_variable];
865 [label="110_ uint8 private _decimals;\n865-new_variable-111-111", type_label=new_variable];
884 [label="112_ _name = name;\n884-expression_statement-113-113", type_label=expression_statement];
888 [label="113_ _symbol = symbol;\n888-expression_statement-114-114", type_label=expression_statement];
892 [label="114_ _decimals = decimals;\n892-expression_statement-115-115", type_label=expression_statement];
896 [label="116_ name\n896-function_definition-117-119", type_label=function_definition];
905 [label="117_ return _name;\n905-return-118-118", type_label=return];
907 [label="119_ symbol\n907-function_definition-120-122", type_label=function_definition];
916 [label="120_ return _symbol;\n916-return-121-121", type_label=return];
918 [label="122_ decimals\n918-function_definition-123-125", type_label=function_definition];
927 [label="123_ return _decimals;\n927-return-124-124", type_label=return];
936 [label="128_ struct Role {\n        mapping (address => bool) bearer;\n    }\n936-expression_statement-129-131", type_label=expression_statement];
944 [label="131_ add\n944-function_definition-132-136", type_label=function_definition];
957 [label="132_ require(account != address(0));\n957-expression_statement-133-133", type_label=expression_statement];
966 [label="133_ require(!has(role, account));\n966-expression_statement-134-134", type_label=expression_statement];
977 [label="134_ role.bearer[account] = true;\n977-expression_statement-135-135", type_label=expression_statement];
986 [label="136_ remove\n986-function_definition-137-141", type_label=function_definition];
999 [label="137_ require(account != address(0));\n999-expression_statement-138-138", type_label=expression_statement];
1008 [label="138_ require(has(role, account));\n1008-expression_statement-139-139", type_label=expression_statement];
1018 [label="139_ role.bearer[account] = false;\n1018-expression_statement-140-140", type_label=expression_statement];
1027 [label="141_ has\n1027-function_definition-142-145", type_label=function_definition];
1045 [label="142_ require(account != address(0));\n1045-expression_statement-143-143", type_label=expression_statement];
1054 [label="143_ return role.bearer[account];\n1054-return-144-144", type_label=return];
1086 [label="151_ Roles.Role private _minters;\n1086-new_variable-152-152", type_label=new_variable];
1095 [label="153_ _addMinter(msg.sender);\n1095-expression_statement-154-154", type_label=expression_statement];
1102 [label="155_ modifier onlyMinter() {\n        require(isMinter(msg.sender));\n        _;\n    }\n1102-expression_statement-156-159", type_label=expression_statement];
1105 [label="156_ require(isMinter(msg.sender));\n1105-expression_statement-157-157", type_label=expression_statement];
1115 [label="157_ _;\n1115-expression_statement-158-158", type_label=expression_statement];
1117 [label="159_ isMinter\n1117-function_definition-160-162", type_label=function_definition];
1130 [label="160_ return _minters.has(account);\n1130-return-161-161", type_label=return];
1137 [label="162_ addMinter\n1137-function_definition-163-165", type_label=function_definition];
1144 [label="162_ onlyMinter\n1144-expression_statement-163-163", type_label=expression_statement];
1147 [label="163_ _addMinter(account);\n1147-expression_statement-164-164", type_label=expression_statement];
1152 [label="165_ renounceMinter\n1152-function_definition-166-168", type_label=function_definition];
1156 [label="166_ _removeMinter(msg.sender);\n1156-expression_statement-167-167", type_label=expression_statement];
1163 [label="168_ _addMinter\n1163-function_definition-169-172", type_label=function_definition];
1171 [label="169_ _minters.add(account);\n1171-expression_statement-170-170", type_label=expression_statement];
1182 [label="172_ _removeMinter\n1182-function_definition-173-176", type_label=function_definition];
1190 [label="173_ _minters.remove(account);\n1190-expression_statement-174-174", type_label=expression_statement];
1214 [label="179_ mint\n1214-function_definition-180-183", type_label=function_definition];
1225 [label="179_ onlyMinter\n1225-expression_statement-180-180", type_label=expression_statement];
1232 [label="180_ _mint(to, value);\n1232-expression_statement-181-181", type_label=expression_statement];
1239 [label="181_ return true;\n1239-return-182-182", type_label=return];
1270 [label="187_ ERC20Detailed(_name, _symbol, _decimals)\n1270-expression_statement-188-188", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
133 -> 157  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
150 -> 155  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
150 -> 157  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
155 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
157 -> 165  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
165 -> 174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
174 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
176 -> 193  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
193 -> 200  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
200 -> 208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
208 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
210 -> 227  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
227 -> 234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
234 -> 242  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
242 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
244 -> 261  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
261 -> 269  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
269 -> 276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
276 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
278 -> 295  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
295 -> 302  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
302 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
321 -> 328  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
328 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
342 -> 351  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
353 -> 366  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
366 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
370 -> 387  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
387 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
393 -> 409  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
409 -> 420  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
420 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
423 -> 439  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
439 -> 450  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
450 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
453 -> 473  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
473 -> 482  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
482 -> 504  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
504 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
507 -> 523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
523 -> 545  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
545 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
548 -> 564  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
564 -> 586  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
586 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
589 -> 605  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
605 -> 614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
614 -> 627  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
648 -> 660  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
660 -> 669  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
669 -> 678  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
701 -> 713  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
713 -> 722  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
722 -> 731  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
754 -> 770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
770 -> 779  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
779 -> 788  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
804 -> 816  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
816 -> 823  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
855 -> 860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
860 -> 865  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
884 -> 888  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
888 -> 892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
896 -> 905  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
905 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
907 -> 916  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
916 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
918 -> 927  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
927 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
944 -> 957  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
957 -> 966  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
966 -> 977  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
986 -> 999  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
999 -> 1008  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1008 -> 1018  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1027 -> 1045  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1045 -> 1054  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1054 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1105 -> 1115  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1117 -> 1130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1130 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1137 -> 1147  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1152 -> 1156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1163 -> 1171  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1182 -> 1190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1214 -> 1232  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1232 -> 1239  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1239 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
