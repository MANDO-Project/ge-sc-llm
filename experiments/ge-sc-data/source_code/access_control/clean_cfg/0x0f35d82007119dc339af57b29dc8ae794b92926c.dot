digraph  {
13 [label="2_ address public owner;\n13-new_variable-3-3", type_label=new_variable];
36 [label="9_ owner = msg.sender;\n36-expression_statement-10-10", type_label=expression_statement];
42 [label="11_ modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n42-expression_statement-12-15", type_label=expression_statement];
45 [label="12_ require(msg.sender == owner);\n45-expression_statement-13-13", type_label=expression_statement];
54 [label="13_ _;\n54-expression_statement-14-14", type_label=expression_statement];
56 [label="15_ renounceOwnership\n56-function_definition-16-19", type_label=function_definition];
59 [label="15_ onlyOwner\n59-expression_statement-16-16", type_label=expression_statement];
66 [label="17_ owner = address(0);\n66-expression_statement-18-18", type_label=expression_statement];
72 [label="19_ transferOwnership\n72-function_definition-20-22", type_label=function_definition];
79 [label="19_ onlyOwner\n79-expression_statement-20-20", type_label=expression_statement];
82 [label="20_ _transferOwnership(_newOwner);\n82-expression_statement-21-21", type_label=expression_statement];
87 [label="22_ _transferOwnership\n87-function_definition-23-27", type_label=function_definition];
95 [label="23_ require(_newOwner != address(0));\n95-expression_statement-24-24", type_label=expression_statement];
110 [label="25_ owner = _newOwner;\n110-expression_statement-26-26", type_label=expression_statement];
120 [label="29_ address public congress;\n120-new_variable-30-30", type_label=new_variable];
125 [label="30_ bool init = false;\n125-new_variable-31-31", type_label=new_variable];
131 [label="31_ modifier onlyCongress() {\n        require(msg.sender == congress);\n        _;\n    }\n131-expression_statement-32-35", type_label=expression_statement];
134 [label="32_ require(msg.sender == congress);\n134-expression_statement-33-33", type_label=expression_statement];
143 [label="33_ _;\n143-expression_statement-34-34", type_label=expression_statement];
145 [label="35_ initialCongress\n145-function_definition-36-41", type_label=function_definition];
151 [label="35_ onlyOwner\n151-expression_statement-36-36", type_label=expression_statement];
155 [label="36_ require(!init);\n155-expression_statement-37-37", type_label=expression_statement];
161 [label="37_ require(_congress != address(0));\n161-expression_statement-38-38", type_label=expression_statement];
170 [label="38_ congress = _congress;\n170-expression_statement-39-39", type_label=expression_statement];
174 [label="39_ init = true;\n174-expression_statement-40-40", type_label=expression_statement];
179 [label="41_ changeCongress\n179-function_definition-42-45", type_label=function_definition];
185 [label="41_ onlyCongress\n185-expression_statement-42-42", type_label=expression_statement];
189 [label="42_ require(_congress != address(0));\n189-expression_statement-43-43", type_label=expression_statement];
198 [label="43_ congress = _congress;\n198-expression_statement-44-44", type_label=expression_statement];
210 [label="48_ destroy\n210-function_definition-49-51", type_label=function_definition];
212 [label="48_ onlyOwner\n212-expression_statement-49-49", type_label=expression_statement];
216 [label="49_ selfdestruct(owner);\n216-expression_statement-50-50", type_label=expression_statement];
221 [label="51_ destroyAndSend\n221-function_definition-52-54", type_label=function_definition];
227 [label="51_ onlyOwner\n227-expression_statement-52-52", type_label=expression_statement];
231 [label="52_ selfdestruct(_recipient);\n231-expression_statement-53-53", type_label=expression_statement];
242 [label="56_ address public pendingOwner;\n242-new_variable-57-57", type_label=new_variable];
247 [label="57_ modifier onlyPendingOwner() {\n    require(msg.sender == pendingOwner);\n    _;\n  }\n247-expression_statement-58-61", type_label=expression_statement];
250 [label="58_ require(msg.sender == pendingOwner);\n250-expression_statement-59-59", type_label=expression_statement];
259 [label="59_ _;\n259-expression_statement-60-60", type_label=expression_statement];
261 [label="61_ transferOwnership\n261-function_definition-62-64", type_label=function_definition];
267 [label="61_ onlyOwner\n267-expression_statement-62-62", type_label=expression_statement];
271 [label="62_ pendingOwner = newOwner;\n271-expression_statement-63-63", type_label=expression_statement];
275 [label="64_ claimOwnership\n275-function_definition-65-69", type_label=function_definition];
277 [label="64_ onlyPendingOwner\n277-expression_statement-65-65", type_label=expression_statement];
287 [label="66_ owner = pendingOwner;\n287-expression_statement-67-67", type_label=expression_statement];
291 [label="67_ pendingOwner = address(0);\n291-expression_statement-68-68", type_label=expression_statement];
309 [label="71_ uint256 public singleWithdrawMin;\n309-new_variable-72-72", type_label=new_variable];
314 [label="72_ uint256 public singleWithdrawMax;\n314-new_variable-73-73", type_label=new_variable];
319 [label="73_ uint256 public dayWithdraw;\n319-new_variable-74-74", type_label=new_variable];
324 [label="74_ uint256 public monthWithdraw;\n324-new_variable-75-75", type_label=new_variable];
329 [label="75_ uint256 public dayWithdrawCount;\n329-new_variable-76-76", type_label=new_variable];
334 [label="76_ uint256 public chargeFee;\n334-new_variable-77-77", type_label=new_variable];
339 [label="77_ address public chargeFeePool;\n339-new_variable-78-78", type_label=new_variable];
344 [label="78_ initialSingleWithdrawMax\n344-function_definition-79-82", type_label=function_definition];
350 [label="78_ onlyOwner\n350-expression_statement-79-79", type_label=expression_statement];
354 [label="79_ require(!init);\n354-expression_statement-80-80", type_label=expression_statement];
360 [label="80_ singleWithdrawMax = _value;\n360-expression_statement-81-81", type_label=expression_statement];
364 [label="82_ initialSingleWithdrawMin\n364-function_definition-83-86", type_label=function_definition];
370 [label="82_ onlyOwner\n370-expression_statement-83-83", type_label=expression_statement];
374 [label="83_ require(!init);\n374-expression_statement-84-84", type_label=expression_statement];
380 [label="84_ singleWithdrawMin = _value;\n380-expression_statement-85-85", type_label=expression_statement];
384 [label="86_ initialDayWithdraw\n384-function_definition-87-90", type_label=function_definition];
390 [label="86_ onlyOwner\n390-expression_statement-87-87", type_label=expression_statement];
394 [label="87_ require(!init);\n394-expression_statement-88-88", type_label=expression_statement];
400 [label="88_ dayWithdraw = _value;\n400-expression_statement-89-89", type_label=expression_statement];
404 [label="90_ initialDayWithdrawCount\n404-function_definition-91-94", type_label=function_definition];
410 [label="90_ onlyOwner\n410-expression_statement-91-91", type_label=expression_statement];
414 [label="91_ require(!init);\n414-expression_statement-92-92", type_label=expression_statement];
420 [label="92_ dayWithdrawCount = _count;\n420-expression_statement-93-93", type_label=expression_statement];
424 [label="94_ initialMonthWithdraw\n424-function_definition-95-98", type_label=function_definition];
430 [label="94_ onlyOwner\n430-expression_statement-95-95", type_label=expression_statement];
434 [label="95_ require(!init);\n434-expression_statement-96-96", type_label=expression_statement];
440 [label="96_ monthWithdraw = _value;\n440-expression_statement-97-97", type_label=expression_statement];
444 [label="98_ initialChargeFee\n444-function_definition-99-102", type_label=function_definition];
450 [label="98_ onlyOwner\n450-expression_statement-99-99", type_label=expression_statement];
454 [label="99_ require(!init);\n454-expression_statement-100-100", type_label=expression_statement];
460 [label="100_ chargeFee = _value;\n460-expression_statement-101-101", type_label=expression_statement];
464 [label="102_ initialChargeFeePool\n464-function_definition-103-106", type_label=function_definition];
470 [label="102_ onlyOwner\n470-expression_statement-103-103", type_label=expression_statement];
474 [label="103_ require(!init);\n474-expression_statement-104-104", type_label=expression_statement];
480 [label="104_ chargeFeePool = _pool;\n480-expression_statement-105-105", type_label=expression_statement];
484 [label="106_ setSingleWithdrawMax\n484-function_definition-107-109", type_label=function_definition];
490 [label="106_ onlyCongress\n490-expression_statement-107-107", type_label=expression_statement];
494 [label="107_ singleWithdrawMax = _value;\n494-expression_statement-108-108", type_label=expression_statement];
498 [label="109_ setSingleWithdrawMin\n498-function_definition-110-112", type_label=function_definition];
504 [label="109_ onlyCongress\n504-expression_statement-110-110", type_label=expression_statement];
508 [label="110_ singleWithdrawMin = _value;\n508-expression_statement-111-111", type_label=expression_statement];
512 [label="112_ setDayWithdraw\n512-function_definition-113-115", type_label=function_definition];
518 [label="112_ onlyCongress\n518-expression_statement-113-113", type_label=expression_statement];
522 [label="113_ dayWithdraw = _value;\n522-expression_statement-114-114", type_label=expression_statement];
526 [label="115_ setDayWithdrawCount\n526-function_definition-116-118", type_label=function_definition];
532 [label="115_ onlyCongress\n532-expression_statement-116-116", type_label=expression_statement];
536 [label="116_ dayWithdrawCount = _count;\n536-expression_statement-117-117", type_label=expression_statement];
540 [label="118_ setMonthWithdraw\n540-function_definition-119-121", type_label=function_definition];
546 [label="118_ onlyCongress\n546-expression_statement-119-119", type_label=expression_statement];
550 [label="119_ monthWithdraw = _value;\n550-expression_statement-120-120", type_label=expression_statement];
554 [label="121_ setChargeFee\n554-function_definition-122-124", type_label=function_definition];
560 [label="121_ onlyCongress\n560-expression_statement-122-122", type_label=expression_statement];
564 [label="122_ chargeFee = _value;\n564-expression_statement-123-123", type_label=expression_statement];
568 [label="124_ setChargeFeePool\n568-function_definition-125-127", type_label=function_definition];
574 [label="124_ onlyCongress\n574-expression_statement-125-125", type_label=expression_statement];
578 [label="125_ chargeFeePool = _pool;\n578-expression_statement-126-126", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
56 -> 66  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
72 -> 82  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 95  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
120 -> 125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
125 -> 131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
134 -> 143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
145 -> 155  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
155 -> 161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
161 -> 170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
170 -> 174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
179 -> 189  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
189 -> 198  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
210 -> 216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
221 -> 231  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
242 -> 247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
250 -> 259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
261 -> 271  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
275 -> 287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
287 -> 291  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
309 -> 314  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
314 -> 319  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
319 -> 324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
324 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
329 -> 334  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
334 -> 339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
344 -> 354  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
354 -> 360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 374  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
374 -> 380  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
384 -> 394  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
394 -> 400  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
404 -> 414  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
414 -> 420  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
424 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
434 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
444 -> 454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
454 -> 460  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
464 -> 474  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
474 -> 480  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
484 -> 494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
498 -> 508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
512 -> 522  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
526 -> 536  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
540 -> 550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
554 -> 564  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
568 -> 578  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
