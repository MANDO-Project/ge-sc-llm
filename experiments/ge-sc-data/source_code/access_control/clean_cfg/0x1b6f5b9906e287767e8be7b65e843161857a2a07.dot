digraph  {
13 [label="2_ string constant public name = \"FakeToken\";\n13-new_variable-3-3", type_label=new_variable];
20 [label="3_ string constant public symbol = \"FTKN\";\n20-new_variable-4-4", type_label=new_variable];
27 [label="4_ uint8 constant public decimals = 0;\n27-new_variable-5-5", type_label=new_variable];
33 [label="5_ mapping (address => uint256) public balanceOf;\n33-new_variable-6-6", type_label=new_variable];
56 [label="8_ balanceOf[msg.sender] = 1000;\n56-expression_statement-9-9", type_label=expression_statement];
64 [label="10_ transfer\n64-function_definition-11-13", type_label=function_definition];
76 [label="11_ _transfer(msg.sender, _to, _value);\n76-expression_statement-12-12", type_label=expression_statement];
87 [label="13_ claim\n87-function_definition-14-16", type_label=function_definition];
99 [label="14_ _transfer(_from, msg.sender, _value);\n99-expression_statement-15-15", type_label=expression_statement];
110 [label="16_ _transfer\n110-function_definition-17-23", type_label=function_definition];
126 [label="17_ require(balanceOf[_from] >= _value, \"Not enought balance\");\n126-expression_statement-18-18", type_label=expression_statement];
138 [label="18_ require(balanceOf[_to] + _value >= _value, \"Overflow protection\");\n138-expression_statement-19-19", type_label=expression_statement];
152 [label="19_ balanceOf[_from] -= _value;\n152-expression_statement-20-20", type_label=expression_statement];
153 [label="19_ balanceOf[_from] -= _value\n153-expression_statement-20-20", type_label=expression_statement];
158 [label="20_ balanceOf[_to] += _value;\n158-expression_statement-21-21", type_label=expression_statement];
159 [label="20_ balanceOf[_to] += _value\n159-expression_statement-21-21", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
13 -> 20  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
20 -> 27  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
27 -> 33  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
64 -> 76  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
110 -> 126  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
126 -> 138  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
138 -> 152  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
152 -> 158  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
