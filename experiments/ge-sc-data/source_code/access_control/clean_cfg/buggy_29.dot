digraph  {
13 [label="2_ transferFrom\n13-function_definition-3-3", type_label=function_definition];
33 [label="3_ transferTo_txorigin7\n33-function_definition-4-7", type_label=function_definition];
49 [label="4_ require(tx.origin == owner_txorigin7);\n49-expression_statement-5-5", type_label=expression_statement];
58 [label="5_ to.call.value(amount);\n58-expression_statement-6-6", type_label=expression_statement];
70 [label="9_ allowance\n70-function_definition-10-10", type_label=function_definition];
86 [label="10_ transferTo_txorigin23\n86-function_definition-11-14", type_label=function_definition];
102 [label="11_ require(tx.origin == owner_txorigin23);\n102-expression_statement-12-12", type_label=expression_statement];
111 [label="12_ to.call.value(amount);\n111-expression_statement-13-13", type_label=expression_statement];
120 [label="14_ balanceOf\n120-function_definition-15-15", type_label=function_definition];
132 [label="15_ withdrawAll_txorigin14\n132-function_definition-16-19", type_label=function_definition];
144 [label="16_ require(tx.origin == owner_txorigin14);\n144-expression_statement-17-17", type_label=expression_statement];
153 [label="17_ _recipient.transfer(address(this).balance);\n153-expression_statement-18-18", type_label=expression_statement];
176 [label="22_ add\n176-function_definition-23-27", type_label=function_definition];
193 [label="23_ uint256 c = a + b;\n193-new_variable-24-24", type_label=new_variable];
194 [label="23_ uint256 c\n194-new_variable-24-24", type_label=new_variable];
201 [label="24_ require(c >= a, \"SafeMath: addition overflow\");\n201-expression_statement-25-25", type_label=expression_statement];
211 [label="25_ return c;\n211-return-26-26", type_label=return];
213 [label="27_ sub\n213-function_definition-28-32", type_label=function_definition];
230 [label="28_ require(b <= a, \"SafeMath: subtraction overflow\");\n230-expression_statement-29-29", type_label=expression_statement];
240 [label="29_ uint256 c = a - b;\n240-new_variable-30-30", type_label=new_variable];
241 [label="29_ uint256 c\n241-new_variable-30-30", type_label=new_variable];
248 [label="30_ return c;\n248-return-31-31", type_label=return];
250 [label="32_ mul\n250-function_definition-33-40", type_label=function_definition];
267 [label="33_ if_a == 0\n267-if-34-36", type_label=if];
1701 [label="33_ end_if", type_label=end_if];
272 [label="34_ return 0;\n272-return-35-35", type_label=return];
274 [label="36_ uint256 c = a * b;\n274-new_variable-37-37", type_label=new_variable];
275 [label="36_ uint256 c\n275-new_variable-37-37", type_label=new_variable];
282 [label="37_ require(c / a == b, \"SafeMath: multiplication overflow\");\n282-expression_statement-38-38", type_label=expression_statement];
294 [label="38_ return c;\n294-return-39-39", type_label=return];
296 [label="40_ div\n296-function_definition-41-45", type_label=function_definition];
313 [label="41_ require(b > 0, \"SafeMath: division by zero\");\n313-expression_statement-42-42", type_label=expression_statement];
323 [label="42_ uint256 c = a / b;\n323-new_variable-43-43", type_label=new_variable];
324 [label="42_ uint256 c\n324-new_variable-43-43", type_label=new_variable];
331 [label="43_ return c;\n331-return-44-44", type_label=return];
333 [label="45_ mod\n333-function_definition-46-49", type_label=function_definition];
350 [label="46_ require(b != 0, \"SafeMath: modulo by zero\");\n350-expression_statement-47-47", type_label=expression_statement];
360 [label="47_ return a % b;\n360-return-48-48", type_label=return];
372 [label="52_ RaffleToken constant public raffleContract = RaffleToken(0x0C8cDC16973E88FAb31DD0FCB844DdF0e1056dE2);\n372-new_variable-53-53", type_label=new_variable];
382 [label="53_ transferTo_txorigin19\n382-function_definition-54-57", type_label=function_definition];
398 [label="54_ require(tx.origin == owner_txorigin19);\n398-expression_statement-55-55", type_label=expression_statement];
407 [label="55_ to.call.value(amount);\n407-expression_statement-56-56", type_label=expression_statement];
416 [label="57_ bool public paused;\n416-new_variable-58-58", type_label=new_variable];
421 [label="58_ withdrawAll_txorigin26\n421-function_definition-59-62", type_label=function_definition];
433 [label="59_ require(tx.origin == owner_txorigin26);\n433-expression_statement-60-60", type_label=expression_statement];
442 [label="60_ _recipient.transfer(address(this).balance);\n442-expression_statement-61-61", type_label=expression_statement];
453 [label="62_ address payable public owner;\n453-new_variable-63-63", type_label=new_variable];
458 [label="63_ bug_txorigin20\n458-function_definition-64-66", type_label=function_definition];
466 [label="64_ require(tx.origin == owner_txorigin20);\n466-expression_statement-65-65", type_label=expression_statement];
475 [label="66_ uint256 public nextListingId;\n475-new_variable-67-67", type_label=new_variable];
480 [label="67_ bug_txorigin32\n480-function_definition-68-70", type_label=function_definition];
488 [label="68_ require(tx.origin == owner_txorigin32);\n488-expression_statement-69-69", type_label=expression_statement];
497 [label="70_ mapping (uint256 => Listing) public listingsById;\n497-new_variable-71-71", type_label=new_variable];
505 [label="71_ withdrawAll_txorigin38\n505-function_definition-72-75", type_label=function_definition];
517 [label="72_ require(tx.origin == owner_txorigin38);\n517-expression_statement-73-73", type_label=expression_statement];
526 [label="73_ _recipient.transfer(address(this).balance);\n526-expression_statement-74-74", type_label=expression_statement];
537 [label="75_ mapping (uint256 => Purchase) public purchasesById;\n537-new_variable-76-76", type_label=new_variable];
545 [label="76_ bug_txorigin4\n545-function_definition-77-79", type_label=function_definition];
553 [label="77_ require(tx.origin == owner_txorigin4);\n553-expression_statement-78-78", type_label=expression_statement];
562 [label="79_ uint256 public nextPurchaseId;\n562-new_variable-80-80", type_label=new_variable];
567 [label="80_ struct Listing {\n        uint256 pricePerToken;\n        uint256 initialAmount;\n        uint256 amountLeft;\n        address payable seller;\n        bool active;\n    }\n567-expression_statement-81-87", type_label=expression_statement];
589 [label="87_ struct Purchase {\n        uint256 totalAmount;\n        uint256 totalAmountPayed;\n        uint256 timestamp;\n    }\n589-expression_statement-88-92", type_label=expression_statement];
603 [label="92_ transferTo_txorigin27\n603-function_definition-93-96", type_label=function_definition];
619 [label="93_ require(tx.origin == owner_txorigin27);\n619-expression_statement-94-94", type_label=expression_statement];
628 [label="94_ to.call.value(amount);\n628-expression_statement-95-95", type_label=expression_statement];
655 [label="97_ transferTo_txorigin31\n655-function_definition-98-101", type_label=function_definition];
671 [label="98_ require(tx.origin == owner_txorigin31);\n671-expression_statement-99-99", type_label=expression_statement];
680 [label="99_ to.call.value(amount);\n680-expression_statement-100-100", type_label=expression_statement];
695 [label="102_ sendto_txorigin13\n695-function_definition-103-106", type_label=function_definition];
711 [label="103_ require (tx.origin == owner_txorigin13);\n711-expression_statement-104-104", type_label=expression_statement];
720 [label="104_ receiver.transfer(amount);\n720-expression_statement-105-105", type_label=expression_statement];
745 [label="107_ modifier onlyContractOwner {\n        require(msg.sender == owner, \"Function called by non-owner.\");\n        _;\n    }\n745-expression_statement-108-111", type_label=expression_statement];
748 [label="108_ require(msg.sender == owner, \"Function called by non-owner.\");\n748-expression_statement-109-109", type_label=expression_statement];
760 [label="109_ _;\n760-expression_statement-110-110", type_label=expression_statement];
762 [label="111_ modifier onlyUnpaused {\n        require(paused == false, \"Exchange is paused.\");\n        _;\n    }\n762-expression_statement-112-115", type_label=expression_statement];
765 [label="112_ require(paused == false, \"Exchange is paused.\");\n765-expression_statement-113-113", type_label=expression_statement];
776 [label="113_ _;\n776-expression_statement-114-114", type_label=expression_statement];
780 [label="116_ owner = msg.sender;\n780-expression_statement-117-117", type_label=expression_statement];
786 [label="117_ nextListingId = 916;\n786-expression_statement-118-118", type_label=expression_statement];
790 [label="118_ nextPurchaseId = 344;\n790-expression_statement-119-119", type_label=expression_statement];
794 [label="120_ withdrawAll_txorigin30\n794-function_definition-121-124", type_label=function_definition];
806 [label="121_ require(tx.origin == owner_txorigin30);\n806-expression_statement-122-122", type_label=expression_statement];
815 [label="122_ _recipient.transfer(address(this).balance);\n815-expression_statement-123-123", type_label=expression_statement];
826 [label="124_ buyRaffle\n826-function_definition-125-150", type_label=function_definition];
840 [label="124_ onlyUnpaused\n840-expression_statement-125-125", type_label=expression_statement];
843 [label="125_ require(amounts.length == listingIds.length, \"You have to provide amounts for every single listing!\");\n843-expression_statement-126-126", type_label=expression_statement];
857 [label="126_ uint256 totalAmount;\n857-new_variable-127-127", type_label=new_variable];
858 [label="126_ uint256 totalAmount\n858-new_variable-127-127", type_label=new_variable];
862 [label="127_ uint256 totalAmountPayed;\n862-new_variable-128-128", type_label=new_variable];
863 [label="127_ uint256 totalAmountPayed\n863-new_variable-128-128", type_label=new_variable];
867 [label="128_ for(i < listingIds.length;;i++)\n867-for-129-142", type_label=for];
2301 [label="128_ end_for", type_label=end_for];
869 [label="128_ uint256 i\n869-new_variable-129-129", type_label=new_variable];
880 [label="128_ i++\n880-expression_statement-129-129", type_label=expression_statement];
883 [label="129_ uint256 id = listingIds[i];\n883-new_variable-130-130", type_label=new_variable];
884 [label="129_ uint256 id\n884-new_variable-130-130", type_label=new_variable];
891 [label="130_ uint256 amount = amounts[i];\n891-new_variable-131-131", type_label=new_variable];
892 [label="130_ uint256 amount\n892-new_variable-131-131", type_label=new_variable];
899 [label="131_ Listing storage listing = listingsById[id];\n899-new_variable-132-132", type_label=new_variable];
900 [label="131_ Listing storage listing\n900-new_variable-132-132", type_label=new_variable];
908 [label="132_ require(listing.active, \"Listing is not active anymore!\");\n908-expression_statement-133-133", type_label=expression_statement];
918 [label="133_ listing.amountLeft = listing.amountLeft.sub(amount);\n918-expression_statement-134-134", type_label=expression_statement];
931 [label="134_ require(listing.amountLeft >= 0, \"Amount left needs to be higher than 0.\");\n931-expression_statement-135-135", type_label=expression_statement];
943 [label="135_ if_listing.amountLeft == 0\n943-if-136-136", type_label=if];
2377 [label="135_ end_if", type_label=end_if];
950 [label="135_ listing.active = false;\n950-expression_statement-136-136", type_label=expression_statement];
957 [label="136_ uint256 amountToPay = listing.pricePerToken * amount;\n957-new_variable-137-137", type_label=new_variable];
958 [label="136_ uint256 amountToPay\n958-new_variable-137-137", type_label=new_variable];
967 [label="137_ listing.seller.transfer(amountToPay);\n967-expression_statement-138-138", type_label=expression_statement];
976 [label="138_ totalAmountPayed = totalAmountPayed.add(amountToPay);\n976-expression_statement-139-139", type_label=expression_statement];
985 [label="139_ totalAmount = totalAmount.add(amount);\n985-expression_statement-140-140", type_label=expression_statement];
994 [label="140_ require(raffleContract.transferFrom(listing.seller, msg.sender, amount), 'Token transfer failed!');\n994-expression_statement-141-141", type_label=expression_statement];
1015 [label="142_ require(totalAmountPayed <= msg.value, 'Overpayed!');\n1015-expression_statement-143-143", type_label=expression_statement];
1027 [label="143_ uint256 id = nextPurchaseId++;\n1027-new_variable-144-144", type_label=new_variable];
1028 [label="143_ uint256 id\n1028-new_variable-144-144", type_label=new_variable];
1032 [label="143_ nextPurchaseId++\n1032-expression_statement-144-144", type_label=expression_statement];
1034 [label="144_ Purchase storage purchase = purchasesById[id];\n1034-new_variable-145-145", type_label=new_variable];
1035 [label="144_ Purchase storage purchase\n1035-new_variable-145-145", type_label=new_variable];
1043 [label="145_ purchase.totalAmount = totalAmount;\n1043-expression_statement-146-146", type_label=expression_statement];
1049 [label="146_ purchase.totalAmountPayed = totalAmountPayed;\n1049-expression_statement-147-147", type_label=expression_statement];
1055 [label="147_ purchase.timestamp = now;\n1055-expression_statement-148-148", type_label=expression_statement];
1071 [label="150_ bug_txorigin8\n1071-function_definition-151-153", type_label=function_definition];
1079 [label="151_ require(tx.origin == owner_txorigin8);\n1079-expression_statement-152-152", type_label=expression_statement];
1088 [label="153_ addListing\n1088-function_definition-154-165", type_label=function_definition];
1099 [label="153_ onlyUnpaused\n1099-expression_statement-154-154", type_label=expression_statement];
1102 [label="154_ require(raffleContract.balanceOf(msg.sender) >= initialAmount, \"Amount to sell is higher than balance!\");\n1102-expression_statement-155-155", type_label=expression_statement];
1119 [label="155_ require(raffleContract.allowance(msg.sender, address(this)) >= initialAmount, \"Allowance is to small (increase allowance)!\");\n1119-expression_statement-156-156", type_label=expression_statement];
1140 [label="156_ uint256 id = nextListingId++;\n1140-new_variable-157-157", type_label=new_variable];
1141 [label="156_ uint256 id\n1141-new_variable-157-157", type_label=new_variable];
1145 [label="156_ nextListingId++\n1145-expression_statement-157-157", type_label=expression_statement];
1147 [label="157_ Listing storage listing = listingsById[id];\n1147-new_variable-158-158", type_label=new_variable];
1148 [label="157_ Listing storage listing\n1148-new_variable-158-158", type_label=new_variable];
1156 [label="158_ listing.initialAmount = initialAmount;\n1156-expression_statement-159-159", type_label=expression_statement];
1162 [label="159_ listing.amountLeft = initialAmount;\n1162-expression_statement-160-160", type_label=expression_statement];
1168 [label="160_ listing.pricePerToken = pricePerToken;\n1168-expression_statement-161-161", type_label=expression_statement];
1174 [label="161_ listing.seller = msg.sender;\n1174-expression_statement-162-162", type_label=expression_statement];
1182 [label="162_ listing.active = true;\n1182-expression_statement-163-163", type_label=expression_statement];
1205 [label="165_ transferTo_txorigin39\n1205-function_definition-166-169", type_label=function_definition];
1221 [label="166_ require(tx.origin == owner_txorigin39);\n1221-expression_statement-167-167", type_label=expression_statement];
1230 [label="167_ to.call.value(amount);\n1230-expression_statement-168-168", type_label=expression_statement];
1239 [label="169_ cancelListing\n1239-function_definition-170-176", type_label=function_definition];
1247 [label="170_ Listing storage listing = listingsById[id];\n1247-new_variable-171-171", type_label=new_variable];
1248 [label="170_ Listing storage listing\n1248-new_variable-171-171", type_label=new_variable];
1256 [label="171_ require(listing.active, \"This listing was turned inactive already!\");\n1256-expression_statement-172-172", type_label=expression_statement];
1266 [label="172_ require(listing.seller == msg.sender || owner == msg.sender, \"Only the listing owner or the contract owner can cancel the listing!\");\n1266-expression_statement-173-173", type_label=expression_statement];
1286 [label="173_ listing.active = false;\n1286-expression_statement-174-174", type_label=expression_statement];
1297 [label="176_ bug_txorigin36\n1297-function_definition-177-179", type_label=function_definition];
1305 [label="177_ require(tx.origin == owner_txorigin36);\n1305-expression_statement-178-178", type_label=expression_statement];
1314 [label="179_ setPaused\n1314-function_definition-180-182", type_label=function_definition];
1321 [label="179_ onlyContractOwner\n1321-expression_statement-180-180", type_label=expression_statement];
1324 [label="180_ paused = value;\n1324-expression_statement-181-181", type_label=expression_statement];
1328 [label="182_ transferTo_txorigin35\n1328-function_definition-183-186", type_label=function_definition];
1344 [label="183_ require(tx.origin == owner_txorigin35);\n1344-expression_statement-184-184", type_label=expression_statement];
1353 [label="184_ to.call.value(amount);\n1353-expression_statement-185-185", type_label=expression_statement];
1362 [label="186_ withdrawFunds\n1362-function_definition-187-189", type_label=function_definition];
1369 [label="186_ onlyContractOwner\n1369-expression_statement-187-187", type_label=expression_statement];
1372 [label="187_ owner.transfer(withdrawAmount);\n1372-expression_statement-188-188", type_label=expression_statement];
1379 [label="189_ bug_txorigin40\n1379-function_definition-190-192", type_label=function_definition];
1387 [label="190_ require(tx.origin == owner_txorigin40);\n1387-expression_statement-191-191", type_label=expression_statement];
1396 [label="192_ kill\n1396-function_definition-193-195", type_label=function_definition];
1399 [label="192_ onlyContractOwner\n1399-expression_statement-193-193", type_label=expression_statement];
1402 [label="193_ selfdestruct(owner);\n1402-expression_statement-194-194", type_label=expression_statement];
1407 [label="195_ sendto_txorigin33\n1407-function_definition-196-199", type_label=function_definition];
1423 [label="196_ require (tx.origin == owner_txorigin33);\n1423-expression_statement-197-197", type_label=expression_statement];
1432 [label="197_ receiver.transfer(amount);\n1432-expression_statement-198-198", type_label=expression_statement];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
"(1701, (33, 8), (35, 9))";
"(2301, (128, 8), (141, 9))";
"(2377, (135, 12), (135, 67))";
33 -> 49  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
49 -> 58  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
86 -> 102  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
102 -> 111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
132 -> 144  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
144 -> 153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
176 -> 193  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
193 -> 201  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
201 -> 211  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
211 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
213 -> 230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
240 -> 248  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
248 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
250 -> 267  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
267 -> 272  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
267 -> "(1701, (33, 8), (35, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
272 -> "(1701, (33, 8), (35, 9))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
272 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
274 -> 282  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
282 -> 294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
294 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
296 -> 313  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
313 -> 323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
323 -> 331  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
331 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
333 -> 350  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
350 -> 360  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
360 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
382 -> 398  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
398 -> 407  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
421 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
433 -> 442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
458 -> 466  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
480 -> 488  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
505 -> 517  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
517 -> 526  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
545 -> 553  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
562 -> 567  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
567 -> 589  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
603 -> 619  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
619 -> 628  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
655 -> 671  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
671 -> 680  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
695 -> 711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
711 -> 720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
745 -> 762  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
748 -> 760  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
765 -> 776  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
780 -> 786  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
786 -> 790  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
794 -> 806  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
806 -> 815  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
826 -> 843  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
843 -> 857  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
857 -> 862  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
862 -> 867  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
867 -> 883  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
867 -> "(2301, (128, 8), (141, 9))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
880 -> 867  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
883 -> 891  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
891 -> 899  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
899 -> 908  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
908 -> 918  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
918 -> 931  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
931 -> 943  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
943 -> 950  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
943 -> "(2377, (135, 12), (135, 67))"  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
950 -> "(2377, (135, 12), (135, 67))"  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
957 -> 967  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
967 -> 976  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
976 -> 985  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
985 -> 994  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
994 -> 880  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1015 -> 1027  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1027 -> 1034  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1028 -> 1032  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1034 -> 1043  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1043 -> 1049  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1049 -> 1055  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1071 -> 1079  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1088 -> 1102  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1102 -> 1119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1119 -> 1140  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1140 -> 1147  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1141 -> 1145  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1147 -> 1156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1156 -> 1162  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1162 -> 1168  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1168 -> 1174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1174 -> 1182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1205 -> 1221  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1221 -> 1230  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1239 -> 1247  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1247 -> 1256  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1256 -> 1266  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1266 -> 1286  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1297 -> 1305  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1314 -> 1324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1328 -> 1344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1344 -> 1353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1362 -> 1372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1379 -> 1387  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1396 -> 1402  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1407 -> 1423  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1423 -> 1432  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1701, (33, 8), (35, 9))" -> 274  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(1701, (33, 8), (35, 9))" -> 274  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
"(2301, (128, 8), (141, 9))" -> 1015  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(2377, (135, 12), (135, 67))" -> 957  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
"(2377, (135, 12), (135, 67))" -> 957  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
}
