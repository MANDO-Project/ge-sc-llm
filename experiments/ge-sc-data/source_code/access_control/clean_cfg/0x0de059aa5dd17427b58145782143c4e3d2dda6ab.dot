digraph  {
12 [label="2_ mul\n12-function_definition-3-10", type_label=function_definition];
29 [label="3_ if_a == 0\n29-if-4-6", type_label=if];
34 [label="4_ return 0;\n34-return-5-5", type_label=return];
36 [label="6_ uint256 c = a * b;\n36-new_variable-7-7", type_label=new_variable];
37 [label="6_ uint256 c\n37-new_variable-7-7", type_label=new_variable];
44 [label="7_ assert(c / a == b);\n44-expression_statement-8-8", type_label=expression_statement];
53 [label="8_ return c;\n53-return-9-9", type_label=return];
55 [label="10_ div\n55-function_definition-11-14", type_label=function_definition];
72 [label="11_ uint256 c = a / b;\n72-new_variable-12-12", type_label=new_variable];
73 [label="11_ uint256 c\n73-new_variable-12-12", type_label=new_variable];
80 [label="12_ return c;\n80-return-13-13", type_label=return];
82 [label="14_ sub\n82-function_definition-15-18", type_label=function_definition];
99 [label="15_ assert(b <= a);\n99-expression_statement-16-16", type_label=expression_statement];
106 [label="16_ return a - b;\n106-return-17-17", type_label=return];
110 [label="18_ add\n110-function_definition-19-23", type_label=function_definition];
127 [label="19_ uint256 c = a + b;\n127-new_variable-20-20", type_label=new_variable];
128 [label="19_ uint256 c\n128-new_variable-20-20", type_label=new_variable];
135 [label="20_ assert(c >= a);\n135-expression_statement-21-21", type_label=expression_statement];
142 [label="21_ return c;\n142-return-22-22", type_label=return];
147 [label="25_ totalSupply\n147-function_definition-26-26", type_label=function_definition];
155 [label="26_ balanceOf\n155-function_definition-27-27", type_label=function_definition];
167 [label="27_ transfer\n167-function_definition-28-28", type_label=function_definition];
202 [label="31_ allowance\n202-function_definition-32-32", type_label=function_definition];
218 [label="32_ transferFrom\n218-function_definition-33-33", type_label=function_definition];
237 [label="33_ approve\n237-function_definition-34-34", type_label=function_definition];
277 [label="38_ mapping(address => uint256) balances;\n277-new_variable-39-39", type_label=new_variable];
283 [label="39_ uint256 public totalSupply_;\n283-new_variable-40-40", type_label=new_variable];
288 [label="40_ totalSupply\n288-function_definition-41-43", type_label=function_definition];
297 [label="41_ return totalSupply_;\n297-return-42-42", type_label=return];
299 [label="43_ transfer\n299-function_definition-44-52", type_label=function_definition];
315 [label="44_ require(msg.data.length>=(2*32)+4);\n315-expression_statement-45-45", type_label=expression_statement];
331 [label="45_ require(_to != address(0));\n331-expression_statement-46-46", type_label=expression_statement];
340 [label="46_ require(_value <= balances[msg.sender]);\n340-expression_statement-47-47", type_label=expression_statement];
351 [label="47_ balances[msg.sender] = balances[msg.sender].sub(_value);\n351-expression_statement-48-48", type_label=expression_statement];
368 [label="48_ balances[_to] = balances[_to].add(_value);\n368-expression_statement-49-49", type_label=expression_statement];
391 [label="50_ return true;\n391-return-51-51", type_label=return];
394 [label="52_ balanceOf\n394-function_definition-53-55", type_label=function_definition];
408 [label="53_ return balances[_owner];\n408-return-54-54", type_label=return];
421 [label="57_ mapping (address => mapping (address => uint256)) internal allowed;\n421-new_variable-58-58", type_label=new_variable];
430 [label="58_ transferFrom\n430-function_definition-59-68", type_label=function_definition];
450 [label="59_ require(_to != address(0));\n450-expression_statement-60-60", type_label=expression_statement];
459 [label="60_ require(_value <= balances[_from]);\n459-expression_statement-61-61", type_label=expression_statement];
468 [label="61_ require(_value <= allowed[_from][msg.sender]);\n468-expression_statement-62-62", type_label=expression_statement];
481 [label="62_ balances[_from] = balances[_from].sub(_value);\n481-expression_statement-63-63", type_label=expression_statement];
494 [label="63_ balances[_to] = balances[_to].add(_value);\n494-expression_statement-64-64", type_label=expression_statement];
507 [label="64_ allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n507-expression_statement-65-65", type_label=expression_statement];
536 [label="66_ return true;\n536-return-67-67", type_label=return];
539 [label="68_ approve\n539-function_definition-69-75", type_label=function_definition];
555 [label="69_ require(_value==0||allowed[msg.sender][_spender]==0);\n555-expression_statement-70-70", type_label=expression_statement];
572 [label="70_ require(msg.data.length>=(2*32)+4);\n572-expression_statement-71-71", type_label=expression_statement];
588 [label="71_ allowed[msg.sender][_spender] = _value;\n588-expression_statement-72-72", type_label=expression_statement];
608 [label="73_ return true;\n608-return-74-74", type_label=return];
611 [label="75_ allowance\n611-function_definition-76-78", type_label=function_definition];
628 [label="76_ return allowed[_owner][_spender];\n628-return-77-77", type_label=return];
634 [label="78_ increaseApproval\n634-function_definition-79-83", type_label=function_definition];
650 [label="79_ allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n650-expression_statement-80-80", type_label=expression_statement];
687 [label="81_ return true;\n687-return-82-82", type_label=return];
690 [label="83_ decreaseApproval\n690-function_definition-84-93", type_label=function_definition];
706 [label="84_ uint oldValue = allowed[msg.sender][_spender];\n706-new_variable-85-85", type_label=new_variable];
707 [label="84_ uint oldValue\n707-new_variable-85-85", type_label=new_variable];
718 [label="85_ if__subtractedValue > oldValue\n718-if-86-90", type_label=if];
723 [label="86_ allowed[msg.sender][_spender] = 0;\n723-expression_statement-87-87", type_label=expression_statement];
734 [label="88_ allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n734-expression_statement-89-89", type_label=expression_statement];
765 [label="91_ return true;\n765-return-92-92", type_label=return];
774 [label="95_ string public name;\n774-new_variable-96-96", type_label=new_variable];
779 [label="96_ string public symbol;\n779-new_variable-97-97", type_label=new_variable];
784 [label="97_ uint8 public decimals;\n784-new_variable-98-98", type_label=new_variable];
789 [label="98_ uint256 public precentDecimal=2;\n789-new_variable-99-99", type_label=new_variable];
795 [label="99_ uint256 public minerAndDeveloperPercent=70;\n795-new_variable-100-100", type_label=new_variable];
801 [label="100_ uint256 public openDaoFundPercent=10;\n801-new_variable-101-101", type_label=new_variable];
807 [label="101_ uint256 public codeCoinCoreTeamPercent=10;\n807-new_variable-102-102", type_label=new_variable];
813 [label="102_ uint256 public mineralcloudFundPercent=10;\n813-new_variable-103-103", type_label=new_variable];
819 [label="103_ address public minerAndDeveloperFundAccount;\n819-new_variable-104-104", type_label=new_variable];
824 [label="104_ address public openDaoFundAccount;\n824-new_variable-105-105", type_label=new_variable];
829 [label="105_ address public codeCoinCoreTeamAccount;\n829-new_variable-106-106", type_label=new_variable];
834 [label="106_ address public mineralcloudFundAccount;\n834-new_variable-107-107", type_label=new_variable];
839 [label="107_ uint256 public minerAndDeveloperFundBalnace;\n839-new_variable-108-108", type_label=new_variable];
844 [label="108_ uint256 public openDaoFundBalnace;\n844-new_variable-109-109", type_label=new_variable];
849 [label="109_ uint256 public codeCoinCoreTeamBalnace;\n849-new_variable-110-110", type_label=new_variable];
854 [label="110_ uint256 public mineralcloudFundBalnace;\n854-new_variable-111-111", type_label=new_variable];
893 [label="113_ name = _name;\n893-expression_statement-114-114", type_label=expression_statement];
897 [label="114_ symbol = _symbol;\n897-expression_statement-115-115", type_label=expression_statement];
901 [label="115_ decimals = _decimals;\n901-expression_statement-116-116", type_label=expression_statement];
905 [label="116_ totalSupply_ = _initialSupply*10**uint256(_decimals);\n905-expression_statement-117-117", type_label=expression_statement];
915 [label="117_ minerAndDeveloperFundAccount=_minerAndDeveloperFundAccount;\n915-expression_statement-118-118", type_label=expression_statement];
919 [label="118_ openDaoFundAccount=_openDaoFundAccount;\n919-expression_statement-119-119", type_label=expression_statement];
923 [label="119_ codeCoinCoreTeamAccount=_codeCoinCoreTeamAccount;\n923-expression_statement-120-120", type_label=expression_statement];
927 [label="120_ mineralcloudFundAccount=_mineralcloudFundAccount;\n927-expression_statement-121-121", type_label=expression_statement];
931 [label="121_ minerAndDeveloperFundBalnace=totalSupply_.mul(minerAndDeveloperPercent).div(10 ** precentDecimal);\n931-expression_statement-122-122", type_label=expression_statement];
947 [label="122_ openDaoFundBalnace=totalSupply_.mul(openDaoFundPercent).div(10 ** precentDecimal);\n947-expression_statement-123-123", type_label=expression_statement];
963 [label="123_ codeCoinCoreTeamBalnace=totalSupply_.mul(codeCoinCoreTeamPercent).div(10 ** precentDecimal);\n963-expression_statement-124-124", type_label=expression_statement];
979 [label="124_ mineralcloudFundBalnace=totalSupply_.mul(mineralcloudFundPercent).div(10 ** precentDecimal);\n979-expression_statement-125-125", type_label=expression_statement];
995 [label="125_ balances[_minerAndDeveloperFundAccount]=minerAndDeveloperFundBalnace;\n995-expression_statement-126-126", type_label=expression_statement];
1001 [label="126_ balances[_openDaoFundAccount]=openDaoFundBalnace;\n1001-expression_statement-127-127", type_label=expression_statement];
1007 [label="127_ balances[_codeCoinCoreTeamAccount]=codeCoinCoreTeamBalnace;\n1007-expression_statement-128-128", type_label=expression_statement];
1013 [label="128_ balances[_mineralcloudFundAccount]=mineralcloudFundBalnace;\n1013-expression_statement-129-129", type_label=expression_statement];
1019 [label="130_ transfer\n1019-function_definition-131-133", type_label=function_definition];
1035 [label="131_ return super.transfer(_to, _value);\n1035-return-132-132", type_label=return];
1044 [label="133_ transferFrom\n1044-function_definition-134-136", type_label=function_definition];
1064 [label="134_ return super.transferFrom(_from, _to, _value);\n1064-return-135-135", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
749;
12 -> 36  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 34  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
29 -> 36  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
34 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
36 -> 44  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
44 -> 53  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
53 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
55 -> 72  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
72 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
82 -> 99  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
99 -> 106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
106 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
110 -> 127  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
127 -> 135  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
135 -> 142  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
142 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
277 -> 283  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
288 -> 297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
297 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
299 -> 315  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
315 -> 331  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
331 -> 340  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
340 -> 351  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
391 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
394 -> 408  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
408 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
430 -> 450  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
450 -> 459  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
459 -> 468  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
468 -> 481  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
481 -> 494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
494 -> 507  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
536 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
539 -> 555  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
555 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
572 -> 588  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
608 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
611 -> 628  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
628 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
634 -> 650  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
690 -> 706  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
706 -> 718  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
718 -> 723  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
718 -> 734  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
723 -> 749  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
765 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
774 -> 779  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
779 -> 784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
784 -> 789  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
789 -> 795  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
795 -> 801  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
801 -> 807  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
807 -> 813  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
813 -> 819  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
819 -> 824  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
824 -> 829  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
829 -> 834  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
834 -> 839  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
839 -> 844  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
844 -> 849  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
849 -> 854  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
893 -> 897  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
897 -> 901  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
901 -> 905  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
905 -> 915  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
915 -> 919  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
919 -> 923  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
923 -> 927  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
927 -> 931  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
931 -> 947  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
947 -> 963  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
963 -> 979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
979 -> 995  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
995 -> 1001  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1001 -> 1007  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1007 -> 1013  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1019 -> 1035  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1035 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1044 -> 1064  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1064 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
