digraph  {
13 [label="2_ totalSupply\n13-function_definition-3-3", type_label=function_definition];
21 [label="3_ balanceOf\n21-function_definition-4-4", type_label=function_definition];
34 [label="4_ allowance\n34-function_definition-5-5", type_label=function_definition];
51 [label="5_ transfer\n51-function_definition-6-6", type_label=function_definition];
67 [label="6_ approve\n67-function_definition-7-7", type_label=function_definition];
83 [label="7_ transferFrom\n83-function_definition-8-8", type_label=function_definition];
134 [label="12_ address public owner;\n134-new_variable-13-13", type_label=new_variable];
139 [label="13_ address public newOwner;\n139-new_variable-14-14", type_label=new_variable];
156 [label="16_ owner = msg.sender;\n156-expression_statement-17-17", type_label=expression_statement];
162 [label="18_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n162-expression_statement-19-22", type_label=expression_statement];
165 [label="19_ require(msg.sender == owner);\n165-expression_statement-20-20", type_label=expression_statement];
174 [label="20_ _;\n174-expression_statement-21-21", type_label=expression_statement];
176 [label="22_ transferOwnership\n176-function_definition-23-25", type_label=function_definition];
183 [label="22_ onlyOwner\n183-expression_statement-23-23", type_label=expression_statement];
186 [label="23_ newOwner = _newOwner;\n186-expression_statement-24-24", type_label=expression_statement];
190 [label="25_ acceptOwnership\n190-function_definition-26-31", type_label=function_definition];
194 [label="26_ require(msg.sender == newOwner);\n194-expression_statement-27-27", type_label=expression_statement];
209 [label="28_ owner = newOwner;\n209-expression_statement-29-29", type_label=expression_statement];
213 [label="29_ newOwner = address(0);\n213-expression_statement-30-30", type_label=expression_statement];
222 [label="33_ add\n222-function_definition-34-37", type_label=function_definition];
240 [label="34_ c = a + b;\n240-expression_statement-35-35", type_label=expression_statement];
246 [label="35_ require(c >= a);\n246-expression_statement-36-36", type_label=expression_statement];
253 [label="37_ sub\n253-function_definition-38-41", type_label=function_definition];
271 [label="38_ require(b <= a);\n271-expression_statement-39-39", type_label=expression_statement];
278 [label="39_ c = a - b;\n278-expression_statement-40-40", type_label=expression_statement];
298 [label="44_ string private _symbol  = \"VNXLU\";\n298-new_variable-45-45", type_label=new_variable];
305 [label="45_ string private _name    = \"VNX Exchange\";\n305-new_variable-46-46", type_label=new_variable];
312 [label="46_ uint8 private _decimals = 18;\n312-new_variable-47-47", type_label=new_variable];
318 [label="47_ uint private _totalSupply;\n318-new_variable-48-48", type_label=new_variable];
323 [label="48_ mapping(address => uint) balances;\n323-new_variable-49-49", type_label=new_variable];
329 [label="49_ mapping(address => mapping(address => uint)) allowed;\n329-new_variable-50-50", type_label=new_variable];
343 [label="51_ _totalSupply = initTotalTokens * 10**uint(_decimals);\n343-expression_statement-52-52", type_label=expression_statement];
353 [label="52_ balances[owner] = _totalSupply;\n353-expression_statement-53-53", type_label=expression_statement];
369 [label="55_ name\n369-function_definition-56-58", type_label=function_definition];
378 [label="56_ return _name;\n378-return-57-57", type_label=return];
380 [label="58_ symbol\n380-function_definition-59-61", type_label=function_definition];
389 [label="59_ return _symbol;\n389-return-60-60", type_label=return];
391 [label="61_ decimals\n391-function_definition-62-64", type_label=function_definition];
400 [label="62_ return _decimals;\n400-return-63-63", type_label=return];
402 [label="64_ totalSupply\n402-function_definition-65-67", type_label=function_definition];
412 [label="65_ return _totalSupply.sub(balances[address(0)]);\n412-return-66-66", type_label=return];
423 [label="67_ balanceOf\n423-function_definition-68-70", type_label=function_definition];
437 [label="68_ return balances[tokenOwner];\n437-return-69-69", type_label=return];
441 [label="70_ transfer\n441-function_definition-71-76", type_label=function_definition];
458 [label="71_ balances[msg.sender] = balances[msg.sender].sub(tokens);\n458-expression_statement-72-72", type_label=expression_statement];
475 [label="72_ balances[to] = balances[to].add(tokens);\n475-expression_statement-73-73", type_label=expression_statement];
498 [label="74_ return true;\n498-return-75-75", type_label=return];
501 [label="76_ approve\n501-function_definition-77-81", type_label=function_definition];
518 [label="77_ allowed[msg.sender][spender] = tokens;\n518-expression_statement-78-78", type_label=expression_statement];
538 [label="79_ return true;\n538-return-80-80", type_label=return];
541 [label="81_ transferFrom\n541-function_definition-82-88", type_label=function_definition];
562 [label="82_ balances[from] = balances[from].sub(tokens);\n562-expression_statement-83-83", type_label=expression_statement];
575 [label="83_ allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n575-expression_statement-84-84", type_label=expression_statement];
596 [label="84_ balances[to] = balances[to].add(tokens);\n596-expression_statement-85-85", type_label=expression_statement];
617 [label="86_ return true;\n617-return-87-87", type_label=return];
620 [label="88_ allowance\n620-function_definition-89-91", type_label=function_definition];
638 [label="89_ return allowed[tokenOwner][spender];\n638-return-90-90", type_label=return];
650 [label="94_ transferAnyERC20Token\n650-function_definition-95-97", type_label=function_definition];
661 [label="94_ onlyOwner\n661-expression_statement-95-95", type_label=expression_statement];
669 [label="95_ return ERC20Interface(tokenAddress).transfer(owner, tokens);\n669-return-96-96", type_label=return];
1 [label="0_ start_node", type_label=start];
2 [label="0_ exit_node", type_label=exit];
134 -> 139  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
165 -> 174  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
176 -> 186  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
190 -> 194  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
209 -> 213  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
222 -> 240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
240 -> 246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
253 -> 271  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
271 -> 278  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
298 -> 305  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
305 -> 312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
312 -> 318  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
318 -> 323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
323 -> 329  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
343 -> 353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
369 -> 378  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
378 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
380 -> 389  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
389 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
391 -> 400  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
400 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
402 -> 412  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
423 -> 437  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
437 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
441 -> 458  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
458 -> 475  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
498 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
501 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
538 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
541 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
562 -> 575  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
575 -> 596  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
617 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
620 -> 638  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
638 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
650 -> 669  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
669 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
