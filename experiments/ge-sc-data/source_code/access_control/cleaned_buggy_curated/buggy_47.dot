digraph  {
13 [label="2_ function totalSupply() public view returns (uint);\n13-function_definition-3-3", method="totalSupply()", type_label=function_definition];
21 [label="3_ function sendto_txorigin17(address payable receiver, uint amount,address owner_txorigin17) public {\n	require (tx.origin == owner_txorigin17);\n	receiver.transfer(amount);\n}\n21-function_definition-4-7", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=function_definition];
37 [label="4_ require (tx.origin == owner_txorigin17);\n37-expression_statement-5-5", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=expression_statement];
46 [label="5_ receiver.transfer(amount);\n46-expression_statement-6-6", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=expression_statement];
53 [label="7_ function balanceOf(address tokenOwner) public view returns (uint balance);\n53-function_definition-8-8", method="balanceOf(address tokenOwner)", type_label=function_definition];
66 [label="8_ function sendto_txorigin37(address payable receiver, uint amount,address owner_txorigin37) public {\n	require (tx.origin == owner_txorigin37);\n	receiver.transfer(amount);\n}\n66-function_definition-9-12", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=function_definition];
82 [label="9_ require (tx.origin == owner_txorigin37);\n82-expression_statement-10-10", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=expression_statement];
91 [label="10_ receiver.transfer(amount);\n91-expression_statement-11-11", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=expression_statement];
98 [label="12_ function transfer(address to, uint tokens) public returns (bool success);\n98-function_definition-13-13", method="transfer(address to,uint tokens)", type_label=function_definition];
114 [label="13_ function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n114-function_definition-14-17", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=function_definition];
130 [label="14_ require(tx.origin == owner_txorigin3);\n130-expression_statement-15-15", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=expression_statement];
139 [label="15_ to.call.value(amount);\n139-expression_statement-16-16", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=expression_statement];
148 [label="17_ function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n148-function_definition-18-18", method="allowance(address tokenOwner,address spender)", type_label=function_definition];
165 [label="18_ function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n165-function_definition-19-22", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=function_definition];
181 [label="19_ require (tx.origin == owner_txorigin9);\n181-expression_statement-20-20", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
190 [label="20_ receiver.transfer(amount);\n190-expression_statement-21-21", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
197 [label="22_ function approve(address spender, uint tokens) public returns (bool success);\n197-function_definition-23-23", method="approve(address spender,uint tokens)", type_label=function_definition];
213 [label="23_ function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n213-function_definition-24-27", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=function_definition];
229 [label="24_ require (tx.origin == owner_txorigin25);\n229-expression_statement-25-25", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
238 [label="25_ receiver.transfer(amount);\n238-expression_statement-26-26", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
245 [label="27_ function transferFrom(address from, address to, uint tokens) public returns (bool success);\n245-function_definition-28-28", method="transferFrom(address from,address to,uint tokens)", type_label=function_definition];
265 [label="28_ function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n265-function_definition-29-32", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=function_definition];
281 [label="29_ require(tx.origin == owner_txorigin19);\n281-expression_statement-30-30", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
290 [label="30_ to.call.value(amount);\n290-expression_statement-31-31", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
333 [label="36_ function withdrawAll_txorigin18(address payable _recipient,address owner_txorigin18) public {\n        require(tx.origin == owner_txorigin18);\n        _recipient.transfer(address(this).balance);\n    }\n333-function_definition-37-40", method="withdrawAll_txorigin18(address payable _recipient,address owner_txorigin18)", type_label=function_definition];
345 [label="37_ require(tx.origin == owner_txorigin18);\n345-expression_statement-38-38", method="withdrawAll_txorigin18(address payable _recipient,address owner_txorigin18)", type_label=expression_statement];
354 [label="38_ _recipient.transfer(address(this).balance);\n354-expression_statement-39-39", method="withdrawAll_txorigin18(address payable _recipient,address owner_txorigin18)", type_label=expression_statement];
365 [label="40_ string public name = \"Acunar\";\n365-new_variable-41-41", method="", type_label=new_variable];
372 [label="41_ function sendto_txorigin29(address payable receiver, uint amount,address owner_txorigin29) public {\n	require (tx.origin == owner_txorigin29);\n	receiver.transfer(amount);\n}\n372-function_definition-42-45", method="sendto_txorigin29(address payable receiver,uint amount,address owner_txorigin29)", type_label=function_definition];
388 [label="42_ require (tx.origin == owner_txorigin29);\n388-expression_statement-43-43", method="sendto_txorigin29(address payable receiver,uint amount,address owner_txorigin29)", type_label=expression_statement];
397 [label="43_ receiver.transfer(amount);\n397-expression_statement-44-44", method="sendto_txorigin29(address payable receiver,uint amount,address owner_txorigin29)", type_label=expression_statement];
404 [label="45_ string public symbol = \"ACN\";\n404-new_variable-46-46", method="", type_label=new_variable];
411 [label="46_ function withdrawAll_txorigin6(address payable _recipient,address owner_txorigin6) public {\n        require(tx.origin == owner_txorigin6);\n        _recipient.transfer(address(this).balance);\n    }\n411-function_definition-47-50", method="withdrawAll_txorigin6(address payable _recipient,address owner_txorigin6)", type_label=function_definition];
423 [label="47_ require(tx.origin == owner_txorigin6);\n423-expression_statement-48-48", method="withdrawAll_txorigin6(address payable _recipient,address owner_txorigin6)", type_label=expression_statement];
432 [label="48_ _recipient.transfer(address(this).balance);\n432-expression_statement-49-49", method="withdrawAll_txorigin6(address payable _recipient,address owner_txorigin6)", type_label=expression_statement];
443 [label="50_ uint public decimals = 0;\n443-new_variable-51-51", method="", type_label=new_variable];
449 [label="51_ function bug_txorigin16(address owner_txorigin16) public{\n        require(tx.origin == owner_txorigin16);\n    }\n449-function_definition-52-54", method="bug_txorigin16(address owner_txorigin16)", type_label=function_definition];
457 [label="52_ require(tx.origin == owner_txorigin16);\n457-expression_statement-53-53", method="bug_txorigin16(address owner_txorigin16)", type_label=expression_statement];
466 [label="54_ uint public supply;\n466-new_variable-55-55", method="", type_label=new_variable];
471 [label="55_ function bug_txorigin24(  address owner_txorigin24) public{\n        require(tx.origin == owner_txorigin24);\n    }\n471-function_definition-56-58", method="bug_txorigin24(address owner_txorigin24)", type_label=function_definition];
479 [label="56_ require(tx.origin == owner_txorigin24);\n479-expression_statement-57-57", method="bug_txorigin24(address owner_txorigin24)", type_label=expression_statement];
488 [label="58_ address public founder;\n488-new_variable-59-59", method="", type_label=new_variable];
493 [label="59_ function sendto_txorigin5(address payable receiver, uint amount,address owner_txorigin5) public {\n	require (tx.origin == owner_txorigin5);\n	receiver.transfer(amount);\n}\n493-function_definition-60-63", method="sendto_txorigin5(address payable receiver,uint amount,address owner_txorigin5)", type_label=function_definition];
509 [label="60_ require (tx.origin == owner_txorigin5);\n509-expression_statement-61-61", method="sendto_txorigin5(address payable receiver,uint amount,address owner_txorigin5)", type_label=expression_statement];
518 [label="61_ receiver.transfer(amount);\n518-expression_statement-62-62", method="sendto_txorigin5(address payable receiver,uint amount,address owner_txorigin5)", type_label=expression_statement];
525 [label="63_ mapping(address => uint) public balances;\n525-new_variable-64-64", method="", type_label=new_variable];
532 [label="64_ function transferTo_txorigin15(address to, uint amount,address owner_txorigin15) public {\n  require(tx.origin == owner_txorigin15);\n  to.call.value(amount);\n}\n532-function_definition-65-68", method="transferTo_txorigin15(address to,uint amount,address owner_txorigin15)", type_label=function_definition];
548 [label="65_ require(tx.origin == owner_txorigin15);\n548-expression_statement-66-66", method="transferTo_txorigin15(address to,uint amount,address owner_txorigin15)", type_label=expression_statement];
557 [label="66_ to.call.value(amount);\n557-expression_statement-67-67", method="transferTo_txorigin15(address to,uint amount,address owner_txorigin15)", type_label=expression_statement];
566 [label="68_ mapping(address => mapping(address => uint)) allowed;\n566-new_variable-69-69", method="", type_label=new_variable];
604 [label="72_ supply = 200000000;\n604-expression_statement-73-73", method="", type_label=expression_statement];
608 [label="73_ founder = msg.sender;\n608-expression_statement-74-74", method="", type_label=expression_statement];
614 [label="74_ balances[founder] = supply;\n614-expression_statement-75-75", method="", type_label=expression_statement];
620 [label="76_ function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n620-function_definition-77-80", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=function_definition];
632 [label="77_ require(tx.origin == owner_txorigin26);\n632-expression_statement-78-78", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
641 [label="78_ _recipient.transfer(address(this).balance);\n641-expression_statement-79-79", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
652 [label="80_ function allowance(address tokenOwner, address spender) view public returns(uint){\n        return allowed[tokenOwner][spender];\n    }\n652-function_definition-81-83", method="allowance(address tokenOwner,address spender)", type_label=function_definition];
669 [label="81_ return allowed[tokenOwner][spender];\n669-return-82-82", method="allowance(address tokenOwner,address spender)", type_label=return];
675 [label="83_ function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n675-function_definition-84-86", method="bug_txorigin20(address owner_txorigin20)", type_label=function_definition];
683 [label="84_ require(tx.origin == owner_txorigin20);\n683-expression_statement-85-85", method="bug_txorigin20(address owner_txorigin20)", type_label=expression_statement];
692 [label="86_ function approve(address spender, uint tokens) public returns(bool){\n        require(balances[msg.sender] >= tokens);\n        require(tokens > 0);\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n692-function_definition-87-93", method="approve(address spender,uint tokens)", type_label=function_definition];
708 [label="87_ require(balances[msg.sender] >= tokens);\n708-expression_statement-88-88", method="approve(address spender,uint tokens)", type_label=expression_statement];
719 [label="88_ require(tokens > 0);\n719-expression_statement-89-89", method="approve(address spender,uint tokens)", type_label=expression_statement];
726 [label="89_ allowed[msg.sender][spender] = tokens;\n726-expression_statement-90-90", method="approve(address spender,uint tokens)", type_label=expression_statement];
746 [label="91_ return true;\n746-return-92-92", method="approve(address spender,uint tokens)", type_label=return];
749 [label="93_ function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n749-function_definition-94-96", method="bug_txorigin32(address owner_txorigin32)", type_label=function_definition];
757 [label="94_ require(tx.origin == owner_txorigin32);\n757-expression_statement-95-95", method="bug_txorigin32(address owner_txorigin32)", type_label=expression_statement];
766 [label="96_ function transferFrom(address from, address to, uint tokens) public returns(bool){\n        require(allowed[from][to] >= tokens);\n        require(balances[from] >= tokens);\n        balances[from] -= tokens;\n        balances[to] += tokens;\n        allowed[from][to] -= tokens;\n        return true;\n    }\n766-function_definition-97-104", method="transferFrom(address from,address to,uint tokens)", type_label=function_definition];
786 [label="97_ require(allowed[from][to] >= tokens);\n786-expression_statement-98-98", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
797 [label="98_ require(balances[from] >= tokens);\n797-expression_statement-99-99", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
806 [label="99_ balances[from] -= tokens;\n806-expression_statement-100-100", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
812 [label="100_ balances[to] += tokens;\n812-expression_statement-101-101", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
818 [label="101_ allowed[from][to] -= tokens;\n818-expression_statement-102-102", method="transferFrom(address from,address to,uint tokens)", type_label=expression_statement];
826 [label="102_ return true;\n826-return-103-103", method="transferFrom(address from,address to,uint tokens)", type_label=return];
829 [label="104_ function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n829-function_definition-105-108", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=function_definition];
841 [label="105_ require(tx.origin == owner_txorigin38);\n841-expression_statement-106-106", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
850 [label="106_ _recipient.transfer(address(this).balance);\n850-expression_statement-107-107", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
861 [label="108_ function totalSupply() public view returns (uint){\n        return supply;\n    }\n861-function_definition-109-111", method="totalSupply()", type_label=function_definition];
870 [label="109_ return supply;\n870-return-110-110", method="totalSupply()", type_label=return];
872 [label="111_ function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n872-function_definition-112-114", method="bug_txorigin4(address owner_txorigin4)", type_label=function_definition];
880 [label="112_ require(tx.origin == owner_txorigin4);\n880-expression_statement-113-113", method="bug_txorigin4(address owner_txorigin4)", type_label=expression_statement];
889 [label="114_ function balanceOf(address tokenOwner) public view returns (uint balance){\n         return balances[tokenOwner];\n     }\n889-function_definition-115-117", method="balanceOf(address tokenOwner)", type_label=function_definition];
903 [label="115_ return balances[tokenOwner];\n903-return-116-116", method="balanceOf(address tokenOwner)", type_label=return];
907 [label="117_ function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n907-function_definition-118-121", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=function_definition];
923 [label="118_ require(tx.origin == owner_txorigin7);\n923-expression_statement-119-119", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
932 [label="119_ to.call.value(amount);\n932-expression_statement-120-120", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
941 [label="121_ function transfer(address to, uint tokens) public returns (bool success){\n         require(balances[msg.sender] >= tokens && tokens > 0);\n         balances[to] += tokens;\n         balances[msg.sender] -= tokens;\n         emit Transfer(msg.sender, to, tokens);\n         return true;\n     }\n941-function_definition-122-128", method="transfer(address to,uint tokens)", type_label=function_definition];
958 [label="122_ require(balances[msg.sender] >= tokens && tokens > 0);\n958-expression_statement-123-123", method="transfer(address to,uint tokens)", type_label=expression_statement];
973 [label="123_ balances[to] += tokens;\n973-expression_statement-124-124", method="transfer(address to,uint tokens)", type_label=expression_statement];
979 [label="124_ balances[msg.sender] -= tokens;\n979-expression_statement-125-125", method="transfer(address to,uint tokens)", type_label=expression_statement];
997 [label="126_ return true;\n997-return-127-127", method="transfer(address to,uint tokens)", type_label=return];
1000 [label="128_ function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n1000-function_definition-129-132", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=function_definition];
1016 [label="129_ require(tx.origin == owner_txorigin23);\n1016-expression_statement-130-130", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
1025 [label="130_ to.call.value(amount);\n1025-expression_statement-131-131", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
1040 [label="134_ function bug_txorigin28(  address owner_txorigin28) public{\n        require(tx.origin == owner_txorigin28);\n    }\n1040-function_definition-135-137", method="bug_txorigin28(address owner_txorigin28)", type_label=function_definition];
1048 [label="135_ require(tx.origin == owner_txorigin28);\n1048-expression_statement-136-136", method="bug_txorigin28(address owner_txorigin28)", type_label=expression_statement];
1057 [label="137_ address public admin;\n1057-new_variable-138-138", method="", type_label=new_variable];
1062 [label="138_ function withdrawAll_txorigin34(address payable _recipient,address owner_txorigin34) public {\n        require(tx.origin == owner_txorigin34);\n        _recipient.transfer(address(this).balance);\n    }\n1062-function_definition-139-142", method="withdrawAll_txorigin34(address payable _recipient,address owner_txorigin34)", type_label=function_definition];
1074 [label="139_ require(tx.origin == owner_txorigin34);\n1074-expression_statement-140-140", method="withdrawAll_txorigin34(address payable _recipient,address owner_txorigin34)", type_label=expression_statement];
1083 [label="140_ _recipient.transfer(address(this).balance);\n1083-expression_statement-141-141", method="withdrawAll_txorigin34(address payable _recipient,address owner_txorigin34)", type_label=expression_statement];
1094 [label="142_ address payable public deposit;\n1094-new_variable-143-143", method="", type_label=new_variable];
1099 [label="143_ function sendto_txorigin21(address payable receiver, uint amount,address owner_txorigin21) public {\n	require (tx.origin == owner_txorigin21);\n	receiver.transfer(amount);\n}\n1099-function_definition-144-147", method="sendto_txorigin21(address payable receiver,uint amount,address owner_txorigin21)", type_label=function_definition];
1115 [label="144_ require (tx.origin == owner_txorigin21);\n1115-expression_statement-145-145", method="sendto_txorigin21(address payable receiver,uint amount,address owner_txorigin21)", type_label=expression_statement];
1124 [label="145_ receiver.transfer(amount);\n1124-expression_statement-146-146", method="sendto_txorigin21(address payable receiver,uint amount,address owner_txorigin21)", type_label=expression_statement];
1131 [label="147_ uint tokenPrice = 0.0001 ether;\n1131-new_variable-148-148", method="", type_label=new_variable];
1137 [label="148_ function withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10) public {\n        require(tx.origin == owner_txorigin10);\n        _recipient.transfer(address(this).balance);\n    }\n1137-function_definition-149-152", method="withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10)", type_label=function_definition];
1149 [label="149_ require(tx.origin == owner_txorigin10);\n1149-expression_statement-150-150", method="withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10)", type_label=expression_statement];
1158 [label="150_ _recipient.transfer(address(this).balance);\n1158-expression_statement-151-151", method="withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10)", type_label=expression_statement];
1169 [label="152_ uint public hardCap =21000 ether;\n1169-new_variable-153-153", method="", type_label=new_variable];
1176 [label="153_ function withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22) public {\n        require(tx.origin == owner_txorigin22);\n        _recipient.transfer(address(this).balance);\n    }\n1176-function_definition-154-157", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=function_definition];
1188 [label="154_ require(tx.origin == owner_txorigin22);\n1188-expression_statement-155-155", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=expression_statement];
1197 [label="155_ _recipient.transfer(address(this).balance);\n1197-expression_statement-156-156", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=expression_statement];
1208 [label="157_ uint public raisedAmount;\n1208-new_variable-158-158", method="", type_label=new_variable];
1213 [label="158_ function bug_txorigin12(address owner_txorigin12) public{\n        require(tx.origin == owner_txorigin12);\n    }\n1213-function_definition-159-161", method="bug_txorigin12(address owner_txorigin12)", type_label=function_definition];
1221 [label="159_ require(tx.origin == owner_txorigin12);\n1221-expression_statement-160-160", method="bug_txorigin12(address owner_txorigin12)", type_label=expression_statement];
1230 [label="161_ uint public saleStart = now;\n1230-new_variable-162-162", method="", type_label=new_variable];
1236 [label="162_ uint public saleEnd = now + 14515200;\n1236-new_variable-163-163", method="", type_label=new_variable];
1244 [label="163_ uint public coinTradeStart = saleEnd + 15120000;\n1244-new_variable-164-164", method="", type_label=new_variable];
1252 [label="164_ function transferTo_txorigin11(address to, uint amount,address owner_txorigin11) public {\n  require(tx.origin == owner_txorigin11);\n  to.call.value(amount);\n}\n1252-function_definition-165-168", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=function_definition];
1268 [label="165_ require(tx.origin == owner_txorigin11);\n1268-expression_statement-166-166", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=expression_statement];
1277 [label="166_ to.call.value(amount);\n1277-expression_statement-167-167", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=expression_statement];
1286 [label="168_ uint public maxInvestment = 30 ether;\n1286-new_variable-169-169", method="", type_label=new_variable];
1293 [label="169_ function sendto_txorigin1(address payable receiver, uint amount,address owner_txorigin1) public {\n	require (tx.origin == owner_txorigin1);\n	receiver.transfer(amount);\n}\n1293-function_definition-170-173", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=function_definition];
1309 [label="170_ require (tx.origin == owner_txorigin1);\n1309-expression_statement-171-171", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=expression_statement];
1318 [label="171_ receiver.transfer(amount);\n1318-expression_statement-172-172", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=expression_statement];
1325 [label="173_ uint public minInvestment = 0.1 ether;\n1325-new_variable-174-174", method="", type_label=new_variable];
1338 [label="175_ function withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2) public {\n        require(tx.origin == owner_txorigin2);\n        _recipient.transfer(address(this).balance);\n    }\n1338-function_definition-176-179", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=function_definition];
1350 [label="176_ require(tx.origin == owner_txorigin2);\n1350-expression_statement-177-177", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=expression_statement];
1359 [label="177_ _recipient.transfer(address(this).balance);\n1359-expression_statement-178-178", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=expression_statement];
1370 [label="179_ State public ieoState;\n1370-new_variable-180-180", method="", type_label=new_variable];
1376 [label="180_ modifier onlyAdmin(){\n        require(msg.sender == admin);\n        _;\n    }\n1376-expression_statement-181-184", method="", type_label=expression_statement];
1379 [label="181_ require(msg.sender == admin);\n1379-expression_statement-182-182", method="", type_label=expression_statement];
1388 [label="182_ _;\n1388-expression_statement-183-183", method="", type_label=expression_statement];
1390 [label="184_ function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n1390-function_definition-185-188", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=function_definition];
1406 [label="185_ require (tx.origin == owner_txorigin13);\n1406-expression_statement-186-186", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
1415 [label="186_ receiver.transfer(amount);\n1415-expression_statement-187-187", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
1442 [label="190_ deposit = _deposit;\n1442-expression_statement-191-191", method="", type_label=expression_statement];
1446 [label="191_ admin = msg.sender;\n1446-expression_statement-192-192", method="", type_label=expression_statement];
1452 [label="192_ ieoState = State.beforeStart;\n1452-expression_statement-193-193", method="", type_label=expression_statement];
1458 [label="194_ function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n1458-function_definition-195-198", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=function_definition];
1470 [label="195_ require(tx.origin == owner_txorigin14);\n1470-expression_statement-196-196", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
1479 [label="196_ _recipient.transfer(address(this).balance);\n1479-expression_statement-197-197", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
1490 [label="198_ function halt() public onlyAdmin{\n        ieoState = State.halted;\n    }\n1490-function_definition-199-201", method="halt()", type_label=function_definition];
1493 [label="198_ onlyAdmin\n1493-expression_statement-199-199", method="halt()", type_label=expression_statement];
1496 [label="199_ ieoState = State.halted;\n1496-expression_statement-200-200", method="halt()", type_label=expression_statement];
1502 [label="201_ function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n1502-function_definition-202-205", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=function_definition];
1514 [label="202_ require(tx.origin == owner_txorigin30);\n1514-expression_statement-203-203", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
1523 [label="203_ _recipient.transfer(address(this).balance);\n1523-expression_statement-204-204", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
1534 [label="205_ function unhalt() public onlyAdmin{\n        ieoState = State.running;\n    }\n1534-function_definition-206-208", method="unhalt()", type_label=function_definition];
1537 [label="205_ onlyAdmin\n1537-expression_statement-206-206", method="unhalt()", type_label=expression_statement];
1540 [label="206_ ieoState = State.running;\n1540-expression_statement-207-207", method="unhalt()", type_label=expression_statement];
1546 [label="208_ function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n1546-function_definition-209-211", method="bug_txorigin8(address owner_txorigin8)", type_label=function_definition];
1554 [label="209_ require(tx.origin == owner_txorigin8);\n1554-expression_statement-210-210", method="bug_txorigin8(address owner_txorigin8)", type_label=expression_statement];
1563 [label="211_ function changeDepositAddress(address payable newDeposit) public onlyAdmin{\n        deposit = newDeposit;\n    }\n1563-function_definition-212-214", method="changeDepositAddress(address payable newDeposit)", type_label=function_definition];
1570 [label="211_ onlyAdmin\n1570-expression_statement-212-212", method="changeDepositAddress(address payable newDeposit)", type_label=expression_statement];
1573 [label="212_ deposit = newDeposit;\n1573-expression_statement-213-213", method="changeDepositAddress(address payable newDeposit)", type_label=expression_statement];
1577 [label="214_ function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n1577-function_definition-215-218", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=function_definition];
1593 [label="215_ require(tx.origin == owner_txorigin39);\n1593-expression_statement-216-216", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
1602 [label="216_ to.call.value(amount);\n1602-expression_statement-217-217", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
1611 [label="218_ function getCurrentState() public view returns(State){\n        if(ieoState == State.halted){\n            return State.halted;\n        }else if(block.timestamp < saleStart){\n            return State.beforeStart;\n        }else if(block.timestamp >= saleStart && block.timestamp <= saleEnd){\n            return State.running;\n        }else{\n            return State.afterEnd;\n        }\n    }\n1611-function_definition-219-229", method="getCurrentState()", type_label=function_definition];
1621 [label="219_ if_ieoState == State.halted\n1621-if-220-228", method="getCurrentState()", type_label=if];
3661 [label="219_ end_if", method="getCurrentState()", type_label=end_if];
1628 [label="220_ return State.halted;\n1628-return-221-221", method="getCurrentState()", type_label=return];
1632 [label="221_ if_block.timestamp < saleStart\n1632-if-222-228", method="getCurrentState()", type_label=if];
1639 [label="222_ return State.beforeStart;\n1639-return-223-223", method="getCurrentState()", type_label=return];
1643 [label="223_ if_block.timestamp >= saleStart && block.timestamp <= saleEnd\n1643-if-224-228", method="getCurrentState()", type_label=if];
1656 [label="224_ return State.running;\n1656-return-225-225", method="getCurrentState()", type_label=return];
1661 [label="226_ return State.afterEnd;\n1661-return-227-227", method="getCurrentState()", type_label=return];
1665 [label="229_ function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n1665-function_definition-230-232", method="bug_txorigin36(address owner_txorigin36)", type_label=function_definition];
1673 [label="230_ require(tx.origin == owner_txorigin36);\n1673-expression_statement-231-231", method="bug_txorigin36(address owner_txorigin36)", type_label=expression_statement];
1682 [label="232_ function invest() payable public returns(bool){\n        ieoState = getCurrentState();\n        require(ieoState == State.running);\n        require(msg.value >= minInvestment && msg.value <= maxInvestment);\n        uint tokens = msg.value / tokenPrice;\n        require(raisedAmount + msg.value <= hardCap);\n        raisedAmount += msg.value;\n        balances[msg.sender] += tokens;\n        balances[founder] -= tokens;\n        deposit.transfer(msg.value); \n        emit Invest(msg.sender, msg.value, tokens);\n        return true;\n    }\n1682-function_definition-233-245", method="invest()", type_label=function_definition];
1691 [label="233_ ieoState = getCurrentState();\n1691-expression_statement-234-234", method="invest()", type_label=expression_statement];
1696 [label="234_ require(ieoState == State.running);\n1696-expression_statement-235-235", method="invest()", type_label=expression_statement];
1705 [label="235_ require(msg.value >= minInvestment && msg.value <= maxInvestment);\n1705-expression_statement-236-236", method="invest()", type_label=expression_statement];
1720 [label="236_ uint tokens = msg.value / tokenPrice;\n1720-new_variable-237-237", method="invest()", type_label=new_variable];
1730 [label="237_ require(raisedAmount + msg.value <= hardCap);\n1730-expression_statement-238-238", method="invest()", type_label=expression_statement];
1741 [label="238_ raisedAmount += msg.value;\n1741-expression_statement-239-239", method="invest()", type_label=expression_statement];
1747 [label="239_ balances[msg.sender] += tokens;\n1747-expression_statement-240-240", method="invest()", type_label=expression_statement];
1755 [label="240_ balances[founder] -= tokens;\n1755-expression_statement-241-241", method="invest()", type_label=expression_statement];
1761 [label="241_ deposit.transfer(msg.value);\n1761-expression_statement-242-242", method="invest()", type_label=expression_statement];
1782 [label="243_ return true;\n1782-return-244-244", method="invest()", type_label=return];
1785 [label="245_ function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n1785-function_definition-246-249", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=function_definition];
1801 [label="246_ require(tx.origin == owner_txorigin35);\n1801-expression_statement-247-247", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1810 [label="247_ to.call.value(amount);\n1810-expression_statement-248-248", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1823 [label="250_ invest();\n1823-expression_statement-251-251", method="", type_label=expression_statement];
1826 [label="252_ function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n1826-function_definition-253-255", method="bug_txorigin40(address owner_txorigin40)", type_label=function_definition];
1834 [label="253_ require(tx.origin == owner_txorigin40);\n1834-expression_statement-254-254", method="bug_txorigin40(address owner_txorigin40)", type_label=expression_statement];
1843 [label="255_ function burn() public returns(bool){\n        ieoState = getCurrentState();\n        require(ieoState == State.afterEnd);\n        balances[founder] = 0;\n    }\n1843-function_definition-256-260", method="burn()", type_label=function_definition];
1851 [label="256_ ieoState = getCurrentState();\n1851-expression_statement-257-257", method="burn()", type_label=expression_statement];
1856 [label="257_ require(ieoState == State.afterEnd);\n1856-expression_statement-258-258", method="burn()", type_label=expression_statement];
1865 [label="258_ balances[founder] = 0;\n1865-expression_statement-259-259", method="burn()", type_label=expression_statement];
1871 [label="260_ function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n1871-function_definition-261-264", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=function_definition];
1887 [label="261_ require (tx.origin == owner_txorigin33);\n1887-expression_statement-262-262", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
1896 [label="262_ receiver.transfer(amount);\n1896-expression_statement-263-263", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
1903 [label="264_ function transfer(address to, uint value) public returns(bool){\n        require(block.timestamp > coinTradeStart);\n        super.transfer(to, value);\n    }\n1903-function_definition-265-268", method="transfer(address to,uint value)", type_label=function_definition];
1919 [label="265_ require(block.timestamp > coinTradeStart);\n1919-expression_statement-266-266", method="transfer(address to,uint value)", type_label=expression_statement];
1928 [label="266_ super.transfer(to, value);\n1928-expression_statement-267-267", method="transfer(address to,uint value)", type_label=expression_statement];
1937 [label="268_ function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n1937-function_definition-269-272", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=function_definition];
1953 [label="269_ require(tx.origin == owner_txorigin27);\n1953-expression_statement-270-270", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
1962 [label="270_ to.call.value(amount);\n1962-expression_statement-271-271", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
1971 [label="272_ function transferFrom(address _from, address _to, uint _value) public returns(bool){\n        require(block.timestamp > coinTradeStart);\n        super.transferFrom(_from, _to, _value);\n    }\n1971-function_definition-273-276", method="transferFrom(address _from,address _to,uint _value)", type_label=function_definition];
1991 [label="273_ require(block.timestamp > coinTradeStart);\n1991-expression_statement-274-274", method="transferFrom(address _from,address _to,uint _value)", type_label=expression_statement];
2000 [label="274_ super.transferFrom(_from, _to, _value);\n2000-expression_statement-275-275", method="transferFrom(address _from,address _to,uint _value)", type_label=expression_statement];
2011 [label="276_ function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n2011-function_definition-277-280", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=function_definition];
2027 [label="277_ require(tx.origin == owner_txorigin31);\n2027-expression_statement-278-278", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
2036 [label="278_ to.call.value(amount);\n2036-expression_statement-279-279", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
21 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
37 -> 46  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
66 -> 82  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
82 -> 91  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
114 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
130 -> 139  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
165 -> 181  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
181 -> 190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
213 -> 229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
229 -> 238  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
265 -> 281  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
281 -> 290  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
333 -> 345  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
345 -> 354  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
372 -> 388  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
388 -> 397  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
411 -> 423  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
423 -> 432  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
449 -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
471 -> 479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
493 -> 509  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
509 -> 518  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
532 -> 548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
548 -> 557  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
604 -> 608  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
608 -> 614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
620 -> 632  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
632 -> 641  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
652 -> 669  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
669 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
675 -> 683  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
692 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 719  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
719 -> 726  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
746 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
749 -> 757  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
766 -> 786  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
786 -> 797  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
797 -> 806  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
806 -> 812  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
812 -> 818  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
818 -> 826  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
826 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
829 -> 841  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
841 -> 850  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
861 -> 870  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
870 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
872 -> 880  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
889 -> 903  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
903 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
907 -> 923  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
923 -> 932  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
941 -> 958  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
958 -> 973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
973 -> 979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
997 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1000 -> 1016  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1016 -> 1025  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1040 -> 1048  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1062 -> 1074  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1074 -> 1083  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1099 -> 1115  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1115 -> 1124  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1137 -> 1149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1149 -> 1158  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1176 -> 1188  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1188 -> 1197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1213 -> 1221  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1230 -> 1236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1236 -> 1244  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1252 -> 1268  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1268 -> 1277  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1293 -> 1309  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1309 -> 1318  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1338 -> 1350  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1350 -> 1359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1370 -> 1376  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1379 -> 1388  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1390 -> 1406  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1406 -> 1415  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1442 -> 1446  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1446 -> 1452  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1458 -> 1470  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1470 -> 1479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1490 -> 1496  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1502 -> 1514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1514 -> 1523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1534 -> 1540  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1546 -> 1554  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1563 -> 1573  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1577 -> 1593  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1593 -> 1602  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1611 -> 1621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1621 -> 1628  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1621 -> 1632  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3661 -> 1665  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1628 -> 3661  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1628 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1632 -> 1639  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1632 -> 1643  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1639 -> 3661  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1639 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1643 -> 1656  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1643 -> 1661  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1656 -> 3661  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1656 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1661 -> 3661  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1661 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1665 -> 1673  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1682 -> 1691  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1691 -> 1696  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1696 -> 1705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1705 -> 1720  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1720 -> 1730  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1730 -> 1741  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1741 -> 1747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1747 -> 1755  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1755 -> 1761  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1782 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1785 -> 1801  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1801 -> 1810  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1826 -> 1834  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1843 -> 1851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1851 -> 1856  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1856 -> 1865  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1871 -> 1887  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1887 -> 1896  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1903 -> 1919  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1919 -> 1928  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1937 -> 1953  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1953 -> 1962  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1971 -> 1991  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1991 -> 2000  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2011 -> 2027  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2027 -> 2036  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
