digraph  {
13 [label="2_ function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n13-function_definition-3-6", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=function_definition];
29 [label="3_ require(tx.origin == owner_txorigin27);\n29-expression_statement-4-4", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
38 [label="4_ to.call.value(amount);\n38-expression_statement-5-5", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
61 [label="7_ function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n61-function_definition-8-11", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=function_definition];
77 [label="8_ require(tx.origin == owner_txorigin31);\n77-expression_statement-9-9", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
86 [label="9_ to.call.value(amount);\n86-expression_statement-10-10", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
109 [label="12_ function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n109-function_definition-13-16", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=function_definition];
125 [label="13_ require (tx.origin == owner_txorigin13);\n125-expression_statement-14-14", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
134 [label="14_ receiver.transfer(amount);\n134-expression_statement-15-15", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
155 [label="17_ function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n155-function_definition-18-21", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=function_definition];
171 [label="18_ require (tx.origin == owner_txorigin25);\n171-expression_statement-19-19", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
180 [label="19_ receiver.transfer(amount);\n180-expression_statement-20-20", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
187 [label="21_ uint256 public totalSupply;\n187-new_variable-22-22", method="", type_label=new_variable];
192 [label="22_ function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n192-function_definition-23-26", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=function_definition];
208 [label="23_ require(tx.origin == owner_txorigin19);\n208-expression_statement-24-24", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
217 [label="24_ to.call.value(amount);\n217-expression_statement-25-25", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
226 [label="26_ string public name;\n226-new_variable-27-27", method="", type_label=new_variable];
231 [label="27_ function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n231-function_definition-28-31", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=function_definition];
243 [label="28_ require(tx.origin == owner_txorigin26);\n243-expression_statement-29-29", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
252 [label="29_ _recipient.transfer(address(this).balance);\n252-expression_statement-30-30", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
263 [label="31_ uint8 public decimals;\n263-new_variable-32-32", method="", type_label=new_variable];
268 [label="32_ function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n268-function_definition-33-35", method="bug_txorigin20(address owner_txorigin20)", type_label=function_definition];
276 [label="33_ require(tx.origin == owner_txorigin20);\n276-expression_statement-34-34", method="bug_txorigin20(address owner_txorigin20)", type_label=expression_statement];
285 [label="35_ string public symbol;\n285-new_variable-36-36", method="", type_label=new_variable];
290 [label="36_ function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n290-function_definition-37-39", method="bug_txorigin32(address owner_txorigin32)", type_label=function_definition];
298 [label="37_ require(tx.origin == owner_txorigin32);\n298-expression_statement-38-38", method="bug_txorigin32(address owner_txorigin32)", type_label=expression_statement];
307 [label="39_ address public owner;\n307-new_variable-40-40", method="", type_label=new_variable];
312 [label="40_ function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n312-function_definition-41-44", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=function_definition];
324 [label="41_ require(tx.origin == owner_txorigin38);\n324-expression_statement-42-42", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
333 [label="42_ _recipient.transfer(address(this).balance);\n333-expression_statement-43-43", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
344 [label="44_ mapping (address => uint256) public balances;\n344-new_variable-45-45", method="", type_label=new_variable];
351 [label="45_ function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n351-function_definition-46-48", method="bug_txorigin4(address owner_txorigin4)", type_label=function_definition];
359 [label="46_ require(tx.origin == owner_txorigin4);\n359-expression_statement-47-47", method="bug_txorigin4(address owner_txorigin4)", type_label=expression_statement];
368 [label="48_ mapping (address => mapping (address => uint256)) public allowed;\n368-new_variable-49-49", method="", type_label=new_variable];
377 [label="49_ function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n377-function_definition-50-53", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=function_definition];
393 [label="50_ require(tx.origin == owner_txorigin7);\n393-expression_statement-51-51", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
402 [label="51_ to.call.value(amount);\n402-expression_statement-52-52", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
411 [label="53_ bool isTransPaused=false;\n411-new_variable-54-54", method="", type_label=new_variable];
427 [label="58_ owner=msg.sender;\n427-expression_statement-59-59", method="", type_label=expression_statement];
433 [label="59_ if__initialAmount<=0\n433-if-60-66", method="", type_label=if];
1548 [label="59_ end_if", method="", type_label=end_if];
438 [label="60_ totalSupply = 100000000000000000;\n438-expression_statement-61-61", method="", type_label=expression_statement];
442 [label="61_ balances[owner]=totalSupply;\n442-expression_statement-62-62", method="", type_label=expression_statement];
449 [label="63_ totalSupply = _initialAmount;\n449-expression_statement-64-64", method="", type_label=expression_statement];
453 [label="64_ balances[owner]=_initialAmount;\n453-expression_statement-65-65", method="", type_label=expression_statement];
459 [label="66_ if__decimalUnits<=0\n459-if-67-71", method="", type_label=if];
1574 [label="66_ end_if", method="", type_label=end_if];
464 [label="67_ decimals=2;\n464-expression_statement-68-68", method="", type_label=expression_statement];
469 [label="69_ decimals = _decimalUnits;\n469-expression_statement-70-70", method="", type_label=expression_statement];
473 [label="71_ name = \"CareerOn Chain Token\";\n473-expression_statement-72-72", method="", type_label=expression_statement];
478 [label="72_ symbol = \"COT\";\n478-expression_statement-73-73", method="", type_label=expression_statement];
483 [label="74_ function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n483-function_definition-75-78", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=function_definition];
499 [label="75_ require(tx.origin == owner_txorigin23);\n499-expression_statement-76-76", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
508 [label="76_ to.call.value(amount);\n508-expression_statement-77-77", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
517 [label="78_ function transfer(\n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to]\n        );\n        balances[msg.sender] -= _value; \n        balances[_to] += _value; \n		if(msg.sender==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(msg.sender, _to, _value); \n		}\n        return true;\n    }\n517-function_definition-79-96", method="transfer(address _to,uint256 _value)", type_label=function_definition];
534 [label="82_ assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to]\n        );\n534-expression_statement-83-87", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
564 [label="87_ balances[msg.sender] -= _value;\n564-expression_statement-88-88", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
572 [label="88_ balances[_to] += _value;\n572-expression_statement-89-89", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
578 [label="89_ if_msg.sender==owner\n578-if-90-94", method="transfer(address _to,uint256 _value)", type_label=if];
1693 [label="89_ end_if", method="transfer(address _to,uint256 _value)", type_label=end_if];
606 [label="94_ return true;\n606-return-95-95", method="transfer(address _to,uint256 _value)", type_label=return];
609 [label="96_ function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n609-function_definition-97-100", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=function_definition];
621 [label="97_ require(tx.origin == owner_txorigin14);\n621-expression_statement-98-98", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
630 [label="98_ _recipient.transfer(address(this).balance);\n630-expression_statement-99-99", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
641 [label="100_ function transferFrom(\n        address _from, \n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to] &&\n                allowed[_from][msg.sender] >= _value\n        );\n        balances[_to] += _value; \n        balances[_from] -= _value;  \n        allowed[_from][msg.sender] -= _value; \n        if(_from==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(_from, _to, _value); \n		}\n        return true;\n    }\n641-function_definition-101-121", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
662 [label="105_ assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to] &&\n                allowed[_from][msg.sender] >= _value\n        );\n662-expression_statement-106-111", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
702 [label="111_ balances[_to] += _value;\n702-expression_statement-112-112", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
708 [label="112_ balances[_from] -= _value;\n708-expression_statement-113-113", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
714 [label="113_ allowed[_from][msg.sender] -= _value;\n714-expression_statement-114-114", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
724 [label="114_ if__from==owner\n724-if-115-119", method="transferFrom(address _from,address _to,uint256 _value)", type_label=if];
1839 [label="114_ end_if", method="transferFrom(address _from,address _to,uint256 _value)", type_label=end_if];
748 [label="119_ return true;\n748-return-120-120", method="transferFrom(address _from,address _to,uint256 _value)", type_label=return];
751 [label="121_ function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n751-function_definition-122-125", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=function_definition];
763 [label="122_ require(tx.origin == owner_txorigin30);\n763-expression_statement-123-123", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
772 [label="123_ _recipient.transfer(address(this).balance);\n772-expression_statement-124-124", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
783 [label="125_ function approve(address _spender, uint256 _value) public returns (bool success) \n    { \n        assert(msg.sender!=_spender && _value>0);\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n783-function_definition-126-132", method="approve(address _spender,uint256 _value)", type_label=function_definition];
800 [label="127_ assert(msg.sender!=_spender && _value>0);\n800-expression_statement-128-128", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
813 [label="128_ allowed[msg.sender][_spender] = _value;\n813-expression_statement-129-129", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
833 [label="130_ return true;\n833-return-131-131", method="approve(address _spender,uint256 _value)", type_label=return];
836 [label="132_ function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n836-function_definition-133-135", method="bug_txorigin8(address owner_txorigin8)", type_label=function_definition];
844 [label="133_ require(tx.origin == owner_txorigin8);\n844-expression_statement-134-134", method="bug_txorigin8(address owner_txorigin8)", type_label=expression_statement];
853 [label="135_ function allowance(\n        address _owner, \n        address _spender) public view returns (uint256 remaining) \n    {\n        return allowed[_owner][_spender]; \n    }\n853-function_definition-136-141", method="allowance(address _owner,address _spender)", type_label=function_definition];
871 [label="139_ return allowed[_owner][_spender];\n871-return-140-140", method="allowance(address _owner,address _spender)", type_label=return];
877 [label="141_ function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n877-function_definition-142-145", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=function_definition];
893 [label="142_ require(tx.origin == owner_txorigin39);\n893-expression_statement-143-143", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
902 [label="143_ to.call.value(amount);\n902-expression_statement-144-144", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
911 [label="145_ function changeOwner(address newOwner) public{\n        assert(msg.sender==owner && msg.sender!=newOwner);\n        balances[newOwner]=balances[owner];\n        balances[owner]=0;\n        owner=newOwner;\n        emit OwnerChang(msg.sender,newOwner,balances[owner]); \n    }\n911-function_definition-146-152", method="changeOwner(address newOwner)", type_label=function_definition];
919 [label="146_ assert(msg.sender==owner && msg.sender!=newOwner);\n919-expression_statement-147-147", method="changeOwner(address newOwner)", type_label=expression_statement];
934 [label="147_ balances[newOwner]=balances[owner];\n934-expression_statement-148-148", method="changeOwner(address newOwner)", type_label=expression_statement];
942 [label="148_ balances[owner]=0;\n942-expression_statement-149-149", method="changeOwner(address newOwner)", type_label=expression_statement];
948 [label="149_ owner=newOwner;\n948-expression_statement-150-150", method="changeOwner(address newOwner)", type_label=expression_statement];
964 [label="152_ function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n964-function_definition-153-155", method="bug_txorigin36(address owner_txorigin36)", type_label=function_definition];
972 [label="153_ require(tx.origin == owner_txorigin36);\n972-expression_statement-154-154", method="bug_txorigin36(address owner_txorigin36)", type_label=expression_statement];
981 [label="155_ function setPauseStatus(bool isPaused)public{\n        assert(msg.sender==owner);\n        isTransPaused=isPaused;\n    }\n981-function_definition-156-159", method="setPauseStatus(bool isPaused)", type_label=function_definition];
989 [label="156_ assert(msg.sender==owner);\n989-expression_statement-157-157", method="setPauseStatus(bool isPaused)", type_label=expression_statement];
998 [label="157_ isTransPaused=isPaused;\n998-expression_statement-158-158", method="setPauseStatus(bool isPaused)", type_label=expression_statement];
1002 [label="159_ function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n1002-function_definition-160-163", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=function_definition];
1018 [label="160_ require(tx.origin == owner_txorigin35);\n1018-expression_statement-161-161", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1027 [label="161_ to.call.value(amount);\n1027-expression_statement-162-162", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1036 [label="163_ function changeContractName(string memory _newName,string memory _newSymbol) public {\n        assert(msg.sender==owner);\n        name=_newName;\n        symbol=_newSymbol;\n    }\n1036-function_definition-164-168", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=function_definition];
1048 [label="164_ assert(msg.sender==owner);\n1048-expression_statement-165-165", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=expression_statement];
1057 [label="165_ name=_newName;\n1057-expression_statement-166-166", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=expression_statement];
1061 [label="166_ symbol=_newSymbol;\n1061-expression_statement-167-167", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=expression_statement];
1065 [label="168_ function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n1065-function_definition-169-171", method="bug_txorigin40(address owner_txorigin40)", type_label=function_definition];
1073 [label="169_ require(tx.origin == owner_txorigin40);\n1073-expression_statement-170-170", method="bug_txorigin40(address owner_txorigin40)", type_label=expression_statement];
1088 [label="174_ function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n1088-function_definition-175-178", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=function_definition];
1104 [label="175_ require (tx.origin == owner_txorigin33);\n1104-expression_statement-176-176", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
1113 [label="176_ receiver.transfer(amount);\n1113-expression_statement-177-177", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
596;
740;
13 -> 29  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
61 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 86  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
125 -> 134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
155 -> 171  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
171 -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
192 -> 208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
208 -> 217  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
231 -> 243  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
243 -> 252  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
268 -> 276  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
290 -> 298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
312 -> 324  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
324 -> 333  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 359  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
377 -> 393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
393 -> 402  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
427 -> 433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
433 -> 438  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
433 -> 449  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1548 -> 459  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
442 -> 1548  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
449 -> 453  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
453 -> 1548  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
459 -> 464  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
459 -> 469  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1574 -> 473  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
464 -> 1574  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
469 -> 1574  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
473 -> 478  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
483 -> 499  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
499 -> 508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
517 -> 534  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
534 -> 564  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
564 -> 572  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
572 -> 578  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
606 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
609 -> 621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
621 -> 630  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
641 -> 662  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
662 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
702 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 724  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
748 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
751 -> 763  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
763 -> 772  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
783 -> 800  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
800 -> 813  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
833 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
836 -> 844  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
853 -> 871  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
871 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
877 -> 893  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
893 -> 902  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
911 -> 919  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
919 -> 934  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
934 -> 942  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
942 -> 948  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
964 -> 972  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
981 -> 989  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
989 -> 998  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1002 -> 1018  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1018 -> 1027  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1036 -> 1048  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1048 -> 1057  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1057 -> 1061  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1065 -> 1073  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1088 -> 1104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1104 -> 1113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
596 -> 1693  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
740 -> 1839  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
}
