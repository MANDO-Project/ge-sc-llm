digraph  {
13 [label="3_ function withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10) public {\n        require(tx.origin == owner_txorigin10);\n        _recipient.transfer(address(this).balance);\n    }\n13-function_definition-4-7", method="withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10)", type_label=function_definition];
25 [label="4_ require(tx.origin == owner_txorigin10);\n25-expression_statement-5-5", method="withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10)", type_label=expression_statement];
34 [label="5_ _recipient.transfer(address(this).balance);\n34-expression_statement-6-6", method="withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10)", type_label=expression_statement];
45 [label="7_ bool private stopped;\n45-new_variable-8-8", method="", type_label=new_variable];
50 [label="8_ function withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22) public {\n        require(tx.origin == owner_txorigin22);\n        _recipient.transfer(address(this).balance);\n    }\n50-function_definition-9-12", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=function_definition];
62 [label="9_ require(tx.origin == owner_txorigin22);\n62-expression_statement-10-10", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=expression_statement];
71 [label="10_ _recipient.transfer(address(this).balance);\n71-expression_statement-11-11", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=expression_statement];
82 [label="12_ address private _owner;\n82-new_variable-13-13", method="", type_label=new_variable];
87 [label="13_ function bug_txorigin12(address owner_txorigin12) public{\n        require(tx.origin == owner_txorigin12);\n    }\n87-function_definition-14-16", method="bug_txorigin12(address owner_txorigin12)", type_label=function_definition];
95 [label="14_ require(tx.origin == owner_txorigin12);\n95-expression_statement-15-15", method="bug_txorigin12(address owner_txorigin12)", type_label=expression_statement];
104 [label="16_ address private _master;\n104-new_variable-17-17", method="", type_label=new_variable];
109 [label="17_ function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n109-function_definition-18-20", method="bug_txorigin36(address owner_txorigin36)", type_label=function_definition];
117 [label="18_ require(tx.origin == owner_txorigin36);\n117-expression_statement-19-19", method="bug_txorigin36(address owner_txorigin36)", type_label=expression_statement];
128 [label="21_ function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n128-function_definition-22-25", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=function_definition];
144 [label="22_ require(tx.origin == owner_txorigin35);\n144-expression_statement-23-23", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
153 [label="23_ to.call.value(amount);\n153-expression_statement-24-24", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
164 [label="26_ function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n164-function_definition-27-29", method="bug_txorigin40(address owner_txorigin40)", type_label=function_definition];
172 [label="27_ require(tx.origin == owner_txorigin40);\n172-expression_statement-28-28", method="bug_txorigin40(address owner_txorigin40)", type_label=expression_statement];
191 [label="30_ function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n191-function_definition-31-34", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=function_definition];
207 [label="31_ require (tx.origin == owner_txorigin33);\n207-expression_statement-32-32", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
216 [label="32_ receiver.transfer(amount);\n216-expression_statement-33-33", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
235 [label="37_ stopped = false;\n235-expression_statement-38-38", method="", type_label=expression_statement];
240 [label="38_ _owner = msg.sender;\n240-expression_statement-39-39", method="", type_label=expression_statement];
246 [label="39_ _master = msg.sender;\n246-expression_statement-40-40", method="", type_label=expression_statement];
268 [label="43_ function sendto_txorigin1(address payable receiver, uint amount,address owner_txorigin1) public {\n	require (tx.origin == owner_txorigin1);\n	receiver.transfer(amount);\n}\n268-function_definition-44-47", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=function_definition];
284 [label="44_ require (tx.origin == owner_txorigin1);\n284-expression_statement-45-45", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=expression_statement];
293 [label="45_ receiver.transfer(amount);\n293-expression_statement-46-46", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=expression_statement];
300 [label="47_ function owner() public view returns (address)\n    {\n        return _owner;\n    }\n300-function_definition-48-51", method="owner()", type_label=function_definition];
309 [label="49_ return _owner;\n309-return-50-50", method="owner()", type_label=return];
311 [label="51_ function withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2) public {\n        require(tx.origin == owner_txorigin2);\n        _recipient.transfer(address(this).balance);\n    }\n311-function_definition-52-55", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=function_definition];
323 [label="52_ require(tx.origin == owner_txorigin2);\n323-expression_statement-53-53", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=expression_statement];
332 [label="53_ _recipient.transfer(address(this).balance);\n332-expression_statement-54-54", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=expression_statement];
343 [label="55_ function master() public view returns (address)\n    {\n        return _master;\n    }\n343-function_definition-56-59", method="master()", type_label=function_definition];
352 [label="57_ return _master;\n352-return-58-58", method="master()", type_label=return];
354 [label="59_ function sendto_txorigin17(address payable receiver, uint amount,address owner_txorigin17) public {\n	require (tx.origin == owner_txorigin17);\n	receiver.transfer(amount);\n}\n354-function_definition-60-63", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=function_definition];
370 [label="60_ require (tx.origin == owner_txorigin17);\n370-expression_statement-61-61", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=expression_statement];
379 [label="61_ receiver.transfer(amount);\n379-expression_statement-62-62", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=expression_statement];
386 [label="63_ modifier onlyOwner()\n    {\n        require(isOwner());\n        _;\n    }\n386-expression_statement-64-68", method="", type_label=expression_statement];
389 [label="65_ require(isOwner());\n389-expression_statement-66-66", method="", type_label=expression_statement];
395 [label="66_ _;\n395-expression_statement-67-67", method="", type_label=expression_statement];
397 [label="68_ modifier onlyMaster()\n    {\n        require(isMaster() || isOwner());\n        _;\n    }\n397-expression_statement-69-73", method="", type_label=expression_statement];
400 [label="70_ require(isMaster() || isOwner());\n400-expression_statement-71-71", method="", type_label=expression_statement];
409 [label="71_ _;\n409-expression_statement-72-72", method="", type_label=expression_statement];
411 [label="73_ modifier onlyWhenNotStopped()\n    {\n        require(!isStopped());\n        _;\n    }\n411-expression_statement-74-78", method="", type_label=expression_statement];
414 [label="75_ require(!isStopped());\n414-expression_statement-76-76", method="", type_label=expression_statement];
421 [label="76_ _;\n421-expression_statement-77-77", method="", type_label=expression_statement];
423 [label="78_ function isOwner() public view returns (bool)\n    {\n        return msg.sender == _owner;\n    }\n423-function_definition-79-82", method="isOwner()", type_label=function_definition];
432 [label="80_ return msg.sender == _owner;\n432-return-81-81", method="isOwner()", type_label=return];
438 [label="82_ function sendto_txorigin37(address payable receiver, uint amount,address owner_txorigin37) public {\n	require (tx.origin == owner_txorigin37);\n	receiver.transfer(amount);\n}\n438-function_definition-83-86", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=function_definition];
454 [label="83_ require (tx.origin == owner_txorigin37);\n454-expression_statement-84-84", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=expression_statement];
463 [label="84_ receiver.transfer(amount);\n463-expression_statement-85-85", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=expression_statement];
470 [label="86_ function isMaster() public view returns (bool)\n    {\n        return msg.sender == _master;\n    }\n470-function_definition-87-90", method="isMaster()", type_label=function_definition];
479 [label="88_ return msg.sender == _master;\n479-return-89-89", method="isMaster()", type_label=return];
485 [label="90_ function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n485-function_definition-91-94", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=function_definition];
501 [label="91_ require(tx.origin == owner_txorigin3);\n501-expression_statement-92-92", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=expression_statement];
510 [label="92_ to.call.value(amount);\n510-expression_statement-93-93", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=expression_statement];
519 [label="94_ function transferOwnership(address newOwner) external onlyOwner\n    {\n        _transferOwnership(newOwner);\n    }\n519-function_definition-95-98", method="transferOwnership(address newOwner)", type_label=function_definition];
526 [label="94_ onlyOwner\n526-expression_statement-95-95", method="transferOwnership(address newOwner)", type_label=expression_statement];
529 [label="96_ _transferOwnership(newOwner);\n529-expression_statement-97-97", method="transferOwnership(address newOwner)", type_label=expression_statement];
534 [label="98_ function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n534-function_definition-99-102", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=function_definition];
550 [label="99_ require (tx.origin == owner_txorigin9);\n550-expression_statement-100-100", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
559 [label="100_ receiver.transfer(amount);\n559-expression_statement-101-101", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
566 [label="102_ function transferMasterRole(address newMaster) external onlyOwner\n    {\n        _transferMasterRole(newMaster);\n    }\n566-function_definition-103-106", method="transferMasterRole(address newMaster)", type_label=function_definition];
573 [label="102_ onlyOwner\n573-expression_statement-103-103", method="transferMasterRole(address newMaster)", type_label=expression_statement];
576 [label="104_ _transferMasterRole(newMaster);\n576-expression_statement-105-105", method="transferMasterRole(address newMaster)", type_label=expression_statement];
581 [label="106_ function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n581-function_definition-107-110", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=function_definition];
597 [label="107_ require (tx.origin == owner_txorigin25);\n597-expression_statement-108-108", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
606 [label="108_ receiver.transfer(amount);\n606-expression_statement-109-109", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
613 [label="110_ function isStopped() public view returns (bool)\n    {\n        return stopped;\n    }\n613-function_definition-111-114", method="isStopped()", type_label=function_definition];
622 [label="112_ return stopped;\n622-return-113-113", method="isStopped()", type_label=return];
624 [label="114_ function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n624-function_definition-115-118", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=function_definition];
640 [label="115_ require(tx.origin == owner_txorigin19);\n640-expression_statement-116-116", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
649 [label="116_ to.call.value(amount);\n649-expression_statement-117-117", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
658 [label="118_ function stop() public onlyOwner\n    {\n        _stop();\n    }\n658-function_definition-119-122", method="stop()", type_label=function_definition];
661 [label="118_ onlyOwner\n661-expression_statement-119-119", method="stop()", type_label=expression_statement];
664 [label="120_ _stop();\n664-expression_statement-121-121", method="stop()", type_label=expression_statement];
667 [label="122_ function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n667-function_definition-123-126", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=function_definition];
679 [label="123_ require(tx.origin == owner_txorigin26);\n679-expression_statement-124-124", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
688 [label="124_ _recipient.transfer(address(this).balance);\n688-expression_statement-125-125", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
699 [label="126_ function start() public onlyOwner\n    {\n        _start();\n    }\n699-function_definition-127-130", method="start()", type_label=function_definition];
702 [label="126_ onlyOwner\n702-expression_statement-127-127", method="start()", type_label=expression_statement];
705 [label="128_ _start();\n705-expression_statement-129-129", method="start()", type_label=expression_statement];
708 [label="130_ function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n708-function_definition-131-133", method="bug_txorigin20(address owner_txorigin20)", type_label=function_definition];
716 [label="131_ require(tx.origin == owner_txorigin20);\n716-expression_statement-132-132", method="bug_txorigin20(address owner_txorigin20)", type_label=expression_statement];
725 [label="133_ function _transferOwnership(address newOwner) internal\n    {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n725-function_definition-134-139", method="_transferOwnership(address newOwner)", type_label=function_definition];
733 [label="135_ require(newOwner != address(0));\n733-expression_statement-136-136", method="_transferOwnership(address newOwner)", type_label=expression_statement];
748 [label="137_ _owner = newOwner;\n748-expression_statement-138-138", method="_transferOwnership(address newOwner)", type_label=expression_statement];
752 [label="139_ function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n752-function_definition-140-142", method="bug_txorigin32(address owner_txorigin32)", type_label=function_definition];
760 [label="140_ require(tx.origin == owner_txorigin32);\n760-expression_statement-141-141", method="bug_txorigin32(address owner_txorigin32)", type_label=expression_statement];
769 [label="142_ function _transferMasterRole(address newMaster) internal\n    {\n        require(newMaster != address(0));\n        emit MasterRoleTransferred(_master, newMaster);\n        _master = newMaster;\n    }\n769-function_definition-143-148", method="_transferMasterRole(address newMaster)", type_label=function_definition];
777 [label="144_ require(newMaster != address(0));\n777-expression_statement-145-145", method="_transferMasterRole(address newMaster)", type_label=expression_statement];
792 [label="146_ _master = newMaster;\n792-expression_statement-147-147", method="_transferMasterRole(address newMaster)", type_label=expression_statement];
796 [label="148_ function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n796-function_definition-149-152", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=function_definition];
808 [label="149_ require(tx.origin == owner_txorigin38);\n808-expression_statement-150-150", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
817 [label="150_ _recipient.transfer(address(this).balance);\n817-expression_statement-151-151", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
828 [label="152_ function _stop() internal\n    {\n        emit Stopped();\n        stopped = true;\n    }\n828-function_definition-153-157", method="_stop()", type_label=function_definition];
834 [label="155_ stopped = true;\n834-expression_statement-156-156", method="_stop()", type_label=expression_statement];
839 [label="157_ function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n839-function_definition-158-160", method="bug_txorigin4(address owner_txorigin4)", type_label=function_definition];
847 [label="158_ require(tx.origin == owner_txorigin4);\n847-expression_statement-159-159", method="bug_txorigin4(address owner_txorigin4)", type_label=expression_statement];
856 [label="160_ function _start() internal\n    {\n        emit Started();\n        stopped = false;\n    }\n856-function_definition-161-165", method="_start()", type_label=function_definition];
862 [label="163_ stopped = false;\n862-expression_statement-164-164", method="_start()", type_label=expression_statement];
867 [label="165_ function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n867-function_definition-166-169", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=function_definition];
883 [label="166_ require(tx.origin == owner_txorigin7);\n883-expression_statement-167-167", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
892 [label="167_ to.call.value(amount);\n892-expression_statement-168-168", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
907 [label="172_ function transferTo_txorigin11(address to, uint amount,address owner_txorigin11) public {\n  require(tx.origin == owner_txorigin11);\n  to.call.value(amount);\n}\n907-function_definition-173-176", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=function_definition];
923 [label="173_ require(tx.origin == owner_txorigin11);\n923-expression_statement-174-174", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=expression_statement];
932 [label="174_ to.call.value(amount);\n932-expression_statement-175-175", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=expression_statement];
941 [label="176_ mapping(string => address) private addressMap;\n941-new_variable-177-177", method="", type_label=new_variable];
948 [label="177_ function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n948-function_definition-178-181", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=function_definition];
964 [label="178_ require(tx.origin == owner_txorigin27);\n964-expression_statement-179-179", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
973 [label="179_ to.call.value(amount);\n973-expression_statement-180-180", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
992 [label="182_ function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n992-function_definition-183-186", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=function_definition];
1008 [label="183_ require(tx.origin == owner_txorigin31);\n1008-expression_statement-184-184", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
1017 [label="184_ to.call.value(amount);\n1017-expression_statement-185-185", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
1036 [label="187_ function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n1036-function_definition-188-191", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=function_definition];
1052 [label="188_ require (tx.origin == owner_txorigin13);\n1052-expression_statement-189-189", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
1061 [label="189_ receiver.transfer(amount);\n1061-expression_statement-190-190", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
1074 [label="192_ function version() external pure returns(string memory)\n    {\n        return '0.0.1';\n    }\n1074-function_definition-193-196", method="version()", type_label=function_definition];
1083 [label="194_ return '0.0.1';\n1083-return-195-195", method="version()", type_label=return];
1086 [label="196_ function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n1086-function_definition-197-200", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=function_definition];
1102 [label="197_ require(tx.origin == owner_txorigin23);\n1102-expression_statement-198-198", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
1111 [label="198_ to.call.value(amount);\n1111-expression_statement-199-199", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
1120 [label="200_ function getAddress(string calldata channelId) external view returns (address)\n    {\n        return addressMap[channelId];\n    }\n1120-function_definition-201-204", method="getAddress(string calldata channelId)", type_label=function_definition];
1133 [label="202_ return addressMap[channelId];\n1133-return-203-203", method="getAddress(string calldata channelId)", type_label=return];
1137 [label="204_ function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n1137-function_definition-205-208", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=function_definition];
1149 [label="205_ require(tx.origin == owner_txorigin14);\n1149-expression_statement-206-206", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
1158 [label="206_ _recipient.transfer(address(this).balance);\n1158-expression_statement-207-207", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
1169 [label="208_ function setAddress(string calldata channelId, address _address) external onlyMaster onlyWhenNotStopped\n    {\n        require(bytes(channelId).length > 0);\n        addressMap[channelId] = _address;\n        emit SetAddress(channelId, _address);\n    }\n1169-function_definition-209-214", method="setAddress(string calldata channelId,address _address)", type_label=function_definition];
1180 [label="208_ onlyMaster\n1180-expression_statement-209-209", method="setAddress(string calldata channelId,address _address)", type_label=expression_statement];
1182 [label="208_ onlyWhenNotStopped\n1182-expression_statement-209-209", method="setAddress(string calldata channelId,address _address)", type_label=expression_statement];
1185 [label="210_ require(bytes(channelId).length > 0);\n1185-expression_statement-211-211", method="setAddress(string calldata channelId,address _address)", type_label=expression_statement];
1196 [label="211_ addressMap[channelId] = _address;\n1196-expression_statement-212-212", method="setAddress(string calldata channelId,address _address)", type_label=expression_statement];
1208 [label="214_ function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n1208-function_definition-215-218", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=function_definition];
1220 [label="215_ require(tx.origin == owner_txorigin30);\n1220-expression_statement-216-216", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
1229 [label="216_ _recipient.transfer(address(this).balance);\n1229-expression_statement-217-217", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
1240 [label="218_ function updateChannel(string calldata from, string calldata to, address _address) external onlyMaster onlyWhenNotStopped\n    {\n        require(bytes(from).length > 0);\n        require(bytes(to).length > 0);\n        require(addressMap[to] == address(0));\n        addressMap[to] = _address;\n        addressMap[from] = address(0);\n        emit UpdateAddress(from, to);\n    }\n1240-function_definition-219-227", method="updateChannel(string calldata from,string calldata to,address _address)", type_label=function_definition];
1255 [label="218_ onlyMaster\n1255-expression_statement-219-219", method="updateChannel(string calldata from,string calldata to,address _address)", type_label=expression_statement];
1257 [label="218_ onlyWhenNotStopped\n1257-expression_statement-219-219", method="updateChannel(string calldata from,string calldata to,address _address)", type_label=expression_statement];
1260 [label="220_ require(bytes(from).length > 0);\n1260-expression_statement-221-221", method="updateChannel(string calldata from,string calldata to,address _address)", type_label=expression_statement];
1271 [label="221_ require(bytes(to).length > 0);\n1271-expression_statement-222-222", method="updateChannel(string calldata from,string calldata to,address _address)", type_label=expression_statement];
1282 [label="222_ require(addressMap[to] == address(0));\n1282-expression_statement-223-223", method="updateChannel(string calldata from,string calldata to,address _address)", type_label=expression_statement];
1293 [label="223_ addressMap[to] = _address;\n1293-expression_statement-224-224", method="updateChannel(string calldata from,string calldata to,address _address)", type_label=expression_statement];
1299 [label="224_ addressMap[from] = address(0);\n1299-expression_statement-225-225", method="updateChannel(string calldata from,string calldata to,address _address)", type_label=expression_statement];
1313 [label="227_ function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n1313-function_definition-228-230", method="bug_txorigin8(address owner_txorigin8)", type_label=function_definition];
1321 [label="228_ require(tx.origin == owner_txorigin8);\n1321-expression_statement-229-229", method="bug_txorigin8(address owner_txorigin8)", type_label=expression_statement];
1330 [label="230_ function deleteChannel(string calldata channelId) external onlyMaster onlyWhenNotStopped\n    {\n        require(bytes(channelId).length > 0);\n        addressMap[channelId] = address(0);\n        emit DeleteAddress(channelId);\n    }\n1330-function_definition-231-236", method="deleteChannel(string calldata channelId)", type_label=function_definition];
1337 [label="230_ onlyMaster\n1337-expression_statement-231-231", method="deleteChannel(string calldata channelId)", type_label=expression_statement];
1339 [label="230_ onlyWhenNotStopped\n1339-expression_statement-231-231", method="deleteChannel(string calldata channelId)", type_label=expression_statement];
1342 [label="232_ require(bytes(channelId).length > 0);\n1342-expression_statement-233-233", method="deleteChannel(string calldata channelId)", type_label=expression_statement];
1353 [label="233_ addressMap[channelId] = address(0);\n1353-expression_statement-234-234", method="deleteChannel(string calldata channelId)", type_label=expression_statement];
1365 [label="236_ function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n1365-function_definition-237-240", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=function_definition];
1381 [label="237_ require(tx.origin == owner_txorigin39);\n1381-expression_statement-238-238", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
1390 [label="238_ to.call.value(amount);\n1390-expression_statement-239-239", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 25  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
25 -> 34  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
50 -> 62  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
62 -> 71  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
87 -> 95  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 117  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
128 -> 144  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
144 -> 153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
164 -> 172  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
191 -> 207  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
207 -> 216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
235 -> 240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
240 -> 246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
268 -> 284  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
284 -> 293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
300 -> 309  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
309 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
311 -> 323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
323 -> 332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
343 -> 352  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
352 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
354 -> 370  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
370 -> 379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
386 -> 397  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
389 -> 395  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
397 -> 411  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
400 -> 409  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
414 -> 421  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
423 -> 432  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
432 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
438 -> 454  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
454 -> 463  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
470 -> 479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
479 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
485 -> 501  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
501 -> 510  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
519 -> 529  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
534 -> 550  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
550 -> 559  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
566 -> 576  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
581 -> 597  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
597 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
613 -> 622  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
622 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
624 -> 640  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
640 -> 649  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
658 -> 664  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
667 -> 679  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
679 -> 688  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
699 -> 705  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 716  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
725 -> 733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
752 -> 760  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
769 -> 777  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
796 -> 808  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
808 -> 817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
828 -> 834  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
839 -> 847  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
856 -> 862  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
867 -> 883  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
883 -> 892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
907 -> 923  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
923 -> 932  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
948 -> 964  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
964 -> 973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
992 -> 1008  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1008 -> 1017  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1036 -> 1052  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1052 -> 1061  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1074 -> 1083  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1083 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1086 -> 1102  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1102 -> 1111  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1120 -> 1133  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1133 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1137 -> 1149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1149 -> 1158  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1169 -> 1185  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1180 -> 1182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1185 -> 1196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1208 -> 1220  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1220 -> 1229  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1240 -> 1260  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1255 -> 1257  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1260 -> 1271  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1271 -> 1282  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1282 -> 1293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1293 -> 1299  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1313 -> 1321  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1330 -> 1342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1337 -> 1339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1342 -> 1353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1365 -> 1381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1381 -> 1390  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
