digraph  {
13 [code="function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}", label="2_ function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n13-function_definition-3-6", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=function_definition];
29 [code="require(tx.origin == owner_txorigin27);", label="3_ require(tx.origin == owner_txorigin27);\n29-expression_statement-4-4", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
38 [code="to.call.value(amount);", label="4_ to.call.value(amount);\n38-expression_statement-5-5", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
61 [code="function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}", label="7_ function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n61-function_definition-8-11", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=function_definition];
77 [code="require(tx.origin == owner_txorigin31);", label="8_ require(tx.origin == owner_txorigin31);\n77-expression_statement-9-9", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
86 [code="to.call.value(amount);", label="9_ to.call.value(amount);\n86-expression_statement-10-10", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
109 [code="function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}", label="12_ function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n109-function_definition-13-16", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=function_definition];
125 [code="require (tx.origin == owner_txorigin13);", label="13_ require (tx.origin == owner_txorigin13);\n125-expression_statement-14-14", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
134 [code="receiver.transfer(amount);", label="14_ receiver.transfer(amount);\n134-expression_statement-15-15", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
155 [code="function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}", label="17_ function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n155-function_definition-18-21", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=function_definition];
171 [code="require (tx.origin == owner_txorigin9);", label="18_ require (tx.origin == owner_txorigin9);\n171-expression_statement-19-19", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
180 [code="receiver.transfer(amount);", label="19_ receiver.transfer(amount);\n180-expression_statement-20-20", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
187 [code="uint256 public totalSupply;", label="21_ uint256 public totalSupply;\n187-new_variable-22-22", method="", type_label=new_variable];
192 [code="function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}", label="22_ function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n192-function_definition-23-26", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=function_definition];
208 [code="require (tx.origin == owner_txorigin25);", label="23_ require (tx.origin == owner_txorigin25);\n208-expression_statement-24-24", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
217 [code="receiver.transfer(amount);", label="24_ receiver.transfer(amount);\n217-expression_statement-25-25", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
224 [code="string public name;", label="26_ string public name;\n224-new_variable-27-27", method="", type_label=new_variable];
229 [code="function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}", label="27_ function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n229-function_definition-28-31", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=function_definition];
245 [code="require(tx.origin == owner_txorigin19);", label="28_ require(tx.origin == owner_txorigin19);\n245-expression_statement-29-29", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
254 [code="to.call.value(amount);", label="29_ to.call.value(amount);\n254-expression_statement-30-30", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
263 [code="uint8 public decimals;", label="31_ uint8 public decimals;\n263-new_variable-32-32", method="", type_label=new_variable];
268 [code="function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }", label="32_ function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n268-function_definition-33-36", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=function_definition];
280 [code="require(tx.origin == owner_txorigin26);", label="33_ require(tx.origin == owner_txorigin26);\n280-expression_statement-34-34", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
289 [code="_recipient.transfer(address(this).balance);", label="34_ _recipient.transfer(address(this).balance);\n289-expression_statement-35-35", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
300 [code="string public symbol;", label="36_ string public symbol;\n300-new_variable-37-37", method="", type_label=new_variable];
305 [code="function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }", label="37_ function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n305-function_definition-38-40", method="bug_txorigin20(address owner_txorigin20)", type_label=function_definition];
313 [code="require(tx.origin == owner_txorigin20);", label="38_ require(tx.origin == owner_txorigin20);\n313-expression_statement-39-39", method="bug_txorigin20(address owner_txorigin20)", type_label=expression_statement];
322 [code="address public owner;", label="40_ address public owner;\n322-new_variable-41-41", method="", type_label=new_variable];
327 [code="function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }", label="41_ function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n327-function_definition-42-44", method="bug_txorigin32(address owner_txorigin32)", type_label=function_definition];
335 [code="require(tx.origin == owner_txorigin32);", label="42_ require(tx.origin == owner_txorigin32);\n335-expression_statement-43-43", method="bug_txorigin32(address owner_txorigin32)", type_label=expression_statement];
344 [code="mapping (address => uint256) internal balances;", label="44_ mapping (address => uint256) internal balances;\n344-new_variable-45-45", method="", type_label=new_variable];
351 [code="function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }", label="45_ function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n351-function_definition-46-49", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=function_definition];
363 [code="require(tx.origin == owner_txorigin38);", label="46_ require(tx.origin == owner_txorigin38);\n363-expression_statement-47-47", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
372 [code="_recipient.transfer(address(this).balance);", label="47_ _recipient.transfer(address(this).balance);\n372-expression_statement-48-48", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
383 [code="mapping (address => mapping (address => uint256)) internal allowed;", label="49_ mapping (address => mapping (address => uint256)) internal allowed;\n383-new_variable-50-50", method="", type_label=new_variable];
392 [code="function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }", label="50_ function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n392-function_definition-51-53", method="bug_txorigin4(address owner_txorigin4)", type_label=function_definition];
400 [code="require(tx.origin == owner_txorigin4);", label="51_ require(tx.origin == owner_txorigin4);\n400-expression_statement-52-52", method="bug_txorigin4(address owner_txorigin4)", type_label=expression_statement];
409 [code="bool isTransPaused=false;", label="53_ bool isTransPaused=false;\n409-new_variable-54-54", method="", type_label=new_variable];
425 [code="owner=msg.sender;", label="58_ owner=msg.sender;\n425-expression_statement-59-59", method="", type_label=expression_statement];
431 [code="if(_initialAmount<=0){\n		    totalSupply = 100000000000000000;    \n		    balances[owner]=totalSupply;\n		}else{\n		    totalSupply = _initialAmount;    \n		    balances[owner]=_initialAmount;\n		}", label="59_ if__initialAmount<=0\n431-if-60-66", method="", type_label=if];
1595 [code="if(_initialAmount<=0){\n		    totalSupply = 100000000000000000;    \n		    balances[owner]=totalSupply;\n		}else{\n		    totalSupply = _initialAmount;    \n		    balances[owner]=_initialAmount;\n		}", label="59_ end_if", method="", type_label=end_if];
436 [code="totalSupply = 100000000000000000;", label="60_ totalSupply = 100000000000000000;\n436-expression_statement-61-61", method="", type_label=expression_statement];
440 [code="balances[owner]=totalSupply;", label="61_ balances[owner]=totalSupply;\n440-expression_statement-62-62", method="", type_label=expression_statement];
447 [code="totalSupply = _initialAmount;", label="63_ totalSupply = _initialAmount;\n447-expression_statement-64-64", method="", type_label=expression_statement];
451 [code="balances[owner]=_initialAmount;", label="64_ balances[owner]=_initialAmount;\n451-expression_statement-65-65", method="", type_label=expression_statement];
457 [code="if(_decimalUnits<=0){\n		    decimals=2;\n		}else{\n		    decimals = _decimalUnits;\n		}", label="66_ if__decimalUnits<=0\n457-if-67-71", method="", type_label=if];
1621 [code="if(_decimalUnits<=0){\n		    decimals=2;\n		}else{\n		    decimals = _decimalUnits;\n		}", label="66_ end_if", method="", type_label=end_if];
462 [code="decimals=2;", label="67_ decimals=2;\n462-expression_statement-68-68", method="", type_label=expression_statement];
467 [code="decimals = _decimalUnits;", label="69_ decimals = _decimalUnits;\n467-expression_statement-70-70", method="", type_label=expression_statement];
471 [code="name = \"CareerOn Chain Token\";", label="71_ name = \"CareerOn Chain Token\";\n471-expression_statement-72-72", method="", type_label=expression_statement];
476 [code="symbol = \"COT\";", label="72_ symbol = \"COT\";\n476-expression_statement-73-73", method="", type_label=expression_statement];
481 [code="function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}", label="74_ function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n481-function_definition-75-78", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=function_definition];
497 [code="require(tx.origin == owner_txorigin7);", label="75_ require(tx.origin == owner_txorigin7);\n497-expression_statement-76-76", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
506 [code="to.call.value(amount);", label="76_ to.call.value(amount);\n506-expression_statement-77-77", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
515 [code="function transfer(\n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to]\n        );\n        balances[msg.sender] -= _value; \n        balances[_to] += _value; \n		if(msg.sender==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(msg.sender, _to, _value); \n		}\n        return true;\n    }", label="78_ function transfer(\n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to]\n        );\n        balances[msg.sender] -= _value; \n        balances[_to] += _value; \n		if(msg.sender==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(msg.sender, _to, _value); \n		}\n        return true;\n    }\n515-function_definition-79-96", method="transfer(address _to,uint256 _value)", type_label=function_definition];
532 [code="assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to]\n        );", label="82_ assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to]\n        );\n532-expression_statement-83-87", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
562 [code="balances[msg.sender] -= _value;", label="87_ balances[msg.sender] -= _value;\n562-expression_statement-88-88", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
570 [code="balances[_to] += _value;", label="88_ balances[_to] += _value;\n570-expression_statement-89-89", method="transfer(address _to,uint256 _value)", type_label=expression_statement];
576 [code="if(msg.sender==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(msg.sender, _to, _value); \n		}", label="89_ if_msg.sender==owner\n576-if-90-94", method="transfer(address _to,uint256 _value)", type_label=if];
1740 [code="if(msg.sender==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(msg.sender, _to, _value); \n		}", label="89_ end_if", method="transfer(address _to,uint256 _value)", type_label=end_if];
604 [code="return true;", label="94_ return true;\n604-return-95-95", method="transfer(address _to,uint256 _value)", type_label=return];
607 [code="function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}", label="96_ function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n607-function_definition-97-100", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=function_definition];
623 [code="require(tx.origin == owner_txorigin23);", label="97_ require(tx.origin == owner_txorigin23);\n623-expression_statement-98-98", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
632 [code="to.call.value(amount);", label="98_ to.call.value(amount);\n632-expression_statement-99-99", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
641 [code="function transferFrom(\n        address _from, \n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to] &&\n                allowed[_from][msg.sender] >= _value\n        );\n        balances[_to] += _value; \n        balances[_from] -= _value;  \n        allowed[_from][msg.sender] -= _value; \n        if(_from==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(_from, _to, _value); \n		}\n        return true;\n    }", label="100_ function transferFrom(\n        address _from, \n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to] &&\n                allowed[_from][msg.sender] >= _value\n        );\n        balances[_to] += _value; \n        balances[_from] -= _value;  \n        allowed[_from][msg.sender] -= _value; \n        if(_from==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(_from, _to, _value); \n		}\n        return true;\n    }\n641-function_definition-101-121", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
662 [code="assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to] &&\n                allowed[_from][msg.sender] >= _value\n        );", label="105_ assert(_to!=address(this) && \n                !isTransPaused &&\n                balances[msg.sender] >= _value &&\n                balances[_to] + _value > balances[_to] &&\n                allowed[_from][msg.sender] >= _value\n        );\n662-expression_statement-106-111", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
702 [code="balances[_to] += _value;", label="111_ balances[_to] += _value;\n702-expression_statement-112-112", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
708 [code="balances[_from] -= _value;", label="112_ balances[_from] -= _value;\n708-expression_statement-113-113", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
714 [code="allowed[_from][msg.sender] -= _value;", label="113_ allowed[_from][msg.sender] -= _value;\n714-expression_statement-114-114", method="transferFrom(address _from,address _to,uint256 _value)", type_label=expression_statement];
724 [code="if(_from==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(_from, _to, _value); \n		}", label="114_ if__from==owner\n724-if-115-119", method="transferFrom(address _from,address _to,uint256 _value)", type_label=if];
1888 [code="if(_from==owner){\n			emit Transfer(address(this), _to, _value); \n		}else{\n			emit Transfer(_from, _to, _value); \n		}", label="114_ end_if", method="transferFrom(address _from,address _to,uint256 _value)", type_label=end_if];
748 [code="return true;", label="119_ return true;\n748-return-120-120", method="transferFrom(address _from,address _to,uint256 _value)", type_label=return];
751 [code="function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }", label="121_ function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n751-function_definition-122-125", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=function_definition];
763 [code="require(tx.origin == owner_txorigin14);", label="122_ require(tx.origin == owner_txorigin14);\n763-expression_statement-123-123", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
772 [code="_recipient.transfer(address(this).balance);", label="123_ _recipient.transfer(address(this).balance);\n772-expression_statement-124-124", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
783 [code="function approve(address _spender, uint256 _value) public returns (bool success) \n    { \n        assert(msg.sender!=_spender && _value>0);\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }", label="125_ function approve(address _spender, uint256 _value) public returns (bool success) \n    { \n        assert(msg.sender!=_spender && _value>0);\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n783-function_definition-126-132", method="approve(address _spender,uint256 _value)", type_label=function_definition];
800 [code="assert(msg.sender!=_spender && _value>0);", label="127_ assert(msg.sender!=_spender && _value>0);\n800-expression_statement-128-128", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
813 [code="allowed[msg.sender][_spender] = _value;", label="128_ allowed[msg.sender][_spender] = _value;\n813-expression_statement-129-129", method="approve(address _spender,uint256 _value)", type_label=expression_statement];
833 [code="return true;", label="130_ return true;\n833-return-131-131", method="approve(address _spender,uint256 _value)", type_label=return];
836 [code="function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }", label="132_ function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n836-function_definition-133-136", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=function_definition];
848 [code="require(tx.origin == owner_txorigin30);", label="133_ require(tx.origin == owner_txorigin30);\n848-expression_statement-134-134", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
857 [code="_recipient.transfer(address(this).balance);", label="134_ _recipient.transfer(address(this).balance);\n857-expression_statement-135-135", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
868 [code="function allowance(\n        address _owner, \n        address _spender) public view returns (uint256 remaining) \n    {\n        return allowed[_owner][_spender]; \n    }", label="136_ function allowance(\n        address _owner, \n        address _spender) public view returns (uint256 remaining) \n    {\n        return allowed[_owner][_spender]; \n    }\n868-function_definition-137-142", method="allowance(address _owner,address _spender)", type_label=function_definition];
886 [code="return allowed[_owner][_spender];", label="140_ return allowed[_owner][_spender];\n886-return-141-141", method="allowance(address _owner,address _spender)", type_label=return];
892 [code="function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }", label="142_ function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n892-function_definition-143-145", method="bug_txorigin8(address owner_txorigin8)", type_label=function_definition];
900 [code="require(tx.origin == owner_txorigin8);", label="143_ require(tx.origin == owner_txorigin8);\n900-expression_statement-144-144", method="bug_txorigin8(address owner_txorigin8)", type_label=expression_statement];
909 [code="function balanceOf(address accountAddr) public view returns (uint256) {\n        return balances[accountAddr];\n    }", label="145_ function balanceOf(address accountAddr) public view returns (uint256) {\n        return balances[accountAddr];\n    }\n909-function_definition-146-148", method="balanceOf(address accountAddr)", type_label=function_definition];
922 [code="return balances[accountAddr];", label="146_ return balances[accountAddr];\n922-return-147-147", method="balanceOf(address accountAddr)", type_label=return];
926 [code="function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}", label="148_ function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n926-function_definition-149-152", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=function_definition];
942 [code="require(tx.origin == owner_txorigin39);", label="149_ require(tx.origin == owner_txorigin39);\n942-expression_statement-150-150", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
951 [code="to.call.value(amount);", label="150_ to.call.value(amount);\n951-expression_statement-151-151", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
960 [code="function changeOwner(address newOwner) public{\n        assert(msg.sender==owner && msg.sender!=newOwner);\n        balances[newOwner]=balances[owner];\n        balances[owner]=0;\n        owner=newOwner;\n        emit OwnerChang(msg.sender,newOwner,balances[owner]); \n    }", label="152_ function changeOwner(address newOwner) public{\n        assert(msg.sender==owner && msg.sender!=newOwner);\n        balances[newOwner]=balances[owner];\n        balances[owner]=0;\n        owner=newOwner;\n        emit OwnerChang(msg.sender,newOwner,balances[owner]); \n    }\n960-function_definition-153-159", method="changeOwner(address newOwner)", type_label=function_definition];
968 [code="assert(msg.sender==owner && msg.sender!=newOwner);", label="153_ assert(msg.sender==owner && msg.sender!=newOwner);\n968-expression_statement-154-154", method="changeOwner(address newOwner)", type_label=expression_statement];
983 [code="balances[newOwner]=balances[owner];", label="154_ balances[newOwner]=balances[owner];\n983-expression_statement-155-155", method="changeOwner(address newOwner)", type_label=expression_statement];
991 [code="balances[owner]=0;", label="155_ balances[owner]=0;\n991-expression_statement-156-156", method="changeOwner(address newOwner)", type_label=expression_statement];
997 [code="owner=newOwner;", label="156_ owner=newOwner;\n997-expression_statement-157-157", method="changeOwner(address newOwner)", type_label=expression_statement];
1013 [code="function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }", label="159_ function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n1013-function_definition-160-162", method="bug_txorigin36(address owner_txorigin36)", type_label=function_definition];
1021 [code="require(tx.origin == owner_txorigin36);", label="160_ require(tx.origin == owner_txorigin36);\n1021-expression_statement-161-161", method="bug_txorigin36(address owner_txorigin36)", type_label=expression_statement];
1030 [code="function setPauseStatus(bool isPaused)public{\n        assert(msg.sender==owner);\n        isTransPaused=isPaused;\n    }", label="162_ function setPauseStatus(bool isPaused)public{\n        assert(msg.sender==owner);\n        isTransPaused=isPaused;\n    }\n1030-function_definition-163-166", method="setPauseStatus(bool isPaused)", type_label=function_definition];
1038 [code="assert(msg.sender==owner);", label="163_ assert(msg.sender==owner);\n1038-expression_statement-164-164", method="setPauseStatus(bool isPaused)", type_label=expression_statement];
1047 [code="isTransPaused=isPaused;", label="164_ isTransPaused=isPaused;\n1047-expression_statement-165-165", method="setPauseStatus(bool isPaused)", type_label=expression_statement];
1051 [code="function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}", label="166_ function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n1051-function_definition-167-170", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=function_definition];
1067 [code="require(tx.origin == owner_txorigin35);", label="167_ require(tx.origin == owner_txorigin35);\n1067-expression_statement-168-168", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1076 [code="to.call.value(amount);", label="168_ to.call.value(amount);\n1076-expression_statement-169-169", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1085 [code="function changeContractName(string memory _newName,string memory _newSymbol) public {\n        assert(msg.sender==owner);\n        name=_newName;\n        symbol=_newSymbol;\n    }", label="170_ function changeContractName(string memory _newName,string memory _newSymbol) public {\n        assert(msg.sender==owner);\n        name=_newName;\n        symbol=_newSymbol;\n    }\n1085-function_definition-171-175", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=function_definition];
1097 [code="assert(msg.sender==owner);", label="171_ assert(msg.sender==owner);\n1097-expression_statement-172-172", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=expression_statement];
1106 [code="name=_newName;", label="172_ name=_newName;\n1106-expression_statement-173-173", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=expression_statement];
1110 [code="symbol=_newSymbol;", label="173_ symbol=_newSymbol;\n1110-expression_statement-174-174", method="changeContractName(string memory _newName,string memory _newSymbol)", type_label=expression_statement];
1114 [code="function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }", label="175_ function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n1114-function_definition-176-178", method="bug_txorigin40(address owner_txorigin40)", type_label=function_definition];
1122 [code="require(tx.origin == owner_txorigin40);", label="176_ require(tx.origin == owner_txorigin40);\n1122-expression_statement-177-177", method="bug_txorigin40(address owner_txorigin40)", type_label=expression_statement];
1137 [code="function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}", label="181_ function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n1137-function_definition-182-185", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=function_definition];
1153 [code="require (tx.origin == owner_txorigin33);", label="182_ require (tx.origin == owner_txorigin33);\n1153-expression_statement-183-183", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
1162 [code="receiver.transfer(amount);", label="183_ receiver.transfer(amount);\n1162-expression_statement-184-184", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
594;
2;
740;
13 -> 29  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
61 -> 77  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
77 -> 86  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 125  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
125 -> 134  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
155 -> 171  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
171 -> 180  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
192 -> 208  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
208 -> 217  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
229 -> 245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
245 -> 254  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
268 -> 280  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
280 -> 289  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
305 -> 313  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
327 -> 335  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
351 -> 363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
363 -> 372  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
392 -> 400  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 431  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
431 -> 436  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
431 -> 447  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1595 -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
436 -> 440  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
440 -> 1595  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
447 -> 451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
451 -> 1595  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
457 -> 462  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
457 -> 467  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1621 -> 471  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
462 -> 1621  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
467 -> 1621  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
471 -> 476  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
481 -> 497  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
497 -> 506  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 532  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
532 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
562 -> 570  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
570 -> 576  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
604 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
607 -> 623  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
623 -> 632  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
641 -> 662  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
662 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
702 -> 708  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
708 -> 714  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
714 -> 724  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
748 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
751 -> 763  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
763 -> 772  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
783 -> 800  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
800 -> 813  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
833 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
836 -> 848  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
848 -> 857  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
868 -> 886  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
886 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
892 -> 900  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
909 -> 922  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
922 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
926 -> 942  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
942 -> 951  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
960 -> 968  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
968 -> 983  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
983 -> 991  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
991 -> 997  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1013 -> 1021  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1030 -> 1038  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1038 -> 1047  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1051 -> 1067  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1067 -> 1076  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1085 -> 1097  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1097 -> 1106  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1106 -> 1110  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1114 -> 1122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1137 -> 1153  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1153 -> 1162  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
594 -> 1740  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
740 -> 1888  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
}
