digraph  {
13 [code="function bug_txorigin24(  address owner_txorigin24) public{\n        require(tx.origin == owner_txorigin24);\n    }", label="2_ function bug_txorigin24(  address owner_txorigin24) public{\n        require(tx.origin == owner_txorigin24);\n    }\n13-function_definition-3-5", method="bug_txorigin24(address owner_txorigin24)", type_label=function_definition];
21 [code="require(tx.origin == owner_txorigin24);", label="3_ require(tx.origin == owner_txorigin24);\n21-expression_statement-4-4", method="bug_txorigin24(address owner_txorigin24)", type_label=expression_statement];
30 [code="address public owner;", label="5_ address public owner;\n30-new_variable-6-6", method="", type_label=new_variable];
37 [code="owner = msg.sender;", label="7_ owner = msg.sender;\n37-expression_statement-8-8", method="", type_label=expression_statement];
43 [code="function transferTo_txorigin11(address to, uint amount,address owner_txorigin11) public {\n  require(tx.origin == owner_txorigin11);\n  to.call.value(amount);\n}", label="9_ function transferTo_txorigin11(address to, uint amount,address owner_txorigin11) public {\n  require(tx.origin == owner_txorigin11);\n  to.call.value(amount);\n}\n43-function_definition-10-13", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=function_definition];
59 [code="require(tx.origin == owner_txorigin11);", label="10_ require(tx.origin == owner_txorigin11);\n59-expression_statement-11-11", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=expression_statement];
68 [code="to.call.value(amount);", label="11_ to.call.value(amount);\n68-expression_statement-12-12", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=expression_statement];
77 [code="modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }", label="13_ modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n77-expression_statement-14-17", method="", type_label=expression_statement];
80 [code="require(msg.sender == owner);", label="14_ require(msg.sender == owner);\n80-expression_statement-15-15", method="", type_label=expression_statement];
89 [code="_;", label="15_ _;\n89-expression_statement-16-16", method="", type_label=expression_statement];
91 [code="function transferOwnership(address newOwner) onlyOwner public {\n        owner = newOwner;\n    }", label="17_ function transferOwnership(address newOwner) onlyOwner public {\n        owner = newOwner;\n    }\n91-function_definition-18-20", method="transferOwnership(address newOwner)", type_label=function_definition];
97 [code=onlyOwner, label="17_ onlyOwner\n97-expression_statement-18-18", method="transferOwnership(address newOwner)", type_label=expression_statement];
101 [code="owner = newOwner;", label="18_ owner = newOwner;\n101-expression_statement-19-19", method="transferOwnership(address newOwner)", type_label=expression_statement];
105 [code="function sendto_txorigin1(address payable receiver, uint amount,address owner_txorigin1) public {\n	require (tx.origin == owner_txorigin1);\n	receiver.transfer(amount);\n}", label="20_ function sendto_txorigin1(address payable receiver, uint amount,address owner_txorigin1) public {\n	require (tx.origin == owner_txorigin1);\n	receiver.transfer(amount);\n}\n105-function_definition-21-24", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=function_definition];
121 [code="require (tx.origin == owner_txorigin1);", label="21_ require (tx.origin == owner_txorigin1);\n121-expression_statement-22-22", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=expression_statement];
130 [code="receiver.transfer(amount);", label="22_ receiver.transfer(amount);\n130-expression_statement-23-23", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=expression_statement];
140 [code="function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}", label="26_ function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n140-function_definition-27-30", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=function_definition];
156 [code="require(tx.origin == owner_txorigin39);", label="27_ require(tx.origin == owner_txorigin39);\n156-expression_statement-28-28", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
165 [code="to.call.value(amount);", label="28_ to.call.value(amount);\n165-expression_statement-29-29", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
184 [code="function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }", label="31_ function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n184-function_definition-32-34", method="bug_txorigin36(address owner_txorigin36)", type_label=function_definition];
192 [code="require(tx.origin == owner_txorigin36);", label="32_ require(tx.origin == owner_txorigin36);\n192-expression_statement-33-33", method="bug_txorigin36(address owner_txorigin36)", type_label=expression_statement];
219 [code="function receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData) public {\n        Token t = Token(_token);\n        require(t.transferFrom(_from, address(this), _value));\n        emit receivedTokens(_from, _value, _token, _extraData);\n    }", label="35_ function receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData) public {\n        Token t = Token(_token);\n        require(t.transferFrom(_from, address(this), _value));\n        emit receivedTokens(_from, _value, _token, _extraData);\n    }\n219-function_definition-36-40", method="receiveApproval(address _from,uint256 _value,address _token,bytes memory _extraData)", type_label=function_definition];
239 [code="Token t = Token(_token);", label="36_ Token t = Token(_token);\n239-new_variable-37-37", method="receiveApproval(address _from,uint256 _value,address _token,bytes memory _extraData)", type_label=new_variable];
249 [code="require(t.transferFrom(_from, address(this), _value));", label="37_ require(t.transferFrom(_from, address(this), _value));\n249-expression_statement-38-38", method="receiveApproval(address _from,uint256 _value,address _token,bytes memory _extraData)", type_label=expression_statement];
275 [code="function withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2) public {\n        require(tx.origin == owner_txorigin2);\n        _recipient.transfer(address(this).balance);\n    }", label="40_ function withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2) public {\n        require(tx.origin == owner_txorigin2);\n        _recipient.transfer(address(this).balance);\n    }\n275-function_definition-41-44", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=function_definition];
287 [code="require(tx.origin == owner_txorigin2);", label="41_ require(tx.origin == owner_txorigin2);\n287-expression_statement-42-42", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=expression_statement];
296 [code="_recipient.transfer(address(this).balance);", label="42_ _recipient.transfer(address(this).balance);\n296-expression_statement-43-43", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=expression_statement];
321 [code="function sendto_txorigin17(address payable receiver, uint amount,address owner_txorigin17) public {\n	require (tx.origin == owner_txorigin17);\n	receiver.transfer(amount);\n}", label="47_ function sendto_txorigin17(address payable receiver, uint amount,address owner_txorigin17) public {\n	require (tx.origin == owner_txorigin17);\n	receiver.transfer(amount);\n}\n321-function_definition-48-51", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=function_definition];
337 [code="require (tx.origin == owner_txorigin17);", label="48_ require (tx.origin == owner_txorigin17);\n337-expression_statement-49-49", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=expression_statement];
346 [code="receiver.transfer(amount);", label="49_ receiver.transfer(amount);\n346-expression_statement-50-50", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=expression_statement];
356 [code="function totalSupply() public view returns (uint256);", label="53_ function totalSupply() public view returns (uint256);\n356-function_definition-54-54", method="totalSupply()", type_label=function_definition];
364 [code="function sendto_txorigin37(address payable receiver, uint amount,address owner_txorigin37) public {\n	require (tx.origin == owner_txorigin37);\n	receiver.transfer(amount);\n}", label="54_ function sendto_txorigin37(address payable receiver, uint amount,address owner_txorigin37) public {\n	require (tx.origin == owner_txorigin37);\n	receiver.transfer(amount);\n}\n364-function_definition-55-58", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=function_definition];
380 [code="require (tx.origin == owner_txorigin37);", label="55_ require (tx.origin == owner_txorigin37);\n380-expression_statement-56-56", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=expression_statement];
389 [code="receiver.transfer(amount);", label="56_ receiver.transfer(amount);\n389-expression_statement-57-57", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=expression_statement];
396 [code="function actualBalanceOf(address _owner) public view returns (uint256 balance);", label="58_ function actualBalanceOf(address _owner) public view returns (uint256 balance);\n396-function_definition-59-59", method="actualBalanceOf(address _owner)", type_label=function_definition];
409 [code="function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}", label="59_ function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n409-function_definition-60-63", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=function_definition];
425 [code="require(tx.origin == owner_txorigin3);", label="60_ require(tx.origin == owner_txorigin3);\n425-expression_statement-61-61", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=expression_statement];
434 [code="to.call.value(amount);", label="61_ to.call.value(amount);\n434-expression_statement-62-62", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=expression_statement];
443 [code="function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);", label="63_ function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n443-function_definition-64-64", method="transferFrom(address _from,address _to,uint256 _value)", type_label=function_definition];
463 [code="function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}", label="64_ function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n463-function_definition-65-68", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=function_definition];
479 [code="require (tx.origin == owner_txorigin9);", label="65_ require (tx.origin == owner_txorigin9);\n479-expression_statement-66-66", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
488 [code="receiver.transfer(amount);", label="66_ receiver.transfer(amount);\n488-expression_statement-67-67", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
495 [code="function renounceOwnership() public;", label="68_ function renounceOwnership() public;\n495-function_definition-69-69", method="renounceOwnership()", type_label=function_definition];
498 [code="function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}", label="69_ function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n498-function_definition-70-73", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=function_definition];
514 [code="require (tx.origin == owner_txorigin25);", label="70_ require (tx.origin == owner_txorigin25);\n514-expression_statement-71-71", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
523 [code="receiver.transfer(amount);", label="71_ receiver.transfer(amount);\n523-expression_statement-72-72", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
530 [code="function transferOwnership(address _newOwner) public;", label="73_ function transferOwnership(address _newOwner) public;\n530-function_definition-74-74", method="transferOwnership(address _newOwner)", type_label=function_definition];
537 [code="function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}", label="74_ function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n537-function_definition-75-78", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=function_definition];
553 [code="require(tx.origin == owner_txorigin19);", label="75_ require(tx.origin == owner_txorigin19);\n553-expression_statement-76-76", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
562 [code="to.call.value(amount);", label="76_ to.call.value(amount);\n562-expression_statement-77-77", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
571 [code="function pause() public;", label="78_ function pause() public;\n571-function_definition-79-79", method="pause()", type_label=function_definition];
574 [code="function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }", label="79_ function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n574-function_definition-80-83", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=function_definition];
586 [code="require(tx.origin == owner_txorigin26);", label="80_ require(tx.origin == owner_txorigin26);\n586-expression_statement-81-81", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
595 [code="_recipient.transfer(address(this).balance);", label="81_ _recipient.transfer(address(this).balance);\n595-expression_statement-82-82", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
606 [code="function unpause() public;", label="83_ function unpause() public;\n606-function_definition-84-84", method="unpause()", type_label=function_definition];
609 [code="function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }", label="84_ function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n609-function_definition-85-87", method="bug_txorigin20(address owner_txorigin20)", type_label=function_definition];
617 [code="require(tx.origin == owner_txorigin20);", label="85_ require(tx.origin == owner_txorigin20);\n617-expression_statement-86-86", method="bug_txorigin20(address owner_txorigin20)", type_label=expression_statement];
629 [code="function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"Safe mul error\");\n        return c;\n    }", label="89_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"Safe mul error\");\n        return c;\n    }\n629-function_definition-90-97", method="mul(uint256 a,uint256 b)", type_label=function_definition];
646 [code="if (a == 0) {\n            return 0;\n        }", label="90_ if_a == 0\n646-if-91-93", method="mul(uint256 a,uint256 b)", type_label=if];
3067 [code="if (a == 0) {\n            return 0;\n        }", label="90_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
651 [code="return 0;", label="91_ return 0;\n651-return-92-92", method="mul(uint256 a,uint256 b)", type_label=return];
653 [code="uint256 c = a * b;", label="93_ uint256 c = a * b;\n653-new_variable-94-94", method="mul(uint256 a,uint256 b)", type_label=new_variable];
661 [code="require(c / a == b, \"Safe mul error\");", label="94_ require(c / a == b, \"Safe mul error\");\n661-expression_statement-95-95", method="mul(uint256 a,uint256 b)", type_label=expression_statement];
673 [code="return c;", label="95_ return c;\n673-return-96-96", method="mul(uint256 a,uint256 b)", type_label=return];
675 [code="function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"Safe div error\");\n        uint256 c = a / b;\n        return c;\n    }", label="97_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"Safe div error\");\n        uint256 c = a / b;\n        return c;\n    }\n675-function_definition-98-102", method="div(uint256 a,uint256 b)", type_label=function_definition];
692 [code="require(b > 0, \"Safe div error\");", label="98_ require(b > 0, \"Safe div error\");\n692-expression_statement-99-99", method="div(uint256 a,uint256 b)", type_label=expression_statement];
702 [code="uint256 c = a / b;", label="99_ uint256 c = a / b;\n702-new_variable-100-100", method="div(uint256 a,uint256 b)", type_label=new_variable];
710 [code="return c;", label="100_ return c;\n710-return-101-101", method="div(uint256 a,uint256 b)", type_label=return];
712 [code="function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"Safe sub error\");\n        uint256 c = a - b;\n        return c;\n    }", label="102_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"Safe sub error\");\n        uint256 c = a - b;\n        return c;\n    }\n712-function_definition-103-107", method="sub(uint256 a,uint256 b)", type_label=function_definition];
729 [code="require(b <= a, \"Safe sub error\");", label="103_ require(b <= a, \"Safe sub error\");\n729-expression_statement-104-104", method="sub(uint256 a,uint256 b)", type_label=expression_statement];
739 [code="uint256 c = a - b;", label="104_ uint256 c = a - b;\n739-new_variable-105-105", method="sub(uint256 a,uint256 b)", type_label=new_variable];
747 [code="return c;", label="105_ return c;\n747-return-106-106", method="sub(uint256 a,uint256 b)", type_label=return];
749 [code="function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"Safe add error\");\n        return c;\n    }", label="107_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"Safe add error\");\n        return c;\n    }\n749-function_definition-108-112", method="add(uint256 a,uint256 b)", type_label=function_definition];
766 [code="uint256 c = a + b;", label="108_ uint256 c = a + b;\n766-new_variable-109-109", method="add(uint256 a,uint256 b)", type_label=new_variable];
774 [code="require(c >= a, \"Safe add error\");", label="109_ require(c >= a, \"Safe add error\");\n774-expression_statement-110-110", method="add(uint256 a,uint256 b)", type_label=expression_statement];
784 [code="return c;", label="110_ return c;\n784-return-111-111", method="add(uint256 a,uint256 b)", type_label=return];
786 [code="function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"Safe mod error\");\n        return a % b;\n    }", label="112_ function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"Safe mod error\");\n        return a % b;\n    }\n786-function_definition-113-116", method="mod(uint256 a,uint256 b)", type_label=function_definition];
803 [code="require(b != 0, \"Safe mod error\");", label="113_ require(b != 0, \"Safe mod error\");\n803-expression_statement-114-114", method="mod(uint256 a,uint256 b)", type_label=expression_statement];
813 [code="return a % b;", label="114_ return a % b;\n813-return-115-115", method="mod(uint256 a,uint256 b)", type_label=return];
831 [code="function sendto_txorigin5(address payable receiver, uint amount,address owner_txorigin5) public {\n	require (tx.origin == owner_txorigin5);\n	receiver.transfer(amount);\n}", label="119_ function sendto_txorigin5(address payable receiver, uint amount,address owner_txorigin5) public {\n	require (tx.origin == owner_txorigin5);\n	receiver.transfer(amount);\n}\n831-function_definition-120-123", method="sendto_txorigin5(address payable receiver,uint amount,address owner_txorigin5)", type_label=function_definition];
847 [code="require (tx.origin == owner_txorigin5);", label="120_ require (tx.origin == owner_txorigin5);\n847-expression_statement-121-121", method="sendto_txorigin5(address payable receiver,uint amount,address owner_txorigin5)", type_label=expression_statement];
856 [code="receiver.transfer(amount);", label="121_ receiver.transfer(amount);\n856-expression_statement-122-122", method="sendto_txorigin5(address payable receiver,uint amount,address owner_txorigin5)", type_label=expression_statement];
863 [code="uint public minimumQuorum;", label="123_ uint public minimumQuorum;\n863-new_variable-124-124", method="", type_label=new_variable];
868 [code="function transferTo_txorigin15(address to, uint amount,address owner_txorigin15) public {\n  require(tx.origin == owner_txorigin15);\n  to.call.value(amount);\n}", label="124_ function transferTo_txorigin15(address to, uint amount,address owner_txorigin15) public {\n  require(tx.origin == owner_txorigin15);\n  to.call.value(amount);\n}\n868-function_definition-125-128", method="transferTo_txorigin15(address to,uint amount,address owner_txorigin15)", type_label=function_definition];
884 [code="require(tx.origin == owner_txorigin15);", label="125_ require(tx.origin == owner_txorigin15);\n884-expression_statement-126-126", method="transferTo_txorigin15(address to,uint amount,address owner_txorigin15)", type_label=expression_statement];
893 [code="to.call.value(amount);", label="126_ to.call.value(amount);\n893-expression_statement-127-127", method="transferTo_txorigin15(address to,uint amount,address owner_txorigin15)", type_label=expression_statement];
902 [code="uint public minimumTokensToVote;", label="128_ uint public minimumTokensToVote;\n902-new_variable-129-129", method="", type_label=new_variable];
907 [code="function bug_txorigin28(  address owner_txorigin28) public{\n        require(tx.origin == owner_txorigin28);\n    }", label="129_ function bug_txorigin28(  address owner_txorigin28) public{\n        require(tx.origin == owner_txorigin28);\n    }\n907-function_definition-130-132", method="bug_txorigin28(address owner_txorigin28)", type_label=function_definition];
915 [code="require(tx.origin == owner_txorigin28);", label="130_ require(tx.origin == owner_txorigin28);\n915-expression_statement-131-131", method="bug_txorigin28(address owner_txorigin28)", type_label=expression_statement];
924 [code="uint public debatingPeriodInMinutes;", label="132_ uint public debatingPeriodInMinutes;\n924-new_variable-133-133", method="", type_label=new_variable];
929 [code="function withdrawAll_txorigin34(address payable _recipient,address owner_txorigin34) public {\n        require(tx.origin == owner_txorigin34);\n        _recipient.transfer(address(this).balance);\n    }", label="133_ function withdrawAll_txorigin34(address payable _recipient,address owner_txorigin34) public {\n        require(tx.origin == owner_txorigin34);\n        _recipient.transfer(address(this).balance);\n    }\n929-function_definition-134-137", method="withdrawAll_txorigin34(address payable _recipient,address owner_txorigin34)", type_label=function_definition];
941 [code="require(tx.origin == owner_txorigin34);", label="134_ require(tx.origin == owner_txorigin34);\n941-expression_statement-135-135", method="withdrawAll_txorigin34(address payable _recipient,address owner_txorigin34)", type_label=expression_statement];
950 [code="_recipient.transfer(address(this).balance);", label="135_ _recipient.transfer(address(this).balance);\n950-expression_statement-136-136", method="withdrawAll_txorigin34(address payable _recipient,address owner_txorigin34)", type_label=expression_statement];
961 [code="Proposal[] public proposals;", label="137_ Proposal[] public proposals;\n961-new_variable-138-138", method="", type_label=new_variable];
968 [code="function sendto_txorigin21(address payable receiver, uint amount,address owner_txorigin21) public {\n	require (tx.origin == owner_txorigin21);\n	receiver.transfer(amount);\n}", label="138_ function sendto_txorigin21(address payable receiver, uint amount,address owner_txorigin21) public {\n	require (tx.origin == owner_txorigin21);\n	receiver.transfer(amount);\n}\n968-function_definition-139-142", method="sendto_txorigin21(address payable receiver,uint amount,address owner_txorigin21)", type_label=function_definition];
984 [code="require (tx.origin == owner_txorigin21);", label="139_ require (tx.origin == owner_txorigin21);\n984-expression_statement-140-140", method="sendto_txorigin21(address payable receiver,uint amount,address owner_txorigin21)", type_label=expression_statement];
993 [code="receiver.transfer(amount);", label="140_ receiver.transfer(amount);\n993-expression_statement-141-141", method="sendto_txorigin21(address payable receiver,uint amount,address owner_txorigin21)", type_label=expression_statement];
1000 [code="uint public numProposals;", label="142_ uint public numProposals;\n1000-new_variable-143-143", method="", type_label=new_variable];
1005 [code="function withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10) public {\n        require(tx.origin == owner_txorigin10);\n        _recipient.transfer(address(this).balance);\n    }", label="143_ function withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10) public {\n        require(tx.origin == owner_txorigin10);\n        _recipient.transfer(address(this).balance);\n    }\n1005-function_definition-144-147", method="withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10)", type_label=function_definition];
1017 [code="require(tx.origin == owner_txorigin10);", label="144_ require(tx.origin == owner_txorigin10);\n1017-expression_statement-145-145", method="withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10)", type_label=expression_statement];
1026 [code="_recipient.transfer(address(this).balance);", label="145_ _recipient.transfer(address(this).balance);\n1026-expression_statement-146-146", method="withdrawAll_txorigin10(address payable _recipient,address owner_txorigin10)", type_label=expression_statement];
1037 [code="Token public tokenAddress;", label="147_ Token public tokenAddress;\n1037-new_variable-148-148", method="", type_label=new_variable];
1043 [code="function withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22) public {\n        require(tx.origin == owner_txorigin22);\n        _recipient.transfer(address(this).balance);\n    }", label="148_ function withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22) public {\n        require(tx.origin == owner_txorigin22);\n        _recipient.transfer(address(this).balance);\n    }\n1043-function_definition-149-152", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=function_definition];
1055 [code="require(tx.origin == owner_txorigin22);", label="149_ require(tx.origin == owner_txorigin22);\n1055-expression_statement-150-150", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=expression_statement];
1064 [code="_recipient.transfer(address(this).balance);", label="150_ _recipient.transfer(address(this).balance);\n1064-expression_statement-151-151", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=expression_statement];
1075 [code="address chairmanAddress;", label="152_ address chairmanAddress;\n1075-new_variable-153-153", method="", type_label=new_variable];
1079 [code="function bug_txorigin12(address owner_txorigin12) public{\n        require(tx.origin == owner_txorigin12);\n    }", label="153_ function bug_txorigin12(address owner_txorigin12) public{\n        require(tx.origin == owner_txorigin12);\n    }\n1079-function_definition-154-156", method="bug_txorigin12(address owner_txorigin12)", type_label=function_definition];
1087 [code="require(tx.origin == owner_txorigin12);", label="154_ require(tx.origin == owner_txorigin12);\n1087-expression_statement-155-155", method="bug_txorigin12(address owner_txorigin12)", type_label=expression_statement];
1096 [code="bool public initialized = false;", label="156_ bool public initialized = false;\n1096-new_variable-157-157", method="", type_label=new_variable];
1103 [code="function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}", label="157_ function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n1103-function_definition-158-161", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=function_definition];
1119 [code="require(tx.origin == owner_txorigin35);", label="158_ require(tx.origin == owner_txorigin35);\n1119-expression_statement-159-159", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1128 [code="to.call.value(amount);", label="159_ to.call.value(amount);\n1128-expression_statement-160-160", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1139 [code="function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }", label="162_ function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n1139-function_definition-163-165", method="bug_txorigin40(address owner_txorigin40)", type_label=function_definition];
1147 [code="require(tx.origin == owner_txorigin40);", label="163_ require(tx.origin == owner_txorigin40);\n1147-expression_statement-164-164", method="bug_txorigin40(address owner_txorigin40)", type_label=expression_statement];
1174 [code="function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}", label="166_ function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n1174-function_definition-167-170", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=function_definition];
1190 [code="require (tx.origin == owner_txorigin33);", label="167_ require (tx.origin == owner_txorigin33);\n1190-expression_statement-168-168", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
1199 [code="receiver.transfer(amount);", label="168_ receiver.transfer(amount);\n1199-expression_statement-169-169", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
1220 [code="function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}", label="171_ function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n1220-function_definition-172-175", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=function_definition];
1236 [code="require(tx.origin == owner_txorigin27);", label="172_ require(tx.origin == owner_txorigin27);\n1236-expression_statement-173-173", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
1245 [code="to.call.value(amount);", label="173_ to.call.value(amount);\n1245-expression_statement-174-174", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
1272 [code="function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}", label="176_ function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n1272-function_definition-177-180", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=function_definition];
1288 [code="require(tx.origin == owner_txorigin31);", label="177_ require(tx.origin == owner_txorigin31);\n1288-expression_statement-178-178", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
1297 [code="to.call.value(amount);", label="178_ to.call.value(amount);\n1297-expression_statement-179-179", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
1328 [code="function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}", label="181_ function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n1328-function_definition-182-185", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=function_definition];
1344 [code="require (tx.origin == owner_txorigin13);", label="182_ require (tx.origin == owner_txorigin13);\n1344-expression_statement-183-183", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
1353 [code="receiver.transfer(amount);", label="183_ receiver.transfer(amount);\n1353-expression_statement-184-184", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
1374 [code="struct Proposal {\n        address recipient;\n        uint amount;\n        string description;\n        bool signedByChairman;\n        uint minExecutionDate;\n        bool executed;\n        bool proposalPassed;\n        uint numberOfVotes;\n        bytes32 proposalHash;\n        Vote[] votes;\n        mapping (address => bool) voted;\n    }", label="186_ struct Proposal {\n        address recipient;\n        uint amount;\n        string description;\n        bool signedByChairman;\n        uint minExecutionDate;\n        bool executed;\n        bool proposalPassed;\n        uint numberOfVotes;\n        bytes32 proposalHash;\n        Vote[] votes;\n        mapping (address => bool) voted;\n    }\n1374-expression_statement-187-199", method="Proposal()", type_label=expression_statement];
1424 [code="struct Vote {\n        bool inSupport;\n        address voter;\n    }", label="199_ struct Vote {\n        bool inSupport;\n        address voter;\n    }\n1424-expression_statement-200-203", method="Vote()", type_label=expression_statement];
1434 [code="modifier onlyTokenholders {\n        require(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote);\n        _;\n    }", label="203_ modifier onlyTokenholders {\n        require(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote);\n        _;\n    }\n1434-expression_statement-204-207", method="", type_label=expression_statement];
1437 [code="require(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote);", label="204_ require(tokenAddress.actualBalanceOf(msg.sender) > minimumTokensToVote);\n1437-expression_statement-205-205", method="", type_label=expression_statement];
1451 [code="_;", label="205_ _;\n1451-expression_statement-206-206", method="", type_label=expression_statement];
1453 [code="modifier onlyChairman {\n        require(msg.sender == chairmanAddress);\n        _;\n    }", label="207_ modifier onlyChairman {\n        require(msg.sender == chairmanAddress);\n        _;\n    }\n1453-expression_statement-208-211", method="", type_label=expression_statement];
1456 [code="require(msg.sender == chairmanAddress);", label="208_ require(msg.sender == chairmanAddress);\n1456-expression_statement-209-209", method="", type_label=expression_statement];
1465 [code="_;", label="209_ _;\n1465-expression_statement-210-210", method="", type_label=expression_statement];
1469 [code="function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }", label="213_ function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n1469-function_definition-214-216", method="bug_txorigin32(address owner_txorigin32)", type_label=function_definition];
1477 [code="require(tx.origin == owner_txorigin32);", label="214_ require(tx.origin == owner_txorigin32);\n1477-expression_statement-215-215", method="bug_txorigin32(address owner_txorigin32)", type_label=expression_statement];
1486 [code="function init(Token _tokenAddress, address _chairmanAddress, uint _minimumTokensToVote, uint _minimumPercentToPassAVote, uint _minutesForDebate) onlyOwner public {\n        require(!initialized);\n        initialized = true;\n        changeVotingRules(_tokenAddress, _chairmanAddress, _minimumTokensToVote, _minimumPercentToPassAVote, _minutesForDebate);\n        emit Initialized();\n    }", label="216_ function init(Token _tokenAddress, address _chairmanAddress, uint _minimumTokensToVote, uint _minimumPercentToPassAVote, uint _minutesForDebate) onlyOwner public {\n        require(!initialized);\n        initialized = true;\n        changeVotingRules(_tokenAddress, _chairmanAddress, _minimumTokensToVote, _minimumPercentToPassAVote, _minutesForDebate);\n        emit Initialized();\n    }\n1486-function_definition-217-222", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=function_definition];
1509 [code=onlyOwner, label="216_ onlyOwner\n1509-expression_statement-217-217", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1513 [code="require(!initialized);", label="217_ require(!initialized);\n1513-expression_statement-218-218", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1519 [code="initialized = true;", label="218_ initialized = true;\n1519-expression_statement-219-219", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1524 [code="changeVotingRules(_tokenAddress, _chairmanAddress, _minimumTokensToVote, _minimumPercentToPassAVote, _minutesForDebate);", label="219_ changeVotingRules(_tokenAddress, _chairmanAddress, _minimumTokensToVote, _minimumPercentToPassAVote, _minutesForDebate);\n1524-expression_statement-220-220", method="init(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1539 [code="function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }", label="222_ function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n1539-function_definition-223-226", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=function_definition];
1551 [code="require(tx.origin == owner_txorigin38);", label="223_ require(tx.origin == owner_txorigin38);\n1551-expression_statement-224-224", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
1560 [code="_recipient.transfer(address(this).balance);", label="224_ _recipient.transfer(address(this).balance);\n1560-expression_statement-225-225", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
1571 [code="function changeVotingRules(Token _tokenAddress, address _chairmanAddress, uint _minimumTokensToVote, uint _minimumPercentToPassAVote, uint _minutesForDebate) onlyOwner public {\n        require(_chairmanAddress != address(0));\n        require(_minimumPercentToPassAVote <= 51);\n        tokenAddress = Token(_tokenAddress);\n        chairmanAddress = _chairmanAddress;\n        if (_minimumTokensToVote == 0 ) _minimumTokensToVote = 1;\n        minimumTokensToVote = _minimumTokensToVote;\n        if (_minimumPercentToPassAVote == 0 ) _minimumPercentToPassAVote = 51;\n        minimumQuorum = _minimumPercentToPassAVote;\n        debatingPeriodInMinutes = _minutesForDebate;\n        emit ChangeOfRules(_minimumTokensToVote, minimumQuorum, debatingPeriodInMinutes, address(tokenAddress), chairmanAddress);\n    }", label="226_ function changeVotingRules(Token _tokenAddress, address _chairmanAddress, uint _minimumTokensToVote, uint _minimumPercentToPassAVote, uint _minutesForDebate) onlyOwner public {\n        require(_chairmanAddress != address(0));\n        require(_minimumPercentToPassAVote <= 51);\n        tokenAddress = Token(_tokenAddress);\n        chairmanAddress = _chairmanAddress;\n        if (_minimumTokensToVote == 0 ) _minimumTokensToVote = 1;\n        minimumTokensToVote = _minimumTokensToVote;\n        if (_minimumPercentToPassAVote == 0 ) _minimumPercentToPassAVote = 51;\n        minimumQuorum = _minimumPercentToPassAVote;\n        debatingPeriodInMinutes = _minutesForDebate;\n        emit ChangeOfRules(_minimumTokensToVote, minimumQuorum, debatingPeriodInMinutes, address(tokenAddress), chairmanAddress);\n    }\n1571-function_definition-227-238", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=function_definition];
1594 [code=onlyOwner, label="226_ onlyOwner\n1594-expression_statement-227-227", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1598 [code="require(_chairmanAddress != address(0));", label="227_ require(_chairmanAddress != address(0));\n1598-expression_statement-228-228", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1607 [code="require(_minimumPercentToPassAVote <= 51);", label="228_ require(_minimumPercentToPassAVote <= 51);\n1607-expression_statement-229-229", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1614 [code="tokenAddress = Token(_tokenAddress);", label="229_ tokenAddress = Token(_tokenAddress);\n1614-expression_statement-230-230", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1621 [code="chairmanAddress = _chairmanAddress;", label="230_ chairmanAddress = _chairmanAddress;\n1621-expression_statement-231-231", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1625 [code="if (_minimumTokensToVote == 0 ) _minimumTokensToVote = 1;", label="231_ if__minimumTokensToVote == 0\n1625-if-232-232", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=if];
4046 [code="if (_minimumTokensToVote == 0 ) _minimumTokensToVote = 1;", label="231_ end_if", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=end_if];
1629 [code="_minimumTokensToVote = 1;", label="231_ _minimumTokensToVote = 1;\n1629-expression_statement-232-232", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1633 [code="minimumTokensToVote = _minimumTokensToVote;", label="232_ minimumTokensToVote = _minimumTokensToVote;\n1633-expression_statement-233-233", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1637 [code="if (_minimumPercentToPassAVote == 0 ) _minimumPercentToPassAVote = 51;", label="233_ if__minimumPercentToPassAVote == 0\n1637-if-234-234", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=if];
4058 [code="if (_minimumPercentToPassAVote == 0 ) _minimumPercentToPassAVote = 51;", label="233_ end_if", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=end_if];
1641 [code="_minimumPercentToPassAVote = 51;", label="233_ _minimumPercentToPassAVote = 51;\n1641-expression_statement-234-234", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1645 [code="minimumQuorum = _minimumPercentToPassAVote;", label="234_ minimumQuorum = _minimumPercentToPassAVote;\n1645-expression_statement-235-235", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1649 [code="debatingPeriodInMinutes = _minutesForDebate;", label="235_ debatingPeriodInMinutes = _minutesForDebate;\n1649-expression_statement-236-236", method="changeVotingRules(Token _tokenAddress,address _chairmanAddress,uint _minimumTokensToVote,uint _minimumPercentToPassAVote,uint _minutesForDebate)", type_label=expression_statement];
1667 [code="function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }", label="238_ function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n1667-function_definition-239-241", method="bug_txorigin4(address owner_txorigin4)", type_label=function_definition];
1675 [code="require(tx.origin == owner_txorigin4);", label="239_ require(tx.origin == owner_txorigin4);\n1675-expression_statement-240-240", method="bug_txorigin4(address owner_txorigin4)", type_label=expression_statement];
1684 [code="function newProposal(\n        address destination,\n        uint weiAmount,\n        string memory transactionDescription,\n        bytes memory transactionBytecode\n    )\n        onlyTokenholders public\n        returns (uint proposalID)\n    {\n        proposalID = proposals.length++;\n        Proposal storage p = proposals[proposalID];\n        p.recipient = destination;\n        p.signedByChairman = false;\n        p.amount = weiAmount;\n        p.description = transactionDescription;\n        p.proposalHash = keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n        p.minExecutionDate = now + debatingPeriodInMinutes * 1 minutes;\n        p.executed = false;\n        p.proposalPassed = false;\n        p.numberOfVotes = 0;\n        emit ProposalAdded(proposalID, destination, weiAmount, transactionDescription);\n        numProposals = proposalID+1;\n        return proposalID;\n    }", label="241_ function newProposal(\n        address destination,\n        uint weiAmount,\n        string memory transactionDescription,\n        bytes memory transactionBytecode\n    )\n        onlyTokenholders public\n        returns (uint proposalID)\n    {\n        proposalID = proposals.length++;\n        Proposal storage p = proposals[proposalID];\n        p.recipient = destination;\n        p.signedByChairman = false;\n        p.amount = weiAmount;\n        p.description = transactionDescription;\n        p.proposalHash = keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n        p.minExecutionDate = now + debatingPeriodInMinutes * 1 minutes;\n        p.executed = false;\n        p.proposalPassed = false;\n        p.numberOfVotes = 0;\n        emit ProposalAdded(proposalID, destination, weiAmount, transactionDescription);\n        numProposals = proposalID+1;\n        return proposalID;\n    }\n1684-function_definition-242-265", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=function_definition];
1702 [code=onlyTokenholders, label="247_ onlyTokenholders\n1702-expression_statement-248-248", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1711 [code="proposalID = proposals.length++;", label="250_ proposalID = proposals.length++;\n1711-expression_statement-251-251", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1714 [code="proposals.length++", label="250_ proposals.length++\n1714-expression_statement-251-251", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1718 [code="Proposal storage p = proposals[proposalID];", label="251_ Proposal storage p = proposals[proposalID];\n1718-new_variable-252-252", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=new_variable];
1727 [code="p.recipient = destination;", label="252_ p.recipient = destination;\n1727-expression_statement-253-253", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1733 [code="p.signedByChairman = false;", label="253_ p.signedByChairman = false;\n1733-expression_statement-254-254", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1740 [code="p.amount = weiAmount;", label="254_ p.amount = weiAmount;\n1740-expression_statement-255-255", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1746 [code="p.description = transactionDescription;", label="255_ p.description = transactionDescription;\n1746-expression_statement-256-256", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1752 [code="p.proposalHash = keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));", label="256_ p.proposalHash = keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n1752-expression_statement-257-257", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1770 [code="p.minExecutionDate = now + debatingPeriodInMinutes * 1 minutes;", label="257_ p.minExecutionDate = now + debatingPeriodInMinutes * 1 minutes;\n1770-expression_statement-258-258", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1781 [code="p.executed = false;", label="258_ p.executed = false;\n1781-expression_statement-259-259", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1788 [code="p.proposalPassed = false;", label="259_ p.proposalPassed = false;\n1788-expression_statement-260-260", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1795 [code="p.numberOfVotes = 0;", label="260_ p.numberOfVotes = 0;\n1795-expression_statement-261-261", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1811 [code="numProposals = proposalID+1;", label="262_ numProposals = proposalID+1;\n1811-expression_statement-263-263", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=expression_statement];
1817 [code="return proposalID;", label="263_ return proposalID;\n1817-return-264-264", method="newProposal(address destination,uint weiAmount,string memory transactionDescription,bytes memory transactionBytecode)", type_label=return];
1819 [code="function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}", label="265_ function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n1819-function_definition-266-269", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=function_definition];
1835 [code="require(tx.origin == owner_txorigin7);", label="266_ require(tx.origin == owner_txorigin7);\n1835-expression_statement-267-267", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
1844 [code="to.call.value(amount);", label="267_ to.call.value(amount);\n1844-expression_statement-268-268", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
1853 [code="function checkProposalCode(\n        uint proposalNumber,\n        address destination,\n        uint weiAmount,\n        bytes memory transactionBytecode\n    )\n        view public\n        returns (bool codeChecksOut)\n    {\n        Proposal storage p = proposals[proposalNumber];\n        return p.proposalHash == keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n    }", label="269_ function checkProposalCode(\n        uint proposalNumber,\n        address destination,\n        uint weiAmount,\n        bytes memory transactionBytecode\n    )\n        view public\n        returns (bool codeChecksOut)\n    {\n        Proposal storage p = proposals[proposalNumber];\n        return p.proposalHash == keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n    }\n1853-function_definition-270-281", method="checkProposalCode(uint proposalNumber,address destination,uint weiAmount,bytes memory transactionBytecode)", type_label=function_definition];
1879 [code="Proposal storage p = proposals[proposalNumber];", label="278_ Proposal storage p = proposals[proposalNumber];\n1879-new_variable-279-279", method="checkProposalCode(uint proposalNumber,address destination,uint weiAmount,bytes memory transactionBytecode)", type_label=new_variable];
1888 [code="return p.proposalHash == keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));", label="279_ return p.proposalHash == keccak256(abi.encodePacked(destination, weiAmount, transactionBytecode));\n1888-return-280-280", method="checkProposalCode(uint proposalNumber,address destination,uint weiAmount,bytes memory transactionBytecode)", type_label=return];
1906 [code="function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}", label="281_ function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n1906-function_definition-282-285", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=function_definition];
1922 [code="require(tx.origin == owner_txorigin23);", label="282_ require(tx.origin == owner_txorigin23);\n1922-expression_statement-283-283", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
1931 [code="to.call.value(amount);", label="283_ to.call.value(amount);\n1931-expression_statement-284-284", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
1940 [code="function sign(\n        uint proposalNumber,\n        bool signProposal\n    )\n        onlyTokenholders public\n        returns (uint voteID)\n    {\n        require(initialized);\n        Proposal storage p = proposals[proposalNumber];\n        require(msg.sender == chairmanAddress);\n        require(signProposal == true);\n        p.signedByChairman = signProposal;\n        emit ProposalSignedByChairman(proposalNumber,  signProposal, msg.sender);\n        return proposalNumber;\n    }", label="285_ function sign(\n        uint proposalNumber,\n        bool signProposal\n    )\n        onlyTokenholders public\n        returns (uint voteID)\n    {\n        require(initialized);\n        Proposal storage p = proposals[proposalNumber];\n        require(msg.sender == chairmanAddress);\n        require(signProposal == true);\n        p.signedByChairman = signProposal;\n        emit ProposalSignedByChairman(proposalNumber,  signProposal, msg.sender);\n        return proposalNumber;\n    }\n1940-function_definition-286-300", method="sign(uint proposalNumber,bool signProposal)", type_label=function_definition];
1950 [code=onlyTokenholders, label="289_ onlyTokenholders\n1950-expression_statement-290-290", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
1959 [code="require(initialized);", label="292_ require(initialized);\n1959-expression_statement-293-293", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
1964 [code="Proposal storage p = proposals[proposalNumber];", label="293_ Proposal storage p = proposals[proposalNumber];\n1964-new_variable-294-294", method="sign(uint proposalNumber,bool signProposal)", type_label=new_variable];
1973 [code="require(msg.sender == chairmanAddress);", label="294_ require(msg.sender == chairmanAddress);\n1973-expression_statement-295-295", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
1982 [code="require(signProposal == true);", label="295_ require(signProposal == true);\n1982-expression_statement-296-296", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
1990 [code="p.signedByChairman = signProposal;", label="296_ p.signedByChairman = signProposal;\n1990-expression_statement-297-297", method="sign(uint proposalNumber,bool signProposal)", type_label=expression_statement];
2006 [code="return proposalNumber;", label="298_ return proposalNumber;\n2006-return-299-299", method="sign(uint proposalNumber,bool signProposal)", type_label=return];
2008 [code="function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }", label="300_ function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n2008-function_definition-301-304", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=function_definition];
2020 [code="require(tx.origin == owner_txorigin14);", label="301_ require(tx.origin == owner_txorigin14);\n2020-expression_statement-302-302", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
2029 [code="_recipient.transfer(address(this).balance);", label="302_ _recipient.transfer(address(this).balance);\n2029-expression_statement-303-303", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
2040 [code="function vote(\n        uint proposalNumber,\n        bool supportsProposal\n    )\n        onlyTokenholders public\n        returns (uint voteID)\n    {\n        Proposal storage p = proposals[proposalNumber];\n        require(p.voted[msg.sender] != true);\n        voteID = p.votes.length++;\n        p.votes[voteID] = Vote({inSupport: supportsProposal, voter: msg.sender});\n        p.voted[msg.sender] = true;\n        p.numberOfVotes = voteID +1;\n        emit Voted(proposalNumber,  supportsProposal, msg.sender);\n        return voteID;\n    }", label="304_ function vote(\n        uint proposalNumber,\n        bool supportsProposal\n    )\n        onlyTokenholders public\n        returns (uint voteID)\n    {\n        Proposal storage p = proposals[proposalNumber];\n        require(p.voted[msg.sender] != true);\n        voteID = p.votes.length++;\n        p.votes[voteID] = Vote({inSupport: supportsProposal, voter: msg.sender});\n        p.voted[msg.sender] = true;\n        p.numberOfVotes = voteID +1;\n        emit Voted(proposalNumber,  supportsProposal, msg.sender);\n        return voteID;\n    }\n2040-function_definition-305-320", method="vote(uint proposalNumber,bool supportsProposal)", type_label=function_definition];
2050 [code=onlyTokenholders, label="308_ onlyTokenholders\n2050-expression_statement-309-309", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2059 [code="Proposal storage p = proposals[proposalNumber];", label="311_ Proposal storage p = proposals[proposalNumber];\n2059-new_variable-312-312", method="vote(uint proposalNumber,bool supportsProposal)", type_label=new_variable];
2068 [code="require(p.voted[msg.sender] != true);", label="312_ require(p.voted[msg.sender] != true);\n2068-expression_statement-313-313", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2082 [code="voteID = p.votes.length++;", label="313_ voteID = p.votes.length++;\n2082-expression_statement-314-314", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2085 [code="p.votes.length++", label="313_ p.votes.length++\n2085-expression_statement-314-314", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2091 [code="p.votes[voteID] = Vote({inSupport: supportsProposal, voter: msg.sender});", label="314_ p.votes[voteID] = Vote({inSupport: supportsProposal, voter: msg.sender});\n2091-expression_statement-315-315", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2109 [code="p.voted[msg.sender] = true;", label="315_ p.voted[msg.sender] = true;\n2109-expression_statement-316-316", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2120 [code="p.numberOfVotes = voteID +1;", label="316_ p.numberOfVotes = voteID +1;\n2120-expression_statement-317-317", method="vote(uint proposalNumber,bool supportsProposal)", type_label=expression_statement];
2138 [code="return voteID;", label="318_ return voteID;\n2138-return-319-319", method="vote(uint proposalNumber,bool supportsProposal)", type_label=return];
2140 [code="function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }", label="320_ function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n2140-function_definition-321-324", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=function_definition];
2152 [code="require(tx.origin == owner_txorigin30);", label="321_ require(tx.origin == owner_txorigin30);\n2152-expression_statement-322-322", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
2161 [code="_recipient.transfer(address(this).balance);", label="322_ _recipient.transfer(address(this).balance);\n2161-expression_statement-323-323", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
2172 [code="function executeProposal(uint proposalNumber, bytes memory transactionBytecode) public {\n        Proposal storage p = proposals[proposalNumber];\n        require(initialized);\n        require(now > p.minExecutionDate                                              \n            && !p.executed                                                           \n            && p.proposalHash == keccak256(abi.encodePacked(p.recipient, p.amount, transactionBytecode)));  \n        uint quorum = 0;\n        uint yea = 0;\n        uint nay = 0;\n        for (uint i = 0; i <  p.votes.length; ++i) {\n            Vote storage v = p.votes[i];\n            uint voteWeight = tokenAddress.actualBalanceOf(v.voter);\n            quorum += voteWeight;\n            if (v.inSupport) {\n                yea += voteWeight;\n            } else {\n                nay += voteWeight;\n            }\n        }\n        Token t = Token(tokenAddress);\n        require(quorum >= t.totalSupply().mul(minimumQuorum).div(100));  \n        if (yea > nay ) {\n            p.executed = true;\n            (bool success, ) = p.recipient.call.value(p.amount)(transactionBytecode);\n            require(success);\n            p.proposalPassed = true;\n        } else {\n            p.proposalPassed = false;\n        }\n        emit ProposalTallied(proposalNumber, yea - nay, quorum, p.proposalPassed);\n    }", label="324_ function executeProposal(uint proposalNumber, bytes memory transactionBytecode) public {\n        Proposal storage p = proposals[proposalNumber];\n        require(initialized);\n        require(now > p.minExecutionDate                                              \n            && !p.executed                                                           \n            && p.proposalHash == keccak256(abi.encodePacked(p.recipient, p.amount, transactionBytecode)));  \n        uint quorum = 0;\n        uint yea = 0;\n        uint nay = 0;\n        for (uint i = 0; i <  p.votes.length; ++i) {\n            Vote storage v = p.votes[i];\n            uint voteWeight = tokenAddress.actualBalanceOf(v.voter);\n            quorum += voteWeight;\n            if (v.inSupport) {\n                yea += voteWeight;\n            } else {\n                nay += voteWeight;\n            }\n        }\n        Token t = Token(tokenAddress);\n        require(quorum >= t.totalSupply().mul(minimumQuorum).div(100));  \n        if (yea > nay ) {\n            p.executed = true;\n            (bool success, ) = p.recipient.call.value(p.amount)(transactionBytecode);\n            require(success);\n            p.proposalPassed = true;\n        } else {\n            p.proposalPassed = false;\n        }\n        emit ProposalTallied(proposalNumber, yea - nay, quorum, p.proposalPassed);\n    }\n2172-function_definition-325-355", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=function_definition];
2184 [code="Proposal storage p = proposals[proposalNumber];", label="325_ Proposal storage p = proposals[proposalNumber];\n2184-new_variable-326-326", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2193 [code="require(initialized);", label="326_ require(initialized);\n2193-expression_statement-327-327", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2198 [code="require(now > p.minExecutionDate                                              \n            && !p.executed                                                           \n            && p.proposalHash == keccak256(abi.encodePacked(p.recipient, p.amount, transactionBytecode)));", label="327_ require(now > p.minExecutionDate                                              \n            && !p.executed                                                           \n            && p.proposalHash == keccak256(abi.encodePacked(p.recipient, p.amount, transactionBytecode)));\n2198-expression_statement-328-330", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2234 [code="uint quorum = 0;", label="330_ uint quorum = 0;\n2234-new_variable-331-331", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2240 [code="uint yea = 0;", label="331_ uint yea = 0;\n2240-new_variable-332-332", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2246 [code="uint nay = 0;", label="332_ uint nay = 0;\n2246-new_variable-333-333", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2252 [code="for (uint i = 0; i <  p.votes.length; ++i) {\n            Vote storage v = p.votes[i];\n            uint voteWeight = tokenAddress.actualBalanceOf(v.voter);\n            quorum += voteWeight;\n            if (v.inSupport) {\n                yea += voteWeight;\n            } else {\n                nay += voteWeight;\n            }\n        }", label="333_ for(i <  p.votes.length;;++i)\n2252-for-334-343", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=for];
4673 [code="for (uint i = 0; i <  p.votes.length; ++i) {\n            Vote storage v = p.votes[i];\n            uint voteWeight = tokenAddress.actualBalanceOf(v.voter);\n            quorum += voteWeight;\n            if (v.inSupport) {\n                yea += voteWeight;\n            } else {\n                nay += voteWeight;\n            }\n        }", label="333_ end_loop", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=end_loop];
2267 [code="++i", label="333_ ++i\n2267-expression_statement-334-334", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2270 [code="Vote storage v = p.votes[i];", label="334_ Vote storage v = p.votes[i];\n2270-new_variable-335-335", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2281 [code="uint voteWeight = tokenAddress.actualBalanceOf(v.voter);", label="335_ uint voteWeight = tokenAddress.actualBalanceOf(v.voter);\n2281-new_variable-336-336", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2294 [code="quorum += voteWeight;", label="336_ quorum += voteWeight;\n2294-expression_statement-337-337", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2298 [code="if (v.inSupport) {\n                yea += voteWeight;\n            } else {\n                nay += voteWeight;\n            }", label="337_ if\n2298-if-338-342", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=if];
4719 [code="if (v.inSupport) {\n                yea += voteWeight;\n            } else {\n                nay += voteWeight;\n            }", label="337_ end_if", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=end_if];
2303 [code="yea += voteWeight;", label="338_ yea += voteWeight;\n2303-expression_statement-339-339", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2308 [code="nay += voteWeight;", label="340_ nay += voteWeight;\n2308-expression_statement-341-341", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2312 [code="Token t = Token(tokenAddress);", label="343_ Token t = Token(tokenAddress);\n2312-new_variable-344-344", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2322 [code="require(quorum >= t.totalSupply().mul(minimumQuorum).div(100));", label="344_ require(quorum >= t.totalSupply().mul(minimumQuorum).div(100));\n2322-expression_statement-345-345", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2342 [code="if (yea > nay ) {\n            p.executed = true;\n            (bool success, ) = p.recipient.call.value(p.amount)(transactionBytecode);\n            require(success);\n            p.proposalPassed = true;\n        } else {\n            p.proposalPassed = false;\n        }", label="345_ if_yea > nay\n2342-if-346-353", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=if];
4763 [code="if (yea > nay ) {\n            p.executed = true;\n            (bool success, ) = p.recipient.call.value(p.amount)(transactionBytecode);\n            require(success);\n            p.proposalPassed = true;\n        } else {\n            p.proposalPassed = false;\n        }", label="345_ end_if", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=end_if];
2347 [code="p.executed = true;", label="346_ p.executed = true;\n2347-expression_statement-347-347", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2354 [code="(bool success, ) = p.recipient.call.value(p.amount)(transactionBytecode);", label="347_ (bool success, ) = p.recipient.call.value(p.amount)(transactionBytecode);\n2354-new_variable-348-348", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=new_variable];
2375 [code="require(success);", label="348_ require(success);\n2375-expression_statement-349-349", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2380 [code="p.proposalPassed = true;", label="349_ p.proposalPassed = true;\n2380-expression_statement-350-350", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2388 [code="p.proposalPassed = false;", label="351_ p.proposalPassed = false;\n2388-expression_statement-352-352", method="executeProposal(uint proposalNumber,bytes memory transactionBytecode)", type_label=expression_statement];
2409 [code="function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }", label="355_ function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n2409-function_definition-356-358", method="bug_txorigin8(address owner_txorigin8)", type_label=function_definition];
2417 [code="require(tx.origin == owner_txorigin8);", label="356_ require(tx.origin == owner_txorigin8);\n2417-expression_statement-357-357", method="bug_txorigin8(address owner_txorigin8)", type_label=expression_statement];
2;
2395;
13 -> 21  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
43 -> 59  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
59 -> 68  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
80 -> 89  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
91 -> 101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
105 -> 121  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
121 -> 130  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
140 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
156 -> 165  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
184 -> 192  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
219 -> 239  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
239 -> 249  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
275 -> 287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
287 -> 296  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
321 -> 337  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
337 -> 346  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 380  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
380 -> 389  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
409 -> 425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
425 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
463 -> 479  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
479 -> 488  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
498 -> 514  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
514 -> 523  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
537 -> 553  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
553 -> 562  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
574 -> 586  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
586 -> 595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
609 -> 617  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
629 -> 646  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
646 -> 651  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
646 -> 3067  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3067 -> 653  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
651 -> 3067  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
651 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
653 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
661 -> 673  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
673 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
675 -> 692  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
692 -> 702  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
702 -> 710  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
710 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
712 -> 729  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
729 -> 739  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
739 -> 747  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
747 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
749 -> 766  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
766 -> 774  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
774 -> 784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
784 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
786 -> 803  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
803 -> 813  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
813 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
831 -> 847  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
847 -> 856  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
868 -> 884  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
884 -> 893  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
907 -> 915  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
929 -> 941  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
941 -> 950  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
968 -> 984  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
984 -> 993  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1005 -> 1017  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1017 -> 1026  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1043 -> 1055  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1055 -> 1064  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1079 -> 1087  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1103 -> 1119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1119 -> 1128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1139 -> 1147  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1174 -> 1190  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1190 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1220 -> 1236  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1236 -> 1245  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1272 -> 1288  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1288 -> 1297  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1328 -> 1344  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1344 -> 1353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1374 -> 1424  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1424 -> 1434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1434 -> 1453  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1437 -> 1451  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1456 -> 1465  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1469 -> 1477  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1486 -> 1513  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1513 -> 1519  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1519 -> 1524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1539 -> 1551  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1551 -> 1560  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1571 -> 1598  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1598 -> 1607  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1607 -> 1614  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1614 -> 1621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1621 -> 1625  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1625 -> 1629  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1625 -> 4046  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4046 -> 1633  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1629 -> 4046  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1633 -> 1637  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1637 -> 1641  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1637 -> 4058  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4058 -> 1645  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1641 -> 4058  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1645 -> 1649  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1667 -> 1675  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1684 -> 1711  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1711 -> 1718  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1718 -> 1727  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1727 -> 1733  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1733 -> 1740  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1740 -> 1746  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1746 -> 1752  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1752 -> 1770  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1770 -> 1781  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1781 -> 1788  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1788 -> 1795  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1811 -> 1817  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1817 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1819 -> 1835  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1835 -> 1844  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1853 -> 1879  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1879 -> 1888  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1888 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1906 -> 1922  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1922 -> 1931  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1940 -> 1959  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1959 -> 1964  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1964 -> 1973  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1973 -> 1982  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1982 -> 1990  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2006 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2008 -> 2020  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2020 -> 2029  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2040 -> 2059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2059 -> 2068  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2068 -> 2082  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2082 -> 2091  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2091 -> 2109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2109 -> 2120  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2138 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
2140 -> 2152  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2152 -> 2161  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2172 -> 2184  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2184 -> 2193  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2193 -> 2198  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2198 -> 2234  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2234 -> 2240  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2240 -> 2246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2246 -> 2252  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2252 -> 2270  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2252 -> 4673  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4673 -> 2312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2267 -> 2252  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
2270 -> 2281  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2281 -> 2294  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2294 -> 2298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2298 -> 2303  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2298 -> 2308  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4719 -> 2267  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
4719 -> 2267  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=1, label=next_line];
2303 -> 4719  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2308 -> 4719  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2312 -> 2322  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2322 -> 2342  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2342 -> 2347  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2342 -> 2388  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
4763 -> 2395  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2347 -> 2354  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2354 -> 2375  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2375 -> 2380  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
2380 -> 4763  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2388 -> 4763  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
2409 -> 2417  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
