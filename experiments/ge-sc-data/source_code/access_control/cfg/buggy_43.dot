digraph  {
13 [code="function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}", label="2_ function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n13-function_definition-3-6", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=function_definition];
29 [code="require (tx.origin == owner_txorigin33);", label="3_ require (tx.origin == owner_txorigin33);\n29-expression_statement-4-4", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
38 [code="receiver.transfer(amount);", label="4_ receiver.transfer(amount);\n38-expression_statement-5-5", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", type_label=expression_statement];
51 [code="function _setMetadata(bytes memory metadata) internal {\n        emit MetadataSet(metadata);\n    }", label="7_ function _setMetadata(bytes memory metadata) internal {\n        emit MetadataSet(metadata);\n    }\n51-function_definition-8-10", method="_setMetadata(bytes memory metadata)", type_label=function_definition];
63 [code="function withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2) public {\n        require(tx.origin == owner_txorigin2);\n        _recipient.transfer(address(this).balance);\n    }", label="10_ function withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2) public {\n        require(tx.origin == owner_txorigin2);\n        _recipient.transfer(address(this).balance);\n    }\n63-function_definition-11-14", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=function_definition];
75 [code="require(tx.origin == owner_txorigin2);", label="11_ require(tx.origin == owner_txorigin2);\n75-expression_statement-12-12", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=expression_statement];
84 [code="_recipient.transfer(address(this).balance);", label="12_ _recipient.transfer(address(this).balance);\n84-expression_statement-13-13", method="withdrawAll_txorigin2(address payable _recipient,address owner_txorigin2)", type_label=expression_statement];
98 [code="function withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22) public {\n        require(tx.origin == owner_txorigin22);\n        _recipient.transfer(address(this).balance);\n    }", label="16_ function withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22) public {\n        require(tx.origin == owner_txorigin22);\n        _recipient.transfer(address(this).balance);\n    }\n98-function_definition-17-20", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=function_definition];
110 [code="require(tx.origin == owner_txorigin22);", label="17_ require(tx.origin == owner_txorigin22);\n110-expression_statement-18-18", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=expression_statement];
119 [code="_recipient.transfer(address(this).balance);", label="18_ _recipient.transfer(address(this).balance);\n119-expression_statement-19-19", method="withdrawAll_txorigin22(address payable _recipient,address owner_txorigin22)", type_label=expression_statement];
130 [code="address private _operator;", label="20_ address private _operator;\n130-new_variable-21-21", method="", type_label=new_variable];
135 [code="function bug_txorigin12(address owner_txorigin12) public{\n        require(tx.origin == owner_txorigin12);\n    }", label="21_ function bug_txorigin12(address owner_txorigin12) public{\n        require(tx.origin == owner_txorigin12);\n    }\n135-function_definition-22-24", method="bug_txorigin12(address owner_txorigin12)", type_label=function_definition];
143 [code="require(tx.origin == owner_txorigin12);", label="22_ require(tx.origin == owner_txorigin12);\n143-expression_statement-23-23", method="bug_txorigin12(address owner_txorigin12)", type_label=expression_statement];
152 [code="bool private _status;", label="24_ bool private _status;\n152-new_variable-25-25", method="", type_label=new_variable];
157 [code="function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}", label="25_ function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n157-function_definition-26-29", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=function_definition];
173 [code="require(tx.origin == owner_txorigin27);", label="26_ require(tx.origin == owner_txorigin27);\n173-expression_statement-27-27", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
182 [code="to.call.value(amount);", label="27_ to.call.value(amount);\n182-expression_statement-28-28", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", type_label=expression_statement];
201 [code="function _setOperator(address operator) internal {\n        require(_operator != operator, \"cannot set same operator\");\n        _operator = operator;\n        emit OperatorUpdated(operator, hasActiveOperator());\n    }", label="30_ function _setOperator(address operator) internal {\n        require(_operator != operator, \"cannot set same operator\");\n        _operator = operator;\n        emit OperatorUpdated(operator, hasActiveOperator());\n    }\n201-function_definition-31-35", method="_setOperator(address operator)", type_label=function_definition];
209 [code="require(_operator != operator, \"cannot set same operator\");", label="31_ require(_operator != operator, \"cannot set same operator\");\n209-expression_statement-32-32", method="_setOperator(address operator)", type_label=expression_statement];
219 [code="_operator = operator;", label="32_ _operator = operator;\n219-expression_statement-33-33", method="_setOperator(address operator)", type_label=expression_statement];
230 [code="function sendto_txorigin17(address payable receiver, uint amount,address owner_txorigin17) public {\n	require (tx.origin == owner_txorigin17);\n	receiver.transfer(amount);\n}", label="35_ function sendto_txorigin17(address payable receiver, uint amount,address owner_txorigin17) public {\n	require (tx.origin == owner_txorigin17);\n	receiver.transfer(amount);\n}\n230-function_definition-36-39", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=function_definition];
246 [code="require (tx.origin == owner_txorigin17);", label="36_ require (tx.origin == owner_txorigin17);\n246-expression_statement-37-37", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=expression_statement];
255 [code="receiver.transfer(amount);", label="37_ receiver.transfer(amount);\n255-expression_statement-38-38", method="sendto_txorigin17(address payable receiver,uint amount,address owner_txorigin17)", type_label=expression_statement];
262 [code="function _transferOperator(address operator) internal {\n        require(_operator != address(0), \"operator not set\");\n        _setOperator(operator);\n    }", label="39_ function _transferOperator(address operator) internal {\n        require(_operator != address(0), \"operator not set\");\n        _setOperator(operator);\n    }\n262-function_definition-40-43", method="_transferOperator(address operator)", type_label=function_definition];
270 [code="require(_operator != address(0), \"operator not set\");", label="40_ require(_operator != address(0), \"operator not set\");\n270-expression_statement-41-41", method="_transferOperator(address operator)", type_label=expression_statement];
282 [code="_setOperator(operator);", label="41_ _setOperator(operator);\n282-expression_statement-42-42", method="_transferOperator(address operator)", type_label=expression_statement];
287 [code="function sendto_txorigin37(address payable receiver, uint amount,address owner_txorigin37) public {\n	require (tx.origin == owner_txorigin37);\n	receiver.transfer(amount);\n}", label="43_ function sendto_txorigin37(address payable receiver, uint amount,address owner_txorigin37) public {\n	require (tx.origin == owner_txorigin37);\n	receiver.transfer(amount);\n}\n287-function_definition-44-47", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=function_definition];
303 [code="require (tx.origin == owner_txorigin37);", label="44_ require (tx.origin == owner_txorigin37);\n303-expression_statement-45-45", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=expression_statement];
312 [code="receiver.transfer(amount);", label="45_ receiver.transfer(amount);\n312-expression_statement-46-46", method="sendto_txorigin37(address payable receiver,uint amount,address owner_txorigin37)", type_label=expression_statement];
319 [code="function _renounceOperator() internal {\n        require(hasActiveOperator(), \"only when operator active\");\n        _operator = address(0);\n        _status = false;\n        emit OperatorUpdated(address(0), false);\n    }", label="47_ function _renounceOperator() internal {\n        require(hasActiveOperator(), \"only when operator active\");\n        _operator = address(0);\n        _status = false;\n        emit OperatorUpdated(address(0), false);\n    }\n319-function_definition-48-53", method="_renounceOperator()", type_label=function_definition];
323 [code="require(hasActiveOperator(), \"only when operator active\");", label="48_ require(hasActiveOperator(), \"only when operator active\");\n323-expression_statement-49-49", method="_renounceOperator()", type_label=expression_statement];
332 [code="_operator = address(0);", label="49_ _operator = address(0);\n332-expression_statement-50-50", method="_renounceOperator()", type_label=expression_statement];
338 [code="_status = false;", label="50_ _status = false;\n338-expression_statement-51-51", method="_renounceOperator()", type_label=expression_statement];
352 [code="function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}", label="53_ function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n352-function_definition-54-57", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=function_definition];
368 [code="require(tx.origin == owner_txorigin3);", label="54_ require(tx.origin == owner_txorigin3);\n368-expression_statement-55-55", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=expression_statement];
377 [code="to.call.value(amount);", label="55_ to.call.value(amount);\n377-expression_statement-56-56", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", type_label=expression_statement];
386 [code="function _activateOperator() internal {\n        require(!hasActiveOperator(), \"only when operator not active\");\n        _status = true;\n        emit OperatorUpdated(_operator, true);\n    }", label="57_ function _activateOperator() internal {\n        require(!hasActiveOperator(), \"only when operator not active\");\n        _status = true;\n        emit OperatorUpdated(_operator, true);\n    }\n386-function_definition-58-62", method="_activateOperator()", type_label=function_definition];
390 [code="require(!hasActiveOperator(), \"only when operator not active\");", label="58_ require(!hasActiveOperator(), \"only when operator not active\");\n390-expression_statement-59-59", method="_activateOperator()", type_label=expression_statement];
400 [code="_status = true;", label="59_ _status = true;\n400-expression_statement-60-60", method="_activateOperator()", type_label=expression_statement];
412 [code="function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}", label="62_ function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n412-function_definition-63-66", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=function_definition];
428 [code="require (tx.origin == owner_txorigin9);", label="63_ require (tx.origin == owner_txorigin9);\n428-expression_statement-64-64", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
437 [code="receiver.transfer(amount);", label="64_ receiver.transfer(amount);\n437-expression_statement-65-65", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", type_label=expression_statement];
444 [code="function _deactivateOperator() internal {\n        require(hasActiveOperator(), \"only when operator active\");\n        _status = false;\n        emit OperatorUpdated(_operator, false);\n    }", label="66_ function _deactivateOperator() internal {\n        require(hasActiveOperator(), \"only when operator active\");\n        _status = false;\n        emit OperatorUpdated(_operator, false);\n    }\n444-function_definition-67-71", method="_deactivateOperator()", type_label=function_definition];
448 [code="require(hasActiveOperator(), \"only when operator active\");", label="67_ require(hasActiveOperator(), \"only when operator active\");\n448-expression_statement-68-68", method="_deactivateOperator()", type_label=expression_statement];
457 [code="_status = false;", label="68_ _status = false;\n457-expression_statement-69-69", method="_deactivateOperator()", type_label=expression_statement];
469 [code="function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}", label="71_ function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n469-function_definition-72-75", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=function_definition];
485 [code="require (tx.origin == owner_txorigin25);", label="72_ require (tx.origin == owner_txorigin25);\n485-expression_statement-73-73", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
494 [code="receiver.transfer(amount);", label="73_ receiver.transfer(amount);\n494-expression_statement-74-74", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", type_label=expression_statement];
501 [code="function getOperator() public view returns (address operator) {\n        operator = _operator;\n    }", label="75_ function getOperator() public view returns (address operator) {\n        operator = _operator;\n    }\n501-function_definition-76-78", method="getOperator()", type_label=function_definition];
511 [code="operator = _operator;", label="76_ operator = _operator;\n511-expression_statement-77-77", method="getOperator()", type_label=expression_statement];
515 [code="function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}", label="78_ function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n515-function_definition-79-82", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=function_definition];
531 [code="require(tx.origin == owner_txorigin19);", label="79_ require(tx.origin == owner_txorigin19);\n531-expression_statement-80-80", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
540 [code="to.call.value(amount);", label="80_ to.call.value(amount);\n540-expression_statement-81-81", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", type_label=expression_statement];
549 [code="function isOperator(address caller) public view returns (bool ok) {\n        return (caller == getOperator());\n    }", label="82_ function isOperator(address caller) public view returns (bool ok) {\n        return (caller == getOperator());\n    }\n549-function_definition-83-85", method="isOperator(address caller)", type_label=function_definition];
563 [code="return (caller == getOperator());", label="83_ return (caller == getOperator());\n563-return-84-84", method="isOperator(address caller)", type_label=return];
569 [code="function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }", label="85_ function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n569-function_definition-86-89", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=function_definition];
581 [code="require(tx.origin == owner_txorigin26);", label="86_ require(tx.origin == owner_txorigin26);\n581-expression_statement-87-87", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
590 [code="_recipient.transfer(address(this).balance);", label="87_ _recipient.transfer(address(this).balance);\n590-expression_statement-88-88", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", type_label=expression_statement];
601 [code="function hasActiveOperator() public view returns (bool ok) {\n        return _status;\n    }", label="89_ function hasActiveOperator() public view returns (bool ok) {\n        return _status;\n    }\n601-function_definition-90-92", method="hasActiveOperator()", type_label=function_definition];
611 [code="return _status;", label="90_ return _status;\n611-return-91-91", method="hasActiveOperator()", type_label=return];
613 [code="function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }", label="92_ function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n613-function_definition-93-95", method="bug_txorigin20(address owner_txorigin20)", type_label=function_definition];
621 [code="require(tx.origin == owner_txorigin20);", label="93_ require(tx.origin == owner_txorigin20);\n621-expression_statement-94-94", method="bug_txorigin20(address owner_txorigin20)", type_label=expression_statement];
630 [code="function isActiveOperator(address caller) public view returns (bool ok) {\n        return (isOperator(caller) && hasActiveOperator());\n    }", label="95_ function isActiveOperator(address caller) public view returns (bool ok) {\n        return (isOperator(caller) && hasActiveOperator());\n    }\n630-function_definition-96-98", method="isActiveOperator(address caller)", type_label=function_definition];
644 [code="return (isOperator(caller) && hasActiveOperator());", label="96_ return (isOperator(caller) && hasActiveOperator());\n644-return-97-97", method="isActiveOperator(address caller)", type_label=return];
653 [code="function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }", label="98_ function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n653-function_definition-99-101", method="bug_txorigin32(address owner_txorigin32)", type_label=function_definition];
661 [code="require(tx.origin == owner_txorigin32);", label="99_ require(tx.origin == owner_txorigin32);\n661-expression_statement-100-100", method="bug_txorigin32(address owner_txorigin32)", type_label=expression_statement];
673 [code="struct MultiHash {\n        bytes32 hash;\n        uint8 hashFunction;\n        uint8 digestSize;\n    }", label="103_ struct MultiHash {\n        bytes32 hash;\n        uint8 hashFunction;\n        uint8 digestSize;\n    }\n673-expression_statement-104-108", method="MultiHash()", type_label=expression_statement];
687 [code="function _combineMultiHash(MultiHash memory multihash) internal pure returns (bytes memory) {\n        bytes memory out = new bytes(34);\n        out[0] = byte(multihash.hashFunction);\n        out[1] = byte(multihash.digestSize);\n        uint8 i;\n        for (i = 0; i < 32; i++) {\n          out[i+2] = multihash.hash[i];\n        }\n        return out;\n    }", label="108_ function _combineMultiHash(MultiHash memory multihash) internal pure returns (bytes memory) {\n        bytes memory out = new bytes(34);\n        out[0] = byte(multihash.hashFunction);\n        out[1] = byte(multihash.digestSize);\n        uint8 i;\n        for (i = 0; i < 32; i++) {\n          out[i+2] = multihash.hash[i];\n        }\n        return out;\n    }\n687-function_definition-109-118", method="_combineMultiHash(MultiHash memory multihash)", type_label=function_definition];
701 [code="bytes memory out = new bytes(34);", label="109_ bytes memory out = new bytes(34);\n701-new_variable-110-110", method="_combineMultiHash(MultiHash memory multihash)", type_label=new_variable];
712 [code="out[0] = byte(multihash.hashFunction);", label="110_ out[0] = byte(multihash.hashFunction);\n712-expression_statement-111-111", method="_combineMultiHash(MultiHash memory multihash)", type_label=expression_statement];
722 [code="out[1] = byte(multihash.digestSize);", label="111_ out[1] = byte(multihash.digestSize);\n722-expression_statement-112-112", method="_combineMultiHash(MultiHash memory multihash)", type_label=expression_statement];
732 [code="uint8 i;", label="112_ uint8 i;\n732-new_variable-113-113", method="_combineMultiHash(MultiHash memory multihash)", type_label=new_variable];
737 [code="for (i = 0; i < 32; i++) {\n          out[i+2] = multihash.hash[i];\n        }", label="113_ for(i < 32;;i++)\n737-for-114-116", method="_combineMultiHash(MultiHash memory multihash)", type_label=for];
2545 [code="for (i = 0; i < 32; i++) {\n          out[i+2] = multihash.hash[i];\n        }", label="113_ end_loop", method="_combineMultiHash(MultiHash memory multihash)", type_label=end_loop];
746 [code="i++", label="113_ i++\n746-expression_statement-114-114", method="_combineMultiHash(MultiHash memory multihash)", type_label=expression_statement];
749 [code="out[i+2] = multihash.hash[i];", label="114_ out[i+2] = multihash.hash[i];\n749-expression_statement-115-115", method="_combineMultiHash(MultiHash memory multihash)", type_label=expression_statement];
761 [code="return out;", label="116_ return out;\n761-return-117-117", method="_combineMultiHash(MultiHash memory multihash)", type_label=return];
763 [code="function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }", label="118_ function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n763-function_definition-119-122", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=function_definition];
775 [code="require(tx.origin == owner_txorigin38);", label="119_ require(tx.origin == owner_txorigin38);\n775-expression_statement-120-120", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
784 [code="_recipient.transfer(address(this).balance);", label="120_ _recipient.transfer(address(this).balance);\n784-expression_statement-121-121", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", type_label=expression_statement];
795 [code="function _splitMultiHash(bytes memory source) internal pure returns (MultiHash memory) {\n        require(source.length == 34, \"length of source must be 34\");\n        uint8 hashFunction = uint8(source[0]);\n        uint8 digestSize = uint8(source[1]);\n        bytes32 hash;\n        assembly {\n          hash := mload(add(source, 34))\n        }\n        return (MultiHash({\n          hashFunction: hashFunction,\n          digestSize: digestSize,\n          hash: hash\n        }));\n    }", label="122_ function _splitMultiHash(bytes memory source) internal pure returns (MultiHash memory) {\n        require(source.length == 34, \"length of source must be 34\");\n        uint8 hashFunction = uint8(source[0]);\n        uint8 digestSize = uint8(source[1]);\n        bytes32 hash;\n        assembly {\n          hash := mload(add(source, 34))\n        }\n        return (MultiHash({\n          hashFunction: hashFunction,\n          digestSize: digestSize,\n          hash: hash\n        }));\n    }\n795-function_definition-123-136", method="_splitMultiHash(bytes memory source)", type_label=function_definition];
809 [code="require(source.length == 34, \"length of source must be 34\");", label="123_ require(source.length == 34, \"length of source must be 34\");\n809-expression_statement-124-124", method="_splitMultiHash(bytes memory source)", type_label=expression_statement];
821 [code="uint8 hashFunction = uint8(source[0]);", label="124_ uint8 hashFunction = uint8(source[0]);\n821-new_variable-125-125", method="_splitMultiHash(bytes memory source)", type_label=new_variable];
831 [code="uint8 digestSize = uint8(source[1]);", label="125_ uint8 digestSize = uint8(source[1]);\n831-new_variable-126-126", method="_splitMultiHash(bytes memory source)", type_label=new_variable];
841 [code="bytes32 hash;", label="126_ bytes32 hash;\n841-new_variable-127-127", method="_splitMultiHash(bytes memory source)", type_label=new_variable];
859 [code="return (MultiHash({\n          hashFunction: hashFunction,\n          digestSize: digestSize,\n          hash: hash\n        }));", label="130_ return (MultiHash({\n          hashFunction: hashFunction,\n          digestSize: digestSize,\n          hash: hash\n        }));\n859-return-131-135", method="_splitMultiHash(bytes memory source)", type_label=return];
873 [code="function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }", label="136_ function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n873-function_definition-137-139", method="bug_txorigin4(address owner_txorigin4)", type_label=function_definition];
881 [code="require(tx.origin == owner_txorigin4);", label="137_ require(tx.origin == owner_txorigin4);\n881-expression_statement-138-138", method="bug_txorigin4(address owner_txorigin4)", type_label=expression_statement];
911 [code="function create(bytes calldata initData) external returns (address instance);", label="142_ function create(bytes calldata initData) external returns (address instance);\n911-function_definition-143-143", method="create(bytes calldata initData)", type_label=function_definition];
923 [code="function createSalty(bytes calldata initData, bytes32 salt) external returns (address instance);", label="143_ function createSalty(bytes calldata initData, bytes32 salt) external returns (address instance);\n923-function_definition-144-144", method="createSalty(bytes calldata initData,bytes32 salt)", type_label=function_definition];
939 [code="function getInitSelector() external view returns (bytes4 initSelector);", label="144_ function getInitSelector() external view returns (bytes4 initSelector);\n939-function_definition-145-145", method="getInitSelector()", type_label=function_definition];
948 [code="function getInstanceRegistry() external view returns (address instanceRegistry);", label="145_ function getInstanceRegistry() external view returns (address instanceRegistry);\n948-function_definition-146-146", method="getInstanceRegistry()", type_label=function_definition];
957 [code="function getTemplate() external view returns (address template);", label="146_ function getTemplate() external view returns (address template);\n957-function_definition-147-147", method="getTemplate()", type_label=function_definition];
966 [code="function getSaltyInstance(bytes calldata, bytes32 salt) external view returns (address instance);", label="147_ function getSaltyInstance(bytes calldata, bytes32 salt) external view returns (address instance);\n966-function_definition-148-148", method="getSaltyInstance(bytes calldata,bytes32 salt)", type_label=function_definition];
982 [code="function getNextInstance(bytes calldata) external view returns (address instance);", label="148_ function getNextInstance(bytes calldata) external view returns (address instance);\n982-function_definition-149-149", method="getNextInstance(bytes calldata)", type_label=function_definition];
994 [code="function getInstanceCreator(address instance) external view returns (address creator);", label="149_ function getInstanceCreator(address instance) external view returns (address creator);\n994-function_definition-150-150", method="getInstanceCreator(address instance)", type_label=function_definition];
1007 [code="function getInstanceType() external view returns (bytes4 instanceType);", label="150_ function getInstanceType() external view returns (bytes4 instanceType);\n1007-function_definition-151-151", method="getInstanceType()", type_label=function_definition];
1016 [code="function getInstanceCount() external view returns (uint256 count);", label="151_ function getInstanceCount() external view returns (uint256 count);\n1016-function_definition-152-152", method="getInstanceCount()", type_label=function_definition];
1025 [code="function getInstance(uint256 index) external view returns (address instance);", label="152_ function getInstance(uint256 index) external view returns (address instance);\n1025-function_definition-153-153", method="getInstance(uint256 index)", type_label=function_definition];
1038 [code="function getInstances() external view returns (address[] memory instances);", label="153_ function getInstances() external view returns (address[] memory instances);\n1038-function_definition-154-154", method="getInstances()", type_label=function_definition];
1048 [code="function getPaginatedInstances(uint256 startIndex, uint256 endIndex) external view returns (address[] memory instances);", label="154_ function getPaginatedInstances(uint256 startIndex, uint256 endIndex) external view returns (address[] memory instances);\n1048-function_definition-155-155", method="getPaginatedInstances(uint256 startIndex,uint256 endIndex)", type_label=function_definition];
1072 [code="function transferTo_txorigin11(address to, uint amount,address owner_txorigin11) public {\n  require(tx.origin == owner_txorigin11);\n  to.call.value(amount);\n}", label="157_ function transferTo_txorigin11(address to, uint amount,address owner_txorigin11) public {\n  require(tx.origin == owner_txorigin11);\n  to.call.value(amount);\n}\n1072-function_definition-158-161", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=function_definition];
1088 [code="require(tx.origin == owner_txorigin11);", label="158_ require(tx.origin == owner_txorigin11);\n1088-expression_statement-159-159", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=expression_statement];
1097 [code="to.call.value(amount);", label="159_ to.call.value(amount);\n1097-expression_statement-160-160", method="transferTo_txorigin11(address to,uint amount,address owner_txorigin11)", type_label=expression_statement];
1106 [code="MultiHash private _proofHash;", label="161_ MultiHash private _proofHash;\n1106-new_variable-162-162", method="", type_label=new_variable];
1112 [code="function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}", label="162_ function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n1112-function_definition-163-166", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=function_definition];
1128 [code="require(tx.origin == owner_txorigin31);", label="163_ require(tx.origin == owner_txorigin31);\n1128-expression_statement-164-164", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
1137 [code="to.call.value(amount);", label="164_ to.call.value(amount);\n1137-expression_statement-165-165", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", type_label=expression_statement];
1156 [code="function _setProofHash(bytes memory proofHash) internal {\n        _proofHash = MultiHashWrapper._splitMultiHash(proofHash);\n        emit ProofHashSet(msg.sender, proofHash);\n    }", label="167_ function _setProofHash(bytes memory proofHash) internal {\n        _proofHash = MultiHashWrapper._splitMultiHash(proofHash);\n        emit ProofHashSet(msg.sender, proofHash);\n    }\n1156-function_definition-168-171", method="_setProofHash(bytes memory proofHash)", type_label=function_definition];
1164 [code="_proofHash = MultiHashWrapper._splitMultiHash(proofHash);", label="168_ _proofHash = MultiHashWrapper._splitMultiHash(proofHash);\n1164-expression_statement-169-169", method="_setProofHash(bytes memory proofHash)", type_label=expression_statement];
1181 [code="function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}", label="171_ function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n1181-function_definition-172-175", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=function_definition];
1197 [code="require(tx.origin == owner_txorigin7);", label="172_ require(tx.origin == owner_txorigin7);\n1197-expression_statement-173-173", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
1206 [code="to.call.value(amount);", label="173_ to.call.value(amount);\n1206-expression_statement-174-174", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", type_label=expression_statement];
1215 [code="function getProofHash() public view returns (bytes memory proofHash) {\n        proofHash = MultiHashWrapper._combineMultiHash(_proofHash);\n    }", label="175_ function getProofHash() public view returns (bytes memory proofHash) {\n        proofHash = MultiHashWrapper._combineMultiHash(_proofHash);\n    }\n1215-function_definition-176-178", method="getProofHash()", type_label=function_definition];
1225 [code="proofHash = MultiHashWrapper._combineMultiHash(_proofHash);", label="176_ proofHash = MultiHashWrapper._combineMultiHash(_proofHash);\n1225-expression_statement-177-177", method="getProofHash()", type_label=expression_statement];
1234 [code="function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}", label="178_ function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n1234-function_definition-179-182", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=function_definition];
1250 [code="require(tx.origin == owner_txorigin23);", label="179_ require(tx.origin == owner_txorigin23);\n1250-expression_statement-180-180", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
1259 [code="to.call.value(amount);", label="180_ to.call.value(amount);\n1259-expression_statement-181-181", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", type_label=expression_statement];
1271 [code="function sendto_txorigin1(address payable receiver, uint amount,address owner_txorigin1) public {\n	require (tx.origin == owner_txorigin1);\n	receiver.transfer(amount);\n}", label="184_ function sendto_txorigin1(address payable receiver, uint amount,address owner_txorigin1) public {\n	require (tx.origin == owner_txorigin1);\n	receiver.transfer(amount);\n}\n1271-function_definition-185-188", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=function_definition];
1287 [code="require (tx.origin == owner_txorigin1);", label="185_ require (tx.origin == owner_txorigin1);\n1287-expression_statement-186-186", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=expression_statement];
1296 [code="receiver.transfer(amount);", label="186_ receiver.transfer(amount);\n1296-expression_statement-187-187", method="sendto_txorigin1(address payable receiver,uint amount,address owner_txorigin1)", type_label=expression_statement];
1303 [code="address private _factory;", label="188_ address private _factory;\n1303-new_variable-189-189", method="", type_label=new_variable];
1308 [code="modifier initializeTemplate() {\n        _factory = msg.sender;\n        uint32 codeSize;\n        assembly { codeSize := extcodesize(address) }\n        require(codeSize == 0, \"must be called within contract constructor\");\n        _;\n    }", label="189_ modifier initializeTemplate() {\n        _factory = msg.sender;\n        uint32 codeSize;\n        assembly { codeSize := extcodesize(address) }\n        require(codeSize == 0, \"must be called within contract constructor\");\n        _;\n    }\n1308-expression_statement-190-196", method="", type_label=expression_statement];
1311 [code="_factory = msg.sender;", label="190_ _factory = msg.sender;\n1311-expression_statement-191-191", method="", type_label=expression_statement];
1317 [code="uint32 codeSize;", label="191_ uint32 codeSize;\n1317-new_variable-192-192", method="", type_label=new_variable];
1331 [code="require(codeSize == 0, \"must be called within contract constructor\");", label="193_ require(codeSize == 0, \"must be called within contract constructor\");\n1331-expression_statement-194-194", method="", type_label=expression_statement];
1341 [code="_;", label="194_ _;\n1341-expression_statement-195-195", method="", type_label=expression_statement];
1343 [code="function getCreator() public view returns (address creator) {\n        creator = iFactory(_factory).getInstanceCreator(address(this));\n    }", label="196_ function getCreator() public view returns (address creator) {\n        creator = iFactory(_factory).getInstanceCreator(address(this));\n    }\n1343-function_definition-197-199", method="getCreator()", type_label=function_definition];
1353 [code="creator = iFactory(_factory).getInstanceCreator(address(this));", label="197_ creator = iFactory(_factory).getInstanceCreator(address(this));\n1353-expression_statement-198-198", method="getCreator()", type_label=expression_statement];
1367 [code="function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }", label="199_ function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n1367-function_definition-200-203", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=function_definition];
1379 [code="require(tx.origin == owner_txorigin14);", label="200_ require(tx.origin == owner_txorigin14);\n1379-expression_statement-201-201", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
1388 [code="_recipient.transfer(address(this).balance);", label="201_ _recipient.transfer(address(this).balance);\n1388-expression_statement-202-202", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", type_label=expression_statement];
1399 [code="function isCreator(address caller) public view returns (bool ok) {\n        ok = (caller == getCreator());\n    }", label="203_ function isCreator(address caller) public view returns (bool ok) {\n        ok = (caller == getCreator());\n    }\n1399-function_definition-204-206", method="isCreator(address caller)", type_label=function_definition];
1413 [code="ok = (caller == getCreator());", label="204_ ok = (caller == getCreator());\n1413-expression_statement-205-205", method="isCreator(address caller)", type_label=expression_statement];
1421 [code="function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }", label="206_ function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n1421-function_definition-207-210", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=function_definition];
1433 [code="require(tx.origin == owner_txorigin30);", label="207_ require(tx.origin == owner_txorigin30);\n1433-expression_statement-208-208", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
1442 [code="_recipient.transfer(address(this).balance);", label="208_ _recipient.transfer(address(this).balance);\n1442-expression_statement-209-209", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", type_label=expression_statement];
1453 [code="function getFactory() public view returns (address factory) {\n        factory = _factory;\n    }", label="210_ function getFactory() public view returns (address factory) {\n        factory = _factory;\n    }\n1453-function_definition-211-213", method="getFactory()", type_label=function_definition];
1463 [code="factory = _factory;", label="211_ factory = _factory;\n1463-expression_statement-212-212", method="getFactory()", type_label=expression_statement];
1467 [code="function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }", label="213_ function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n1467-function_definition-214-216", method="bug_txorigin8(address owner_txorigin8)", type_label=function_definition];
1475 [code="require(tx.origin == owner_txorigin8);", label="214_ require(tx.origin == owner_txorigin8);\n1475-expression_statement-215-215", method="bug_txorigin8(address owner_txorigin8)", type_label=expression_statement];
1499 [code="function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}", label="218_ function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n1499-function_definition-219-222", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=function_definition];
1515 [code="require (tx.origin == owner_txorigin13);", label="219_ require (tx.origin == owner_txorigin13);\n1515-expression_statement-220-220", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
1524 [code="receiver.transfer(amount);", label="220_ receiver.transfer(amount);\n1524-expression_statement-221-221", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", type_label=expression_statement];
1545 [code="function initialize(\n        address operator,\n        bytes memory multihash,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        if (multihash.length != 0) {\n            ProofHash._setProofHash(multihash);\n        }\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n        emit Initialized(operator, multihash, metadata);\n    }", label="223_ function initialize(\n        address operator,\n        bytes memory multihash,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        if (multihash.length != 0) {\n            ProofHash._setProofHash(multihash);\n        }\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n        emit Initialized(operator, multihash, metadata);\n    }\n1545-function_definition-224-240", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=function_definition];
1560 [code="initializeTemplate()", label="227_ initializeTemplate()\n1560-expression_statement-228-228", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=expression_statement];
1563 [code="if (multihash.length != 0) {\n            ProofHash._setProofHash(multihash);\n        }", label="228_ if_multihash.length != 0\n1563-if-229-231", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=if];
3371 [code="if (multihash.length != 0) {\n            ProofHash._setProofHash(multihash);\n        }", label="228_ end_if", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=end_if];
1570 [code="ProofHash._setProofHash(multihash);", label="229_ ProofHash._setProofHash(multihash);\n1570-expression_statement-230-230", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=expression_statement];
1577 [code="if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }", label="231_ if_operator != address(0)\n1577-if-232-235", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=if];
3385 [code="if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }", label="231_ end_if", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=end_if];
1584 [code="Operated._setOperator(operator);", label="232_ Operated._setOperator(operator);\n1584-expression_statement-233-233", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=expression_statement];
1591 [code="Operated._activateOperator();", label="233_ Operated._activateOperator();\n1591-expression_statement-234-234", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=expression_statement];
1596 [code="if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }", label="235_ if_metadata.length != 0\n1596-if-236-238", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=if];
3404 [code="if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }", label="235_ end_if", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=end_if];
1603 [code="EventMetadata._setMetadata(metadata);", label="236_ EventMetadata._setMetadata(metadata);\n1603-expression_statement-237-237", method="initialize(address operator,bytes memory multihash,bytes memory metadata)", type_label=expression_statement];
1618 [code="function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}", label="240_ function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n1618-function_definition-241-244", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=function_definition];
1634 [code="require(tx.origin == owner_txorigin39);", label="241_ require(tx.origin == owner_txorigin39);\n1634-expression_statement-242-242", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
1643 [code="to.call.value(amount);", label="242_ to.call.value(amount);\n1643-expression_statement-243-243", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", type_label=expression_statement];
1652 [code="function setMetadata(bytes memory metadata) public {\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n        EventMetadata._setMetadata(metadata);\n    }", label="244_ function setMetadata(bytes memory metadata) public {\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n        EventMetadata._setMetadata(metadata);\n    }\n1652-function_definition-245-248", method="setMetadata(bytes memory metadata)", type_label=function_definition];
1660 [code="require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");", label="245_ require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n1660-expression_statement-246-246", method="setMetadata(bytes memory metadata)", type_label=expression_statement];
1684 [code="EventMetadata._setMetadata(metadata);", label="246_ EventMetadata._setMetadata(metadata);\n1684-expression_statement-247-247", method="setMetadata(bytes memory metadata)", type_label=expression_statement];
1691 [code="function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }", label="248_ function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n1691-function_definition-249-251", method="bug_txorigin36(address owner_txorigin36)", type_label=function_definition];
1699 [code="require(tx.origin == owner_txorigin36);", label="249_ require(tx.origin == owner_txorigin36);\n1699-expression_statement-250-250", method="bug_txorigin36(address owner_txorigin36)", type_label=expression_statement];
1708 [code="function transferOperator(address operator) public {\n        require(Operated.isActiveOperator(msg.sender), \"only active operator\");\n        Operated._transferOperator(operator);\n    }", label="251_ function transferOperator(address operator) public {\n        require(Operated.isActiveOperator(msg.sender), \"only active operator\");\n        Operated._transferOperator(operator);\n    }\n1708-function_definition-252-255", method="transferOperator(address operator)", type_label=function_definition];
1716 [code="require(Operated.isActiveOperator(msg.sender), \"only active operator\");", label="252_ require(Operated.isActiveOperator(msg.sender), \"only active operator\");\n1716-expression_statement-253-253", method="transferOperator(address operator)", type_label=expression_statement];
1731 [code="Operated._transferOperator(operator);", label="253_ Operated._transferOperator(operator);\n1731-expression_statement-254-254", method="transferOperator(address operator)", type_label=expression_statement];
1738 [code="function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}", label="255_ function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n1738-function_definition-256-259", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=function_definition];
1754 [code="require(tx.origin == owner_txorigin35);", label="256_ require(tx.origin == owner_txorigin35);\n1754-expression_statement-257-257", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1763 [code="to.call.value(amount);", label="257_ to.call.value(amount);\n1763-expression_statement-258-258", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", type_label=expression_statement];
1772 [code="function renounceOperator() public {\n        require(Operated.isActiveOperator(msg.sender), \"only active operator\");\n        Operated._renounceOperator();\n    }", label="259_ function renounceOperator() public {\n        require(Operated.isActiveOperator(msg.sender), \"only active operator\");\n        Operated._renounceOperator();\n    }\n1772-function_definition-260-263", method="renounceOperator()", type_label=function_definition];
1776 [code="require(Operated.isActiveOperator(msg.sender), \"only active operator\");", label="260_ require(Operated.isActiveOperator(msg.sender), \"only active operator\");\n1776-expression_statement-261-261", method="renounceOperator()", type_label=expression_statement];
1791 [code="Operated._renounceOperator();", label="261_ Operated._renounceOperator();\n1791-expression_statement-262-262", method="renounceOperator()", type_label=expression_statement];
1796 [code="function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }", label="263_ function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n1796-function_definition-264-266", method="bug_txorigin40(address owner_txorigin40)", type_label=function_definition];
1804 [code="require(tx.origin == owner_txorigin40);", label="264_ require(tx.origin == owner_txorigin40);\n1804-expression_statement-265-265", method="bug_txorigin40(address owner_txorigin40)", type_label=expression_statement];
2;
1610;
13 -> 29  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
29 -> 38  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
63 -> 75  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
75 -> 84  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
98 -> 110  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
110 -> 119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
135 -> 143  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
157 -> 173  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
173 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
201 -> 209  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
209 -> 219  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
230 -> 246  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
246 -> 255  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
262 -> 270  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
270 -> 282  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
287 -> 303  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
303 -> 312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
319 -> 323  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
323 -> 332  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
332 -> 338  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
352 -> 368  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
368 -> 377  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
386 -> 390  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
390 -> 400  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
412 -> 428  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
428 -> 437  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
444 -> 448  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
448 -> 457  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
469 -> 485  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
485 -> 494  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
501 -> 511  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
515 -> 531  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
531 -> 540  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
549 -> 563  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
563 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
569 -> 581  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
581 -> 590  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
601 -> 611  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
611 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
613 -> 621  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
630 -> 644  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
644 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
653 -> 661  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
687 -> 701  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
701 -> 712  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
712 -> 722  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
722 -> 732  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
732 -> 737  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
737 -> 749  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
737 -> 2545  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2545 -> 761  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
746 -> 737  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
749 -> 746  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
761 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
763 -> 775  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
775 -> 784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
795 -> 809  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
809 -> 821  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
821 -> 831  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
831 -> 841  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
859 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
873 -> 881  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1072 -> 1088  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1088 -> 1097  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1112 -> 1128  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1128 -> 1137  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1156 -> 1164  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1181 -> 1197  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1197 -> 1206  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1215 -> 1225  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1234 -> 1250  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1250 -> 1259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1271 -> 1287  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1287 -> 1296  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1303 -> 1308  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1311 -> 1317  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1331 -> 1341  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1343 -> 1353  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1367 -> 1379  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1379 -> 1388  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1399 -> 1413  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1421 -> 1433  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1433 -> 1442  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1453 -> 1463  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1467 -> 1475  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1499 -> 1515  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1515 -> 1524  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1545 -> 1563  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1563 -> 1570  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1563 -> 3371  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3371 -> 1577  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1570 -> 3371  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1577 -> 1584  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1577 -> 3385  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3385 -> 1596  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1584 -> 1591  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1591 -> 3385  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1596 -> 1603  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1596 -> 3404  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
3404 -> 1610  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1603 -> 3404  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
1618 -> 1634  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1634 -> 1643  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1652 -> 1660  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1660 -> 1684  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1691 -> 1699  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1708 -> 1716  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1716 -> 1731  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1738 -> 1754  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1754 -> 1763  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1772 -> 1776  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1776 -> 1791  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1796 -> 1804  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
