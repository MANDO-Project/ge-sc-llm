digraph  {
13 [code="address creator;", label="2_ address creator;\n13-new_variable-3-3", method="", type_label=new_variable];
17 [code="mapping(address => uint256) balances;", label="3_ mapping(address => uint256) balances;\n17-new_variable-4-4", method="", type_label=new_variable];
25 [code="creator = msg.sender;", label="5_ creator = msg.sender;\n25-expression_statement-6-6", method="", type_label=expression_statement];
31 [code="function deposit() public payable {\n         assert(balances[msg.sender] + msg.value > balances[msg.sender]);\n         balances[msg.sender] += msg.value;\n     }", label="7_ function deposit() public payable {\n         assert(balances[msg.sender] + msg.value > balances[msg.sender]);\n         balances[msg.sender] += msg.value;\n     }\n31-function_definition-8-11", method="deposit()", type_label=function_definition];
36 [code="assert(balances[msg.sender] + msg.value > balances[msg.sender]);", label="8_ assert(balances[msg.sender] + msg.value > balances[msg.sender]);\n36-expression_statement-9-9", method="deposit()", type_label=expression_statement];
55 [code="balances[msg.sender] += msg.value;", label="9_ balances[msg.sender] += msg.value;\n55-expression_statement-10-10", method="deposit()", type_label=expression_statement];
65 [code="function withdraw(uint256 amount) public {\n         require(amount >= balances[msg.sender]);\n         msg.sender.transfer(amount);\n         balances[msg.sender] -= amount;\n     }", label="11_ function withdraw(uint256 amount) public {\n         require(amount >= balances[msg.sender]);\n         msg.sender.transfer(amount);\n         balances[msg.sender] -= amount;\n     }\n65-function_definition-12-16", method="withdraw(uint256 amount)", type_label=function_definition];
73 [code="require(amount >= balances[msg.sender]);", label="12_ require(amount >= balances[msg.sender]);\n73-expression_statement-13-13", method="withdraw(uint256 amount)", type_label=expression_statement];
84 [code="msg.sender.transfer(amount);", label="13_ msg.sender.transfer(amount);\n84-expression_statement-14-14", method="withdraw(uint256 amount)", type_label=expression_statement];
93 [code="balances[msg.sender] -= amount;", label="14_ balances[msg.sender] -= amount;\n93-expression_statement-15-15", method="withdraw(uint256 amount)", type_label=expression_statement];
101 [code="function migrateTo(address to) public {\n         require(creator == msg.sender);\n         to.transfer(this.balance);\n     }", label="16_ function migrateTo(address to) public {\n         require(creator == msg.sender);\n         to.transfer(this.balance);\n     }\n101-function_definition-17-20", method="migrateTo(address to)", type_label=function_definition];
109 [code="require(creator == msg.sender);", label="17_ require(creator == msg.sender);\n109-expression_statement-18-18", method="migrateTo(address to)", type_label=expression_statement];
118 [code="to.transfer(this.balance);", label="18_ to.transfer(this.balance);\n118-expression_statement-19-19", method="migrateTo(address to)", type_label=expression_statement];
13 -> 17  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
31 -> 36  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
36 -> 55  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
65 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
73 -> 84  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
84 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
101 -> 109  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
109 -> 118  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
