digraph "" {
	node [label="\N"];
	0	[contract_name=MultiOwnable,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20, 21, 22, 23]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	1	[contract_name=MultiOwnable,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
root = msg.sender

IRs:
root(address) := msg.sender(address)",
		node_expression="root = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="root(address) := msg.sender(address)",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	0 -> 1	[key=0,
		edge_type=next,
		label=Next];
	2	[contract_name=MultiOwnable,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owners[root] = root

IRs:
REF_0(address) -> owners[root]
REF_0 (->owners) := root(address)",
		node_expression="owners[root] = root",
		node_info_vulnerabilities=None,
		node_irs="REF_0(address) -> owners[root]
REF_0 (->owners) := root(address)",
		node_source_code_lines="[22]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	1 -> 2	[key=0,
		edge_type=next,
		label=Next];
	3	[contract_name=MultiOwnable,
		function_fullname="constructor()",
		label="multiowned_vulnerable.sol_MultiOwnable_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20, 21, 22, 23]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	3 -> 0	[key=0,
		edge_type=next,
		label=Next];
	4	[contract_name=MultiOwnable,
		function_fullname="newOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [38], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41, 42]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	5	[contract_name=MultiOwnable,
		function_fullname="newOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_owner != 0)

IRs:
TMP_0(bool) = _owner != 0
TMP_1(None) = SOLIDITY_CALL require(\
bool)(TMP_0)",
		node_expression="require(bool)(_owner != 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(bool) = _owner != 0
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	4 -> 5	[key=0,
		edge_type=next,
		label=Next];
	6	[contract_name=MultiOwnable,
		function_fullname="newOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owners[_owner] = msg.sender

IRs:
REF_1(address) -> owners[_owner]
REF_1 (->owners) := msg.sender(\
address)",
		node_expression="owners[_owner] = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="REF_1(address) -> owners[_owner]
REF_1 (->owners) := msg.sender(address)",
		node_source_code_lines="[40]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	5 -> 6	[key=0,
		edge_type=next,
		label=Next];
	7	[contract_name=MultiOwnable,
		function_fullname="newOwner(address)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[41]",
		node_type=RETURN,
		source_file="multiowned_vulnerable.sol"];
	6 -> 7	[key=0,
		edge_type=next,
		label=Next];
	8	[contract_name=MultiOwnable,
		function_fullname="newOwner(address)",
		label="multiowned_vulnerable.sol_MultiOwnable_newOwner(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [38], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41, 42]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	8 -> 4	[key=0,
		edge_type=next,
		label=Next];
	9	[contract_name=MultiOwnable,
		function_fullname="deleteOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[47, 48, 49, 50, 51]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	13	[contract_name=MultiOwnable,
		function_fullname="deleteOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, MultiOwnable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, MultiOwnable.onlyOwner()()",
		node_source_code_lines="[47]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	9 -> 13	[key=0,
		edge_type=next,
		label=Next];
	10	[contract_name=MultiOwnable,
		function_fullname="deleteOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(owners[_owner] == msg.sender || (owners[_owner] != 0 && msg.sender == root))

IRs:
\
REF_2(address) -> owners[_owner]
TMP_2(bool) = REF_2 == msg.sender
REF_3(address) -> owners[_owner]
TMP_3(bool) = REF_3 != 0
TMP_\
4(bool) = msg.sender == root
TMP_5(bool) = TMP_3 && TMP_4
TMP_6(bool) = TMP_2 || TMP_5
TMP_7(None) = SOLIDITY_CALL require(bool)(\
TMP_6)",
		node_expression="require(bool)(owners[_owner] == msg.sender || (owners[_owner] != 0 && msg.sender == root))",
		node_info_vulnerabilities=None,
		node_irs="REF_2(address) -> owners[_owner]
TMP_2(bool) = REF_2 == msg.sender
REF_3(address) -> owners[_owner]
TMP_3(bool) = REF_3 != 0
TMP_\
4(bool) = msg.sender == root
TMP_5(bool) = TMP_3 && TMP_4
TMP_6(bool) = TMP_2 || TMP_5
TMP_7(None) = SOLIDITY_CALL require(bool)(\
TMP_6)",
		node_source_code_lines="[48]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	11	[contract_name=MultiOwnable,
		function_fullname="deleteOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owners[_owner] = 0

IRs:
REF_4(address) -> owners[_owner]
REF_4 (->owners) := 0(uint256)",
		node_expression="owners[_owner] = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_4(address) -> owners[_owner]
REF_4 (->owners) := 0(uint256)",
		node_source_code_lines="[49]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	10 -> 11	[key=0,
		edge_type=next,
		label=Next];
	12	[contract_name=MultiOwnable,
		function_fullname="deleteOwner(address)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[50]",
		node_type=RETURN,
		source_file="multiowned_vulnerable.sol"];
	11 -> 12	[key=0,
		edge_type=next,
		label=Next];
	13 -> 10	[key=0,
		edge_type=next,
		label=Next];
	14	[contract_name=MultiOwnable,
		function_fullname="deleteOwner(address)",
		label="multiowned_vulnerable.sol_MultiOwnable_deleteOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[47, 48, 49, 50, 51]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	14 -> 9	[key=0,
		edge_type=next,
		label=Next];
	15	[contract_name=MultiOwnable,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	16	[contract_name=MultiOwnable,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(owners[msg.sender] != 0)

IRs:
REF_5(address) -> owners[msg.sender]
TMP_9(bool) = \
REF_5 != 0
TMP_10(None) = SOLIDITY_CALL require(bool)(TMP_9)",
		node_expression="require(bool)(owners[msg.sender] != 0)",
		node_info_vulnerabilities=None,
		node_irs="REF_5(address) -> owners[msg.sender]
TMP_9(bool) = REF_5 != 0
TMP_10(None) = SOLIDITY_CALL require(bool)(TMP_9)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	15 -> 16	[key=0,
		edge_type=next,
		label=Next];
	17	[contract_name=MultiOwnable,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[30]",
		node_type=_,
		source_file="multiowned_vulnerable.sol"];
	16 -> 17	[key=0,
		edge_type=next,
		label=Next];
	18	[contract_name=MultiOwnable,
		function_fullname="onlyOwner()",
		label="multiowned_vulnerable.sol_MultiOwnable_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	18 -> 15	[key=0,
		edge_type=next,
		label=Next];
	19	[contract_name=TestContract,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20, 21, 22, 23]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	20	[contract_name=TestContract,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
root = msg.sender

IRs:
root(address) := msg.sender(address)",
		node_expression="root = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="root(address) := msg.sender(address)",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	19 -> 20	[key=0,
		edge_type=next,
		label=Next];
	21	[contract_name=TestContract,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owners[root] = root

IRs:
REF_6(address) -> owners[root]
REF_6 (->owners) := root(address)",
		node_expression="owners[root] = root",
		node_info_vulnerabilities=None,
		node_irs="REF_6(address) -> owners[root]
REF_6 (->owners) := root(address)",
		node_source_code_lines="[22]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	20 -> 21	[key=0,
		edge_type=next,
		label=Next];
	22	[contract_name=TestContract,
		function_fullname="constructor()",
		label="multiowned_vulnerable.sol_TestContract_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20, 21, 22, 23]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	22 -> 19	[key=0,
		edge_type=next,
		label=Next];
	23	[contract_name=TestContract,
		function_fullname="newOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [38], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41, 42]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	24	[contract_name=TestContract,
		function_fullname="newOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(_owner != 0)

IRs:
TMP_11(bool) = _owner != 0
TMP_12(None) = SOLIDITY_CALL require(\
bool)(TMP_11)",
		node_expression="require(bool)(_owner != 0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_11(bool) = _owner != 0
TMP_12(None) = SOLIDITY_CALL require(bool)(TMP_11)",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	23 -> 24	[key=0,
		edge_type=next,
		label=Next];
	25	[contract_name=TestContract,
		function_fullname="newOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owners[_owner] = msg.sender

IRs:
REF_7(address) -> owners[_owner]
REF_7 (->owners) := msg.sender(\
address)",
		node_expression="owners[_owner] = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="REF_7(address) -> owners[_owner]
REF_7 (->owners) := msg.sender(address)",
		node_source_code_lines="[40]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	24 -> 25	[key=0,
		edge_type=next,
		label=Next];
	26	[contract_name=TestContract,
		function_fullname="newOwner(address)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[41]",
		node_type=RETURN,
		source_file="multiowned_vulnerable.sol"];
	25 -> 26	[key=0,
		edge_type=next,
		label=Next];
	27	[contract_name=TestContract,
		function_fullname="newOwner(address)",
		label="multiowned_vulnerable.sol_TestContract_newOwner(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [38], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[38, 39, 40, 41, 42]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	27 -> 23	[key=0,
		edge_type=next,
		label=Next];
	28	[contract_name=TestContract,
		function_fullname="deleteOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[47, 48, 49, 50, 51]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	32	[contract_name=TestContract,
		function_fullname="deleteOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, MultiOwnable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, MultiOwnable.onlyOwner()()",
		node_source_code_lines="[47]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	28 -> 32	[key=0,
		edge_type=next,
		label=Next];
	29	[contract_name=TestContract,
		function_fullname="deleteOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(owners[_owner] == msg.sender || (owners[_owner] != 0 && msg.sender == root))

IRs:
\
REF_8(address) -> owners[_owner]
TMP_13(bool) = REF_8 == msg.sender
REF_9(address) -> owners[_owner]
TMP_14(bool) = REF_9 != 0
TMP_\
15(bool) = msg.sender == root
TMP_16(bool) = TMP_14 && TMP_15
TMP_17(bool) = TMP_13 || TMP_16
TMP_18(None) = SOLIDITY_CALL require(\
bool)(TMP_17)",
		node_expression="require(bool)(owners[_owner] == msg.sender || (owners[_owner] != 0 && msg.sender == root))",
		node_info_vulnerabilities=None,
		node_irs="REF_8(address) -> owners[_owner]
TMP_13(bool) = REF_8 == msg.sender
REF_9(address) -> owners[_owner]
TMP_14(bool) = REF_9 != 0
TMP_\
15(bool) = msg.sender == root
TMP_16(bool) = TMP_14 && TMP_15
TMP_17(bool) = TMP_13 || TMP_16
TMP_18(None) = SOLIDITY_CALL require(\
bool)(TMP_17)",
		node_source_code_lines="[48]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	30	[contract_name=TestContract,
		function_fullname="deleteOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owners[_owner] = 0

IRs:
REF_10(address) -> owners[_owner]
REF_10 (->owners) := 0(uint256)",
		node_expression="owners[_owner] = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_10(address) -> owners[_owner]
REF_10 (->owners) := 0(uint256)",
		node_source_code_lines="[49]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	29 -> 30	[key=0,
		edge_type=next,
		label=Next];
	31	[contract_name=TestContract,
		function_fullname="deleteOwner(address)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[50]",
		node_type=RETURN,
		source_file="multiowned_vulnerable.sol"];
	30 -> 31	[key=0,
		edge_type=next,
		label=Next];
	32 -> 29	[key=0,
		edge_type=next,
		label=Next];
	33	[contract_name=TestContract,
		function_fullname="deleteOwner(address)",
		label="multiowned_vulnerable.sol_TestContract_deleteOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[47, 48, 49, 50, 51]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	33 -> 28	[key=0,
		edge_type=next,
		label=Next];
	34	[contract_name=TestContract,
		function_fullname="withdrawAll()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	36	[contract_name=TestContract,
		function_fullname="withdrawAll()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, MultiOwnable.onlyOwner()()",
		node_expression="onlyOwner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, MultiOwnable.onlyOwner()()",
		node_source_code_lines="[56]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	34 -> 36	[key=0,
		edge_type=next,
		label=Next];
	35	[contract_name=TestContract,
		function_fullname="withdrawAll()",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(this.balance)

IRs:
REF_12 -> BALANCE this
Transfer dest:msg.sender value:\
REF_12",
		node_expression="msg.sender.transfer(this.balance)",
		node_info_vulnerabilities=None,
		node_irs="REF_12 -> BALANCE this
Transfer dest:msg.sender value:REF_12",
		node_source_code_lines="[57]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	36 -> 35	[key=0,
		edge_type=next,
		label=Next];
	37	[contract_name=TestContract,
		function_fullname="withdrawAll()",
		label="multiowned_vulnerable.sol_TestContract_withdrawAll()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[56, 57, 58]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	37 -> 34	[key=0,
		edge_type=next,
		label=Next];
	38	[contract_name=TestContract,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[60, 61]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	39	[contract_name=TestContract,
		function_fullname="fallback()",
		label="multiowned_vulnerable.sol_TestContract_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[60, 61]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	39 -> 38	[key=0,
		edge_type=next,
		label=Next];
	40	[contract_name=TestContract,
		function_fullname="onlyOwner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31]",
		node_type=ENTRY_POINT,
		source_file="multiowned_vulnerable.sol"];
	41	[contract_name=TestContract,
		function_fullname="onlyOwner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(owners[msg.sender] != 0)

IRs:
REF_13(address) -> owners[msg.sender]
TMP_22(bool) = \
REF_13 != 0
TMP_23(None) = SOLIDITY_CALL require(bool)(TMP_22)",
		node_expression="require(bool)(owners[msg.sender] != 0)",
		node_info_vulnerabilities=None,
		node_irs="REF_13(address) -> owners[msg.sender]
TMP_22(bool) = REF_13 != 0
TMP_23(None) = SOLIDITY_CALL require(bool)(TMP_22)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="multiowned_vulnerable.sol"];
	40 -> 41	[key=0,
		edge_type=next,
		label=Next];
	42	[contract_name=TestContract,
		function_fullname="onlyOwner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[30]",
		node_type=_,
		source_file="multiowned_vulnerable.sol"];
	41 -> 42	[key=0,
		edge_type=next,
		label=Next];
	43	[contract_name=TestContract,
		function_fullname="onlyOwner()",
		label="multiowned_vulnerable.sol_TestContract_onlyOwner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31]",
		node_type=FUNCTION_NAME,
		source_file="multiowned_vulnerable.sol"];
	43 -> 40	[key=0,
		edge_type=next,
		label=Next];
	44	[contract_name=Phishable,
		function_fullname="constructor(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[12, 13, 14]",
		node_type=ENTRY_POINT,
		source_file="phishable.sol"];
	45	[contract_name=Phishable,
		function_fullname="constructor(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = _owner

IRs:
owner(address) := _owner(address)",
		node_expression="owner = _owner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := _owner(address)",
		node_source_code_lines="[13]",
		node_type=EXPRESSION,
		source_file="phishable.sol"];
	44 -> 45	[key=0,
		edge_type=next,
		label=Next];
	46	[contract_name=Phishable,
		function_fullname="constructor(address)",
		label="phishable.sol_Phishable_constructor(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[12, 13, 14]",
		node_type=FUNCTION_NAME,
		source_file="phishable.sol"];
	46 -> 44	[key=0,
		edge_type=next,
		label=Next];
	47	[contract_name=Phishable,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=ENTRY_POINT,
		source_file="phishable.sol"];
	48	[contract_name=Phishable,
		function_fullname="fallback()",
		label="phishable.sol_Phishable_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16]",
		node_type=FUNCTION_NAME,
		source_file="phishable.sol"];
	48 -> 47	[key=0,
		edge_type=next,
		label=Next];
	49	[contract_name=Phishable,
		function_fullname="withdrawAll(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[18, 19, 20, 21, 22]",
		node_type=ENTRY_POINT,
		source_file="phishable.sol"];
	50	[contract_name=Phishable,
		function_fullname="withdrawAll(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner)

IRs:
TMP_0(bool) = tx.origin == owner
TMP_1(None) = SOLIDITY_\
CALL require(bool)(TMP_0)",
		node_expression="require(bool)(tx.origin == owner)",
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs="TMP_0(bool) = tx.origin == owner
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="phishable.sol"];
	49 -> 50	[key=0,
		edge_type=next,
		label=Next];
	51	[contract_name=Phishable,
		function_fullname="withdrawAll(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
_recipient.transfer(this.balance)

IRs:
REF_1 -> BALANCE this
Transfer dest:_recipient value:\
REF_1",
		node_expression="_recipient.transfer(this.balance)",
		node_info_vulnerabilities=None,
		node_irs="REF_1 -> BALANCE this
Transfer dest:_recipient value:REF_1",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="phishable.sol"];
	50 -> 51	[key=0,
		edge_type=next,
		label=Next];
	52	[contract_name=Phishable,
		function_fullname="withdrawAll(address)",
		label="phishable.sol_Phishable_withdrawAll(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[18, 19, 20, 21, 22]",
		node_type=FUNCTION_NAME,
		source_file="phishable.sol"];
	52 -> 49	[key=0,
		edge_type=next,
		label=Next];
	53	[contract_name=Missing,
		function_fullname="IamMissing()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[22, 23, 24]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name1.sol"];
	54	[contract_name=Missing,
		function_fullname="IamMissing()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[23]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name1.sol"];
	53 -> 54	[key=0,
		edge_type=next,
		label=Next];
	55	[contract_name=Missing,
		function_fullname="IamMissing()",
		label="incorrect_constructor_name1.sol_Missing_IamMissing()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[20, 21, 22, 23, 24]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name1.sol"];
	55 -> 53	[key=0,
		edge_type=next,
		label=Next];
	56	[contract_name=Missing,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[26]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name1.sol"];
	57	[contract_name=Missing,
		function_fullname="fallback()",
		label="incorrect_constructor_name1.sol_Missing_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[26]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name1.sol"];
	57 -> 56	[key=0,
		edge_type=next,
		label=Next];
	58	[contract_name=Missing,
		function_fullname="withdraw()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[31, 32, 33]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name1.sol"];
	60	[contract_name=Missing,
		function_fullname="withdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, Missing.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Missing.onlyowner()()",
		node_source_code_lines="[30]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name1.sol"];
	58 -> 60	[key=0,
		edge_type=next,
		label=Next];
	59	[contract_name=Missing,
		function_fullname="withdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner.transfer(this.balance)

IRs:
REF_1 -> BALANCE this
Transfer dest:owner value:REF_1",
		node_expression="owner.transfer(this.balance)",
		node_info_vulnerabilities=None,
		node_irs="REF_1 -> BALANCE this
Transfer dest:owner value:REF_1",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name1.sol"];
	60 -> 59	[key=0,
		edge_type=next,
		label=Next];
	61	[contract_name=Missing,
		function_fullname="withdraw()",
		label="incorrect_constructor_name1.sol_Missing_withdraw()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31, 32, 33]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name1.sol"];
	61 -> 58	[key=0,
		edge_type=next,
		label=Next];
	62	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[12, 13, 14, 15]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name1.sol"];
	63	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_2(bool) = msg.sender == owner
TMP_3(None) = SOLIDITY_\
CALL require(bool)(TMP_2)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_2(bool) = msg.sender == owner
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)",
		node_source_code_lines="[13]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name1.sol"];
	62 -> 63	[key=0,
		edge_type=next,
		label=Next];
	64	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14]",
		node_type=_,
		source_file="incorrect_constructor_name1.sol"];
	63 -> 64	[key=0,
		edge_type=next,
		label=Next];
	65	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="incorrect_constructor_name1.sol_Missing_onlyowner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[12, 13, 14, 15]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name1.sol"];
	65 -> 62	[key=0,
		edge_type=next,
		label=Next];
	66	[contract_name=Wallet,
		function_fullname="initWallet()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [19, 20], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[19, 20, 21]",
		node_type=ENTRY_POINT,
		source_file="wallet_03_wrong_constructor.sol"];
	67	[contract_name=Wallet,
		function_fullname="initWallet()",
		label="Node Type: EXPRESSION

EXPRESSION:
creator = msg.sender

IRs:
creator(address) := msg.sender(address)",
		node_expression="creator = msg.sender",
		node_info_vulnerabilities="[{'lines': [19, 20], 'category': 'access_control'}]",
		node_irs="creator(address) := msg.sender(address)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="wallet_03_wrong_constructor.sol"];
	66 -> 67	[key=0,
		edge_type=next,
		label=Next];
	68	[contract_name=Wallet,
		function_fullname="initWallet()",
		label="wallet_03_wrong_constructor.sol_Wallet_initWallet()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [19, 20], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[19, 20, 21]",
		node_type=FUNCTION_NAME,
		source_file="wallet_03_wrong_constructor.sol"];
	68 -> 66	[key=0,
		edge_type=next,
		label=Next];
	69	[contract_name=Wallet,
		function_fullname="deposit()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=ENTRY_POINT,
		source_file="wallet_03_wrong_constructor.sol"];
	70	[contract_name=Wallet,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(balances[msg.sender] + msg.value > balances[msg.sender])

IRs:
REF_0(uint256) -> \
balances[msg.sender]
TMP_0(uint256) = REF_0 + msg.value
REF_1(uint256) -> balances[msg.sender]
TMP_1(bool) = TMP_0 > REF_1
TMP_2(\
None) = SOLIDITY_CALL assert(bool)(TMP_1)",
		node_expression="assert(bool)(balances[msg.sender] + msg.value > balances[msg.sender])",
		node_info_vulnerabilities=None,
		node_irs="REF_0(uint256) -> balances[msg.sender]
TMP_0(uint256) = REF_0 + msg.value
REF_1(uint256) -> balances[msg.sender]
TMP_1(bool) = TMP_\
0 > REF_1
TMP_2(None) = SOLIDITY_CALL assert(bool)(TMP_1)",
		node_source_code_lines="[24]",
		node_type=EXPRESSION,
		source_file="wallet_03_wrong_constructor.sol"];
	69 -> 70	[key=0,
		edge_type=next,
		label=Next];
	71	[contract_name=Wallet,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] += msg.value

IRs:
REF_2(uint256) -> balances[msg.sender]
REF_2(-> balances) = \
REF_2 + msg.value",
		node_expression="balances[msg.sender] += msg.value",
		node_info_vulnerabilities=None,
		node_irs="REF_2(uint256) -> balances[msg.sender]
REF_2(-> balances) = REF_2 + msg.value",
		node_source_code_lines="[25]",
		node_type=EXPRESSION,
		source_file="wallet_03_wrong_constructor.sol"];
	70 -> 71	[key=0,
		edge_type=next,
		label=Next];
	72	[contract_name=Wallet,
		function_fullname="deposit()",
		label="wallet_03_wrong_constructor.sol_Wallet_deposit()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=FUNCTION_NAME,
		source_file="wallet_03_wrong_constructor.sol"];
	72 -> 69	[key=0,
		edge_type=next,
		label=Next];
	73	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31, 32]",
		node_type=ENTRY_POINT,
		source_file="wallet_03_wrong_constructor.sol"];
	74	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(amount <= balances[msg.sender])

IRs:
REF_3(uint256) -> balances[msg.sender]
TMP_\
3(bool) = amount <= REF_3
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_expression="require(bool)(amount <= balances[msg.sender])",
		node_info_vulnerabilities=None,
		node_irs="REF_3(uint256) -> balances[msg.sender]
TMP_3(bool) = amount <= REF_3
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="wallet_03_wrong_constructor.sol"];
	73 -> 74	[key=0,
		edge_type=next,
		label=Next];
	75	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(amount)

IRs:
Transfer dest:msg.sender value:amount",
		node_expression="msg.sender.transfer(amount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:msg.sender value:amount",
		node_source_code_lines="[30]",
		node_type=EXPRESSION,
		source_file="wallet_03_wrong_constructor.sol"];
	74 -> 75	[key=0,
		edge_type=next,
		label=Next];
	76	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] -= amount

IRs:
REF_5(uint256) -> balances[msg.sender]
REF_5(-> balances) = \
REF_5 - amount",
		node_expression="balances[msg.sender] -= amount",
		node_info_vulnerabilities=None,
		node_irs="REF_5(uint256) -> balances[msg.sender]
REF_5(-> balances) = REF_5 - amount",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="wallet_03_wrong_constructor.sol"];
	75 -> 76	[key=0,
		edge_type=next,
		label=Next];
	77	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="wallet_03_wrong_constructor.sol_Wallet_withdraw(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31, 32]",
		node_type=FUNCTION_NAME,
		source_file="wallet_03_wrong_constructor.sol"];
	77 -> 73	[key=0,
		edge_type=next,
		label=Next];
	78	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[36, 37, 38, 39]",
		node_type=ENTRY_POINT,
		source_file="wallet_03_wrong_constructor.sol"];
	79	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(creator == msg.sender)

IRs:
TMP_6(bool) = creator == msg.sender
TMP_7(None) = \
SOLIDITY_CALL require(bool)(TMP_6)",
		node_expression="require(bool)(creator == msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(bool) = creator == msg.sender
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_6)",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="wallet_03_wrong_constructor.sol"];
	78 -> 79	[key=0,
		edge_type=next,
		label=Next];
	80	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.transfer(this.balance)

IRs:
REF_7 -> BALANCE this
Transfer dest:to value:REF_7",
		node_expression="to.transfer(this.balance)",
		node_info_vulnerabilities=None,
		node_irs="REF_7 -> BALANCE this
Transfer dest:to value:REF_7",
		node_source_code_lines="[38]",
		node_type=EXPRESSION,
		source_file="wallet_03_wrong_constructor.sol"];
	79 -> 80	[key=0,
		edge_type=next,
		label=Next];
	81	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="wallet_03_wrong_constructor.sol_Wallet_migrateTo(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[36, 37, 38, 39]",
		node_type=FUNCTION_NAME,
		source_file="wallet_03_wrong_constructor.sol"];
	81 -> 78	[key=0,
		edge_type=next,
		label=Next];
	82	[contract_name=Missing,
		function_fullname="missing()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[20, 21, 22]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name2.sol"];
	83	[contract_name=Missing,
		function_fullname="missing()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name2.sol"];
	82 -> 83	[key=0,
		edge_type=next,
		label=Next];
	84	[contract_name=Missing,
		function_fullname="missing()",
		label="incorrect_constructor_name2.sol_Missing_missing()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [18], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[18, 19, 20, 21, 22]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name2.sol"];
	84 -> 82	[key=0,
		edge_type=next,
		label=Next];
	85	[contract_name=Missing,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name2.sol"];
	86	[contract_name=Missing,
		function_fullname="fallback()",
		label="incorrect_constructor_name2.sol_Missing_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[24]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name2.sol"];
	86 -> 85	[key=0,
		edge_type=next,
		label=Next];
	87	[contract_name=Missing,
		function_fullname="withdraw()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[29, 30, 31]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name2.sol"];
	89	[contract_name=Missing,
		function_fullname="withdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, Missing.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Missing.onlyowner()()",
		node_source_code_lines="[28]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name2.sol"];
	87 -> 89	[key=0,
		edge_type=next,
		label=Next];
	88	[contract_name=Missing,
		function_fullname="withdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner.transfer(this.balance)

IRs:
REF_1 -> BALANCE this
Transfer dest:owner value:REF_1",
		node_expression="owner.transfer(this.balance)",
		node_info_vulnerabilities=None,
		node_irs="REF_1 -> BALANCE this
Transfer dest:owner value:REF_1",
		node_source_code_lines="[30]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name2.sol"];
	89 -> 88	[key=0,
		edge_type=next,
		label=Next];
	90	[contract_name=Missing,
		function_fullname="withdraw()",
		label="incorrect_constructor_name2.sol_Missing_withdraw()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[26, 27, 28, 29, 30, 31]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name2.sol"];
	90 -> 87	[key=0,
		edge_type=next,
		label=Next];
	91	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name2.sol"];
	92	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_2(bool) = msg.sender == owner
TMP_3(None) = SOLIDITY_\
CALL require(bool)(TMP_2)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_2(bool) = msg.sender == owner
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)",
		node_source_code_lines="[14]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name2.sol"];
	91 -> 92	[key=0,
		edge_type=next,
		label=Next];
	93	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[15]",
		node_type=_,
		source_file="incorrect_constructor_name2.sol"];
	92 -> 93	[key=0,
		edge_type=next,
		label=Next];
	94	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="incorrect_constructor_name2.sol_Missing_onlyowner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name2.sol"];
	94 -> 91	[key=0,
		edge_type=next,
		label=Next];
	95	[contract_name=Missing,
		function_fullname="Constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19, 20, 21]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name3.sol"];
	96	[contract_name=Missing,
		function_fullname="Constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name3.sol"];
	95 -> 96	[key=0,
		edge_type=next,
		label=Next];
	97	[contract_name=Missing,
		function_fullname="Constructor()",
		label="incorrect_constructor_name3.sol_Missing_Constructor()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [17], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20, 21]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name3.sol"];
	97 -> 95	[key=0,
		edge_type=next,
		label=Next];
	98	[contract_name=Missing,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name3.sol"];
	99	[contract_name=Missing,
		function_fullname="fallback()",
		label="incorrect_constructor_name3.sol_Missing_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name3.sol"];
	99 -> 98	[key=0,
		edge_type=next,
		label=Next];
	100	[contract_name=Missing,
		function_fullname="withdraw()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name3.sol"];
	102	[contract_name=Missing,
		function_fullname="withdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, Missing.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Missing.onlyowner()()",
		node_source_code_lines="[27]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name3.sol"];
	100 -> 102	[key=0,
		edge_type=next,
		label=Next];
	101	[contract_name=Missing,
		function_fullname="withdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner.transfer(this.balance)

IRs:
REF_1 -> BALANCE this
Transfer dest:owner value:REF_1",
		node_expression="owner.transfer(this.balance)",
		node_info_vulnerabilities=None,
		node_irs="REF_1 -> BALANCE this
Transfer dest:owner value:REF_1",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name3.sol"];
	102 -> 101	[key=0,
		edge_type=next,
		label=Next];
	103	[contract_name=Missing,
		function_fullname="withdraw()",
		label="incorrect_constructor_name3.sol_Missing_withdraw()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[25, 26, 27, 28, 29, 30]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name3.sol"];
	103 -> 100	[key=0,
		edge_type=next,
		label=Next];
	104	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[12, 13, 14, 15]",
		node_type=ENTRY_POINT,
		source_file="incorrect_constructor_name3.sol"];
	105	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_2(bool) = msg.sender == owner
TMP_3(None) = SOLIDITY_\
CALL require(bool)(TMP_2)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_2(bool) = msg.sender == owner
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)",
		node_source_code_lines="[13]",
		node_type=EXPRESSION,
		source_file="incorrect_constructor_name3.sol"];
	104 -> 105	[key=0,
		edge_type=next,
		label=Next];
	106	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14]",
		node_type=_,
		source_file="incorrect_constructor_name3.sol"];
	105 -> 106	[key=0,
		edge_type=next,
		label=Next];
	107	[contract_name=Missing,
		function_fullname="onlyowner()",
		label="incorrect_constructor_name3.sol_Missing_onlyowner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[12, 13, 14, 15]",
		node_type=FUNCTION_NAME,
		source_file="incorrect_constructor_name3.sol"];
	107 -> 104	[key=0,
		edge_type=next,
		label=Next];
	108	[contract_name=Proxy,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13, 14, 15]",
		node_type=ENTRY_POINT,
		source_file="proxy.sol"];
	109	[contract_name=Proxy,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[14]",
		node_type=EXPRESSION,
		source_file="proxy.sol"];
	108 -> 109	[key=0,
		edge_type=next,
		label=Next];
	110	[contract_name=Proxy,
		function_fullname="constructor()",
		label="proxy.sol_Proxy_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13, 14, 15]",
		node_type=FUNCTION_NAME,
		source_file="proxy.sol"];
	110 -> 108	[key=0,
		edge_type=next,
		label=Next];
	111	[contract_name=Proxy,
		function_fullname="forward(address,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [19], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20]",
		node_type=ENTRY_POINT,
		source_file="proxy.sol"];
	112	[contract_name=Proxy,
		function_fullname="forward(address,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(callee.delegatecall(_data))

IRs:
TMP_0(bool) = LOW_LEVEL_CALL, dest:callee, function:\
delegatecall, arguments:['_data']  
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_expression="require(bool)(callee.delegatecall(_data))",
		node_info_vulnerabilities="[{'lines': [19], 'category': 'access_control'}]",
		node_irs="TMP_0(bool) = LOW_LEVEL_CALL, dest:callee, function:delegatecall, arguments:['_data']  
TMP_1(None) = SOLIDITY_CALL require(bool)(\
TMP_0)",
		node_source_code_lines="[19]",
		node_type=EXPRESSION,
		source_file="proxy.sol"];
	111 -> 112	[key=0,
		edge_type=next,
		label=Next];
	113	[contract_name=Proxy,
		function_fullname="forward(address,bytes)",
		label="proxy.sol_Proxy_forward(address,bytes)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [19], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20]",
		node_type=FUNCTION_NAME,
		source_file="proxy.sol"];
	113 -> 111	[key=0,
		edge_type=next,
		label=Next];
	114	[contract_name=WalletAbi,
		function_fullname="revoke(bytes32)",
		label="parity_wallet_bug_2.sol_WalletAbi_revoke(bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	115	[contract_name=WalletAbi,
		function_fullname="changeOwner(address,address)",
		label="parity_wallet_bug_2.sol_WalletAbi_changeOwner(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[51]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	116	[contract_name=WalletAbi,
		function_fullname="addOwner(address)",
		label="parity_wallet_bug_2.sol_WalletAbi_addOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[53]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	117	[contract_name=WalletAbi,
		function_fullname="removeOwner(address)",
		label="parity_wallet_bug_2.sol_WalletAbi_removeOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[55]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	118	[contract_name=WalletAbi,
		function_fullname="changeRequirement(uint256)",
		label="parity_wallet_bug_2.sol_WalletAbi_changeRequirement(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[57]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	119	[contract_name=WalletAbi,
		function_fullname="isOwner(address)",
		label="parity_wallet_bug_2.sol_WalletAbi_isOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	120	[contract_name=WalletAbi,
		function_fullname="hasConfirmed(bytes32,address)",
		label="parity_wallet_bug_2.sol_WalletAbi_hasConfirmed(bytes32,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[61]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	121	[contract_name=WalletAbi,
		function_fullname="setDailyLimit(uint256)",
		label="parity_wallet_bug_2.sol_WalletAbi_setDailyLimit(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[64]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	122	[contract_name=WalletAbi,
		function_fullname="execute(address,uint256,bytes)",
		label="parity_wallet_bug_2.sol_WalletAbi_execute(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[66]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	123	[contract_name=WalletAbi,
		function_fullname="confirm(bytes32)",
		label="parity_wallet_bug_2.sol_WalletAbi_confirm(bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[67]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	124	[contract_name=WalletLibrary,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108, 109]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	125	[contract_name=WalletLibrary,
		function_fullname="fallback()",
		label="Node Type: IF

EXPRESSION:
msg.value > 0

IRs:
TMP_0(bool) = msg.value > 0
CONDITION TMP_0",
		node_expression="msg.value > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(bool) = msg.value > 0
CONDITION TMP_0",
		node_source_code_lines="[107]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	124 -> 125	[key=0,
		edge_type=next,
		label=Next];
	126	[contract_name=WalletLibrary,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
Deposit(msg.sender,msg.value)

IRs:
Emit Deposit(msg.sender.msg.value)",
		node_expression="Deposit(msg.sender,msg.value)",
		node_info_vulnerabilities=None,
		node_irs="Emit Deposit(msg.sender.msg.value)",
		node_source_code_lines="[108]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	125 -> 126	[key=0,
		edge_type=if_true,
		label=True];
	127	[contract_name=WalletLibrary,
		function_fullname="fallback()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[107, 108]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	125 -> 127	[key=0,
		edge_type=if_false,
		label=False];
	126 -> 127	[key=0,
		edge_type=next,
		label=Next];
	128	[contract_name=WalletLibrary,
		function_fullname="fallback()",
		label="parity_wallet_bug_2.sol_WalletLibrary_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[105, 106, 107, 108, 109]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	128 -> 124	[key=0,
		edge_type=next,
		label=Next];
	129	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	141	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
only_uninitialized()

IRs:
MODIFIER_CALL, WalletLibrary.only_uninitialized()()",
		node_expression="only_uninitialized()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, WalletLibrary.only_uninitialized()()",
		node_source_code_lines="[113]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	129 -> 141	[key=0,
		edge_type=next,
		label=Next];
	130	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_numOwners = _owners.length + 1

IRs:
REF_0 -> LENGTH _owners
TMP_2(uint256) = REF_0 + 1
m_numOwners(\
uint256) := TMP_2(uint256)",
		node_expression="m_numOwners = _owners.length + 1",
		node_info_vulnerabilities=None,
		node_irs="REF_0 -> LENGTH _owners
TMP_2(uint256) = REF_0 + 1
m_numOwners(uint256) := TMP_2(uint256)",
		node_source_code_lines="[114]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	131	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_owners[1] = uint256(msg.sender)

IRs:
REF_1(uint256) -> m_owners[1]
TMP_3 = CONVERT msg.sender \
to uint256
REF_1 (->m_owners) := TMP_3(uint256)",
		node_expression="m_owners[1] = uint256(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="REF_1(uint256) -> m_owners[1]
TMP_3 = CONVERT msg.sender to uint256
REF_1 (->m_owners) := TMP_3(uint256)",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	130 -> 131	[key=0,
		edge_type=next,
		label=Next];
	132	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_ownerIndex[uint256(msg.sender)] = 1

IRs:
TMP_4 = CONVERT msg.sender to uint256
REF_2(uint256) \
-> m_ownerIndex[TMP_4]
REF_2 (->m_ownerIndex) := 1(uint256)",
		node_expression="m_ownerIndex[uint256(msg.sender)] = 1",
		node_info_vulnerabilities=None,
		node_irs="TMP_4 = CONVERT msg.sender to uint256
REF_2(uint256) -> m_ownerIndex[TMP_4]
REF_2 (->m_ownerIndex) := 1(uint256)",
		node_source_code_lines="[116]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	131 -> 132	[key=0,
		edge_type=next,
		label=Next];
	135	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 0(uint256)",
		node_source_code_lines="[117]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	132 -> 135	[key=0,
		edge_type=next,
		label=Next];
	133	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[117, 118, 119, 120, 121]",
		node_type=BEGIN_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	136	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
i < _owners.length

IRs:
REF_3 -> LENGTH _owners
TMP_5(bool) = i < REF_3
CONDITION TMP_5",
		node_expression="i < _owners.length",
		node_info_vulnerabilities=None,
		node_irs="REF_3 -> LENGTH _owners
TMP_5(bool) = i < REF_3
CONDITION TMP_5",
		node_source_code_lines="[117]",
		node_type=IF_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	133 -> 136	[key=0,
		edge_type=next,
		label=Next];
	134	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[117, 118, 119, 120, 121]",
		node_type=END_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	140	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_required = _required

IRs:
m_required(uint256) := _required(uint256)",
		node_expression="m_required = _required",
		node_info_vulnerabilities=None,
		node_irs="m_required(uint256) := _required(uint256)",
		node_source_code_lines="[122]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	134 -> 140	[key=0,
		edge_type=next,
		label=Next];
	135 -> 133	[key=0,
		edge_type=next,
		label=Next];
	136 -> 134	[key=0,
		edge_type=if_false,
		label=False];
	137	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_owners[2 + i] = uint256(_owners[i])

IRs:
TMP_6(uint256) = 2 + i
REF_4(uint256) -> m_owners[\
TMP_6]
REF_5(address) -> _owners[i]
TMP_7 = CONVERT REF_5 to uint256
REF_4 (->m_owners) := TMP_7(uint256)",
		node_expression="m_owners[2 + i] = uint256(_owners[i])",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(uint256) = 2 + i
REF_4(uint256) -> m_owners[TMP_6]
REF_5(address) -> _owners[i]
TMP_7 = CONVERT REF_5 to uint256
REF_4 (->\
m_owners) := TMP_7(uint256)",
		node_source_code_lines="[119]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	136 -> 137	[key=0,
		edge_type=if_true,
		label=True];
	138	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_ownerIndex[uint256(_owners[i])] = 2 + i

IRs:
REF_6(address) -> _owners[i]
TMP_8 = CONVERT \
REF_6 to uint256
REF_7(uint256) -> m_ownerIndex[TMP_8]
TMP_9(uint256) = 2 + i
REF_7 (->m_ownerIndex) := TMP_9(uint256)",
		node_expression="m_ownerIndex[uint256(_owners[i])] = 2 + i",
		node_info_vulnerabilities=None,
		node_irs="REF_6(address) -> _owners[i]
TMP_8 = CONVERT REF_6 to uint256
REF_7(uint256) -> m_ownerIndex[TMP_8]
TMP_9(uint256) = 2 + i
REF_7 (\
->m_ownerIndex) := TMP_9(uint256)",
		node_source_code_lines="[120]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	137 -> 138	[key=0,
		edge_type=next,
		label=Next];
	139	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1",
		node_expression="++ i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i + 1",
		node_source_code_lines="[117]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	138 -> 139	[key=0,
		edge_type=next,
		label=Next];
	139 -> 136	[key=0,
		edge_type=next,
		label=Next];
	141 -> 130	[key=0,
		edge_type=next,
		label=Next];
	142	[contract_name=WalletLibrary,
		function_fullname="initMultiowned(address[],uint256)",
		label="parity_wallet_bug_2.sol_WalletLibrary_initMultiowned(address[],uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	142 -> 129	[key=0,
		edge_type=next,
		label=Next];
	143	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	144	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
ownerIndex = m_ownerIndex[uint256(msg.sender)]

IRs:
TMP_11 = CONVERT msg.sender to uint256
\
REF_8(uint256) -> m_ownerIndex[TMP_11]
ownerIndex(uint256) := REF_8(uint256)",
		node_expression="ownerIndex = m_ownerIndex[uint256(msg.sender)]",
		node_info_vulnerabilities=None,
		node_irs="TMP_11 = CONVERT msg.sender to uint256
REF_8(uint256) -> m_ownerIndex[TMP_11]
ownerIndex(uint256) := REF_8(uint256)",
		node_source_code_lines="[127]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	143 -> 144	[key=0,
		edge_type=next,
		label=Next];
	145	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: IF

EXPRESSION:
ownerIndex == 0

IRs:
TMP_12(bool) = ownerIndex == 0
CONDITION TMP_12",
		node_expression="ownerIndex == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(bool) = ownerIndex == 0
CONDITION TMP_12",
		node_source_code_lines="[129]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	144 -> 145	[key=0,
		edge_type=next,
		label=Next];
	146	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[129]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	145 -> 146	[key=0,
		edge_type=if_true,
		label=True];
	147	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[129]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	145 -> 147	[key=0,
		edge_type=if_false,
		label=False];
	148	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
ownerIndexBit = 2 ** ownerIndex

IRs:
TMP_13(uint256) = 2 ** ownerIndex
ownerIndexBit(uint256) := \
TMP_13(uint256)",
		node_expression="ownerIndexBit = 2 ** ownerIndex",
		node_info_vulnerabilities=None,
		node_irs="TMP_13(uint256) = 2 ** ownerIndex
ownerIndexBit(uint256) := TMP_13(uint256)",
		node_source_code_lines="[130]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	147 -> 148	[key=0,
		edge_type=next,
		label=Next];
	149	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
pending = m_pending[_operation]

IRs:
REF_9(WalletLibrary.PendingState) -> m_pending[_operation]
\
pending(WalletLibrary.PendingState) := REF_9(WalletLibrary.PendingState)",
		node_expression="pending = m_pending[_operation]",
		node_info_vulnerabilities=None,
		node_irs="REF_9(WalletLibrary.PendingState) -> m_pending[_operation]
pending(WalletLibrary.PendingState) := REF_9(WalletLibrary.PendingState)",
		node_source_code_lines="[131]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	148 -> 149	[key=0,
		edge_type=next,
		label=Next];
	150	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: IF

EXPRESSION:
pending.ownersDone & ownerIndexBit > 0

IRs:
REF_10(uint256) -> pending.ownersDone
TMP_14(uint256) = \
REF_10 & ownerIndexBit
TMP_15(bool) = TMP_14 > 0
CONDITION TMP_15",
		node_expression="pending.ownersDone & ownerIndexBit > 0",
		node_info_vulnerabilities=None,
		node_irs="REF_10(uint256) -> pending.ownersDone
TMP_14(uint256) = REF_10 & ownerIndexBit
TMP_15(bool) = TMP_14 > 0
CONDITION TMP_15",
		node_source_code_lines="[132]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	149 -> 150	[key=0,
		edge_type=next,
		label=Next];
	151	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
pending.yetNeeded ++

IRs:
REF_11(uint256) -> pending.yetNeeded
TMP_16(uint256) := REF_11(uint256)
\
REF_11(-> pending) = REF_11 + 1",
		node_expression="pending.yetNeeded ++",
		node_info_vulnerabilities=None,
		node_irs="REF_11(uint256) -> pending.yetNeeded
TMP_16(uint256) := REF_11(uint256)
REF_11(-> pending) = REF_11 + 1",
		node_source_code_lines="[133]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	150 -> 151	[key=0,
		edge_type=if_true,
		label=True];
	154	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[132, 133, 134, 135, 136]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	150 -> 154	[key=0,
		edge_type=if_false,
		label=False];
	152	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
pending.ownersDone -= ownerIndexBit

IRs:
REF_12(uint256) -> pending.ownersDone
REF_12(-> pending) = \
REF_12 - ownerIndexBit",
		node_expression="pending.ownersDone -= ownerIndexBit",
		node_info_vulnerabilities=None,
		node_irs="REF_12(uint256) -> pending.ownersDone
REF_12(-> pending) = REF_12 - ownerIndexBit",
		node_source_code_lines="[134]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	151 -> 152	[key=0,
		edge_type=next,
		label=Next];
	153	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Revoke(msg.sender,_operation)

IRs:
Emit Revoke(msg.sender._operation)",
		node_expression="Revoke(msg.sender,_operation)",
		node_info_vulnerabilities=None,
		node_irs="Emit Revoke(msg.sender._operation)",
		node_source_code_lines="[135]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	152 -> 153	[key=0,
		edge_type=next,
		label=Next];
	153 -> 154	[key=0,
		edge_type=next,
		label=Next];
	155	[contract_name=WalletLibrary,
		function_fullname="revoke(bytes32)",
		label="parity_wallet_bug_2.sol_WalletLibrary_revoke(bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	155 -> 143	[key=0,
		edge_type=next,
		label=Next];
	156	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	169	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlymanyowners(sha3()(msg.data))

IRs:
TMP_26(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_\
CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_26)",
		node_expression="onlymanyowners(sha3()(msg.data))",
		node_info_vulnerabilities=None,
		node_irs="TMP_26(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_26)",
		node_source_code_lines="[140]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	156 -> 169	[key=0,
		edge_type=next,
		label=Next];
	157	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: IF

EXPRESSION:
isOwner(_to)

IRs:
TMP_18(bool) = INTERNAL_CALL, WalletLibrary.isOwner(address)(_to)
CONDITION TMP_18",
		node_expression="isOwner(_to)",
		node_info_vulnerabilities=None,
		node_irs="TMP_18(bool) = INTERNAL_CALL, WalletLibrary.isOwner(address)(_to)
CONDITION TMP_18",
		node_source_code_lines="[141]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	158	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	157 -> 158	[key=0,
		edge_type=if_true,
		label=True];
	159	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[141]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	157 -> 159	[key=0,
		edge_type=if_false,
		label=False];
	160	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
ownerIndex = m_ownerIndex[uint256(_from)]

IRs:
TMP_19 = CONVERT _from to uint256
REF_13(uint256) \
-> m_ownerIndex[TMP_19]
ownerIndex(uint256) := REF_13(uint256)",
		node_expression="ownerIndex = m_ownerIndex[uint256(_from)]",
		node_info_vulnerabilities=None,
		node_irs="TMP_19 = CONVERT _from to uint256
REF_13(uint256) -> m_ownerIndex[TMP_19]
ownerIndex(uint256) := REF_13(uint256)",
		node_source_code_lines="[142]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	159 -> 160	[key=0,
		edge_type=next,
		label=Next];
	161	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: IF

EXPRESSION:
ownerIndex == 0

IRs:
TMP_20(bool) = ownerIndex == 0
CONDITION TMP_20",
		node_expression="ownerIndex == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_20(bool) = ownerIndex == 0
CONDITION TMP_20",
		node_source_code_lines="[143]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	160 -> 161	[key=0,
		edge_type=next,
		label=Next];
	162	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[143]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	161 -> 162	[key=0,
		edge_type=if_true,
		label=True];
	163	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[143]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	161 -> 163	[key=0,
		edge_type=if_false,
		label=False];
	164	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
clearPending()

IRs:
INTERNAL_CALL, WalletLibrary.clearPending()()",
		node_expression="clearPending()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, WalletLibrary.clearPending()()",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	163 -> 164	[key=0,
		edge_type=next,
		label=Next];
	165	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_owners[ownerIndex] = uint256(_to)

IRs:
REF_14(uint256) -> m_owners[ownerIndex]
TMP_22 = CONVERT _\
to to uint256
REF_14 (->m_owners) := TMP_22(uint256)",
		node_expression="m_owners[ownerIndex] = uint256(_to)",
		node_info_vulnerabilities=None,
		node_irs="REF_14(uint256) -> m_owners[ownerIndex]
TMP_22 = CONVERT _to to uint256
REF_14 (->m_owners) := TMP_22(uint256)",
		node_source_code_lines="[146]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	164 -> 165	[key=0,
		edge_type=next,
		label=Next];
	166	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_ownerIndex[uint256(_from)] = 0

IRs:
TMP_23 = CONVERT _from to uint256
REF_15(uint256) -> m_\
ownerIndex[TMP_23]
REF_15 (->m_ownerIndex) := 0(uint256)",
		node_expression="m_ownerIndex[uint256(_from)] = 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_23 = CONVERT _from to uint256
REF_15(uint256) -> m_ownerIndex[TMP_23]
REF_15 (->m_ownerIndex) := 0(uint256)",
		node_source_code_lines="[147]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	165 -> 166	[key=0,
		edge_type=next,
		label=Next];
	167	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_ownerIndex[uint256(_to)] = ownerIndex

IRs:
TMP_24 = CONVERT _to to uint256
REF_16(uint256) \
-> m_ownerIndex[TMP_24]
REF_16 (->m_ownerIndex) := ownerIndex(uint256)",
		node_expression="m_ownerIndex[uint256(_to)] = ownerIndex",
		node_info_vulnerabilities=None,
		node_irs="TMP_24 = CONVERT _to to uint256
REF_16(uint256) -> m_ownerIndex[TMP_24]
REF_16 (->m_ownerIndex) := ownerIndex(uint256)",
		node_source_code_lines="[148]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	166 -> 167	[key=0,
		edge_type=next,
		label=Next];
	168	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnerChanged(_from,_to)

IRs:
Emit OwnerChanged(_from._to)",
		node_expression="OwnerChanged(_from,_to)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnerChanged(_from._to)",
		node_source_code_lines="[149]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	167 -> 168	[key=0,
		edge_type=next,
		label=Next];
	169 -> 157	[key=0,
		edge_type=next,
		label=Next];
	170	[contract_name=WalletLibrary,
		function_fullname="changeOwner(address,address)",
		label="parity_wallet_bug_2.sol_WalletLibrary_changeOwner(address,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	170 -> 156	[key=0,
		edge_type=next,
		label=Next];
	171	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	186	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlymanyowners(sha3()(msg.data))

IRs:
TMP_37(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_\
CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_37)",
		node_expression="onlymanyowners(sha3()(msg.data))",
		node_info_vulnerabilities=None,
		node_irs="TMP_37(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_37)",
		node_source_code_lines="[152]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	171 -> 186	[key=0,
		edge_type=next,
		label=Next];
	172	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: IF

EXPRESSION:
isOwner(_owner)

IRs:
TMP_28(bool) = INTERNAL_CALL, WalletLibrary.isOwner(address)(_owner)
CONDITION \
TMP_28",
		node_expression="isOwner(_owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_28(bool) = INTERNAL_CALL, WalletLibrary.isOwner(address)(_owner)
CONDITION TMP_28",
		node_source_code_lines="[153]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	173	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[153]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	172 -> 173	[key=0,
		edge_type=if_true,
		label=True];
	174	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[153]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	172 -> 174	[key=0,
		edge_type=if_false,
		label=False];
	175	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
clearPending()

IRs:
INTERNAL_CALL, WalletLibrary.clearPending()()",
		node_expression="clearPending()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, WalletLibrary.clearPending()()",
		node_source_code_lines="[155]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	174 -> 175	[key=0,
		edge_type=next,
		label=Next];
	176	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: IF

EXPRESSION:
m_numOwners >= c_maxOwners

IRs:
TMP_30(bool) = m_numOwners >= c_maxOwners
CONDITION TMP_30",
		node_expression="m_numOwners >= c_maxOwners",
		node_info_vulnerabilities=None,
		node_irs="TMP_30(bool) = m_numOwners >= c_maxOwners
CONDITION TMP_30",
		node_source_code_lines="[156]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	175 -> 176	[key=0,
		edge_type=next,
		label=Next];
	177	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
reorganizeOwners()

IRs:
INTERNAL_CALL, WalletLibrary.reorganizeOwners()()",
		node_expression="reorganizeOwners()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, WalletLibrary.reorganizeOwners()()",
		node_source_code_lines="[157]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	176 -> 177	[key=0,
		edge_type=if_true,
		label=True];
	178	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[156, 157]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	176 -> 178	[key=0,
		edge_type=if_false,
		label=False];
	177 -> 178	[key=0,
		edge_type=next,
		label=Next];
	179	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: IF

EXPRESSION:
m_numOwners >= c_maxOwners

IRs:
TMP_32(bool) = m_numOwners >= c_maxOwners
CONDITION TMP_32",
		node_expression="m_numOwners >= c_maxOwners",
		node_info_vulnerabilities=None,
		node_irs="TMP_32(bool) = m_numOwners >= c_maxOwners
CONDITION TMP_32",
		node_source_code_lines="[158]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	178 -> 179	[key=0,
		edge_type=next,
		label=Next];
	180	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[159]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	179 -> 180	[key=0,
		edge_type=if_true,
		label=True];
	181	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[158, 159]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	179 -> 181	[key=0,
		edge_type=if_false,
		label=False];
	182	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_numOwners ++

IRs:
TMP_33(uint256) := m_numOwners(uint256)
m_numOwners(uint256) = m_numOwners + \
1",
		node_expression="m_numOwners ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_33(uint256) := m_numOwners(uint256)
m_numOwners(uint256) = m_numOwners + 1",
		node_source_code_lines="[160]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	181 -> 182	[key=0,
		edge_type=next,
		label=Next];
	183	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_owners[m_numOwners] = uint256(_owner)

IRs:
REF_17(uint256) -> m_owners[m_numOwners]
TMP_34 = \
CONVERT _owner to uint256
REF_17 (->m_owners) := TMP_34(uint256)",
		node_expression="m_owners[m_numOwners] = uint256(_owner)",
		node_info_vulnerabilities=None,
		node_irs="REF_17(uint256) -> m_owners[m_numOwners]
TMP_34 = CONVERT _owner to uint256
REF_17 (->m_owners) := TMP_34(uint256)",
		node_source_code_lines="[161]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	182 -> 183	[key=0,
		edge_type=next,
		label=Next];
	184	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_ownerIndex[uint256(_owner)] = m_numOwners

IRs:
TMP_35 = CONVERT _owner to uint256
REF_18(uint256) \
-> m_ownerIndex[TMP_35]
REF_18 (->m_ownerIndex) := m_numOwners(uint256)",
		node_expression="m_ownerIndex[uint256(_owner)] = m_numOwners",
		node_info_vulnerabilities=None,
		node_irs="TMP_35 = CONVERT _owner to uint256
REF_18(uint256) -> m_ownerIndex[TMP_35]
REF_18 (->m_ownerIndex) := m_numOwners(uint256)",
		node_source_code_lines="[162]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	183 -> 184	[key=0,
		edge_type=next,
		label=Next];
	185	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnerAdded(_owner)

IRs:
Emit OwnerAdded(_owner)",
		node_expression="OwnerAdded(_owner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnerAdded(_owner)",
		node_source_code_lines="[163]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	184 -> 185	[key=0,
		edge_type=next,
		label=Next];
	186 -> 172	[key=0,
		edge_type=next,
		label=Next];
	187	[contract_name=WalletLibrary,
		function_fullname="addOwner(address)",
		label="parity_wallet_bug_2.sol_WalletLibrary_addOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	187 -> 171	[key=0,
		edge_type=next,
		label=Next];
	188	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	201	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlymanyowners(sha3()(msg.data))

IRs:
TMP_47(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_\
CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_47)",
		node_expression="onlymanyowners(sha3()(msg.data))",
		node_info_vulnerabilities=None,
		node_irs="TMP_47(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_47)",
		node_source_code_lines="[166]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	188 -> 201	[key=0,
		edge_type=next,
		label=Next];
	189	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
ownerIndex = m_ownerIndex[uint256(_owner)]

IRs:
TMP_39 = CONVERT _owner to uint256
REF_19(\
uint256) -> m_ownerIndex[TMP_39]
ownerIndex(uint256) := REF_19(uint256)",
		node_expression="ownerIndex = m_ownerIndex[uint256(_owner)]",
		node_info_vulnerabilities=None,
		node_irs="TMP_39 = CONVERT _owner to uint256
REF_19(uint256) -> m_ownerIndex[TMP_39]
ownerIndex(uint256) := REF_19(uint256)",
		node_source_code_lines="[167]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	190	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: IF

EXPRESSION:
ownerIndex == 0

IRs:
TMP_40(bool) = ownerIndex == 0
CONDITION TMP_40",
		node_expression="ownerIndex == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_40(bool) = ownerIndex == 0
CONDITION TMP_40",
		node_source_code_lines="[168]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	189 -> 190	[key=0,
		edge_type=next,
		label=Next];
	191	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	190 -> 191	[key=0,
		edge_type=if_true,
		label=True];
	192	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[168]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	190 -> 192	[key=0,
		edge_type=if_false,
		label=False];
	193	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: IF

EXPRESSION:
m_required > m_numOwners - 1

IRs:
TMP_41(uint256) = m_numOwners - 1
TMP_42(bool) = m_required > TMP_\
41
CONDITION TMP_42",
		node_expression="m_required > m_numOwners - 1",
		node_info_vulnerabilities=None,
		node_irs="TMP_41(uint256) = m_numOwners - 1
TMP_42(bool) = m_required > TMP_41
CONDITION TMP_42",
		node_source_code_lines="[169]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	192 -> 193	[key=0,
		edge_type=next,
		label=Next];
	194	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[169]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	193 -> 194	[key=0,
		edge_type=if_true,
		label=True];
	195	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[169]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	193 -> 195	[key=0,
		edge_type=if_false,
		label=False];
	196	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_owners[ownerIndex] = 0

IRs:
REF_20(uint256) -> m_owners[ownerIndex]
REF_20 (->m_owners) := \
0(uint256)",
		node_expression="m_owners[ownerIndex] = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_20(uint256) -> m_owners[ownerIndex]
REF_20 (->m_owners) := 0(uint256)",
		node_source_code_lines="[171]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	195 -> 196	[key=0,
		edge_type=next,
		label=Next];
	197	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_ownerIndex[uint256(_owner)] = 0

IRs:
TMP_43 = CONVERT _owner to uint256
REF_21(uint256) -> \
m_ownerIndex[TMP_43]
REF_21 (->m_ownerIndex) := 0(uint256)",
		node_expression="m_ownerIndex[uint256(_owner)] = 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_43 = CONVERT _owner to uint256
REF_21(uint256) -> m_ownerIndex[TMP_43]
REF_21 (->m_ownerIndex) := 0(uint256)",
		node_source_code_lines="[172]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	196 -> 197	[key=0,
		edge_type=next,
		label=Next];
	198	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
clearPending()

IRs:
INTERNAL_CALL, WalletLibrary.clearPending()()",
		node_expression="clearPending()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, WalletLibrary.clearPending()()",
		node_source_code_lines="[173]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	197 -> 198	[key=0,
		edge_type=next,
		label=Next];
	199	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
reorganizeOwners()

IRs:
INTERNAL_CALL, WalletLibrary.reorganizeOwners()()",
		node_expression="reorganizeOwners()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, WalletLibrary.reorganizeOwners()()",
		node_source_code_lines="[174]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	198 -> 199	[key=0,
		edge_type=next,
		label=Next];
	200	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
OwnerRemoved(_owner)

IRs:
Emit OwnerRemoved(_owner)",
		node_expression="OwnerRemoved(_owner)",
		node_info_vulnerabilities=None,
		node_irs="Emit OwnerRemoved(_owner)",
		node_source_code_lines="[175]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	199 -> 200	[key=0,
		edge_type=next,
		label=Next];
	201 -> 189	[key=0,
		edge_type=next,
		label=Next];
	202	[contract_name=WalletLibrary,
		function_fullname="removeOwner(address)",
		label="parity_wallet_bug_2.sol_WalletLibrary_removeOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	202 -> 188	[key=0,
		edge_type=next,
		label=Next];
	203	[contract_name=WalletLibrary,
		function_fullname="changeRequirement(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	210	[contract_name=WalletLibrary,
		function_fullname="changeRequirement(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlymanyowners(sha3()(msg.data))

IRs:
TMP_52(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_\
CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_52)",
		node_expression="onlymanyowners(sha3()(msg.data))",
		node_info_vulnerabilities=None,
		node_irs="TMP_52(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_52)",
		node_source_code_lines="[178]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	203 -> 210	[key=0,
		edge_type=next,
		label=Next];
	204	[contract_name=WalletLibrary,
		function_fullname="changeRequirement(uint256)",
		label="Node Type: IF

EXPRESSION:
_newRequired > m_numOwners

IRs:
TMP_49(bool) = _newRequired > m_numOwners
CONDITION TMP_49",
		node_expression="_newRequired > m_numOwners",
		node_info_vulnerabilities=None,
		node_irs="TMP_49(bool) = _newRequired > m_numOwners
CONDITION TMP_49",
		node_source_code_lines="[179]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	205	[contract_name=WalletLibrary,
		function_fullname="changeRequirement(uint256)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[179]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	204 -> 205	[key=0,
		edge_type=if_true,
		label=True];
	206	[contract_name=WalletLibrary,
		function_fullname="changeRequirement(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[179]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	204 -> 206	[key=0,
		edge_type=if_false,
		label=False];
	207	[contract_name=WalletLibrary,
		function_fullname="changeRequirement(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_required = _newRequired

IRs:
m_required(uint256) := _newRequired(uint256)",
		node_expression="m_required = _newRequired",
		node_info_vulnerabilities=None,
		node_irs="m_required(uint256) := _newRequired(uint256)",
		node_source_code_lines="[180]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	206 -> 207	[key=0,
		edge_type=next,
		label=Next];
	208	[contract_name=WalletLibrary,
		function_fullname="changeRequirement(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
clearPending()

IRs:
INTERNAL_CALL, WalletLibrary.clearPending()()",
		node_expression="clearPending()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, WalletLibrary.clearPending()()",
		node_source_code_lines="[181]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	207 -> 208	[key=0,
		edge_type=next,
		label=Next];
	209	[contract_name=WalletLibrary,
		function_fullname="changeRequirement(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
RequirementChanged(_newRequired)

IRs:
Emit RequirementChanged(_newRequired)",
		node_expression="RequirementChanged(_newRequired)",
		node_info_vulnerabilities=None,
		node_irs="Emit RequirementChanged(_newRequired)",
		node_source_code_lines="[182]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	208 -> 209	[key=0,
		edge_type=next,
		label=Next];
	210 -> 204	[key=0,
		edge_type=next,
		label=Next];
	211	[contract_name=WalletLibrary,
		function_fullname="changeRequirement(uint256)",
		label="parity_wallet_bug_2.sol_WalletLibrary_changeRequirement(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[178, 179, 180, 181, 182, 183]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	211 -> 203	[key=0,
		edge_type=next,
		label=Next];
	212	[contract_name=WalletLibrary,
		function_fullname="getOwner(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[186, 187, 188]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	213	[contract_name=WalletLibrary,
		function_fullname="getOwner(uint256)",
		label="Node Type: RETURN

EXPRESSION:
address(m_owners[ownerIndex + 1])

IRs:
TMP_54(uint256) = ownerIndex + 1
REF_22(uint256) -> m_owners[\
TMP_54]
TMP_55 = CONVERT REF_22 to address
RETURN TMP_55",
		node_expression="address(m_owners[ownerIndex + 1])",
		node_info_vulnerabilities=None,
		node_irs="TMP_54(uint256) = ownerIndex + 1
REF_22(uint256) -> m_owners[TMP_54]
TMP_55 = CONVERT REF_22 to address
RETURN TMP_55",
		node_source_code_lines="[187]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	212 -> 213	[key=0,
		edge_type=next,
		label=Next];
	214	[contract_name=WalletLibrary,
		function_fullname="getOwner(uint256)",
		label="parity_wallet_bug_2.sol_WalletLibrary_getOwner(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[186, 187, 188]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	214 -> 212	[key=0,
		edge_type=next,
		label=Next];
	215	[contract_name=WalletLibrary,
		function_fullname="isOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[190, 191, 192]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	216	[contract_name=WalletLibrary,
		function_fullname="isOwner(address)",
		label="Node Type: RETURN

EXPRESSION:
m_ownerIndex[uint256(_addr)] > 0

IRs:
TMP_56 = CONVERT _addr to uint256
REF_23(uint256) -> m_ownerIndex[\
TMP_56]
TMP_57(bool) = REF_23 > 0
RETURN TMP_57",
		node_expression="m_ownerIndex[uint256(_addr)] > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_56 = CONVERT _addr to uint256
REF_23(uint256) -> m_ownerIndex[TMP_56]
TMP_57(bool) = REF_23 > 0
RETURN TMP_57",
		node_source_code_lines="[191]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	215 -> 216	[key=0,
		edge_type=next,
		label=Next];
	217	[contract_name=WalletLibrary,
		function_fullname="isOwner(address)",
		label="parity_wallet_bug_2.sol_WalletLibrary_isOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[190, 191, 192]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	217 -> 215	[key=0,
		edge_type=next,
		label=Next];
	218	[contract_name=WalletLibrary,
		function_fullname="hasConfirmed(bytes32,address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	219	[contract_name=WalletLibrary,
		function_fullname="hasConfirmed(bytes32,address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
pending = m_pending[_operation]

IRs:
REF_24(WalletLibrary.PendingState) -> m_pending[_operation]
\
pending(WalletLibrary.PendingState) := REF_24(WalletLibrary.PendingState)",
		node_expression="pending = m_pending[_operation]",
		node_info_vulnerabilities=None,
		node_irs="REF_24(WalletLibrary.PendingState) -> m_pending[_operation]
pending(WalletLibrary.PendingState) := REF_24(WalletLibrary.PendingState)",
		node_source_code_lines="[195]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	218 -> 219	[key=0,
		edge_type=next,
		label=Next];
	220	[contract_name=WalletLibrary,
		function_fullname="hasConfirmed(bytes32,address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
ownerIndex = m_ownerIndex[uint256(_owner)]

IRs:
TMP_58 = CONVERT _owner to uint256
REF_25(\
uint256) -> m_ownerIndex[TMP_58]
ownerIndex(uint256) := REF_25(uint256)",
		node_expression="ownerIndex = m_ownerIndex[uint256(_owner)]",
		node_info_vulnerabilities=None,
		node_irs="TMP_58 = CONVERT _owner to uint256
REF_25(uint256) -> m_ownerIndex[TMP_58]
ownerIndex(uint256) := REF_25(uint256)",
		node_source_code_lines="[196]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	219 -> 220	[key=0,
		edge_type=next,
		label=Next];
	221	[contract_name=WalletLibrary,
		function_fullname="hasConfirmed(bytes32,address)",
		label="Node Type: IF

EXPRESSION:
ownerIndex == 0

IRs:
TMP_59(bool) = ownerIndex == 0
CONDITION TMP_59",
		node_expression="ownerIndex == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_59(bool) = ownerIndex == 0
CONDITION TMP_59",
		node_source_code_lines="[199]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	220 -> 221	[key=0,
		edge_type=next,
		label=Next];
	222	[contract_name=WalletLibrary,
		function_fullname="hasConfirmed(bytes32,address)",
		label="Node Type: RETURN

EXPRESSION:
false

IRs:
RETURN False",
		node_expression=false,
		node_info_vulnerabilities=None,
		node_irs="RETURN False",
		node_source_code_lines="[199]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	221 -> 222	[key=0,
		edge_type=if_true,
		label=True];
	223	[contract_name=WalletLibrary,
		function_fullname="hasConfirmed(bytes32,address)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[199]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	221 -> 223	[key=0,
		edge_type=if_false,
		label=False];
	224	[contract_name=WalletLibrary,
		function_fullname="hasConfirmed(bytes32,address)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
ownerIndexBit = 2 ** ownerIndex

IRs:
TMP_60(uint256) = 2 ** ownerIndex
ownerIndexBit(uint256) := \
TMP_60(uint256)",
		node_expression="ownerIndexBit = 2 ** ownerIndex",
		node_info_vulnerabilities=None,
		node_irs="TMP_60(uint256) = 2 ** ownerIndex
ownerIndexBit(uint256) := TMP_60(uint256)",
		node_source_code_lines="[202]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	223 -> 224	[key=0,
		edge_type=next,
		label=Next];
	225	[contract_name=WalletLibrary,
		function_fullname="hasConfirmed(bytes32,address)",
		label="Node Type: RETURN

EXPRESSION:
! (pending.ownersDone & ownerIndexBit == 0)

IRs:
REF_26(uint256) -> pending.ownersDone
TMP_61(uint256) = \
REF_26 & ownerIndexBit
TMP_62(bool) = TMP_61 == 0
TMP_63 = ! TMP_62 
RETURN TMP_63",
		node_expression="! (pending.ownersDone & ownerIndexBit == 0)",
		node_info_vulnerabilities=None,
		node_irs="REF_26(uint256) -> pending.ownersDone
TMP_61(uint256) = REF_26 & ownerIndexBit
TMP_62(bool) = TMP_61 == 0
TMP_63 = ! TMP_62 
RETURN \
TMP_63",
		node_source_code_lines="[203]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	224 -> 225	[key=0,
		edge_type=next,
		label=Next];
	226	[contract_name=WalletLibrary,
		function_fullname="hasConfirmed(bytes32,address)",
		label="parity_wallet_bug_2.sol_WalletLibrary_hasConfirmed(bytes32,address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	226 -> 218	[key=0,
		edge_type=next,
		label=Next];
	227	[contract_name=WalletLibrary,
		function_fullname="initDaylimit(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[207, 208, 209, 210]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	230	[contract_name=WalletLibrary,
		function_fullname="initDaylimit(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
only_uninitialized()

IRs:
MODIFIER_CALL, WalletLibrary.only_uninitialized()()",
		node_expression="only_uninitialized()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, WalletLibrary.only_uninitialized()()",
		node_source_code_lines="[207]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	227 -> 230	[key=0,
		edge_type=next,
		label=Next];
	228	[contract_name=WalletLibrary,
		function_fullname="initDaylimit(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_dailyLimit = _limit

IRs:
m_dailyLimit(uint256) := _limit(uint256)",
		node_expression="m_dailyLimit = _limit",
		node_info_vulnerabilities=None,
		node_irs="m_dailyLimit(uint256) := _limit(uint256)",
		node_source_code_lines="[208]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	229	[contract_name=WalletLibrary,
		function_fullname="initDaylimit(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_lastDay = today()

IRs:
TMP_64(uint256) = INTERNAL_CALL, WalletLibrary.today()()
m_lastDay(\
uint256) := TMP_64(uint256)",
		node_expression="m_lastDay = today()",
		node_info_vulnerabilities=None,
		node_irs="TMP_64(uint256) = INTERNAL_CALL, WalletLibrary.today()()
m_lastDay(uint256) := TMP_64(uint256)",
		node_source_code_lines="[209]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	228 -> 229	[key=0,
		edge_type=next,
		label=Next];
	230 -> 228	[key=0,
		edge_type=next,
		label=Next];
	231	[contract_name=WalletLibrary,
		function_fullname="initDaylimit(uint256)",
		label="parity_wallet_bug_2.sol_WalletLibrary_initDaylimit(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[207, 208, 209, 210]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	231 -> 227	[key=0,
		edge_type=next,
		label=Next];
	232	[contract_name=WalletLibrary,
		function_fullname="setDailyLimit(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[212, 213, 214]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	234	[contract_name=WalletLibrary,
		function_fullname="setDailyLimit(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlymanyowners(sha3()(msg.data))

IRs:
TMP_66(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_\
CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_66)",
		node_expression="onlymanyowners(sha3()(msg.data))",
		node_info_vulnerabilities=None,
		node_irs="TMP_66(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_66)",
		node_source_code_lines="[212]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	232 -> 234	[key=0,
		edge_type=next,
		label=Next];
	233	[contract_name=WalletLibrary,
		function_fullname="setDailyLimit(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_dailyLimit = _newLimit

IRs:
m_dailyLimit(uint256) := _newLimit(uint256)",
		node_expression="m_dailyLimit = _newLimit",
		node_info_vulnerabilities=None,
		node_irs="m_dailyLimit(uint256) := _newLimit(uint256)",
		node_source_code_lines="[213]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	234 -> 233	[key=0,
		edge_type=next,
		label=Next];
	235	[contract_name=WalletLibrary,
		function_fullname="setDailyLimit(uint256)",
		label="parity_wallet_bug_2.sol_WalletLibrary_setDailyLimit(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[212, 213, 214]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	235 -> 232	[key=0,
		edge_type=next,
		label=Next];
	236	[contract_name=WalletLibrary,
		function_fullname="resetSpentToday()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[216, 217, 218]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	238	[contract_name=WalletLibrary,
		function_fullname="resetSpentToday()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlymanyowners(sha3()(msg.data))

IRs:
TMP_68(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_\
CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_68)",
		node_expression="onlymanyowners(sha3()(msg.data))",
		node_info_vulnerabilities=None,
		node_irs="TMP_68(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_68)",
		node_source_code_lines="[216]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	236 -> 238	[key=0,
		edge_type=next,
		label=Next];
	237	[contract_name=WalletLibrary,
		function_fullname="resetSpentToday()",
		label="Node Type: EXPRESSION

EXPRESSION:
m_spentToday = 0

IRs:
m_spentToday(uint256) := 0(uint256)",
		node_expression="m_spentToday = 0",
		node_info_vulnerabilities=None,
		node_irs="m_spentToday(uint256) := 0(uint256)",
		node_source_code_lines="[217]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	238 -> 237	[key=0,
		edge_type=next,
		label=Next];
	239	[contract_name=WalletLibrary,
		function_fullname="resetSpentToday()",
		label="parity_wallet_bug_2.sol_WalletLibrary_resetSpentToday()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[216, 217, 218]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	239 -> 236	[key=0,
		edge_type=next,
		label=Next];
	240	[contract_name=WalletLibrary,
		function_fullname="initWallet(address[],uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [226], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[226, 227, 228, 229]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	243	[contract_name=WalletLibrary,
		function_fullname="initWallet(address[],uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
only_uninitialized()

IRs:
MODIFIER_CALL, WalletLibrary.only_uninitialized()()",
		node_expression="only_uninitialized()",
		node_info_vulnerabilities="[{'lines': [226], 'category': 'access_control'}]",
		node_irs="MODIFIER_CALL, WalletLibrary.only_uninitialized()()",
		node_source_code_lines="[226]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	240 -> 243	[key=0,
		edge_type=next,
		label=Next];
	241	[contract_name=WalletLibrary,
		function_fullname="initWallet(address[],uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
initDaylimit(_daylimit)

IRs:
INTERNAL_CALL, WalletLibrary.initDaylimit(uint256)(_daylimit)",
		node_expression="initDaylimit(_daylimit)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, WalletLibrary.initDaylimit(uint256)(_daylimit)",
		node_source_code_lines="[227]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	242	[contract_name=WalletLibrary,
		function_fullname="initWallet(address[],uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
initMultiowned(_owners,_required)

IRs:
INTERNAL_CALL, WalletLibrary.initMultiowned(address[],\
uint256)(_owners,_required)",
		node_expression="initMultiowned(_owners,_required)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, WalletLibrary.initMultiowned(address[],uint256)(_owners,_required)",
		node_source_code_lines="[228]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	241 -> 242	[key=0,
		edge_type=next,
		label=Next];
	243 -> 241	[key=0,
		edge_type=next,
		label=Next];
	244	[contract_name=WalletLibrary,
		function_fullname="initWallet(address[],uint256,uint256)",
		label="parity_wallet_bug_2.sol_WalletLibrary_initWallet(address[],uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [226], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[226, 227, 228, 229]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	244 -> 240	[key=0,
		edge_type=next,
		label=Next];
	245	[contract_name=WalletLibrary,
		function_fullname="kill(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [233], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[233, 234, 235]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	247	[contract_name=WalletLibrary,
		function_fullname="kill(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlymanyowners(sha3()(msg.data))

IRs:
TMP_74(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_\
CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_74)",
		node_expression="onlymanyowners(sha3()(msg.data))",
		node_info_vulnerabilities="[{'lines': [233], 'category': 'access_control'}]",
		node_irs="TMP_74(bytes32) = SOLIDITY_CALL sha3()(msg.data)
MODIFIER_CALL, WalletLibrary.onlymanyowners(bytes32)(TMP_74)",
		node_source_code_lines="[233]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	245 -> 247	[key=0,
		edge_type=next,
		label=Next];
	246	[contract_name=WalletLibrary,
		function_fullname="kill(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
suicide(address)(_to)

IRs:
TMP_73(None) = SOLIDITY_CALL suicide(address)(_to)",
		node_expression="suicide(address)(_to)",
		node_info_vulnerabilities=None,
		node_irs="TMP_73(None) = SOLIDITY_CALL suicide(address)(_to)",
		node_source_code_lines="[234]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	247 -> 246	[key=0,
		edge_type=next,
		label=Next];
	248	[contract_name=WalletLibrary,
		function_fullname="kill(address)",
		label="parity_wallet_bug_2.sol_WalletLibrary_kill(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [233], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[233, 234, 235]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	248 -> 245	[key=0,
		edge_type=next,
		label=Next];
	249	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	269	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, WalletLibrary.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, WalletLibrary.onlyowner()()",
		node_source_code_lines="[241]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	249 -> 269	[key=0,
		edge_type=next,
		label=Next];
	250	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: IF

EXPRESSION:
(_data.length == 0 && underLimit(_value)) || m_required == 1

IRs:
REF_27 -> LENGTH _data
TMP_76(bool) = \
REF_27 == 0
TMP_77(bool) = INTERNAL_CALL, WalletLibrary.underLimit(uint256)(_value)
TMP_78(bool) = TMP_76 && TMP_77
TMP_79(bool) = \
m_required == 1
TMP_80(bool) = TMP_78 || TMP_79
CONDITION TMP_80",
		node_expression="(_data.length == 0 && underLimit(_value)) || m_required == 1",
		node_info_vulnerabilities=None,
		node_irs="REF_27 -> LENGTH _data
TMP_76(bool) = REF_27 == 0
TMP_77(bool) = INTERNAL_CALL, WalletLibrary.underLimit(uint256)(_value)
TMP_78(\
bool) = TMP_76 && TMP_77
TMP_79(bool) = m_required == 1
TMP_80(bool) = TMP_78 || TMP_79
CONDITION TMP_80",
		node_source_code_lines="[243]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	251	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[245]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	250 -> 251	[key=0,
		edge_type=if_true,
		label=True];
	259	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
o_hash = sha3()(msg.data,block.number)

IRs:
TMP_87(bytes32) = SOLIDITY_CALL sha3()(msg.data,\
block.number)
o_hash(bytes32) := TMP_87(bytes32)",
		node_expression="o_hash = sha3()(msg.data,block.number)",
		node_info_vulnerabilities=None,
		node_irs="TMP_87(bytes32) = SOLIDITY_CALL sha3()(msg.data,block.number)
o_hash(bytes32) := TMP_87(bytes32)",
		node_source_code_lines="[255]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	250 -> 259	[key=0,
		edge_type=if_false,
		label=False];
	252	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: IF

EXPRESSION:
_to == 0

IRs:
TMP_81(bool) = _to == 0
CONDITION TMP_81",
		node_expression="_to == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_81(bool) = _to == 0
CONDITION TMP_81",
		node_source_code_lines="[246]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	251 -> 252	[key=0,
		edge_type=next,
		label=Next];
	253	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
created = create(_value,_data)

IRs:
TMP_82(address) = INTERNAL_CALL, WalletLibrary.create(uint256,\
bytes)(_value,_data)
created(address) := TMP_82(address)",
		node_expression="created = create(_value,_data)",
		node_info_vulnerabilities=None,
		node_irs="TMP_82(address) = INTERNAL_CALL, WalletLibrary.create(uint256,bytes)(_value,_data)
created(address) := TMP_82(address)",
		node_source_code_lines="[247]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	252 -> 253	[key=0,
		edge_type=if_true,
		label=True];
	254	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: IF

EXPRESSION:
! _to.call.value(_value)(_data)

IRs:
TMP_84(bool) = LOW_LEVEL_CALL, dest:_to, function:call, arguments:['_\
data'] value:_value 
TMP_85 = ! TMP_84 
CONDITION TMP_85",
		node_expression="! _to.call.value(_value)(_data)",
		node_info_vulnerabilities=None,
		node_irs="TMP_84(bool) = LOW_LEVEL_CALL, dest:_to, function:call, arguments:['_data'] value:_value 
TMP_85 = ! TMP_84 
CONDITION TMP_85",
		node_source_code_lines="[249]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	252 -> 254	[key=0,
		edge_type=if_false,
		label=False];
	257	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[246, 247, 248, 249, 250, 251]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	253 -> 257	[key=0,
		edge_type=next,
		label=Next];
	255	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: THROW
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[250]",
		node_type=THROW,
		source_file="parity_wallet_bug_2.sol"];
	254 -> 255	[key=0,
		edge_type=if_true,
		label=True];
	256	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[249, 250]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	254 -> 256	[key=0,
		edge_type=if_false,
		label=False];
	256 -> 257	[key=0,
		edge_type=next,
		label=Next];
	258	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
SingleTransact(msg.sender,_value,_to,_data,created)

IRs:
Emit SingleTransact(msg.sender._value._\
to._data.created)",
		node_expression="SingleTransact(msg.sender,_value,_to,_data,created)",
		node_info_vulnerabilities=None,
		node_irs="Emit SingleTransact(msg.sender._value._to._data.created)",
		node_source_code_lines="[252]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	257 -> 258	[key=0,
		edge_type=next,
		label=Next];
	268	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	258 -> 268	[key=0,
		edge_type=next,
		label=Next];
	260	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: IF

EXPRESSION:
m_txs[o_hash].to == 0 && m_txs[o_hash].value == 0 && m_txs[o_hash].data.length == 0

IRs:
REF_30(WalletLibrary.Transaction) \
-> m_txs[o_hash]
REF_31(address) -> REF_30.to
TMP_88(bool) = REF_31 == 0
REF_32(WalletLibrary.Transaction) -> m_txs[o_hash]
REF_\
33(uint256) -> REF_32.value
TMP_89(bool) = REF_33 == 0
TMP_90(bool) = TMP_88 && TMP_89
REF_34(WalletLibrary.Transaction) -> m_txs[\
o_hash]
REF_35(bytes) -> REF_34.data
REF_36 -> LENGTH REF_35
TMP_91(bool) = REF_36 == 0
TMP_92(bool) = TMP_90 && TMP_91
CONDITION \
TMP_92",
		node_expression="m_txs[o_hash].to == 0 && m_txs[o_hash].value == 0 && m_txs[o_hash].data.length == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_30(WalletLibrary.Transaction) -> m_txs[o_hash]
REF_31(address) -> REF_30.to
TMP_88(bool) = REF_31 == 0
REF_32(WalletLibrary.Transaction) \
-> m_txs[o_hash]
REF_33(uint256) -> REF_32.value
TMP_89(bool) = REF_33 == 0
TMP_90(bool) = TMP_88 && TMP_89
REF_34(WalletLibrary.Transaction) \
-> m_txs[o_hash]
REF_35(bytes) -> REF_34.data
REF_36 -> LENGTH REF_35
TMP_91(bool) = REF_36 == 0
TMP_92(bool) = TMP_90 && TMP_91
\
CONDITION TMP_92",
		node_source_code_lines="[257]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	259 -> 260	[key=0,
		edge_type=next,
		label=Next];
	261	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_txs[o_hash].to = _to

IRs:
REF_37(WalletLibrary.Transaction) -> m_txs[o_hash]
REF_38(address) \
-> REF_37.to
REF_38 (->m_txs) := _to(address)",
		node_expression="m_txs[o_hash].to = _to",
		node_info_vulnerabilities=None,
		node_irs="REF_37(WalletLibrary.Transaction) -> m_txs[o_hash]
REF_38(address) -> REF_37.to
REF_38 (->m_txs) := _to(address)",
		node_source_code_lines="[258]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	260 -> 261	[key=0,
		edge_type=if_true,
		label=True];
	264	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[257, 258, 259, 260, 261]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	260 -> 264	[key=0,
		edge_type=if_false,
		label=False];
	262	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_txs[o_hash].value = _value

IRs:
REF_39(WalletLibrary.Transaction) -> m_txs[o_hash]
REF_40(\
uint256) -> REF_39.value
REF_40 (->m_txs) := _value(uint256)",
		node_expression="m_txs[o_hash].value = _value",
		node_info_vulnerabilities=None,
		node_irs="REF_39(WalletLibrary.Transaction) -> m_txs[o_hash]
REF_40(uint256) -> REF_39.value
REF_40 (->m_txs) := _value(uint256)",
		node_source_code_lines="[259]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	261 -> 262	[key=0,
		edge_type=next,
		label=Next];
	263	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_txs[o_hash].data = _data

IRs:
REF_41(WalletLibrary.Transaction) -> m_txs[o_hash]
REF_42(bytes) \
-> REF_41.data
REF_42 (->m_txs) := _data(bytes)",
		node_expression="m_txs[o_hash].data = _data",
		node_info_vulnerabilities=None,
		node_irs="REF_41(WalletLibrary.Transaction) -> m_txs[o_hash]
REF_42(bytes) -> REF_41.data
REF_42 (->m_txs) := _data(bytes)",
		node_source_code_lines="[260]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	262 -> 263	[key=0,
		edge_type=next,
		label=Next];
	263 -> 264	[key=0,
		edge_type=next,
		label=Next];
	265	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: IF

EXPRESSION:
! confirm(o_hash)

IRs:
TMP_93(bool) = INTERNAL_CALL, WalletLibrary.confirm(bytes32)(o_hash)
TMP_94 = ! \
TMP_93 
CONDITION TMP_94",
		node_expression="! confirm(o_hash)",
		node_info_vulnerabilities=None,
		node_irs="TMP_93(bool) = INTERNAL_CALL, WalletLibrary.confirm(bytes32)(o_hash)
TMP_94 = ! TMP_93 
CONDITION TMP_94",
		node_source_code_lines="[262]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	264 -> 265	[key=0,
		edge_type=next,
		label=Next];
	266	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: EXPRESSION

EXPRESSION:
ConfirmationNeeded(o_hash,msg.sender,_value,_to,_data)

IRs:
Emit ConfirmationNeeded(o_hash.msg.sender._\
value._to._data)",
		node_expression="ConfirmationNeeded(o_hash,msg.sender,_value,_to,_data)",
		node_info_vulnerabilities=None,
		node_irs="Emit ConfirmationNeeded(o_hash.msg.sender._value._to._data)",
		node_source_code_lines="[263]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	265 -> 266	[key=0,
		edge_type=if_true,
		label=True];
	267	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[262, 263, 264]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	265 -> 267	[key=0,
		edge_type=if_false,
		label=False];
	266 -> 267	[key=0,
		edge_type=next,
		label=Next];
	267 -> 268	[key=0,
		edge_type=next,
		label=Next];
	269 -> 250	[key=0,
		edge_type=next,
		label=Next];
	270	[contract_name=WalletLibrary,
		function_fullname="execute(address,uint256,bytes)",
		label="parity_wallet_bug_2.sol_WalletLibrary_execute(address,uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	270 -> 249	[key=0,
		edge_type=next,
		label=Next];
	271	[contract_name=WalletLibrary,
		function_fullname="create(uint256,bytes)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[268, 269, 270, 271, 272, 273, 274, 275]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	272	[contract_name=WalletLibrary,
		function_fullname="create(uint256,bytes)",
		label="parity_wallet_bug_2.sol_WalletLibrary_create(uint256,bytes)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[268, 269, 270, 271, 272, 273, 274, 275]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	272 -> 271	[key=0,
		edge_type=next,
		label=Next];
	273	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	286	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlymanyowners(_h)

IRs:
MODIFIER_CALL, WalletLibrary.onlymanyowners(bytes32)(_h)",
		node_expression="onlymanyowners(_h)",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, WalletLibrary.onlymanyowners(bytes32)(_h)",
		node_source_code_lines="[279]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	273 -> 286	[key=0,
		edge_type=next,
		label=Next];
	274	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: IF

EXPRESSION:
m_txs[_h].to != 0 || m_txs[_h].value != 0 || m_txs[_h].data.length != 0

IRs:
REF_43(WalletLibrary.Transaction) \
-> m_txs[_h]
REF_44(address) -> REF_43.to
TMP_97(bool) = REF_44 != 0
REF_45(WalletLibrary.Transaction) -> m_txs[_h]
REF_46(uint256) \
-> REF_45.value
TMP_98(bool) = REF_46 != 0
TMP_99(bool) = TMP_97 || TMP_98
REF_47(WalletLibrary.Transaction) -> m_txs[_h]
REF_48(\
bytes) -> REF_47.data
REF_49 -> LENGTH REF_48
TMP_100(bool) = REF_49 != 0
TMP_101(bool) = TMP_99 || TMP_100
CONDITION TMP_101",
		node_expression="m_txs[_h].to != 0 || m_txs[_h].value != 0 || m_txs[_h].data.length != 0",
		node_info_vulnerabilities=None,
		node_irs="REF_43(WalletLibrary.Transaction) -> m_txs[_h]
REF_44(address) -> REF_43.to
TMP_97(bool) = REF_44 != 0
REF_45(WalletLibrary.Transaction) \
-> m_txs[_h]
REF_46(uint256) -> REF_45.value
TMP_98(bool) = REF_46 != 0
TMP_99(bool) = TMP_97 || TMP_98
REF_47(WalletLibrary.Transaction) \
-> m_txs[_h]
REF_48(bytes) -> REF_47.data
REF_49 -> LENGTH REF_48
TMP_100(bool) = REF_49 != 0
TMP_101(bool) = TMP_99 || TMP_100
\
CONDITION TMP_101",
		node_source_code_lines="[280]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	275	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: NEW VARIABLE
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[281]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	274 -> 275	[key=0,
		edge_type=if_true,
		label=True];
	285	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	274 -> 285	[key=0,
		edge_type=if_false,
		label=False];
	276	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: IF

EXPRESSION:
m_txs[_h].to == 0

IRs:
REF_50(WalletLibrary.Transaction) -> m_txs[_h]
REF_51(address) -> REF_50.to
TMP_\
102(bool) = REF_51 == 0
CONDITION TMP_102",
		node_expression="m_txs[_h].to == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_50(WalletLibrary.Transaction) -> m_txs[_h]
REF_51(address) -> REF_50.to
TMP_102(bool) = REF_51 == 0
CONDITION TMP_102",
		node_source_code_lines="[282]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	275 -> 276	[key=0,
		edge_type=next,
		label=Next];
	277	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
created = create(m_txs[_h].value,m_txs[_h].data)

IRs:
REF_52(WalletLibrary.Transaction) -> m_\
txs[_h]
REF_53(uint256) -> REF_52.value
REF_54(WalletLibrary.Transaction) -> m_txs[_h]
REF_55(bytes) -> REF_54.data
TMP_103(address) = \
INTERNAL_CALL, WalletLibrary.create(uint256,bytes)(REF_53,REF_55)
created(address) := TMP_103(address)",
		node_expression="created = create(m_txs[_h].value,m_txs[_h].data)",
		node_info_vulnerabilities=None,
		node_irs="REF_52(WalletLibrary.Transaction) -> m_txs[_h]
REF_53(uint256) -> REF_52.value
REF_54(WalletLibrary.Transaction) -> m_txs[_h]
REF_\
55(bytes) -> REF_54.data
TMP_103(address) = INTERNAL_CALL, WalletLibrary.create(uint256,bytes)(REF_53,REF_55)
created(address) := \
TMP_103(address)",
		node_source_code_lines="[283]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	276 -> 277	[key=0,
		edge_type=if_true,
		label=True];
	278	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: IF

EXPRESSION:
! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data)

IRs:
REF_56(WalletLibrary.Transaction) -> \
m_txs[_h]
REF_57(address) -> REF_56.to
REF_60(WalletLibrary.Transaction) -> m_txs[_h]
REF_61(uint256) -> REF_60.value
REF_62(WalletLibrary.Transaction) \
-> m_txs[_h]
REF_63(bytes) -> REF_62.data
TMP_105(bool) = LOW_LEVEL_CALL, dest:REF_57, function:call, arguments:['REF_63'] value:\
REF_61 
TMP_106 = ! TMP_105 
CONDITION TMP_106",
		node_expression="! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data)",
		node_info_vulnerabilities=None,
		node_irs="REF_56(WalletLibrary.Transaction) -> m_txs[_h]
REF_57(address) -> REF_56.to
REF_60(WalletLibrary.Transaction) -> m_txs[_h]
REF_61(\
uint256) -> REF_60.value
REF_62(WalletLibrary.Transaction) -> m_txs[_h]
REF_63(bytes) -> REF_62.data
TMP_105(bool) = LOW_LEVEL_CALL, \
dest:REF_57, function:call, arguments:['REF_63'] value:REF_61 
TMP_106 = ! TMP_105 
CONDITION TMP_106",
		node_source_code_lines="[285]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	276 -> 278	[key=0,
		edge_type=if_false,
		label=False];
	281	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[282, 283, 284, 285, 286, 287]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	277 -> 281	[key=0,
		edge_type=next,
		label=Next];
	279	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: THROW
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[286]",
		node_type=THROW,
		source_file="parity_wallet_bug_2.sol"];
	278 -> 279	[key=0,
		edge_type=if_true,
		label=True];
	280	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[285, 286]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	278 -> 280	[key=0,
		edge_type=if_false,
		label=False];
	280 -> 281	[key=0,
		edge_type=next,
		label=Next];
	282	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
MultiTransact(msg.sender,_h,m_txs[_h].value,m_txs[_h].to,m_txs[_h].data,created)

IRs:
REF_64(\
WalletLibrary.Transaction) -> m_txs[_h]
REF_65(uint256) -> REF_64.value
REF_66(WalletLibrary.Transaction) -> m_txs[_h]
REF_67(address) \
-> REF_66.to
REF_68(WalletLibrary.Transaction) -> m_txs[_h]
REF_69(bytes) -> REF_68.data
Emit MultiTransact(msg.sender._h.REF_65.REF_\
67.REF_69.created)",
		node_expression="MultiTransact(msg.sender,_h,m_txs[_h].value,m_txs[_h].to,m_txs[_h].data,created)",
		node_info_vulnerabilities=None,
		node_irs="REF_64(WalletLibrary.Transaction) -> m_txs[_h]
REF_65(uint256) -> REF_64.value
REF_66(WalletLibrary.Transaction) -> m_txs[_h]
REF_\
67(address) -> REF_66.to
REF_68(WalletLibrary.Transaction) -> m_txs[_h]
REF_69(bytes) -> REF_68.data
Emit MultiTransact(msg.sender._\
h.REF_65.REF_67.REF_69.created)",
		node_source_code_lines="[289]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	281 -> 282	[key=0,
		edge_type=next,
		label=Next];
	283	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
delete m_txs[_h]

IRs:
REF_70(WalletLibrary.Transaction) -> m_txs[_h]
m_txs = delete REF_70 ",
		node_expression="delete m_txs[_h]",
		node_info_vulnerabilities=None,
		node_irs="REF_70(WalletLibrary.Transaction) -> m_txs[_h]
m_txs = delete REF_70 ",
		node_source_code_lines="[290]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	282 -> 283	[key=0,
		edge_type=next,
		label=Next];
	284	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[291]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	283 -> 284	[key=0,
		edge_type=next,
		label=Next];
	286 -> 274	[key=0,
		edge_type=next,
		label=Next];
	287	[contract_name=WalletLibrary,
		function_fullname="confirm(bytes32)",
		label="parity_wallet_bug_2.sol_WalletLibrary_confirm(bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	287 -> 273	[key=0,
		edge_type=next,
		label=Next];
	288	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, \
323, 324, 325, 326, 327, 328, 329, 330, 331, 332]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	289	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
ownerIndex = m_ownerIndex[uint256(msg.sender)]

IRs:
TMP_109 = CONVERT msg.sender to uint256
\
REF_71(uint256) -> m_ownerIndex[TMP_109]
ownerIndex(uint256) := REF_71(uint256)",
		node_expression="ownerIndex = m_ownerIndex[uint256(msg.sender)]",
		node_info_vulnerabilities=None,
		node_irs="TMP_109 = CONVERT msg.sender to uint256
REF_71(uint256) -> m_ownerIndex[TMP_109]
ownerIndex(uint256) := REF_71(uint256)",
		node_source_code_lines="[299]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	288 -> 289	[key=0,
		edge_type=next,
		label=Next];
	290	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: IF

EXPRESSION:
ownerIndex == 0

IRs:
TMP_110(bool) = ownerIndex == 0
CONDITION TMP_110",
		node_expression="ownerIndex == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_110(bool) = ownerIndex == 0
CONDITION TMP_110",
		node_source_code_lines="[301]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	289 -> 290	[key=0,
		edge_type=next,
		label=Next];
	291	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[301]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	290 -> 291	[key=0,
		edge_type=if_true,
		label=True];
	292	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[301]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	290 -> 292	[key=0,
		edge_type=if_false,
		label=False];
	293	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
pending = m_pending[_operation]

IRs:
REF_72(WalletLibrary.PendingState) -> m_pending[_operation]
\
pending(WalletLibrary.PendingState) := REF_72(WalletLibrary.PendingState)",
		node_expression="pending = m_pending[_operation]",
		node_info_vulnerabilities=None,
		node_irs="REF_72(WalletLibrary.PendingState) -> m_pending[_operation]
pending(WalletLibrary.PendingState) := REF_72(WalletLibrary.PendingState)",
		node_source_code_lines="[303]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	292 -> 293	[key=0,
		edge_type=next,
		label=Next];
	294	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: IF

EXPRESSION:
pending.yetNeeded == 0

IRs:
REF_73(uint256) -> pending.yetNeeded
TMP_111(bool) = REF_73 == 0
CONDITION \
TMP_111",
		node_expression="pending.yetNeeded == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_73(uint256) -> pending.yetNeeded
TMP_111(bool) = REF_73 == 0
CONDITION TMP_111",
		node_source_code_lines="[305]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	293 -> 294	[key=0,
		edge_type=next,
		label=Next];
	295	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
pending.yetNeeded = m_required

IRs:
REF_74(uint256) -> pending.yetNeeded
REF_74 (->pending) := \
m_required(uint256)",
		node_expression="pending.yetNeeded = m_required",
		node_info_vulnerabilities=None,
		node_irs="REF_74(uint256) -> pending.yetNeeded
REF_74 (->pending) := m_required(uint256)",
		node_source_code_lines="[307]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	294 -> 295	[key=0,
		edge_type=if_true,
		label=True];
	299	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[305, 306, 307, 308, 309, 310, 311, 312]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	294 -> 299	[key=0,
		edge_type=if_false,
		label=False];
	296	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
pending.ownersDone = 0

IRs:
REF_75(uint256) -> pending.ownersDone
REF_75 (->pending) := 0(uint256)",
		node_expression="pending.ownersDone = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_75(uint256) -> pending.ownersDone
REF_75 (->pending) := 0(uint256)",
		node_source_code_lines="[309]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	295 -> 296	[key=0,
		edge_type=next,
		label=Next];
	297	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
pending.index = m_pendingIndex.length ++

IRs:
REF_76(uint256) -> pending.index
REF_77 -> LENGTH \
m_pendingIndex
TMP_112(uint256) := REF_77(uint256)
REF_77(-> m_pendingIndex) = REF_77 + 1
REF_76 (->pending) := TMP_112(uint256)",
		node_expression="pending.index = m_pendingIndex.length ++",
		node_info_vulnerabilities=None,
		node_irs="REF_76(uint256) -> pending.index
REF_77 -> LENGTH m_pendingIndex
TMP_112(uint256) := REF_77(uint256)
REF_77(-> m_pendingIndex) = \
REF_77 + 1
REF_76 (->pending) := TMP_112(uint256)",
		node_source_code_lines="[310]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	296 -> 297	[key=0,
		edge_type=next,
		label=Next];
	298	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_pendingIndex[pending.index] = _operation

IRs:
REF_78(uint256) -> pending.index
REF_79(bytes32) \
-> m_pendingIndex[REF_78]
REF_79 (->m_pendingIndex) := _operation(bytes32)",
		node_expression="m_pendingIndex[pending.index] = _operation",
		node_info_vulnerabilities=None,
		node_irs="REF_78(uint256) -> pending.index
REF_79(bytes32) -> m_pendingIndex[REF_78]
REF_79 (->m_pendingIndex) := _operation(bytes32)",
		node_source_code_lines="[311]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	297 -> 298	[key=0,
		edge_type=next,
		label=Next];
	298 -> 299	[key=0,
		edge_type=next,
		label=Next];
	300	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
ownerIndexBit = 2 ** ownerIndex

IRs:
TMP_113(uint256) = 2 ** ownerIndex
ownerIndexBit(uint256) := \
TMP_113(uint256)",
		node_expression="ownerIndexBit = 2 ** ownerIndex",
		node_info_vulnerabilities=None,
		node_irs="TMP_113(uint256) = 2 ** ownerIndex
ownerIndexBit(uint256) := TMP_113(uint256)",
		node_source_code_lines="[314]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	299 -> 300	[key=0,
		edge_type=next,
		label=Next];
	301	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: IF

EXPRESSION:
pending.ownersDone & ownerIndexBit == 0

IRs:
REF_80(uint256) -> pending.ownersDone
TMP_114(uint256) = \
REF_80 & ownerIndexBit
TMP_115(bool) = TMP_114 == 0
CONDITION TMP_115",
		node_expression="pending.ownersDone & ownerIndexBit == 0",
		node_info_vulnerabilities=None,
		node_irs="REF_80(uint256) -> pending.ownersDone
TMP_114(uint256) = REF_80 & ownerIndexBit
TMP_115(bool) = TMP_114 == 0
CONDITION TMP_115",
		node_source_code_lines="[316]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	300 -> 301	[key=0,
		edge_type=next,
		label=Next];
	302	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
Confirmation(msg.sender,_operation)

IRs:
Emit Confirmation(msg.sender._operation)",
		node_expression="Confirmation(msg.sender,_operation)",
		node_info_vulnerabilities=None,
		node_irs="Emit Confirmation(msg.sender._operation)",
		node_source_code_lines="[317]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	301 -> 302	[key=0,
		edge_type=if_true,
		label=True];
	310	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	301 -> 310	[key=0,
		edge_type=if_false,
		label=False];
	303	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: IF

EXPRESSION:
pending.yetNeeded <= 1

IRs:
REF_81(uint256) -> pending.yetNeeded
TMP_117(bool) = REF_81 <= 1
CONDITION \
TMP_117",
		node_expression="pending.yetNeeded <= 1",
		node_info_vulnerabilities=None,
		node_irs="REF_81(uint256) -> pending.yetNeeded
TMP_117(bool) = REF_81 <= 1
CONDITION TMP_117",
		node_source_code_lines="[319]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	302 -> 303	[key=0,
		edge_type=next,
		label=Next];
	304	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
delete m_pendingIndex[m_pending[_operation].index]

IRs:
REF_82(WalletLibrary.PendingState) -> \
m_pending[_operation]
REF_83(uint256) -> REF_82.index
REF_84(bytes32) -> m_pendingIndex[REF_83]
m_pendingIndex = delete REF_84 ",
		node_expression="delete m_pendingIndex[m_pending[_operation].index]",
		node_info_vulnerabilities=None,
		node_irs="REF_82(WalletLibrary.PendingState) -> m_pending[_operation]
REF_83(uint256) -> REF_82.index
REF_84(bytes32) -> m_pendingIndex[REF_\
83]
m_pendingIndex = delete REF_84 ",
		node_source_code_lines="[321]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	303 -> 304	[key=0,
		edge_type=if_true,
		label=True];
	307	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
pending.yetNeeded --

IRs:
REF_86(uint256) -> pending.yetNeeded
TMP_118(uint256) := REF_86(uint256)
\
REF_86(-> pending) = REF_86 - 1",
		node_expression="pending.yetNeeded --",
		node_info_vulnerabilities=None,
		node_irs="REF_86(uint256) -> pending.yetNeeded
TMP_118(uint256) := REF_86(uint256)
REF_86(-> pending) = REF_86 - 1",
		node_source_code_lines="[328]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	303 -> 307	[key=0,
		edge_type=if_false,
		label=False];
	305	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
delete m_pending[_operation]

IRs:
REF_85(WalletLibrary.PendingState) -> m_pending[_operation]
\
m_pending = delete REF_85 ",
		node_expression="delete m_pending[_operation]",
		node_info_vulnerabilities=None,
		node_irs="REF_85(WalletLibrary.PendingState) -> m_pending[_operation]
m_pending = delete REF_85 ",
		node_source_code_lines="[322]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	304 -> 305	[key=0,
		edge_type=next,
		label=Next];
	306	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[323]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	305 -> 306	[key=0,
		edge_type=next,
		label=Next];
	308	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: EXPRESSION

EXPRESSION:
pending.ownersDone |= ownerIndexBit

IRs:
REF_87(uint256) -> pending.ownersDone
REF_87(-> pending) = \
REF_87 | ownerIndexBit",
		node_expression="pending.ownersDone |= ownerIndexBit",
		node_info_vulnerabilities=None,
		node_irs="REF_87(uint256) -> pending.ownersDone
REF_87(-> pending) = REF_87 | ownerIndexBit",
		node_source_code_lines="[329]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	307 -> 308	[key=0,
		edge_type=next,
		label=Next];
	309	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	308 -> 309	[key=0,
		edge_type=next,
		label=Next];
	309 -> 310	[key=0,
		edge_type=next,
		label=Next];
	311	[contract_name=WalletLibrary,
		function_fullname="confirmAndCheck(bytes32)",
		label="parity_wallet_bug_2.sol_WalletLibrary_confirmAndCheck(bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, \
323, 324, 325, 326, 327, 328, 329, 330, 331, 332]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	311 -> 288	[key=0,
		edge_type=next,
		label=Next];
	312	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	313	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
free = 1

IRs:
free(uint256) := 1(uint256)",
		node_expression="free = 1",
		node_info_vulnerabilities=None,
		node_irs="free(uint256) := 1(uint256)",
		node_source_code_lines="[335]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	312 -> 313	[key=0,
		edge_type=next,
		label=Next];
	314	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346]",
		node_type=BEGIN_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	313 -> 314	[key=0,
		edge_type=next,
		label=Next];
	315	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: IF_LOOP

EXPRESSION:
free < m_numOwners

IRs:
TMP_119(bool) = free < m_numOwners
CONDITION TMP_119",
		node_expression="free < m_numOwners",
		node_info_vulnerabilities=None,
		node_irs="TMP_119(bool) = free < m_numOwners
CONDITION TMP_119",
		node_source_code_lines="[336]",
		node_type=IF_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	314 -> 315	[key=0,
		edge_type=next,
		label=Next];
	316	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[338]",
		node_type=BEGIN_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	315 -> 316	[key=0,
		edge_type=if_true,
		label=True];
	329	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346]",
		node_type=END_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	315 -> 329	[key=0,
		edge_type=if_false,
		label=False];
	317	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: IF_LOOP

EXPRESSION:
free < m_numOwners && m_owners[free] != 0

IRs:
TMP_120(bool) = free < m_numOwners
REF_88(uint256) \
-> m_owners[free]
TMP_121(bool) = REF_88 != 0
TMP_122(bool) = TMP_120 && TMP_121
CONDITION TMP_122",
		node_expression="free < m_numOwners && m_owners[free] != 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_120(bool) = free < m_numOwners
REF_88(uint256) -> m_owners[free]
TMP_121(bool) = REF_88 != 0
TMP_122(bool) = TMP_120 && TMP_\
121
CONDITION TMP_122",
		node_source_code_lines="[338]",
		node_type=IF_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	316 -> 317	[key=0,
		edge_type=next,
		label=Next];
	318	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: EXPRESSION

EXPRESSION:
free ++

IRs:
TMP_123(uint256) := free(uint256)
free(uint256) = free + 1",
		node_expression="free ++",
		node_info_vulnerabilities=None,
		node_irs="TMP_123(uint256) := free(uint256)
free(uint256) = free + 1",
		node_source_code_lines="[338]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	317 -> 318	[key=0,
		edge_type=if_true,
		label=True];
	319	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[338]",
		node_type=END_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	317 -> 319	[key=0,
		edge_type=if_false,
		label=False];
	318 -> 317	[key=0,
		edge_type=next,
		label=Next];
	320	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[339]",
		node_type=BEGIN_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	319 -> 320	[key=0,
		edge_type=next,
		label=Next];
	321	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: IF_LOOP

EXPRESSION:
m_numOwners > 1 && m_owners[m_numOwners] == 0

IRs:
TMP_124(bool) = m_numOwners > 1
REF_89(uint256) \
-> m_owners[m_numOwners]
TMP_125(bool) = REF_89 == 0
TMP_126(bool) = TMP_124 && TMP_125
CONDITION TMP_126",
		node_expression="m_numOwners > 1 && m_owners[m_numOwners] == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_124(bool) = m_numOwners > 1
REF_89(uint256) -> m_owners[m_numOwners]
TMP_125(bool) = REF_89 == 0
TMP_126(bool) = TMP_124 && \
TMP_125
CONDITION TMP_126",
		node_source_code_lines="[339]",
		node_type=IF_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	320 -> 321	[key=0,
		edge_type=next,
		label=Next];
	322	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: EXPRESSION

EXPRESSION:
m_numOwners --

IRs:
TMP_127(uint256) := m_numOwners(uint256)
m_numOwners(uint256) = m_numOwners \
- 1",
		node_expression="m_numOwners --",
		node_info_vulnerabilities=None,
		node_irs="TMP_127(uint256) := m_numOwners(uint256)
m_numOwners(uint256) = m_numOwners - 1",
		node_source_code_lines="[339]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	321 -> 322	[key=0,
		edge_type=if_true,
		label=True];
	323	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[339]",
		node_type=END_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	321 -> 323	[key=0,
		edge_type=if_false,
		label=False];
	322 -> 321	[key=0,
		edge_type=next,
		label=Next];
	324	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: IF

EXPRESSION:
free < m_numOwners && m_owners[m_numOwners] != 0 && m_owners[free] == 0

IRs:
TMP_128(bool) = free < \
m_numOwners
REF_90(uint256) -> m_owners[m_numOwners]
TMP_129(bool) = REF_90 != 0
TMP_130(bool) = TMP_128 && TMP_129
REF_91(uint256) \
-> m_owners[free]
TMP_131(bool) = REF_91 == 0
TMP_132(bool) = TMP_130 && TMP_131
CONDITION TMP_132",
		node_expression="free < m_numOwners && m_owners[m_numOwners] != 0 && m_owners[free] == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_128(bool) = free < m_numOwners
REF_90(uint256) -> m_owners[m_numOwners]
TMP_129(bool) = REF_90 != 0
TMP_130(bool) = TMP_128 && \
TMP_129
REF_91(uint256) -> m_owners[free]
TMP_131(bool) = REF_91 == 0
TMP_132(bool) = TMP_130 && TMP_131
CONDITION TMP_132",
		node_source_code_lines="[340]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	323 -> 324	[key=0,
		edge_type=next,
		label=Next];
	325	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: EXPRESSION

EXPRESSION:
m_owners[free] = m_owners[m_numOwners]

IRs:
REF_92(uint256) -> m_owners[free]
REF_93(uint256) \
-> m_owners[m_numOwners]
REF_92 (->m_owners) := REF_93(uint256)",
		node_expression="m_owners[free] = m_owners[m_numOwners]",
		node_info_vulnerabilities=None,
		node_irs="REF_92(uint256) -> m_owners[free]
REF_93(uint256) -> m_owners[m_numOwners]
REF_92 (->m_owners) := REF_93(uint256)",
		node_source_code_lines="[342]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	324 -> 325	[key=0,
		edge_type=if_true,
		label=True];
	328	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[340, 341, 342, 343, 344, 345]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	324 -> 328	[key=0,
		edge_type=if_false,
		label=False];
	326	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: EXPRESSION

EXPRESSION:
m_ownerIndex[m_owners[free]] = free

IRs:
REF_94(uint256) -> m_owners[free]
REF_95(uint256) -> \
m_ownerIndex[REF_94]
REF_95 (->m_ownerIndex) := free(uint256)",
		node_expression="m_ownerIndex[m_owners[free]] = free",
		node_info_vulnerabilities=None,
		node_irs="REF_94(uint256) -> m_owners[free]
REF_95(uint256) -> m_ownerIndex[REF_94]
REF_95 (->m_ownerIndex) := free(uint256)",
		node_source_code_lines="[343]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	325 -> 326	[key=0,
		edge_type=next,
		label=Next];
	327	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="Node Type: EXPRESSION

EXPRESSION:
m_owners[m_numOwners] = 0

IRs:
REF_96(uint256) -> m_owners[m_numOwners]
REF_96 (->m_owners) := \
0(uint256)",
		node_expression="m_owners[m_numOwners] = 0",
		node_info_vulnerabilities=None,
		node_irs="REF_96(uint256) -> m_owners[m_numOwners]
REF_96 (->m_owners) := 0(uint256)",
		node_source_code_lines="[344]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	326 -> 327	[key=0,
		edge_type=next,
		label=Next];
	327 -> 328	[key=0,
		edge_type=next,
		label=Next];
	328 -> 315	[key=0,
		edge_type=next,
		label=Next];
	330	[contract_name=WalletLibrary,
		function_fullname="reorganizeOwners()",
		label="parity_wallet_bug_2.sol_WalletLibrary_reorganizeOwners()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	330 -> 312	[key=0,
		edge_type=next,
		label=Next];
	331	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	341	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, WalletLibrary.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, WalletLibrary.onlyowner()()",
		node_source_code_lines="[351]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	331 -> 341	[key=0,
		edge_type=next,
		label=Next];
	332	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: IF

EXPRESSION:
today() > m_lastDay

IRs:
TMP_133(uint256) = INTERNAL_CALL, WalletLibrary.today()()
TMP_134(bool) = TMP_\
133 > m_lastDay
CONDITION TMP_134",
		node_expression="today() > m_lastDay",
		node_info_vulnerabilities=None,
		node_irs="TMP_133(uint256) = INTERNAL_CALL, WalletLibrary.today()()
TMP_134(bool) = TMP_133 > m_lastDay
CONDITION TMP_134",
		node_source_code_lines="[353]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	333	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_spentToday = 0

IRs:
m_spentToday(uint256) := 0(uint256)",
		node_expression="m_spentToday = 0",
		node_info_vulnerabilities=None,
		node_irs="m_spentToday(uint256) := 0(uint256)",
		node_source_code_lines="[354]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	332 -> 333	[key=0,
		edge_type=if_true,
		label=True];
	335	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[353, 354, 355, 356]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	332 -> 335	[key=0,
		edge_type=if_false,
		label=False];
	334	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_lastDay = today()

IRs:
TMP_135(uint256) = INTERNAL_CALL, WalletLibrary.today()()
m_lastDay(\
uint256) := TMP_135(uint256)",
		node_expression="m_lastDay = today()",
		node_info_vulnerabilities=None,
		node_irs="TMP_135(uint256) = INTERNAL_CALL, WalletLibrary.today()()
m_lastDay(uint256) := TMP_135(uint256)",
		node_source_code_lines="[355]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	333 -> 334	[key=0,
		edge_type=next,
		label=Next];
	334 -> 335	[key=0,
		edge_type=next,
		label=Next];
	336	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: IF

EXPRESSION:
m_spentToday + _value >= m_spentToday && m_spentToday + _value <= m_dailyLimit

IRs:
TMP_136(uint256) = \
m_spentToday + _value
TMP_137(bool) = TMP_136 >= m_spentToday
TMP_138(uint256) = m_spentToday + _value
TMP_139(bool) = TMP_138 <= \
m_dailyLimit
TMP_140(bool) = TMP_137 && TMP_139
CONDITION TMP_140",
		node_expression="m_spentToday + _value >= m_spentToday && m_spentToday + _value <= m_dailyLimit",
		node_info_vulnerabilities=None,
		node_irs="TMP_136(uint256) = m_spentToday + _value
TMP_137(bool) = TMP_136 >= m_spentToday
TMP_138(uint256) = m_spentToday + _value
TMP_139(\
bool) = TMP_138 <= m_dailyLimit
TMP_140(bool) = TMP_137 && TMP_139
CONDITION TMP_140",
		node_source_code_lines="[359]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	335 -> 336	[key=0,
		edge_type=next,
		label=Next];
	337	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
m_spentToday += _value

IRs:
m_spentToday(uint256) = m_spentToday + _value",
		node_expression="m_spentToday += _value",
		node_info_vulnerabilities=None,
		node_irs="m_spentToday(uint256) = m_spentToday + _value",
		node_source_code_lines="[360]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	336 -> 337	[key=0,
		edge_type=if_true,
		label=True];
	339	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[359, 360, 361, 362]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	336 -> 339	[key=0,
		edge_type=if_false,
		label=False];
	338	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: RETURN

EXPRESSION:
true

IRs:
RETURN True",
		node_expression=true,
		node_info_vulnerabilities=None,
		node_irs="RETURN True",
		node_source_code_lines="[361]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	337 -> 338	[key=0,
		edge_type=next,
		label=Next];
	340	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="Node Type: RETURN

EXPRESSION:
false

IRs:
RETURN False",
		node_expression=false,
		node_info_vulnerabilities=None,
		node_irs="RETURN False",
		node_source_code_lines="[363]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	339 -> 340	[key=0,
		edge_type=next,
		label=Next];
	341 -> 332	[key=0,
		edge_type=next,
		label=Next];
	342	[contract_name=WalletLibrary,
		function_fullname="underLimit(uint256)",
		label="parity_wallet_bug_2.sol_WalletLibrary_underLimit(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	342 -> 331	[key=0,
		edge_type=next,
		label=Next];
	343	[contract_name=WalletLibrary,
		function_fullname="today()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[367]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	344	[contract_name=WalletLibrary,
		function_fullname="today()",
		label="Node Type: RETURN

EXPRESSION:
now / 86400

IRs:
TMP_142(uint256) = now / 86400
RETURN TMP_142",
		node_expression="now / 86400",
		node_info_vulnerabilities=None,
		node_irs="TMP_142(uint256) = now / 86400
RETURN TMP_142",
		node_source_code_lines="[367]",
		node_type=RETURN,
		source_file="parity_wallet_bug_2.sol"];
	343 -> 344	[key=0,
		edge_type=next,
		label=Next];
	345	[contract_name=WalletLibrary,
		function_fullname="today()",
		label="parity_wallet_bug_2.sol_WalletLibrary_today()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[367]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	345 -> 343	[key=0,
		edge_type=next,
		label=Next];
	346	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	347	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
length = m_pendingIndex.length

IRs:
REF_97 -> LENGTH m_pendingIndex
length(uint256) := REF_\
97(uint256)",
		node_expression="length = m_pendingIndex.length",
		node_info_vulnerabilities=None,
		node_irs="REF_97 -> LENGTH m_pendingIndex
length(uint256) := REF_97(uint256)",
		node_source_code_lines="[370]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	346 -> 347	[key=0,
		edge_type=next,
		label=Next];
	350	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)",
		node_expression="i = 0",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) := 0(uint256)",
		node_source_code_lines="[372]",
		node_type="NEW VARIABLE",
		source_file="parity_wallet_bug_2.sol"];
	347 -> 350	[key=0,
		edge_type=next,
		label=Next];
	348	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[372, 373, 374, 375, 376, 377]",
		node_type=BEGIN_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	351	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: IF_LOOP

EXPRESSION:
i < length

IRs:
TMP_143(bool) = i < length
CONDITION TMP_143",
		node_expression="i < length",
		node_info_vulnerabilities=None,
		node_irs="TMP_143(bool) = i < length
CONDITION TMP_143",
		node_source_code_lines="[372]",
		node_type=IF_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	348 -> 351	[key=0,
		edge_type=next,
		label=Next];
	349	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[372, 373, 374, 375, 376, 377]",
		node_type=END_LOOP,
		source_file="parity_wallet_bug_2.sol"];
	357	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: EXPRESSION

EXPRESSION:
delete m_pendingIndex

IRs:
m_pendingIndex = delete m_pendingIndex ",
		node_expression="delete m_pendingIndex",
		node_info_vulnerabilities=None,
		node_irs="m_pendingIndex = delete m_pendingIndex ",
		node_source_code_lines="[379]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	349 -> 357	[key=0,
		edge_type=next,
		label=Next];
	350 -> 348	[key=0,
		edge_type=next,
		label=Next];
	351 -> 349	[key=0,
		edge_type=if_false,
		label=False];
	352	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: EXPRESSION

EXPRESSION:
delete m_txs[m_pendingIndex[i]]

IRs:
REF_98(bytes32) -> m_pendingIndex[i]
REF_99(WalletLibrary.Transaction) \
-> m_txs[REF_98]
m_txs = delete REF_99 ",
		node_expression="delete m_txs[m_pendingIndex[i]]",
		node_info_vulnerabilities=None,
		node_irs="REF_98(bytes32) -> m_pendingIndex[i]
REF_99(WalletLibrary.Transaction) -> m_txs[REF_98]
m_txs = delete REF_99 ",
		node_source_code_lines="[373]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	351 -> 352	[key=0,
		edge_type=if_true,
		label=True];
	353	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: IF

EXPRESSION:
m_pendingIndex[i] != 0

IRs:
REF_100(bytes32) -> m_pendingIndex[i]
TMP_144(bool) = REF_100 != 0
CONDITION \
TMP_144",
		node_expression="m_pendingIndex[i] != 0",
		node_info_vulnerabilities=None,
		node_irs="REF_100(bytes32) -> m_pendingIndex[i]
TMP_144(bool) = REF_100 != 0
CONDITION TMP_144",
		node_source_code_lines="[375]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	352 -> 353	[key=0,
		edge_type=next,
		label=Next];
	354	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: EXPRESSION

EXPRESSION:
delete m_pending[m_pendingIndex[i]]

IRs:
REF_101(bytes32) -> m_pendingIndex[i]
REF_102(WalletLibrary.PendingState) \
-> m_pending[REF_101]
m_pending = delete REF_102 ",
		node_expression="delete m_pending[m_pendingIndex[i]]",
		node_info_vulnerabilities=None,
		node_irs="REF_101(bytes32) -> m_pendingIndex[i]
REF_102(WalletLibrary.PendingState) -> m_pending[REF_101]
m_pending = delete REF_102 ",
		node_source_code_lines="[376]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	353 -> 354	[key=0,
		edge_type=if_true,
		label=True];
	355	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[375, 376]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	353 -> 355	[key=0,
		edge_type=if_false,
		label=False];
	354 -> 355	[key=0,
		edge_type=next,
		label=Next];
	356	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="Node Type: EXPRESSION

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1",
		node_expression="++ i",
		node_info_vulnerabilities=None,
		node_irs="i(uint256) = i + 1",
		node_source_code_lines="[372]",
		node_type=EXPRESSION,
		source_file="parity_wallet_bug_2.sol"];
	355 -> 356	[key=0,
		edge_type=next,
		label=Next];
	356 -> 351	[key=0,
		edge_type=next,
		label=Next];
	358	[contract_name=WalletLibrary,
		function_fullname="clearPending()",
		label="parity_wallet_bug_2.sol_WalletLibrary_clearPending()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	358 -> 346	[key=0,
		edge_type=next,
		label=Next];
	359	[contract_name=WalletLibrary,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
_walletLibrary = 0xcafecafecafecafecafecafecafecafecafecafe

IRs:
_walletLibrary(address) := \
1158898208370148791445375540046301417554592058110(uint256)",
		node_expression="_walletLibrary = 0xcafecafecafecafecafecafecafecafecafecafe",
		node_info_vulnerabilities=None,
		node_irs="_walletLibrary(address) := 1158898208370148791445375540046301417554592058110(uint256)",
		node_source_code_lines="[383]",
		node_type=OTHER_ENTRYPOINT,
		source_file="parity_wallet_bug_2.sol"];
	360	[contract_name=WalletLibrary,
		function_fullname="slitherConstructorConstantVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
c_maxOwners = 250

IRs:
c_maxOwners(uint256) := 250(uint256)",
		node_expression="c_maxOwners = 250",
		node_info_vulnerabilities=None,
		node_irs="c_maxOwners(uint256) := 250(uint256)",
		node_source_code_lines="[397]",
		node_type=OTHER_ENTRYPOINT,
		source_file="parity_wallet_bug_2.sol"];
	359 -> 360	[key=0,
		edge_type=next,
		label=Next];
	361	[contract_name=WalletLibrary,
		function_fullname="slitherConstructorConstantVariables()",
		label="parity_wallet_bug_2.sol_WalletLibrary_slitherConstructorConstantVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [226], 'category': 'access_control'}, {'lines': [233], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, \
102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, \
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, \
154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, \
180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, \
206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, \
232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, \
258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, \
284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, \
310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, \
336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, \
362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, \
388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	361 -> 359	[key=0,
		edge_type=next,
		label=Next];
	362	[contract_name=WalletLibrary,
		function_fullname="onlyowner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	363	[contract_name=WalletLibrary,
		function_fullname="onlyowner()",
		label="Node Type: IF

EXPRESSION:
isOwner(msg.sender)

IRs:
TMP_145(bool) = INTERNAL_CALL, WalletLibrary.isOwner(address)(msg.sender)
CONDITION \
TMP_145",
		node_expression="isOwner(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="TMP_145(bool) = INTERNAL_CALL, WalletLibrary.isOwner(address)(msg.sender)
CONDITION TMP_145",
		node_source_code_lines="[91]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	362 -> 363	[key=0,
		edge_type=next,
		label=Next];
	364	[contract_name=WalletLibrary,
		function_fullname="onlyowner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[92]",
		node_type=_,
		source_file="parity_wallet_bug_2.sol"];
	363 -> 364	[key=0,
		edge_type=if_true,
		label=True];
	365	[contract_name=WalletLibrary,
		function_fullname="onlyowner()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[91, 92]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	363 -> 365	[key=0,
		edge_type=if_false,
		label=False];
	364 -> 365	[key=0,
		edge_type=next,
		label=Next];
	366	[contract_name=WalletLibrary,
		function_fullname="onlyowner()",
		label="parity_wallet_bug_2.sol_WalletLibrary_onlyowner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[90, 91, 92, 93]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	366 -> 362	[key=0,
		edge_type=next,
		label=Next];
	367	[contract_name=WalletLibrary,
		function_fullname="onlymanyowners(bytes32)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[97, 98, 99, 100]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	368	[contract_name=WalletLibrary,
		function_fullname="onlymanyowners(bytes32)",
		label="Node Type: IF

EXPRESSION:
confirmAndCheck(_operation)

IRs:
TMP_146(bool) = INTERNAL_CALL, WalletLibrary.confirmAndCheck(bytes32)(_\
operation)
CONDITION TMP_146",
		node_expression="confirmAndCheck(_operation)",
		node_info_vulnerabilities=None,
		node_irs="TMP_146(bool) = INTERNAL_CALL, WalletLibrary.confirmAndCheck(bytes32)(_operation)
CONDITION TMP_146",
		node_source_code_lines="[98]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	367 -> 368	[key=0,
		edge_type=next,
		label=Next];
	369	[contract_name=WalletLibrary,
		function_fullname="onlymanyowners(bytes32)",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[99]",
		node_type=_,
		source_file="parity_wallet_bug_2.sol"];
	368 -> 369	[key=0,
		edge_type=if_true,
		label=True];
	370	[contract_name=WalletLibrary,
		function_fullname="onlymanyowners(bytes32)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[98, 99]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	368 -> 370	[key=0,
		edge_type=if_false,
		label=False];
	369 -> 370	[key=0,
		edge_type=next,
		label=Next];
	371	[contract_name=WalletLibrary,
		function_fullname="onlymanyowners(bytes32)",
		label="parity_wallet_bug_2.sol_WalletLibrary_onlymanyowners(bytes32)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[97, 98, 99, 100]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	371 -> 367	[key=0,
		edge_type=next,
		label=Next];
	372	[contract_name=WalletLibrary,
		function_fullname="only_uninitialized()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[221]",
		node_type=ENTRY_POINT,
		source_file="parity_wallet_bug_2.sol"];
	373	[contract_name=WalletLibrary,
		function_fullname="only_uninitialized()",
		label="Node Type: IF

EXPRESSION:
m_numOwners > 0

IRs:
TMP_147(bool) = m_numOwners > 0
CONDITION TMP_147",
		node_expression="m_numOwners > 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_147(bool) = m_numOwners > 0
CONDITION TMP_147",
		node_source_code_lines="[221]",
		node_type=IF,
		source_file="parity_wallet_bug_2.sol"];
	372 -> 373	[key=0,
		edge_type=next,
		label=Next];
	374	[contract_name=WalletLibrary,
		function_fullname="only_uninitialized()",
		label="Node Type: THROW
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[221]",
		node_type=THROW,
		source_file="parity_wallet_bug_2.sol"];
	373 -> 374	[key=0,
		edge_type=if_true,
		label=True];
	375	[contract_name=WalletLibrary,
		function_fullname="only_uninitialized()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[221]",
		node_type=END_IF,
		source_file="parity_wallet_bug_2.sol"];
	373 -> 375	[key=0,
		edge_type=if_false,
		label=False];
	376	[contract_name=WalletLibrary,
		function_fullname="only_uninitialized()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[221]",
		node_type=_,
		source_file="parity_wallet_bug_2.sol"];
	375 -> 376	[key=0,
		edge_type=next,
		label=Next];
	377	[contract_name=WalletLibrary,
		function_fullname="only_uninitialized()",
		label="parity_wallet_bug_2.sol_WalletLibrary_only_uninitialized()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[221]",
		node_type=FUNCTION_NAME,
		source_file="parity_wallet_bug_2.sol"];
	377 -> 372	[key=0,
		edge_type=next,
		label=Next];
	378	[contract_name=Wallet,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19, 20, 21]",
		node_type=ENTRY_POINT,
		source_file="wallet_04_confused_sign.sol"];
	379	[contract_name=Wallet,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
creator = msg.sender

IRs:
creator(address) := msg.sender(address)",
		node_expression="creator = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="creator(address) := msg.sender(address)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="wallet_04_confused_sign.sol"];
	378 -> 379	[key=0,
		edge_type=next,
		label=Next];
	380	[contract_name=Wallet,
		function_fullname="constructor()",
		label="wallet_04_confused_sign.sol_Wallet_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19, 20, 21]",
		node_type=FUNCTION_NAME,
		source_file="wallet_04_confused_sign.sol"];
	380 -> 378	[key=0,
		edge_type=next,
		label=Next];
	381	[contract_name=Wallet,
		function_fullname="deposit()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=ENTRY_POINT,
		source_file="wallet_04_confused_sign.sol"];
	382	[contract_name=Wallet,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(balances[msg.sender] + msg.value > balances[msg.sender])

IRs:
REF_0(uint256) -> \
balances[msg.sender]
TMP_0(uint256) = REF_0 + msg.value
REF_1(uint256) -> balances[msg.sender]
TMP_1(bool) = TMP_0 > REF_1
TMP_2(\
None) = SOLIDITY_CALL assert(bool)(TMP_1)",
		node_expression="assert(bool)(balances[msg.sender] + msg.value > balances[msg.sender])",
		node_info_vulnerabilities=None,
		node_irs="REF_0(uint256) -> balances[msg.sender]
TMP_0(uint256) = REF_0 + msg.value
REF_1(uint256) -> balances[msg.sender]
TMP_1(bool) = TMP_\
0 > REF_1
TMP_2(None) = SOLIDITY_CALL assert(bool)(TMP_1)",
		node_source_code_lines="[24]",
		node_type=EXPRESSION,
		source_file="wallet_04_confused_sign.sol"];
	381 -> 382	[key=0,
		edge_type=next,
		label=Next];
	383	[contract_name=Wallet,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] += msg.value

IRs:
REF_2(uint256) -> balances[msg.sender]
REF_2(-> balances) = \
REF_2 + msg.value",
		node_expression="balances[msg.sender] += msg.value",
		node_info_vulnerabilities=None,
		node_irs="REF_2(uint256) -> balances[msg.sender]
REF_2(-> balances) = REF_2 + msg.value",
		node_source_code_lines="[25]",
		node_type=EXPRESSION,
		source_file="wallet_04_confused_sign.sol"];
	382 -> 383	[key=0,
		edge_type=next,
		label=Next];
	384	[contract_name=Wallet,
		function_fullname="deposit()",
		label="wallet_04_confused_sign.sol_Wallet_deposit()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=FUNCTION_NAME,
		source_file="wallet_04_confused_sign.sol"];
	384 -> 381	[key=0,
		edge_type=next,
		label=Next];
	385	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [30], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31, 32, 33]",
		node_type=ENTRY_POINT,
		source_file="wallet_04_confused_sign.sol"];
	386	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(amount >= balances[msg.sender])

IRs:
REF_3(uint256) -> balances[msg.sender]
TMP_\
3(bool) = amount >= REF_3
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_expression="require(bool)(amount >= balances[msg.sender])",
		node_info_vulnerabilities="[{'lines': [30], 'category': 'access_control'}]",
		node_irs="REF_3(uint256) -> balances[msg.sender]
TMP_3(bool) = amount >= REF_3
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[30]",
		node_type=EXPRESSION,
		source_file="wallet_04_confused_sign.sol"];
	385 -> 386	[key=0,
		edge_type=next,
		label=Next];
	387	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(amount)

IRs:
Transfer dest:msg.sender value:amount",
		node_expression="msg.sender.transfer(amount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:msg.sender value:amount",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="wallet_04_confused_sign.sol"];
	386 -> 387	[key=0,
		edge_type=next,
		label=Next];
	388	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] -= amount

IRs:
REF_5(uint256) -> balances[msg.sender]
REF_5(-> balances) = \
REF_5 - amount",
		node_expression="balances[msg.sender] -= amount",
		node_info_vulnerabilities=None,
		node_irs="REF_5(uint256) -> balances[msg.sender]
REF_5(-> balances) = REF_5 - amount",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="wallet_04_confused_sign.sol"];
	387 -> 388	[key=0,
		edge_type=next,
		label=Next];
	389	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="wallet_04_confused_sign.sol_Wallet_withdraw(uint256)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [30], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31, 32, 33]",
		node_type=FUNCTION_NAME,
		source_file="wallet_04_confused_sign.sol"];
	389 -> 385	[key=0,
		edge_type=next,
		label=Next];
	390	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[37, 38, 39, 40]",
		node_type=ENTRY_POINT,
		source_file="wallet_04_confused_sign.sol"];
	391	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(creator == msg.sender)

IRs:
TMP_6(bool) = creator == msg.sender
TMP_7(None) = \
SOLIDITY_CALL require(bool)(TMP_6)",
		node_expression="require(bool)(creator == msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="TMP_6(bool) = creator == msg.sender
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_6)",
		node_source_code_lines="[38]",
		node_type=EXPRESSION,
		source_file="wallet_04_confused_sign.sol"];
	390 -> 391	[key=0,
		edge_type=next,
		label=Next];
	392	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.transfer(this.balance)

IRs:
REF_7 -> BALANCE this
Transfer dest:to value:REF_7",
		node_expression="to.transfer(this.balance)",
		node_info_vulnerabilities=None,
		node_irs="REF_7 -> BALANCE this
Transfer dest:to value:REF_7",
		node_source_code_lines="[39]",
		node_type=EXPRESSION,
		source_file="wallet_04_confused_sign.sol"];
	391 -> 392	[key=0,
		edge_type=next,
		label=Next];
	393	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="wallet_04_confused_sign.sol_Wallet_migrateTo(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[37, 38, 39, 40]",
		node_type=FUNCTION_NAME,
		source_file="wallet_04_confused_sign.sol"];
	393 -> 390	[key=0,
		edge_type=next,
		label=Next];
	394	[contract_name=Unprotected,
		function_fullname="Unprotected()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19, 20, 21]",
		node_type=ENTRY_POINT,
		source_file="unprotected0.sol"];
	395	[contract_name=Unprotected,
		function_fullname="Unprotected()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="unprotected0.sol"];
	394 -> 395	[key=0,
		edge_type=next,
		label=Next];
	396	[contract_name=Unprotected,
		function_fullname="Unprotected()",
		label="unprotected0.sol_Unprotected_Unprotected()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[17, 18, 19, 20, 21]",
		node_type=FUNCTION_NAME,
		source_file="unprotected0.sol"];
	396 -> 394	[key=0,
		edge_type=next,
		label=Next];
	397	[contract_name=Unprotected,
		function_fullname="changeOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29]",
		node_type=ENTRY_POINT,
		source_file="unprotected0.sol"];
	398	[contract_name=Unprotected,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = _newOwner

IRs:
owner(address) := _newOwner(address)",
		node_expression="owner = _newOwner",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := _newOwner(address)",
		node_source_code_lines="[28]",
		node_type=EXPRESSION,
		source_file="unprotected0.sol"];
	397 -> 398	[key=0,
		edge_type=next,
		label=Next];
	399	[contract_name=Unprotected,
		function_fullname="changeOwner(address)",
		label="unprotected0.sol_Unprotected_changeOwner(address)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [25], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[25, 26, 27, 28, 29]",
		node_type=FUNCTION_NAME,
		source_file="unprotected0.sol"];
	399 -> 397	[key=0,
		edge_type=next,
		label=Next];
	400	[contract_name=Unprotected,
		function_fullname="onlyowner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[12, 13, 14, 15]",
		node_type=ENTRY_POINT,
		source_file="unprotected0.sol"];
	401	[contract_name=Unprotected,
		function_fullname="onlyowner()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_0(bool) = msg.sender == owner
TMP_1(None) = SOLIDITY_\
CALL require(bool)(TMP_0)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_0(bool) = msg.sender == owner
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[13]",
		node_type=EXPRESSION,
		source_file="unprotected0.sol"];
	400 -> 401	[key=0,
		edge_type=next,
		label=Next];
	402	[contract_name=Unprotected,
		function_fullname="onlyowner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14]",
		node_type=_,
		source_file="unprotected0.sol"];
	401 -> 402	[key=0,
		edge_type=next,
		label=Next];
	403	[contract_name=Unprotected,
		function_fullname="onlyowner()",
		label="unprotected0.sol_Unprotected_onlyowner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[12, 13, 14, 15]",
		node_type=FUNCTION_NAME,
		source_file="unprotected0.sol"];
	403 -> 400	[key=0,
		edge_type=next,
		label=Next];
	404	[contract_name=Rubixi,
		function_fullname="DynamicPyramid()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [23, 24], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[23, 24, 25]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	405	[contract_name=Rubixi,
		function_fullname="DynamicPyramid()",
		label="Node Type: EXPRESSION

EXPRESSION:
creator = msg.sender

IRs:
creator(address) := msg.sender(address)",
		node_expression="creator = msg.sender",
		node_info_vulnerabilities="[{'lines': [23, 24], 'category': 'access_control'}]",
		node_irs="creator(address) := msg.sender(address)",
		node_source_code_lines="[24]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	404 -> 405	[key=0,
		edge_type=next,
		label=Next];
	406	[contract_name=Rubixi,
		function_fullname="DynamicPyramid()",
		label="rubixi.sol_Rubixi_DynamicPyramid()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [23, 24], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[23, 24, 25]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	406 -> 404	[key=0,
		edge_type=next,
		label=Next];
	407	[contract_name=Rubixi,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[39, 40, 41]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	408	[contract_name=Rubixi,
		function_fullname="fallback()",
		label="Node Type: EXPRESSION

EXPRESSION:
init()

IRs:
INTERNAL_CALL, Rubixi.init()()",
		node_expression="init()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Rubixi.init()()",
		node_source_code_lines="[40]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	407 -> 408	[key=0,
		edge_type=next,
		label=Next];
	409	[contract_name=Rubixi,
		function_fullname="fallback()",
		label="rubixi.sol_Rubixi_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[39, 40, 41]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	409 -> 407	[key=0,
		edge_type=next,
		label=Next];
	410	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	411	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: IF

EXPRESSION:
msg.value < 1000000000000000000

IRs:
TMP_1(bool) = msg.value < 1000000000000000000
CONDITION TMP_1",
		node_expression="msg.value < 1000000000000000000",
		node_info_vulnerabilities=None,
		node_irs="TMP_1(bool) = msg.value < 1000000000000000000
CONDITION TMP_1",
		node_source_code_lines="[46]",
		node_type=IF,
		source_file="rubixi.sol"];
	410 -> 411	[key=0,
		edge_type=next,
		label=Next];
	412	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: EXPRESSION

EXPRESSION:
collectedFees += msg.value

IRs:
collectedFees(uint256) = collectedFees + msg.value",
		node_expression="collectedFees += msg.value",
		node_info_vulnerabilities=None,
		node_irs="collectedFees(uint256) = collectedFees + msg.value",
		node_source_code_lines="[47]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	411 -> 412	[key=0,
		edge_type=if_true,
		label=True];
	414	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[46, 47, 48, 49]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	411 -> 414	[key=0,
		edge_type=if_false,
		label=False];
	413	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: RETURN
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[48]",
		node_type=RETURN,
		source_file="rubixi.sol"];
	412 -> 413	[key=0,
		edge_type=next,
		label=Next];
	415	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: NEW VARIABLE

EXPRESSION:
_fee = feePercent

IRs:
_fee(uint256) := feePercent(uint256)",
		node_expression="_fee = feePercent",
		node_info_vulnerabilities=None,
		node_irs="_fee(uint256) := feePercent(uint256)",
		node_source_code_lines="[51]",
		node_type="NEW VARIABLE",
		source_file="rubixi.sol"];
	414 -> 415	[key=0,
		edge_type=next,
		label=Next];
	416	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: IF

EXPRESSION:
msg.value >= 50000000000000000000

IRs:
TMP_2(bool) = msg.value >= 50000000000000000000
CONDITION TMP_\
2",
		node_expression="msg.value >= 50000000000000000000",
		node_info_vulnerabilities=None,
		node_irs="TMP_2(bool) = msg.value >= 50000000000000000000
CONDITION TMP_2",
		node_source_code_lines="[53]",
		node_type=IF,
		source_file="rubixi.sol"];
	415 -> 416	[key=0,
		edge_type=next,
		label=Next];
	417	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: EXPRESSION

EXPRESSION:
_fee /= 2

IRs:
_fee(uint256) = _fee / 2",
		node_expression="_fee /= 2",
		node_info_vulnerabilities=None,
		node_irs="_fee(uint256) = _fee / 2",
		node_source_code_lines="[53]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	416 -> 417	[key=0,
		edge_type=if_true,
		label=True];
	418	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[53]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	416 -> 418	[key=0,
		edge_type=if_false,
		label=False];
	417 -> 418	[key=0,
		edge_type=next,
		label=Next];
	419	[contract_name=Rubixi,
		function_fullname="init()",
		label="Node Type: EXPRESSION

EXPRESSION:
addPayout(_fee)

IRs:
INTERNAL_CALL, Rubixi.addPayout(uint256)(_fee)",
		node_expression="addPayout(_fee)",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Rubixi.addPayout(uint256)(_fee)",
		node_source_code_lines="[55]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	418 -> 419	[key=0,
		edge_type=next,
		label=Next];
	420	[contract_name=Rubixi,
		function_fullname="init()",
		label="rubixi.sol_Rubixi_init()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	420 -> 410	[key=0,
		edge_type=next,
		label=Next];
	421	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	422	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
participants.push(Participant(msg.sender,(msg.value * pyramidMultiplier) / 100))

IRs:
TMP_4(\
uint256) = msg.value * pyramidMultiplier
TMP_5(uint256) = TMP_4 / 100
TMP_6 = new Participant(msg.sender,TMP_5)
REF_1 -> LENGTH \
participants
TMP_8(uint256) := REF_1(uint256)
TMP_9(uint256) = TMP_8 + 1
REF_1 (->participants) := TMP_9(uint256)
REF_2(Rubixi.Participant) \
-> participants[TMP_8]
REF_2 (->participants) := TMP_6(Rubixi.Participant)",
		node_expression="participants.push(Participant(msg.sender,(msg.value * pyramidMultiplier) / 100))",
		node_info_vulnerabilities=None,
		node_irs="TMP_4(uint256) = msg.value * pyramidMultiplier
TMP_5(uint256) = TMP_4 / 100
TMP_6 = new Participant(msg.sender,TMP_5)
REF_1 -> LENGTH \
participants
TMP_8(uint256) := REF_1(uint256)
TMP_9(uint256) = TMP_8 + 1
REF_1 (->participants) := TMP_9(uint256)
REF_2(Rubixi.Participant) \
-> participants[TMP_8]
REF_2 (->participants) := TMP_6(Rubixi.Participant)",
		node_source_code_lines="[61]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	421 -> 422	[key=0,
		edge_type=next,
		label=Next];
	423	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: IF

EXPRESSION:
participants.length == 10

IRs:
REF_3 -> LENGTH participants
TMP_10(bool) = REF_3 == 10
CONDITION TMP_\
10",
		node_expression="participants.length == 10",
		node_info_vulnerabilities=None,
		node_irs="REF_3 -> LENGTH participants
TMP_10(bool) = REF_3 == 10
CONDITION TMP_10",
		node_source_code_lines="[64]",
		node_type=IF,
		source_file="rubixi.sol"];
	422 -> 423	[key=0,
		edge_type=next,
		label=Next];
	424	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
pyramidMultiplier = 200

IRs:
pyramidMultiplier(uint256) := 200(uint256)",
		node_expression="pyramidMultiplier = 200",
		node_info_vulnerabilities=None,
		node_irs="pyramidMultiplier(uint256) := 200(uint256)",
		node_source_code_lines="[64]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	423 -> 424	[key=0,
		edge_type=if_true,
		label=True];
	425	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: IF

EXPRESSION:
participants.length == 25

IRs:
REF_4 -> LENGTH participants
TMP_11(bool) = REF_4 == 25
CONDITION TMP_\
11",
		node_expression="participants.length == 25",
		node_info_vulnerabilities=None,
		node_irs="REF_4 -> LENGTH participants
TMP_11(bool) = REF_4 == 25
CONDITION TMP_11",
		node_source_code_lines="[65]",
		node_type=IF,
		source_file="rubixi.sol"];
	423 -> 425	[key=0,
		edge_type=if_false,
		label=False];
	428	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[64, 65]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	424 -> 428	[key=0,
		edge_type=next,
		label=Next];
	426	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
pyramidMultiplier = 150

IRs:
pyramidMultiplier(uint256) := 150(uint256)",
		node_expression="pyramidMultiplier = 150",
		node_info_vulnerabilities=None,
		node_irs="pyramidMultiplier(uint256) := 150(uint256)",
		node_source_code_lines="[65]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	425 -> 426	[key=0,
		edge_type=if_true,
		label=True];
	427	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[65]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	425 -> 427	[key=0,
		edge_type=if_false,
		label=False];
	426 -> 427	[key=0,
		edge_type=next,
		label=Next];
	427 -> 428	[key=0,
		edge_type=next,
		label=Next];
	429	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balance += (msg.value * (100 - _fee)) / 100

IRs:
TMP_12(uint256) = 100 - _fee
TMP_13(uint256) = \
msg.value * TMP_12
TMP_14(uint256) = TMP_13 / 100
balance(uint256) = balance + TMP_14",
		node_expression="balance += (msg.value * (100 - _fee)) / 100",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(uint256) = 100 - _fee
TMP_13(uint256) = msg.value * TMP_12
TMP_14(uint256) = TMP_13 / 100
balance(uint256) = balance + TMP_\
14",
		node_source_code_lines="[68]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	428 -> 429	[key=0,
		edge_type=next,
		label=Next];
	430	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
collectedFees += (msg.value * _fee) / 100

IRs:
TMP_15(uint256) = msg.value * _fee
TMP_16(uint256) = \
TMP_15 / 100
collectedFees(uint256) = collectedFees + TMP_16",
		node_expression="collectedFees += (msg.value * _fee) / 100",
		node_info_vulnerabilities=None,
		node_irs="TMP_15(uint256) = msg.value * _fee
TMP_16(uint256) = TMP_15 / 100
collectedFees(uint256) = collectedFees + TMP_16",
		node_source_code_lines="[69]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	429 -> 430	[key=0,
		edge_type=next,
		label=Next];
	431	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: BEGIN_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[72, 73, 74, 75, 76, 77, 78]",
		node_type=BEGIN_LOOP,
		source_file="rubixi.sol"];
	430 -> 431	[key=0,
		edge_type=next,
		label=Next];
	432	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: IF_LOOP

EXPRESSION:
balance > participants[payoutOrder].payout

IRs:
REF_5(Rubixi.Participant) -> participants[payoutOrder]
\
REF_6(uint256) -> REF_5.payout
TMP_17(bool) = balance > REF_6
CONDITION TMP_17",
		node_expression="balance > participants[payoutOrder].payout",
		node_info_vulnerabilities=None,
		node_irs="REF_5(Rubixi.Participant) -> participants[payoutOrder]
REF_6(uint256) -> REF_5.payout
TMP_17(bool) = balance > REF_6
CONDITION TMP_\
17",
		node_source_code_lines="[72]",
		node_type=IF_LOOP,
		source_file="rubixi.sol"];
	431 -> 432	[key=0,
		edge_type=next,
		label=Next];
	433	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
payoutToSend = participants[payoutOrder].payout

IRs:
REF_7(Rubixi.Participant) -> participants[\
payoutOrder]
REF_8(uint256) -> REF_7.payout
payoutToSend(uint256) := REF_8(uint256)",
		node_expression="payoutToSend = participants[payoutOrder].payout",
		node_info_vulnerabilities=None,
		node_irs="REF_7(Rubixi.Participant) -> participants[payoutOrder]
REF_8(uint256) -> REF_7.payout
payoutToSend(uint256) := REF_8(uint256)",
		node_source_code_lines="[73]",
		node_type="NEW VARIABLE",
		source_file="rubixi.sol"];
	432 -> 433	[key=0,
		edge_type=if_true,
		label=True];
	437	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: END_LOOP
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[72, 73, 74, 75, 76, 77, 78]",
		node_type=END_LOOP,
		source_file="rubixi.sol"];
	432 -> 437	[key=0,
		edge_type=if_false,
		label=False];
	434	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
participants[payoutOrder].etherAddress.send(payoutToSend)

IRs:
REF_9(Rubixi.Participant) -> \
participants[payoutOrder]
REF_10(address) -> REF_9.etherAddress
TMP_18 = SEND dest:REF_10 value:payoutToSend",
		node_expression="participants[payoutOrder].etherAddress.send(payoutToSend)",
		node_info_vulnerabilities=None,
		node_irs="REF_9(Rubixi.Participant) -> participants[payoutOrder]
REF_10(address) -> REF_9.etherAddress
TMP_18 = SEND dest:REF_10 value:payoutToSend",
		node_source_code_lines="[74]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	433 -> 434	[key=0,
		edge_type=next,
		label=Next];
	435	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balance -= participants[payoutOrder].payout

IRs:
REF_12(Rubixi.Participant) -> participants[\
payoutOrder]
REF_13(uint256) -> REF_12.payout
balance(uint256) = balance - REF_13",
		node_expression="balance -= participants[payoutOrder].payout",
		node_info_vulnerabilities=None,
		node_irs="REF_12(Rubixi.Participant) -> participants[payoutOrder]
REF_13(uint256) -> REF_12.payout
balance(uint256) = balance - REF_13",
		node_source_code_lines="[76]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	434 -> 435	[key=0,
		edge_type=next,
		label=Next];
	436	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
payoutOrder += 1

IRs:
payoutOrder(uint256) = payoutOrder + 1",
		node_expression="payoutOrder += 1",
		node_info_vulnerabilities=None,
		node_irs="payoutOrder(uint256) = payoutOrder + 1",
		node_source_code_lines="[77]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	435 -> 436	[key=0,
		edge_type=next,
		label=Next];
	436 -> 432	[key=0,
		edge_type=next,
		label=Next];
	438	[contract_name=Rubixi,
		function_fullname="addPayout(uint256)",
		label="rubixi.sol_Rubixi_addPayout(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	438 -> 421	[key=0,
		edge_type=next,
		label=Next];
	439	[contract_name=Rubixi,
		function_fullname="collectAllFees()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[82, 83, 84, 85, 86, 87]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	445	[contract_name=Rubixi,
		function_fullname="collectAllFees()",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, Rubixi.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Rubixi.onlyowner()()",
		node_source_code_lines="[82]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	439 -> 445	[key=0,
		edge_type=next,
		label=Next];
	440	[contract_name=Rubixi,
		function_fullname="collectAllFees()",
		label="Node Type: IF

EXPRESSION:
collectedFees == 0

IRs:
TMP_19(bool) = collectedFees == 0
CONDITION TMP_19",
		node_expression="collectedFees == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_19(bool) = collectedFees == 0
CONDITION TMP_19",
		node_source_code_lines="[83]",
		node_type=IF,
		source_file="rubixi.sol"];
	441	[contract_name=Rubixi,
		function_fullname="collectAllFees()",
		label="Node Type: THROW
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[83]",
		node_type=THROW,
		source_file="rubixi.sol"];
	440 -> 441	[key=0,
		edge_type=if_true,
		label=True];
	442	[contract_name=Rubixi,
		function_fullname="collectAllFees()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[83]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	440 -> 442	[key=0,
		edge_type=if_false,
		label=False];
	443	[contract_name=Rubixi,
		function_fullname="collectAllFees()",
		label="Node Type: EXPRESSION

EXPRESSION:
creator.send(collectedFees)

IRs:
TMP_20 = SEND dest:creator value:collectedFees",
		node_expression="creator.send(collectedFees)",
		node_info_vulnerabilities=None,
		node_irs="TMP_20 = SEND dest:creator value:collectedFees",
		node_source_code_lines="[85]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	442 -> 443	[key=0,
		edge_type=next,
		label=Next];
	444	[contract_name=Rubixi,
		function_fullname="collectAllFees()",
		label="Node Type: EXPRESSION

EXPRESSION:
collectedFees = 0

IRs:
collectedFees(uint256) := 0(uint256)",
		node_expression="collectedFees = 0",
		node_info_vulnerabilities=None,
		node_irs="collectedFees(uint256) := 0(uint256)",
		node_source_code_lines="[86]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	443 -> 444	[key=0,
		edge_type=next,
		label=Next];
	445 -> 440	[key=0,
		edge_type=next,
		label=Next];
	446	[contract_name=Rubixi,
		function_fullname="collectAllFees()",
		label="rubixi.sol_Rubixi_collectAllFees()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[82, 83, 84, 85, 86, 87]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	446 -> 439	[key=0,
		edge_type=next,
		label=Next];
	447	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[89, 90, 91, 92, 93, 94, 95, 96, 97]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	457	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, Rubixi.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Rubixi.onlyowner()()",
		node_source_code_lines="[89]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	447 -> 457	[key=0,
		edge_type=next,
		label=Next];
	448	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
_amt *= 1000000000000000000

IRs:
_amt(uint256) = _amt * 1000000000000000000",
		node_expression="_amt *= 1000000000000000000",
		node_info_vulnerabilities=None,
		node_irs="_amt(uint256) = _amt * 1000000000000000000",
		node_source_code_lines="[90]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	449	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: IF

EXPRESSION:
_amt > collectedFees

IRs:
TMP_22(bool) = _amt > collectedFees
CONDITION TMP_22",
		node_expression="_amt > collectedFees",
		node_info_vulnerabilities=None,
		node_irs="TMP_22(bool) = _amt > collectedFees
CONDITION TMP_22",
		node_source_code_lines="[91]",
		node_type=IF,
		source_file="rubixi.sol"];
	448 -> 449	[key=0,
		edge_type=next,
		label=Next];
	450	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
collectAllFees()

IRs:
INTERNAL_CALL, Rubixi.collectAllFees()()",
		node_expression="collectAllFees()",
		node_info_vulnerabilities=None,
		node_irs="INTERNAL_CALL, Rubixi.collectAllFees()()",
		node_source_code_lines="[91]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	449 -> 450	[key=0,
		edge_type=if_true,
		label=True];
	451	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[91]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	449 -> 451	[key=0,
		edge_type=if_false,
		label=False];
	450 -> 451	[key=0,
		edge_type=next,
		label=Next];
	452	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: IF

EXPRESSION:
collectedFees == 0

IRs:
TMP_24(bool) = collectedFees == 0
CONDITION TMP_24",
		node_expression="collectedFees == 0",
		node_info_vulnerabilities=None,
		node_irs="TMP_24(bool) = collectedFees == 0
CONDITION TMP_24",
		node_source_code_lines="[93]",
		node_type=IF,
		source_file="rubixi.sol"];
	451 -> 452	[key=0,
		edge_type=next,
		label=Next];
	453	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: THROW
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[93]",
		node_type=THROW,
		source_file="rubixi.sol"];
	452 -> 453	[key=0,
		edge_type=if_true,
		label=True];
	454	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[93]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	452 -> 454	[key=0,
		edge_type=if_false,
		label=False];
	455	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
creator.send(_amt)

IRs:
TMP_25 = SEND dest:creator value:_amt",
		node_expression="creator.send(_amt)",
		node_info_vulnerabilities=None,
		node_irs="TMP_25 = SEND dest:creator value:_amt",
		node_source_code_lines="[95]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	454 -> 455	[key=0,
		edge_type=next,
		label=Next];
	456	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
collectedFees -= _amt

IRs:
collectedFees(uint256) = collectedFees - _amt",
		node_expression="collectedFees -= _amt",
		node_info_vulnerabilities=None,
		node_irs="collectedFees(uint256) = collectedFees - _amt",
		node_source_code_lines="[96]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	455 -> 456	[key=0,
		edge_type=next,
		label=Next];
	457 -> 448	[key=0,
		edge_type=next,
		label=Next];
	458	[contract_name=Rubixi,
		function_fullname="collectFeesInEther(uint256)",
		label="rubixi.sol_Rubixi_collectFeesInEther(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[89, 90, 91, 92, 93, 94, 95, 96, 97]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	458 -> 447	[key=0,
		edge_type=next,
		label=Next];
	459	[contract_name=Rubixi,
		function_fullname="collectPercentOfFees(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[99, 100, 101, 102, 103, 104, 105]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	466	[contract_name=Rubixi,
		function_fullname="collectPercentOfFees(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, Rubixi.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Rubixi.onlyowner()()",
		node_source_code_lines="[99]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	459 -> 466	[key=0,
		edge_type=next,
		label=Next];
	460	[contract_name=Rubixi,
		function_fullname="collectPercentOfFees(uint256)",
		label="Node Type: IF

EXPRESSION:
collectedFees == 0 || _pcent > 100

IRs:
TMP_27(bool) = collectedFees == 0
TMP_28(bool) = _pcent > 100
\
TMP_29(bool) = TMP_27 || TMP_28
CONDITION TMP_29",
		node_expression="collectedFees == 0 || _pcent > 100",
		node_info_vulnerabilities=None,
		node_irs="TMP_27(bool) = collectedFees == 0
TMP_28(bool) = _pcent > 100
TMP_29(bool) = TMP_27 || TMP_28
CONDITION TMP_29",
		node_source_code_lines="[100]",
		node_type=IF,
		source_file="rubixi.sol"];
	461	[contract_name=Rubixi,
		function_fullname="collectPercentOfFees(uint256)",
		label="Node Type: THROW
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[100]",
		node_type=THROW,
		source_file="rubixi.sol"];
	460 -> 461	[key=0,
		edge_type=if_true,
		label=True];
	462	[contract_name=Rubixi,
		function_fullname="collectPercentOfFees(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[100]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	460 -> 462	[key=0,
		edge_type=if_false,
		label=False];
	463	[contract_name=Rubixi,
		function_fullname="collectPercentOfFees(uint256)",
		label="Node Type: NEW VARIABLE

EXPRESSION:
feesToCollect = collectedFees / 100 * _pcent

IRs:
TMP_30(uint256) = collectedFees / 100
TMP_\
31(uint256) = TMP_30 * _pcent
feesToCollect(uint256) := TMP_31(uint256)",
		node_expression="feesToCollect = collectedFees / 100 * _pcent",
		node_info_vulnerabilities=None,
		node_irs="TMP_30(uint256) = collectedFees / 100
TMP_31(uint256) = TMP_30 * _pcent
feesToCollect(uint256) := TMP_31(uint256)",
		node_source_code_lines="[102]",
		node_type="NEW VARIABLE",
		source_file="rubixi.sol"];
	462 -> 463	[key=0,
		edge_type=next,
		label=Next];
	464	[contract_name=Rubixi,
		function_fullname="collectPercentOfFees(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
creator.send(feesToCollect)

IRs:
TMP_32 = SEND dest:creator value:feesToCollect",
		node_expression="creator.send(feesToCollect)",
		node_info_vulnerabilities=None,
		node_irs="TMP_32 = SEND dest:creator value:feesToCollect",
		node_source_code_lines="[103]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	463 -> 464	[key=0,
		edge_type=next,
		label=Next];
	465	[contract_name=Rubixi,
		function_fullname="collectPercentOfFees(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
collectedFees -= feesToCollect

IRs:
collectedFees(uint256) = collectedFees - feesToCollect",
		node_expression="collectedFees -= feesToCollect",
		node_info_vulnerabilities=None,
		node_irs="collectedFees(uint256) = collectedFees - feesToCollect",
		node_source_code_lines="[104]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	464 -> 465	[key=0,
		edge_type=next,
		label=Next];
	466 -> 460	[key=0,
		edge_type=next,
		label=Next];
	467	[contract_name=Rubixi,
		function_fullname="collectPercentOfFees(uint256)",
		label="rubixi.sol_Rubixi_collectPercentOfFees(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[99, 100, 101, 102, 103, 104, 105]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	467 -> 459	[key=0,
		edge_type=next,
		label=Next];
	468	[contract_name=Rubixi,
		function_fullname="changeOwner(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[108, 109, 110]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	470	[contract_name=Rubixi,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, Rubixi.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Rubixi.onlyowner()()",
		node_source_code_lines="[108]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	468 -> 470	[key=0,
		edge_type=next,
		label=Next];
	469	[contract_name=Rubixi,
		function_fullname="changeOwner(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
creator = _owner

IRs:
creator(address) := _owner(address)",
		node_expression="creator = _owner",
		node_info_vulnerabilities=None,
		node_irs="creator(address) := _owner(address)",
		node_source_code_lines="[109]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	470 -> 469	[key=0,
		edge_type=next,
		label=Next];
	471	[contract_name=Rubixi,
		function_fullname="changeOwner(address)",
		label="rubixi.sol_Rubixi_changeOwner(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[108, 109, 110]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	471 -> 468	[key=0,
		edge_type=next,
		label=Next];
	472	[contract_name=Rubixi,
		function_fullname="changeMultiplier(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[112, 113, 114, 115, 116]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	477	[contract_name=Rubixi,
		function_fullname="changeMultiplier(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, Rubixi.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Rubixi.onlyowner()()",
		node_source_code_lines="[112]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	472 -> 477	[key=0,
		edge_type=next,
		label=Next];
	473	[contract_name=Rubixi,
		function_fullname="changeMultiplier(uint256)",
		label="Node Type: IF

EXPRESSION:
_mult > 300 || _mult < 120

IRs:
TMP_35(bool) = _mult > 300
TMP_36(bool) = _mult < 120
TMP_37(bool) = \
TMP_35 || TMP_36
CONDITION TMP_37",
		node_expression="_mult > 300 || _mult < 120",
		node_info_vulnerabilities=None,
		node_irs="TMP_35(bool) = _mult > 300
TMP_36(bool) = _mult < 120
TMP_37(bool) = TMP_35 || TMP_36
CONDITION TMP_37",
		node_source_code_lines="[113]",
		node_type=IF,
		source_file="rubixi.sol"];
	474	[contract_name=Rubixi,
		function_fullname="changeMultiplier(uint256)",
		label="Node Type: THROW
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[113]",
		node_type=THROW,
		source_file="rubixi.sol"];
	473 -> 474	[key=0,
		edge_type=if_true,
		label=True];
	475	[contract_name=Rubixi,
		function_fullname="changeMultiplier(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[113]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	473 -> 475	[key=0,
		edge_type=if_false,
		label=False];
	476	[contract_name=Rubixi,
		function_fullname="changeMultiplier(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
pyramidMultiplier = _mult

IRs:
pyramidMultiplier(uint256) := _mult(uint256)",
		node_expression="pyramidMultiplier = _mult",
		node_info_vulnerabilities=None,
		node_irs="pyramidMultiplier(uint256) := _mult(uint256)",
		node_source_code_lines="[115]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	475 -> 476	[key=0,
		edge_type=next,
		label=Next];
	477 -> 473	[key=0,
		edge_type=next,
		label=Next];
	478	[contract_name=Rubixi,
		function_fullname="changeMultiplier(uint256)",
		label="rubixi.sol_Rubixi_changeMultiplier(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[112, 113, 114, 115, 116]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	478 -> 472	[key=0,
		edge_type=next,
		label=Next];
	479	[contract_name=Rubixi,
		function_fullname="changeFeePercentage(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120, 121, 122]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	484	[contract_name=Rubixi,
		function_fullname="changeFeePercentage(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, Rubixi.onlyowner()()",
		node_expression="onlyowner()",
		node_info_vulnerabilities=None,
		node_irs="MODIFIER_CALL, Rubixi.onlyowner()()",
		node_source_code_lines="[118]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	479 -> 484	[key=0,
		edge_type=next,
		label=Next];
	480	[contract_name=Rubixi,
		function_fullname="changeFeePercentage(uint256)",
		label="Node Type: IF

EXPRESSION:
_fee > 10

IRs:
TMP_39(bool) = _fee > 10
CONDITION TMP_39",
		node_expression="_fee > 10",
		node_info_vulnerabilities=None,
		node_irs="TMP_39(bool) = _fee > 10
CONDITION TMP_39",
		node_source_code_lines="[119]",
		node_type=IF,
		source_file="rubixi.sol"];
	481	[contract_name=Rubixi,
		function_fullname="changeFeePercentage(uint256)",
		label="Node Type: THROW
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[119]",
		node_type=THROW,
		source_file="rubixi.sol"];
	480 -> 481	[key=0,
		edge_type=if_true,
		label=True];
	482	[contract_name=Rubixi,
		function_fullname="changeFeePercentage(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[119]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	480 -> 482	[key=0,
		edge_type=if_false,
		label=False];
	483	[contract_name=Rubixi,
		function_fullname="changeFeePercentage(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
feePercent = _fee

IRs:
feePercent(uint256) := _fee(uint256)",
		node_expression="feePercent = _fee",
		node_info_vulnerabilities=None,
		node_irs="feePercent(uint256) := _fee(uint256)",
		node_source_code_lines="[121]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	482 -> 483	[key=0,
		edge_type=next,
		label=Next];
	484 -> 480	[key=0,
		edge_type=next,
		label=Next];
	485	[contract_name=Rubixi,
		function_fullname="changeFeePercentage(uint256)",
		label="rubixi.sol_Rubixi_changeFeePercentage(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[118, 119, 120, 121, 122]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	485 -> 479	[key=0,
		edge_type=next,
		label=Next];
	486	[contract_name=Rubixi,
		function_fullname="currentMultiplier()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[125, 126, 127, 128]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	487	[contract_name=Rubixi,
		function_fullname="currentMultiplier()",
		label="Node Type: EXPRESSION

EXPRESSION:
multiplier = pyramidMultiplier

IRs:
multiplier(uint256) := pyramidMultiplier(uint256)",
		node_expression="multiplier = pyramidMultiplier",
		node_info_vulnerabilities=None,
		node_irs="multiplier(uint256) := pyramidMultiplier(uint256)",
		node_source_code_lines="[126]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	486 -> 487	[key=0,
		edge_type=next,
		label=Next];
	488	[contract_name=Rubixi,
		function_fullname="currentMultiplier()",
		label="Node Type: EXPRESSION

EXPRESSION:
info = This multiplier applies to you as soon as transaction is received, may be lowered to hasten \
payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. \
250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.

IRs:
info(string) := This multiplier applies to you as soon as \
transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, \
multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.(string)",
		node_expression="info = This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts \
are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. \
Capped at 3x max and 1.2x min.",
		node_info_vulnerabilities=None,
		node_irs="info(string) := This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased \
if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x \
multiplier. Capped at 3x max and 1.2x min.(string)",
		node_source_code_lines="[127]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	487 -> 488	[key=0,
		edge_type=next,
		label=Next];
	489	[contract_name=Rubixi,
		function_fullname="currentMultiplier()",
		label="rubixi.sol_Rubixi_currentMultiplier()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[125, 126, 127, 128]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	489 -> 486	[key=0,
		edge_type=next,
		label=Next];
	490	[contract_name=Rubixi,
		function_fullname="currentFeePercentage()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[130, 131, 132, 133]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	491	[contract_name=Rubixi,
		function_fullname="currentFeePercentage()",
		label="Node Type: EXPRESSION

EXPRESSION:
fee = feePercent

IRs:
fee(uint256) := feePercent(uint256)",
		node_expression="fee = feePercent",
		node_info_vulnerabilities=None,
		node_irs="fee(uint256) := feePercent(uint256)",
		node_source_code_lines="[131]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	490 -> 491	[key=0,
		edge_type=next,
		label=Next];
	492	[contract_name=Rubixi,
		function_fullname="currentFeePercentage()",
		label="Node Type: EXPRESSION

EXPRESSION:
info = Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee \
may change, but is capped to a maximum of 10%)

IRs:
info(string) := Shown in % form. Fee is halved(50%) for amounts equal or greater \
than 50 ethers. (Fee may change, but is capped to a maximum of 10%)(string)",
		node_expression="info = Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum \
of 10%)",
		node_info_vulnerabilities=None,
		node_irs="info(string) := Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped \
to a maximum of 10%)(string)",
		node_source_code_lines="[132]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	491 -> 492	[key=0,
		edge_type=next,
		label=Next];
	493	[contract_name=Rubixi,
		function_fullname="currentFeePercentage()",
		label="rubixi.sol_Rubixi_currentFeePercentage()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[130, 131, 132, 133]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	493 -> 490	[key=0,
		edge_type=next,
		label=Next];
	494	[contract_name=Rubixi,
		function_fullname="currentPyramidBalanceApproximately()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[135, 136, 137, 138]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	495	[contract_name=Rubixi,
		function_fullname="currentPyramidBalanceApproximately()",
		label="Node Type: EXPRESSION

EXPRESSION:
pyramidBalance = balance / 1000000000000000000

IRs:
TMP_41(uint256) = balance / 1000000000000000000
\
pyramidBalance(uint256) := TMP_41(uint256)",
		node_expression="pyramidBalance = balance / 1000000000000000000",
		node_info_vulnerabilities=None,
		node_irs="TMP_41(uint256) = balance / 1000000000000000000
pyramidBalance(uint256) := TMP_41(uint256)",
		node_source_code_lines="[136]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	494 -> 495	[key=0,
		edge_type=next,
		label=Next];
	496	[contract_name=Rubixi,
		function_fullname="currentPyramidBalanceApproximately()",
		label="Node Type: EXPRESSION

EXPRESSION:
info = All balance values are measured in Ethers, note that due to no decimal placing, these \
values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to

IRs:
info(\
string) := All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, \
within the contract itself you will get the exact decimal value you are supposed to(string)",
		node_expression="info = All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within \
the contract itself you will get the exact decimal value you are supposed to",
		node_info_vulnerabilities=None,
		node_irs="info(string) := All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers \
only, within the contract itself you will get the exact decimal value you are supposed to(string)",
		node_source_code_lines="[137]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	495 -> 496	[key=0,
		edge_type=next,
		label=Next];
	497	[contract_name=Rubixi,
		function_fullname="currentPyramidBalanceApproximately()",
		label="rubixi.sol_Rubixi_currentPyramidBalanceApproximately()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[135, 136, 137, 138]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	497 -> 494	[key=0,
		edge_type=next,
		label=Next];
	498	[contract_name=Rubixi,
		function_fullname="nextPayoutWhenPyramidBalanceTotalsApproximately()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[140, 141, 142]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	499	[contract_name=Rubixi,
		function_fullname="nextPayoutWhenPyramidBalanceTotalsApproximately()",
		label="Node Type: EXPRESSION

EXPRESSION:
balancePayout = participants[payoutOrder].payout / 1000000000000000000

IRs:
REF_17(Rubixi.Participant) \
-> participants[payoutOrder]
REF_18(uint256) -> REF_17.payout
TMP_42(uint256) = REF_18 / 1000000000000000000
balancePayout(uint256) := \
TMP_42(uint256)",
		node_expression="balancePayout = participants[payoutOrder].payout / 1000000000000000000",
		node_info_vulnerabilities=None,
		node_irs="REF_17(Rubixi.Participant) -> participants[payoutOrder]
REF_18(uint256) -> REF_17.payout
TMP_42(uint256) = REF_18 / 1000000000000000000
\
balancePayout(uint256) := TMP_42(uint256)",
		node_source_code_lines="[141]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	498 -> 499	[key=0,
		edge_type=next,
		label=Next];
	500	[contract_name=Rubixi,
		function_fullname="nextPayoutWhenPyramidBalanceTotalsApproximately()",
		label="rubixi.sol_Rubixi_nextPayoutWhenPyramidBalanceTotalsApproximately()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[140, 141, 142]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	500 -> 498	[key=0,
		edge_type=next,
		label=Next];
	501	[contract_name=Rubixi,
		function_fullname="feesSeperateFromBalanceApproximately()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[144, 145, 146]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	502	[contract_name=Rubixi,
		function_fullname="feesSeperateFromBalanceApproximately()",
		label="Node Type: EXPRESSION

EXPRESSION:
fees = collectedFees / 1000000000000000000

IRs:
TMP_43(uint256) = collectedFees / 1000000000000000000
\
fees(uint256) := TMP_43(uint256)",
		node_expression="fees = collectedFees / 1000000000000000000",
		node_info_vulnerabilities=None,
		node_irs="TMP_43(uint256) = collectedFees / 1000000000000000000
fees(uint256) := TMP_43(uint256)",
		node_source_code_lines="[145]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	501 -> 502	[key=0,
		edge_type=next,
		label=Next];
	503	[contract_name=Rubixi,
		function_fullname="feesSeperateFromBalanceApproximately()",
		label="rubixi.sol_Rubixi_feesSeperateFromBalanceApproximately()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[144, 145, 146]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	503 -> 501	[key=0,
		edge_type=next,
		label=Next];
	504	[contract_name=Rubixi,
		function_fullname="totalParticipants()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[148, 149, 150]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	505	[contract_name=Rubixi,
		function_fullname="totalParticipants()",
		label="Node Type: EXPRESSION

EXPRESSION:
count = participants.length

IRs:
REF_19 -> LENGTH participants
count(uint256) := REF_19(uint256)",
		node_expression="count = participants.length",
		node_info_vulnerabilities=None,
		node_irs="REF_19 -> LENGTH participants
count(uint256) := REF_19(uint256)",
		node_source_code_lines="[149]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	504 -> 505	[key=0,
		edge_type=next,
		label=Next];
	506	[contract_name=Rubixi,
		function_fullname="totalParticipants()",
		label="rubixi.sol_Rubixi_totalParticipants()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[148, 149, 150]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	506 -> 504	[key=0,
		edge_type=next,
		label=Next];
	507	[contract_name=Rubixi,
		function_fullname="numberOfParticipantsWaitingForPayout()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[152, 153, 154]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	508	[contract_name=Rubixi,
		function_fullname="numberOfParticipantsWaitingForPayout()",
		label="Node Type: EXPRESSION

EXPRESSION:
count = participants.length - payoutOrder

IRs:
REF_20 -> LENGTH participants
TMP_44(uint256) = \
REF_20 - payoutOrder
count(uint256) := TMP_44(uint256)",
		node_expression="count = participants.length - payoutOrder",
		node_info_vulnerabilities=None,
		node_irs="REF_20 -> LENGTH participants
TMP_44(uint256) = REF_20 - payoutOrder
count(uint256) := TMP_44(uint256)",
		node_source_code_lines="[153]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	507 -> 508	[key=0,
		edge_type=next,
		label=Next];
	509	[contract_name=Rubixi,
		function_fullname="numberOfParticipantsWaitingForPayout()",
		label="rubixi.sol_Rubixi_numberOfParticipantsWaitingForPayout()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[152, 153, 154]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	509 -> 507	[key=0,
		edge_type=next,
		label=Next];
	510	[contract_name=Rubixi,
		function_fullname="participantDetails(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[156, 157, 158, 159, 160, 161]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	511	[contract_name=Rubixi,
		function_fullname="participantDetails(uint256)",
		label="Node Type: IF

EXPRESSION:
orderInPyramid <= participants.length

IRs:
REF_21 -> LENGTH participants
TMP_45(bool) = orderInPyramid <= \
REF_21
CONDITION TMP_45",
		node_expression="orderInPyramid <= participants.length",
		node_info_vulnerabilities=None,
		node_irs="REF_21 -> LENGTH participants
TMP_45(bool) = orderInPyramid <= REF_21
CONDITION TMP_45",
		node_source_code_lines="[157]",
		node_type=IF,
		source_file="rubixi.sol"];
	510 -> 511	[key=0,
		edge_type=next,
		label=Next];
	512	[contract_name=Rubixi,
		function_fullname="participantDetails(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Address = participants[orderInPyramid].etherAddress

IRs:
REF_22(Rubixi.Participant) -> participants[\
orderInPyramid]
REF_23(address) -> REF_22.etherAddress
Address(address) := REF_23(address)",
		node_expression="Address = participants[orderInPyramid].etherAddress",
		node_info_vulnerabilities=None,
		node_irs="REF_22(Rubixi.Participant) -> participants[orderInPyramid]
REF_23(address) -> REF_22.etherAddress
Address(address) := REF_23(address)",
		node_source_code_lines="[158]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	511 -> 512	[key=0,
		edge_type=if_true,
		label=True];
	514	[contract_name=Rubixi,
		function_fullname="participantDetails(uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[157, 158, 159, 160]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	511 -> 514	[key=0,
		edge_type=if_false,
		label=False];
	513	[contract_name=Rubixi,
		function_fullname="participantDetails(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
Payout = participants[orderInPyramid].payout / 1000000000000000000

IRs:
REF_24(Rubixi.Participant) \
-> participants[orderInPyramid]
REF_25(uint256) -> REF_24.payout
TMP_46(uint256) = REF_25 / 1000000000000000000
Payout(uint256) := \
TMP_46(uint256)",
		node_expression="Payout = participants[orderInPyramid].payout / 1000000000000000000",
		node_info_vulnerabilities=None,
		node_irs="REF_24(Rubixi.Participant) -> participants[orderInPyramid]
REF_25(uint256) -> REF_24.payout
TMP_46(uint256) = REF_25 / 1000000000000000000
\
Payout(uint256) := TMP_46(uint256)",
		node_source_code_lines="[159]",
		node_type=EXPRESSION,
		source_file="rubixi.sol"];
	512 -> 513	[key=0,
		edge_type=next,
		label=Next];
	513 -> 514	[key=0,
		edge_type=next,
		label=Next];
	515	[contract_name=Rubixi,
		function_fullname="participantDetails(uint256)",
		label="rubixi.sol_Rubixi_participantDetails(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[156, 157, 158, 159, 160, 161]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	515 -> 510	[key=0,
		edge_type=next,
		label=Next];
	516	[contract_name=Rubixi,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
balance = 0

IRs:
balance(uint256) := 0(uint256)",
		node_expression="balance = 0",
		node_info_vulnerabilities=None,
		node_irs="balance(uint256) := 0(uint256)",
		node_source_code_lines="[13]",
		node_type=OTHER_ENTRYPOINT,
		source_file="rubixi.sol"];
	517	[contract_name=Rubixi,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
collectedFees = 0

IRs:
collectedFees(uint256) := 0(uint256)",
		node_expression="collectedFees = 0",
		node_info_vulnerabilities=None,
		node_irs="collectedFees(uint256) := 0(uint256)",
		node_source_code_lines="[14]",
		node_type=OTHER_ENTRYPOINT,
		source_file="rubixi.sol"];
	516 -> 517	[key=0,
		edge_type=next,
		label=Next];
	518	[contract_name=Rubixi,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
feePercent = 10

IRs:
feePercent(uint256) := 10(uint256)",
		node_expression="feePercent = 10",
		node_info_vulnerabilities=None,
		node_irs="feePercent(uint256) := 10(uint256)",
		node_source_code_lines="[15]",
		node_type=OTHER_ENTRYPOINT,
		source_file="rubixi.sol"];
	517 -> 518	[key=0,
		edge_type=next,
		label=Next];
	519	[contract_name=Rubixi,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
pyramidMultiplier = 300

IRs:
pyramidMultiplier(uint256) := 300(uint256)",
		node_expression="pyramidMultiplier = 300",
		node_info_vulnerabilities=None,
		node_irs="pyramidMultiplier(uint256) := 300(uint256)",
		node_source_code_lines="[16]",
		node_type=OTHER_ENTRYPOINT,
		source_file="rubixi.sol"];
	518 -> 519	[key=0,
		edge_type=next,
		label=Next];
	520	[contract_name=Rubixi,
		function_fullname="slitherConstructorVariables()",
		label="Node Type: OTHER_ENTRYPOINT

EXPRESSION:
payoutOrder = 0

IRs:
payoutOrder(uint256) := 0(uint256)",
		node_expression="payoutOrder = 0",
		node_info_vulnerabilities=None,
		node_irs="payoutOrder(uint256) := 0(uint256)",
		node_source_code_lines="[17]",
		node_type=OTHER_ENTRYPOINT,
		source_file="rubixi.sol"];
	519 -> 520	[key=0,
		edge_type=next,
		label=Next];
	521	[contract_name=Rubixi,
		function_fullname="slitherConstructorVariables()",
		label="rubixi.sol_Rubixi_slitherConstructorVariables()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [23, 24], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, \
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, \
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, \
105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, \
131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, \
157, 158, 159, 160, 161, 162]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	521 -> 516	[key=0,
		edge_type=next,
		label=Next];
	522	[contract_name=Rubixi,
		function_fullname="onlyowner()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29]",
		node_type=ENTRY_POINT,
		source_file="rubixi.sol"];
	523	[contract_name=Rubixi,
		function_fullname="onlyowner()",
		label="Node Type: IF

EXPRESSION:
msg.sender == creator

IRs:
TMP_47(bool) = msg.sender == creator
CONDITION TMP_47",
		node_expression="msg.sender == creator",
		node_info_vulnerabilities=None,
		node_irs="TMP_47(bool) = msg.sender == creator
CONDITION TMP_47",
		node_source_code_lines="[28]",
		node_type=IF,
		source_file="rubixi.sol"];
	522 -> 523	[key=0,
		edge_type=next,
		label=Next];
	524	[contract_name=Rubixi,
		function_fullname="onlyowner()",
		label="Node Type: _
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28]",
		node_type=_,
		source_file="rubixi.sol"];
	523 -> 524	[key=0,
		edge_type=if_true,
		label=True];
	525	[contract_name=Rubixi,
		function_fullname="onlyowner()",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28]",
		node_type=END_IF,
		source_file="rubixi.sol"];
	523 -> 525	[key=0,
		edge_type=if_false,
		label=False];
	524 -> 525	[key=0,
		edge_type=next,
		label=Next];
	526	[contract_name=Rubixi,
		function_fullname="onlyowner()",
		label="rubixi.sol_Rubixi_onlyowner()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[27, 28, 29]",
		node_type=FUNCTION_NAME,
		source_file="rubixi.sol"];
	526 -> 522	[key=0,
		edge_type=next,
		label=Next];
	527	[contract_name=Wallet,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="arbitrary_location_write_simple.sol"];
	528	[contract_name=Wallet,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
bonusCodes = new uint256[](0)

IRs:
TMP_1 = new uint256[](0)
bonusCodes(uint256[]) := TMP_1(uint256)",
		node_expression="bonusCodes = new uint256[](0)",
		node_info_vulnerabilities=None,
		node_irs="TMP_1 = new uint256[](0)
bonusCodes(uint256[]) := TMP_1(uint256)",
		node_source_code_lines="[14]",
		node_type=EXPRESSION,
		source_file="arbitrary_location_write_simple.sol"];
	527 -> 528	[key=0,
		edge_type=next,
		label=Next];
	529	[contract_name=Wallet,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[15]",
		node_type=EXPRESSION,
		source_file="arbitrary_location_write_simple.sol"];
	528 -> 529	[key=0,
		edge_type=next,
		label=Next];
	530	[contract_name=Wallet,
		function_fullname="constructor()",
		label="arbitrary_location_write_simple.sol_Wallet_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[13, 14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="arbitrary_location_write_simple.sol"];
	530 -> 527	[key=0,
		edge_type=next,
		label=Next];
	531	[contract_name=Wallet,
		function_fullname="fallback()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18, 19]",
		node_type=ENTRY_POINT,
		source_file="arbitrary_location_write_simple.sol"];
	532	[contract_name=Wallet,
		function_fullname="fallback()",
		label="arbitrary_location_write_simple.sol_Wallet_fallback()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[18, 19]",
		node_type=FUNCTION_NAME,
		source_file="arbitrary_location_write_simple.sol"];
	532 -> 531	[key=0,
		edge_type=next,
		label=Next];
	533	[contract_name=Wallet,
		function_fullname="PushBonusCode(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[21, 22, 23]",
		node_type=ENTRY_POINT,
		source_file="arbitrary_location_write_simple.sol"];
	534	[contract_name=Wallet,
		function_fullname="PushBonusCode(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
bonusCodes.push(c)

IRs:
REF_1 -> LENGTH bonusCodes
TMP_3(uint256) := REF_1(uint256)
TMP_4(uint256) = \
TMP_3 + 1
REF_1 (->bonusCodes) := TMP_4(uint256)
REF_2(uint256) -> bonusCodes[TMP_3]
REF_2 (->bonusCodes) := c(uint256)",
		node_expression="bonusCodes.push(c)",
		node_info_vulnerabilities=None,
		node_irs="REF_1 -> LENGTH bonusCodes
TMP_3(uint256) := REF_1(uint256)
TMP_4(uint256) = TMP_3 + 1
REF_1 (->bonusCodes) := TMP_4(uint256)
REF_\
2(uint256) -> bonusCodes[TMP_3]
REF_2 (->bonusCodes) := c(uint256)",
		node_source_code_lines="[22]",
		node_type=EXPRESSION,
		source_file="arbitrary_location_write_simple.sol"];
	533 -> 534	[key=0,
		edge_type=next,
		label=Next];
	535	[contract_name=Wallet,
		function_fullname="PushBonusCode(uint256)",
		label="arbitrary_location_write_simple.sol_Wallet_PushBonusCode(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[21, 22, 23]",
		node_type=FUNCTION_NAME,
		source_file="arbitrary_location_write_simple.sol"];
	535 -> 533	[key=0,
		edge_type=next,
		label=Next];
	536	[contract_name=Wallet,
		function_fullname="PopBonusCode()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [27], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[25, 26, 27, 28]",
		node_type=ENTRY_POINT,
		source_file="arbitrary_location_write_simple.sol"];
	537	[contract_name=Wallet,
		function_fullname="PopBonusCode()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(0 <= bonusCodes.length)

IRs:
REF_3 -> LENGTH bonusCodes
TMP_5(bool) = 0 <= REF_\
3
TMP_6(None) = SOLIDITY_CALL require(bool)(TMP_5)",
		node_expression="require(bool)(0 <= bonusCodes.length)",
		node_info_vulnerabilities=None,
		node_irs="REF_3 -> LENGTH bonusCodes
TMP_5(bool) = 0 <= REF_3
TMP_6(None) = SOLIDITY_CALL require(bool)(TMP_5)",
		node_source_code_lines="[26]",
		node_type=EXPRESSION,
		source_file="arbitrary_location_write_simple.sol"];
	536 -> 537	[key=0,
		edge_type=next,
		label=Next];
	538	[contract_name=Wallet,
		function_fullname="PopBonusCode()",
		label="Node Type: EXPRESSION

EXPRESSION:
bonusCodes.length --

IRs:
REF_4 -> LENGTH bonusCodes
TMP_7(uint256) := REF_4(uint256)
REF_4(\
-> bonusCodes) = REF_4 - 1",
		node_expression="bonusCodes.length --",
		node_info_vulnerabilities="[{'lines': [27], 'category': 'access_control'}]",
		node_irs="REF_4 -> LENGTH bonusCodes
TMP_7(uint256) := REF_4(uint256)
REF_4(-> bonusCodes) = REF_4 - 1",
		node_source_code_lines="[27]",
		node_type=EXPRESSION,
		source_file="arbitrary_location_write_simple.sol"];
	537 -> 538	[key=0,
		edge_type=next,
		label=Next];
	539	[contract_name=Wallet,
		function_fullname="PopBonusCode()",
		label="arbitrary_location_write_simple.sol_Wallet_PopBonusCode()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [27], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[25, 26, 27, 28]",
		node_type=FUNCTION_NAME,
		source_file="arbitrary_location_write_simple.sol"];
	539 -> 536	[key=0,
		edge_type=next,
		label=Next];
	540	[contract_name=Wallet,
		function_fullname="UpdateBonusCodeAt(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=ENTRY_POINT,
		source_file="arbitrary_location_write_simple.sol"];
	541	[contract_name=Wallet,
		function_fullname="UpdateBonusCodeAt(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(idx < bonusCodes.length)

IRs:
REF_5 -> LENGTH bonusCodes
TMP_8(bool) = idx < REF_\
5
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)",
		node_expression="require(bool)(idx < bonusCodes.length)",
		node_info_vulnerabilities=None,
		node_irs="REF_5 -> LENGTH bonusCodes
TMP_8(bool) = idx < REF_5
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="arbitrary_location_write_simple.sol"];
	540 -> 541	[key=0,
		edge_type=next,
		label=Next];
	542	[contract_name=Wallet,
		function_fullname="UpdateBonusCodeAt(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
bonusCodes[idx] = c

IRs:
REF_6(uint256) -> bonusCodes[idx]
REF_6 (->bonusCodes) := c(uint256)",
		node_expression="bonusCodes[idx] = c",
		node_info_vulnerabilities=None,
		node_irs="REF_6(uint256) -> bonusCodes[idx]
REF_6 (->bonusCodes) := c(uint256)",
		node_source_code_lines="[32]",
		node_type=EXPRESSION,
		source_file="arbitrary_location_write_simple.sol"];
	541 -> 542	[key=0,
		edge_type=next,
		label=Next];
	543	[contract_name=Wallet,
		function_fullname="UpdateBonusCodeAt(uint256,uint256)",
		label="arbitrary_location_write_simple.sol_Wallet_UpdateBonusCodeAt(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[30, 31, 32, 33]",
		node_type=FUNCTION_NAME,
		source_file="arbitrary_location_write_simple.sol"];
	543 -> 540	[key=0,
		edge_type=next,
		label=Next];
	544	[contract_name=Wallet,
		function_fullname="Destroy()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=ENTRY_POINT,
		source_file="arbitrary_location_write_simple.sol"];
	545	[contract_name=Wallet,
		function_fullname="Destroy()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_10(bool) = msg.sender == owner
TMP_11(None) = SOLIDITY_\
CALL require(bool)(TMP_10)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_10(bool) = msg.sender == owner
TMP_11(None) = SOLIDITY_CALL require(bool)(TMP_10)",
		node_source_code_lines="[36]",
		node_type=EXPRESSION,
		source_file="arbitrary_location_write_simple.sol"];
	544 -> 545	[key=0,
		edge_type=next,
		label=Next];
	546	[contract_name=Wallet,
		function_fullname="Destroy()",
		label="Node Type: EXPRESSION

EXPRESSION:
selfdestruct(address)(msg.sender)

IRs:
TMP_12(None) = SOLIDITY_CALL selfdestruct(address)(msg.sender)",
		node_expression="selfdestruct(address)(msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="TMP_12(None) = SOLIDITY_CALL selfdestruct(address)(msg.sender)",
		node_source_code_lines="[37]",
		node_type=EXPRESSION,
		source_file="arbitrary_location_write_simple.sol"];
	545 -> 546	[key=0,
		edge_type=next,
		label=Next];
	547	[contract_name=Wallet,
		function_fullname="Destroy()",
		label="arbitrary_location_write_simple.sol_Wallet_Destroy()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[35, 36, 37, 38]",
		node_type=FUNCTION_NAME,
		source_file="arbitrary_location_write_simple.sol"];
	547 -> 544	[key=0,
		edge_type=next,
		label=Next];
	548	[contract_name=MyContract,
		function_fullname="MyContract()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14, 15, 16]",
		node_type=ENTRY_POINT,
		source_file="mycontract.sol"];
	549	[contract_name=MyContract,
		function_fullname="MyContract()",
		label="Node Type: EXPRESSION

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)",
		node_expression="owner = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="owner(address) := msg.sender(address)",
		node_source_code_lines="[15]",
		node_type=EXPRESSION,
		source_file="mycontract.sol"];
	548 -> 549	[key=0,
		edge_type=next,
		label=Next];
	550	[contract_name=MyContract,
		function_fullname="MyContract()",
		label="mycontract.sol_MyContract_MyContract()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[14, 15, 16]",
		node_type=FUNCTION_NAME,
		source_file="mycontract.sol"];
	550 -> 548	[key=0,
		edge_type=next,
		label=Next];
	551	[contract_name=MyContract,
		function_fullname="sendTo(address,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[18, 19, 20, 21, 22]",
		node_type=ENTRY_POINT,
		source_file="mycontract.sol"];
	552	[contract_name=MyContract,
		function_fullname="sendTo(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(tx.origin == owner)

IRs:
TMP_0(bool) = tx.origin == owner
TMP_1(None) = SOLIDITY_\
CALL require(bool)(TMP_0)",
		node_expression="require(bool)(tx.origin == owner)",
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs="TMP_0(bool) = tx.origin == owner
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="mycontract.sol"];
	551 -> 552	[key=0,
		edge_type=next,
		label=Next];
	553	[contract_name=MyContract,
		function_fullname="sendTo(address,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
receiver.transfer(amount)

IRs:
Transfer dest:receiver value:amount",
		node_expression="receiver.transfer(amount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:receiver value:amount",
		node_source_code_lines="[21]",
		node_type=EXPRESSION,
		source_file="mycontract.sol"];
	552 -> 553	[key=0,
		edge_type=next,
		label=Next];
	554	[contract_name=MyContract,
		function_fullname="sendTo(address,uint256)",
		label="mycontract.sol_MyContract_sendTo(address,uint256)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[18, 19, 20, 21, 22]",
		node_type=FUNCTION_NAME,
		source_file="mycontract.sol"];
	554 -> 551	[key=0,
		edge_type=next,
		label=Next];
	555	[contract_name=Wallet,
		function_fullname="constructor()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19, 20, 21]",
		node_type=ENTRY_POINT,
		source_file="wallet_02_refund_nosub.sol"];
	556	[contract_name=Wallet,
		function_fullname="constructor()",
		label="Node Type: EXPRESSION

EXPRESSION:
creator = msg.sender

IRs:
creator(address) := msg.sender(address)",
		node_expression="creator = msg.sender",
		node_info_vulnerabilities=None,
		node_irs="creator(address) := msg.sender(address)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="wallet_02_refund_nosub.sol"];
	555 -> 556	[key=0,
		edge_type=next,
		label=Next];
	557	[contract_name=Wallet,
		function_fullname="constructor()",
		label="wallet_02_refund_nosub.sol_Wallet_constructor()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[19, 20, 21]",
		node_type=FUNCTION_NAME,
		source_file="wallet_02_refund_nosub.sol"];
	557 -> 555	[key=0,
		edge_type=next,
		label=Next];
	558	[contract_name=Wallet,
		function_fullname="deposit()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=ENTRY_POINT,
		source_file="wallet_02_refund_nosub.sol"];
	559	[contract_name=Wallet,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
assert(bool)(balances[msg.sender] + msg.value > balances[msg.sender])

IRs:
REF_0(uint256) -> \
balances[msg.sender]
TMP_0(uint256) = REF_0 + msg.value
REF_1(uint256) -> balances[msg.sender]
TMP_1(bool) = TMP_0 > REF_1
TMP_2(\
None) = SOLIDITY_CALL assert(bool)(TMP_1)",
		node_expression="assert(bool)(balances[msg.sender] + msg.value > balances[msg.sender])",
		node_info_vulnerabilities=None,
		node_irs="REF_0(uint256) -> balances[msg.sender]
TMP_0(uint256) = REF_0 + msg.value
REF_1(uint256) -> balances[msg.sender]
TMP_1(bool) = TMP_\
0 > REF_1
TMP_2(None) = SOLIDITY_CALL assert(bool)(TMP_1)",
		node_source_code_lines="[24]",
		node_type=EXPRESSION,
		source_file="wallet_02_refund_nosub.sol"];
	558 -> 559	[key=0,
		edge_type=next,
		label=Next];
	560	[contract_name=Wallet,
		function_fullname="deposit()",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] += msg.value

IRs:
REF_2(uint256) -> balances[msg.sender]
REF_2(-> balances) = \
REF_2 + msg.value",
		node_expression="balances[msg.sender] += msg.value",
		node_info_vulnerabilities=None,
		node_irs="REF_2(uint256) -> balances[msg.sender]
REF_2(-> balances) = REF_2 + msg.value",
		node_source_code_lines="[25]",
		node_type=EXPRESSION,
		source_file="wallet_02_refund_nosub.sol"];
	559 -> 560	[key=0,
		edge_type=next,
		label=Next];
	561	[contract_name=Wallet,
		function_fullname="deposit()",
		label="wallet_02_refund_nosub.sol_Wallet_deposit()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25, 26]",
		node_type=FUNCTION_NAME,
		source_file="wallet_02_refund_nosub.sol"];
	561 -> 558	[key=0,
		edge_type=next,
		label=Next];
	562	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31, 32]",
		node_type=ENTRY_POINT,
		source_file="wallet_02_refund_nosub.sol"];
	563	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(amount <= balances[msg.sender])

IRs:
REF_3(uint256) -> balances[msg.sender]
TMP_\
3(bool) = amount <= REF_3
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_expression="require(bool)(amount <= balances[msg.sender])",
		node_info_vulnerabilities=None,
		node_irs="REF_3(uint256) -> balances[msg.sender]
TMP_3(bool) = amount <= REF_3
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)",
		node_source_code_lines="[29]",
		node_type=EXPRESSION,
		source_file="wallet_02_refund_nosub.sol"];
	562 -> 563	[key=0,
		edge_type=next,
		label=Next];
	564	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(amount)

IRs:
Transfer dest:msg.sender value:amount",
		node_expression="msg.sender.transfer(amount)",
		node_info_vulnerabilities=None,
		node_irs="Transfer dest:msg.sender value:amount",
		node_source_code_lines="[30]",
		node_type=EXPRESSION,
		source_file="wallet_02_refund_nosub.sol"];
	563 -> 564	[key=0,
		edge_type=next,
		label=Next];
	565	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
balances[msg.sender] -= amount

IRs:
REF_5(uint256) -> balances[msg.sender]
REF_5(-> balances) = \
REF_5 - amount",
		node_expression="balances[msg.sender] -= amount",
		node_info_vulnerabilities=None,
		node_irs="REF_5(uint256) -> balances[msg.sender]
REF_5(-> balances) = REF_5 - amount",
		node_source_code_lines="[31]",
		node_type=EXPRESSION,
		source_file="wallet_02_refund_nosub.sol"];
	564 -> 565	[key=0,
		edge_type=next,
		label=Next];
	566	[contract_name=Wallet,
		function_fullname="withdraw(uint256)",
		label="wallet_02_refund_nosub.sol_Wallet_withdraw(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[28, 29, 30, 31, 32]",
		node_type=FUNCTION_NAME,
		source_file="wallet_02_refund_nosub.sol"];
	566 -> 562	[key=0,
		edge_type=next,
		label=Next];
	567	[contract_name=Wallet,
		function_fullname="refund()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [36], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[34, 35, 36, 37]",
		node_type=ENTRY_POINT,
		source_file="wallet_02_refund_nosub.sol"];
	568	[contract_name=Wallet,
		function_fullname="refund()",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(balances[msg.sender])

IRs:
REF_7(uint256) -> balances[msg.sender]
Transfer \
dest:msg.sender value:REF_7",
		node_expression="msg.sender.transfer(balances[msg.sender])",
		node_info_vulnerabilities="[{'lines': [36], 'category': 'access_control'}]",
		node_irs="REF_7(uint256) -> balances[msg.sender]
Transfer dest:msg.sender value:REF_7",
		node_source_code_lines="[36]",
		node_type=EXPRESSION,
		source_file="wallet_02_refund_nosub.sol"];
	567 -> 568	[key=0,
		edge_type=next,
		label=Next];
	569	[contract_name=Wallet,
		function_fullname="refund()",
		label="wallet_02_refund_nosub.sol_Wallet_refund()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [36], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[34, 35, 36, 37]",
		node_type=FUNCTION_NAME,
		source_file="wallet_02_refund_nosub.sol"];
	569 -> 567	[key=0,
		edge_type=next,
		label=Next];
	570	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=ENTRY_POINT,
		source_file="wallet_02_refund_nosub.sol"];
	571	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(creator == msg.sender)

IRs:
TMP_7(bool) = creator == msg.sender
TMP_8(None) = \
SOLIDITY_CALL require(bool)(TMP_7)",
		node_expression="require(bool)(creator == msg.sender)",
		node_info_vulnerabilities=None,
		node_irs="TMP_7(bool) = creator == msg.sender
TMP_8(None) = SOLIDITY_CALL require(bool)(TMP_7)",
		node_source_code_lines="[42]",
		node_type=EXPRESSION,
		source_file="wallet_02_refund_nosub.sol"];
	570 -> 571	[key=0,
		edge_type=next,
		label=Next];
	572	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="Node Type: EXPRESSION

EXPRESSION:
to.transfer(this.balance)

IRs:
REF_9 -> BALANCE this
Transfer dest:to value:REF_9",
		node_expression="to.transfer(this.balance)",
		node_info_vulnerabilities=None,
		node_irs="REF_9 -> BALANCE this
Transfer dest:to value:REF_9",
		node_source_code_lines="[43]",
		node_type=EXPRESSION,
		source_file="wallet_02_refund_nosub.sol"];
	571 -> 572	[key=0,
		edge_type=next,
		label=Next];
	573	[contract_name=Wallet,
		function_fullname="migrateTo(address)",
		label="wallet_02_refund_nosub.sol_Wallet_migrateTo(address)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[41, 42, 43, 44]",
		node_type=FUNCTION_NAME,
		source_file="wallet_02_refund_nosub.sol"];
	573 -> 570	[key=0,
		edge_type=next,
		label=Next];
	574	[contract_name=SimpleSuicide,
		function_fullname="sudicideAnyone()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [12, 13], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[12, 13, 14]",
		node_type=ENTRY_POINT,
		source_file="simple_suicide.sol"];
	575	[contract_name=SimpleSuicide,
		function_fullname="sudicideAnyone()",
		label="Node Type: EXPRESSION

EXPRESSION:
selfdestruct(address)(msg.sender)

IRs:
TMP_0(None) = SOLIDITY_CALL selfdestruct(address)(msg.sender)",
		node_expression="selfdestruct(address)(msg.sender)",
		node_info_vulnerabilities="[{'lines': [12, 13], 'category': 'access_control'}]",
		node_irs="TMP_0(None) = SOLIDITY_CALL selfdestruct(address)(msg.sender)",
		node_source_code_lines="[13]",
		node_type=EXPRESSION,
		source_file="simple_suicide.sol"];
	574 -> 575	[key=0,
		edge_type=next,
		label=Next];
	576	[contract_name=SimpleSuicide,
		function_fullname="sudicideAnyone()",
		label="simple_suicide.sol_SimpleSuicide_sudicideAnyone()",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [12, 13], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[12, 13, 14]",
		node_type=FUNCTION_NAME,
		source_file="simple_suicide.sol"];
	576 -> 574	[key=0,
		edge_type=next,
		label=Next];
	577	[contract_name=Map,
		function_fullname="set(uint256,uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[15, 16, 17, 18, 19, 20, 21]",
		node_type=ENTRY_POINT,
		source_file="mapping_write.sol"];
	578	[contract_name=Map,
		function_fullname="set(uint256,uint256)",
		label="Node Type: IF

EXPRESSION:
map.length <= key

IRs:
REF_0 -> LENGTH map
TMP_0(bool) = REF_0 <= key
CONDITION TMP_0",
		node_expression="map.length <= key",
		node_info_vulnerabilities=None,
		node_irs="REF_0 -> LENGTH map
TMP_0(bool) = REF_0 <= key
CONDITION TMP_0",
		node_source_code_lines="[16]",
		node_type=IF,
		source_file="mapping_write.sol"];
	577 -> 578	[key=0,
		edge_type=next,
		label=Next];
	579	[contract_name=Map,
		function_fullname="set(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
map.length = key + 1

IRs:
REF_1 -> LENGTH map
TMP_1(uint256) = key + 1
REF_1 (->map) := TMP_\
1(uint256)",
		node_expression="map.length = key + 1",
		node_info_vulnerabilities=None,
		node_irs="REF_1 -> LENGTH map
TMP_1(uint256) = key + 1
REF_1 (->map) := TMP_1(uint256)",
		node_source_code_lines="[17]",
		node_type=EXPRESSION,
		source_file="mapping_write.sol"];
	578 -> 579	[key=0,
		edge_type=if_true,
		label=True];
	580	[contract_name=Map,
		function_fullname="set(uint256,uint256)",
		label="Node Type: END_IF
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[16, 17, 18]",
		node_type=END_IF,
		source_file="mapping_write.sol"];
	578 -> 580	[key=0,
		edge_type=if_false,
		label=False];
	579 -> 580	[key=0,
		edge_type=next,
		label=Next];
	581	[contract_name=Map,
		function_fullname="set(uint256,uint256)",
		label="Node Type: EXPRESSION

EXPRESSION:
map[key] = value

IRs:
REF_2(uint256) -> map[key]
REF_2 (->map) := value(uint256)",
		node_expression="map[key] = value",
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs="REF_2(uint256) -> map[key]
REF_2 (->map) := value(uint256)",
		node_source_code_lines="[20]",
		node_type=EXPRESSION,
		source_file="mapping_write.sol"];
	580 -> 581	[key=0,
		edge_type=next,
		label=Next];
	582	[contract_name=Map,
		function_fullname="set(uint256,uint256)",
		label="mapping_write.sol_Map_set(uint256,uint256)",
		node_expression=None,
		node_info_vulnerabilities="[{'lines': [20], 'category': 'access_control'}]",
		node_irs=None,
		node_source_code_lines="[15, 16, 17, 18, 19, 20, 21]",
		node_type=FUNCTION_NAME,
		source_file="mapping_write.sol"];
	582 -> 577	[key=0,
		edge_type=next,
		label=Next];
	583	[contract_name=Map,
		function_fullname="get(uint256)",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25]",
		node_type=ENTRY_POINT,
		source_file="mapping_write.sol"];
	584	[contract_name=Map,
		function_fullname="get(uint256)",
		label="Node Type: RETURN

EXPRESSION:
map[key]

IRs:
REF_3(uint256) -> map[key]
RETURN REF_3",
		node_expression="map[key]",
		node_info_vulnerabilities=None,
		node_irs="REF_3(uint256) -> map[key]
RETURN REF_3",
		node_source_code_lines="[24]",
		node_type=RETURN,
		source_file="mapping_write.sol"];
	583 -> 584	[key=0,
		edge_type=next,
		label=Next];
	585	[contract_name=Map,
		function_fullname="get(uint256)",
		label="mapping_write.sol_Map_get(uint256)",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[23, 24, 25]",
		node_type=FUNCTION_NAME,
		source_file="mapping_write.sol"];
	585 -> 583	[key=0,
		edge_type=next,
		label=Next];
	586	[contract_name=Map,
		function_fullname="withdraw()",
		label="Node Type: ENTRY_POINT
",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[26, 27, 28, 29]",
		node_type=ENTRY_POINT,
		source_file="mapping_write.sol"];
	587	[contract_name=Map,
		function_fullname="withdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_2(bool) = msg.sender == owner
TMP_3(None) = SOLIDITY_\
CALL require(bool)(TMP_2)",
		node_expression="require(bool)(msg.sender == owner)",
		node_info_vulnerabilities=None,
		node_irs="TMP_2(bool) = msg.sender == owner
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)",
		node_source_code_lines="[27]",
		node_type=EXPRESSION,
		source_file="mapping_write.sol"];
	586 -> 587	[key=0,
		edge_type=next,
		label=Next];
	588	[contract_name=Map,
		function_fullname="withdraw()",
		label="Node Type: EXPRESSION

EXPRESSION:
msg.sender.transfer(address(this).balance)

IRs:
TMP_4 = CONVERT this to address
REF_5 -> BALANCE \
TMP_4
Transfer dest:msg.sender value:REF_5",
		node_expression="msg.sender.transfer(address(this).balance)",
		node_info_vulnerabilities=None,
		node_irs="TMP_4 = CONVERT this to address
REF_5 -> BALANCE TMP_4
Transfer dest:msg.sender value:REF_5",
		node_source_code_lines="[28]",
		node_type=EXPRESSION,
		source_file="mapping_write.sol"];
	587 -> 588	[key=0,
		edge_type=next,
		label=Next];
	589	[contract_name=Map,
		function_fullname="withdraw()",
		label="mapping_write.sol_Map_withdraw()",
		node_expression=None,
		node_info_vulnerabilities=None,
		node_irs=None,
		node_source_code_lines="[26, 27, 28, 29]",
		node_type=FUNCTION_NAME,
		source_file="mapping_write.sol"];
	589 -> 586	[key=0,
		edge_type=next,
		label=Next];
}
