digraph  {
13 [label="2_ address[] creditorAddresses;\n13-new_variable-3-3", method="", type_label=new_variable];
18 [label="3_ bool win = false;\n18-new_variable-4-4", method="", type_label=new_variable];
24 [label="4_ function emptyCreditors() public {\n        if(creditorAddresses.length>1500) {\n            creditorAddresses = new address[](0);\n            win = true;\n        }\n    }\n24-function_definition-5-10", method="emptyCreditors()", type_label=function_definition];
28 [label="5_ if_creditorAddresses.length>1500\n28-if-6-9", method="emptyCreditors()", type_label=if];
131 [label="5_ end_if", method="emptyCreditors()", type_label=end_if];
35 [label="6_ creditorAddresses = new address[](0);\n35-expression_statement-7-7", method="emptyCreditors()", type_label=expression_statement];
45 [label="7_ win = true;\n45-expression_statement-8-8", method="emptyCreditors()", type_label=expression_statement];
50 [label="10_ function addCreditors() public returns (bool) {\n        for(uint i=0;i<350;i++) {\n          creditorAddresses.push(msg.sender);\n        }\n        return true;\n    }\n50-function_definition-11-16", method="addCreditors()", type_label=function_definition];
58 [label="11_ for(i<350;;i++)\n58-for-12-14", method="addCreditors()", type_label=for];
161 [label="11_ end_loop", method="addCreditors()", type_label=end_loop];
69 [label="11_ i++\n69-expression_statement-12-12", method="addCreditors()", type_label=expression_statement];
72 [label="12_ creditorAddresses.push(msg.sender);\n72-expression_statement-13-13", method="addCreditors()", type_label=expression_statement];
81 [label="14_ return true;\n81-return-15-15", method="addCreditors()", type_label=return];
84 [label="16_ function iWin() public view returns (bool) {\n        return win;\n    }\n84-function_definition-17-19", method="iWin()", type_label=function_definition];
93 [label="17_ return win;\n93-return-18-18", method="iWin()", type_label=return];
95 [label="19_ function numberCreditors() public view returns (uint) {\n        return creditorAddresses.length;\n    }\n95-function_definition-20-22", method="numberCreditors()", type_label=function_definition];
104 [label="20_ return creditorAddresses.length;\n104-return-21-21", method="numberCreditors()", type_label=return];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
13 -> 18  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
24 -> 28  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
28 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
28 -> 131  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
131 -> 50  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
35 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 131  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
50 -> 58  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
58 -> 72  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
58 -> 161  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
161 -> 81  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
69 -> 58  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
72 -> 69  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
81 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
84 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
95 -> 104  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
104 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
