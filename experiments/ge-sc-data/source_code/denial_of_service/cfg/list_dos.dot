digraph  {
13 [label="2_ uint32 public lastCreditorPayedOut;\n13-new_variable-3-3", method="", type_label=new_variable];
18 [label="3_ uint public lastTimeOfNewCredit;\n18-new_variable-4-4", method="", type_label=new_variable];
23 [label="4_ uint public profitFromCrash;\n23-new_variable-5-5", method="", type_label=new_variable];
28 [label="5_ address[] public creditorAddresses;\n28-new_variable-6-6", method="", type_label=new_variable];
34 [label="6_ uint[] public creditorAmounts;\n34-new_variable-7-7", method="", type_label=new_variable];
40 [label="7_ address public corruptElite;\n40-new_variable-8-8", method="", type_label=new_variable];
45 [label="8_ mapping (address => uint) buddies;\n45-new_variable-9-9", method="", type_label=new_variable];
51 [label="9_ uint constant TWELVE_HOURS = 43200;\n51-new_variable-10-10", method="", type_label=new_variable];
56 [label="10_ uint8 public round;\n56-new_variable-11-11", method="", type_label=new_variable];
61 [label="11_ function Government() {\n         profitFromCrash = msg.value;\n         corruptElite = msg.sender;\n         lastTimeOfNewCredit = block.timestamp;\n     }\n61-function_definition-12-16", method="Government()", type_label=function_definition];
64 [label="12_ profitFromCrash = msg.value;\n64-expression_statement-13-13", method="Government()", type_label=expression_statement];
70 [label="13_ corruptElite = msg.sender;\n70-expression_statement-14-14", method="Government()", type_label=expression_statement];
76 [label="14_ lastTimeOfNewCredit = block.timestamp;\n76-expression_statement-15-15", method="Government()", type_label=expression_statement];
82 [label="16_ function lendGovernmentMoney(address buddy) returns (bool) {\n         uint amount = msg.value;\n         if (lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp) {\n             msg.sender.send(amount);\n             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);\n             corruptElite.send(this.balance);\n             lastCreditorPayedOut = 0;\n             lastTimeOfNewCredit = block.timestamp;\n             profitFromCrash = 0;\n             creditorAddresses = new address[](0);\n             creditorAmounts = new uint[](0);\n             round += 1;\n             return false;\n         }\n         else {\n             if (amount >= 10 ** 18) {\n                 lastTimeOfNewCredit = block.timestamp;\n                 creditorAddresses.push(msg.sender);\n                 creditorAmounts.push(amount * 110 / 100);\n                 corruptElite.send(amount * 5/100);\n                 if (profitFromCrash < 10000 * 10**18) {\n                     profitFromCrash += amount * 5/100;\n                 }\n                 if(buddies[buddy] >= amount) {\n                     buddy.send(amount * 5/100);\n                 }\n                 buddies[msg.sender] += amount * 110 / 100;\n                 if (creditorAmounts[lastCreditorPayedOut] <= address(this).balance - profitFromCrash) {\n                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);\n                     buddies[creditorAddresses[lastCreditorPayedOut]] -= creditorAmounts[lastCreditorPayedOut];\n                     lastCreditorPayedOut += 1;\n                 }\n                 return true;\n             }\n             else {\n                 msg.sender.send(amount);\n                 return false;\n             }\n         }\n     }\n82-function_definition-17-56", method="lendGovernmentMoney(address buddy)", type_label=function_definition];
93 [label="17_ uint amount = msg.value;\n93-new_variable-18-18", method="lendGovernmentMoney(address buddy)", type_label=new_variable];
101 [label="18_ if_lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp\n101-if-19-55", method="lendGovernmentMoney(address buddy)", type_label=if];
536 [label="18_ end_if", method="lendGovernmentMoney(address buddy)", type_label=end_if];
110 [label="19_ msg.sender.send(amount);\n110-expression_statement-20-20", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
119 [label="20_ creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);\n119-expression_statement-21-21", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
132 [label="21_ corruptElite.send(this.balance);\n132-expression_statement-22-22", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
141 [label="22_ lastCreditorPayedOut = 0;\n141-expression_statement-23-23", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
145 [label="23_ lastTimeOfNewCredit = block.timestamp;\n145-expression_statement-24-24", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
151 [label="24_ profitFromCrash = 0;\n151-expression_statement-25-25", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
155 [label="25_ creditorAddresses = new address[](0);\n155-expression_statement-26-26", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
165 [label="26_ creditorAmounts = new uint[](0);\n165-expression_statement-27-27", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
175 [label="27_ round += 1;\n175-expression_statement-28-28", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
179 [label="28_ return false;\n179-return-29-29", method="lendGovernmentMoney(address buddy)", type_label=return];
183 [label="31_ if_amount >= 10 ** 18\n183-if-32-54", method="lendGovernmentMoney(address buddy)", type_label=if];
618 [label="31_ end_if", method="lendGovernmentMoney(address buddy)", type_label=end_if];
190 [label="32_ lastTimeOfNewCredit = block.timestamp;\n190-expression_statement-33-33", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
196 [label="33_ creditorAddresses.push(msg.sender);\n196-expression_statement-34-34", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
205 [label="34_ creditorAmounts.push(amount * 110 / 100);\n205-expression_statement-35-35", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
216 [label="35_ corruptElite.send(amount * 5/100);\n216-expression_statement-36-36", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
227 [label="36_ if_profitFromCrash < 10000 * 10**18\n227-if-37-39", method="lendGovernmentMoney(address buddy)", type_label=if];
662 [label="36_ end_if", method="lendGovernmentMoney(address buddy)", type_label=end_if];
236 [label="37_ profitFromCrash += amount * 5/100;\n236-expression_statement-38-38", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
244 [label="39_ if_buddies[buddy] >= amount\n244-if-40-42", method="lendGovernmentMoney(address buddy)", type_label=if];
679 [label="39_ end_if", method="lendGovernmentMoney(address buddy)", type_label=end_if];
251 [label="40_ buddy.send(amount * 5/100);\n251-expression_statement-41-41", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
262 [label="42_ buddies[msg.sender] += amount * 110 / 100;\n262-expression_statement-43-43", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
274 [label="43_ if_creditorAmounts[lastCreditorPayedOut] <= address(this).balance - profitFromCrash\n274-if-44-48", method="lendGovernmentMoney(address buddy)", type_label=if];
709 [label="43_ end_if", method="lendGovernmentMoney(address buddy)", type_label=end_if];
287 [label="44_ creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);\n287-expression_statement-45-45", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
298 [label="45_ buddies[creditorAddresses[lastCreditorPayedOut]] -= creditorAmounts[lastCreditorPayedOut];\n298-expression_statement-46-46", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
308 [label="46_ lastCreditorPayedOut += 1;\n308-expression_statement-47-47", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
312 [label="48_ return true;\n312-return-49-49", method="lendGovernmentMoney(address buddy)", type_label=return];
316 [label="51_ msg.sender.send(amount);\n316-expression_statement-52-52", method="lendGovernmentMoney(address buddy)", type_label=expression_statement];
325 [label="52_ return false;\n325-return-53-53", method="lendGovernmentMoney(address buddy)", type_label=return];
330 [label="57_ lendGovernmentMoney(0);\n330-expression_statement-58-58", method="", type_label=expression_statement];
335 [label="59_ function totalDebt() returns (uint debt) {\n         for(uint i=lastCreditorPayedOut; i<creditorAmounts.length; i++){\n             debt += creditorAmounts[i];\n         }\n     }\n335-function_definition-60-64", method="totalDebt()", type_label=function_definition];
343 [label="60_ for(i<creditorAmounts.length;;i++)\n343-for-61-63", method="totalDebt()", type_label=for];
778 [label="60_ end_loop", method="totalDebt()", type_label=end_loop];
356 [label="60_ i++\n356-expression_statement-61-61", method="totalDebt()", type_label=expression_statement];
359 [label="61_ debt += creditorAmounts[i];\n359-expression_statement-62-62", method="totalDebt()", type_label=expression_statement];
365 [label="64_ function totalPayedOut() returns (uint payout) {\n         for(uint i=0; i<lastCreditorPayedOut; i++){\n             payout += creditorAmounts[i];\n         }\n     }\n365-function_definition-65-69", method="totalPayedOut()", type_label=function_definition];
373 [label="65_ for(i<lastCreditorPayedOut;;i++)\n373-for-66-68", method="totalPayedOut()", type_label=for];
808 [label="65_ end_loop", method="totalPayedOut()", type_label=end_loop];
384 [label="65_ i++\n384-expression_statement-66-66", method="totalPayedOut()", type_label=expression_statement];
387 [label="66_ payout += creditorAmounts[i];\n387-expression_statement-67-67", method="totalPayedOut()", type_label=expression_statement];
393 [label="69_ function investInTheSystem() {\n         profitFromCrash += msg.value;\n     }\n393-function_definition-70-72", method="investInTheSystem()", type_label=function_definition];
396 [label="70_ profitFromCrash += msg.value;\n396-expression_statement-71-71", method="investInTheSystem()", type_label=expression_statement];
402 [label="72_ function inheritToNextGeneration(address nextGeneration) {\n         if (msg.sender == corruptElite) {\n             corruptElite = nextGeneration;\n         }\n     }\n402-function_definition-73-77", method="inheritToNextGeneration(address nextGeneration)", type_label=function_definition];
409 [label="73_ if_msg.sender == corruptElite\n409-if-74-76", method="inheritToNextGeneration(address nextGeneration)", type_label=if];
844 [label="73_ end_if", method="inheritToNextGeneration(address nextGeneration)", type_label=end_if];
416 [label="74_ corruptElite = nextGeneration;\n416-expression_statement-75-75", method="inheritToNextGeneration(address nextGeneration)", type_label=expression_statement];
420 [label="77_ function getCreditorAddresses() returns (address[]) {\n         return creditorAddresses;\n     }\n420-function_definition-78-80", method="getCreditorAddresses()", type_label=function_definition];
428 [label="78_ return creditorAddresses;\n428-return-79-79", method="getCreditorAddresses()", type_label=return];
430 [label="80_ function getCreditorAmounts() returns (uint[]) {\n         return creditorAmounts;\n     }\n430-function_definition-81-83", method="getCreditorAmounts()", type_label=function_definition];
438 [label="81_ return creditorAmounts;\n438-return-82-82", method="getCreditorAmounts()", type_label=return];
1 [label="0_ start_node", method="", type_label=start];
2 [label="0_ exit_node", method="", type_label=exit];
328;
13 -> 18  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
18 -> 23  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
23 -> 28  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
28 -> 34  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
34 -> 40  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
40 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
45 -> 51  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
51 -> 56  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
61 -> 64  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
64 -> 70  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
70 -> 76  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
82 -> 93  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
93 -> 101  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
101 -> 110  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
101 -> 183  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
536 -> 328  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
110 -> 119  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
119 -> 132  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
132 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
141 -> 145  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
145 -> 151  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
151 -> 155  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
155 -> 165  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
165 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
175 -> 179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
179 -> 536  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
179 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
183 -> 536  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
183 -> 190  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
183 -> 316  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
618 -> 328  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
190 -> 196  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
196 -> 205  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
205 -> 216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
216 -> 227  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
227 -> 236  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
227 -> 662  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
662 -> 244  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
236 -> 662  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
244 -> 251  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
244 -> 679  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
679 -> 262  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
251 -> 679  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
262 -> 274  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
274 -> 287  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
274 -> 709  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
709 -> 312  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
287 -> 298  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
298 -> 308  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
308 -> 709  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
312 -> 618  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
312 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
316 -> 325  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
325 -> 618  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
325 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
335 -> 343  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
343 -> 359  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
343 -> 778  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
778 -> 365  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
356 -> 343  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
359 -> 356  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
365 -> 373  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
373 -> 387  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
373 -> 808  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
808 -> 393  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
384 -> 373  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
387 -> 384  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
393 -> 396  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
402 -> 409  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
409 -> 416  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
409 -> 844  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
844 -> 420  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
416 -> 844  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
420 -> 428  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
428 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
430 -> 438  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
438 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
}
